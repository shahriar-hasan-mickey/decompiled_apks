record `kotlin.sequences.SequencesKt___SequencesKt$s` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$s.a` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$s.b` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$s.c` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$s.d` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$s.e` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlin.sequences.SequencesKt___SequencesKt$s.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$s` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0d6368.  v0.`kotlin.sequences.SequencesKt___SequencesKt$s.e` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L0d636c.  v0.`kotlin.sequences.SequencesKt___SequencesKt$s.f` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L0d6370.  v1:= 2I;
  #L0d6372.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d6378.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt___SequencesKt$s` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0d6340.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$s`;
  #L0d6344.  v1:= v3.`kotlin.sequences.SequencesKt___SequencesKt$s.e` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d6348.  v2:= v3.`kotlin.sequences.SequencesKt___SequencesKt$s.f` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L0d634c.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d6352.  v0.`kotlin.sequences.SequencesKt___SequencesKt$s.d` @type ^`java.lang.Object` := v4 @kind object;
  #L0d6356.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$s` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d6218.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L0d621c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L0d6220.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d6226.  v1:= temp @kind object;
  #L0d6228.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$s` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0d623c.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0d6242.  v1:= temp @kind object;
  #L0d6244.  v1:= (`kotlin.sequences.SequencesKt___SequencesKt$s`) v1 @kind object;
  #L0d6248.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d624c.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0d6252.  v1:= temp @kind object;
  #L0d6254.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt___SequencesKt$s` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0d6268.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0d626e.  v0:= temp @kind object;
  #L0d6270.  v1:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.c` @type ^`int`;
  #L0d6274.  v2:= 1I;
  #L0d6276.  if v1 == 0 then goto L0d62ac;
  #L0d627a.  if v1 != v2 then goto L0d629c;
  #L0d627e.  v1:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.b` @type ^`java.lang.Object` @kind object;
  #L0d6282.  v3:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.a` @type ^`java.lang.Object` @kind object;
  #L0d6286.  v3:= (`java.util.Iterator`) v3 @kind object;
  #L0d628a.  v4:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.d` @type ^`java.lang.Object` @kind object;
  #L0d628e.  v4:= (`kotlin.sequences.SequenceScope`) v4 @kind object;
  #L0d6292.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d6298.  v8:= v1 @kind object;
  #L0d629a.  goto L0d62e6;
  #L0d629c.  v8:= new `java.lang.IllegalStateException`;
  #L0d62a0.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0d62a4.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0d62aa.  throw v8;
  #L0d62ac.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d62b2.  v8:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.d` @type ^`java.lang.Object` @kind object;
  #L0d62b6.  v8:= (`kotlin.sequences.SequenceScope`) v8 @kind object;
  #L0d62ba.  v1:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.e` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d62be.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d62c4.  v1:= temp @kind object;
  #L0d62c6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d62cc.  v3:= temp;
  #L0d62ce.  if v3 != 0 then goto L0d62d8;
  #L0d62d2.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d62d6.  return v8 @kind object;
  #L0d62d8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d62de.  v3:= temp @kind object;
  #L0d62e0.  v4:= v8 @kind object;
  #L0d62e2.  v8:= v3 @kind object;
  #L0d62e4.  v3:= v1 @kind object;
  #L0d62e6.  v1:= v7 @kind object;
  #L0d62e8.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d62ee.  v5:= temp;
  #L0d62f0.  if v5 == 0 then goto L0d632a;
  #L0d62f4.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d62fa.  v5:= temp @kind object;
  #L0d62fc.  v6:= v1.`kotlin.sequences.SequencesKt___SequencesKt$s.f` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L0d6300.  call temp:= `invoke`(v6, v8, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0d6306.  v8:= temp @kind object;
  #L0d6308.  v1.`kotlin.sequences.SequencesKt___SequencesKt$s.d` @type ^`java.lang.Object` := v4 @kind object;
  #L0d630c.  v1.`kotlin.sequences.SequencesKt___SequencesKt$s.a` @type ^`java.lang.Object` := v3 @kind object;
  #L0d6310.  v1.`kotlin.sequences.SequencesKt___SequencesKt$s.b` @type ^`java.lang.Object` := v5 @kind object;
  #L0d6314.  v1.`kotlin.sequences.SequencesKt___SequencesKt$s.c` @type ^`int` := v2;
  #L0d6318.  call temp:= `yield`(v4, v8, v1) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d631e.  v8:= temp @kind object;
  #L0d6320.  if v8 != v0 then goto L0d6326;
  #L0d6324.  return v0 @kind object;
  #L0d6326.  v8:= v5 @kind object;
  #L0d6328.  goto L0d62e8;
  #L0d632a.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d632e.  return v8 @kind object;
}
