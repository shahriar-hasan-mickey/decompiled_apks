record `kotlin.sequences.SequencesKt___SequencesKt$m` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$m.a` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$m.b` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$m.c` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$m.d` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$m.e` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$m.f` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlin.sequences.SequencesKt___SequencesKt$m.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$m` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$m;.<init>:(Ljava/lang/Object;Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0d5b58.  v0.`kotlin.sequences.SequencesKt___SequencesKt$m.e` @type ^`java.lang.Object` := v1 @kind object;
  #L0d5b5c.  v0.`kotlin.sequences.SequencesKt___SequencesKt$m.f` @type ^`kotlin.sequences.Sequence` := v2 @kind object;
  #L0d5b60.  v0.`kotlin.sequences.SequencesKt___SequencesKt$m.g` @type ^`kotlin.jvm.functions.Function2` := v3 @kind object;
  #L0d5b64.  v1:= 2I;
  #L0d5b66.  call `<init>`(v0, v1, v4) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d5b6c.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt___SequencesKt$m` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$m;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0d5b2c.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$m`;
  #L0d5b30.  v1:= v4.`kotlin.sequences.SequencesKt___SequencesKt$m.e` @type ^`java.lang.Object` @kind object;
  #L0d5b34.  v2:= v4.`kotlin.sequences.SequencesKt___SequencesKt$m.f` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d5b38.  v3:= v4.`kotlin.sequences.SequencesKt___SequencesKt$m.g` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L0d5b3c.  call `<init>`(v0, v1, v2, v3, v6) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$m;.<init>:(Ljava/lang/Object;Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d5b42.  v0.`kotlin.sequences.SequencesKt___SequencesKt$m.d` @type ^`java.lang.Object` := v5 @kind object;
  #L0d5b46.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$m` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$m;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d59ec.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L0d59f0.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L0d59f4.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$m;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d59fa.  v1:= temp @kind object;
  #L0d59fc.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$m` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$m;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0d5a10.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$m;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0d5a16.  v1:= temp @kind object;
  #L0d5a18.  v1:= (`kotlin.sequences.SequencesKt___SequencesKt$m`) v1 @kind object;
  #L0d5a1c.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d5a20.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$m;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0d5a26.  v1:= temp @kind object;
  #L0d5a28.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt___SequencesKt$m` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$m;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0d5a3c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0d5a42.  v0:= temp @kind object;
  #L0d5a44.  v1:= v7.`kotlin.sequences.SequencesKt___SequencesKt$m.c` @type ^`int`;
  #L0d5a48.  v2:= 2I;
  #L0d5a4a.  v3:= 1I;
  #L0d5a4c.  if v1 == 0 then goto L0d5a96;
  #L0d5a50.  if v1 == v3 then goto L0d5a86;
  #L0d5a54.  if v1 != v2 then goto L0d5a76;
  #L0d5a58.  v1:= v7.`kotlin.sequences.SequencesKt___SequencesKt$m.b` @type ^`java.lang.Object` @kind object;
  #L0d5a5c.  v1:= (`java.util.Iterator`) v1 @kind object;
  #L0d5a60.  v3:= v7.`kotlin.sequences.SequencesKt___SequencesKt$m.a` @type ^`java.lang.Object` @kind object;
  #L0d5a64.  v4:= v7.`kotlin.sequences.SequencesKt___SequencesKt$m.d` @type ^`java.lang.Object` @kind object;
  #L0d5a68.  v4:= (`kotlin.sequences.SequenceScope`) v4 @kind object;
  #L0d5a6c.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d5a72.  v8:= v3 @kind object;
  #L0d5a74.  goto L0d5ad4;
  #L0d5a76.  v8:= new `java.lang.IllegalStateException`;
  #L0d5a7a.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0d5a7e.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0d5a84.  throw v8;
  #L0d5a86.  v1:= v7.`kotlin.sequences.SequencesKt___SequencesKt$m.d` @type ^`java.lang.Object` @kind object;
  #L0d5a8a.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L0d5a8e.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d5a94.  goto L0d5ac0;
  #L0d5a96.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d5a9c.  v8:= v7.`kotlin.sequences.SequencesKt___SequencesKt$m.d` @type ^`java.lang.Object` @kind object;
  #L0d5aa0.  v1:= v8 @kind object;
  #L0d5aa2.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L0d5aa6.  v8:= v7.`kotlin.sequences.SequencesKt___SequencesKt$m.e` @type ^`java.lang.Object` @kind object;
  #L0d5aaa.  v7.`kotlin.sequences.SequencesKt___SequencesKt$m.d` @type ^`java.lang.Object` := v1 @kind object;
  #L0d5aae.  v7.`kotlin.sequences.SequencesKt___SequencesKt$m.c` @type ^`int` := v3;
  #L0d5ab2.  call temp:= `yield`(v1, v8, v7) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d5ab8.  v8:= temp @kind object;
  #L0d5aba.  if v8 != v0 then goto L0d5ac0;
  #L0d5abe.  return v0 @kind object;
  #L0d5ac0.  v8:= v7.`kotlin.sequences.SequencesKt___SequencesKt$m.e` @type ^`java.lang.Object` @kind object;
  #L0d5ac4.  v3:= v7.`kotlin.sequences.SequencesKt___SequencesKt$m.f` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d5ac8.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d5ace.  v3:= temp @kind object;
  #L0d5ad0.  v4:= v1 @kind object;
  #L0d5ad2.  v1:= v3 @kind object;
  #L0d5ad4.  v3:= v7 @kind object;
  #L0d5ad6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d5adc.  v5:= temp;
  #L0d5ade.  if v5 == 0 then goto L0d5b14;
  #L0d5ae2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d5ae8.  v5:= temp @kind object;
  #L0d5aea.  v6:= v3.`kotlin.sequences.SequencesKt___SequencesKt$m.g` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L0d5aee.  call temp:= `invoke`(v6, v8, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0d5af4.  v8:= temp @kind object;
  #L0d5af6.  v3.`kotlin.sequences.SequencesKt___SequencesKt$m.d` @type ^`java.lang.Object` := v4 @kind object;
  #L0d5afa.  v3.`kotlin.sequences.SequencesKt___SequencesKt$m.a` @type ^`java.lang.Object` := v8 @kind object;
  #L0d5afe.  v3.`kotlin.sequences.SequencesKt___SequencesKt$m.b` @type ^`java.lang.Object` := v1 @kind object;
  #L0d5b02.  v3.`kotlin.sequences.SequencesKt___SequencesKt$m.c` @type ^`int` := v2;
  #L0d5b06.  call temp:= `yield`(v4, v8, v3) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d5b0c.  v5:= temp @kind object;
  #L0d5b0e.  if v5 != v0 then goto L0d5ad6;
  #L0d5b12.  return v0 @kind object;
  #L0d5b14.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d5b18.  return v8 @kind object;
}
