record `kotlin.sequences.SequencesKt` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.SequencesKt___SequencesKt` @kind class {
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt` v0 @kind this) @signature `Lkotlin/sequences/SequencesKt;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0d9b40.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.<init>:()V` @kind direct;
  #L0d9b46.  return @kind void;
}
procedure `java.lang.Iterable` `asIterable`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.asIterable:(Lkotlin/sequences/Sequence;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d98f4.  call temp:= `asIterable`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.asIterable:(Lkotlin/sequences/Sequence;)Ljava/lang/Iterable;` @kind static;
  #L0d98fa.  v0:= temp @kind object;
  #L0d98fc.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`java.util.Iterator` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.asSequence:(Ljava/util/Iterator;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d99d4.  call temp:= `asSequence`(v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.asSequence:(Ljava/util/Iterator;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d99da.  v0:= temp @kind object;
  #L0d99dc.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `constrainOnce`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.constrainOnce:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d99f0.  call temp:= `constrainOnce`(v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.constrainOnce:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d99f6.  v0:= temp @kind object;
  #L0d99f8.  return v0 @kind object;
}
procedure `int` `count`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.count:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d98d8.  call temp:= `count`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.count:(Lkotlin/sequences/Sequence;)I` @kind static;
  #L0d98de.  v0:= temp;
  #L0d98e0.  return v0;
}
procedure `kotlin.sequences.Sequence` `drop`(`kotlin.sequences.Sequence` v0 @kind object, `int` v1 ) @signature `Lkotlin/sequences/SequencesKt;.drop:(Lkotlin/sequences/Sequence;I)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9a0c.  call temp:= `drop`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.drop:(Lkotlin/sequences/Sequence;I)Lkotlin/sequences/Sequence;` @kind static;
  #L0d9a12.  v0:= temp @kind object;
  #L0d9a14.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `emptySequence`() @signature `Lkotlin/sequences/SequencesKt;.emptySequence:()Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L0d9a28.  call temp:= `emptySequence`() @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.emptySequence:()Lkotlin/sequences/Sequence;` @kind static;
  #L0d9a2e.  v0:= temp @kind object;
  #L0d9a30.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `filter`(`kotlin.sequences.Sequence` v0 @kind object, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt;.filter:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9a44.  call temp:= `filter`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filter:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d9a4a.  v0:= temp @kind object;
  #L0d9a4c.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `filterNotNull`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.filterNotNull:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9a60.  call temp:= `filterNotNull`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNotNull:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d9a66.  v0:= temp @kind object;
  #L0d9a68.  return v0 @kind object;
}
procedure `java.lang.Object` `firstOrNull`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.firstOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9910.  call temp:= `firstOrNull`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.firstOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Object;` @kind static;
  #L0d9916.  v0:= temp @kind object;
  #L0d9918.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `generateSequence`(`java.lang.Object` v0 @kind object, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt;.generateSequence:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9a7c.  call temp:= `generateSequence`(v0, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.generateSequence:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d9a82.  v0:= temp @kind object;
  #L0d9a84.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `generateSequence`(`kotlin.jvm.functions.Function0` v0 @kind object, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt;.generateSequence:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9a98.  call temp:= `generateSequence`(v0, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.generateSequence:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d9a9e.  v0:= temp @kind object;
  #L0d9aa0.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`kotlin.jvm.functions.Function2` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.iterator:(Lkotlin/jvm/functions/Function2;)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9980.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt;.iterator:(Lkotlin/jvm/functions/Function2;)Ljava/util/Iterator;` @kind static;
  #L0d9986.  v0:= temp @kind object;
  #L0d9988.  return v0 @kind object;
}
procedure `java.lang.String` `joinToString$default`(`kotlin.sequences.Sequence` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `java.lang.CharSequence` v3 @kind object, `int` v4 , `java.lang.CharSequence` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object, `int` v7 , `java.lang.Object` v8 @kind object) @signature `Lkotlin/sequences/SequencesKt;.joinToString$default:(Lkotlin/sequences/Sequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9948.  call temp:= `joinToString$default`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.joinToString$default:(Lkotlin/sequences/Sequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0d994e.  v0:= temp @kind object;
  #L0d9950.  return v0 @kind object;
}
procedure `java.lang.Object` `last`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.last:(Lkotlin/sequences/Sequence;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d992c.  call temp:= `last`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.last:(Lkotlin/sequences/Sequence;)Ljava/lang/Object;` @kind static;
  #L0d9932.  v0:= temp @kind object;
  #L0d9934.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `map`(`kotlin.sequences.Sequence` v0 @kind object, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt;.map:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9ab4.  call temp:= `map`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.map:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d9aba.  v0:= temp @kind object;
  #L0d9abc.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `mapNotNull`(`kotlin.sequences.Sequence` v0 @kind object, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt;.mapNotNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9ad0.  call temp:= `mapNotNull`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.mapNotNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d9ad6.  v0:= temp @kind object;
  #L0d9ad8.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `sequence`(`kotlin.jvm.functions.Function2` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9aec.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d9af2.  v0:= temp @kind object;
  #L0d9af4.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `sortedWith`(`kotlin.sequences.Sequence` v0 @kind object, `java.util.Comparator` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt;.sortedWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9b08.  call temp:= `sortedWith`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sortedWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d9b0e.  v0:= temp @kind object;
  #L0d9b10.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `takeWhile`(`kotlin.sequences.Sequence` v0 @kind object, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt;.takeWhile:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9b24.  call temp:= `takeWhile`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.takeWhile:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d9b2a.  v0:= temp @kind object;
  #L0d9b2c.  return v0 @kind object;
}
procedure `java.util.HashSet` `toHashSet`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.toHashSet:(Lkotlin/sequences/Sequence;)Ljava/util/HashSet;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d9964.  call temp:= `toHashSet`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toHashSet:(Lkotlin/sequences/Sequence;)Ljava/util/HashSet;` @kind static;
  #L0d996a.  v0:= temp @kind object;
  #L0d996c.  return v0 @kind object;
}
procedure `java.util.List` `toList`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.toList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d999c.  call temp:= `toList`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @kind static;
  #L0d99a2.  v0:= temp @kind object;
  #L0d99a4.  return v0 @kind object;
}
procedure `java.util.List` `toMutableList`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt;.toMutableList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0d99b8.  call temp:= `toMutableList`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toMutableList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @kind static;
  #L0d99be.  v0:= temp @kind object;
  #L0d99c0.  return v0 @kind object;
}
