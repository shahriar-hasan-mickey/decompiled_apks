record `kotlin.sequences.SequencesKt__SequencesKt$b` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `kotlin.sequences.SequencesKt__SequencesKt$b` `@@kotlin.sequences.SequencesKt__SequencesKt$b.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/sequences/SequencesKt__SequencesKt$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0d442c.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$b`;
  #L0d4430.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$b;.<init>:()V` @kind direct;
  #L0d4436.  `@@kotlin.sequences.SequencesKt__SequencesKt$b.a` @type ^`kotlin.sequences.SequencesKt__SequencesKt$b` := v0 @kind object;
  #L0d443a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesKt$b` v1 @kind this) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L0d444c.  v0:= 1I;
  #L0d444e.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L0d4454.  return @kind void;
}
procedure `java.util.Iterator` `a`(`kotlin.sequences.SequencesKt__SequencesKt$b` v1 @kind this, `kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$b;.a:(Lkotlin/sequences/Sequence;)Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0d4408.  v0:= "it" @kind object;
  #L0d440c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4412.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d4418.  v2:= temp @kind object;
  #L0d441a.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$b;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d43e8.  v1:= (`kotlin.sequences.Sequence`) v1 @kind object;
  #L0d43ec.  call temp:= `a`(v0, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$b;.a:(Lkotlin/sequences/Sequence;)Ljava/util/Iterator;` @kind virtual;
  #L0d43f2.  v1:= temp @kind object;
  #L0d43f4.  return v1 @kind object;
}
