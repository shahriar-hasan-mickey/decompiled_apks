record `kotlin.sequences.SequencesKt__SequencesKt$g` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlin.sequences.SequencesKt__SequencesKt$g.a` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt__SequencesKt$g.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt__SequencesKt$g.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function0` `kotlin.sequences.SequencesKt__SequencesKt$g.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesKt$g` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0d46d8.  v0.`kotlin.sequences.SequencesKt__SequencesKt$g.c` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L0d46dc.  v0.`kotlin.sequences.SequencesKt__SequencesKt$g.d` @type ^`kotlin.jvm.functions.Function0` := v2 @kind object;
  #L0d46e0.  v1:= 2I;
  #L0d46e2.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d46e8.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt__SequencesKt$g` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0d46b0.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$g`;
  #L0d46b4.  v1:= v3.`kotlin.sequences.SequencesKt__SequencesKt$g.c` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d46b8.  v2:= v3.`kotlin.sequences.SequencesKt__SequencesKt$g.d` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L0d46bc.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d46c2.  v0.`kotlin.sequences.SequencesKt__SequencesKt$g.b` @type ^`java.lang.Object` := v4 @kind object;
  #L0d46c6.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$g` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d45b8.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L0d45bc.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L0d45c0.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d45c6.  v1:= temp @kind object;
  #L0d45c8.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$g` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0d45dc.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0d45e2.  v1:= temp @kind object;
  #L0d45e4.  v1:= (`kotlin.sequences.SequencesKt__SequencesKt$g`) v1 @kind object;
  #L0d45e8.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d45ec.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0d45f2.  v1:= temp @kind object;
  #L0d45f4.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt__SequencesKt$g` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0d4608.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0d460e.  v0:= temp @kind object;
  #L0d4610.  v1:= v5.`kotlin.sequences.SequencesKt__SequencesKt$g.a` @type ^`int`;
  #L0d4614.  v2:= 2I;
  #L0d4616.  v3:= 1I;
  #L0d4618.  if v1 == 0 then goto L0d463e;
  #L0d461c.  if v1 == v3 then goto L0d4636;
  #L0d4620.  if v1 != v2 then goto L0d4626;
  #L0d4624.  goto L0d4636;
  #L0d4626.  v6:= new `java.lang.IllegalStateException`;
  #L0d462a.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0d462e.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0d4634.  throw v6;
  #L0d4636.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d463c.  goto L0d4698;
  #L0d463e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d4644.  v6:= v5.`kotlin.sequences.SequencesKt__SequencesKt$g.b` @type ^`java.lang.Object` @kind object;
  #L0d4648.  v6:= (`kotlin.sequences.SequenceScope`) v6 @kind object;
  #L0d464c.  v1:= v5.`kotlin.sequences.SequencesKt__SequencesKt$g.c` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d4650.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d4656.  v1:= temp @kind object;
  #L0d4658.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d465e.  v4:= temp;
  #L0d4660.  if v4 == 0 then goto L0d4676;
  #L0d4664.  v5.`kotlin.sequences.SequencesKt__SequencesKt$g.a` @type ^`int` := v3;
  #L0d4668.  call temp:= `yieldAll`(v6, v1, v5) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Ljava/util/Iterator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d466e.  v6:= temp @kind object;
  #L0d4670.  if v6 != v0 then goto L0d4698;
  #L0d4674.  return v0 @kind object;
  #L0d4676.  v1:= v5.`kotlin.sequences.SequencesKt__SequencesKt$g.d` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L0d467a.  call temp:= `invoke`(v1) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0d4680.  v1:= temp @kind object;
  #L0d4682.  v1:= (`kotlin.sequences.Sequence`) v1 @kind object;
  #L0d4686.  v5.`kotlin.sequences.SequencesKt__SequencesKt$g.a` @type ^`int` := v2;
  #L0d468a.  call temp:= `yieldAll`(v6, v1, v5) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Lkotlin/sequences/Sequence;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d4690.  v6:= temp @kind object;
  #L0d4692.  if v6 != v0 then goto L0d4698;
  #L0d4696.  return v0 @kind object;
  #L0d4698.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d469c.  return v6 @kind object;
}
