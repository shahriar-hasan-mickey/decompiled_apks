record `kotlin.sequences.SequencesKt__SequencesKt` @kind class @AccessFlag  extends `kotlin.sequences.d` @kind class {
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesKt` v0 @kind this) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0d4ba8.  call `<init>`(v0) @signature `Lkotlin/sequences/d;.<init>:()V` @kind direct;
  #L0d4bae.  return @kind void;
}
procedure `kotlin.sequences.Sequence` `a`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.a:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0d499c.  v0:= instanceof @variable v2 @type ^`kotlin.sequences.TransformingSequence` @kind boolean;
  #L0d49a0.  if v0 == 0 then goto L0d49b2;
  #L0d49a4.  v2:= (`kotlin.sequences.TransformingSequence`) v2 @kind object;
  #L0d49a8.  call temp:= `flatten$kotlin_stdlib`(v2, v3) @signature `Lkotlin/sequences/TransformingSequence;.flatten$kotlin_stdlib:(Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind virtual;
  #L0d49ae.  v2:= temp @kind object;
  #L0d49b0.  return v2 @kind object;
  #L0d49b2.  v0:= new `kotlin.sequences.FlatteningSequence`;
  #L0d49b6.  v1:= `@@kotlin.sequences.SequencesKt__SequencesKt$d.a` @type ^`kotlin.sequences.SequencesKt__SequencesKt$d` @kind object;
  #L0d49ba.  call `<init>`(v0, v2, v1, v3) @signature `Lkotlin/sequences/FlatteningSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0d49c0.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`java.util.Iterator` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.asSequence:(Ljava/util/Iterator;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0d48dc.  v0:= "<this>" @kind object;
  #L0d48e0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d48e6.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1`;
  #L0d48ea.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L0d48f0.  call temp:= `constrainOnce`(v0) @signature `Lkotlin/sequences/SequencesKt;.constrainOnce:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d48f6.  v1:= temp @kind object;
  #L0d48f8.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `constrainOnce`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.constrainOnce:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0d490c.  v0:= "<this>" @kind object;
  #L0d4910.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4916.  v0:= instanceof @variable v1 @type ^`kotlin.sequences.ConstrainedOnceSequence` @kind boolean;
  #L0d491a.  if v0 == 0 then goto L0d4920;
  #L0d491e.  goto L0d492c;
  #L0d4920.  v0:= new `kotlin.sequences.ConstrainedOnceSequence`;
  #L0d4924.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/ConstrainedOnceSequence;.<init>:(Lkotlin/sequences/Sequence;)V` @kind direct;
  #L0d492a.  v1:= v0 @kind object;
  #L0d492c.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `emptySequence`() @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.emptySequence:()Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0d4940.  v0:= `@@kotlin.sequences.b.a` @type ^`kotlin.sequences.b` @kind object;
  #L0d4944.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `flatMapIndexed`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatMapIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0d4958.  v0:= "source" @kind object;
  #L0d495c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4962.  v0:= "transform" @kind object;
  #L0d4966.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d496c.  v0:= "iterator" @kind object;
  #L0d4970.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4976.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$a`;
  #L0d497a.  v1:= 0I;
  #L0d497c.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$a;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d4982.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d4988.  v2:= temp @kind object;
  #L0d498a.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `flatten`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatten:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0d49d4.  v0:= "<this>" @kind object;
  #L0d49d8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d49de.  v0:= `@@kotlin.sequences.SequencesKt__SequencesKt$b.a` @type ^`kotlin.sequences.SequencesKt__SequencesKt$b` @kind object;
  #L0d49e2.  call temp:= `a`(v1, v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.a:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d49e8.  v1:= temp @kind object;
  #L0d49ea.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `flattenSequenceOfIterable`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flattenSequenceOfIterable:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0d49fc.  v0:= "<this>" @kind object;
  #L0d4a00.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4a06.  v0:= `@@kotlin.sequences.SequencesKt__SequencesKt$c.a` @type ^`kotlin.sequences.SequencesKt__SequencesKt$c` @kind object;
  #L0d4a0a.  call temp:= `a`(v1, v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.a:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d4a10.  v1:= temp @kind object;
  #L0d4a12.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `generateSequence`(`java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.generateSequence:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0d4a24.  v0:= "nextFunction" @kind object;
  #L0d4a28.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4a2e.  if v2 != 0 then goto L0d4a38;
  #L0d4a32.  v2:= `@@kotlin.sequences.b.a` @type ^`kotlin.sequences.b` @kind object;
  #L0d4a36.  goto L0d4a4e;
  #L0d4a38.  v0:= new `kotlin.sequences.GeneratorSequence`;
  #L0d4a3c.  v1:= new `kotlin.sequences.SequencesKt__SequencesKt$f`;
  #L0d4a40.  call `<init>`(v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$f;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L0d4a46.  call `<init>`(v0, v1, v3) @signature `Lkotlin/sequences/GeneratorSequence;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0d4a4c.  v2:= v0 @kind object;
  #L0d4a4e.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `generateSequence`(`kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.generateSequence:(Lkotlin/jvm/functions/Function0;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0d4a60.  v0:= "nextFunction" @kind object;
  #L0d4a64.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4a6a.  v0:= new `kotlin.sequences.GeneratorSequence`;
  #L0d4a6e.  v1:= new `kotlin.sequences.SequencesKt__SequencesKt$e`;
  #L0d4a72.  call `<init>`(v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$e;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L0d4a78.  call `<init>`(v0, v2, v1) @signature `Lkotlin/sequences/GeneratorSequence;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0d4a7e.  call temp:= `constrainOnce`(v0) @signature `Lkotlin/sequences/SequencesKt;.constrainOnce:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d4a84.  v2:= temp @kind object;
  #L0d4a86.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `generateSequence`(`kotlin.jvm.functions.Function0` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.generateSequence:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0d4a98.  v0:= "seedFunction" @kind object;
  #L0d4a9c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4aa2.  v0:= "nextFunction" @kind object;
  #L0d4aa6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4aac.  v0:= new `kotlin.sequences.GeneratorSequence`;
  #L0d4ab0.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/GeneratorSequence;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0d4ab6.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `ifEmpty`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.ifEmpty:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function0;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0d4ac8.  v0:= "<this>" @kind object;
  #L0d4acc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4ad2.  v0:= "defaultValue" @kind object;
  #L0d4ad6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4adc.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$g`;
  #L0d4ae0.  v1:= 0I;
  #L0d4ae2.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d4ae8.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d4aee.  v2:= temp @kind object;
  #L0d4af0.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `sequenceOf`(`java.lang.Object`[] v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.sequenceOf:([Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0d4b04.  v0:= "elements" @kind object;
  #L0d4b08.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4b0e.  v0:= length @variable v1;
  #L0d4b10.  if v0 != 0 then goto L0d4b18;
  #L0d4b14.  v0:= 1I;
  #L0d4b16.  goto L0d4b1a;
  #L0d4b18.  v0:= 0I;
  #L0d4b1a.  if v0 == 0 then goto L0d4b28;
  #L0d4b1e.  call temp:= `emptySequence`() @signature `Lkotlin/sequences/SequencesKt;.emptySequence:()Lkotlin/sequences/Sequence;` @kind static;
  #L0d4b24.  v1:= temp @kind object;
  #L0d4b26.  goto L0d4b30;
  #L0d4b28.  call temp:= `asSequence`(v1) @signature `Lkotlin/collections/ArraysKt;.asSequence:([Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d4b2e.  v1:= temp @kind object;
  #L0d4b30.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `shuffled`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.shuffled:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0d4b44.  v0:= "<this>" @kind object;
  #L0d4b48.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4b4e.  v0:= `@@kotlin.random.Random.Default` @type ^`kotlin.random.Random$Default` @kind object;
  #L0d4b52.  call temp:= `shuffled`(v1, v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.shuffled:(Lkotlin/sequences/Sequence;Lkotlin/random/Random;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d4b58.  v1:= temp @kind object;
  #L0d4b5a.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `shuffled`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.random.Random` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.shuffled:(Lkotlin/sequences/Sequence;Lkotlin/random/Random;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0d4b6c.  v0:= "<this>" @kind object;
  #L0d4b70.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4b76.  v0:= "random" @kind object;
  #L0d4b7a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4b80.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$h`;
  #L0d4b84.  v1:= 0I;
  #L0d4b86.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$h;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/random/Random;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d4b8c.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d4b92.  v2:= temp @kind object;
  #L0d4b94.  return v2 @kind object;
}
procedure `kotlin.Pair` `unzip`(`kotlin.sequences.Sequence` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.unzip:(Lkotlin/sequences/Sequence;)Lkotlin/Pair;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0d4864.  v0:= "<this>" @kind object;
  #L0d4868.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d486e.  v0:= new `java.util.ArrayList`;
  #L0d4872.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0d4878.  v1:= new `java.util.ArrayList`;
  #L0d487c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0d4882.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d4888.  v4:= temp @kind object;
  #L0d488a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d4890.  v2:= temp;
  #L0d4892.  if v2 == 0 then goto L0d48c0;
  #L0d4896.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d489c.  v2:= temp @kind object;
  #L0d489e.  v2:= (`kotlin.Pair`) v2 @kind object;
  #L0d48a2.  call temp:= `getFirst`(v2) @signature `Lkotlin/Pair;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L0d48a8.  v3:= temp @kind object;
  #L0d48aa.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0d48b0.  call temp:= `getSecond`(v2) @signature `Lkotlin/Pair;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L0d48b6.  v2:= temp @kind object;
  #L0d48b8.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0d48be.  goto L0d488a;
  #L0d48c0.  call temp:= `to`(v0, v1) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L0d48c6.  v4:= temp @kind object;
  #L0d48c8.  return v4 @kind object;
}
