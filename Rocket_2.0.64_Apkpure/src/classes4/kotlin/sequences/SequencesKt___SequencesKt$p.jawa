record `kotlin.sequences.SequencesKt___SequencesKt$p` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$p.a` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$p.b` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$p.c` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$p.d` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$p.e` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$p.f` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlin.sequences.SequencesKt___SequencesKt$p.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$p` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0d6074.  v0.`kotlin.sequences.SequencesKt___SequencesKt$p.f` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L0d6078.  v0.`kotlin.sequences.SequencesKt___SequencesKt$p.g` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L0d607c.  v1:= 2I;
  #L0d607e.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d6084.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt___SequencesKt$p` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0d604c.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$p`;
  #L0d6050.  v1:= v3.`kotlin.sequences.SequencesKt___SequencesKt$p.f` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d6054.  v2:= v3.`kotlin.sequences.SequencesKt___SequencesKt$p.g` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L0d6058.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d605e.  v0.`kotlin.sequences.SequencesKt___SequencesKt$p.e` @type ^`java.lang.Object` := v4 @kind object;
  #L0d6062.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$p` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d5ec8.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L0d5ecc.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L0d5ed0.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d5ed6.  v1:= temp @kind object;
  #L0d5ed8.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$p` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0d5eec.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0d5ef2.  v1:= temp @kind object;
  #L0d5ef4.  v1:= (`kotlin.sequences.SequencesKt___SequencesKt$p`) v1 @kind object;
  #L0d5ef8.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d5efc.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0d5f02.  v1:= temp @kind object;
  #L0d5f04.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt___SequencesKt$p` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L0d5f18.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0d5f1e.  v0:= temp @kind object;
  #L0d5f20.  v1:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.d` @type ^`int`;
  #L0d5f24.  v2:= 2I;
  #L0d5f26.  v3:= 1I;
  #L0d5f28.  if v1 == 0 then goto L0d5f88;
  #L0d5f2c.  if v1 == v3 then goto L0d5f6c;
  #L0d5f30.  if v1 != v2 then goto L0d5f5c;
  #L0d5f34.  v1:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.c` @type ^`int`;
  #L0d5f38.  v3:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.b` @type ^`java.lang.Object` @kind object;
  #L0d5f3c.  v4:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.a` @type ^`java.lang.Object` @kind object;
  #L0d5f40.  v4:= (`java.util.Iterator`) v4 @kind object;
  #L0d5f44.  v5:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.e` @type ^`java.lang.Object` @kind object;
  #L0d5f48.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L0d5f4c.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d5f52.  v11:= v10 @kind object;
  #L0d5f54.  v9:= v3 @kind object;
  #L0d5f56.  v3:= v1;
  #L0d5f58.  v1:= v9 @kind object;
  #L0d5f5a.  goto L0d5fd8;
  #L0d5f5c.  v11:= new `java.lang.IllegalStateException`;
  #L0d5f60.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0d5f64.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0d5f6a.  throw v11;
  #L0d5f6c.  v1:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.b` @type ^`java.lang.Object` @kind object;
  #L0d5f70.  v4:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.a` @type ^`java.lang.Object` @kind object;
  #L0d5f74.  v4:= (`java.util.Iterator`) v4 @kind object;
  #L0d5f78.  v5:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.e` @type ^`java.lang.Object` @kind object;
  #L0d5f7c.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L0d5f80.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d5f86.  goto L0d5fd6;
  #L0d5f88.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d5f8e.  v11:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.e` @type ^`java.lang.Object` @kind object;
  #L0d5f92.  v5:= v11 @kind object;
  #L0d5f94.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L0d5f98.  v11:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.f` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d5f9c.  call temp:= `iterator`(v11) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d5fa2.  v4:= temp @kind object;
  #L0d5fa4.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d5faa.  v11:= temp;
  #L0d5fac.  if v11 == 0 then goto L0d6036;
  #L0d5fb0.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d5fb6.  v1:= temp @kind object;
  #L0d5fb8.  v10.`kotlin.sequences.SequencesKt___SequencesKt$p.e` @type ^`java.lang.Object` := v5 @kind object;
  #L0d5fbc.  v10.`kotlin.sequences.SequencesKt___SequencesKt$p.a` @type ^`java.lang.Object` := v4 @kind object;
  #L0d5fc0.  v10.`kotlin.sequences.SequencesKt___SequencesKt$p.b` @type ^`java.lang.Object` := v1 @kind object;
  #L0d5fc4.  v10.`kotlin.sequences.SequencesKt___SequencesKt$p.d` @type ^`int` := v3;
  #L0d5fc8.  call temp:= `yield`(v5, v1, v10) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d5fce.  v11:= temp @kind object;
  #L0d5fd0.  if v11 != v0 then goto L0d5fd6;
  #L0d5fd4.  return v0 @kind object;
  #L0d5fd6.  v11:= v10 @kind object;
  #L0d5fd8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d5fde.  v6:= temp;
  #L0d5fe0.  if v6 == 0 then goto L0d6036;
  #L0d5fe4.  v6:= v11.`kotlin.sequences.SequencesKt___SequencesKt$p.g` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L0d5fe8.  v7:= v3 + 1;
  #L0d5fec.  if v3 >= 0 then goto L0d5ff6;
  #L0d5ff0.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L0d5ff6.  call temp:= `boxInt`(v3) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L0d5ffc.  v3:= temp @kind object;
  #L0d5ffe.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d6004.  v8:= temp @kind object;
  #L0d6006.  call temp:= `invoke`(v6, v3, v1, v8) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0d600c.  v3:= temp @kind object;
  #L0d600e.  v11.`kotlin.sequences.SequencesKt___SequencesKt$p.e` @type ^`java.lang.Object` := v5 @kind object;
  #L0d6012.  v11.`kotlin.sequences.SequencesKt___SequencesKt$p.a` @type ^`java.lang.Object` := v4 @kind object;
  #L0d6016.  v11.`kotlin.sequences.SequencesKt___SequencesKt$p.b` @type ^`java.lang.Object` := v3 @kind object;
  #L0d601a.  v11.`kotlin.sequences.SequencesKt___SequencesKt$p.c` @type ^`int` := v7;
  #L0d601e.  v11.`kotlin.sequences.SequencesKt___SequencesKt$p.d` @type ^`int` := v2;
  #L0d6022.  call temp:= `yield`(v5, v3, v11) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d6028.  v1:= temp @kind object;
  #L0d602a.  if v1 != v0 then goto L0d6030;
  #L0d602e.  return v0 @kind object;
  #L0d6030.  v1:= v3 @kind object;
  #L0d6032.  v3:= v7;
  #L0d6034.  goto L0d5fd8;
  #L0d6036.  v11:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d603a.  return v11 @kind object;
}
