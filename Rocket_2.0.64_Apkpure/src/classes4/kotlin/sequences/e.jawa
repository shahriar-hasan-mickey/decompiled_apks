record `kotlin.sequences.e` @kind class @AccessFlag  extends `kotlin.sequences.SequencesKt__SequencesKt` @kind class {
}
procedure `void` `<init>`(`kotlin.sequences.e` v0 @kind this) @signature `Lkotlin/sequences/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0d4f98.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.<init>:()V` @kind direct;
  #L0d4f9e.  return @kind void;
}
procedure `kotlin.sequences.Sequence` `filterIsInstance`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lkotlin/sequences/e;.filterIsInstance:(Lkotlin/sequences/Sequence;Ljava/lang/Class;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0d4f54.  v0:= "<this>" @kind object;
  #L0d4f58.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4f5e.  v0:= "klass" @kind object;
  #L0d4f62.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4f68.  v0:= new `kotlin.sequences.e$a`;
  #L0d4f6c.  call `<init>`(v0, v2) @signature `Lkotlin/sequences/e$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L0d4f72.  call temp:= `filter`(v1, v0) @signature `Lkotlin/sequences/SequencesKt;.filter:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d4f78.  v1:= temp @kind object;
  #L0d4f7a.  v2:= "null cannot be cast to non-null type kotlin.sequences.Sequence<R of kotlin.sequences.SequencesKt___SequencesJvmKt.filterIsInstance>" @kind object;
  #L0d4f7e.  call `checkNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4f84.  return v1 @kind object;
}
procedure `java.util.Collection` `filterIsInstanceTo`(`kotlin.sequences.Sequence` v2 @kind object, `java.util.Collection` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lkotlin/sequences/e;.filterIsInstanceTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0d4e84.  v0:= "<this>" @kind object;
  #L0d4e88.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4e8e.  v0:= "destination" @kind object;
  #L0d4e92.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4e98.  v0:= "klass" @kind object;
  #L0d4e9c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4ea2.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d4ea8.  v2:= temp @kind object;
  #L0d4eaa.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d4eb0.  v0:= temp;
  #L0d4eb2.  if v0 == 0 then goto L0d4ed2;
  #L0d4eb6.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d4ebc.  v0:= temp @kind object;
  #L0d4ebe.  call temp:= `isInstance`(v4, v0) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L0d4ec4.  v1:= temp;
  #L0d4ec6.  if v1 == 0 then goto L0d4eaa;
  #L0d4eca.  call temp:= `add`(v3, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0d4ed0.  goto L0d4eaa;
  #L0d4ed2.  return v3 @kind object;
}
procedure `java.lang.Comparable` `max`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/e;.max:(Lkotlin/sequences/Sequence;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0d4c24.  v0:= "<this>" @kind object;
  #L0d4c28.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4c2e.  call temp:= `maxOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Comparable;` @kind static;
  #L0d4c34.  v1:= temp @kind object;
  #L0d4c36.  return v1 @kind object;
}
procedure `java.lang.Double` `max`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/e;.max:(Lkotlin/sequences/Sequence;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0d4c6c.  v0:= "<this>" @kind object;
  #L0d4c70.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4c76.  call temp:= `maxOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Double;` @kind static;
  #L0d4c7c.  v1:= temp @kind object;
  #L0d4c7e.  return v1 @kind object;
}
procedure `java.lang.Float` `max`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/e;.max:(Lkotlin/sequences/Sequence;)Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0d4cb4.  v0:= "<this>" @kind object;
  #L0d4cb8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4cbe.  call temp:= `maxOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Float;` @kind static;
  #L0d4cc4.  v1:= temp @kind object;
  #L0d4cc6.  return v1 @kind object;
}
procedure `java.lang.Object` `maxBy`(`kotlin.sequences.Sequence` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/sequences/e;.maxBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0d4cfc.  v0:= "<this>" @kind object;
  #L0d4d00.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4d06.  v0:= "selector" @kind object;
  #L0d4d0a.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4d10.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d4d16.  v5:= temp @kind object;
  #L0d4d18.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d4d1e.  v0:= temp;
  #L0d4d20.  if v0 != 0 then goto L0d4d28;
  #L0d4d24.  v5:= 0I;
  #L0d4d26.  goto L0d4d7e;
  #L0d4d28.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d4d2e.  v0:= temp @kind object;
  #L0d4d30.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d4d36.  v1:= temp;
  #L0d4d38.  if v1 != 0 then goto L0d4d40;
  #L0d4d3c.  v5:= v0 @kind object;
  #L0d4d3e.  goto L0d4d7e;
  #L0d4d40.  call temp:= `invoke`(v6, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0d4d46.  v1:= temp @kind object;
  #L0d4d48.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L0d4d4c.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d4d52.  v2:= temp @kind object;
  #L0d4d54.  call temp:= `invoke`(v6, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0d4d5a.  v3:= temp @kind object;
  #L0d4d5c.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L0d4d60.  call temp:= `compareTo`(v1, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L0d4d66.  v4:= temp;
  #L0d4d68.  if v4 >= 0 then goto L0d4d70;
  #L0d4d6c.  v0:= v2 @kind object;
  #L0d4d6e.  v1:= v3 @kind object;
  #L0d4d70.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d4d76.  v2:= temp;
  #L0d4d78.  if v2 != 0 then goto L0d4d4c;
  #L0d4d7c.  goto L0d4d3c;
  #L0d4d7e.  return v5 @kind object;
}
procedure `java.lang.Object` `maxWith`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/sequences/e;.maxWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0d4d90.  v0:= "<this>" @kind object;
  #L0d4d94.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4d9a.  v0:= "comparator" @kind object;
  #L0d4d9e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4da4.  call temp:= `maxWithOrNull`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxWithOrNull:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/lang/Object;` @kind static;
  #L0d4daa.  v1:= temp @kind object;
  #L0d4dac.  return v1 @kind object;
}
procedure `java.lang.Comparable` `min`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/e;.min:(Lkotlin/sequences/Sequence;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0d4c48.  v0:= "<this>" @kind object;
  #L0d4c4c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4c52.  call temp:= `minOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Comparable;` @kind static;
  #L0d4c58.  v1:= temp @kind object;
  #L0d4c5a.  return v1 @kind object;
}
procedure `java.lang.Double` `min`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/e;.min:(Lkotlin/sequences/Sequence;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0d4c90.  v0:= "<this>" @kind object;
  #L0d4c94.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4c9a.  call temp:= `minOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Double;` @kind static;
  #L0d4ca0.  v1:= temp @kind object;
  #L0d4ca2.  return v1 @kind object;
}
procedure `java.lang.Float` `min`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/e;.min:(Lkotlin/sequences/Sequence;)Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0d4cd8.  v0:= "<this>" @kind object;
  #L0d4cdc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4ce2.  call temp:= `minOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Float;` @kind static;
  #L0d4ce8.  v1:= temp @kind object;
  #L0d4cea.  return v1 @kind object;
}
procedure `java.lang.Object` `minBy`(`kotlin.sequences.Sequence` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/sequences/e;.minBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0d4dc0.  v0:= "<this>" @kind object;
  #L0d4dc4.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4dca.  v0:= "selector" @kind object;
  #L0d4dce.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4dd4.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d4dda.  v5:= temp @kind object;
  #L0d4ddc.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d4de2.  v0:= temp;
  #L0d4de4.  if v0 != 0 then goto L0d4dec;
  #L0d4de8.  v5:= 0I;
  #L0d4dea.  goto L0d4e42;
  #L0d4dec.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d4df2.  v0:= temp @kind object;
  #L0d4df4.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d4dfa.  v1:= temp;
  #L0d4dfc.  if v1 != 0 then goto L0d4e04;
  #L0d4e00.  v5:= v0 @kind object;
  #L0d4e02.  goto L0d4e42;
  #L0d4e04.  call temp:= `invoke`(v6, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0d4e0a.  v1:= temp @kind object;
  #L0d4e0c.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L0d4e10.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0d4e16.  v2:= temp @kind object;
  #L0d4e18.  call temp:= `invoke`(v6, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0d4e1e.  v3:= temp @kind object;
  #L0d4e20.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L0d4e24.  call temp:= `compareTo`(v1, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L0d4e2a.  v4:= temp;
  #L0d4e2c.  if v4 <= 0 then goto L0d4e34;
  #L0d4e30.  v0:= v2 @kind object;
  #L0d4e32.  v1:= v3 @kind object;
  #L0d4e34.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0d4e3a.  v2:= temp;
  #L0d4e3c.  if v2 != 0 then goto L0d4e10;
  #L0d4e40.  goto L0d4e00;
  #L0d4e42.  return v5 @kind object;
}
procedure `java.lang.Object` `minWith`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/sequences/e;.minWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0d4e54.  v0:= "<this>" @kind object;
  #L0d4e58.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4e5e.  v0:= "comparator" @kind object;
  #L0d4e62.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4e68.  call temp:= `minWithOrNull`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minWithOrNull:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/lang/Object;` @kind static;
  #L0d4e6e.  v1:= temp @kind object;
  #L0d4e70.  return v1 @kind object;
}
procedure `java.util.SortedSet` `toSortedSet`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/e;.toSortedSet:(Lkotlin/sequences/Sequence;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0d4ee4.  v0:= "<this>" @kind object;
  #L0d4ee8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4eee.  v0:= new `java.util.TreeSet`;
  #L0d4ef2.  call `<init>`(v0) @signature `Ljava/util/TreeSet;.<init>:()V` @kind direct;
  #L0d4ef8.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toCollection:(Lkotlin/sequences/Sequence;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L0d4efe.  v1:= temp @kind object;
  #L0d4f00.  v1:= (`java.util.SortedSet`) v1 @kind object;
  #L0d4f04.  return v1 @kind object;
}
procedure `java.util.SortedSet` `toSortedSet`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/sequences/e;.toSortedSet:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0d4f18.  v0:= "<this>" @kind object;
  #L0d4f1c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4f22.  v0:= "comparator" @kind object;
  #L0d4f26.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d4f2c.  v0:= new `java.util.TreeSet`;
  #L0d4f30.  call `<init>`(v0, v2) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L0d4f36.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toCollection:(Lkotlin/sequences/Sequence;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L0d4f3c.  v1:= temp @kind object;
  #L0d4f3e.  v1:= (`java.util.SortedSet`) v1 @kind object;
  #L0d4f42.  return v1 @kind object;
}
