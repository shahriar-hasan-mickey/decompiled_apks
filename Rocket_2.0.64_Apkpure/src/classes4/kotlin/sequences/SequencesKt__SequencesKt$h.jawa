record `kotlin.sequences.SequencesKt__SequencesKt$h` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.sequences.SequencesKt__SequencesKt$h.a` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt__SequencesKt$h.b` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt__SequencesKt$h.c` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt__SequencesKt$h.d` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.random.Random` `kotlin.sequences.SequencesKt__SequencesKt$h.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesKt$h` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.random.Random` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$h;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/random/Random;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0d4840.  v0.`kotlin.sequences.SequencesKt__SequencesKt$h.d` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L0d4844.  v0.`kotlin.sequences.SequencesKt__SequencesKt$h.e` @type ^`kotlin.random.Random` := v2 @kind object;
  #L0d4848.  v1:= 2I;
  #L0d484a.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d4850.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt__SequencesKt$h` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$h;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0d4818.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$h`;
  #L0d481c.  v1:= v3.`kotlin.sequences.SequencesKt__SequencesKt$h.d` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d4820.  v2:= v3.`kotlin.sequences.SequencesKt__SequencesKt$h.e` @type ^`kotlin.random.Random` @kind object;
  #L0d4824.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$h;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/random/Random;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0d482a.  v0.`kotlin.sequences.SequencesKt__SequencesKt$h.c` @type ^`java.lang.Object` := v4 @kind object;
  #L0d482e.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$h` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$h;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d46fc.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L0d4700.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L0d4704.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$h;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d470a.  v1:= temp @kind object;
  #L0d470c.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$h` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$h;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0d4720.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$h;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0d4726.  v1:= temp @kind object;
  #L0d4728.  v1:= (`kotlin.sequences.SequencesKt__SequencesKt$h`) v1 @kind object;
  #L0d472c.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d4730.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$h;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0d4736.  v1:= temp @kind object;
  #L0d4738.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt__SequencesKt$h` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$h;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0d474c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0d4752.  v0:= temp @kind object;
  #L0d4754.  v1:= v7.`kotlin.sequences.SequencesKt__SequencesKt$h.b` @type ^`int`;
  #L0d4758.  v2:= 1I;
  #L0d475a.  if v1 == 0 then goto L0d478a;
  #L0d475e.  if v1 != v2 then goto L0d477a;
  #L0d4762.  v1:= v7.`kotlin.sequences.SequencesKt__SequencesKt$h.a` @type ^`java.lang.Object` @kind object;
  #L0d4766.  v1:= (`java.util.List`) v1 @kind object;
  #L0d476a.  v3:= v7.`kotlin.sequences.SequencesKt__SequencesKt$h.c` @type ^`java.lang.Object` @kind object;
  #L0d476e.  v3:= (`kotlin.sequences.SequenceScope`) v3 @kind object;
  #L0d4772.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d4778.  goto L0d47a6;
  #L0d477a.  v8:= new `java.lang.IllegalStateException`;
  #L0d477e.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0d4782.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0d4788.  throw v8;
  #L0d478a.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0d4790.  v8:= v7.`kotlin.sequences.SequencesKt__SequencesKt$h.c` @type ^`java.lang.Object` @kind object;
  #L0d4794.  v8:= (`kotlin.sequences.SequenceScope`) v8 @kind object;
  #L0d4798.  v1:= v7.`kotlin.sequences.SequencesKt__SequencesKt$h.d` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d479c.  call temp:= `toMutableList`(v1) @signature `Lkotlin/sequences/SequencesKt;.toMutableList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @kind static;
  #L0d47a2.  v1:= temp @kind object;
  #L0d47a4.  v3:= v8 @kind object;
  #L0d47a6.  v8:= v7 @kind object;
  #L0d47a8.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L0d47ae.  v4:= temp;
  #L0d47b0.  v4:= v4 ^~ v2 @kind int;
  #L0d47b2.  if v4 == 0 then goto L0d4800;
  #L0d47b6.  v4:= v8.`kotlin.sequences.SequencesKt__SequencesKt$h.e` @type ^`kotlin.random.Random` @kind object;
  #L0d47ba.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0d47c0.  v5:= temp;
  #L0d47c2.  call temp:= `nextInt`(v4, v5) @signature `Lkotlin/random/Random;.nextInt:(I)I` @kind virtual;
  #L0d47c8.  v4:= temp;
  #L0d47ca.  call temp:= `removeLast`(v1) @signature `Lkotlin/collections/CollectionsKt;.removeLast:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L0d47d0.  v5:= temp @kind object;
  #L0d47d2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0d47d8.  v6:= temp;
  #L0d47da.  if v4 >= v6 then goto L0d47e6;
  #L0d47de.  call temp:= `set`(v1, v4, v5) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0d47e4.  v5:= temp @kind object;
  #L0d47e6.  v8.`kotlin.sequences.SequencesKt__SequencesKt$h.c` @type ^`java.lang.Object` := v3 @kind object;
  #L0d47ea.  v8.`kotlin.sequences.SequencesKt__SequencesKt$h.a` @type ^`java.lang.Object` := v1 @kind object;
  #L0d47ee.  v8.`kotlin.sequences.SequencesKt__SequencesKt$h.b` @type ^`int` := v2;
  #L0d47f2.  call temp:= `yield`(v3, v5, v8) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0d47f8.  v4:= temp @kind object;
  #L0d47fa.  if v4 != v0 then goto L0d47a8;
  #L0d47fe.  return v0 @kind object;
  #L0d4800.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0d4804.  return v8 @kind object;
}
