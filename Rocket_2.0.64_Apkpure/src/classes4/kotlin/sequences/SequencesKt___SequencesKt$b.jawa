record `kotlin.sequences.SequencesKt___SequencesKt$b` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `int` `kotlin.sequences.SequencesKt___SequencesKt$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$b` v0 @kind this, `int` v1 ) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$b;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0d50b0.  v0.`kotlin.sequences.SequencesKt___SequencesKt$b.a` @type ^`int` := v1;
  #L0d50b4.  v1:= 1I;
  #L0d50b6.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L0d50bc.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlin.sequences.SequencesKt___SequencesKt$b` v2 @kind this, `int` v3 ) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$b;.a:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0d503c.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L0d5040.  v0:= new `java.lang.StringBuilder`;
  #L0d5044.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0d504a.  v1:= "Sequence doesn't contain element at index " @kind object;
  #L0d504e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d5054.  v1:= v2.`kotlin.sequences.SequencesKt___SequencesKt$b.a` @type ^`int`;
  #L0d5058.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d505e.  v1:= 46I;
  #L0d5062.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d5068.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0d506e.  v0:= temp @kind object;
  #L0d5070.  call `<init>`(v3, v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0d5076.  throw v3;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$b;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d5088.  v1:= (`java.lang.Number`) v1 @kind object;
  #L0d508c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L0d5092.  v1:= temp;
  #L0d5094.  call temp:= `a`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$b;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L0d509a.  v1:= temp @kind object;
  #L0d509c.  return v1 @kind object;
}
