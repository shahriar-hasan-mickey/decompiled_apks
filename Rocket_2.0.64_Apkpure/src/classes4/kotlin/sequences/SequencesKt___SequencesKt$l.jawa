record `kotlin.sequences.SequencesKt___SequencesKt$l` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$l.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$l` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$l;.<init>:(Lkotlin/sequences/Sequence;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0d59cc.  v0.`kotlin.sequences.SequencesKt___SequencesKt$l.a` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L0d59d0.  v1:= 1I;
  #L0d59d2.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L0d59d8.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$l` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0d5978.  if v3 == 0 then goto L0d597e;
  #L0d597c.  return v3 @kind object;
  #L0d597e.  v3:= new `java.lang.IllegalArgumentException`;
  #L0d5982.  v0:= new `java.lang.StringBuilder`;
  #L0d5986.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0d598c.  v1:= "null element found in " @kind object;
  #L0d5990.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d5996.  v1:= v2.`kotlin.sequences.SequencesKt___SequencesKt$l.a` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d599a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d59a0.  v1:= 46I;
  #L0d59a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0d59aa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0d59b0.  v0:= temp @kind object;
  #L0d59b2.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0d59b8.  throw v3;
}
