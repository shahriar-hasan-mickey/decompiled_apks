record `kotlin.sequences.SequencesKt___SequencesKt$minus$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$minus$1.a` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$minus$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$minus$1` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$1;.<init>:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0d5638.  v0.`kotlin.sequences.SequencesKt___SequencesKt$minus$1.a` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L0d563c.  v0.`kotlin.sequences.SequencesKt___SequencesKt$minus$1.b` @type ^`java.lang.Object` := v2 @kind object;
  #L0d5640.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0d5646.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`kotlin.sequences.SequencesKt___SequencesKt$minus$1` v4 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0d55f8.  v0:= new `kotlin.jvm.internal.Ref$BooleanRef`;
  #L0d55fc.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/Ref$BooleanRef;.<init>:()V` @kind direct;
  #L0d5602.  v1:= v4.`kotlin.sequences.SequencesKt___SequencesKt$minus$1.a` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d5606.  v2:= new `kotlin.sequences.SequencesKt___SequencesKt$minus$1$a`;
  #L0d560a.  v3:= v4.`kotlin.sequences.SequencesKt___SequencesKt$minus$1.b` @type ^`java.lang.Object` @kind object;
  #L0d560e.  call `<init>`(v2, v0, v3) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$1$a;.<init>:(Lkotlin/jvm/internal/Ref$BooleanRef;Ljava/lang/Object;)V` @kind direct;
  #L0d5614.  call temp:= `filter`(v1, v2) @signature `Lkotlin/sequences/SequencesKt;.filter:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0d561a.  v0:= temp @kind object;
  #L0d561c.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d5622.  v0:= temp @kind object;
  #L0d5624.  return v0 @kind object;
}
