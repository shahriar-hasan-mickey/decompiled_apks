record `kotlin.sequences.SequencesKt___SequencesKt$g` @kind class @AccessFlag FINAL_SYNTHETIC extends `kotlin.jvm.internal.FunctionReferenceImpl` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `kotlin.sequences.SequencesKt___SequencesKt$g` `@@kotlin.sequences.SequencesKt___SequencesKt$g.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/sequences/SequencesKt___SequencesKt$g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0d53a8.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$g`;
  #L0d53ac.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$g;.<init>:()V` @kind direct;
  #L0d53b2.  `@@kotlin.sequences.SequencesKt___SequencesKt$g.a` @type ^`kotlin.sequences.SequencesKt___SequencesKt$g` := v0 @kind object;
  #L0d53b6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$g` v6 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$g;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0d53c8.  v2:= constclass @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d53cc.  v1:= 1I;
  #L0d53ce.  v3:= "iterator" @kind object;
  #L0d53d2.  v4:= "iterator()Ljava/util/Iterator;" @kind object;
  #L0d53d6.  v5:= 0I;
  #L0d53d8.  v0:= v6 @kind object;
  #L0d53da.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/jvm/internal/FunctionReferenceImpl;.<init>:(ILjava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L0d53e0.  return @kind void;
}
procedure `java.util.Iterator` `a`(`kotlin.sequences.SequencesKt___SequencesKt$g` v1 @kind this, `kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$g;.a:(Lkotlin/sequences/Sequence;)Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0d5384.  v0:= "p0" @kind object;
  #L0d5388.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0d538e.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d5394.  v2:= temp @kind object;
  #L0d5396.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$g;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d5364.  v1:= (`kotlin.sequences.Sequence`) v1 @kind object;
  #L0d5368.  call temp:= `a`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$g;.a:(Lkotlin/sequences/Sequence;)Ljava/util/Iterator;` @kind virtual;
  #L0d536e.  v1:= temp @kind object;
  #L0d5370.  return v1 @kind object;
}
