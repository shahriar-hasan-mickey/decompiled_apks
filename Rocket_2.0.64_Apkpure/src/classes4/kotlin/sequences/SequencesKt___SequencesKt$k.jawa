record `kotlin.sequences.SequencesKt___SequencesKt$k` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlin.sequences.SequencesKt___SequencesKt$k.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$k` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$k;.<init>:(Lkotlin/jvm/functions/Function2;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0d5958.  v0.`kotlin.sequences.SequencesKt___SequencesKt$k.a` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L0d595c.  v1:= 2I;
  #L0d595e.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L0d5964.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlin.sequences.SequencesKt___SequencesKt$k` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$k;.a:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0d590c.  v0:= v1.`kotlin.sequences.SequencesKt___SequencesKt$k.a` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L0d5910.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0d5916.  v2:= temp @kind object;
  #L0d5918.  call temp:= `invoke`(v0, v2, v3) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0d591e.  return v3 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$k` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$k;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0d5930.  v1:= (`java.lang.Number`) v1 @kind object;
  #L0d5934.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L0d593a.  v1:= temp;
  #L0d593c.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$k;.a:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0d5942.  v1:= temp @kind object;
  #L0d5944.  return v1 @kind object;
}
