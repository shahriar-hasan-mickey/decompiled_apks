record `kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1;.<init>:(Lkotlin/sequences/Sequence;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0d4fd0.  v0.`kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1.a` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L0d4fd4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0d4fda.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1` v1 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0d4fb0.  v0:= v1.`kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1.a` @type ^`kotlin.sequences.Sequence` @kind object;
  #L0d4fb4.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0d4fba.  v0:= temp @kind object;
  #L0d4fbc.  return v0 @kind object;
}
