record `kotlin.internal.ProgressionUtilKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lkotlin/internal/ProgressionUtilKt;.a:(III)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L0bdfe8.  call temp:= `c`(v0, v2) @signature `Lkotlin/internal/ProgressionUtilKt;.c:(II)I` @kind static;
  #L0bdfee.  v0:= temp;
  #L0bdff0.  call temp:= `c`(v1, v2) @signature `Lkotlin/internal/ProgressionUtilKt;.c:(II)I` @kind static;
  #L0bdff6.  v1:= temp;
  #L0bdff8.  v0:= v0 - v1 @kind int;
  #L0bdffa.  call temp:= `c`(v0, v2) @signature `Lkotlin/internal/ProgressionUtilKt;.c:(II)I` @kind static;
  #L0be000.  v0:= temp;
  #L0be002.  return v0;
}
procedure `long` `b`(`long` v0 , `long` v2 , `long` v4 ) @signature `Lkotlin/internal/ProgressionUtilKt;.b:(JJJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L0be080.  call temp:= `d`(v0, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.d:(JJ)J` @kind static;
  #L0be086.  v0:= temp @kind wide;
  #L0be088.  call temp:= `d`(v2, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.d:(JJ)J` @kind static;
  #L0be08e.  v2:= temp @kind wide;
  #L0be090.  v0:= v0 - v2 @kind long;
  #L0be092.  call temp:= `d`(v0, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.d:(JJ)J` @kind static;
  #L0be098.  v0:= temp @kind wide;
  #L0be09a.  return v0 @kind wide;
}
procedure `int` `c`(`int` v0 , `int` v1 ) @signature `Lkotlin/internal/ProgressionUtilKt;.c:(II)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L0be064.  v0:= v0 %% v1 @kind int;
  #L0be066.  if v0 < 0 then goto L0be06c;
  #L0be06a.  goto L0be06e;
  #L0be06c.  v0:= v0 + v1 @kind int;
  #L0be06e.  return v0;
}
procedure `long` `d`(`long` v3 , `long` v5 ) @signature `Lkotlin/internal/ProgressionUtilKt;.d:(JJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0be114.  v3:= v3 %% v5 @kind long;
  #L0be116.  v0:= 0L;
  #L0be11a.  v2:= lcmp(v3, v0);
  #L0be11e.  if v2 < 0 then goto L0be124;
  #L0be122.  goto L0be126;
  #L0be124.  v3:= v3 + v5 @kind long;
  #L0be126.  return v3 @kind wide;
}
procedure `int` `getProgressionLastElement`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lkotlin/internal/ProgressionUtilKt;.getProgressionLastElement:(III)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0be014.  if v2 <= 0 then goto L0be02a;
  #L0be018.  if v0 < v1 then goto L0be01e;
  #L0be01c.  goto L0be040;
  #L0be01e.  call temp:= `a`(v1, v0, v2) @signature `Lkotlin/internal/ProgressionUtilKt;.a:(III)I` @kind static;
  #L0be024.  v0:= temp;
  #L0be026.  v1:= v1 - v0 @kind int;
  #L0be028.  goto L0be040;
  #L0be02a.  if v2 >= 0 then goto L0be042;
  #L0be02e.  if v0 > v1 then goto L0be034;
  #L0be032.  goto L0be040;
  #L0be034.  v2:= -v2 @kind int;
  #L0be036.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/internal/ProgressionUtilKt;.a:(III)I` @kind static;
  #L0be03c.  v0:= temp;
  #L0be03e.  v1:= v1 + v0 @kind int;
  #L0be040.  return v1;
  #L0be042.  v0:= new `java.lang.IllegalArgumentException`;
  #L0be046.  v1:= "Step is zero." @kind object;
  #L0be04a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0be050.  throw v0;
}
procedure `long` `getProgressionLastElement`(`long` v7 , `long` v9 , `long` v11 ) @signature `Lkotlin/internal/ProgressionUtilKt;.getProgressionLastElement:(JJJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0be0ac.  v0:= 0L;
  #L0be0b0.  v2:= lcmp(v11, v0);
  #L0be0b4.  if v2 <= 0 then goto L0be0d4;
  #L0be0b8.  v0:= lcmp(v7, v9);
  #L0be0bc.  if v0 < 0 then goto L0be0c2;
  #L0be0c0.  goto L0be0f2;
  #L0be0c2.  v0:= v9 @kind wide;
  #L0be0c4.  v2:= v7 @kind wide;
  #L0be0c6.  v4:= v11 @kind wide;
  #L0be0c8.  call temp:= `b`(v0, v2, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.b:(JJJ)J` @kind static;
  #L0be0ce.  v7:= temp @kind wide;
  #L0be0d0.  v9:= v9 - v7 @kind long;
  #L0be0d2.  goto L0be0f2;
  #L0be0d4.  if v2 >= 0 then goto L0be0f4;
  #L0be0d8.  v0:= lcmp(v7, v9);
  #L0be0dc.  if v0 > 0 then goto L0be0e2;
  #L0be0e0.  goto L0be0f2;
  #L0be0e2.  v5:= -v11 @kind long;
  #L0be0e4.  v1:= v7 @kind wide;
  #L0be0e6.  v3:= v9 @kind wide;
  #L0be0e8.  call temp:= `b`(v1, v3, v5) @signature `Lkotlin/internal/ProgressionUtilKt;.b:(JJJ)J` @kind static;
  #L0be0ee.  v7:= temp @kind wide;
  #L0be0f0.  v9:= v9 + v7 @kind long;
  #L0be0f2.  return v9 @kind wide;
  #L0be0f4.  v7:= new `java.lang.IllegalArgumentException`;
  #L0be0f8.  v8:= "Step is zero." @kind object;
  #L0be0fc.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0be102.  throw v7;
}
