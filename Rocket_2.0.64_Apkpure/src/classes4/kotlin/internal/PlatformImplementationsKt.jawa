record `kotlin.internal.PlatformImplementationsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlin.internal.PlatformImplementations` `@@kotlin.internal.PlatformImplementationsKt.IMPLEMENTATIONS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/internal/PlatformImplementationsKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L0bdbc0.  v0:= constclass @type ^`kotlin.internal.PlatformImplementations` @kind object;
  #L0bdbc4.  call temp:= `a`() @signature `Lkotlin/internal/PlatformImplementationsKt;.a:()I` @kind static;
  #L0bdbca.  v1:= temp;
  #L0bdbcc.  v2:= 65536I;
  #L0bdbd0.  v3:= ", base type classloader: " @kind object;
  #L0bdbd4.  v4:= "Instance class was loaded from a different classloader: " @kind object;
  #L0bdbd8.  v5:= "null cannot be cast to non-null type kotlin.internal.PlatformImplementations" @kind object;
  #L0bdbdc.  v6:= "forName(\"kotlin.internalâ€¦entations\").newInstance()" @kind object;
  #L0bdbe0.  v7:= 65544I;
  #L0bdbe6.  if v1 >= v7 then goto L0bdbee;
  #L0bdbea.  if v1 >= v2 then goto L0bdd0c;
  #L0bdbee.  v7:= constclass @type ^`kotlin.internal.jdk8.JDK8PlatformImplementations` @kind object;
  #L0bdbf2.  call temp:= `newInstance`(v7) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L0bdbf8.  v7:= temp @kind object;
  #L0bdbfa.  call `checkNotNullExpressionValue`(v7, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bdc00.  if v7 == 0 then goto L0bdc10;
  #L0bdc04.  v7:= (`kotlin.internal.PlatformImplementations`) v7 @kind object;
  #L0bdc08.  goto L0bde42;
  #L0bdc0c.  v8:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0bdc0e.  goto L0bdc1c;
  #L0bdc10.  v8:= new `java.lang.NullPointerException`;
  #L0bdc14.  call `<init>`(v8, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0bdc1a.  throw v8;
  #L0bdc1c.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L0bdc22.  v7:= temp @kind object;
  #L0bdc24.  call temp:= `getClassLoader`(v7) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L0bdc2a.  v7:= temp @kind object;
  #L0bdc2c.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L0bdc32.  v9:= temp @kind object;
  #L0bdc34.  call temp:= `areEqual`(v7, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0bdc3a.  v10:= temp;
  #L0bdc3c.  if v10 != 0 then goto L0bdc76;
  #L0bdc40.  v10:= new `java.lang.ClassNotFoundException`;
  #L0bdc44.  v11:= new `java.lang.StringBuilder`;
  #L0bdc48.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0bdc4e.  call temp:= `append`(v11, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdc54.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdc5a.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdc60.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdc66.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0bdc6c.  v7:= temp @kind object;
  #L0bdc6e.  call `<init>`(v10, v7, v8) @signature `Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0bdc74.  throw v10;
  #L0bdc76.  throw v8;
  #L0bdc78.  v7:= "kotlin.internal.JRE8PlatformImplementations" @kind object;
  #L0bdc7c.  call temp:= `forName`(v7) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L0bdc82.  v7:= temp @kind object;
  #L0bdc84.  call temp:= `newInstance`(v7) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L0bdc8a.  v7:= temp @kind object;
  #L0bdc8c.  call `checkNotNullExpressionValue`(v7, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bdc92.  if v7 == 0 then goto L0bdca2;
  #L0bdc96.  v7:= (`kotlin.internal.PlatformImplementations`) v7 @kind object;
  #L0bdc9a.  goto L0bde42;
  #L0bdc9e.  v8:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0bdca0.  goto L0bdcae;
  #L0bdca2.  v8:= new `java.lang.NullPointerException`;
  #L0bdca6.  call `<init>`(v8, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0bdcac.  throw v8;
  #L0bdcae.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L0bdcb4.  v7:= temp @kind object;
  #L0bdcb6.  call temp:= `getClassLoader`(v7) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L0bdcbc.  v7:= temp @kind object;
  #L0bdcbe.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L0bdcc4.  v9:= temp @kind object;
  #L0bdcc6.  call temp:= `areEqual`(v7, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0bdccc.  v10:= temp;
  #L0bdcce.  if v10 != 0 then goto L0bdd08;
  #L0bdcd2.  v10:= new `java.lang.ClassNotFoundException`;
  #L0bdcd6.  v11:= new `java.lang.StringBuilder`;
  #L0bdcda.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0bdce0.  call temp:= `append`(v11, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdce6.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdcec.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdcf2.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdcf8.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0bdcfe.  v7:= temp @kind object;
  #L0bdd00.  call `<init>`(v10, v7, v8) @signature `Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0bdd06.  throw v10;
  #L0bdd08.  throw v8;
  #L0bdd0a.  
  #L0bdd0c.  v7:= 65543I;
  #L0bdd12.  if v1 >= v7 then goto L0bdd1a;
  #L0bdd16.  if v1 >= v2 then goto L0bde38;
  #L0bdd1a.  v1:= constclass @type ^`kotlin.internal.jdk7.JDK7PlatformImplementations` @kind object;
  #L0bdd1e.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L0bdd24.  v1:= temp @kind object;
  #L0bdd26.  call `checkNotNullExpressionValue`(v1, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bdd2c.  if v1 == 0 then goto L0bdd3e;
  #L0bdd30.  v7:= v1 @kind object;
  #L0bdd32.  v7:= (`kotlin.internal.PlatformImplementations`) v7 @kind object;
  #L0bdd36.  goto L0bde42;
  #L0bdd3a.  v2:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0bdd3c.  goto L0bdd4a;
  #L0bdd3e.  v2:= new `java.lang.NullPointerException`;
  #L0bdd42.  call `<init>`(v2, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0bdd48.  throw v2;
  #L0bdd4a.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L0bdd50.  v1:= temp @kind object;
  #L0bdd52.  call temp:= `getClassLoader`(v1) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L0bdd58.  v1:= temp @kind object;
  #L0bdd5a.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L0bdd60.  v7:= temp @kind object;
  #L0bdd62.  call temp:= `areEqual`(v1, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0bdd68.  v8:= temp;
  #L0bdd6a.  if v8 != 0 then goto L0bdda4;
  #L0bdd6e.  v8:= new `java.lang.ClassNotFoundException`;
  #L0bdd72.  v9:= new `java.lang.StringBuilder`;
  #L0bdd76.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0bdd7c.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdd82.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdd88.  call temp:= `append`(v9, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdd8e.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bdd94.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0bdd9a.  v1:= temp @kind object;
  #L0bdd9c.  call `<init>`(v8, v1, v2) @signature `Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0bdda2.  throw v8;
  #L0bdda4.  throw v2;
  #L0bdda6.  v1:= "kotlin.internal.JRE7PlatformImplementations" @kind object;
  #L0bddaa.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L0bddb0.  v1:= temp @kind object;
  #L0bddb2.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L0bddb8.  v1:= temp @kind object;
  #L0bddba.  call `checkNotNullExpressionValue`(v1, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bddc0.  if v1 == 0 then goto L0bddd0;
  #L0bddc4.  v7:= v1 @kind object;
  #L0bddc6.  v7:= (`kotlin.internal.PlatformImplementations`) v7 @kind object;
  #L0bddca.  goto L0bde42;
  #L0bddcc.  v2:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L0bddce.  goto L0bdddc;
  #L0bddd0.  v2:= new `java.lang.NullPointerException`;
  #L0bddd4.  call `<init>`(v2, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0bddda.  throw v2;
  #L0bdddc.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L0bdde2.  v1:= temp @kind object;
  #L0bdde4.  call temp:= `getClassLoader`(v1) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L0bddea.  v1:= temp @kind object;
  #L0bddec.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L0bddf2.  v0:= temp @kind object;
  #L0bddf4.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0bddfa.  v5:= temp;
  #L0bddfc.  if v5 != 0 then goto L0bde36;
  #L0bde00.  v5:= new `java.lang.ClassNotFoundException`;
  #L0bde04.  v6:= new `java.lang.StringBuilder`;
  #L0bde08.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0bde0e.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bde14.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bde1a.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bde20.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0bde26.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0bde2c.  v0:= temp @kind object;
  #L0bde2e.  call `<init>`(v5, v0, v2) @signature `Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0bde34.  throw v5;
  #L0bde36.  throw v2;
  #L0bde38.  v7:= new `kotlin.internal.PlatformImplementations`;
  #L0bde3c.  call `<init>`(v7) @signature `Lkotlin/internal/PlatformImplementations;.<init>:()V` @kind direct;
  #L0bde42.  `@@kotlin.internal.PlatformImplementationsKt.IMPLEMENTATIONS` @type ^`kotlin.internal.PlatformImplementations` := v7 @kind object;
  #L0bde46.  return @kind void;
  catch `java.lang.ClassNotFoundException` @[L0bdbee..L0bdc00] goto L0bdc78;
  catch `java.lang.ClassCastException` @[L0bdc04..L0bdc1c] goto L0bdc0c;
  catch `java.lang.ClassNotFoundException` @[L0bdc04..L0bdc1c] goto L0bdc78;
  catch `java.lang.ClassNotFoundException` @[L0bdc1c..L0bdc78] goto L0bdc78;
  catch `java.lang.ClassNotFoundException` @[L0bdc78..L0bdc92] goto L0bdd0a;
  catch `java.lang.ClassCastException` @[L0bdc96..L0bdcae] goto L0bdc9e;
  catch `java.lang.ClassNotFoundException` @[L0bdc96..L0bdcae] goto L0bdd0a;
  catch `java.lang.ClassNotFoundException` @[L0bdcae..L0bdd0a] goto L0bdd0a;
  catch `java.lang.ClassNotFoundException` @[L0bdd1a..L0bdd2c] goto L0bdda6;
  catch `java.lang.ClassCastException` @[L0bdd30..L0bdd4a] goto L0bdd3a;
  catch `java.lang.ClassNotFoundException` @[L0bdd30..L0bdd4a] goto L0bdda6;
  catch `java.lang.ClassNotFoundException` @[L0bdd4a..L0bdda6] goto L0bdda6;
  catch `java.lang.ClassNotFoundException` @[L0bdda6..L0bddc0] goto L0bde38;
  catch `java.lang.ClassCastException` @[L0bddc4..L0bdddc] goto L0bddcc;
  catch `java.lang.ClassNotFoundException` @[L0bddc4..L0bdddc] goto L0bde38;
  catch `java.lang.ClassNotFoundException` @[L0bdddc..L0bde38] goto L0bde38;
}
procedure `int` `a`() @signature `Lkotlin/internal/PlatformImplementationsKt;.a:()I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L0bdaec.  v0:= "java.specification.version" @kind object;
  #L0bdaf0.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0bdaf6.  v0:= temp @kind object;
  #L0bdaf8.  v7:= 65542I;
  #L0bdafe.  if v0 != 0 then goto L0bdb04;
  #L0bdb02.  return v7;
  #L0bdb04.  v2:= 46I;
  #L0bdb08.  v3:= 0I;
  #L0bdb0a.  v4:= 0I;
  #L0bdb0c.  v5:= 6I;
  #L0bdb0e.  v6:= 0I;
  #L0bdb10.  v1:= v0 @kind object;
  #L0bdb12.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L0bdb18.  v8:= temp;
  #L0bdb1a.  v9:= 65536I;
  #L0bdb1e.  if v8 >= 0 then goto L0bdb30;
  #L0bdb22.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L0bdb28.  v0:= temp;
  #L0bdb2a.  v7:= v0 * v9 @kind int;
  #L0bdb2e.  return v7;
  #L0bdb30.  v2:= 46I;
  #L0bdb34.  v10:= v8 + 1;
  #L0bdb38.  v4:= 0I;
  #L0bdb3a.  v5:= 4I;
  #L0bdb3c.  v6:= 0I;
  #L0bdb3e.  v1:= v0 @kind object;
  #L0bdb40.  v3:= v10;
  #L0bdb42.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L0bdb48.  v1:= temp;
  #L0bdb4a.  if v1 >= 0 then goto L0bdb56;
  #L0bdb4e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0bdb54.  v1:= temp;
  #L0bdb56.  v2:= 0I;
  #L0bdb58.  call temp:= `substring`(v0, v2, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L0bdb5e.  v2:= temp @kind object;
  #L0bdb60.  v3:= "this as java.lang.Stringâ€¦ing(startIndex, endIndex)" @kind object;
  #L0bdb64.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bdb6a.  call temp:= `substring`(v0, v10, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L0bdb70.  v0:= temp @kind object;
  #L0bdb72.  call `checkNotNullExpressionValue`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bdb78.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L0bdb7e.  v1:= temp;
  #L0bdb80.  v1:= v1 * v9 @kind int;
  #L0bdb84.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L0bdb8a.  v0:= temp;
  #L0bdb8c.  v7:= v1 + v0 @kind int;
  #L0bdb90.  return v7;
  catch `java.lang.NumberFormatException` @[L0bdb22..L0bdb2a] goto L0bdb2e;
  catch `java.lang.NumberFormatException` @[L0bdb78..L0bdb8c] goto L0bdb90;
}
procedure `boolean` `apiVersionIsAtLeast`(`int` v1 , `int` v2 , `int` v3 ) @signature `Lkotlin/internal/PlatformImplementationsKt;.apiVersionIsAtLeast:(III)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0bdacc.  v0:= `@@kotlin.KotlinVersion.CURRENT` @type ^`kotlin.KotlinVersion` @kind object;
  #L0bdad0.  call temp:= `isAtLeast`(v0, v1, v2, v3) @signature `Lkotlin/KotlinVersion;.isAtLeast:(III)Z` @kind virtual;
  #L0bdad6.  v1:= temp;
  #L0bdad8.  return v1;
}
