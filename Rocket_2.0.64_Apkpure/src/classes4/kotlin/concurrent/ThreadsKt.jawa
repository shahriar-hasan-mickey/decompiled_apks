record `kotlin.concurrent.ThreadsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Thread` `thread`(`boolean` v1 , `boolean` v2 , `java.lang.ClassLoader` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `kotlin.jvm.functions.Function0` v6 @kind object) @signature `Lkotlin/concurrent/ThreadsKt;.thread:(ZZLjava/lang/ClassLoader;Ljava/lang/String;ILkotlin/jvm/functions/Function0;)Ljava/lang/Thread;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0bb6a0.  v0:= "block" @kind object;
  #L0bb6a4.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0bb6aa.  v0:= new `kotlin.concurrent.ThreadsKt$thread$thread$1`;
  #L0bb6ae.  call `<init>`(v0, v6) @signature `Lkotlin/concurrent/ThreadsKt$thread$thread$1;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L0bb6b4.  if v2 == 0 then goto L0bb6c0;
  #L0bb6b8.  v2:= 1I;
  #L0bb6ba.  call `setDaemon`(v0, v2) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L0bb6c0.  if v5 <= 0 then goto L0bb6ca;
  #L0bb6c4.  call `setPriority`(v0, v5) @signature `Ljava/lang/Thread;.setPriority:(I)V` @kind virtual;
  #L0bb6ca.  if v4 == 0 then goto L0bb6d4;
  #L0bb6ce.  call `setName`(v0, v4) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L0bb6d4.  if v3 == 0 then goto L0bb6de;
  #L0bb6d8.  call `setContextClassLoader`(v0, v3) @signature `Ljava/lang/Thread;.setContextClassLoader:(Ljava/lang/ClassLoader;)V` @kind virtual;
  #L0bb6de.  if v1 == 0 then goto L0bb6e8;
  #L0bb6e2.  call `start`(v0) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L0bb6e8.  return v0 @kind object;
}
procedure `java.lang.Thread` `thread$default`(`boolean` v6 , `boolean` v7 , `java.lang.ClassLoader` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 , `kotlin.jvm.functions.Function0` v11 @kind object, `int` v12 , `java.lang.Object` v13 @kind object) @signature `Lkotlin/concurrent/ThreadsKt;.thread$default:(ZZLjava/lang/ClassLoader;Ljava/lang/String;ILkotlin/jvm/functions/Function0;ILjava/lang/Object;)Ljava/lang/Thread;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0bb634.  v13:= v12 ^& 1;
  #L0bb638.  if v13 == 0 then goto L0bb642;
  #L0bb63c.  v6:= 1I;
  #L0bb63e.  v0:= 1I;
  #L0bb640.  goto L0bb644;
  #L0bb642.  v0:= v6;
  #L0bb644.  v6:= v12 ^& 2;
  #L0bb648.  if v6 == 0 then goto L0bb652;
  #L0bb64c.  v7:= 0I;
  #L0bb64e.  v1:= 0I;
  #L0bb650.  goto L0bb654;
  #L0bb652.  v1:= v7;
  #L0bb654.  v6:= v12 ^& 4;
  #L0bb658.  v7:= 0I;
  #L0bb65a.  if v6 == 0 then goto L0bb662;
  #L0bb65e.  v2:= v7 @kind object;
  #L0bb660.  goto L0bb664;
  #L0bb662.  v2:= v8 @kind object;
  #L0bb664.  v6:= v12 ^& 8;
  #L0bb668.  if v6 == 0 then goto L0bb670;
  #L0bb66c.  v3:= v7 @kind object;
  #L0bb66e.  goto L0bb672;
  #L0bb670.  v3:= v9 @kind object;
  #L0bb672.  v6:= v12 ^& 16;
  #L0bb676.  if v6 == 0 then goto L0bb680;
  #L0bb67a.  v10:= -1I;
  #L0bb67c.  v4:= -1I;
  #L0bb67e.  goto L0bb682;
  #L0bb680.  v4:= v10;
  #L0bb682.  v5:= v11 @kind object;
  #L0bb684.  call temp:= `thread`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/concurrent/ThreadsKt;.thread:(ZZLjava/lang/ClassLoader;Ljava/lang/String;ILkotlin/jvm/functions/Function0;)Ljava/lang/Thread;` @kind static;
  #L0bb68a.  v6:= temp @kind object;
  #L0bb68c.  return v6 @kind object;
}
