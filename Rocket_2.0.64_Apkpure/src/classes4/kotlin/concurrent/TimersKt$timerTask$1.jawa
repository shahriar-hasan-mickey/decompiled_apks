record `kotlin.concurrent.TimersKt$timerTask$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.TimerTask` @kind class {
  `kotlin.jvm.functions.Function1` `kotlin.concurrent.TimersKt$timerTask$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.concurrent.TimersKt$timerTask$1` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlin/concurrent/TimersKt$timerTask$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0bb6fc.  v0.`kotlin.concurrent.TimersKt$timerTask$1.a` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L0bb700.  call `<init>`(v0) @signature `Ljava/util/TimerTask;.<init>:()V` @kind direct;
  #L0bb706.  return @kind void;
}
procedure `void` `run`(`kotlin.concurrent.TimersKt$timerTask$1` v1 @kind this) @signature `Lkotlin/concurrent/TimersKt$timerTask$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0bb718.  v0:= v1.`kotlin.concurrent.TimersKt$timerTask$1.a` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0bb71c.  call temp:= `invoke`(v0, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0bb722.  return @kind void;
}
