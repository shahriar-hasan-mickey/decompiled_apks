record `kotlin.concurrent.ThreadsKt$thread$thread$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Thread` @kind class {
  `kotlin.jvm.functions.Function0` `kotlin.concurrent.ThreadsKt$thread$thread$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.concurrent.ThreadsKt$thread$thread$1` v0 @kind this, `kotlin.jvm.functions.Function0` v1 @kind object) @signature `Lkotlin/concurrent/ThreadsKt$thread$thread$1;.<init>:(Lkotlin/jvm/functions/Function0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0bb5fc.  v0.`kotlin.concurrent.ThreadsKt$thread$thread$1.a` @type ^`kotlin.jvm.functions.Function0` := v1 @kind object;
  #L0bb600.  call `<init>`(v0) @signature `Ljava/lang/Thread;.<init>:()V` @kind direct;
  #L0bb606.  return @kind void;
}
procedure `void` `run`(`kotlin.concurrent.ThreadsKt$thread$thread$1` v1 @kind this) @signature `Lkotlin/concurrent/ThreadsKt$thread$thread$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0bb618.  v0:= v1.`kotlin.concurrent.ThreadsKt$thread$thread$1.a` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L0bb61c.  call temp:= `invoke`(v0) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0bb622.  return @kind void;
}
