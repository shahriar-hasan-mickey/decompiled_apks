record `kotlin.math.MathKt` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.math.c` @kind class {
}
global `double` `@@kotlin.math.MathKt.E` @AccessFlag PUBLIC_STATIC_FINAL;
global `double` `@@kotlin.math.MathKt.PI` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`kotlin.math.MathKt` v0 @kind this) @signature `Lkotlin/math/MathKt;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0ca16c.  call `<init>`(v0) @signature `Lkotlin/math/c;.<init>:()V` @kind direct;
  #L0ca172.  return @kind void;
}
procedure `int` `getSign`(`int` v0 ) @signature `Lkotlin/math/MathKt;.getSign:(I)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ca0fc.  call temp:= `getSign`(v0) @signature `Lkotlin/math/c;.getSign:(I)I` @kind static;
  #L0ca102.  v0:= temp;
  #L0ca104.  return v0;
}
procedure `int` `getSign`(`long` v0 ) @signature `Lkotlin/math/MathKt;.getSign:(J)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ca118.  call temp:= `getSign`(v0) @signature `Lkotlin/math/c;.getSign:(J)I` @kind static;
  #L0ca11e.  v0:= temp;
  #L0ca120.  return v0;
}
procedure `int` `roundToInt`(`double` v0 ) @signature `Lkotlin/math/MathKt;.roundToInt:(D)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ca134.  call temp:= `roundToInt`(v0) @signature `Lkotlin/math/c;.roundToInt:(D)I` @kind static;
  #L0ca13a.  v0:= temp;
  #L0ca13c.  return v0;
}
procedure `long` `roundToLong`(`double` v0 ) @signature `Lkotlin/math/MathKt;.roundToLong:(D)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ca150.  call temp:= `roundToLong`(v0) @signature `Lkotlin/math/c;.roundToLong:(D)J` @kind static;
  #L0ca156.  v0:= temp @kind wide;
  #L0ca158.  return v0 @kind wide;
}
