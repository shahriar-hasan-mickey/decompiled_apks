record `kotlin.text.f` @kind class @AccessFlag  extends `kotlin.text.e` @kind class {
}
procedure `void` `<init>`(`kotlin.text.f` v0 @kind this) @signature `Lkotlin/text/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0de3fc.  call `<init>`(v0) @signature `Lkotlin/text/e;.<init>:()V` @kind direct;
  #L0de402.  return @kind void;
}
procedure `kotlin.jvm.functions.Function1` `a`(`java.lang.String` v1 @kind object) @signature `Lkotlin/text/f;.a:(Ljava/lang/String;)Lkotlin/jvm/functions/Function1;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L0de3c0.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0de3c6.  v0:= temp;
  #L0de3c8.  if v0 != 0 then goto L0de3d0;
  #L0de3cc.  v0:= 1I;
  #L0de3ce.  goto L0de3d2;
  #L0de3d0.  v0:= 0I;
  #L0de3d2.  if v0 == 0 then goto L0de3dc;
  #L0de3d6.  v1:= `@@kotlin.text.f$a.a` @type ^`kotlin.text.f$a` @kind object;
  #L0de3da.  goto L0de3e8;
  #L0de3dc.  v0:= new `kotlin.text.f$b`;
  #L0de3e0.  call `<init>`(v0, v1) @signature `Lkotlin/text/f$b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0de3e6.  v1:= v0 @kind object;
  #L0de3e8.  return v1 @kind object;
}
procedure `int` `b`(`java.lang.String` v4 @kind object) @signature `Lkotlin/text/f;.b:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0dde60.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dde66.  v0:= temp;
  #L0dde68.  v1:= 0I;
  #L0dde6a.  v2:= -1I;
  #L0dde6c.  if v1 >= v0 then goto L0dde90;
  #L0dde70.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L0dde76.  v3:= temp;
  #L0dde78.  call temp:= `isWhitespace`(v3) @signature `Lkotlin/text/a;.isWhitespace:(C)Z` @kind static;
  #L0dde7e.  v3:= temp;
  #L0dde80.  v3:= v3 ^~ 1;
  #L0dde84.  if v3 == 0 then goto L0dde8a;
  #L0dde88.  goto L0dde92;
  #L0dde8a.  v1:= v1 + 1;
  #L0dde8e.  goto L0dde6a;
  #L0dde90.  v1:= -1I;
  #L0dde92.  if v1 != v2 then goto L0dde9e;
  #L0dde96.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0dde9c.  v1:= temp;
  #L0dde9e.  return v1;
}
procedure `java.lang.String` `prependIndent`(`java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `Lkotlin/text/f;.prependIndent:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L0dded8.  v0:= "<this>" @kind object;
  #L0ddedc.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ddee2.  v0:= "indent" @kind object;
  #L0ddee6.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ddeec.  call temp:= `lineSequence`(v10) @signature `Lkotlin/text/StringsKt__StringsKt;.lineSequence:(Ljava/lang/CharSequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L0ddef2.  v10:= temp @kind object;
  #L0ddef4.  v0:= new `kotlin.text.f$c`;
  #L0ddef8.  call `<init>`(v0, v11) @signature `Lkotlin/text/f$c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0ddefe.  call temp:= `map`(v10, v0) @signature `Lkotlin/sequences/SequencesKt;.map:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0ddf04.  v1:= temp @kind object;
  #L0ddf06.  v2:= "\n" @kind object;
  #L0ddf0a.  v3:= 0I;
  #L0ddf0c.  v4:= 0I;
  #L0ddf0e.  v5:= 0I;
  #L0ddf10.  v6:= 0I;
  #L0ddf12.  v7:= 0I;
  #L0ddf14.  v8:= 62I;
  #L0ddf18.  v9:= 0I;
  #L0ddf1a.  call temp:= `joinToString$default`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lkotlin/sequences/SequencesKt;.joinToString$default:(Lkotlin/sequences/Sequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0ddf20.  v10:= temp @kind object;
  #L0ddf22.  return v10 @kind object;
}
procedure `java.lang.String` `prependIndent$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/text/f;.prependIndent$default:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ddeb0.  v2:= v2 ^& 1;
  #L0ddeb4.  if v2 == 0 then goto L0ddebc;
  #L0ddeb8.  v1:= "    " @kind object;
  #L0ddebc.  call temp:= `prependIndent`(v0, v1) @signature `Lkotlin/text/f;.prependIndent:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0ddec2.  v0:= temp @kind object;
  #L0ddec4.  return v0 @kind object;
}
procedure `java.lang.String` `replaceIndent`(`java.lang.String` v14 @kind object, `java.lang.String` v15 @kind object) @signature `Lkotlin/text/f;.replaceIndent:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L0ddf5c.  v0:= "<this>" @kind object;
  #L0ddf60.  call `checkNotNullParameter`(v14, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ddf66.  v0:= "newIndent" @kind object;
  #L0ddf6a.  call `checkNotNullParameter`(v15, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ddf70.  call temp:= `lines`(v14) @signature `Lkotlin/text/StringsKt__StringsKt;.lines:(Ljava/lang/CharSequence;)Ljava/util/List;` @kind static;
  #L0ddf76.  v0:= temp @kind object;
  #L0ddf78.  v1:= new `java.util.ArrayList`;
  #L0ddf7c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0ddf82.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0ddf88.  v2:= temp @kind object;
  #L0ddf8a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0ddf90.  v3:= temp;
  #L0ddf92.  if v3 == 0 then goto L0ddfbc;
  #L0ddf96.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0ddf9c.  v3:= temp @kind object;
  #L0ddf9e.  v4:= v3 @kind object;
  #L0ddfa0.  v4:= (`java.lang.String`) v4 @kind object;
  #L0ddfa4.  call temp:= `isBlank`(v4) @signature `Lkotlin/text/StringsKt;.isBlank:(Ljava/lang/CharSequence;)Z` @kind static;
  #L0ddfaa.  v4:= temp;
  #L0ddfac.  v4:= v4 ^~ 1;
  #L0ddfb0.  if v4 == 0 then goto L0ddf8a;
  #L0ddfb4.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0ddfba.  goto L0ddf8a;
  #L0ddfbc.  v2:= new `java.util.ArrayList`;
  #L0ddfc0.  v3:= 10I;
  #L0ddfc4.  call temp:= `collectionSizeOrDefault`(v1, v3) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L0ddfca.  v3:= temp;
  #L0ddfcc.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0ddfd2.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0ddfd8.  v1:= temp @kind object;
  #L0ddfda.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0ddfe0.  v3:= temp;
  #L0ddfe2.  if v3 == 0 then goto L0de00a;
  #L0ddfe6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0ddfec.  v3:= temp @kind object;
  #L0ddfee.  v3:= (`java.lang.String`) v3 @kind object;
  #L0ddff2.  call temp:= `b`(v3) @signature `Lkotlin/text/f;.b:(Ljava/lang/String;)I` @kind static;
  #L0ddff8.  v3:= temp;
  #L0ddffa.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0de000.  v3:= temp @kind object;
  #L0de002.  call temp:= `add`(v2, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0de008.  goto L0ddfda;
  #L0de00a.  call temp:= `minOrNull`(v2) @signature `Lkotlin/collections/CollectionsKt;.minOrNull:(Ljava/lang/Iterable;)Ljava/lang/Comparable;` @kind static;
  #L0de010.  v1:= temp @kind object;
  #L0de012.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L0de016.  v2:= 0I;
  #L0de018.  if v1 == 0 then goto L0de026;
  #L0de01c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L0de022.  v1:= temp;
  #L0de024.  goto L0de028;
  #L0de026.  v1:= 0I;
  #L0de028.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0de02e.  v14:= temp;
  #L0de030.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0de036.  v3:= temp;
  #L0de038.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0de03e.  v4:= temp;
  #L0de040.  v3:= v3 * v4 @kind int;
  #L0de044.  v14:= v14 + v3 @kind int;
  #L0de046.  call temp:= `a`(v15) @signature `Lkotlin/text/f;.a:(Ljava/lang/String;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L0de04c.  v15:= temp @kind object;
  #L0de04e.  call temp:= `getLastIndex`(v0) @signature `Lkotlin/collections/CollectionsKt;.getLastIndex:(Ljava/util/List;)I` @kind static;
  #L0de054.  v3:= temp;
  #L0de056.  v4:= new `java.util.ArrayList`;
  #L0de05a.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0de060.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0de066.  v0:= temp @kind object;
  #L0de068.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0de06e.  v5:= temp;
  #L0de070.  if v5 == 0 then goto L0de0d4;
  #L0de074.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0de07a.  v5:= temp @kind object;
  #L0de07c.  v6:= v2 + 1;
  #L0de080.  if v2 >= 0 then goto L0de08a;
  #L0de084.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L0de08a.  v5:= (`java.lang.String`) v5 @kind object;
  #L0de08e.  if v2 == 0 then goto L0de096;
  #L0de092.  if v2 != v3 then goto L0de0a6;
  #L0de096.  call temp:= `isBlank`(v5) @signature `Lkotlin/text/StringsKt;.isBlank:(Ljava/lang/CharSequence;)Z` @kind static;
  #L0de09c.  v2:= temp;
  #L0de09e.  if v2 == 0 then goto L0de0a6;
  #L0de0a2.  v5:= 0I;
  #L0de0a4.  goto L0de0c6;
  #L0de0a6.  call temp:= `drop`(v5, v1) @signature `Lkotlin/text/StringsKt;.drop:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L0de0ac.  v2:= temp @kind object;
  #L0de0ae.  if v2 == 0 then goto L0de0c6;
  #L0de0b2.  call temp:= `invoke`(v15, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0de0b8.  v2:= temp @kind object;
  #L0de0ba.  v2:= (`java.lang.String`) v2 @kind object;
  #L0de0be.  if v2 != 0 then goto L0de0c4;
  #L0de0c2.  goto L0de0c6;
  #L0de0c4.  v5:= v2 @kind object;
  #L0de0c6.  if v5 == 0 then goto L0de0d0;
  #L0de0ca.  call temp:= `add`(v4, v5) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0de0d0.  v2:= v6;
  #L0de0d2.  goto L0de068;
  #L0de0d4.  v5:= new `java.lang.StringBuilder`;
  #L0de0d8.  call `<init>`(v5, v14) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L0de0de.  v7:= 0I;
  #L0de0e0.  v8:= 0I;
  #L0de0e2.  v9:= 0I;
  #L0de0e4.  v10:= 0I;
  #L0de0e6.  v11:= 0I;
  #L0de0e8.  v12:= 124I;
  #L0de0ec.  v13:= 0I;
  #L0de0ee.  v6:= "\n" @kind object;
  #L0de0f2.  call temp:= `joinTo$default`(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lkotlin/collections/CollectionsKt;.joinTo$default:(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Appendable;` @kind static;
  #L0de0f8.  v14:= temp @kind object;
  #L0de0fa.  v14:= (`java.lang.StringBuilder`) v14 @kind object;
  #L0de0fe.  call temp:= `toString`(v14) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0de104.  v14:= temp @kind object;
  #L0de106.  v15:= "mapIndexedNotNull { inde…\"\\n\")\n        .toString()" @kind object;
  #L0de10a.  call `checkNotNullExpressionValue`(v14, v15) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de110.  return v14 @kind object;
}
procedure `java.lang.String` `replaceIndent$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/text/f;.replaceIndent$default:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ddf34.  v2:= v2 ^& 1;
  #L0ddf38.  if v2 == 0 then goto L0ddf40;
  #L0ddf3c.  v1:= "" @kind object;
  #L0ddf40.  call temp:= `replaceIndent`(v0, v1) @signature `Lkotlin/text/f;.replaceIndent:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0ddf46.  v0:= temp @kind object;
  #L0ddf48.  return v0 @kind object;
}
procedure `java.lang.String` `replaceIndentByMargin`(`java.lang.String` v21 @kind object, `java.lang.String` v22 @kind object, `java.lang.String` v23 @kind object) @signature `Lkotlin/text/f;.replaceIndentByMargin:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L0de158.  v0:= "<this>" @kind object;
  #L0de15c.  v1:= v21 @kind object;
  #L0de160.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de166.  v0:= "newIndent" @kind object;
  #L0de16a.  v2:= v22 @kind object;
  #L0de16e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de174.  v0:= "marginPrefix" @kind object;
  #L0de178.  v7:= v23 @kind object;
  #L0de17c.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de182.  call temp:= `isBlank`(v23) @signature `Lkotlin/text/StringsKt;.isBlank:(Ljava/lang/CharSequence;)Z` @kind static;
  #L0de188.  v0:= temp;
  #L0de18a.  v0:= v0 ^~ 1;
  #L0de18e.  if v0 == 0 then goto L0de314;
  #L0de192.  call temp:= `lines`(v21) @signature `Lkotlin/text/StringsKt__StringsKt;.lines:(Ljava/lang/CharSequence;)Ljava/util/List;` @kind static;
  #L0de198.  v0:= temp @kind object;
  #L0de19a.  call temp:= `length`(v21) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0de1a0.  v1:= temp;
  #L0de1a2.  call temp:= `length`(v22) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0de1a8.  v3:= temp;
  #L0de1aa.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0de1b0.  v4:= temp;
  #L0de1b2.  v3:= v3 * v4 @kind int;
  #L0de1b6.  v8:= v1 + v3 @kind int;
  #L0de1ba.  call temp:= `a`(v22) @signature `Lkotlin/text/f;.a:(Ljava/lang/String;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L0de1c0.  v9:= temp @kind object;
  #L0de1c2.  call temp:= `getLastIndex`(v0) @signature `Lkotlin/collections/CollectionsKt;.getLastIndex:(Ljava/util/List;)I` @kind static;
  #L0de1c8.  v10:= temp;
  #L0de1ca.  v11:= new `java.util.ArrayList`;
  #L0de1ce.  call `<init>`(v11) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0de1d4.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0de1da.  v0:= temp @kind object;
  #L0de1dc.  v12:= 0I;
  #L0de1de.  v1:= 0I;
  #L0de1e0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0de1e6.  v2:= temp;
  #L0de1e8.  if v2 == 0 then goto L0de2ce;
  #L0de1ec.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0de1f2.  v2:= temp @kind object;
  #L0de1f4.  v13:= v1 + 1;
  #L0de1f8.  if v1 >= 0 then goto L0de202;
  #L0de1fc.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L0de202.  v14:= v2 @kind object;
  #L0de204.  v14:= (`java.lang.String`) v14 @kind object;
  #L0de208.  v15:= 0I;
  #L0de20a.  if v1 == 0 then goto L0de212;
  #L0de20e.  if v1 != v10 then goto L0de222;
  #L0de212.  call temp:= `isBlank`(v14) @signature `Lkotlin/text/StringsKt;.isBlank:(Ljava/lang/CharSequence;)Z` @kind static;
  #L0de218.  v1:= temp;
  #L0de21a.  if v1 == 0 then goto L0de222;
  #L0de21e.  v14:= v15 @kind object;
  #L0de220.  goto L0de2c0;
  #L0de222.  call temp:= `length`(v14) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0de228.  v1:= temp;
  #L0de22a.  v2:= 0I;
  #L0de22c.  v3:= -1I;
  #L0de22e.  if v2 >= v1 then goto L0de254;
  #L0de232.  call temp:= `charAt`(v14, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L0de238.  v4:= temp;
  #L0de23a.  call temp:= `isWhitespace`(v4) @signature `Lkotlin/text/a;.isWhitespace:(C)Z` @kind static;
  #L0de240.  v4:= temp;
  #L0de242.  v4:= v4 ^~ 1;
  #L0de246.  if v4 == 0 then goto L0de24e;
  #L0de24a.  v6:= v2;
  #L0de24c.  goto L0de256;
  #L0de24e.  v2:= v2 + 1;
  #L0de252.  goto L0de22c;
  #L0de254.  v6:= -1I;
  #L0de256.  if v6 != v3 then goto L0de25c;
  #L0de25a.  goto L0de2a8;
  #L0de25c.  v4:= 0I;
  #L0de25e.  v5:= 4I;
  #L0de260.  v16:= 0I;
  #L0de264.  v1:= v14 @kind object;
  #L0de266.  v2:= v23 @kind object;
  #L0de26a.  v3:= v6;
  #L0de26c.  v17:= v6;
  #L0de270.  v6:= v16 @kind object;
  #L0de274.  call temp:= `startsWith$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;IZILjava/lang/Object;)Z` @kind static;
  #L0de27a.  v1:= temp;
  #L0de27c.  if v1 == 0 then goto L0de2a8;
  #L0de280.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0de286.  v1:= temp;
  #L0de288.  v6:= v17 + v1 @kind int;
  #L0de28c.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L0de290.  call `checkNotNull`(v14, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de296.  call temp:= `substring`(v14, v6) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0de29c.  v15:= temp @kind object;
  #L0de29e.  v1:= "this as java.lang.String).substring(startIndex)" @kind object;
  #L0de2a2.  call `checkNotNullExpressionValue`(v15, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de2a8.  if v15 == 0 then goto L0de2c0;
  #L0de2ac.  call temp:= `invoke`(v9, v15) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0de2b2.  v1:= temp @kind object;
  #L0de2b4.  v1:= (`java.lang.String`) v1 @kind object;
  #L0de2b8.  if v1 != 0 then goto L0de2be;
  #L0de2bc.  goto L0de2c0;
  #L0de2be.  v14:= v1 @kind object;
  #L0de2c0.  if v14 == 0 then goto L0de2ca;
  #L0de2c4.  call temp:= `add`(v11, v14) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0de2ca.  v1:= v13;
  #L0de2cc.  goto L0de1e0;
  #L0de2ce.  v12:= new `java.lang.StringBuilder`;
  #L0de2d2.  call `<init>`(v12, v8) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L0de2d8.  v14:= 0I;
  #L0de2da.  v15:= 0I;
  #L0de2dc.  v16:= 0I;
  #L0de2e0.  v17:= 0I;
  #L0de2e4.  v18:= 0I;
  #L0de2e8.  v19:= 124I;
  #L0de2ec.  v20:= 0I;
  #L0de2f0.  v13:= "\n" @kind object;
  #L0de2f4.  call temp:= `joinTo$default`(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20) @signature `Lkotlin/collections/CollectionsKt;.joinTo$default:(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Appendable;` @kind static;
  #L0de2fa.  v0:= temp @kind object;
  #L0de2fc.  v0:= (`java.lang.StringBuilder`) v0 @kind object;
  #L0de300.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0de306.  v0:= temp @kind object;
  #L0de308.  v1:= "mapIndexedNotNull { inde…\"\\n\")\n        .toString()" @kind object;
  #L0de30c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de312.  return v0 @kind object;
  #L0de314.  v0:= new `java.lang.IllegalArgumentException`;
  #L0de318.  v1:= "marginPrefix must be non-blank string." @kind object;
  #L0de31c.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0de322.  v1:= temp @kind object;
  #L0de324.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0de32a.  throw v0;
}
procedure `java.lang.String` `replaceIndentByMargin$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/f;.replaceIndentByMargin$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0de124.  v4:= v3 ^& 1;
  #L0de128.  if v4 == 0 then goto L0de130;
  #L0de12c.  v1:= "" @kind object;
  #L0de130.  v3:= v3 ^& 2;
  #L0de134.  if v3 == 0 then goto L0de13c;
  #L0de138.  v2:= "|" @kind object;
  #L0de13c.  call temp:= `replaceIndentByMargin`(v0, v1, v2) @signature `Lkotlin/text/f;.replaceIndentByMargin:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0de142.  v0:= temp @kind object;
  #L0de144.  return v0 @kind object;
}
procedure `java.lang.String` `trimIndent`(`java.lang.String` v1 @kind object) @signature `Lkotlin/text/f;.trimIndent:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0de33c.  v0:= "<this>" @kind object;
  #L0de340.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de346.  v0:= "" @kind object;
  #L0de34a.  call temp:= `replaceIndent`(v1, v0) @signature `Lkotlin/text/f;.replaceIndent:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0de350.  v1:= temp @kind object;
  #L0de352.  return v1 @kind object;
}
procedure `java.lang.String` `trimMargin`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/text/f;.trimMargin:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0de38c.  v0:= "<this>" @kind object;
  #L0de390.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de396.  v0:= "marginPrefix" @kind object;
  #L0de39a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de3a0.  v0:= "" @kind object;
  #L0de3a4.  call temp:= `replaceIndentByMargin`(v1, v0, v2) @signature `Lkotlin/text/f;.replaceIndentByMargin:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0de3aa.  v1:= temp @kind object;
  #L0de3ac.  return v1 @kind object;
}
procedure `java.lang.String` `trimMargin$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/text/f;.trimMargin$default:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0de364.  v2:= v2 ^& 1;
  #L0de368.  if v2 == 0 then goto L0de370;
  #L0de36c.  v1:= "|" @kind object;
  #L0de370.  call temp:= `trimMargin`(v0, v1) @signature `Lkotlin/text/f;.trimMargin:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0de376.  v0:= temp @kind object;
  #L0de378.  return v0 @kind object;
}
