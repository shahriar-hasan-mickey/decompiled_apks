record `kotlin.text.DelimitedRangesSequence$iterator$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Iterator` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `int` `kotlin.text.DelimitedRangesSequence$iterator$1.a` @AccessFlag PRIVATE;
  `int` `kotlin.text.DelimitedRangesSequence$iterator$1.b` @AccessFlag PRIVATE;
  `int` `kotlin.text.DelimitedRangesSequence$iterator$1.c` @AccessFlag PRIVATE;
  `kotlin.ranges.IntRange` `kotlin.text.DelimitedRangesSequence$iterator$1.d` @AccessFlag PRIVATE;
  `int` `kotlin.text.DelimitedRangesSequence$iterator$1.e` @AccessFlag PRIVATE;
  `kotlin.text.DelimitedRangesSequence` `kotlin.text.DelimitedRangesSequence$iterator$1.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.DelimitedRangesSequence$iterator$1` v2 @kind this, `kotlin.text.DelimitedRangesSequence` v3 @kind object) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.<init>:(Lkotlin/text/DelimitedRangesSequence;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0dbf28.  v2.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` := v3 @kind object;
  #L0dbf2c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0dbf32.  v0:= -1I;
  #L0dbf34.  v2.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int` := v0;
  #L0dbf38.  call temp:= `d`(v3) @signature `Lkotlin/text/DelimitedRangesSequence;.d:(Lkotlin/text/DelimitedRangesSequence;)I` @kind static;
  #L0dbf3e.  v0:= temp;
  #L0dbf40.  call temp:= `b`(v3) @signature `Lkotlin/text/DelimitedRangesSequence;.b:(Lkotlin/text/DelimitedRangesSequence;)Ljava/lang/CharSequence;` @kind static;
  #L0dbf46.  v3:= temp @kind object;
  #L0dbf48.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dbf4e.  v3:= temp;
  #L0dbf50.  v1:= 0I;
  #L0dbf52.  call temp:= `coerceIn`(v0, v1, v3) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(III)I` @kind static;
  #L0dbf58.  v3:= temp;
  #L0dbf5a.  v2.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int` := v3;
  #L0dbf5e.  v2.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int` := v3;
  #L0dbf62.  return @kind void;
}
procedure `void` `b`(`kotlin.text.DelimitedRangesSequence$iterator$1` v6 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0dbf74.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int`;
  #L0dbf78.  v1:= 0I;
  #L0dbf7a.  if v0 >= 0 then goto L0dbf8c;
  #L0dbf7e.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int` := v1;
  #L0dbf82.  v0:= 0I;
  #L0dbf84.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v0 @kind object;
  #L0dbf88.  goto L0dc0b0;
  #L0dbf8c.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L0dbf90.  call temp:= `c`(v0) @signature `Lkotlin/text/DelimitedRangesSequence;.c:(Lkotlin/text/DelimitedRangesSequence;)I` @kind static;
  #L0dbf96.  v0:= temp;
  #L0dbf98.  v2:= -1I;
  #L0dbf9a.  v3:= 1I;
  #L0dbf9c.  if v0 <= 0 then goto L0dbfba;
  #L0dbfa0.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.e` @type ^`int`;
  #L0dbfa4.  v0:= v0 + v3 @kind int;
  #L0dbfa6.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.e` @type ^`int` := v0;
  #L0dbfaa.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L0dbfae.  call temp:= `c`(v4) @signature `Lkotlin/text/DelimitedRangesSequence;.c:(Lkotlin/text/DelimitedRangesSequence;)I` @kind static;
  #L0dbfb4.  v4:= temp;
  #L0dbfb6.  if v0 >= v4 then goto L0dbfd6;
  #L0dbfba.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int`;
  #L0dbfbe.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L0dbfc2.  call temp:= `b`(v4) @signature `Lkotlin/text/DelimitedRangesSequence;.b:(Lkotlin/text/DelimitedRangesSequence;)Ljava/lang/CharSequence;` @kind static;
  #L0dbfc8.  v4:= temp @kind object;
  #L0dbfca.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dbfd0.  v4:= temp;
  #L0dbfd2.  if v0 <= v4 then goto L0dc002;
  #L0dbfd6.  v0:= new `kotlin.ranges.IntRange`;
  #L0dbfda.  v1:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int`;
  #L0dbfde.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L0dbfe2.  call temp:= `b`(v4) @signature `Lkotlin/text/DelimitedRangesSequence;.b:(Lkotlin/text/DelimitedRangesSequence;)Ljava/lang/CharSequence;` @kind static;
  #L0dbfe8.  v4:= temp @kind object;
  #L0dbfea.  call temp:= `getLastIndex`(v4) @signature `Lkotlin/text/StringsKt;.getLastIndex:(Ljava/lang/CharSequence;)I` @kind static;
  #L0dbff0.  v4:= temp;
  #L0dbff2.  call `<init>`(v0, v1, v4) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0dbff8.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v0 @kind object;
  #L0dbffc.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int` := v2;
  #L0dc000.  goto L0dc0ac;
  #L0dc002.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L0dc006.  call temp:= `a`(v0) @signature `Lkotlin/text/DelimitedRangesSequence;.a:(Lkotlin/text/DelimitedRangesSequence;)Lkotlin/jvm/functions/Function2;` @kind static;
  #L0dc00c.  v0:= temp @kind object;
  #L0dc00e.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L0dc012.  call temp:= `b`(v4) @signature `Lkotlin/text/DelimitedRangesSequence;.b:(Lkotlin/text/DelimitedRangesSequence;)Ljava/lang/CharSequence;` @kind static;
  #L0dc018.  v4:= temp @kind object;
  #L0dc01a.  v5:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int`;
  #L0dc01e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0dc024.  v5:= temp @kind object;
  #L0dc026.  call temp:= `invoke`(v0, v4, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0dc02c.  v0:= temp @kind object;
  #L0dc02e.  v0:= (`kotlin.Pair`) v0 @kind object;
  #L0dc032.  if v0 != 0 then goto L0dc062;
  #L0dc036.  v0:= new `kotlin.ranges.IntRange`;
  #L0dc03a.  v1:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int`;
  #L0dc03e.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L0dc042.  call temp:= `b`(v4) @signature `Lkotlin/text/DelimitedRangesSequence;.b:(Lkotlin/text/DelimitedRangesSequence;)Ljava/lang/CharSequence;` @kind static;
  #L0dc048.  v4:= temp @kind object;
  #L0dc04a.  call temp:= `getLastIndex`(v4) @signature `Lkotlin/text/StringsKt;.getLastIndex:(Ljava/lang/CharSequence;)I` @kind static;
  #L0dc050.  v4:= temp;
  #L0dc052.  call `<init>`(v0, v1, v4) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0dc058.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v0 @kind object;
  #L0dc05c.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int` := v2;
  #L0dc060.  goto L0dc0ac;
  #L0dc062.  call temp:= `component1`(v0) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L0dc068.  v2:= temp @kind object;
  #L0dc06a.  v2:= (`java.lang.Number`) v2 @kind object;
  #L0dc06e.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L0dc074.  v2:= temp;
  #L0dc076.  call temp:= `component2`(v0) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L0dc07c.  v0:= temp @kind object;
  #L0dc07e.  v0:= (`java.lang.Number`) v0 @kind object;
  #L0dc082.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L0dc088.  v0:= temp;
  #L0dc08a.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int`;
  #L0dc08e.  call temp:= `until`(v4, v2) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L0dc094.  v4:= temp @kind object;
  #L0dc096.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v4 @kind object;
  #L0dc09a.  v2:= v2 + v0 @kind int;
  #L0dc09c.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int` := v2;
  #L0dc0a0.  if v0 != 0 then goto L0dc0a6;
  #L0dc0a4.  v1:= 1I;
  #L0dc0a6.  v2:= v2 + v1 @kind int;
  #L0dc0a8.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int` := v2;
  #L0dc0ac.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int` := v3;
  #L0dc0b0.  return @kind void;
}
procedure `int` `getCounter`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.getCounter:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dbe44.  v0:= v1.`kotlin.text.DelimitedRangesSequence$iterator$1.e` @type ^`int`;
  #L0dbe48.  return v0;
}
procedure `int` `getCurrentStartIndex`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.getCurrentStartIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dbe5c.  v0:= v1.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int`;
  #L0dbe60.  return v0;
}
procedure `kotlin.ranges.IntRange` `getNextItem`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.getNextItem:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dbec0.  v0:= v1.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` @kind object;
  #L0dbec4.  return v0 @kind object;
}
procedure `int` `getNextSearchIndex`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.getNextSearchIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dbe74.  v0:= v1.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int`;
  #L0dbe78.  return v0;
}
procedure `int` `getNextState`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.getNextState:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dbe8c.  v0:= v1.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int`;
  #L0dbe90.  return v0;
}
procedure `boolean` `hasNext`(`kotlin.text.DelimitedRangesSequence$iterator$1` v2 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0dbe14.  v0:= v2.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int`;
  #L0dbe18.  v1:= -1I;
  #L0dbe1a.  if v0 != v1 then goto L0dbe24;
  #L0dbe1e.  call `b`(v2) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.b:()V` @kind direct;
  #L0dbe24.  v0:= v2.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int`;
  #L0dbe28.  v1:= 1I;
  #L0dbe2a.  if v0 != v1 then goto L0dbe30;
  #L0dbe2e.  goto L0dbe32;
  #L0dbe30.  v1:= 0I;
  #L0dbe32.  return v1;
}
procedure `java.lang.Object` `next`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L0dbea4.  call temp:= `next`(v1) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.next:()Lkotlin/ranges/IntRange;` @kind virtual;
  #L0dbeaa.  v0:= temp @kind object;
  #L0dbeac.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `next`(`kotlin.text.DelimitedRangesSequence$iterator$1` v3 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.next:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0dbed8.  v0:= v3.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int`;
  #L0dbedc.  v1:= -1I;
  #L0dbede.  if v0 != v1 then goto L0dbee8;
  #L0dbee2.  call `b`(v3) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.b:()V` @kind direct;
  #L0dbee8.  v0:= v3.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int`;
  #L0dbeec.  if v0 == 0 then goto L0dbf0a;
  #L0dbef0.  v0:= v3.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` @kind object;
  #L0dbef4.  v2:= "null cannot be cast to non-null type kotlin.ranges.IntRange" @kind object;
  #L0dbef8.  call `checkNotNull`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dbefe.  v2:= 0I;
  #L0dbf00.  v3.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v2 @kind object;
  #L0dbf04.  v3.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int` := v1;
  #L0dbf08.  return v0 @kind object;
  #L0dbf0a.  v0:= new `java.util.NoSuchElementException`;
  #L0dbf0e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L0dbf14.  throw v0;
}
procedure `void` `remove`(`kotlin.text.DelimitedRangesSequence$iterator$1` v2 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0dc0c4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0dc0c8.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L0dc0cc.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0dc0d2.  throw v0;
}
procedure `void` `setCounter`(`kotlin.text.DelimitedRangesSequence$iterator$1` v0 @kind this, `int` v1 ) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.setCounter:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0dc0e4.  v0.`kotlin.text.DelimitedRangesSequence$iterator$1.e` @type ^`int` := v1;
  #L0dc0e8.  return @kind void;
}
procedure `void` `setCurrentStartIndex`(`kotlin.text.DelimitedRangesSequence$iterator$1` v0 @kind this, `int` v1 ) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.setCurrentStartIndex:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0dc0fc.  v0.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int` := v1;
  #L0dc100.  return @kind void;
}
procedure `void` `setNextItem`(`kotlin.text.DelimitedRangesSequence$iterator$1` v0 @kind this, `kotlin.ranges.IntRange` v1 @kind object) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.setNextItem:(Lkotlin/ranges/IntRange;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0dc114.  v0.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v1 @kind object;
  #L0dc118.  return @kind void;
}
procedure `void` `setNextSearchIndex`(`kotlin.text.DelimitedRangesSequence$iterator$1` v0 @kind this, `int` v1 ) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.setNextSearchIndex:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0dc12c.  v0.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int` := v1;
  #L0dc130.  return @kind void;
}
procedure `void` `setNextState`(`kotlin.text.DelimitedRangesSequence$iterator$1` v0 @kind this, `int` v1 ) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.setNextState:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0dc144.  v0.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int` := v1;
  #L0dc148.  return @kind void;
}
