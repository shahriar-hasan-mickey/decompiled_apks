record `kotlin.text.n` @kind class @AccessFlag  extends `kotlin.text.StringsKt__StringsKt` @kind class {
}
procedure `void` `<init>`(`kotlin.text.n` v0 @kind this) @signature `Lkotlin/text/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0e2d6c.  call `<init>`(v0) @signature `Lkotlin/text/StringsKt__StringsKt;.<init>:()V` @kind direct;
  #L0e2d72.  return @kind void;
}
procedure `java.lang.Character` `max`(`java.lang.CharSequence` v1 @kind object) @signature `Lkotlin/text/n;.max:(Ljava/lang/CharSequence;)Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0e2ae8.  v0:= "<this>" @kind object;
  #L0e2aec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2af2.  call temp:= `maxOrNull`(v1) @signature `Lkotlin/text/StringsKt___StringsKt;.maxOrNull:(Ljava/lang/CharSequence;)Ljava/lang/Character;` @kind static;
  #L0e2af8.  v1:= temp @kind object;
  #L0e2afa.  return v1 @kind object;
}
procedure `java.lang.Character` `maxBy`(`java.lang.CharSequence` v6 @kind object, `kotlin.jvm.functions.Function1` v7 @kind object) @signature `Lkotlin/text/n;.maxBy:(Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0e2b0c.  v0:= "<this>" @kind object;
  #L0e2b10.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2b16.  v0:= "selector" @kind object;
  #L0e2b1a.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2b20.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0e2b26.  v0:= temp;
  #L0e2b28.  v1:= 1I;
  #L0e2b2a.  v2:= 0I;
  #L0e2b2c.  if v0 != 0 then goto L0e2b34;
  #L0e2b30.  v0:= 1I;
  #L0e2b32.  goto L0e2b36;
  #L0e2b34.  v0:= 0I;
  #L0e2b36.  if v0 == 0 then goto L0e2b3e;
  #L0e2b3a.  v6:= 0I;
  #L0e2b3c.  goto L0e2bcc;
  #L0e2b3e.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L0e2b44.  v0:= temp;
  #L0e2b46.  call temp:= `getLastIndex`(v6) @signature `Lkotlin/text/StringsKt;.getLastIndex:(Ljava/lang/CharSequence;)I` @kind static;
  #L0e2b4c.  v2:= temp;
  #L0e2b4e.  if v2 != 0 then goto L0e2b5c;
  #L0e2b52.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L0e2b58.  v6:= temp @kind object;
  #L0e2b5a.  goto L0e2bcc;
  #L0e2b5c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L0e2b62.  v3:= temp @kind object;
  #L0e2b64.  call temp:= `invoke`(v7, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0e2b6a.  v3:= temp @kind object;
  #L0e2b6c.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L0e2b70.  v4:= new `kotlin.ranges.IntRange`;
  #L0e2b74.  call `<init>`(v4, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0e2b7a.  call temp:= `iterator`(v4) @signature `Lkotlin/ranges/IntProgression;.iterator:()Lkotlin/collections/IntIterator;` @kind virtual;
  #L0e2b80.  v1:= temp @kind object;
  #L0e2b82.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0e2b88.  v2:= temp;
  #L0e2b8a.  if v2 == 0 then goto L0e2bc4;
  #L0e2b8e.  call temp:= `nextInt`(v1) @signature `Lkotlin/collections/IntIterator;.nextInt:()I` @kind virtual;
  #L0e2b94.  v2:= temp;
  #L0e2b96.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L0e2b9c.  v2:= temp;
  #L0e2b9e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L0e2ba4.  v4:= temp @kind object;
  #L0e2ba6.  call temp:= `invoke`(v7, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0e2bac.  v4:= temp @kind object;
  #L0e2bae.  v4:= (`java.lang.Comparable`) v4 @kind object;
  #L0e2bb2.  call temp:= `compareTo`(v3, v4) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L0e2bb8.  v5:= temp;
  #L0e2bba.  if v5 >= 0 then goto L0e2b82;
  #L0e2bbe.  v0:= v2;
  #L0e2bc0.  v3:= v4 @kind object;
  #L0e2bc2.  goto L0e2b82;
  #L0e2bc4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L0e2bca.  v6:= temp @kind object;
  #L0e2bcc.  return v6 @kind object;
}
procedure `java.lang.Character` `maxWith`(`java.lang.CharSequence` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/text/n;.maxWith:(Ljava/lang/CharSequence;Ljava/util/Comparator;)Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0e2be0.  v0:= "<this>" @kind object;
  #L0e2be4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2bea.  v0:= "comparator" @kind object;
  #L0e2bee.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2bf4.  call temp:= `maxWithOrNull`(v1, v2) @signature `Lkotlin/text/StringsKt___StringsKt;.maxWithOrNull:(Ljava/lang/CharSequence;Ljava/util/Comparator;)Ljava/lang/Character;` @kind static;
  #L0e2bfa.  v1:= temp @kind object;
  #L0e2bfc.  return v1 @kind object;
}
procedure `java.lang.Character` `min`(`java.lang.CharSequence` v1 @kind object) @signature `Lkotlin/text/n;.min:(Ljava/lang/CharSequence;)Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0e2c10.  v0:= "<this>" @kind object;
  #L0e2c14.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2c1a.  call temp:= `minOrNull`(v1) @signature `Lkotlin/text/StringsKt___StringsKt;.minOrNull:(Ljava/lang/CharSequence;)Ljava/lang/Character;` @kind static;
  #L0e2c20.  v1:= temp @kind object;
  #L0e2c22.  return v1 @kind object;
}
procedure `java.lang.Character` `minBy`(`java.lang.CharSequence` v6 @kind object, `kotlin.jvm.functions.Function1` v7 @kind object) @signature `Lkotlin/text/n;.minBy:(Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0e2c34.  v0:= "<this>" @kind object;
  #L0e2c38.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2c3e.  v0:= "selector" @kind object;
  #L0e2c42.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2c48.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0e2c4e.  v0:= temp;
  #L0e2c50.  v1:= 1I;
  #L0e2c52.  v2:= 0I;
  #L0e2c54.  if v0 != 0 then goto L0e2c5c;
  #L0e2c58.  v0:= 1I;
  #L0e2c5a.  goto L0e2c5e;
  #L0e2c5c.  v0:= 0I;
  #L0e2c5e.  if v0 == 0 then goto L0e2c66;
  #L0e2c62.  v6:= 0I;
  #L0e2c64.  goto L0e2cf4;
  #L0e2c66.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L0e2c6c.  v0:= temp;
  #L0e2c6e.  call temp:= `getLastIndex`(v6) @signature `Lkotlin/text/StringsKt;.getLastIndex:(Ljava/lang/CharSequence;)I` @kind static;
  #L0e2c74.  v2:= temp;
  #L0e2c76.  if v2 != 0 then goto L0e2c84;
  #L0e2c7a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L0e2c80.  v6:= temp @kind object;
  #L0e2c82.  goto L0e2cf4;
  #L0e2c84.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L0e2c8a.  v3:= temp @kind object;
  #L0e2c8c.  call temp:= `invoke`(v7, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0e2c92.  v3:= temp @kind object;
  #L0e2c94.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L0e2c98.  v4:= new `kotlin.ranges.IntRange`;
  #L0e2c9c.  call `<init>`(v4, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0e2ca2.  call temp:= `iterator`(v4) @signature `Lkotlin/ranges/IntProgression;.iterator:()Lkotlin/collections/IntIterator;` @kind virtual;
  #L0e2ca8.  v1:= temp @kind object;
  #L0e2caa.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0e2cb0.  v2:= temp;
  #L0e2cb2.  if v2 == 0 then goto L0e2cec;
  #L0e2cb6.  call temp:= `nextInt`(v1) @signature `Lkotlin/collections/IntIterator;.nextInt:()I` @kind virtual;
  #L0e2cbc.  v2:= temp;
  #L0e2cbe.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L0e2cc4.  v2:= temp;
  #L0e2cc6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L0e2ccc.  v4:= temp @kind object;
  #L0e2cce.  call temp:= `invoke`(v7, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0e2cd4.  v4:= temp @kind object;
  #L0e2cd6.  v4:= (`java.lang.Comparable`) v4 @kind object;
  #L0e2cda.  call temp:= `compareTo`(v3, v4) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L0e2ce0.  v5:= temp;
  #L0e2ce2.  if v5 <= 0 then goto L0e2caa;
  #L0e2ce6.  v0:= v2;
  #L0e2ce8.  v3:= v4 @kind object;
  #L0e2cea.  goto L0e2caa;
  #L0e2cec.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L0e2cf2.  v6:= temp @kind object;
  #L0e2cf4.  return v6 @kind object;
}
procedure `java.lang.Character` `minWith`(`java.lang.CharSequence` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/text/n;.minWith:(Ljava/lang/CharSequence;Ljava/util/Comparator;)Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0e2d08.  v0:= "<this>" @kind object;
  #L0e2d0c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2d12.  v0:= "comparator" @kind object;
  #L0e2d16.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2d1c.  call temp:= `minWithOrNull`(v1, v2) @signature `Lkotlin/text/StringsKt___StringsKt;.minWithOrNull:(Ljava/lang/CharSequence;Ljava/util/Comparator;)Ljava/lang/Character;` @kind static;
  #L0e2d22.  v1:= temp @kind object;
  #L0e2d24.  return v1 @kind object;
}
procedure `java.util.SortedSet` `toSortedSet`(`java.lang.CharSequence` v1 @kind object) @signature `Lkotlin/text/n;.toSortedSet:(Ljava/lang/CharSequence;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0e2d38.  v0:= "<this>" @kind object;
  #L0e2d3c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e2d42.  v0:= new `java.util.TreeSet`;
  #L0e2d46.  call `<init>`(v0) @signature `Ljava/util/TreeSet;.<init>:()V` @kind direct;
  #L0e2d4c.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/text/StringsKt___StringsKt;.toCollection:(Ljava/lang/CharSequence;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L0e2d52.  v1:= temp @kind object;
  #L0e2d54.  v1:= (`java.util.SortedSet`) v1 @kind object;
  #L0e2d58.  return v1 @kind object;
}
