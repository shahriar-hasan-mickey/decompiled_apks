record `kotlin.text.m` @kind class @AccessFlag  extends `kotlin.text.l` @kind class {
}
procedure `void` `<init>`(`kotlin.text.m` v0 @kind this) @signature `Lkotlin/text/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0df960.  call `<init>`(v0) @signature `Lkotlin/text/l;.<init>:()V` @kind direct;
  #L0df966.  return @kind void;
}
procedure `java.lang.String` `capitalize`(`java.lang.String` v2 @kind object) @signature `Lkotlin/text/m;.capitalize:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0df130.  v0:= "<this>" @kind object;
  #L0df134.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df13a.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L0df140.  v0:= temp @kind object;
  #L0df142.  v1:= "getDefault()" @kind object;
  #L0df146.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df14c.  call temp:= `capitalize`(v2, v0) @signature `Lkotlin/text/m;.capitalize:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L0df152.  v2:= temp @kind object;
  #L0df154.  return v2 @kind object;
}
procedure `java.lang.String` `capitalize`(`java.lang.String` v5 @kind object, `java.util.Locale` v6 @kind object) @signature `Lkotlin/text/m;.capitalize:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0df168.  v0:= "<this>" @kind object;
  #L0df16c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df172.  v0:= "locale" @kind object;
  #L0df176.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df17c.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0df182.  v0:= temp;
  #L0df184.  v1:= 1I;
  #L0df186.  v2:= 0I;
  #L0df188.  if v0 <= 0 then goto L0df190;
  #L0df18c.  v0:= 1I;
  #L0df18e.  goto L0df192;
  #L0df190.  v0:= 0I;
  #L0df192.  if v0 == 0 then goto L0df22e;
  #L0df196.  call temp:= `charAt`(v5, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0df19c.  v0:= temp;
  #L0df19e.  call temp:= `isLowerCase`(v0) @signature `Ljava/lang/Character;.isLowerCase:(C)Z` @kind static;
  #L0df1a4.  v3:= temp;
  #L0df1a6.  if v3 == 0 then goto L0df22e;
  #L0df1aa.  v3:= new `java.lang.StringBuilder`;
  #L0df1ae.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0df1b4.  call temp:= `toTitleCase`(v0) @signature `Ljava/lang/Character;.toTitleCase:(C)C` @kind static;
  #L0df1ba.  v4:= temp;
  #L0df1bc.  call temp:= `toUpperCase`(v0) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L0df1c2.  v0:= temp;
  #L0df1c4.  if v4 == v0 then goto L0df1d0;
  #L0df1c8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df1ce.  goto L0df204;
  #L0df1d0.  call temp:= `substring`(v5, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L0df1d6.  v0:= temp @kind object;
  #L0df1d8.  v2:= "this as java.lang.Stringâ€¦ing(startIndex, endIndex)" @kind object;
  #L0df1dc.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df1e2.  v2:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L0df1e6.  call `checkNotNull`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df1ec.  call temp:= `toUpperCase`(v0, v6) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L0df1f2.  v6:= temp @kind object;
  #L0df1f4.  v0:= "this as java.lang.String).toUpperCase(locale)" @kind object;
  #L0df1f8.  call `checkNotNullExpressionValue`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df1fe.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df204.  call temp:= `substring`(v5, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0df20a.  v5:= temp @kind object;
  #L0df20c.  v6:= "this as java.lang.String).substring(startIndex)" @kind object;
  #L0df210.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df216.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df21c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df222.  v5:= temp @kind object;
  #L0df224.  v6:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L0df228.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df22e.  return v5 @kind object;
}
procedure `int` `compareTo`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lkotlin/text/m;.compareTo:(Ljava/lang/String;Ljava/lang/String;Z)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0df0f4.  v0:= "<this>" @kind object;
  #L0df0f8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df0fe.  v0:= "other" @kind object;
  #L0df102.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df108.  if v3 == 0 then goto L0df116;
  #L0df10c.  call temp:= `compareToIgnoreCase`(v1, v2) @signature `Ljava/lang/String;.compareToIgnoreCase:(Ljava/lang/String;)I` @kind virtual;
  #L0df112.  v1:= temp;
  #L0df114.  return v1;
  #L0df116.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/String;.compareTo:(Ljava/lang/String;)I` @kind virtual;
  #L0df11c.  v1:= temp;
  #L0df11e.  return v1;
}
procedure `int` `compareTo$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `boolean` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/m;.compareTo$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0df0d0.  v3:= v3 ^& 2;
  #L0df0d4.  if v3 == 0 then goto L0df0da;
  #L0df0d8.  v2:= 0I;
  #L0df0da.  call temp:= `compareTo`(v0, v1, v2) @signature `Lkotlin/text/m;.compareTo:(Ljava/lang/String;Ljava/lang/String;Z)I` @kind static;
  #L0df0e0.  v0:= temp;
  #L0df0e2.  return v0;
}
procedure `java.lang.String` `concatToString`(`char`[] v1 @kind object) @signature `Lkotlin/text/m;.concatToString:([C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0df270.  v0:= "<this>" @kind object;
  #L0df274.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df27a.  v0:= new `java.lang.String`;
  #L0df27e.  call `<init>`(v0, v1) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L0df284.  return v0 @kind object;
}
procedure `java.lang.String` `concatToString`(`char`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/text/m;.concatToString:([CII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0df298.  v0:= "<this>" @kind object;
  #L0df29c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df2a2.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L0df2a6.  v1:= length @variable v2;
  #L0df2a8.  call `checkBoundsIndexes$kotlin_stdlib`(v0, v3, v4, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkBoundsIndexes$kotlin_stdlib:(III)V` @kind virtual;
  #L0df2ae.  v0:= new `java.lang.String`;
  #L0df2b2.  v4:= v4 - v3 @kind int;
  #L0df2b4.  call `<init>`(v0, v2, v3, v4) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L0df2ba.  return v0 @kind object;
}
procedure `java.lang.String` `concatToString$default`(`char`[] v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/m;.concatToString$default:([CIIILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0df240.  v4:= v3 ^& 1;
  #L0df244.  if v4 == 0 then goto L0df24a;
  #L0df248.  v1:= 0I;
  #L0df24a.  v3:= v3 ^& 2;
  #L0df24e.  if v3 == 0 then goto L0df254;
  #L0df252.  v2:= length @variable v0;
  #L0df254.  call temp:= `concatToString`(v0, v1, v2) @signature `Lkotlin/text/m;.concatToString:([CII)Ljava/lang/String;` @kind static;
  #L0df25a.  v0:= temp @kind object;
  #L0df25c.  return v0 @kind object;
}
procedure `boolean` `contentEquals`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/m;.contentEquals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0deb30.  v0:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L0deb34.  if v0 == 0 then goto L0deb4a;
  #L0deb38.  if v2 == 0 then goto L0deb4a;
  #L0deb3c.  v1:= (`java.lang.String`) v1 @kind object;
  #L0deb40.  call temp:= `contentEquals`(v1, v2) @signature `Ljava/lang/String;.contentEquals:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L0deb46.  v1:= temp;
  #L0deb48.  goto L0deb52;
  #L0deb4a.  call temp:= `contentEqualsImpl`(v1, v2) @signature `Lkotlin/text/StringsKt__StringsKt;.contentEqualsImpl:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L0deb50.  v1:= temp;
  #L0deb52.  return v1;
}
procedure `boolean` `contentEquals`(`java.lang.CharSequence` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `boolean` v2 ) @signature `Lkotlin/text/m;.contentEquals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Z)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0deb64.  if v2 == 0 then goto L0deb72;
  #L0deb68.  call temp:= `contentEqualsIgnoreCaseImpl`(v0, v1) @signature `Lkotlin/text/StringsKt__StringsKt;.contentEqualsIgnoreCaseImpl:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L0deb6e.  v0:= temp;
  #L0deb70.  goto L0deb7a;
  #L0deb72.  call temp:= `contentEquals`(v0, v1) @signature `Lkotlin/text/m;.contentEquals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L0deb78.  v0:= temp;
  #L0deb7a.  return v0;
}
procedure `java.lang.String` `decapitalize`(`java.lang.String` v4 @kind object) @signature `Lkotlin/text/m;.decapitalize:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0df2cc.  v0:= "<this>" @kind object;
  #L0df2d0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df2d6.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0df2dc.  v0:= temp;
  #L0df2de.  v1:= 1I;
  #L0df2e0.  v2:= 0I;
  #L0df2e2.  if v0 <= 0 then goto L0df2ea;
  #L0df2e6.  v0:= 1I;
  #L0df2e8.  goto L0df2ec;
  #L0df2ea.  v0:= 0I;
  #L0df2ec.  if v0 == 0 then goto L0df362;
  #L0df2f0.  call temp:= `charAt`(v4, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0df2f6.  v0:= temp;
  #L0df2f8.  call temp:= `isLowerCase`(v0) @signature `Ljava/lang/Character;.isLowerCase:(C)Z` @kind static;
  #L0df2fe.  v0:= temp;
  #L0df300.  if v0 != 0 then goto L0df362;
  #L0df304.  v0:= new `java.lang.StringBuilder`;
  #L0df308.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0df30e.  call temp:= `substring`(v4, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L0df314.  v2:= temp @kind object;
  #L0df316.  v3:= "this as java.lang.Stringâ€¦ing(startIndex, endIndex)" @kind object;
  #L0df31a.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df320.  v3:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L0df324.  call `checkNotNull`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df32a.  call temp:= `toLowerCase`(v2) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L0df330.  v2:= temp @kind object;
  #L0df332.  v3:= "this as java.lang.String).toLowerCase()" @kind object;
  #L0df336.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df33c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df342.  call temp:= `substring`(v4, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0df348.  v4:= temp @kind object;
  #L0df34a.  v1:= "this as java.lang.String).substring(startIndex)" @kind object;
  #L0df34e.  call `checkNotNullExpressionValue`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df354.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df35a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df360.  v4:= temp @kind object;
  #L0df362.  return v4 @kind object;
}
procedure `java.lang.String` `decapitalize`(`java.lang.String` v4 @kind object, `java.util.Locale` v5 @kind object) @signature `Lkotlin/text/m;.decapitalize:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0df374.  v0:= "<this>" @kind object;
  #L0df378.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df37e.  v0:= "locale" @kind object;
  #L0df382.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df388.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0df38e.  v0:= temp;
  #L0df390.  v1:= 1I;
  #L0df392.  v2:= 0I;
  #L0df394.  if v0 <= 0 then goto L0df39c;
  #L0df398.  v0:= 1I;
  #L0df39a.  goto L0df39e;
  #L0df39c.  v0:= 0I;
  #L0df39e.  if v0 == 0 then goto L0df414;
  #L0df3a2.  call temp:= `charAt`(v4, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0df3a8.  v0:= temp;
  #L0df3aa.  call temp:= `isLowerCase`(v0) @signature `Ljava/lang/Character;.isLowerCase:(C)Z` @kind static;
  #L0df3b0.  v0:= temp;
  #L0df3b2.  if v0 != 0 then goto L0df414;
  #L0df3b6.  v0:= new `java.lang.StringBuilder`;
  #L0df3ba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0df3c0.  call temp:= `substring`(v4, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L0df3c6.  v2:= temp @kind object;
  #L0df3c8.  v3:= "this as java.lang.Stringâ€¦ing(startIndex, endIndex)" @kind object;
  #L0df3cc.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df3d2.  v3:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L0df3d6.  call `checkNotNull`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df3dc.  call temp:= `toLowerCase`(v2, v5) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L0df3e2.  v5:= temp @kind object;
  #L0df3e4.  v2:= "this as java.lang.String).toLowerCase(locale)" @kind object;
  #L0df3e8.  call `checkNotNullExpressionValue`(v5, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df3ee.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df3f4.  call temp:= `substring`(v4, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0df3fa.  v4:= temp @kind object;
  #L0df3fc.  v5:= "this as java.lang.String).substring(startIndex)" @kind object;
  #L0df400.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df406.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df40c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df412.  v4:= temp @kind object;
  #L0df414.  return v4 @kind object;
}
procedure `java.lang.String` `decodeToString`(`byte`[] v2 @kind object) @signature `Lkotlin/text/m;.decodeToString:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0df464.  v0:= "<this>" @kind object;
  #L0df468.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df46e.  v0:= new `java.lang.String`;
  #L0df472.  v1:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L0df476.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L0df47c.  return v0 @kind object;
}
procedure `java.lang.String` `decodeToString`(`byte`[] v2 @kind object, `int` v3 , `int` v4 , `boolean` v5 ) @signature `Lkotlin/text/m;.decodeToString:([BIIZ)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0df490.  v0:= "<this>" @kind object;
  #L0df494.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df49a.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L0df49e.  v1:= length @variable v2;
  #L0df4a0.  call `checkBoundsIndexes$kotlin_stdlib`(v0, v3, v4, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkBoundsIndexes$kotlin_stdlib:(III)V` @kind virtual;
  #L0df4a6.  if v5 != 0 then goto L0df4bc;
  #L0df4aa.  v5:= new `java.lang.String`;
  #L0df4ae.  v4:= v4 - v3 @kind int;
  #L0df4b0.  v0:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L0df4b4.  call `<init>`(v5, v2, v3, v4, v0) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L0df4ba.  return v5 @kind object;
  #L0df4bc.  v5:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L0df4c0.  call temp:= `newDecoder`(v5) @signature `Ljava/nio/charset/Charset;.newDecoder:()Ljava/nio/charset/CharsetDecoder;` @kind virtual;
  #L0df4c6.  v5:= temp @kind object;
  #L0df4c8.  v0:= `@@java.nio.charset.CodingErrorAction.REPORT` @type ^`java.nio.charset.CodingErrorAction` @kind object;
  #L0df4cc.  call temp:= `onMalformedInput`(v5, v0) @signature `Ljava/nio/charset/CharsetDecoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;` @kind virtual;
  #L0df4d2.  v5:= temp @kind object;
  #L0df4d4.  v0:= `@@java.nio.charset.CodingErrorAction.REPORT` @type ^`java.nio.charset.CodingErrorAction` @kind object;
  #L0df4d8.  call temp:= `onUnmappableCharacter`(v5, v0) @signature `Ljava/nio/charset/CharsetDecoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;` @kind virtual;
  #L0df4de.  v5:= temp @kind object;
  #L0df4e0.  v4:= v4 - v3 @kind int;
  #L0df4e2.  call temp:= `wrap`(v2, v3, v4) @signature `Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;` @kind static;
  #L0df4e8.  v2:= temp @kind object;
  #L0df4ea.  call temp:= `decode`(v5, v2) @signature `Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;` @kind virtual;
  #L0df4f0.  v2:= temp @kind object;
  #L0df4f2.  call temp:= `toString`(v2) @signature `Ljava/nio/CharBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df4f8.  v2:= temp @kind object;
  #L0df4fa.  v3:= "decoder.decode(ByteBuffeâ€¦- startIndex)).toString()" @kind object;
  #L0df4fe.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df504.  return v2 @kind object;
}
procedure `java.lang.String` `decodeToString$default`(`byte`[] v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlin/text/m;.decodeToString$default:([BIIZILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L0df428.  v6:= v5 ^& 1;
  #L0df42c.  v0:= 0I;
  #L0df42e.  if v6 == 0 then goto L0df434;
  #L0df432.  v2:= 0I;
  #L0df434.  v6:= v5 ^& 2;
  #L0df438.  if v6 == 0 then goto L0df43e;
  #L0df43c.  v3:= length @variable v1;
  #L0df43e.  v5:= v5 ^& 4;
  #L0df442.  if v5 == 0 then goto L0df448;
  #L0df446.  v4:= 0I;
  #L0df448.  call temp:= `decodeToString`(v1, v2, v3, v4) @signature `Lkotlin/text/m;.decodeToString:([BIIZ)Ljava/lang/String;` @kind static;
  #L0df44e.  v1:= temp @kind object;
  #L0df450.  return v1 @kind object;
}
procedure `byte`[] `encodeToByteArray`(`java.lang.String` v1 @kind object) @signature `Lkotlin/text/m;.encodeToByteArray:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0def30.  v0:= "<this>" @kind object;
  #L0def34.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0def3a.  v0:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L0def3e.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L0def44.  v1:= temp @kind object;
  #L0def46.  v0:= "this as java.lang.String).getBytes(charset)" @kind object;
  #L0def4a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0def50.  return v1 @kind object;
}
procedure `byte`[] `encodeToByteArray`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `boolean` v5 ) @signature `Lkotlin/text/m;.encodeToByteArray:(Ljava/lang/String;IIZ)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0def64.  v0:= "<this>" @kind object;
  #L0def68.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0def6e.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L0def72.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0def78.  v1:= temp;
  #L0def7a.  call `checkBoundsIndexes$kotlin_stdlib`(v0, v3, v4, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkBoundsIndexes$kotlin_stdlib:(III)V` @kind virtual;
  #L0def80.  if v5 != 0 then goto L0defb8;
  #L0def84.  call temp:= `substring`(v2, v3, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L0def8a.  v2:= temp @kind object;
  #L0def8c.  v3:= "this as java.lang.Stringâ€¦ing(startIndex, endIndex)" @kind object;
  #L0def90.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0def96.  v3:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L0def9a.  v4:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L0def9e.  call `checkNotNull`(v2, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0defa4.  call temp:= `getBytes`(v2, v3) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L0defaa.  v2:= temp @kind object;
  #L0defac.  v3:= "this as java.lang.String).getBytes(charset)" @kind object;
  #L0defb0.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0defb6.  return v2 @kind object;
  #L0defb8.  v5:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L0defbc.  call temp:= `newEncoder`(v5) @signature `Ljava/nio/charset/Charset;.newEncoder:()Ljava/nio/charset/CharsetEncoder;` @kind virtual;
  #L0defc2.  v5:= temp @kind object;
  #L0defc4.  v0:= `@@java.nio.charset.CodingErrorAction.REPORT` @type ^`java.nio.charset.CodingErrorAction` @kind object;
  #L0defc8.  call temp:= `onMalformedInput`(v5, v0) @signature `Ljava/nio/charset/CharsetEncoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;` @kind virtual;
  #L0defce.  v5:= temp @kind object;
  #L0defd0.  v0:= `@@java.nio.charset.CodingErrorAction.REPORT` @type ^`java.nio.charset.CodingErrorAction` @kind object;
  #L0defd4.  call temp:= `onUnmappableCharacter`(v5, v0) @signature `Ljava/nio/charset/CharsetEncoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;` @kind virtual;
  #L0defda.  v5:= temp @kind object;
  #L0defdc.  call temp:= `wrap`(v2, v3, v4) @signature `Ljava/nio/CharBuffer;.wrap:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;` @kind static;
  #L0defe2.  v2:= temp @kind object;
  #L0defe4.  call temp:= `encode`(v5, v2) @signature `Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L0defea.  v2:= temp @kind object;
  #L0defec.  call temp:= `hasArray`(v2) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L0deff2.  v3:= temp;
  #L0deff4.  if v3 == 0 then goto L0df034;
  #L0deff8.  call temp:= `arrayOffset`(v2) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L0deffe.  v3:= temp;
  #L0df000.  if v3 != 0 then goto L0df034;
  #L0df004.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L0df00a.  v3:= temp;
  #L0df00c.  call temp:= `array`(v2) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L0df012.  v4:= temp @kind object;
  #L0df014.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0df01a.  v4:= length @variable v4;
  #L0df01c.  if v3 != v4 then goto L0df034;
  #L0df020.  call temp:= `array`(v2) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L0df026.  v2:= temp @kind object;
  #L0df028.  v3:= "{\n        byteBuffer.array()\n    }" @kind object;
  #L0df02c.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df032.  goto L0df048;
  #L0df034.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L0df03a.  v3:= temp;
  #L0df03c.  v3:= new `byte`[v3];
  #L0df040.  call temp:= `get`(v2, v3) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L0df046.  v2:= v3 @kind object;
  #L0df048.  return v2 @kind object;
}
procedure `byte`[] `encodeToByteArray$default`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlin/text/m;.encodeToByteArray$default:(Ljava/lang/String;IIZILjava/lang/Object;)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L0deef0.  v6:= v5 ^& 1;
  #L0deef4.  v0:= 0I;
  #L0deef6.  if v6 == 0 then goto L0deefc;
  #L0deefa.  v2:= 0I;
  #L0deefc.  v6:= v5 ^& 2;
  #L0def00.  if v6 == 0 then goto L0def0c;
  #L0def04.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0def0a.  v3:= temp;
  #L0def0c.  v5:= v5 ^& 4;
  #L0def10.  if v5 == 0 then goto L0def16;
  #L0def14.  v4:= 0I;
  #L0def16.  call temp:= `encodeToByteArray`(v1, v2, v3, v4) @signature `Lkotlin/text/m;.encodeToByteArray:(Ljava/lang/String;IIZ)[B` @kind static;
  #L0def1c.  v1:= temp @kind object;
  #L0def1e.  return v1 @kind object;
}
procedure `boolean` `endsWith`(`java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `boolean` v9 ) @signature `Lkotlin/text/m;.endsWith:(Ljava/lang/String;Ljava/lang/String;Z)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0debb0.  v0:= "<this>" @kind object;
  #L0debb4.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0debba.  v0:= "suffix" @kind object;
  #L0debbe.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0debc4.  if v9 != 0 then goto L0debd2;
  #L0debc8.  call temp:= `endsWith`(v7, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0debce.  v7:= temp;
  #L0debd0.  return v7;
  #L0debd2.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0debd8.  v9:= temp;
  #L0debda.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0debe0.  v0:= temp;
  #L0debe2.  v2:= v9 - v0 @kind int;
  #L0debe6.  v4:= 0I;
  #L0debe8.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0debee.  v5:= temp;
  #L0debf0.  v6:= 1I;
  #L0debf2.  v1:= v7 @kind object;
  #L0debf4.  v3:= v8 @kind object;
  #L0debf6.  call temp:= `regionMatches`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.regionMatches:(Ljava/lang/String;ILjava/lang/String;IIZ)Z` @kind static;
  #L0debfc.  v7:= temp;
  #L0debfe.  return v7;
}
procedure `boolean` `endsWith$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `boolean` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/m;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0deb8c.  v3:= v3 ^& 2;
  #L0deb90.  if v3 == 0 then goto L0deb96;
  #L0deb94.  v2:= 0I;
  #L0deb96.  call temp:= `endsWith`(v0, v1, v2) @signature `Lkotlin/text/m;.endsWith:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L0deb9c.  v0:= temp;
  #L0deb9e.  return v0;
}
procedure `boolean` `equals`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lkotlin/text/m;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0dec34.  if v0 != 0 then goto L0dec44;
  #L0dec38.  if v1 != 0 then goto L0dec40;
  #L0dec3c.  v0:= 1I;
  #L0dec3e.  goto L0dec42;
  #L0dec40.  v0:= 0I;
  #L0dec42.  return v0;
  #L0dec44.  if v2 != 0 then goto L0dec52;
  #L0dec48.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0dec4e.  v0:= temp;
  #L0dec50.  goto L0dec5a;
  #L0dec52.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0dec58.  v0:= temp;
  #L0dec5a.  return v0;
}
procedure `boolean` `equals$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `boolean` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/m;.equals$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0dec10.  v3:= v3 ^& 2;
  #L0dec14.  if v3 == 0 then goto L0dec1a;
  #L0dec18.  v2:= 0I;
  #L0dec1a.  call temp:= `equals`(v0, v1, v2) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L0dec20.  v0:= temp;
  #L0dec22.  return v0;
}
procedure `java.util.Comparator` `getCASE_INSENSITIVE_ORDER`(`kotlin.jvm.internal.StringCompanionObject` v1 @kind object) @signature `Lkotlin/text/m;.getCASE_INSENSITIVE_ORDER:(Lkotlin/jvm/internal/StringCompanionObject;)Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0df8c4.  v0:= "<this>" @kind object;
  #L0df8c8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df8ce.  v1:= `@@java.lang.String.CASE_INSENSITIVE_ORDER` @type ^`java.util.Comparator` @kind object;
  #L0df8d2.  v0:= "CASE_INSENSITIVE_ORDER" @kind object;
  #L0df8d6.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df8dc.  return v1 @kind object;
}
procedure `boolean` `isBlank`(`java.lang.CharSequence` v4 @kind object) @signature `Lkotlin/text/m;.isBlank:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0dec6c.  v0:= "<this>" @kind object;
  #L0dec70.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dec76.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dec7c.  v0:= temp;
  #L0dec7e.  v1:= 0I;
  #L0dec80.  v2:= 1I;
  #L0dec82.  if v0 == 0 then goto L0dece8;
  #L0dec86.  call temp:= `getIndices`(v4) @signature `Lkotlin/text/StringsKt__StringsKt;.getIndices:(Ljava/lang/CharSequence;)Lkotlin/ranges/IntRange;` @kind static;
  #L0dec8c.  v0:= temp @kind object;
  #L0dec8e.  v3:= instanceof @variable v0 @type ^`java.util.Collection` @kind boolean;
  #L0dec92.  if v3 == 0 then goto L0decac;
  #L0dec96.  v3:= v0 @kind object;
  #L0dec98.  v3:= (`java.util.Collection`) v3 @kind object;
  #L0dec9c.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L0deca2.  v3:= temp;
  #L0deca4.  if v3 == 0 then goto L0decac;
  #L0deca8.  v4:= 1I;
  #L0decaa.  goto L0dece4;
  #L0decac.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0decb2.  v0:= temp @kind object;
  #L0decb4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0decba.  v3:= temp;
  #L0decbc.  if v3 == 0 then goto L0deca8;
  #L0decc0.  v3:= v0 @kind object;
  #L0decc2.  v3:= (`kotlin.collections.IntIterator`) v3 @kind object;
  #L0decc6.  call temp:= `nextInt`(v3) @signature `Lkotlin/collections/IntIterator;.nextInt:()I` @kind virtual;
  #L0deccc.  v3:= temp;
  #L0decce.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L0decd4.  v3:= temp;
  #L0decd6.  call temp:= `isWhitespace`(v3) @signature `Lkotlin/text/a;.isWhitespace:(C)Z` @kind static;
  #L0decdc.  v3:= temp;
  #L0decde.  if v3 != 0 then goto L0decb4;
  #L0dece2.  v4:= 0I;
  #L0dece4.  if v4 == 0 then goto L0decea;
  #L0dece8.  v1:= 1I;
  #L0decea.  return v1;
}
procedure `boolean` `regionMatches`(`java.lang.CharSequence` v7 @kind object, `int` v8 , `java.lang.CharSequence` v9 @kind object, `int` v10 , `int` v11 , `boolean` v12 ) @signature `Lkotlin/text/m;.regionMatches:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;IIZ)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0ded64.  v0:= "<this>" @kind object;
  #L0ded68.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ded6e.  v0:= "other" @kind object;
  #L0ded72.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ded78.  v0:= instanceof @variable v7 @type ^`java.lang.String` @kind boolean;
  #L0ded7c.  if v0 == 0 then goto L0deda6;
  #L0ded80.  v0:= instanceof @variable v9 @type ^`java.lang.String` @kind boolean;
  #L0ded84.  if v0 == 0 then goto L0deda6;
  #L0ded88.  v1:= v7 @kind object;
  #L0ded8a.  v1:= (`java.lang.String`) v1 @kind object;
  #L0ded8e.  v3:= v9 @kind object;
  #L0ded90.  v3:= (`java.lang.String`) v3 @kind object;
  #L0ded94.  v2:= v8;
  #L0ded96.  v4:= v10;
  #L0ded98.  v5:= v11;
  #L0ded9a.  v6:= v12;
  #L0ded9c.  call temp:= `regionMatches`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.regionMatches:(Ljava/lang/String;ILjava/lang/String;IIZ)Z` @kind static;
  #L0deda2.  v7:= temp;
  #L0deda4.  return v7;
  #L0deda6.  call temp:= `regionMatchesImpl`(v7, v8, v9, v10, v11, v12) @signature `Lkotlin/text/StringsKt__StringsKt;.regionMatchesImpl:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;IIZ)Z` @kind static;
  #L0dedac.  v7:= temp;
  #L0dedae.  return v7;
}
procedure `boolean` `regionMatches`(`java.lang.String` v6 @kind object, `int` v7 , `java.lang.String` v8 @kind object, `int` v9 , `int` v10 , `boolean` v11 ) @signature `Lkotlin/text/m;.regionMatches:(Ljava/lang/String;ILjava/lang/String;IIZ)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0dedc0.  v0:= "<this>" @kind object;
  #L0dedc4.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dedca.  v0:= "other" @kind object;
  #L0dedce.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dedd4.  if v11 != 0 then goto L0dede2;
  #L0dedd8.  call temp:= `regionMatches`(v6, v7, v8, v9, v10) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L0dedde.  v6:= temp;
  #L0dede0.  goto L0dedf6;
  #L0dede2.  v0:= v6 @kind object;
  #L0dede4.  v1:= v11;
  #L0dede6.  v2:= v7;
  #L0dede8.  v3:= v8 @kind object;
  #L0dedea.  v4:= v9;
  #L0dedec.  v5:= v10;
  #L0dedee.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L0dedf4.  v6:= temp;
  #L0dedf6.  return v6;
}
procedure `boolean` `regionMatches$default`(`java.lang.CharSequence` v6 @kind object, `int` v7 , `java.lang.CharSequence` v8 @kind object, `int` v9 , `int` v10 , `boolean` v11 , `int` v12 , `java.lang.Object` v13 @kind object) @signature `Lkotlin/text/m;.regionMatches$default:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;IIZILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0decfc.  v12:= v12 ^& 16;
  #L0ded00.  if v12 == 0 then goto L0ded0a;
  #L0ded04.  v11:= 0I;
  #L0ded06.  v5:= 0I;
  #L0ded08.  goto L0ded0c;
  #L0ded0a.  v5:= v11;
  #L0ded0c.  v0:= v6 @kind object;
  #L0ded0e.  v1:= v7;
  #L0ded10.  v2:= v8 @kind object;
  #L0ded12.  v3:= v9;
  #L0ded14.  v4:= v10;
  #L0ded16.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/m;.regionMatches:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;IIZ)Z` @kind static;
  #L0ded1c.  v6:= temp;
  #L0ded1e.  return v6;
}
procedure `boolean` `regionMatches$default`(`java.lang.String` v6 @kind object, `int` v7 , `java.lang.String` v8 @kind object, `int` v9 , `int` v10 , `boolean` v11 , `int` v12 , `java.lang.Object` v13 @kind object) @signature `Lkotlin/text/m;.regionMatches$default:(Ljava/lang/String;ILjava/lang/String;IIZILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0ded30.  v12:= v12 ^& 16;
  #L0ded34.  if v12 == 0 then goto L0ded3e;
  #L0ded38.  v11:= 0I;
  #L0ded3a.  v5:= 0I;
  #L0ded3c.  goto L0ded40;
  #L0ded3e.  v5:= v11;
  #L0ded40.  v0:= v6 @kind object;
  #L0ded42.  v1:= v7;
  #L0ded44.  v2:= v8 @kind object;
  #L0ded46.  v3:= v9;
  #L0ded48.  v4:= v10;
  #L0ded4a.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.regionMatches:(Ljava/lang/String;ILjava/lang/String;IIZ)Z` @kind static;
  #L0ded50.  v6:= temp;
  #L0ded52.  return v6;
}
procedure `java.lang.String` `repeat`(`java.lang.CharSequence` v4 @kind object, `int` v5 ) @signature `Lkotlin/text/m;.repeat:(Ljava/lang/CharSequence;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0df518.  v0:= "<this>" @kind object;
  #L0df51c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df522.  v0:= 0I;
  #L0df524.  v1:= 1I;
  #L0df526.  if v5 < 0 then goto L0df52e;
  #L0df52a.  v2:= 1I;
  #L0df52c.  goto L0df530;
  #L0df52e.  v2:= 0I;
  #L0df530.  if v2 == 0 then goto L0df5d6;
  #L0df534.  v2:= "" @kind object;
  #L0df538.  if v5 == 0 then goto L0df5d4;
  #L0df53c.  if v5 == v1 then goto L0df5cc;
  #L0df540.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0df546.  v3:= temp;
  #L0df548.  if v3 == 0 then goto L0df5d4;
  #L0df54c.  if v3 == v1 then goto L0df5a6;
  #L0df550.  v0:= new `java.lang.StringBuilder`;
  #L0df554.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0df55a.  v2:= temp;
  #L0df55c.  v2:= v2 * v5 @kind int;
  #L0df560.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L0df566.  v2:= new `kotlin.ranges.IntRange`;
  #L0df56a.  call `<init>`(v2, v1, v5) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0df570.  call temp:= `iterator`(v2) @signature `Lkotlin/ranges/IntProgression;.iterator:()Lkotlin/collections/IntIterator;` @kind virtual;
  #L0df576.  v5:= temp @kind object;
  #L0df578.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0df57e.  v1:= temp;
  #L0df580.  if v1 == 0 then goto L0df592;
  #L0df584.  call temp:= `nextInt`(v5) @signature `Lkotlin/collections/IntIterator;.nextInt:()I` @kind virtual;
  #L0df58a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df590.  goto L0df578;
  #L0df592.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df598.  v2:= temp @kind object;
  #L0df59a.  v4:= "{\n                    vaâ€¦tring()\n                }" @kind object;
  #L0df59e.  call `checkNotNullExpressionValue`(v2, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df5a4.  goto L0df5d4;
  #L0df5a6.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L0df5ac.  v4:= temp;
  #L0df5ae.  v1:= new `char`[v5];
  #L0df5b2.  if v0 >= v5 then goto L0df5c0;
  #L0df5b6.  v1[v0]:= v4 @kind char;
  #L0df5ba.  v0:= v0 + 1;
  #L0df5be.  goto L0df5b2;
  #L0df5c0.  v2:= new `java.lang.String`;
  #L0df5c4.  call `<init>`(v2, v1) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L0df5ca.  goto L0df5d4;
  #L0df5cc.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df5d2.  v2:= temp @kind object;
  #L0df5d4.  return v2 @kind object;
  #L0df5d6.  v4:= new `java.lang.StringBuilder`;
  #L0df5da.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0df5e0.  v0:= "Count 'n' must be non-negative, but was " @kind object;
  #L0df5e4.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df5ea.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df5f0.  v5:= 46I;
  #L0df5f4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df5fa.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df600.  v4:= temp @kind object;
  #L0df602.  v5:= new `java.lang.IllegalArgumentException`;
  #L0df606.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df60c.  v4:= temp @kind object;
  #L0df60e.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0df614.  throw v5;
}
procedure `java.lang.String` `replace`(`java.lang.String` v4 @kind object, `char` v5 , `char` v6 , `boolean` v7 ) @signature `Lkotlin/text/m;.replace:(Ljava/lang/String;CCZ)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0df670.  v0:= "<this>" @kind object;
  #L0df674.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df67a.  if v7 != 0 then goto L0df692;
  #L0df67e.  call temp:= `replace`(v4, v5, v6) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L0df684.  v4:= temp @kind object;
  #L0df686.  v5:= "this as java.lang.Stringâ€¦replace(oldChar, newChar)" @kind object;
  #L0df68a.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df690.  return v4 @kind object;
  #L0df692.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0df698.  v0:= temp;
  #L0df69a.  v1:= new `java.lang.StringBuilder`;
  #L0df69e.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L0df6a4.  v0:= 0I;
  #L0df6a6.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0df6ac.  v2:= temp;
  #L0df6ae.  if v0 >= v2 then goto L0df6d4;
  #L0df6b2.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L0df6b8.  v2:= temp;
  #L0df6ba.  call temp:= `equals`(v2, v5, v7) @signature `Lkotlin/text/b;.equals:(CCZ)Z` @kind static;
  #L0df6c0.  v3:= temp;
  #L0df6c2.  if v3 == 0 then goto L0df6c8;
  #L0df6c6.  v2:= v6;
  #L0df6c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df6ce.  v0:= v0 + 1;
  #L0df6d2.  goto L0df6a6;
  #L0df6d4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df6da.  v4:= temp @kind object;
  #L0df6dc.  v5:= "StringBuilder(capacity).â€¦builderAction).toString()" @kind object;
  #L0df6e0.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df6e6.  return v4 @kind object;
}
procedure `java.lang.String` `replace`(`java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `boolean` v9 ) @signature `Lkotlin/text/m;.replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0df6f8.  v0:= "<this>" @kind object;
  #L0df6fc.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df702.  v0:= "oldValue" @kind object;
  #L0df706.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df70c.  v0:= "newValue" @kind object;
  #L0df710.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df716.  v0:= 0I;
  #L0df718.  call temp:= `indexOf`(v6, v7, v0, v9) @signature `Lkotlin/text/StringsKt__StringsKt;.indexOf:(Ljava/lang/CharSequence;Ljava/lang/String;IZ)I` @kind static;
  #L0df71e.  v1:= temp;
  #L0df720.  if v1 >= 0 then goto L0df726;
  #L0df724.  return v6 @kind object;
  #L0df726.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0df72c.  v2:= temp;
  #L0df72e.  v3:= 1I;
  #L0df730.  call temp:= `coerceAtLeast`(v2, v3) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(II)I` @kind static;
  #L0df736.  v3:= temp;
  #L0df738.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0df73e.  v4:= temp;
  #L0df740.  v4:= v4 - v2 @kind int;
  #L0df742.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0df748.  v5:= temp;
  #L0df74a.  v4:= v4 + v5 @kind int;
  #L0df74c.  if v4 < 0 then goto L0df7a6;
  #L0df750.  v5:= new `java.lang.StringBuilder`;
  #L0df754.  call `<init>`(v5, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L0df75a.  call temp:= `append`(v5, v6, v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df760.  call temp:= `append`(v5, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df766.  v0:= v1 + v2 @kind int;
  #L0df76a.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0df770.  v4:= temp;
  #L0df772.  if v1 >= v4 then goto L0df784;
  #L0df776.  v1:= v1 + v3 @kind int;
  #L0df778.  call temp:= `indexOf`(v6, v7, v1, v9) @signature `Lkotlin/text/StringsKt__StringsKt;.indexOf:(Ljava/lang/CharSequence;Ljava/lang/String;IZ)I` @kind static;
  #L0df77e.  v1:= temp;
  #L0df780.  if v1 > 0 then goto L0df75a;
  #L0df784.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0df78a.  v7:= temp;
  #L0df78c.  call temp:= `append`(v5, v6, v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L0df792.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df798.  v6:= temp @kind object;
  #L0df79a.  v7:= "stringBuilder.append(this, i, length).toString()" @kind object;
  #L0df79e.  call `checkNotNullExpressionValue`(v6, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df7a4.  return v6 @kind object;
  #L0df7a6.  v6:= new `java.lang.OutOfMemoryError`;
  #L0df7aa.  call `<init>`(v6) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L0df7b0.  throw v6;
}
procedure `java.lang.String` `replace$default`(`java.lang.String` v0 @kind object, `char` v1 , `char` v2 , `boolean` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/text/m;.replace$default:(Ljava/lang/String;CCZILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0df628.  v4:= v4 ^& 4;
  #L0df62c.  if v4 == 0 then goto L0df632;
  #L0df630.  v3:= 0I;
  #L0df632.  call temp:= `replace`(v0, v1, v2, v3) @signature `Lkotlin/text/m;.replace:(Ljava/lang/String;CCZ)Ljava/lang/String;` @kind static;
  #L0df638.  v0:= temp @kind object;
  #L0df63a.  return v0 @kind object;
}
procedure `java.lang.String` `replace$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/text/m;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0df64c.  v4:= v4 ^& 4;
  #L0df650.  if v4 == 0 then goto L0df656;
  #L0df654.  v3:= 0I;
  #L0df656.  call temp:= `replace`(v0, v1, v2, v3) @signature `Lkotlin/text/m;.replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L0df65c.  v0:= temp @kind object;
  #L0df65e.  return v0 @kind object;
}
procedure `java.lang.String` `replaceFirst`(`java.lang.String` v7 @kind object, `char` v8 , `char` v9 , `boolean` v10 ) @signature `Lkotlin/text/m;.replaceFirst:(Ljava/lang/String;CCZ)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0df80c.  v0:= "<this>" @kind object;
  #L0df810.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df816.  v3:= 0I;
  #L0df818.  v5:= 2I;
  #L0df81a.  v6:= 0I;
  #L0df81c.  v1:= v7 @kind object;
  #L0df81e.  v2:= v8;
  #L0df820.  v4:= v10;
  #L0df822.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L0df828.  v8:= temp;
  #L0df82a.  if v8 >= 0 then goto L0df830;
  #L0df82e.  goto L0df84c;
  #L0df830.  v10:= v8 + 1;
  #L0df834.  call temp:= `valueOf`(v9) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L0df83a.  v9:= temp @kind object;
  #L0df83c.  call temp:= `replaceRange`(v7, v8, v10, v9) @signature `Lkotlin/text/StringsKt__StringsKt;.replaceRange:(Ljava/lang/CharSequence;IILjava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L0df842.  v7:= temp @kind object;
  #L0df844.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df84a.  v7:= temp @kind object;
  #L0df84c.  return v7 @kind object;
}
procedure `java.lang.String` `replaceFirst`(`java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `boolean` v10 ) @signature `Lkotlin/text/m;.replaceFirst:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0df860.  v0:= "<this>" @kind object;
  #L0df864.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df86a.  v0:= "oldValue" @kind object;
  #L0df86e.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df874.  v0:= "newValue" @kind object;
  #L0df878.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df87e.  v3:= 0I;
  #L0df880.  v5:= 2I;
  #L0df882.  v6:= 0I;
  #L0df884.  v1:= v7 @kind object;
  #L0df886.  v2:= v8 @kind object;
  #L0df888.  v4:= v10;
  #L0df88a.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L0df890.  v10:= temp;
  #L0df892.  if v10 >= 0 then goto L0df898;
  #L0df896.  goto L0df8b2;
  #L0df898.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0df89e.  v8:= temp;
  #L0df8a0.  v8:= v8 + v10 @kind int;
  #L0df8a2.  call temp:= `replaceRange`(v7, v10, v8, v9) @signature `Lkotlin/text/StringsKt__StringsKt;.replaceRange:(Ljava/lang/CharSequence;IILjava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L0df8a8.  v7:= temp @kind object;
  #L0df8aa.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0df8b0.  v7:= temp @kind object;
  #L0df8b2.  return v7 @kind object;
}
procedure `java.lang.String` `replaceFirst$default`(`java.lang.String` v0 @kind object, `char` v1 , `char` v2 , `boolean` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/text/m;.replaceFirst$default:(Ljava/lang/String;CCZILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0df7c4.  v4:= v4 ^& 4;
  #L0df7c8.  if v4 == 0 then goto L0df7ce;
  #L0df7cc.  v3:= 0I;
  #L0df7ce.  call temp:= `replaceFirst`(v0, v1, v2, v3) @signature `Lkotlin/text/m;.replaceFirst:(Ljava/lang/String;CCZ)Ljava/lang/String;` @kind static;
  #L0df7d4.  v0:= temp @kind object;
  #L0df7d6.  return v0 @kind object;
}
procedure `java.lang.String` `replaceFirst$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/text/m;.replaceFirst$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0df7e8.  v4:= v4 ^& 4;
  #L0df7ec.  if v4 == 0 then goto L0df7f2;
  #L0df7f0.  v3:= 0I;
  #L0df7f2.  call temp:= `replaceFirst`(v0, v1, v2, v3) @signature `Lkotlin/text/m;.replaceFirst:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L0df7f8.  v0:= temp @kind object;
  #L0df7fa.  return v0 @kind object;
}
procedure `java.util.List` `split`(`java.lang.CharSequence` v1 @kind object, `java.util.regex.Pattern` v2 @kind object, `int` v3 ) @signature `Lkotlin/text/m;.split:(Ljava/lang/CharSequence;Ljava/util/regex/Pattern;I)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0df914.  v0:= "<this>" @kind object;
  #L0df918.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df91e.  v0:= "regex" @kind object;
  #L0df922.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df928.  call `requireNonNegativeLimit`(v3) @signature `Lkotlin/text/StringsKt__StringsKt;.requireNonNegativeLimit:(I)V` @kind static;
  #L0df92e.  if v3 != 0 then goto L0df934;
  #L0df932.  v3:= -1I;
  #L0df934.  call temp:= `split`(v2, v1, v3) @signature `Ljava/util/regex/Pattern;.split:(Ljava/lang/CharSequence;I)[Ljava/lang/String;` @kind virtual;
  #L0df93a.  v1:= temp @kind object;
  #L0df93c.  v2:= "regex.split(this, if (limit == 0) -1 else limit)" @kind object;
  #L0df940.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df946.  call temp:= `asList`(v1) @signature `Lkotlin/collections/ArraysKt;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0df94c.  v1:= temp @kind object;
  #L0df94e.  return v1 @kind object;
}
procedure `java.util.List` `split$default`(`java.lang.CharSequence` v0 @kind object, `java.util.regex.Pattern` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/m;.split$default:(Ljava/lang/CharSequence;Ljava/util/regex/Pattern;IILjava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0df8f0.  v3:= v3 ^& 2;
  #L0df8f4.  if v3 == 0 then goto L0df8fa;
  #L0df8f8.  v2:= 0I;
  #L0df8fa.  call temp:= `split`(v0, v1, v2) @signature `Lkotlin/text/m;.split:(Ljava/lang/CharSequence;Ljava/util/regex/Pattern;I)Ljava/util/List;` @kind static;
  #L0df900.  v0:= temp @kind object;
  #L0df902.  return v0 @kind object;
}
procedure `boolean` `startsWith`(`java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lkotlin/text/m;.startsWith:(Ljava/lang/String;Ljava/lang/String;IZ)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0deea0.  v0:= "<this>" @kind object;
  #L0deea4.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0deeaa.  v0:= "prefix" @kind object;
  #L0deeae.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0deeb4.  if v9 != 0 then goto L0deec2;
  #L0deeb8.  call temp:= `startsWith`(v6, v7, v8) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;I)Z` @kind virtual;
  #L0deebe.  v6:= temp;
  #L0deec0.  return v6;
  #L0deec2.  v3:= 0I;
  #L0deec4.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0deeca.  v4:= temp;
  #L0deecc.  v0:= v6 @kind object;
  #L0deece.  v1:= v8;
  #L0deed0.  v2:= v7 @kind object;
  #L0deed2.  v5:= v9;
  #L0deed4.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.regionMatches:(Ljava/lang/String;ILjava/lang/String;IIZ)Z` @kind static;
  #L0deeda.  v6:= temp;
  #L0deedc.  return v6;
}
procedure `boolean` `startsWith`(`java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `boolean` v8 ) @signature `Lkotlin/text/m;.startsWith:(Ljava/lang/String;Ljava/lang/String;Z)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0dee50.  v0:= "<this>" @kind object;
  #L0dee54.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dee5a.  v0:= "prefix" @kind object;
  #L0dee5e.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dee64.  if v8 != 0 then goto L0dee72;
  #L0dee68.  call temp:= `startsWith`(v6, v7) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0dee6e.  v6:= temp;
  #L0dee70.  return v6;
  #L0dee72.  v1:= 0I;
  #L0dee74.  v3:= 0I;
  #L0dee76.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0dee7c.  v4:= temp;
  #L0dee7e.  v0:= v6 @kind object;
  #L0dee80.  v2:= v7 @kind object;
  #L0dee82.  v5:= v8;
  #L0dee84.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.regionMatches:(Ljava/lang/String;ILjava/lang/String;IIZ)Z` @kind static;
  #L0dee8a.  v6:= temp;
  #L0dee8c.  return v6;
}
procedure `boolean` `startsWith$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `boolean` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/text/m;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;IZILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0dee2c.  v4:= v4 ^& 4;
  #L0dee30.  if v4 == 0 then goto L0dee36;
  #L0dee34.  v3:= 0I;
  #L0dee36.  call temp:= `startsWith`(v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith:(Ljava/lang/String;Ljava/lang/String;IZ)Z` @kind static;
  #L0dee3c.  v0:= temp;
  #L0dee3e.  return v0;
}
procedure `boolean` `startsWith$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `boolean` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/m;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0dee08.  v3:= v3 ^& 2;
  #L0dee0c.  if v3 == 0 then goto L0dee12;
  #L0dee10.  v2:= 0I;
  #L0dee12.  call temp:= `startsWith`(v0, v1, v2) @signature `Lkotlin/text/StringsKt;.startsWith:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L0dee18.  v0:= temp;
  #L0dee1a.  return v0;
}
procedure `char`[] `toCharArray`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/text/m;.toCharArray:(Ljava/lang/String;II)[C` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0df090.  v0:= "<this>" @kind object;
  #L0df094.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0df09a.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L0df09e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0df0a4.  v1:= temp;
  #L0df0a6.  call `checkBoundsIndexes$kotlin_stdlib`(v0, v3, v4, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkBoundsIndexes$kotlin_stdlib:(III)V` @kind virtual;
  #L0df0ac.  v0:= v4 - v3 @kind int;
  #L0df0b0.  v0:= new `char`[v0];
  #L0df0b4.  v1:= 0I;
  #L0df0b6.  call `getChars`(v2, v3, v4, v0, v1) @signature `Ljava/lang/String;.getChars:(II[CI)V` @kind virtual;
  #L0df0bc.  return v0 @kind object;
}
procedure `char`[] `toCharArray$default`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/m;.toCharArray$default:(Ljava/lang/String;IIILjava/lang/Object;)[C` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0df05c.  v4:= v3 ^& 1;
  #L0df060.  if v4 == 0 then goto L0df066;
  #L0df064.  v1:= 0I;
  #L0df066.  v3:= v3 ^& 2;
  #L0df06a.  if v3 == 0 then goto L0df076;
  #L0df06e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0df074.  v2:= temp;
  #L0df076.  call temp:= `toCharArray`(v0, v1, v2) @signature `Lkotlin/text/m;.toCharArray:(Ljava/lang/String;II)[C` @kind static;
  #L0df07c.  v0:= temp @kind object;
  #L0df07e.  return v0 @kind object;
}
