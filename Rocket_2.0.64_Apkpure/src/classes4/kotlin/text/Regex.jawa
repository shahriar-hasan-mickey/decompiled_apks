record `kotlin.text.Regex` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `java.util.regex.Pattern` `kotlin.text.Regex.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `kotlin.text.Regex.b` @AccessFlag PRIVATE;
}
global `kotlin.text.Regex$Companion` `@@kotlin.text.Regex.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/text/Regex;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0dd91c.  v0:= new `kotlin.text.Regex$Companion`;
  #L0dd920.  v1:= 0I;
  #L0dd922.  call `<init>`(v0, v1) @signature `Lkotlin/text/Regex$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0dd928.  `@@kotlin.text.Regex.Companion` @type ^`kotlin.text.Regex$Companion` := v0 @kind object;
  #L0dd92c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0dd940.  v0:= "pattern" @kind object;
  #L0dd944.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd94a.  call temp:= `compile`(v2) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L0dd950.  v2:= temp @kind object;
  #L0dd952.  v0:= "compile(pattern)" @kind object;
  #L0dd956.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd95c.  call `<init>`(v1, v2) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L0dd962.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.Set` v3 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;Ljava/util/Set;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0dd974.  v0:= "pattern" @kind object;
  #L0dd978.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd97e.  v0:= "options" @kind object;
  #L0dd982.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd988.  v0:= `@@kotlin.text.Regex.Companion` @type ^`kotlin.text.Regex$Companion` @kind object;
  #L0dd98c.  call temp:= `access$toInt`(v3) @signature `Lkotlin/text/RegexKt;.access$toInt:(Ljava/lang/Iterable;)I` @kind static;
  #L0dd992.  v3:= temp;
  #L0dd994.  call temp:= `access$ensureUnicodeCase`(v0, v3) @signature `Lkotlin/text/Regex$Companion;.access$ensureUnicodeCase:(Lkotlin/text/Regex$Companion;I)I` @kind static;
  #L0dd99a.  v3:= temp;
  #L0dd99c.  call temp:= `compile`(v2, v3) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L0dd9a2.  v2:= temp @kind object;
  #L0dd9a4.  v3:= "compile(pattern, ensureUâ€¦odeCase(options.toInt()))" @kind object;
  #L0dd9a8.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd9ae.  call `<init>`(v1, v2) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L0dd9b4.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.lang.String` v2 @kind object, `kotlin.text.RegexOption` v3 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;Lkotlin/text/RegexOption;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0dd9c8.  v0:= "pattern" @kind object;
  #L0dd9cc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd9d2.  v0:= "option" @kind object;
  #L0dd9d6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd9dc.  v0:= `@@kotlin.text.Regex.Companion` @type ^`kotlin.text.Regex$Companion` @kind object;
  #L0dd9e0.  call temp:= `getValue`(v3) @signature `Lkotlin/text/RegexOption;.getValue:()I` @kind virtual;
  #L0dd9e6.  v3:= temp;
  #L0dd9e8.  call temp:= `access$ensureUnicodeCase`(v0, v3) @signature `Lkotlin/text/Regex$Companion;.access$ensureUnicodeCase:(Lkotlin/text/Regex$Companion;I)I` @kind static;
  #L0dd9ee.  v3:= temp;
  #L0dd9f0.  call temp:= `compile`(v2, v3) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L0dd9f6.  v2:= temp @kind object;
  #L0dd9f8.  v3:= "compile(pattern, ensureUnicodeCase(option.value))" @kind object;
  #L0dd9fc.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dda02.  call `<init>`(v1, v2) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L0dda08.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.util.regex.Pattern` v2 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0dda1c.  v0:= "nativePattern" @kind object;
  #L0dda20.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dda26.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0dda2c.  v1.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` := v2 @kind object;
  #L0dda30.  return @kind void;
}
procedure `java.util.regex.Pattern` `access$getNativePattern$p`(`kotlin.text.Regex` v0 @kind object) @signature `Lkotlin/text/Regex;.access$getNativePattern$p:(Lkotlin/text/Regex;)Ljava/util/regex/Pattern;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0dd6d8.  v0:= v0.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd6dc.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `find$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.find$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0dd810.  v3:= v3 ^& 2;
  #L0dd814.  if v3 == 0 then goto L0dd81a;
  #L0dd818.  v2:= 0I;
  #L0dd81a.  call temp:= `find`(v0, v1, v2) @signature `Lkotlin/text/Regex;.find:(Ljava/lang/CharSequence;I)Lkotlin/text/MatchResult;` @kind virtual;
  #L0dd820.  v0:= temp @kind object;
  #L0dd822.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `findAll$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.findAll$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0dd708.  v3:= v3 ^& 2;
  #L0dd70c.  if v3 == 0 then goto L0dd712;
  #L0dd710.  v2:= 0I;
  #L0dd712.  call temp:= `findAll`(v0, v1, v2) @signature `Lkotlin/text/Regex;.findAll:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @kind virtual;
  #L0dd718.  v0:= temp @kind object;
  #L0dd71a.  return v0 @kind object;
}
procedure `java.util.List` `split$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.split$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0dd57c.  v3:= v3 ^& 2;
  #L0dd580.  if v3 == 0 then goto L0dd586;
  #L0dd584.  v2:= 0I;
  #L0dd586.  call temp:= `split`(v0, v1, v2) @signature `Lkotlin/text/Regex;.split:(Ljava/lang/CharSequence;I)Ljava/util/List;` @kind virtual;
  #L0dd58c.  v0:= temp @kind object;
  #L0dd58e.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `splitToSequence$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.splitToSequence$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0dd7b4.  v3:= v3 ^& 2;
  #L0dd7b8.  if v3 == 0 then goto L0dd7be;
  #L0dd7bc.  v2:= 0I;
  #L0dd7be.  call temp:= `splitToSequence`(v0, v1, v2) @signature `Lkotlin/text/Regex;.splitToSequence:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @kind virtual;
  #L0dd7c4.  v0:= temp @kind object;
  #L0dd7c6.  return v0 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.text.Regex` v3 @kind this) @signature `Lkotlin/text/Regex;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0dd398.  v0:= new `kotlin.text.Regex$Serialized`;
  #L0dd39c.  v1:= v3.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd3a0.  call temp:= `pattern`(v1) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L0dd3a6.  v1:= temp @kind object;
  #L0dd3a8.  v2:= "nativePattern.pattern()" @kind object;
  #L0dd3ac.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd3b2.  v2:= v3.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd3b6.  call temp:= `flags`(v2) @signature `Ljava/util/regex/Pattern;.flags:()I` @kind virtual;
  #L0dd3bc.  v2:= temp;
  #L0dd3be.  call `<init>`(v0, v1, v2) @signature `Lkotlin/text/Regex$Serialized;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0dd3c4.  return v0 @kind object;
}
procedure `boolean` `containsMatchIn`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/Regex;.containsMatchIn:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dd2e4.  v0:= "input" @kind object;
  #L0dd2e8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd2ee.  v0:= v1.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd2f2.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd2f8.  v2:= temp @kind object;
  #L0dd2fa.  call temp:= `find`(v2) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L0dd300.  v2:= temp;
  #L0dd302.  return v2;
}
procedure `kotlin.text.MatchResult` `find`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.find:(Ljava/lang/CharSequence;I)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0dd834.  v0:= "input" @kind object;
  #L0dd838.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd83e.  v0:= v2.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd842.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd848.  v0:= temp @kind object;
  #L0dd84a.  v1:= "nativePattern.matcher(input)" @kind object;
  #L0dd84e.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd854.  call temp:= `access$findNext`(v0, v4, v3) @signature `Lkotlin/text/RegexKt;.access$findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L0dd85a.  v3:= temp @kind object;
  #L0dd85c.  return v3 @kind object;
}
procedure `kotlin.sequences.Sequence` `findAll`(`kotlin.text.Regex` v3 @kind this, `java.lang.CharSequence` v4 @kind object, `int` v5 ) @signature `Lkotlin/text/Regex;.findAll:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0dd72c.  v0:= "input" @kind object;
  #L0dd730.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd736.  if v5 < 0 then goto L0dd75e;
  #L0dd73a.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dd740.  v0:= temp;
  #L0dd742.  if v5 > v0 then goto L0dd75e;
  #L0dd746.  v0:= new `kotlin.text.Regex$a`;
  #L0dd74a.  call `<init>`(v0, v3, v4, v5) @signature `Lkotlin/text/Regex$a;.<init>:(Lkotlin/text/Regex;Ljava/lang/CharSequence;I)V` @kind direct;
  #L0dd750.  v4:= `@@kotlin.text.Regex$b.a` @type ^`kotlin.text.Regex$b` @kind object;
  #L0dd754.  call temp:= `generateSequence`(v0, v4) @signature `Lkotlin/sequences/SequencesKt;.generateSequence:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L0dd75a.  v4:= temp @kind object;
  #L0dd75c.  return v4 @kind object;
  #L0dd75e.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L0dd762.  v1:= new `java.lang.StringBuilder`;
  #L0dd766.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0dd76c.  v2:= "Start index out of bounds: " @kind object;
  #L0dd770.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dd776.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dd77c.  v5:= ", input length: " @kind object;
  #L0dd780.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dd786.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dd78c.  v4:= temp;
  #L0dd78e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dd794.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dd79a.  v4:= temp @kind object;
  #L0dd79c.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0dd7a2.  throw v0;
}
procedure `java.util.Set` `getOptions`(`kotlin.text.Regex` v3 @kind this) @signature `Lkotlin/text/Regex;.getOptions:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0dd674.  v0:= v3.`kotlin.text.Regex.b` @type ^`java.util.Set` @kind object;
  #L0dd678.  if v0 != 0 then goto L0dd6c4;
  #L0dd67c.  v0:= v3.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd680.  call temp:= `flags`(v0) @signature `Ljava/util/regex/Pattern;.flags:()I` @kind virtual;
  #L0dd686.  v0:= temp;
  #L0dd688.  v1:= constclass @type ^`kotlin.text.RegexOption` @kind object;
  #L0dd68c.  call temp:= `allOf`(v1) @signature `Ljava/util/EnumSet;.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;` @kind static;
  #L0dd692.  v1:= temp @kind object;
  #L0dd694.  v2:= "" @kind object;
  #L0dd698.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd69e.  v2:= new `kotlin.text.Regex$special$$inlined$fromInt$1`;
  #L0dd6a2.  call `<init>`(v2, v0) @signature `Lkotlin/text/Regex$special$$inlined$fromInt$1;.<init>:(I)V` @kind direct;
  #L0dd6a8.  call temp:= `retainAll`(v1, v2) @signature `Lkotlin/collections/CollectionsKt;.retainAll:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Z` @kind static;
  #L0dd6ae.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L0dd6b4.  v0:= temp @kind object;
  #L0dd6b6.  v1:= "unmodifiableSet(EnumSet.â€¦mask == it.value }\n    })" @kind object;
  #L0dd6ba.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd6c0.  v3.`kotlin.text.Regex.b` @type ^`java.util.Set` := v0 @kind object;
  #L0dd6c4.  return v0 @kind object;
}
procedure `java.lang.String` `getPattern`(`kotlin.text.Regex` v2 @kind this) @signature `Lkotlin/text/Regex;.getPattern:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0dd3d8.  v0:= v2.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd3dc.  call temp:= `pattern`(v0) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L0dd3e2.  v0:= temp @kind object;
  #L0dd3e4.  v1:= "nativePattern.pattern()" @kind object;
  #L0dd3e8.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd3ee.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `matchAt`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.matchAt:(Ljava/lang/CharSequence;I)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0dd870.  v0:= "input" @kind object;
  #L0dd874.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd87a.  v0:= v2.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd87e.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd884.  v0:= temp @kind object;
  #L0dd886.  v1:= 0I;
  #L0dd888.  call temp:= `useAnchoringBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useAnchoringBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd88e.  v0:= temp @kind object;
  #L0dd890.  v1:= 1I;
  #L0dd892.  call temp:= `useTransparentBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useTransparentBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd898.  v0:= temp @kind object;
  #L0dd89a.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dd8a0.  v1:= temp;
  #L0dd8a2.  call temp:= `region`(v0, v4, v1) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd8a8.  v4:= temp @kind object;
  #L0dd8aa.  call temp:= `lookingAt`(v4) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L0dd8b0.  v0:= temp;
  #L0dd8b2.  if v0 == 0 then goto L0dd8cc;
  #L0dd8b6.  v0:= new `kotlin.text.MatcherMatchResult`;
  #L0dd8ba.  v1:= "this" @kind object;
  #L0dd8be.  call `checkNotNullExpressionValue`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd8c4.  call `<init>`(v0, v4, v3) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @kind direct;
  #L0dd8ca.  goto L0dd8ce;
  #L0dd8cc.  v0:= 0I;
  #L0dd8ce.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `matchEntire`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object) @signature `Lkotlin/text/Regex;.matchEntire:(Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0dd8e0.  v0:= "input" @kind object;
  #L0dd8e4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd8ea.  v0:= v2.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd8ee.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd8f4.  v0:= temp @kind object;
  #L0dd8f6.  v1:= "nativePattern.matcher(input)" @kind object;
  #L0dd8fa.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd900.  call temp:= `access$matchEntire`(v0, v3) @signature `Lkotlin/text/RegexKt;.access$matchEntire:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L0dd906.  v3:= temp @kind object;
  #L0dd908.  return v3 @kind object;
}
procedure `boolean` `matches`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dd314.  v0:= "input" @kind object;
  #L0dd318.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd31e.  v0:= v1.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd322.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd328.  v2:= temp @kind object;
  #L0dd32a.  call temp:= `matches`(v2) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L0dd330.  v2:= temp;
  #L0dd332.  return v2;
}
procedure `boolean` `matchesAt`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.matchesAt:(Ljava/lang/CharSequence;I)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0dd344.  v0:= "input" @kind object;
  #L0dd348.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd34e.  v0:= v2.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd352.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd358.  v0:= temp @kind object;
  #L0dd35a.  v1:= 0I;
  #L0dd35c.  call temp:= `useAnchoringBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useAnchoringBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd362.  v0:= temp @kind object;
  #L0dd364.  v1:= 1I;
  #L0dd366.  call temp:= `useTransparentBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useTransparentBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd36c.  v0:= temp @kind object;
  #L0dd36e.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dd374.  v3:= temp;
  #L0dd376.  call temp:= `region`(v0, v4, v3) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd37c.  v3:= temp @kind object;
  #L0dd37e.  call temp:= `lookingAt`(v3) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L0dd384.  v3:= temp;
  #L0dd386.  return v3;
}
procedure `java.lang.String` `replace`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlin/text/Regex;.replace:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dd400.  v0:= "input" @kind object;
  #L0dd404.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd40a.  v0:= "replacement" @kind object;
  #L0dd40e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd414.  v0:= v1.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd418.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd41e.  v2:= temp @kind object;
  #L0dd420.  call temp:= `replaceAll`(v2, v3) @signature `Ljava/util/regex/Matcher;.replaceAll:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L0dd426.  v2:= temp @kind object;
  #L0dd428.  v3:= "nativePattern.matcher(inâ€¦).replaceAll(replacement)" @kind object;
  #L0dd42c.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd432.  return v2 @kind object;
}
procedure `java.lang.String` `replace`(`kotlin.text.Regex` v5 @kind this, `java.lang.CharSequence` v6 @kind object, `kotlin.jvm.functions.Function1` v7 @kind object) @signature `Lkotlin/text/Regex;.replace:(Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0dd444.  v0:= "input" @kind object;
  #L0dd448.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd44e.  v0:= "transform" @kind object;
  #L0dd452.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd458.  v0:= 0I;
  #L0dd45a.  v1:= 2I;
  #L0dd45c.  v2:= 0I;
  #L0dd45e.  call temp:= `find$default`(v5, v6, v0, v1, v2) @signature `Lkotlin/text/Regex;.find$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/text/MatchResult;` @kind static;
  #L0dd464.  v1:= temp @kind object;
  #L0dd466.  if v1 != 0 then goto L0dd474;
  #L0dd46a.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dd470.  v6:= temp @kind object;
  #L0dd472.  return v6 @kind object;
  #L0dd474.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dd47a.  v2:= temp;
  #L0dd47c.  v3:= new `java.lang.StringBuilder`;
  #L0dd480.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L0dd486.  call temp:= `getRange`(v1) @signature `Lkotlin/text/MatchResult;.getRange:()Lkotlin/ranges/IntRange;` @kind interface;
  #L0dd48c.  v4:= temp @kind object;
  #L0dd48e.  call temp:= `getStart`(v4) @signature `Lkotlin/ranges/IntRange;.getStart:()Ljava/lang/Integer;` @kind virtual;
  #L0dd494.  v4:= temp @kind object;
  #L0dd496.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L0dd49c.  v4:= temp;
  #L0dd49e.  call temp:= `append`(v3, v6, v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dd4a4.  call temp:= `invoke`(v7, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0dd4aa.  v0:= temp @kind object;
  #L0dd4ac.  v0:= (`java.lang.CharSequence`) v0 @kind object;
  #L0dd4b0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dd4b6.  call temp:= `getRange`(v1) @signature `Lkotlin/text/MatchResult;.getRange:()Lkotlin/ranges/IntRange;` @kind interface;
  #L0dd4bc.  v0:= temp @kind object;
  #L0dd4be.  call temp:= `getEndInclusive`(v0) @signature `Lkotlin/ranges/IntRange;.getEndInclusive:()Ljava/lang/Integer;` @kind virtual;
  #L0dd4c4.  v0:= temp @kind object;
  #L0dd4c6.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L0dd4cc.  v0:= temp;
  #L0dd4ce.  v0:= v0 + 1;
  #L0dd4d2.  call temp:= `next`(v1) @signature `Lkotlin/text/MatchResult;.next:()Lkotlin/text/MatchResult;` @kind interface;
  #L0dd4d8.  v1:= temp @kind object;
  #L0dd4da.  if v0 >= v2 then goto L0dd4e2;
  #L0dd4de.  if v1 != 0 then goto L0dd486;
  #L0dd4e2.  if v0 >= v2 then goto L0dd4ec;
  #L0dd4e6.  call temp:= `append`(v3, v6, v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dd4ec.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dd4f2.  v6:= temp @kind object;
  #L0dd4f4.  v7:= "sb.toString()" @kind object;
  #L0dd4f8.  call `checkNotNullExpressionValue`(v6, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd4fe.  return v6 @kind object;
}
procedure `java.lang.String` `replaceFirst`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlin/text/Regex;.replaceFirst:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dd510.  v0:= "input" @kind object;
  #L0dd514.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd51a.  v0:= "replacement" @kind object;
  #L0dd51e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd524.  v0:= v1.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd528.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd52e.  v2:= temp @kind object;
  #L0dd530.  call temp:= `replaceFirst`(v2, v3) @signature `Ljava/util/regex/Matcher;.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L0dd536.  v2:= temp @kind object;
  #L0dd538.  v3:= "nativePattern.matcher(inâ€¦replaceFirst(replacement)" @kind object;
  #L0dd53c.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd542.  return v2 @kind object;
}
procedure `java.util.List` `split`(`kotlin.text.Regex` v4 @kind this, `java.lang.CharSequence` v5 @kind object, `int` v6 ) @signature `Lkotlin/text/Regex;.split:(Ljava/lang/CharSequence;I)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0dd5a0.  v0:= "input" @kind object;
  #L0dd5a4.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd5aa.  call `requireNonNegativeLimit`(v6) @signature `Lkotlin/text/StringsKt__StringsKt;.requireNonNegativeLimit:(I)V` @kind static;
  #L0dd5b0.  v0:= v4.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd5b4.  call temp:= `matcher`(v0, v5) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dd5ba.  v0:= temp @kind object;
  #L0dd5bc.  v1:= 1I;
  #L0dd5be.  if v6 == v1 then goto L0dd650;
  #L0dd5c2.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L0dd5c8.  v2:= temp;
  #L0dd5ca.  if v2 != 0 then goto L0dd5d0;
  #L0dd5ce.  goto L0dd650;
  #L0dd5d0.  v2:= new `java.util.ArrayList`;
  #L0dd5d4.  v3:= 10I;
  #L0dd5d8.  if v6 <= 0 then goto L0dd5e4;
  #L0dd5dc.  call temp:= `coerceAtMost`(v6, v3) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L0dd5e2.  v3:= temp;
  #L0dd5e4.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0dd5ea.  v3:= 0I;
  #L0dd5ec.  v6:= v6 - v1 @kind int;
  #L0dd5ee.  call temp:= `start`(v0) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L0dd5f4.  v1:= temp;
  #L0dd5f6.  call temp:= `subSequence`(v5, v3, v1) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L0dd5fc.  v1:= temp @kind object;
  #L0dd5fe.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dd604.  v1:= temp @kind object;
  #L0dd606.  call temp:= `add`(v2, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0dd60c.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L0dd612.  v3:= temp;
  #L0dd614.  if v6 < 0 then goto L0dd624;
  #L0dd618.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L0dd61e.  v1:= temp;
  #L0dd620.  if v1 == v6 then goto L0dd630;
  #L0dd624.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L0dd62a.  v1:= temp;
  #L0dd62c.  if v1 != 0 then goto L0dd5ee;
  #L0dd630.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dd636.  v6:= temp;
  #L0dd638.  call temp:= `subSequence`(v5, v3, v6) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L0dd63e.  v5:= temp @kind object;
  #L0dd640.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dd646.  v5:= temp @kind object;
  #L0dd648.  call temp:= `add`(v2, v5) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0dd64e.  return v2 @kind object;
  #L0dd650.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dd656.  v5:= temp @kind object;
  #L0dd658.  call temp:= `listOf`(v5) @signature `Lkotlin/collections/CollectionsKt;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0dd65e.  v5:= temp @kind object;
  #L0dd660.  return v5 @kind object;
}
procedure `kotlin.sequences.Sequence` `splitToSequence`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.splitToSequence:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0dd7d8.  v0:= "input" @kind object;
  #L0dd7dc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd7e2.  call `requireNonNegativeLimit`(v4) @signature `Lkotlin/text/StringsKt__StringsKt;.requireNonNegativeLimit:(I)V` @kind static;
  #L0dd7e8.  v0:= new `kotlin.text.Regex$c`;
  #L0dd7ec.  v1:= 0I;
  #L0dd7ee.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lkotlin/text/Regex$c;.<init>:(Lkotlin/text/Regex;Ljava/lang/CharSequence;ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0dd7f4.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L0dd7fa.  v3:= temp @kind object;
  #L0dd7fc.  return v3 @kind object;
}
procedure `java.util.regex.Pattern` `toPattern`(`kotlin.text.Regex` v1 @kind this) @signature `Lkotlin/text/Regex;.toPattern:()Ljava/util/regex/Pattern;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dd6f0.  v0:= v1.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd6f4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.text.Regex` v2 @kind this) @signature `Lkotlin/text/Regex;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0dd554.  v0:= v2.`kotlin.text.Regex.a` @type ^`java.util.regex.Pattern` @kind object;
  #L0dd558.  call temp:= `toString`(v0) @signature `Ljava/util/regex/Pattern;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dd55e.  v0:= temp @kind object;
  #L0dd560.  v1:= "nativePattern.toString()" @kind object;
  #L0dd564.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dd56a.  return v0 @kind object;
}
