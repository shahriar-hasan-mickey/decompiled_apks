record `kotlin.text.MatcherMatchResult` @kind class @AccessFlag FINAL extends `kotlin.text.MatchResult` @kind interface {
  `java.util.regex.Matcher` `kotlin.text.MatcherMatchResult.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.CharSequence` `kotlin.text.MatcherMatchResult.b` @AccessFlag PRIVATE_FINAL;
  `kotlin.text.MatchGroupCollection` `kotlin.text.MatcherMatchResult.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `kotlin.text.MatcherMatchResult.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.text.MatcherMatchResult` v1 @kind this, `java.util.regex.Matcher` v2 @kind object, `java.lang.CharSequence` v3 @kind object) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0dc958.  v0:= "matcher" @kind object;
  #L0dc95c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dc962.  v0:= "input" @kind object;
  #L0dc966.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dc96c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0dc972.  v1.`kotlin.text.MatcherMatchResult.a` @type ^`java.util.regex.Matcher` := v2 @kind object;
  #L0dc976.  v1.`kotlin.text.MatcherMatchResult.b` @type ^`java.lang.CharSequence` := v3 @kind object;
  #L0dc97a.  v2:= new `kotlin.text.MatcherMatchResult$groups$1`;
  #L0dc97e.  call `<init>`(v2, v1) @signature `Lkotlin/text/MatcherMatchResult$groups$1;.<init>:(Lkotlin/text/MatcherMatchResult;)V` @kind direct;
  #L0dc984.  v1.`kotlin.text.MatcherMatchResult.c` @type ^`kotlin.text.MatchGroupCollection` := v2 @kind object;
  #L0dc988.  return @kind void;
}
procedure `java.util.regex.MatchResult` `a`(`kotlin.text.MatcherMatchResult` v0 @kind object) @signature `Lkotlin/text/MatcherMatchResult;.a:(Lkotlin/text/MatcherMatchResult;)Ljava/util/regex/MatchResult;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0dc83c.  call temp:= `b`(v0) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L0dc842.  v0:= temp @kind object;
  #L0dc844.  return v0 @kind object;
}
procedure `java.util.regex.MatchResult` `b`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0dc858.  v0:= v1.`kotlin.text.MatcherMatchResult.a` @type ^`java.util.regex.Matcher` @kind object;
  #L0dc85c.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult$Destructured` `getDestructured`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getDestructured:()Lkotlin/text/MatchResult$Destructured;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0dc93c.  call temp:= `getDestructured`(v1) @signature `Lkotlin/text/MatchResult$DefaultImpls;.getDestructured:(Lkotlin/text/MatchResult;)Lkotlin/text/MatchResult$Destructured;` @kind static;
  #L0dc942.  v0:= temp @kind object;
  #L0dc944.  return v0 @kind object;
}
procedure `java.util.List` `getGroupValues`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getGroupValues:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0dc808.  v0:= v1.`kotlin.text.MatcherMatchResult.d` @type ^`java.util.List` @kind object;
  #L0dc80c.  if v0 != 0 then goto L0dc81e;
  #L0dc810.  v0:= new `kotlin.text.MatcherMatchResult$groupValues$1`;
  #L0dc814.  call `<init>`(v0, v1) @signature `Lkotlin/text/MatcherMatchResult$groupValues$1;.<init>:(Lkotlin/text/MatcherMatchResult;)V` @kind direct;
  #L0dc81a.  v1.`kotlin.text.MatcherMatchResult.d` @type ^`java.util.List` := v0 @kind object;
  #L0dc81e.  v0:= v1.`kotlin.text.MatcherMatchResult.d` @type ^`java.util.List` @kind object;
  #L0dc822.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0dc828.  return v0 @kind object;
}
procedure `kotlin.text.MatchGroupCollection` `getGroups`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getGroups:()Lkotlin/text/MatchGroupCollection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0dc894.  v0:= v1.`kotlin.text.MatcherMatchResult.c` @type ^`kotlin.text.MatchGroupCollection` @kind object;
  #L0dc898.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `getRange`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getRange:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0dc870.  call temp:= `b`(v1) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L0dc876.  v0:= temp @kind object;
  #L0dc878.  call temp:= `access$range`(v0) @signature `Lkotlin/text/RegexKt;.access$range:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @kind static;
  #L0dc87e.  v0:= temp @kind object;
  #L0dc880.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`kotlin.text.MatcherMatchResult` v2 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0dc7dc.  call temp:= `b`(v2) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L0dc7e2.  v0:= temp @kind object;
  #L0dc7e4.  call temp:= `group`(v0) @signature `Ljava/util/regex/MatchResult;.group:()Ljava/lang/String;` @kind interface;
  #L0dc7ea.  v0:= temp @kind object;
  #L0dc7ec.  v1:= "matchResult.group()" @kind object;
  #L0dc7f0.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dc7f6.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `next`(`kotlin.text.MatcherMatchResult` v3 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.next:()Lkotlin/text/MatchResult;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0dc8ac.  call temp:= `b`(v3) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L0dc8b2.  v0:= temp @kind object;
  #L0dc8b4.  call temp:= `end`(v0) @signature `Ljava/util/regex/MatchResult;.end:()I` @kind interface;
  #L0dc8ba.  v0:= temp;
  #L0dc8bc.  call temp:= `b`(v3) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L0dc8c2.  v1:= temp @kind object;
  #L0dc8c4.  call temp:= `end`(v1) @signature `Ljava/util/regex/MatchResult;.end:()I` @kind interface;
  #L0dc8ca.  v1:= temp;
  #L0dc8cc.  call temp:= `b`(v3) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L0dc8d2.  v2:= temp @kind object;
  #L0dc8d4.  call temp:= `start`(v2) @signature `Ljava/util/regex/MatchResult;.start:()I` @kind interface;
  #L0dc8da.  v2:= temp;
  #L0dc8dc.  if v1 != v2 then goto L0dc8e4;
  #L0dc8e0.  v1:= 1I;
  #L0dc8e2.  goto L0dc8e6;
  #L0dc8e4.  v1:= 0I;
  #L0dc8e6.  v0:= v0 + v1 @kind int;
  #L0dc8e8.  v1:= v3.`kotlin.text.MatcherMatchResult.b` @type ^`java.lang.CharSequence` @kind object;
  #L0dc8ec.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dc8f2.  v1:= temp;
  #L0dc8f4.  if v0 > v1 then goto L0dc928;
  #L0dc8f8.  v1:= v3.`kotlin.text.MatcherMatchResult.a` @type ^`java.util.regex.Matcher` @kind object;
  #L0dc8fc.  call temp:= `pattern`(v1) @signature `Ljava/util/regex/Matcher;.pattern:()Ljava/util/regex/Pattern;` @kind virtual;
  #L0dc902.  v1:= temp @kind object;
  #L0dc904.  v2:= v3.`kotlin.text.MatcherMatchResult.b` @type ^`java.lang.CharSequence` @kind object;
  #L0dc908.  call temp:= `matcher`(v1, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dc90e.  v1:= temp @kind object;
  #L0dc910.  v2:= "matcher.pattern().matcher(input)" @kind object;
  #L0dc914.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dc91a.  v2:= v3.`kotlin.text.MatcherMatchResult.b` @type ^`java.lang.CharSequence` @kind object;
  #L0dc91e.  call temp:= `access$findNext`(v1, v0, v2) @signature `Lkotlin/text/RegexKt;.access$findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L0dc924.  v0:= temp @kind object;
  #L0dc926.  goto L0dc92a;
  #L0dc928.  v0:= 0I;
  #L0dc92a.  return v0 @kind object;
}
