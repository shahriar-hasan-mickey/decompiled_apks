record `kotlin.text.k` @kind class @AccessFlag  extends `kotlin.text.j` @kind class {
}
procedure `void` `<init>`(`kotlin.text.k` v0 @kind this) @signature `Lkotlin/text/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0de778.  call `<init>`(v0) @signature `Lkotlin/text/j;.<init>:()V` @kind direct;
  #L0de77e.  return @kind void;
}
procedure `java.math.BigDecimal` `toBigDecimalOrNull`(`java.lang.String` v2 @kind object) @signature `Lkotlin/text/k;.toBigDecimalOrNull:(Ljava/lang/String;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0de61c.  v0:= "<this>" @kind object;
  #L0de620.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de626.  v0:= 0I;
  #L0de628.  v1:= `@@kotlin.text.d.b` @type ^`kotlin.text.Regex` @kind object;
  #L0de62c.  call temp:= `matches`(v1, v2) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L0de632.  v1:= temp;
  #L0de634.  if v1 == 0 then goto L0de644;
  #L0de638.  v1:= new `java.math.BigDecimal`;
  #L0de63c.  call `<init>`(v1, v2) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0de642.  v0:= v1 @kind object;
  #L0de644.  return v0 @kind object;
  catch `java.lang.NumberFormatException` @[L0de628..L0de642] goto L0de644;
}
procedure `java.math.BigDecimal` `toBigDecimalOrNull`(`java.lang.String` v2 @kind object, `java.math.MathContext` v3 @kind object) @signature `Lkotlin/text/k;.toBigDecimalOrNull:(Ljava/lang/String;Ljava/math/MathContext;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0de668.  v0:= "<this>" @kind object;
  #L0de66c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de672.  v0:= "mathContext" @kind object;
  #L0de676.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de67c.  v0:= 0I;
  #L0de67e.  v1:= `@@kotlin.text.d.b` @type ^`kotlin.text.Regex` @kind object;
  #L0de682.  call temp:= `matches`(v1, v2) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L0de688.  v1:= temp;
  #L0de68a.  if v1 == 0 then goto L0de69a;
  #L0de68e.  v1:= new `java.math.BigDecimal`;
  #L0de692.  call `<init>`(v1, v2, v3) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;Ljava/math/MathContext;)V` @kind direct;
  #L0de698.  v0:= v1 @kind object;
  #L0de69a.  return v0 @kind object;
  catch `java.lang.NumberFormatException` @[L0de67e..L0de698] goto L0de69a;
}
procedure `java.math.BigInteger` `toBigIntegerOrNull`(`java.lang.String` v1 @kind object) @signature `Lkotlin/text/k;.toBigIntegerOrNull:(Ljava/lang/String;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0de6bc.  v0:= "<this>" @kind object;
  #L0de6c0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de6c6.  v0:= 10I;
  #L0de6ca.  call temp:= `toBigIntegerOrNull`(v1, v0) @signature `Lkotlin/text/k;.toBigIntegerOrNull:(Ljava/lang/String;I)Ljava/math/BigInteger;` @kind static;
  #L0de6d0.  v1:= temp @kind object;
  #L0de6d2.  return v1 @kind object;
}
procedure `java.math.BigInteger` `toBigIntegerOrNull`(`java.lang.String` v6 @kind object, `int` v7 ) @signature `Lkotlin/text/k;.toBigIntegerOrNull:(Ljava/lang/String;I)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0de6e4.  v0:= "<this>" @kind object;
  #L0de6e8.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de6ee.  call temp:= `checkRadix`(v7) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L0de6f4.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0de6fa.  v0:= temp;
  #L0de6fc.  v1:= 0I;
  #L0de6fe.  if v0 == 0 then goto L0de766;
  #L0de702.  v2:= 0I;
  #L0de704.  v3:= 1I;
  #L0de706.  if v0 == v3 then goto L0de73c;
  #L0de70a.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0de710.  v4:= temp;
  #L0de712.  v5:= 45I;
  #L0de716.  if v4 != v5 then goto L0de71c;
  #L0de71a.  v2:= 1I;
  #L0de71c.  if v2 >= v0 then goto L0de752;
  #L0de720.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0de726.  v3:= temp;
  #L0de728.  call temp:= `digitOf`(v3, v7) @signature `Lkotlin/text/a;.digitOf:(CI)I` @kind static;
  #L0de72e.  v3:= temp;
  #L0de730.  if v3 >= 0 then goto L0de736;
  #L0de734.  return v1 @kind object;
  #L0de736.  v2:= v2 + 1;
  #L0de73a.  goto L0de71c;
  #L0de73c.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0de742.  v0:= temp;
  #L0de744.  call temp:= `digitOf`(v0, v7) @signature `Lkotlin/text/a;.digitOf:(CI)I` @kind static;
  #L0de74a.  v0:= temp;
  #L0de74c.  if v0 >= 0 then goto L0de752;
  #L0de750.  return v1 @kind object;
  #L0de752.  v0:= new `java.math.BigInteger`;
  #L0de756.  call temp:= `checkRadix`(v7) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L0de75c.  v7:= temp;
  #L0de75e.  call `<init>`(v0, v6, v7) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0de764.  return v0 @kind object;
  #L0de766.  return v1 @kind object;
}
procedure `java.lang.Double` `toDoubleOrNull`(`java.lang.String` v3 @kind object) @signature `Lkotlin/text/k;.toDoubleOrNull:(Ljava/lang/String;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0de57c.  v0:= "<this>" @kind object;
  #L0de580.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de586.  v0:= 0I;
  #L0de588.  v1:= `@@kotlin.text.d.b` @type ^`kotlin.text.Regex` @kind object;
  #L0de58c.  call temp:= `matches`(v1, v3) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L0de592.  v1:= temp;
  #L0de594.  if v1 == 0 then goto L0de5aa;
  #L0de598.  call temp:= `parseDouble`(v3) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L0de59e.  v1:= temp @kind wide;
  #L0de5a0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L0de5a6.  v3:= temp @kind object;
  #L0de5a8.  v0:= v3 @kind object;
  #L0de5aa.  return v0 @kind object;
  catch `java.lang.NumberFormatException` @[L0de588..L0de5a8] goto L0de5aa;
}
procedure `java.lang.Float` `toFloatOrNull`(`java.lang.String` v2 @kind object) @signature `Lkotlin/text/k;.toFloatOrNull:(Ljava/lang/String;)Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0de5cc.  v0:= "<this>" @kind object;
  #L0de5d0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0de5d6.  v0:= 0I;
  #L0de5d8.  v1:= `@@kotlin.text.d.b` @type ^`kotlin.text.Regex` @kind object;
  #L0de5dc.  call temp:= `matches`(v1, v2) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L0de5e2.  v1:= temp;
  #L0de5e4.  if v1 == 0 then goto L0de5fa;
  #L0de5e8.  call temp:= `parseFloat`(v2) @signature `Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F` @kind static;
  #L0de5ee.  v2:= temp;
  #L0de5f0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L0de5f6.  v2:= temp @kind object;
  #L0de5f8.  v0:= v2 @kind object;
  #L0de5fa.  return v0 @kind object;
  catch `java.lang.NumberFormatException` @[L0de5d8..L0de5f8] goto L0de5fa;
}
