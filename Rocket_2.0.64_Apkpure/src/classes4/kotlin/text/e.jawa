record `kotlin.text.e` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.text.e` v0 @kind this) @signature `Lkotlin/text/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0ddc2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0ddc32.  return @kind void;
}
procedure `java.lang.Appendable` `append`(`java.lang.Appendable` v3 @kind object, `java.lang.CharSequence`[] v4 @kind object) @signature `Lkotlin/text/e;.append:(Ljava/lang/Appendable;[Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ddbb4.  v0:= "<this>" @kind object;
  #L0ddbb8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ddbbe.  v0:= "value" @kind object;
  #L0ddbc2.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ddbc8.  v0:= length @variable v4;
  #L0ddbca.  v1:= 0I;
  #L0ddbcc.  if v1 >= v0 then goto L0ddbe0;
  #L0ddbd0.  v2:= v4[v1] @kind object;
  #L0ddbd4.  call temp:= `append`(v3, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L0ddbda.  v1:= v1 + 1;
  #L0ddbde.  goto L0ddbcc;
  #L0ddbe0.  return v3 @kind object;
}
procedure `void` `appendElement`(`java.lang.Appendable` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/text/e;.appendElement:(Ljava/lang/Appendable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0ddc44.  v0:= "<this>" @kind object;
  #L0ddc48.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ddc4e.  if v3 == 0 then goto L0ddc66;
  #L0ddc52.  call temp:= `invoke`(v3, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ddc58.  v2:= temp @kind object;
  #L0ddc5a.  v2:= (`java.lang.CharSequence`) v2 @kind object;
  #L0ddc5e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L0ddc64.  goto L0ddcac;
  #L0ddc66.  if v2 != 0 then goto L0ddc6e;
  #L0ddc6a.  v3:= 1I;
  #L0ddc6c.  goto L0ddc72;
  #L0ddc6e.  v3:= instanceof @variable v2 @type ^`java.lang.CharSequence` @kind boolean;
  #L0ddc72.  if v3 == 0 then goto L0ddc82;
  #L0ddc76.  v2:= (`java.lang.CharSequence`) v2 @kind object;
  #L0ddc7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L0ddc80.  goto L0ddcac;
  #L0ddc82.  v3:= instanceof @variable v2 @type ^`java.lang.Character` @kind boolean;
  #L0ddc86.  if v3 == 0 then goto L0ddc9e;
  #L0ddc8a.  v2:= (`java.lang.Character`) v2 @kind object;
  #L0ddc8e.  call temp:= `charValue`(v2) @signature `Ljava/lang/Character;.charValue:()C` @kind virtual;
  #L0ddc94.  v2:= temp;
  #L0ddc96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L0ddc9c.  goto L0ddcac;
  #L0ddc9e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0ddca4.  v2:= temp @kind object;
  #L0ddca6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L0ddcac.  return @kind void;
}
procedure `java.lang.Appendable` `appendRange`(`java.lang.Appendable` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/text/e;.appendRange:(Ljava/lang/Appendable;Ljava/lang/CharSequence;II)Ljava/lang/Appendable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ddbf4.  v0:= "<this>" @kind object;
  #L0ddbf8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ddbfe.  v0:= "value" @kind object;
  #L0ddc02.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ddc08.  call temp:= `append`(v1, v2, v3, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;` @kind interface;
  #L0ddc0e.  v1:= temp @kind object;
  #L0ddc10.  v2:= "null cannot be cast to non-null type T of kotlin.text.StringsKt__AppendableKt.appendRange" @kind object;
  #L0ddc14.  call `checkNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ddc1a.  return v1 @kind object;
}
