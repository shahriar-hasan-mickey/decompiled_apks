record `kotlin.text._OneToManyTitlecaseMappingsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `titlecaseImpl`(`char` v5 ) @signature `Lkotlin/text/_OneToManyTitlecaseMappingsKt;.titlecaseImpl:(C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0e7cac.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L0e7cb2.  v0:= temp @kind object;
  #L0e7cb4.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L0e7cb8.  call `checkNotNull`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e7cbe.  v2:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L0e7cc2.  call temp:= `toUpperCase`(v0, v2) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L0e7cc8.  v0:= temp @kind object;
  #L0e7cca.  v3:= "this as java.lang.String).toUpperCase(Locale.ROOT)" @kind object;
  #L0e7cce.  call `checkNotNullExpressionValue`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e7cd4.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0e7cda.  v3:= temp;
  #L0e7cdc.  v4:= 1I;
  #L0e7cde.  if v3 <= v4 then goto L0e7d46;
  #L0e7ce2.  v3:= 329I;
  #L0e7ce6.  if v5 != v3 then goto L0e7cec;
  #L0e7cea.  goto L0e7d44;
  #L0e7cec.  v5:= 0I;
  #L0e7cee.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0e7cf4.  v5:= temp;
  #L0e7cf6.  call `checkNotNull`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e7cfc.  call temp:= `substring`(v0, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0e7d02.  v0:= temp @kind object;
  #L0e7d04.  v3:= "this as java.lang.String).substring(startIndex)" @kind object;
  #L0e7d08.  call `checkNotNullExpressionValue`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e7d0e.  call `checkNotNull`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e7d14.  call temp:= `toLowerCase`(v0, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L0e7d1a.  v0:= temp @kind object;
  #L0e7d1c.  v1:= "this as java.lang.String).toLowerCase(Locale.ROOT)" @kind object;
  #L0e7d20.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0e7d26.  v1:= new `java.lang.StringBuilder`;
  #L0e7d2a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0e7d30.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0e7d36.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0e7d3c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0e7d42.  v0:= temp @kind object;
  #L0e7d44.  return v0 @kind object;
  #L0e7d46.  call temp:= `toTitleCase`(v5) @signature `Ljava/lang/Character;.toTitleCase:(C)C` @kind static;
  #L0e7d4c.  v5:= temp;
  #L0e7d4e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L0e7d54.  v5:= temp @kind object;
  #L0e7d56.  return v5 @kind object;
}
