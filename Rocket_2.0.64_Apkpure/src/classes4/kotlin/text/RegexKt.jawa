record `kotlin.text.RegexKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlin.text.MatchResult` `a`(`java.util.regex.Matcher` v0 @kind object, `int` v1 , `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/RegexKt;.a:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L0dd088.  call temp:= `find`(v0, v1) @signature `Ljava/util/regex/Matcher;.find:(I)Z` @kind virtual;
  #L0dd08e.  v1:= temp;
  #L0dd090.  if v1 != 0 then goto L0dd098;
  #L0dd094.  v0:= 0I;
  #L0dd096.  goto L0dd0a4;
  #L0dd098.  v1:= new `kotlin.text.MatcherMatchResult`;
  #L0dd09c.  call `<init>`(v1, v0, v2) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @kind direct;
  #L0dd0a2.  v0:= v1 @kind object;
  #L0dd0a4.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `access$findNext`(`java.util.regex.Matcher` v0 @kind object, `int` v1 , `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/RegexKt;.access$findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0dd050.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/text/RegexKt;.a:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L0dd056.  v0:= temp @kind object;
  #L0dd058.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `access$matchEntire`(`java.util.regex.Matcher` v0 @kind object, `java.lang.CharSequence` v1 @kind object) @signature `Lkotlin/text/RegexKt;.access$matchEntire:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0dd06c.  call temp:= `b`(v0, v1) @signature `Lkotlin/text/RegexKt;.b:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L0dd072.  v0:= temp @kind object;
  #L0dd074.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `access$range`(`java.util.regex.MatchResult` v0 @kind object) @signature `Lkotlin/text/RegexKt;.access$range:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0dcfc0.  call temp:= `c`(v0) @signature `Lkotlin/text/RegexKt;.c:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @kind static;
  #L0dcfc6.  v0:= temp @kind object;
  #L0dcfc8.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `access$range`(`java.util.regex.MatchResult` v0 @kind object, `int` v1 ) @signature `Lkotlin/text/RegexKt;.access$range:(Ljava/util/regex/MatchResult;I)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0dcfdc.  call temp:= `d`(v0, v1) @signature `Lkotlin/text/RegexKt;.d:(Ljava/util/regex/MatchResult;I)Lkotlin/ranges/IntRange;` @kind static;
  #L0dcfe2.  v0:= temp @kind object;
  #L0dcfe4.  return v0 @kind object;
}
procedure `int` `access$toInt`(`java.lang.Iterable` v0 @kind object) @signature `Lkotlin/text/RegexKt;.access$toInt:(Ljava/lang/Iterable;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0dcf64.  call temp:= `e`(v0) @signature `Lkotlin/text/RegexKt;.e:(Ljava/lang/Iterable;)I` @kind static;
  #L0dcf6a.  v0:= temp;
  #L0dcf6c.  return v0;
}
procedure `kotlin.text.MatchResult` `b`(`java.util.regex.Matcher` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/RegexKt;.b:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L0dd0b8.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L0dd0be.  v0:= temp;
  #L0dd0c0.  if v0 != 0 then goto L0dd0c8;
  #L0dd0c4.  v1:= 0I;
  #L0dd0c6.  goto L0dd0d4;
  #L0dd0c8.  v0:= new `kotlin.text.MatcherMatchResult`;
  #L0dd0cc.  call `<init>`(v0, v1, v2) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @kind direct;
  #L0dd0d2.  v1:= v0 @kind object;
  #L0dd0d4.  return v1 @kind object;
}
procedure `kotlin.ranges.IntRange` `c`(`java.util.regex.MatchResult` v1 @kind object) @signature `Lkotlin/text/RegexKt;.c:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L0dcff8.  call temp:= `start`(v1) @signature `Ljava/util/regex/MatchResult;.start:()I` @kind interface;
  #L0dcffe.  v0:= temp;
  #L0dd000.  call temp:= `end`(v1) @signature `Ljava/util/regex/MatchResult;.end:()I` @kind interface;
  #L0dd006.  v1:= temp;
  #L0dd008.  call temp:= `until`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L0dd00e.  v1:= temp @kind object;
  #L0dd010.  return v1 @kind object;
}
procedure `kotlin.ranges.IntRange` `d`(`java.util.regex.MatchResult` v1 @kind object, `int` v2 ) @signature `Lkotlin/text/RegexKt;.d:(Ljava/util/regex/MatchResult;I)Lkotlin/ranges/IntRange;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L0dd024.  call temp:= `start`(v1, v2) @signature `Ljava/util/regex/MatchResult;.start:(I)I` @kind interface;
  #L0dd02a.  v0:= temp;
  #L0dd02c.  call temp:= `end`(v1, v2) @signature `Ljava/util/regex/MatchResult;.end:(I)I` @kind interface;
  #L0dd032.  v1:= temp;
  #L0dd034.  call temp:= `until`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L0dd03a.  v1:= temp @kind object;
  #L0dd03c.  return v1 @kind object;
}
procedure `int` `e`(`java.lang.Iterable` v2 @kind object) @signature `Lkotlin/text/RegexKt;.e:(Ljava/lang/Iterable;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0dcf80.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0dcf86.  v2:= temp @kind object;
  #L0dcf88.  v0:= 0I;
  #L0dcf8a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0dcf90.  v1:= temp;
  #L0dcf92.  if v1 == 0 then goto L0dcfae;
  #L0dcf96.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0dcf9c.  v1:= temp @kind object;
  #L0dcf9e.  v1:= (`kotlin.text.c`) v1 @kind object;
  #L0dcfa2.  call temp:= `getValue`(v1) @signature `Lkotlin/text/c;.getValue:()I` @kind interface;
  #L0dcfa8.  v1:= temp;
  #L0dcfaa.  v0:= v0 ^| v1 @kind int;
  #L0dcfac.  goto L0dcf8a;
  #L0dcfae.  return v0;
}
