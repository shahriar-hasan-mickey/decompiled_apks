record `kotlin.text.Regex$c` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.text.Regex$c.a` @AccessFlag ;
  `int` `kotlin.text.Regex$c.b` @AccessFlag ;
  `int` `kotlin.text.Regex$c.c` @AccessFlag ;
  `java.lang.Object` `kotlin.text.Regex$c.d` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlin.text.Regex` `kotlin.text.Regex$c.e` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.CharSequence` `kotlin.text.Regex$c.f` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlin.text.Regex$c.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.Regex$c` v0 @kind this, `kotlin.text.Regex` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `int` v3 , `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/text/Regex$c;.<init>:(Lkotlin/text/Regex;Ljava/lang/CharSequence;ILkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0dcebc.  v0.`kotlin.text.Regex$c.e` @type ^`kotlin.text.Regex` := v1 @kind object;
  #L0dcec0.  v0.`kotlin.text.Regex$c.f` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L0dcec4.  v0.`kotlin.text.Regex$c.g` @type ^`int` := v3;
  #L0dcec8.  v1:= 2I;
  #L0dceca.  call `<init>`(v0, v1, v4) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0dced0.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.text.Regex$c` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlin/text/Regex$c;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0dce90.  v0:= new `kotlin.text.Regex$c`;
  #L0dce94.  v1:= v4.`kotlin.text.Regex$c.e` @type ^`kotlin.text.Regex` @kind object;
  #L0dce98.  v2:= v4.`kotlin.text.Regex$c.f` @type ^`java.lang.CharSequence` @kind object;
  #L0dce9c.  v3:= v4.`kotlin.text.Regex$c.g` @type ^`int`;
  #L0dcea0.  call `<init>`(v0, v1, v2, v3, v6) @signature `Lkotlin/text/Regex$c;.<init>:(Lkotlin/text/Regex;Ljava/lang/CharSequence;ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0dcea6.  v0.`kotlin.text.Regex$c.d` @type ^`java.lang.Object` := v5 @kind object;
  #L0dceaa.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.text.Regex$c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/text/Regex$c;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0dccc8.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L0dcccc.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L0dccd0.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/text/Regex$c;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0dccd6.  v1:= temp @kind object;
  #L0dccd8.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.text.Regex$c` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/text/Regex$c;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0dccec.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/text/Regex$c;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0dccf2.  v1:= temp @kind object;
  #L0dccf4.  v1:= (`kotlin.text.Regex$c`) v1 @kind object;
  #L0dccf8.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0dccfc.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/text/Regex$c;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0dcd02.  v1:= temp @kind object;
  #L0dcd04.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.text.Regex$c` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lkotlin/text/Regex$c;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L0dcd18.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0dcd1e.  v0:= temp @kind object;
  #L0dcd20.  v1:= v10.`kotlin.text.Regex$c.c` @type ^`int`;
  #L0dcd24.  v2:= 0I;
  #L0dcd26.  v3:= 3I;
  #L0dcd28.  v4:= 2I;
  #L0dcd2a.  v5:= 1I;
  #L0dcd2c.  if v1 == 0 then goto L0dcd82;
  #L0dcd30.  if v1 == v5 then goto L0dcd78;
  #L0dcd34.  if v1 == v4 then goto L0dcd56;
  #L0dcd38.  if v1 != v3 then goto L0dcd46;
  #L0dcd3c.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0dcd42.  goto L0dce56;
  #L0dcd46.  v11:= new `java.lang.IllegalStateException`;
  #L0dcd4a.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0dcd4e.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0dcd54.  throw v11;
  #L0dcd56.  v1:= v10.`kotlin.text.Regex$c.b` @type ^`int`;
  #L0dcd5a.  v2:= v10.`kotlin.text.Regex$c.a` @type ^`java.lang.Object` @kind object;
  #L0dcd5e.  v2:= (`java.util.regex.Matcher`) v2 @kind object;
  #L0dcd62.  v6:= v10.`kotlin.text.Regex$c.d` @type ^`java.lang.Object` @kind object;
  #L0dcd66.  v6:= (`kotlin.sequences.SequenceScope`) v6 @kind object;
  #L0dcd6a.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0dcd70.  v7:= v10 @kind object;
  #L0dcd72.  v11:= v1;
  #L0dcd74.  v1:= v2 @kind object;
  #L0dcd76.  goto L0dcdfe;
  #L0dcd78.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0dcd7e.  goto L0dce7a;
  #L0dcd82.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0dcd88.  v11:= v10.`kotlin.text.Regex$c.d` @type ^`java.lang.Object` @kind object;
  #L0dcd8c.  v11:= (`kotlin.sequences.SequenceScope`) v11 @kind object;
  #L0dcd90.  v1:= v10.`kotlin.text.Regex$c.e` @type ^`kotlin.text.Regex` @kind object;
  #L0dcd94.  call temp:= `access$getNativePattern$p`(v1) @signature `Lkotlin/text/Regex;.access$getNativePattern$p:(Lkotlin/text/Regex;)Ljava/util/regex/Pattern;` @kind static;
  #L0dcd9a.  v1:= temp @kind object;
  #L0dcd9c.  v6:= v10.`kotlin.text.Regex$c.f` @type ^`java.lang.CharSequence` @kind object;
  #L0dcda0.  call temp:= `matcher`(v1, v6) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0dcda6.  v1:= temp @kind object;
  #L0dcda8.  v6:= v10.`kotlin.text.Regex$c.g` @type ^`int`;
  #L0dcdac.  if v6 == v5 then goto L0dce5c;
  #L0dcdb0.  call temp:= `find`(v1) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L0dcdb6.  v6:= temp;
  #L0dcdb8.  if v6 != 0 then goto L0dcdbe;
  #L0dcdbc.  goto L0dce5c;
  #L0dcdbe.  v7:= v10 @kind object;
  #L0dcdc0.  v6:= v11 @kind object;
  #L0dcdc2.  v11:= 0I;
  #L0dcdc4.  v8:= v7.`kotlin.text.Regex$c.f` @type ^`java.lang.CharSequence` @kind object;
  #L0dcdc8.  call temp:= `start`(v1) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L0dcdce.  v9:= temp;
  #L0dcdd0.  call temp:= `subSequence`(v8, v2, v9) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L0dcdd6.  v2:= temp @kind object;
  #L0dcdd8.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dcdde.  v2:= temp @kind object;
  #L0dcde0.  v7.`kotlin.text.Regex$c.d` @type ^`java.lang.Object` := v6 @kind object;
  #L0dcde4.  v7.`kotlin.text.Regex$c.a` @type ^`java.lang.Object` := v1 @kind object;
  #L0dcde8.  v7.`kotlin.text.Regex$c.b` @type ^`int` := v11;
  #L0dcdec.  v7.`kotlin.text.Regex$c.c` @type ^`int` := v4;
  #L0dcdf0.  call temp:= `yield`(v6, v2, v7) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0dcdf6.  v2:= temp @kind object;
  #L0dcdf8.  if v2 != v0 then goto L0dcdfe;
  #L0dcdfc.  return v0 @kind object;
  #L0dcdfe.  call temp:= `end`(v1) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L0dce04.  v2:= temp;
  #L0dce06.  v11:= v11 + v5 @kind int;
  #L0dce08.  v8:= v7.`kotlin.text.Regex$c.g` @type ^`int`;
  #L0dce0c.  v8:= v8 - v5 @kind int;
  #L0dce0e.  if v11 == v8 then goto L0dce1e;
  #L0dce12.  call temp:= `find`(v1) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L0dce18.  v8:= temp;
  #L0dce1a.  if v8 != 0 then goto L0dcdc4;
  #L0dce1e.  v11:= v7.`kotlin.text.Regex$c.f` @type ^`java.lang.CharSequence` @kind object;
  #L0dce22.  call temp:= `length`(v11) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L0dce28.  v1:= temp;
  #L0dce2a.  call temp:= `subSequence`(v11, v2, v1) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L0dce30.  v11:= temp @kind object;
  #L0dce32.  call temp:= `toString`(v11) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dce38.  v11:= temp @kind object;
  #L0dce3a.  v1:= 0I;
  #L0dce3c.  v7.`kotlin.text.Regex$c.d` @type ^`java.lang.Object` := v1 @kind object;
  #L0dce40.  v7.`kotlin.text.Regex$c.a` @type ^`java.lang.Object` := v1 @kind object;
  #L0dce44.  v7.`kotlin.text.Regex$c.c` @type ^`int` := v3;
  #L0dce48.  call temp:= `yield`(v6, v11, v7) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0dce4e.  v11:= temp @kind object;
  #L0dce50.  if v11 != v0 then goto L0dce56;
  #L0dce54.  return v0 @kind object;
  #L0dce56.  v11:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0dce5a.  return v11 @kind object;
  #L0dce5c.  v1:= v10.`kotlin.text.Regex$c.f` @type ^`java.lang.CharSequence` @kind object;
  #L0dce60.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dce66.  v1:= temp @kind object;
  #L0dce68.  v10.`kotlin.text.Regex$c.c` @type ^`int` := v5;
  #L0dce6c.  call temp:= `yield`(v11, v1, v10) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0dce72.  v11:= temp @kind object;
  #L0dce74.  if v11 != v0 then goto L0dce7a;
  #L0dce78.  return v0 @kind object;
  #L0dce7a.  v11:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0dce7e.  return v11 @kind object;
}
