record `kotlin.text.StringsKt__StringsKt$c` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `java.lang.CharSequence` `kotlin.text.StringsKt__StringsKt$c.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.StringsKt__StringsKt$c` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lkotlin/text/StringsKt__StringsKt$c;.<init>:(Ljava/lang/CharSequence;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0dfb88.  v0.`kotlin.text.StringsKt__StringsKt$c.a` @type ^`java.lang.CharSequence` := v1 @kind object;
  #L0dfb8c.  v1:= 1I;
  #L0dfb8e.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L0dfb94.  return @kind void;
}
procedure `java.lang.String` `a`(`kotlin.text.StringsKt__StringsKt$c` v1 @kind this, `kotlin.ranges.IntRange` v2 @kind object) @signature `Lkotlin/text/StringsKt__StringsKt$c;.a:(Lkotlin/ranges/IntRange;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dfb60.  v0:= "it" @kind object;
  #L0dfb64.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dfb6a.  v0:= v1.`kotlin.text.StringsKt__StringsKt$c.a` @type ^`java.lang.CharSequence` @kind object;
  #L0dfb6e.  call temp:= `substring`(v0, v2) @signature `Lkotlin/text/StringsKt__StringsKt;.substring:(Ljava/lang/CharSequence;Lkotlin/ranges/IntRange;)Ljava/lang/String;` @kind static;
  #L0dfb74.  v2:= temp @kind object;
  #L0dfb76.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.text.StringsKt__StringsKt$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/text/StringsKt__StringsKt$c;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0dfb40.  v1:= (`kotlin.ranges.IntRange`) v1 @kind object;
  #L0dfb44.  call temp:= `a`(v0, v1) @signature `Lkotlin/text/StringsKt__StringsKt$c;.a:(Lkotlin/ranges/IntRange;)Ljava/lang/String;` @kind virtual;
  #L0dfb4a.  v1:= temp @kind object;
  #L0dfb4c.  return v1 @kind object;
}
