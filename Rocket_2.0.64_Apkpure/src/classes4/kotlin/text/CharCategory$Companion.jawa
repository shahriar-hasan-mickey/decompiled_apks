record `kotlin.text.CharCategory$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.text.CharCategory$Companion` v0 @kind this) @signature `Lkotlin/text/CharCategory$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0dabf0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0dabf6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.CharCategory$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/text/CharCategory$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L0dac08.  call `<init>`(v0) @signature `Lkotlin/text/CharCategory$Companion;.<init>:()V` @kind direct;
  #L0dac0e.  return @kind void;
}
procedure `kotlin.text.CharCategory` `valueOf`(`kotlin.text.CharCategory$Companion` v3 @kind this, `int` v4 ) @signature `Lkotlin/text/CharCategory$Companion;.valueOf:(I)Lkotlin/text/CharCategory;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0dab4c.  v0:= new `kotlin.ranges.IntRange`;
  #L0dab50.  v1:= 0I;
  #L0dab52.  v2:= 16I;
  #L0dab56.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0dab5c.  call temp:= `contains`(v0, v4) @signature `Lkotlin/ranges/IntRange;.contains:(I)Z` @kind virtual;
  #L0dab62.  v0:= temp;
  #L0dab64.  if v0 == 0 then goto L0dab76;
  #L0dab68.  call temp:= `values`() @signature `Lkotlin/text/CharCategory;.values:()[Lkotlin/text/CharCategory;` @kind static;
  #L0dab6e.  v0:= temp @kind object;
  #L0dab70.  v4:= v0[v4] @kind object;
  #L0dab74.  goto L0daba4;
  #L0dab76.  v0:= new `kotlin.ranges.IntRange`;
  #L0dab7a.  v1:= 18I;
  #L0dab7e.  v2:= 30I;
  #L0dab82.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L0dab88.  call temp:= `contains`(v0, v4) @signature `Lkotlin/ranges/IntRange;.contains:(I)Z` @kind virtual;
  #L0dab8e.  v0:= temp;
  #L0dab90.  if v0 == 0 then goto L0daba6;
  #L0dab94.  call temp:= `values`() @signature `Lkotlin/text/CharCategory;.values:()[Lkotlin/text/CharCategory;` @kind static;
  #L0dab9a.  v0:= temp @kind object;
  #L0dab9c.  v4:= v4 + -1;
  #L0daba0.  v4:= v0[v4] @kind object;
  #L0daba4.  return v4 @kind object;
  #L0daba6.  v0:= new `java.lang.IllegalArgumentException`;
  #L0dabaa.  v1:= new `java.lang.StringBuilder`;
  #L0dabae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0dabb4.  v2:= "Category #" @kind object;
  #L0dabb8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dabbe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dabc4.  v4:= " is not defined." @kind object;
  #L0dabc8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dabce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dabd4.  v4:= temp @kind object;
  #L0dabd6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0dabdc.  throw v0;
}
