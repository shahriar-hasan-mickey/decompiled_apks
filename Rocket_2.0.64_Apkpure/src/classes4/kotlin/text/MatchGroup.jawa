record `kotlin.text.MatchGroup` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `kotlin.text.MatchGroup.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.ranges.IntRange` `kotlin.text.MatchGroup.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.text.MatchGroup` v1 @kind this, `java.lang.String` v2 @kind object, `kotlin.ranges.IntRange` v3 @kind object) @signature `Lkotlin/text/MatchGroup;.<init>:(Ljava/lang/String;Lkotlin/ranges/IntRange;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0dc3b8.  v0:= "value" @kind object;
  #L0dc3bc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dc3c2.  v0:= "range" @kind object;
  #L0dc3c6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dc3cc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0dc3d2.  v1.`kotlin.text.MatchGroup.a` @type ^`java.lang.String` := v2 @kind object;
  #L0dc3d6.  v1.`kotlin.text.MatchGroup.b` @type ^`kotlin.ranges.IntRange` := v3 @kind object;
  #L0dc3da.  return @kind void;
}
procedure `kotlin.text.MatchGroup` `copy$default`(`kotlin.text.MatchGroup` v0 @kind object, `java.lang.String` v1 @kind object, `kotlin.ranges.IntRange` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/MatchGroup;.copy$default:(Lkotlin/text/MatchGroup;Ljava/lang/String;Lkotlin/ranges/IntRange;ILjava/lang/Object;)Lkotlin/text/MatchGroup;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0dc354.  v4:= v3 ^& 1;
  #L0dc358.  if v4 == 0 then goto L0dc360;
  #L0dc35c.  v1:= v0.`kotlin.text.MatchGroup.a` @type ^`java.lang.String` @kind object;
  #L0dc360.  v3:= v3 ^& 2;
  #L0dc364.  if v3 == 0 then goto L0dc36c;
  #L0dc368.  v2:= v0.`kotlin.text.MatchGroup.b` @type ^`kotlin.ranges.IntRange` @kind object;
  #L0dc36c.  call temp:= `copy`(v0, v1, v2) @signature `Lkotlin/text/MatchGroup;.copy:(Ljava/lang/String;Lkotlin/ranges/IntRange;)Lkotlin/text/MatchGroup;` @kind virtual;
  #L0dc372.  v0:= temp @kind object;
  #L0dc374.  return v0 @kind object;
}
procedure `java.lang.String` `component1`(`kotlin.text.MatchGroup` v1 @kind this) @signature `Lkotlin/text/MatchGroup;.component1:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dc29c.  v0:= v1.`kotlin.text.MatchGroup.a` @type ^`java.lang.String` @kind object;
  #L0dc2a0.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `component2`(`kotlin.text.MatchGroup` v1 @kind this) @signature `Lkotlin/text/MatchGroup;.component2:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dc324.  v0:= v1.`kotlin.text.MatchGroup.b` @type ^`kotlin.ranges.IntRange` @kind object;
  #L0dc328.  return v0 @kind object;
}
procedure `kotlin.text.MatchGroup` `copy`(`kotlin.text.MatchGroup` v1 @kind this, `java.lang.String` v2 @kind object, `kotlin.ranges.IntRange` v3 @kind object) @signature `Lkotlin/text/MatchGroup;.copy:(Ljava/lang/String;Lkotlin/ranges/IntRange;)Lkotlin/text/MatchGroup;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dc388.  v0:= "value" @kind object;
  #L0dc38c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dc392.  v0:= "range" @kind object;
  #L0dc396.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0dc39c.  v0:= new `kotlin.text.MatchGroup`;
  #L0dc3a0.  call `<init>`(v0, v2, v3) @signature `Lkotlin/text/MatchGroup;.<init>:(Ljava/lang/String;Lkotlin/ranges/IntRange;)V` @kind direct;
  #L0dc3a6.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.text.MatchGroup` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/text/MatchGroup;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0dc214.  v0:= 1I;
  #L0dc216.  if v4 != v5 then goto L0dc21c;
  #L0dc21a.  return v0;
  #L0dc21c.  v1:= instanceof @variable v5 @type ^`kotlin.text.MatchGroup` @kind boolean;
  #L0dc220.  v2:= 0I;
  #L0dc222.  if v1 != 0 then goto L0dc228;
  #L0dc226.  return v2;
  #L0dc228.  v5:= (`kotlin.text.MatchGroup`) v5 @kind object;
  #L0dc22c.  v1:= v4.`kotlin.text.MatchGroup.a` @type ^`java.lang.String` @kind object;
  #L0dc230.  v3:= v5.`kotlin.text.MatchGroup.a` @type ^`java.lang.String` @kind object;
  #L0dc234.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0dc23a.  v1:= temp;
  #L0dc23c.  if v1 != 0 then goto L0dc242;
  #L0dc240.  return v2;
  #L0dc242.  v1:= v4.`kotlin.text.MatchGroup.b` @type ^`kotlin.ranges.IntRange` @kind object;
  #L0dc246.  v5:= v5.`kotlin.text.MatchGroup.b` @type ^`kotlin.ranges.IntRange` @kind object;
  #L0dc24a.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0dc250.  v5:= temp;
  #L0dc252.  if v5 != 0 then goto L0dc258;
  #L0dc256.  return v2;
  #L0dc258.  return v0;
}
procedure `kotlin.ranges.IntRange` `getRange`(`kotlin.text.MatchGroup` v1 @kind this) @signature `Lkotlin/text/MatchGroup;.getRange:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dc33c.  v0:= v1.`kotlin.text.MatchGroup.b` @type ^`kotlin.ranges.IntRange` @kind object;
  #L0dc340.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`kotlin.text.MatchGroup` v1 @kind this) @signature `Lkotlin/text/MatchGroup;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0dc2b4.  v0:= v1.`kotlin.text.MatchGroup.a` @type ^`java.lang.String` @kind object;
  #L0dc2b8.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.text.MatchGroup` v2 @kind this) @signature `Lkotlin/text/MatchGroup;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0dc26c.  v0:= v2.`kotlin.text.MatchGroup.a` @type ^`java.lang.String` @kind object;
  #L0dc270.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L0dc276.  v0:= temp;
  #L0dc278.  v0:= v0 * 31;
  #L0dc27c.  v1:= v2.`kotlin.text.MatchGroup.b` @type ^`kotlin.ranges.IntRange` @kind object;
  #L0dc280.  call temp:= `hashCode`(v1) @signature `Lkotlin/ranges/IntRange;.hashCode:()I` @kind virtual;
  #L0dc286.  v1:= temp;
  #L0dc288.  v0:= v0 + v1 @kind int;
  #L0dc28a.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.text.MatchGroup` v2 @kind this) @signature `Lkotlin/text/MatchGroup;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0dc2cc.  v0:= new `java.lang.StringBuilder`;
  #L0dc2d0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0dc2d6.  v1:= "MatchGroup(value=" @kind object;
  #L0dc2da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dc2e0.  v1:= v2.`kotlin.text.MatchGroup.a` @type ^`java.lang.String` @kind object;
  #L0dc2e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dc2ea.  v1:= ", range=" @kind object;
  #L0dc2ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dc2f4.  v1:= v2.`kotlin.text.MatchGroup.b` @type ^`kotlin.ranges.IntRange` @kind object;
  #L0dc2f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dc2fe.  v1:= 41I;
  #L0dc302.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0dc308.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0dc30e.  v0:= temp @kind object;
  #L0dc310.  return v0 @kind object;
}
