record `kotlinx.coroutines.CompletableDeferredKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.CompletableDeferred` `CompletableDeferred`(`java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CompletableDeferredKt;.CompletableDeferred:(Ljava/lang/Object;)Lkotlinx/coroutines/CompletableDeferred;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ee4c8.  v0:= new `kotlinx.coroutines.h`;
  #L0ee4cc.  v1:= 0I;
  #L0ee4ce.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/h;.<init>:(Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0ee4d4.  call temp:= `complete`(v0, v2) @signature `Lkotlinx/coroutines/h;.complete:(Ljava/lang/Object;)Z` @kind virtual;
  #L0ee4da.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CompletableDeferred` `CompletableDeferred`(`kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/CompletableDeferredKt;.CompletableDeferred:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableDeferred;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ee4ec.  v0:= new `kotlinx.coroutines.h`;
  #L0ee4f0.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/h;.<init>:(Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0ee4f6.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CompletableDeferred` `CompletableDeferred$default`(`kotlinx.coroutines.Job` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CompletableDeferredKt;.CompletableDeferred$default:(Lkotlinx/coroutines/Job;ILjava/lang/Object;)Lkotlinx/coroutines/CompletableDeferred;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ee4a4.  v1:= v1 ^& 1;
  #L0ee4a8.  if v1 == 0 then goto L0ee4ae;
  #L0ee4ac.  v0:= 0I;
  #L0ee4ae.  call temp:= `CompletableDeferred`(v0) @signature `Lkotlinx/coroutines/CompletableDeferredKt;.CompletableDeferred:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableDeferred;` @kind static;
  #L0ee4b4.  v0:= temp @kind object;
  #L0ee4b6.  return v0 @kind object;
}
procedure `boolean` `completeWith`(`kotlinx.coroutines.CompletableDeferred` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CompletableDeferredKt;.completeWith:(Lkotlinx/coroutines/CompletableDeferred;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ee474.  call temp:= `exceptionOrNull-impl`(v2) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L0ee47a.  v0:= temp @kind object;
  #L0ee47c.  if v0 != 0 then goto L0ee48a;
  #L0ee480.  call temp:= `complete`(v1, v2) @signature `Lkotlinx/coroutines/CompletableDeferred;.complete:(Ljava/lang/Object;)Z` @kind interface;
  #L0ee486.  v1:= temp;
  #L0ee488.  goto L0ee492;
  #L0ee48a.  call temp:= `completeExceptionally`(v1, v0) @signature `Lkotlinx/coroutines/CompletableDeferred;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind interface;
  #L0ee490.  v1:= temp;
  #L0ee492.  return v1;
}
