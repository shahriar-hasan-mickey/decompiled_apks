record `kotlinx.coroutines.CoroutineExceptionHandlerKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.CoroutineExceptionHandler` `CoroutineExceptionHandler`(`kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.CoroutineExceptionHandler:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/CoroutineExceptionHandler;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ef634.  v0:= `@@kotlinx.coroutines.CoroutineExceptionHandler.Key` @type ^`kotlinx.coroutines.CoroutineExceptionHandler$Key` @kind object;
  #L0ef638.  v1:= new `kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1`;
  #L0ef63c.  call `<init>`(v1, v2, v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/CoroutineExceptionHandler$Key;)V` @kind direct;
  #L0ef642.  return v1 @kind object;
}
procedure `void` `handleCoroutineException`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ef654.  v0:= `@@kotlinx.coroutines.CoroutineExceptionHandler.Key` @type ^`kotlinx.coroutines.CoroutineExceptionHandler$Key` @kind object;
  #L0ef658.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0ef65e.  v0:= temp @kind object;
  #L0ef660.  v0:= (`kotlinx.coroutines.CoroutineExceptionHandler`) v0 @kind object;
  #L0ef664.  if v0 != 0 then goto L0ef670;
  #L0ef668.  call `handleCoroutineExceptionImpl`(v1, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerImplKt;.handleCoroutineExceptionImpl:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L0ef66e.  return @kind void;
  #L0ef670.  call `handleException`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandler;.handleException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind interface;
  #L0ef676.  return @kind void;
  #L0ef678.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0ef67a.  call temp:= `handlerException`(v2, v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handlerException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L0ef680.  v2:= temp @kind object;
  #L0ef682.  call `handleCoroutineExceptionImpl`(v1, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerImplKt;.handleCoroutineExceptionImpl:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L0ef688.  return @kind void;
  catch `java.lang.Throwable` @[L0ef654..L0ef664] goto L0ef678;
  catch `java.lang.Throwable` @[L0ef670..L0ef676] goto L0ef678;
}
procedure `java.lang.Throwable` `handlerException`(`java.lang.Throwable` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handlerException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ef608.  if v2 != v3 then goto L0ef60e;
  #L0ef60c.  return v2 @kind object;
  #L0ef60e.  v0:= new `java.lang.RuntimeException`;
  #L0ef612.  v1:= "Exception while trying to handle coroutine exception" @kind object;
  #L0ef616.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0ef61c.  call `addSuppressed`(v0, v2) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L0ef622.  return v0 @kind object;
}
