record `kotlinx.coroutines.f0` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.internal.ScopeCoroutine` @kind class {
}
procedure `void` `<init>`(`kotlinx.coroutines.f0` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/f0;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f6ddc.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0f6de2.  return @kind void;
}
procedure `boolean` `childCancelled`(`kotlinx.coroutines.f0` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/f0;.childCancelled:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;

  #L0f6dc8.  v1:= 0I;
  #L0f6dca.  return v1;
}
