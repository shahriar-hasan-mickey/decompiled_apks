record `kotlinx.coroutines.h0` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.ThreadFactory` @kind interface {
  `int` `kotlinx.coroutines.h0.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.lang.String` `kotlinx.coroutines.h0.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicInteger` `kotlinx.coroutines.h0.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.h0` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `java.util.concurrent.atomic.AtomicInteger` v3 @kind object) @signature `Lkotlinx/coroutines/h0;.<init>:(ILjava/lang/String;Ljava/util/concurrent/atomic/AtomicInteger;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L0f7168.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0f716e.  v0.`kotlinx.coroutines.h0.a` @type ^`int` := v1;
  #L0f7172.  v0.`kotlinx.coroutines.h0.b` @type ^`java.lang.String` := v2 @kind object;
  #L0f7176.  v0.`kotlinx.coroutines.h0.c` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L0f717a.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`kotlinx.coroutines.h0` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lkotlinx/coroutines/h0;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f7140.  v0:= v3.`kotlinx.coroutines.h0.a` @type ^`int`;
  #L0f7144.  v1:= v3.`kotlinx.coroutines.h0.b` @type ^`java.lang.String` @kind object;
  #L0f7148.  v2:= v3.`kotlinx.coroutines.h0.c` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L0f714c.  call temp:= `a`(v0, v1, v2, v4) @signature `Lkotlinx/coroutines/ThreadPoolDispatcherKt;.a:(ILjava/lang/String;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/lang/Runnable;)Ljava/lang/Thread;` @kind static;
  #L0f7152.  v4:= temp @kind object;
  #L0f7154.  return v4 @kind object;
}
