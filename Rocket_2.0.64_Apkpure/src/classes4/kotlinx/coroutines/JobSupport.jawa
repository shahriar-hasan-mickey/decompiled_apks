record `kotlinx.coroutines.JobSupport` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.Job` @kind interface, `kotlinx.coroutines.ChildJob` @kind interface, `kotlinx.coroutines.ParentJob` @kind interface, `kotlinx.coroutines.selects.SelectClause0` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.JobSupport._parentHandle` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.JobSupport._state` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.JobSupport.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/JobSupport;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0f5d58.  v0:= constclass @type ^`kotlinx.coroutines.JobSupport` @kind object;
  #L0f5d5c.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L0f5d60.  v2:= "_state" @kind object;
  #L0f5d64.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L0f5d6a.  v0:= temp @kind object;
  #L0f5d6c.  `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L0f5d70.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobSupport` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/JobSupport;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f5d84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0f5d8a.  if v1 == 0 then goto L0f5d98;
  #L0f5d8e.  call temp:= `access$getEMPTY_ACTIVE$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getEMPTY_ACTIVE$p:()Lkotlinx/coroutines/p;` @kind static;
  #L0f5d94.  v1:= temp @kind object;
  #L0f5d96.  goto L0f5da0;
  #L0f5d98.  call temp:= `access$getEMPTY_NEW$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getEMPTY_NEW$p:()Lkotlinx/coroutines/p;` @kind static;
  #L0f5d9e.  v1:= temp @kind object;
  #L0f5da0.  v0.`kotlinx.coroutines.JobSupport._state` @type ^`java.lang.Object` := v1 @kind object;
  #L0f5da4.  v1:= 0I;
  #L0f5da6.  v0.`kotlinx.coroutines.JobSupport._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L0f5daa.  return @kind void;
}
procedure `java.lang.Object` `A`(`kotlinx.coroutines.JobSupport` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.A:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f51d0.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f51d4.  if v0 != 0 then goto L0f51e2;
  #L0f51d8.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f51de.  v2:= temp @kind object;
  #L0f51e0.  return v2 @kind object;
  #L0f51e2.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.p` @kind boolean;
  #L0f51e6.  if v0 != 0 then goto L0f51f2;
  #L0f51ea.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L0f51ee.  if v0 == 0 then goto L0f521e;
  #L0f51f2.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L0f51f6.  if v0 != 0 then goto L0f521e;
  #L0f51fa.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f51fe.  if v0 != 0 then goto L0f521e;
  #L0f5202.  v2:= (`kotlinx.coroutines.Incomplete`) v2 @kind object;
  #L0f5206.  call temp:= `y`(v1, v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.y:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)Z` @kind direct;
  #L0f520c.  v2:= temp;
  #L0f520e.  if v2 == 0 then goto L0f5214;
  #L0f5212.  return v3 @kind object;
  #L0f5214.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f521a.  v2:= temp @kind object;
  #L0f521c.  return v2 @kind object;
  #L0f521e.  v2:= (`kotlinx.coroutines.Incomplete`) v2 @kind object;
  #L0f5222.  call temp:= `B`(v1, v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.B:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0f5228.  v2:= temp @kind object;
  #L0f522a.  return v2 @kind object;
}
procedure `java.lang.Object` `B`(`kotlinx.coroutines.JobSupport` v6 @kind this, `kotlinx.coroutines.Incomplete` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.B:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0f523c.  call temp:= `m`(v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.m:(Lkotlinx/coroutines/Incomplete;)Lkotlinx/coroutines/NodeList;` @kind direct;
  #L0f5242.  v0:= temp @kind object;
  #L0f5244.  if v0 != 0 then goto L0f5252;
  #L0f5248.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f524e.  v7:= temp @kind object;
  #L0f5250.  return v7 @kind object;
  #L0f5252.  v1:= instanceof @variable v7 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L0f5256.  v2:= 0I;
  #L0f5258.  if v1 == 0 then goto L0f5264;
  #L0f525c.  v1:= v7 @kind object;
  #L0f525e.  v1:= (`kotlinx.coroutines.JobSupport$c`) v1 @kind object;
  #L0f5262.  goto L0f5266;
  #L0f5264.  v1:= v2 @kind object;
  #L0f5266.  if v1 != 0 then goto L0f5276;
  #L0f526a.  v1:= new `kotlinx.coroutines.JobSupport$c`;
  #L0f526e.  v3:= 0I;
  #L0f5270.  call `<init>`(v1, v0, v3, v2) @signature `Lkotlinx/coroutines/JobSupport$c;.<init>:(Lkotlinx/coroutines/NodeList;ZLjava/lang/Throwable;)V` @kind direct;
  #L0f5276.  @monitorenter v1
  #L0f5278.  call temp:= `f`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L0f527e.  v3:= temp;
  #L0f5280.  if v3 == 0 then goto L0f5290;
  #L0f5284.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f528a.  v7:= temp @kind object;
  #L0f528c.  @monitorexit v1
  #L0f528e.  return v7 @kind object;
  #L0f5290.  v3:= 1I;
  #L0f5292.  call `i`(v1, v3) @signature `Lkotlinx/coroutines/JobSupport$c;.i:(Z)V` @kind virtual;
  #L0f5298.  if v1 == v7 then goto L0f52b8;
  #L0f529c.  v4:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f52a0.  call temp:= `a`(v4, v6, v7, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f52a6.  v4:= temp;
  #L0f52a8.  if v4 != 0 then goto L0f52b8;
  #L0f52ac.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f52b2.  v7:= temp @kind object;
  #L0f52b4.  @monitorexit v1
  #L0f52b6.  return v7 @kind object;
  #L0f52b8.  call temp:= `e`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L0f52be.  v4:= temp;
  #L0f52c0.  v5:= instanceof @variable v8 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f52c4.  if v5 == 0 then goto L0f52d0;
  #L0f52c8.  v5:= v8 @kind object;
  #L0f52ca.  v5:= (`kotlinx.coroutines.CompletedExceptionally`) v5 @kind object;
  #L0f52ce.  goto L0f52d2;
  #L0f52d0.  v5:= v2 @kind object;
  #L0f52d2.  if v5 != 0 then goto L0f52d8;
  #L0f52d6.  goto L0f52e2;
  #L0f52d8.  v5:= v5.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f52dc.  call `a`(v1, v5) @signature `Lkotlinx/coroutines/JobSupport$c;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f52e2.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f52e8.  v5:= temp @kind object;
  #L0f52ea.  v3:= v3 ^~ v4 @kind int;
  #L0f52ec.  if v3 == 0 then goto L0f52f2;
  #L0f52f0.  v2:= v5 @kind object;
  #L0f52f2.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f52f6.  @monitorexit v1
  #L0f52f8.  if v2 != 0 then goto L0f52fe;
  #L0f52fc.  goto L0f5304;
  #L0f52fe.  call `s`(v6, v0, v2) @signature `Lkotlinx/coroutines/JobSupport;.s:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @kind direct;
  #L0f5304.  call temp:= `j`(v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.j:(Lkotlinx/coroutines/Incomplete;)Lkotlinx/coroutines/ChildHandleNode;` @kind direct;
  #L0f530a.  v7:= temp @kind object;
  #L0f530c.  if v7 == 0 then goto L0f5322;
  #L0f5310.  call temp:= `C`(v6, v1, v7, v8) @signature `Lkotlinx/coroutines/JobSupport;.C:(Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)Z` @kind direct;
  #L0f5316.  v7:= temp;
  #L0f5318.  if v7 == 0 then goto L0f5322;
  #L0f531c.  v7:= `@@kotlinx.coroutines.JobSupportKt.COMPLETING_WAITING_CHILDREN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f5320.  return v7 @kind object;
  #L0f5322.  call temp:= `i`(v6, v1, v8) @signature `Lkotlinx/coroutines/JobSupport;.i:(Lkotlinx/coroutines/JobSupport$c;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0f5328.  v7:= temp @kind object;
  #L0f532a.  return v7 @kind object;
  #L0f532c.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f532e.  @monitorexit v1
  #L0f5330.  throw v7;
  catch `java.lang.Throwable` @[L0f5278..L0f528c] goto L0f532c;
  catch `java.lang.Throwable` @[L0f5292..L0f52b4] goto L0f532c;
  catch `java.lang.Throwable` @[L0f52b8..L0f52f6] goto L0f532c;
}
procedure `boolean` `C`(`kotlinx.coroutines.JobSupport` v6 @kind this, `kotlinx.coroutines.JobSupport$c` v7 @kind object, `kotlinx.coroutines.ChildHandleNode` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.C:(Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0f4b78.  v0:= v8.`kotlinx.coroutines.ChildHandleNode.childJob` @type ^`kotlinx.coroutines.ChildJob` @kind object;
  #L0f4b7c.  v1:= 0I;
  #L0f4b7e.  v2:= 0I;
  #L0f4b80.  v3:= new `kotlinx.coroutines.JobSupport$b`;
  #L0f4b84.  call `<init>`(v3, v6, v7, v8, v9) @signature `Lkotlinx/coroutines/JobSupport$b;.<init>:(Lkotlinx/coroutines/JobSupport;Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)V` @kind direct;
  #L0f4b8a.  v4:= 1I;
  #L0f4b8c.  v5:= 0I;
  #L0f4b8e.  call temp:= `invokeOnCompletion$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.invokeOnCompletion$default:(Lkotlinx/coroutines/Job;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;` @kind static;
  #L0f4b94.  v0:= temp @kind object;
  #L0f4b96.  v1:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L0f4b9a.  if v0 == v1 then goto L0f4ba2;
  #L0f4b9e.  v7:= 1I;
  #L0f4ba0.  return v7;
  #L0f4ba2.  call temp:= `r`(v6, v8) @signature `Lkotlinx/coroutines/JobSupport;.r:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Lkotlinx/coroutines/ChildHandleNode;` @kind direct;
  #L0f4ba8.  v8:= temp @kind object;
  #L0f4baa.  if v8 != 0 then goto L0f4b78;
  #L0f4bae.  v7:= 0I;
  #L0f4bb0.  return v7;
}
procedure `boolean` `a`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlinx.coroutines.NodeList` v4 @kind object, `kotlinx.coroutines.JobNode` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.a:(Ljava/lang/Object;Lkotlinx/coroutines/NodeList;Lkotlinx/coroutines/JobNode;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f4740.  v0:= new `kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1`;
  #L0f4744.  call `<init>`(v0, v5, v2, v3) @signature `Lkotlinx/coroutines/JobSupport$addLastAtomic$$inlined$addLastIf$1;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/JobSupport;Ljava/lang/Object;)V` @kind direct;
  #L0f474a.  call temp:= `getPrevNode`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f4750.  v3:= temp @kind object;
  #L0f4752.  call temp:= `tryCondAddNext`(v3, v5, v4, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.tryCondAddNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$CondAddOp;)I` @kind virtual;
  #L0f4758.  v3:= temp;
  #L0f475a.  v1:= 1I;
  #L0f475c.  if v3 == v1 then goto L0f476a;
  #L0f4760.  v1:= 2I;
  #L0f4762.  if v3 == v1 then goto L0f4768;
  #L0f4766.  goto L0f474a;
  #L0f4768.  v1:= 0I;
  #L0f476a.  return v1;
}
procedure `java.lang.Object` `access$awaitSuspend`(`kotlinx.coroutines.JobSupport` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.access$awaitSuspend:(Lkotlinx/coroutines/JobSupport;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f4c4c.  call temp:= `c`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.c:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L0f4c52.  v0:= temp @kind object;
  #L0f4c54.  return v0 @kind object;
}
procedure `java.lang.String` `access$cancellationExceptionMessage`(`kotlinx.coroutines.JobSupport` v0 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f5360.  call temp:= `cancellationExceptionMessage`(v0) @signature `Lkotlinx/coroutines/JobSupport;.cancellationExceptionMessage:()Ljava/lang/String;` @kind virtual;
  #L0f5366.  v0:= temp @kind object;
  #L0f5368.  return v0 @kind object;
}
procedure `void` `access$continueCompleting`(`kotlinx.coroutines.JobSupport` v0 @kind object, `kotlinx.coroutines.JobSupport$c` v1 @kind object, `kotlinx.coroutines.ChildHandleNode` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.access$continueCompleting:(Lkotlinx/coroutines/JobSupport;Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f5dbc.  call `g`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.g:(Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)V` @kind direct;
  #L0f5dc2.  return @kind void;
}
procedure `java.lang.Object` `access$joinSuspend`(`kotlinx.coroutines.JobSupport` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.access$joinSuspend:(Lkotlinx/coroutines/JobSupport;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f4c68.  call temp:= `o`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.o:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L0f4c6e.  v0:= temp @kind object;
  #L0f4c70.  return v0 @kind object;
}
procedure `void` `b`(`kotlinx.coroutines.JobSupport` v3 @kind this, `java.lang.Throwable` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.b:(Ljava/lang/Throwable;Ljava/util/List;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f5dd4.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0f5dda.  v0:= temp;
  #L0f5ddc.  v1:= 1I;
  #L0f5dde.  if v0 > v1 then goto L0f5de4;
  #L0f5de2.  return @kind void;
  #L0f5de4.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0f5dea.  v0:= temp;
  #L0f5dec.  v1:= new `java.util.IdentityHashMap`;
  #L0f5df0.  call `<init>`(v1, v0) @signature `Ljava/util/IdentityHashMap;.<init>:(I)V` @kind direct;
  #L0f5df6.  call temp:= `newSetFromMap`(v1) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L0f5dfc.  v0:= temp @kind object;
  #L0f5dfe.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0f5e04.  v5:= temp @kind object;
  #L0f5e06.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0f5e0c.  v1:= temp;
  #L0f5e0e.  if v1 == 0 then goto L0f5e42;
  #L0f5e12.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0f5e18.  v1:= temp @kind object;
  #L0f5e1a.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L0f5e1e.  if v1 == v4 then goto L0f5e06;
  #L0f5e22.  if v1 == v4 then goto L0f5e06;
  #L0f5e26.  v2:= instanceof @variable v1 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L0f5e2a.  if v2 != 0 then goto L0f5e06;
  #L0f5e2e.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0f5e34.  v2:= temp;
  #L0f5e36.  if v2 == 0 then goto L0f5e06;
  #L0f5e3a.  call `addSuppressed`(v4, v1) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L0f5e40.  goto L0f5e06;
  #L0f5e42.  return @kind void;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.c:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f4cd8.  v0:= new `kotlinx.coroutines.JobSupport$a`;
  #L0f4cdc.  call temp:= `intercepted`(v3) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L0f4ce2.  v1:= temp @kind object;
  #L0f4ce4.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/JobSupport$a;.<init>:(Lkotlin/coroutines/Continuation;Lkotlinx/coroutines/JobSupport;)V` @kind direct;
  #L0f4cea.  call `initCancellability`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L0f4cf0.  v1:= new `kotlinx.coroutines.z`;
  #L0f4cf4.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/z;.<init>:(Lkotlinx/coroutines/CancellableContinuationImpl;)V` @kind direct;
  #L0f4cfa.  call temp:= `invokeOnCompletion`(v2, v1) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L0f4d00.  v1:= temp @kind object;
  #L0f4d02.  call `disposeOnCancellation`(v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.disposeOnCancellation:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/DisposableHandle;)V` @kind static;
  #L0f4d08.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0f4d0e.  v0:= temp @kind object;
  #L0f4d10.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f4d16.  v1:= temp @kind object;
  #L0f4d18.  if v0 != v1 then goto L0f4d22;
  #L0f4d1c.  call `probeCoroutineSuspended`(v3) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f4d22.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`kotlinx.coroutines.JobSupport` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0f4d34.  call temp:= `getState$kotlinx_coroutines_core`(v6) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f4d3a.  v0:= temp @kind object;
  #L0f4d3c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f4d40.  if v1 == 0 then goto L0f4d8e;
  #L0f4d44.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L0f4d48.  if v1 == 0 then goto L0f4d60;
  #L0f4d4c.  v1:= v0 @kind object;
  #L0f4d4e.  v1:= (`kotlinx.coroutines.JobSupport$c`) v1 @kind object;
  #L0f4d52.  call temp:= `f`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L0f4d58.  v1:= temp;
  #L0f4d5a.  if v1 == 0 then goto L0f4d60;
  #L0f4d5e.  goto L0f4d8e;
  #L0f4d60.  v1:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L0f4d64.  call temp:= `h`(v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.h:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L0f4d6a.  v2:= temp @kind object;
  #L0f4d6c.  v3:= 0I;
  #L0f4d6e.  v4:= 2I;
  #L0f4d70.  v5:= 0I;
  #L0f4d72.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0f4d78.  call temp:= `A`(v6, v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.A:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0f4d7e.  v0:= temp @kind object;
  #L0f4d80.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f4d86.  v1:= temp @kind object;
  #L0f4d88.  if v0 == v1 then goto L0f4d34;
  #L0f4d8c.  return v0 @kind object;
  #L0f4d8e.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f4d94.  v7:= temp @kind object;
  #L0f4d96.  return v7 @kind object;
}
procedure `kotlinx.coroutines.JobCancellationException` `defaultCancellationException$kotlinx_coroutines_core$default`(`kotlinx.coroutines.JobSupport` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Throwable` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.defaultCancellationException$kotlinx_coroutines_core$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/JobCancellationException;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L0f5bfc.  if v5 != 0 then goto L0f5c2e;
  #L0f5c00.  v5:= v4 ^& 1;
  #L0f5c04.  v0:= 0I;
  #L0f5c06.  if v5 == 0 then goto L0f5c0c;
  #L0f5c0a.  v2:= v0 @kind object;
  #L0f5c0c.  v4:= v4 ^& 2;
  #L0f5c10.  if v4 == 0 then goto L0f5c16;
  #L0f5c14.  v3:= v0 @kind object;
  #L0f5c16.  v4:= new `kotlinx.coroutines.JobCancellationException`;
  #L0f5c1a.  if v2 != 0 then goto L0f5c26;
  #L0f5c1e.  call temp:= `access$cancellationExceptionMessage`(v1) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0f5c24.  v2:= temp @kind object;
  #L0f5c26.  call `<init>`(v4, v2, v3, v1) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f5c2c.  return v4 @kind object;
  #L0f5c2e.  v1:= new `java.lang.UnsupportedOperationException`;
  #L0f5c32.  v2:= "Super calls with default arguments not supported in this target, function: defaultCancellationException" @kind object;
  #L0f5c36.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f5c3c.  throw v1;
}
procedure `boolean` `e`(`kotlinx.coroutines.JobSupport` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.e:(Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f4858.  call temp:= `isScopedCoroutine`(v4) @signature `Lkotlinx/coroutines/JobSupport;.isScopedCoroutine:()Z` @kind virtual;
  #L0f485e.  v0:= temp;
  #L0f4860.  v1:= 1I;
  #L0f4862.  if v0 == 0 then goto L0f4868;
  #L0f4866.  return v1;
  #L0f4868.  v0:= instanceof @variable v5 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L0f486c.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @kind virtual;
  #L0f4872.  v2:= temp @kind object;
  #L0f4874.  if v2 == 0 then goto L0f4898;
  #L0f4878.  v3:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L0f487c.  if v2 != v3 then goto L0f4882;
  #L0f4880.  goto L0f4898;
  #L0f4882.  call temp:= `childCancelled`(v2, v5) @signature `Lkotlinx/coroutines/ChildHandle;.childCancelled:(Ljava/lang/Throwable;)Z` @kind interface;
  #L0f4888.  v5:= temp;
  #L0f488a.  if v5 != 0 then goto L0f4896;
  #L0f488e.  if v0 == 0 then goto L0f4894;
  #L0f4892.  goto L0f4896;
  #L0f4894.  v1:= 0I;
  #L0f4896.  return v1;
  #L0f4898.  return v0;
}
procedure `void` `f`(`kotlinx.coroutines.JobSupport` v3 @kind this, `kotlinx.coroutines.Incomplete` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.f:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f5ecc.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @kind virtual;
  #L0f5ed2.  v0:= temp @kind object;
  #L0f5ed4.  if v0 != 0 then goto L0f5eda;
  #L0f5ed8.  goto L0f5eea;
  #L0f5eda.  call `dispose`(v0) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L0f5ee0.  v0:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L0f5ee4.  call `setParentHandle$kotlinx_coroutines_core`(v3, v0) @signature `Lkotlinx/coroutines/JobSupport;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/ChildHandle;)V` @kind virtual;
  #L0f5eea.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f5eee.  v1:= 0I;
  #L0f5ef0.  if v0 == 0 then goto L0f5efa;
  #L0f5ef4.  v5:= (`kotlinx.coroutines.CompletedExceptionally`) v5 @kind object;
  #L0f5ef8.  goto L0f5efc;
  #L0f5efa.  v5:= v1 @kind object;
  #L0f5efc.  if v5 != 0 then goto L0f5f02;
  #L0f5f00.  goto L0f5f06;
  #L0f5f02.  v1:= v5.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f5f06.  v5:= instanceof @variable v4 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L0f5f0a.  if v5 == 0 then goto L0f5f62;
  #L0f5f0e.  v5:= v4 @kind object;
  #L0f5f10.  v5:= (`kotlinx.coroutines.JobNode`) v5 @kind object;
  #L0f5f14.  call `invoke`(v5, v1) @signature `Lkotlinx/coroutines/CompletionHandlerBase;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f5f1a.  goto L0f5f76;
  #L0f5f1c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f5f1e.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L0f5f22.  v1:= new `java.lang.StringBuilder`;
  #L0f5f26.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f5f2c.  v2:= "Exception in completion handler " @kind object;
  #L0f5f30.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f5f36.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f5f3c.  v4:= " for " @kind object;
  #L0f5f40.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f5f46.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f5f4c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f5f52.  v4:= temp @kind object;
  #L0f5f54.  call `<init>`(v0, v4, v5) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0f5f5a.  call `handleOnCompletionException$kotlinx_coroutines_core`(v3, v0) @signature `Lkotlinx/coroutines/JobSupport;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f5f60.  goto L0f5f76;
  #L0f5f62.  call temp:= `getList`(v4) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L0f5f68.  v4:= temp @kind object;
  #L0f5f6a.  if v4 != 0 then goto L0f5f70;
  #L0f5f6e.  goto L0f5f76;
  #L0f5f70.  call `t`(v3, v4, v1) @signature `Lkotlinx/coroutines/JobSupport;.t:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @kind direct;
  #L0f5f76.  return @kind void;
  catch `java.lang.Throwable` @[L0f5f0e..L0f5f1a] goto L0f5f1c;
}
procedure `void` `g`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlinx.coroutines.JobSupport$c` v1 @kind object, `kotlinx.coroutines.ChildHandleNode` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.g:(Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L0f5f94.  call temp:= `r`(v0, v2) @signature `Lkotlinx/coroutines/JobSupport;.r:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Lkotlinx/coroutines/ChildHandleNode;` @kind direct;
  #L0f5f9a.  v2:= temp @kind object;
  #L0f5f9c.  if v2 == 0 then goto L0f5fae;
  #L0f5fa0.  call temp:= `C`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.C:(Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)Z` @kind direct;
  #L0f5fa6.  v2:= temp;
  #L0f5fa8.  if v2 == 0 then goto L0f5fae;
  #L0f5fac.  return @kind void;
  #L0f5fae.  call temp:= `i`(v0, v1, v3) @signature `Lkotlinx/coroutines/JobSupport;.i:(Lkotlinx/coroutines/JobSupport$c;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0f5fb4.  v1:= temp @kind object;
  #L0f5fb6.  call `afterCompletion`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.afterCompletion:(Ljava/lang/Object;)V` @kind virtual;
  #L0f5fbc.  return @kind void;
}
procedure `java.lang.Throwable` `h`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.h:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f54d0.  if v3 != 0 then goto L0f54d8;
  #L0f54d4.  v0:= 1I;
  #L0f54d6.  goto L0f54dc;
  #L0f54d8.  v0:= instanceof @variable v3 @type ^`java.lang.Throwable` @kind boolean;
  #L0f54dc.  if v0 == 0 then goto L0f5500;
  #L0f54e0.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L0f54e4.  if v3 != 0 then goto L0f5516;
  #L0f54e8.  v3:= 0I;
  #L0f54ea.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L0f54ee.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0f54f4.  v1:= temp @kind object;
  #L0f54f6.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f54fc.  v3:= v0 @kind object;
  #L0f54fe.  goto L0f5516;
  #L0f5500.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.ParentJob" @kind object;
  #L0f5504.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L0f550a.  v3:= (`kotlinx.coroutines.ParentJob`) v3 @kind object;
  #L0f550e.  call temp:= `getChildJobCancellationCause`(v3) @signature `Lkotlinx/coroutines/ParentJob;.getChildJobCancellationCause:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L0f5514.  v3:= temp @kind object;
  #L0f5516.  return v3 @kind object;
}
procedure `java.lang.Object` `i`(`kotlinx.coroutines.JobSupport` v5 @kind this, `kotlinx.coroutines.JobSupport$c` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.i:(Lkotlinx/coroutines/JobSupport$c;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0f4da8.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f4dac.  v1:= 0I;
  #L0f4dae.  if v0 == 0 then goto L0f4dba;
  #L0f4db2.  v0:= v7 @kind object;
  #L0f4db4.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L0f4db8.  goto L0f4dbc;
  #L0f4dba.  v0:= v1 @kind object;
  #L0f4dbc.  if v0 != 0 then goto L0f4dc4;
  #L0f4dc0.  v0:= v1 @kind object;
  #L0f4dc2.  goto L0f4dc8;
  #L0f4dc4.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f4dc8.  @monitorenter v6
  #L0f4dca.  call temp:= `e`(v6) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L0f4dd0.  v2:= temp;
  #L0f4dd2.  call temp:= `h`(v6, v0) @signature `Lkotlinx/coroutines/JobSupport$c;.h:(Ljava/lang/Throwable;)Ljava/util/List;` @kind virtual;
  #L0f4dd8.  v3:= temp @kind object;
  #L0f4dda.  call temp:= `l`(v5, v6, v3) @signature `Lkotlinx/coroutines/JobSupport;.l:(Lkotlinx/coroutines/JobSupport$c;Ljava/util/List;)Ljava/lang/Throwable;` @kind direct;
  #L0f4de0.  v4:= temp @kind object;
  #L0f4de2.  if v4 == 0 then goto L0f4dec;
  #L0f4de6.  call `b`(v5, v4, v3) @signature `Lkotlinx/coroutines/JobSupport;.b:(Ljava/lang/Throwable;Ljava/util/List;)V` @kind direct;
  #L0f4dec.  @monitorexit v6
  #L0f4dee.  v3:= 0I;
  #L0f4df0.  if v4 != 0 then goto L0f4df6;
  #L0f4df4.  goto L0f4e08;
  #L0f4df6.  if v4 != v0 then goto L0f4dfc;
  #L0f4dfa.  goto L0f4e08;
  #L0f4dfc.  v7:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L0f4e00.  v0:= 2I;
  #L0f4e02.  call `<init>`(v7, v4, v3, v0, v1) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0f4e08.  if v4 == 0 then goto L0f4e40;
  #L0f4e0c.  call temp:= `e`(v5, v4) @signature `Lkotlinx/coroutines/JobSupport;.e:(Ljava/lang/Throwable;)Z` @kind direct;
  #L0f4e12.  v0:= temp;
  #L0f4e14.  if v0 != 0 then goto L0f4e24;
  #L0f4e18.  call temp:= `handleJobException`(v5, v4) @signature `Lkotlinx/coroutines/JobSupport;.handleJobException:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0f4e1e.  v0:= temp;
  #L0f4e20.  if v0 == 0 then goto L0f4e26;
  #L0f4e24.  v3:= 1I;
  #L0f4e26.  if v3 == 0 then goto L0f4e40;
  #L0f4e2a.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.CompletedExceptionally" @kind object;
  #L0f4e2e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L0f4e34.  v0:= v7 @kind object;
  #L0f4e36.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L0f4e3a.  call temp:= `makeHandled`(v0) @signature `Lkotlinx/coroutines/CompletedExceptionally;.makeHandled:()Z` @kind virtual;
  #L0f4e40.  if v2 != 0 then goto L0f4e4a;
  #L0f4e44.  call `onCancelling`(v5, v4) @signature `Lkotlinx/coroutines/JobSupport;.onCancelling:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f4e4a.  call `onCompletionInternal`(v5, v7) @signature `Lkotlinx/coroutines/JobSupport;.onCompletionInternal:(Ljava/lang/Object;)V` @kind virtual;
  #L0f4e50.  v0:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f4e54.  call temp:= `boxIncomplete`(v7) @signature `Lkotlinx/coroutines/JobSupportKt;.boxIncomplete:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f4e5a.  v1:= temp @kind object;
  #L0f4e5c.  call temp:= `a`(v0, v5, v6, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f4e62.  call `f`(v5, v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.f:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)V` @kind direct;
  #L0f4e68.  return v7 @kind object;
  #L0f4e6a.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f4e6c.  @monitorexit v6
  #L0f4e6e.  throw v7;
  catch `java.lang.Throwable` @[L0f4dca..L0f4dec] goto L0f4e6a;
}
procedure `kotlinx.coroutines.ChildHandleNode` `j`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.Incomplete` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.j:(Lkotlinx/coroutines/Incomplete;)Lkotlinx/coroutines/ChildHandleNode;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f59dc.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L0f59e0.  v1:= 0I;
  #L0f59e2.  if v0 == 0 then goto L0f59ee;
  #L0f59e6.  v0:= v3 @kind object;
  #L0f59e8.  v0:= (`kotlinx.coroutines.ChildHandleNode`) v0 @kind object;
  #L0f59ec.  goto L0f59f0;
  #L0f59ee.  v0:= v1 @kind object;
  #L0f59f0.  if v0 != 0 then goto L0f5a0c;
  #L0f59f4.  call temp:= `getList`(v3) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L0f59fa.  v3:= temp @kind object;
  #L0f59fc.  if v3 != 0 then goto L0f5a02;
  #L0f5a00.  goto L0f5a0e;
  #L0f5a02.  call temp:= `r`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.r:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Lkotlinx/coroutines/ChildHandleNode;` @kind direct;
  #L0f5a08.  v1:= temp @kind object;
  #L0f5a0a.  goto L0f5a0e;
  #L0f5a0c.  v1:= v0 @kind object;
  #L0f5a0e.  return v1 @kind object;
}
procedure `java.lang.Throwable` `k`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.k:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f55fc.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f5600.  v1:= 0I;
  #L0f5602.  if v0 == 0 then goto L0f560c;
  #L0f5606.  v3:= (`kotlinx.coroutines.CompletedExceptionally`) v3 @kind object;
  #L0f560a.  goto L0f560e;
  #L0f560c.  v3:= v1 @kind object;
  #L0f560e.  if v3 != 0 then goto L0f5614;
  #L0f5612.  goto L0f5618;
  #L0f5614.  v1:= v3.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f5618.  return v1 @kind object;
}
procedure `java.lang.Throwable` `l`(`kotlinx.coroutines.JobSupport` v5 @kind this, `kotlinx.coroutines.JobSupport$c` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.l:(Lkotlinx/coroutines/JobSupport$c;Ljava/util/List;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0f562c.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L0f5632.  v0:= temp;
  #L0f5634.  v1:= 0I;
  #L0f5636.  if v0 == 0 then goto L0f565c;
  #L0f563a.  call temp:= `e`(v6) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L0f5640.  v6:= temp;
  #L0f5642.  if v6 == 0 then goto L0f565a;
  #L0f5646.  v6:= new `kotlinx.coroutines.JobCancellationException`;
  #L0f564a.  call temp:= `access$cancellationExceptionMessage`(v5) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0f5650.  v7:= temp @kind object;
  #L0f5652.  call `<init>`(v6, v7, v1, v5) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f5658.  return v6 @kind object;
  #L0f565a.  return v1 @kind object;
  #L0f565c.  call temp:= `iterator`(v7) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0f5662.  v6:= temp @kind object;
  #L0f5664.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0f566a.  v0:= temp;
  #L0f566c.  v2:= 1I;
  #L0f566e.  if v0 == 0 then goto L0f568c;
  #L0f5672.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0f5678.  v0:= temp @kind object;
  #L0f567a.  v3:= v0 @kind object;
  #L0f567c.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L0f5680.  v3:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L0f5684.  v3:= v3 ^~ v2 @kind int;
  #L0f5686.  if v3 == 0 then goto L0f5664;
  #L0f568a.  goto L0f568e;
  #L0f568c.  v0:= v1 @kind object;
  #L0f568e.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L0f5692.  if v0 == 0 then goto L0f5698;
  #L0f5696.  return v0 @kind object;
  #L0f5698.  v6:= 0I;
  #L0f569a.  call temp:= `get`(v7, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0f56a0.  v0:= temp @kind object;
  #L0f56a2.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L0f56a6.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.TimeoutCancellationException` @kind boolean;
  #L0f56aa.  if v3 == 0 then goto L0f56f2;
  #L0f56ae.  call temp:= `iterator`(v7) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0f56b4.  v7:= temp @kind object;
  #L0f56b6.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0f56bc.  v3:= temp;
  #L0f56be.  if v3 == 0 then goto L0f56e8;
  #L0f56c2.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0f56c8.  v3:= temp @kind object;
  #L0f56ca.  v4:= v3 @kind object;
  #L0f56cc.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L0f56d0.  if v4 == v0 then goto L0f56e0;
  #L0f56d4.  v4:= instanceof @variable v4 @type ^`kotlinx.coroutines.TimeoutCancellationException` @kind boolean;
  #L0f56d8.  if v4 == 0 then goto L0f56e0;
  #L0f56dc.  v4:= 1I;
  #L0f56de.  goto L0f56e2;
  #L0f56e0.  v4:= 0I;
  #L0f56e2.  if v4 == 0 then goto L0f56b6;
  #L0f56e6.  v1:= v3 @kind object;
  #L0f56e8.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L0f56ec.  if v1 == 0 then goto L0f56f2;
  #L0f56f0.  return v1 @kind object;
  #L0f56f2.  return v0 @kind object;
}
procedure `kotlinx.coroutines.NodeList` `m`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.Incomplete` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.m:(Lkotlinx/coroutines/Incomplete;)Lkotlinx/coroutines/NodeList;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f5cdc.  call temp:= `getList`(v3) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L0f5ce2.  v0:= temp @kind object;
  #L0f5ce4.  if v0 != 0 then goto L0f5d32;
  #L0f5ce8.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.p` @kind boolean;
  #L0f5cec.  if v0 == 0 then goto L0f5cfc;
  #L0f5cf0.  v0:= new `kotlinx.coroutines.NodeList`;
  #L0f5cf4.  call `<init>`(v0) @signature `Lkotlinx/coroutines/NodeList;.<init>:()V` @kind direct;
  #L0f5cfa.  goto L0f5d32;
  #L0f5cfc.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L0f5d00.  if v0 == 0 then goto L0f5d12;
  #L0f5d04.  v3:= (`kotlinx.coroutines.JobNode`) v3 @kind object;
  #L0f5d08.  call `v`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.v:(Lkotlinx/coroutines/JobNode;)V` @kind direct;
  #L0f5d0e.  v0:= 0I;
  #L0f5d10.  goto L0f5d32;
  #L0f5d12.  v0:= new `java.lang.IllegalStateException`;
  #L0f5d16.  v1:= "State should have list: " @kind object;
  #L0f5d1a.  call temp:= `stringPlus`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f5d20.  v3:= temp @kind object;
  #L0f5d22.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f5d28.  v3:= temp @kind object;
  #L0f5d2a.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f5d30.  throw v0;
  #L0f5d32.  return v0 @kind object;
}
procedure `boolean` `n`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.n:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f4a30.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f4a36.  v0:= temp @kind object;
  #L0f4a38.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f4a3c.  if v1 != 0 then goto L0f4a44;
  #L0f4a40.  v0:= 0I;
  #L0f4a42.  return v0;
  #L0f4a44.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @kind direct;
  #L0f4a4a.  v0:= temp;
  #L0f4a4c.  if v0 < 0 then goto L0f4a30;
  #L0f4a50.  v0:= 1I;
  #L0f4a52.  return v0;
}
procedure `java.lang.Object` `o`(`kotlinx.coroutines.JobSupport` v3 @kind this, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.o:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f4f78.  v0:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L0f4f7c.  call temp:= `intercepted`(v4) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L0f4f82.  v1:= temp @kind object;
  #L0f4f84.  v2:= 1I;
  #L0f4f86.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L0f4f8c.  call `initCancellability`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L0f4f92.  v1:= new `kotlinx.coroutines.a0`;
  #L0f4f96.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/a0;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0f4f9c.  call temp:= `invokeOnCompletion`(v3, v1) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L0f4fa2.  v1:= temp @kind object;
  #L0f4fa4.  call `disposeOnCancellation`(v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.disposeOnCancellation:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/DisposableHandle;)V` @kind static;
  #L0f4faa.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0f4fb0.  v0:= temp @kind object;
  #L0f4fb2.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f4fb8.  v1:= temp @kind object;
  #L0f4fba.  if v0 != v1 then goto L0f4fc4;
  #L0f4fbe.  call `probeCoroutineSuspended`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f4fc4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f4fca.  v4:= temp @kind object;
  #L0f4fcc.  if v0 != v4 then goto L0f4fd2;
  #L0f4fd0.  return v0 @kind object;
  #L0f4fd2.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f4fd6.  return v4 @kind object;
}
procedure `java.lang.Object` `p`(`kotlinx.coroutines.JobSupport` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.p:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0f4fe8.  v0:= 0I;
  #L0f4fea.  v1:= v0 @kind object;
  #L0f4fec.  call temp:= `getState$kotlinx_coroutines_core`(v6) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f4ff2.  v2:= temp @kind object;
  #L0f4ff4.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L0f4ff8.  if v3 == 0 then goto L0f508c;
  #L0f4ffc.  @monitorenter v2
  #L0f4ffe.  v3:= v2 @kind object;
  #L0f5000.  v3:= (`kotlinx.coroutines.JobSupport$c`) v3 @kind object;
  #L0f5004.  call temp:= `g`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.g:()Z` @kind virtual;
  #L0f500a.  v3:= temp;
  #L0f500c.  if v3 == 0 then goto L0f501c;
  #L0f5010.  call temp:= `access$getTOO_LATE_TO_CANCEL$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getTOO_LATE_TO_CANCEL$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f5016.  v7:= temp @kind object;
  #L0f5018.  @monitorexit v2
  #L0f501a.  return v7 @kind object;
  #L0f501c.  v3:= v2 @kind object;
  #L0f501e.  v3:= (`kotlinx.coroutines.JobSupport$c`) v3 @kind object;
  #L0f5022.  call temp:= `e`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L0f5028.  v3:= temp;
  #L0f502a.  if v7 != 0 then goto L0f5032;
  #L0f502e.  if v3 != 0 then goto L0f504a;
  #L0f5032.  if v1 != 0 then goto L0f503e;
  #L0f5036.  call temp:= `h`(v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.h:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L0f503c.  v1:= temp @kind object;
  #L0f503e.  v7:= v2 @kind object;
  #L0f5040.  v7:= (`kotlinx.coroutines.JobSupport$c`) v7 @kind object;
  #L0f5044.  call `a`(v7, v1) @signature `Lkotlinx/coroutines/JobSupport$c;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f504a.  v7:= v2 @kind object;
  #L0f504c.  v7:= (`kotlinx.coroutines.JobSupport$c`) v7 @kind object;
  #L0f5050.  call temp:= `d`(v7) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f5056.  v7:= temp @kind object;
  #L0f5058.  v1:= v3 ^~ 1;
  #L0f505c.  if v1 == 0 then goto L0f5062;
  #L0f5060.  v0:= v7 @kind object;
  #L0f5062.  @monitorexit v2
  #L0f5064.  if v0 != 0 then goto L0f506a;
  #L0f5068.  goto L0f507c;
  #L0f506a.  v2:= (`kotlinx.coroutines.JobSupport$c`) v2 @kind object;
  #L0f506e.  call temp:= `getList`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.getList:()Lkotlinx/coroutines/NodeList;` @kind virtual;
  #L0f5074.  v7:= temp @kind object;
  #L0f5076.  call `s`(v6, v7, v0) @signature `Lkotlinx/coroutines/JobSupport;.s:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @kind direct;
  #L0f507c.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f5082.  v7:= temp @kind object;
  #L0f5084.  return v7 @kind object;
  #L0f5086.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f5088.  @monitorexit v2
  #L0f508a.  throw v7;
  #L0f508c.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f5090.  if v3 == 0 then goto L0f511c;
  #L0f5094.  if v1 != 0 then goto L0f50a0;
  #L0f5098.  call temp:= `h`(v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.h:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L0f509e.  v1:= temp @kind object;
  #L0f50a0.  v3:= v2 @kind object;
  #L0f50a2.  v3:= (`kotlinx.coroutines.Incomplete`) v3 @kind object;
  #L0f50a6.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/Incomplete;.isActive:()Z` @kind interface;
  #L0f50ac.  v4:= temp;
  #L0f50ae.  if v4 == 0 then goto L0f50c8;
  #L0f50b2.  call temp:= `z`(v6, v3, v1) @signature `Lkotlinx/coroutines/JobSupport;.z:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Throwable;)Z` @kind direct;
  #L0f50b8.  v2:= temp;
  #L0f50ba.  if v2 == 0 then goto L0f4fec;
  #L0f50be.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f50c4.  v7:= temp @kind object;
  #L0f50c6.  return v7 @kind object;
  #L0f50c8.  v3:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L0f50cc.  v4:= 0I;
  #L0f50ce.  v5:= 2I;
  #L0f50d0.  call `<init>`(v3, v1, v4, v5, v0) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0f50d6.  call temp:= `A`(v6, v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.A:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0f50dc.  v3:= temp @kind object;
  #L0f50de.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f50e4.  v4:= temp @kind object;
  #L0f50e6.  if v3 == v4 then goto L0f50fc;
  #L0f50ea.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f50f0.  v2:= temp @kind object;
  #L0f50f2.  if v3 != v2 then goto L0f50fa;
  #L0f50f6.  goto L0f4fec;
  #L0f50fa.  return v3 @kind object;
  #L0f50fc.  v7:= new `java.lang.IllegalStateException`;
  #L0f5100.  v0:= "Cannot happen in " @kind object;
  #L0f5104.  call temp:= `stringPlus`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f510a.  v0:= temp @kind object;
  #L0f510c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f5112.  v0:= temp @kind object;
  #L0f5114.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f511a.  throw v7;
  #L0f511c.  call temp:= `access$getTOO_LATE_TO_CANCEL$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getTOO_LATE_TO_CANCEL$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f5122.  v7:= temp @kind object;
  #L0f5124.  return v7 @kind object;
  catch `java.lang.Throwable` @[L0f4ffe..L0f5018] goto L0f5086;
  catch `java.lang.Throwable` @[L0f501c..L0f5058] goto L0f5086;
}
procedure `kotlinx.coroutines.JobNode` `q`(`kotlinx.coroutines.JobSupport` v1 @kind this, `kotlin.jvm.functions.Function1` v2 @kind object, `boolean` v3 ) @signature `Lkotlinx/coroutines/JobSupport;.q:(Lkotlin/jvm/functions/Function1;Z)Lkotlinx/coroutines/JobNode;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f5c78.  v0:= 0I;
  #L0f5c7a.  if v3 == 0 then goto L0f5c9c;
  #L0f5c7e.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobCancellingNode` @kind boolean;
  #L0f5c82.  if v3 == 0 then goto L0f5c8c;
  #L0f5c86.  v0:= v2 @kind object;
  #L0f5c88.  v0:= (`kotlinx.coroutines.JobCancellingNode`) v0 @kind object;
  #L0f5c8c.  if v0 != 0 then goto L0f5cc4;
  #L0f5c90.  v0:= new `kotlinx.coroutines.s`;
  #L0f5c94.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/s;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0f5c9a.  goto L0f5cc4;
  #L0f5c9c.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L0f5ca0.  if v3 == 0 then goto L0f5cac;
  #L0f5ca4.  v3:= v2 @kind object;
  #L0f5ca6.  v3:= (`kotlinx.coroutines.JobNode`) v3 @kind object;
  #L0f5caa.  goto L0f5cae;
  #L0f5cac.  v3:= v0 @kind object;
  #L0f5cae.  if v3 != 0 then goto L0f5cb4;
  #L0f5cb2.  goto L0f5cb6;
  #L0f5cb4.  v0:= v3 @kind object;
  #L0f5cb6.  if v0 != 0 then goto L0f5cc4;
  #L0f5cba.  v0:= new `kotlinx.coroutines.t`;
  #L0f5cbe.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/t;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0f5cc4.  call `setJob`(v0, v1) @signature `Lkotlinx/coroutines/JobNode;.setJob:(Lkotlinx/coroutines/JobSupport;)V` @kind virtual;
  #L0f5cca.  return v0 @kind object;
}
procedure `kotlinx.coroutines.ChildHandleNode` `r`(`kotlinx.coroutines.JobSupport` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.r:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Lkotlinx/coroutines/ChildHandleNode;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f5a20.  call temp:= `isRemoved`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.isRemoved:()Z` @kind virtual;
  #L0f5a26.  v0:= temp;
  #L0f5a28.  if v0 == 0 then goto L0f5a36;
  #L0f5a2c.  call temp:= `getPrevNode`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f5a32.  v2:= temp @kind object;
  #L0f5a34.  goto L0f5a20;
  #L0f5a36.  call temp:= `getNextNode`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f5a3c.  v2:= temp @kind object;
  #L0f5a3e.  call temp:= `isRemoved`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.isRemoved:()Z` @kind virtual;
  #L0f5a44.  v0:= temp;
  #L0f5a46.  if v0 == 0 then goto L0f5a4c;
  #L0f5a4a.  goto L0f5a36;
  #L0f5a4c.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L0f5a50.  if v0 == 0 then goto L0f5a5a;
  #L0f5a54.  v2:= (`kotlinx.coroutines.ChildHandleNode`) v2 @kind object;
  #L0f5a58.  return v2 @kind object;
  #L0f5a5a.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.NodeList` @kind boolean;
  #L0f5a5e.  if v0 == 0 then goto L0f5a36;
  #L0f5a62.  v2:= 0I;
  #L0f5a64.  return v2 @kind object;
}
procedure `void` `s`(`kotlinx.coroutines.JobSupport` v7 @kind this, `kotlinx.coroutines.NodeList` v8 @kind object, `java.lang.Throwable` v9 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.s:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0f6038.  call `onCancelling`(v7, v9) @signature `Lkotlinx/coroutines/JobSupport;.onCancelling:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f603e.  call temp:= `getNext`(v8) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L0f6044.  v0:= temp @kind object;
  #L0f6046.  v0:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v0 @kind object;
  #L0f604a.  v1:= 0I;
  #L0f604c.  v2:= v1 @kind object;
  #L0f604e.  call temp:= `areEqual`(v0, v8) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f6054.  v3:= temp;
  #L0f6056.  if v3 != 0 then goto L0f60cc;
  #L0f605a.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobCancellingNode` @kind boolean;
  #L0f605e.  if v3 == 0 then goto L0f60c2;
  #L0f6062.  v3:= v0 @kind object;
  #L0f6064.  v3:= (`kotlinx.coroutines.JobNode`) v3 @kind object;
  #L0f6068.  call `invoke`(v3, v9) @signature `Lkotlinx/coroutines/CompletionHandlerBase;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f606e.  goto L0f60c2;
  #L0f6070.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f6072.  if v2 != 0 then goto L0f607a;
  #L0f6076.  v5:= v1 @kind object;
  #L0f6078.  goto L0f6082;
  #L0f607a.  call `addSuppressed`(v2, v4) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L0f6080.  v5:= v2 @kind object;
  #L0f6082.  if v5 != 0 then goto L0f60c2;
  #L0f6086.  v2:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L0f608a.  v5:= new `java.lang.StringBuilder`;
  #L0f608e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f6094.  v6:= "Exception in completion handler " @kind object;
  #L0f6098.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f609e.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f60a4.  v3:= " for " @kind object;
  #L0f60a8.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f60ae.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f60b4.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f60ba.  v3:= temp @kind object;
  #L0f60bc.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0f60c2.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f60c8.  v0:= temp @kind object;
  #L0f60ca.  goto L0f604e;
  #L0f60cc.  if v2 != 0 then goto L0f60d2;
  #L0f60d0.  goto L0f60d8;
  #L0f60d2.  call `handleOnCompletionException$kotlinx_coroutines_core`(v7, v2) @signature `Lkotlinx/coroutines/JobSupport;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f60d8.  call temp:= `e`(v7, v9) @signature `Lkotlinx/coroutines/JobSupport;.e:(Ljava/lang/Throwable;)Z` @kind direct;
  #L0f60de.  return @kind void;
  catch `java.lang.Throwable` @[L0f6068..L0f606e] goto L0f6070;
}
procedure `void` `t`(`kotlinx.coroutines.JobSupport` v7 @kind this, `kotlinx.coroutines.NodeList` v8 @kind object, `java.lang.Throwable` v9 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.t:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0f60fc.  call temp:= `getNext`(v8) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L0f6102.  v0:= temp @kind object;
  #L0f6104.  v0:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v0 @kind object;
  #L0f6108.  v1:= 0I;
  #L0f610a.  v2:= v1 @kind object;
  #L0f610c.  call temp:= `areEqual`(v0, v8) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f6112.  v3:= temp;
  #L0f6114.  if v3 != 0 then goto L0f618a;
  #L0f6118.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L0f611c.  if v3 == 0 then goto L0f6180;
  #L0f6120.  v3:= v0 @kind object;
  #L0f6122.  v3:= (`kotlinx.coroutines.JobNode`) v3 @kind object;
  #L0f6126.  call `invoke`(v3, v9) @signature `Lkotlinx/coroutines/CompletionHandlerBase;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f612c.  goto L0f6180;
  #L0f612e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f6130.  if v2 != 0 then goto L0f6138;
  #L0f6134.  v5:= v1 @kind object;
  #L0f6136.  goto L0f6140;
  #L0f6138.  call `addSuppressed`(v2, v4) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L0f613e.  v5:= v2 @kind object;
  #L0f6140.  if v5 != 0 then goto L0f6180;
  #L0f6144.  v2:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L0f6148.  v5:= new `java.lang.StringBuilder`;
  #L0f614c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f6152.  v6:= "Exception in completion handler " @kind object;
  #L0f6156.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f615c.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f6162.  v3:= " for " @kind object;
  #L0f6166.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f616c.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f6172.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f6178.  v3:= temp @kind object;
  #L0f617a.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0f6180.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f6186.  v0:= temp @kind object;
  #L0f6188.  goto L0f610c;
  #L0f618a.  if v2 != 0 then goto L0f6190;
  #L0f618e.  goto L0f6196;
  #L0f6190.  call `handleOnCompletionException$kotlinx_coroutines_core`(v7, v2) @signature `Lkotlinx/coroutines/JobSupport;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f6196.  return @kind void;
  catch `java.lang.Throwable` @[L0f6126..L0f612c] goto L0f612e;
}
procedure `java.util.concurrent.CancellationException` `toCancellationException$default`(`kotlinx.coroutines.JobSupport` v0 @kind object, `java.lang.Throwable` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f5880.  if v4 != 0 then goto L0f5898;
  #L0f5884.  v3:= v3 ^& 1;
  #L0f5888.  if v3 == 0 then goto L0f588e;
  #L0f588c.  v2:= 0I;
  #L0f588e.  call temp:= `toCancellationException`(v0, v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @kind virtual;
  #L0f5894.  v0:= temp @kind object;
  #L0f5896.  return v0 @kind object;
  #L0f5898.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0f589c.  v1:= "Super calls with default arguments not supported in this target, function: toCancellationException" @kind object;
  #L0f58a0.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f58a6.  throw v0;
}
procedure `void` `u`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.p` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.u:(Lkotlinx/coroutines/p;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f6208.  v0:= new `kotlinx.coroutines.NodeList`;
  #L0f620c.  call `<init>`(v0) @signature `Lkotlinx/coroutines/NodeList;.<init>:()V` @kind direct;
  #L0f6212.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/p;.isActive:()Z` @kind virtual;
  #L0f6218.  v1:= temp;
  #L0f621a.  if v1 == 0 then goto L0f6220;
  #L0f621e.  goto L0f622c;
  #L0f6220.  v1:= new `kotlinx.coroutines.InactiveNodeList`;
  #L0f6224.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/InactiveNodeList;.<init>:(Lkotlinx/coroutines/NodeList;)V` @kind direct;
  #L0f622a.  v0:= v1 @kind object;
  #L0f622c.  v1:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f6230.  call temp:= `a`(v1, v2, v3, v0) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f6236.  return @kind void;
}
procedure `void` `v`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.JobNode` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.v:(Lkotlinx/coroutines/JobNode;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f6248.  v0:= new `kotlinx.coroutines.NodeList`;
  #L0f624c.  call `<init>`(v0) @signature `Lkotlinx/coroutines/NodeList;.<init>:()V` @kind direct;
  #L0f6252.  call temp:= `addOneIfEmpty`(v3, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.addOneIfEmpty:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Z` @kind virtual;
  #L0f6258.  call temp:= `getNextNode`(v3) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f625e.  v0:= temp @kind object;
  #L0f6260.  v1:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f6264.  call temp:= `a`(v1, v2, v3, v0) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f626a.  return @kind void;
}
procedure `int` `w`(`kotlinx.coroutines.JobSupport` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f4bc4.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.p` @kind boolean;
  #L0f4bc8.  v1:= -1I;
  #L0f4bca.  v2:= 1I;
  #L0f4bcc.  v3:= 0I;
  #L0f4bce.  if v0 == 0 then goto L0f4c08;
  #L0f4bd2.  v0:= v5 @kind object;
  #L0f4bd4.  v0:= (`kotlinx.coroutines.p`) v0 @kind object;
  #L0f4bd8.  call temp:= `isActive`(v0) @signature `Lkotlinx/coroutines/p;.isActive:()Z` @kind virtual;
  #L0f4bde.  v0:= temp;
  #L0f4be0.  if v0 == 0 then goto L0f4be6;
  #L0f4be4.  return v3;
  #L0f4be6.  v0:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f4bea.  call temp:= `access$getEMPTY_ACTIVE$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getEMPTY_ACTIVE$p:()Lkotlinx/coroutines/p;` @kind static;
  #L0f4bf0.  v3:= temp @kind object;
  #L0f4bf2.  call temp:= `a`(v0, v4, v5, v3) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f4bf8.  v5:= temp;
  #L0f4bfa.  if v5 != 0 then goto L0f4c00;
  #L0f4bfe.  return v1;
  #L0f4c00.  call `onStart`(v4) @signature `Lkotlinx/coroutines/JobSupport;.onStart:()V` @kind virtual;
  #L0f4c06.  return v2;
  #L0f4c08.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.InactiveNodeList` @kind boolean;
  #L0f4c0c.  if v0 == 0 then goto L0f4c38;
  #L0f4c10.  v0:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f4c14.  v3:= v5 @kind object;
  #L0f4c16.  v3:= (`kotlinx.coroutines.InactiveNodeList`) v3 @kind object;
  #L0f4c1a.  call temp:= `getList`(v3) @signature `Lkotlinx/coroutines/InactiveNodeList;.getList:()Lkotlinx/coroutines/NodeList;` @kind virtual;
  #L0f4c20.  v3:= temp @kind object;
  #L0f4c22.  call temp:= `a`(v0, v4, v5, v3) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f4c28.  v5:= temp;
  #L0f4c2a.  if v5 != 0 then goto L0f4c30;
  #L0f4c2e.  return v1;
  #L0f4c30.  call `onStart`(v4) @signature `Lkotlinx/coroutines/JobSupport;.onStart:()V` @kind virtual;
  #L0f4c36.  return v2;
  #L0f4c38.  return v3;
}
procedure `java.lang.String` `x`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.x:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f53b0.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L0f53b4.  v1:= "Active" @kind object;
  #L0f53b8.  if v0 == 0 then goto L0f53e4;
  #L0f53bc.  v3:= (`kotlinx.coroutines.JobSupport$c`) v3 @kind object;
  #L0f53c0.  call temp:= `e`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L0f53c6.  v0:= temp;
  #L0f53c8.  if v0 == 0 then goto L0f53d2;
  #L0f53cc.  v1:= "Cancelling" @kind object;
  #L0f53d0.  goto L0f5416;
  #L0f53d2.  call temp:= `f`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L0f53d8.  v3:= temp;
  #L0f53da.  if v3 == 0 then goto L0f5416;
  #L0f53de.  v1:= "Completing" @kind object;
  #L0f53e2.  goto L0f5416;
  #L0f53e4.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f53e8.  if v0 == 0 then goto L0f5404;
  #L0f53ec.  v3:= (`kotlinx.coroutines.Incomplete`) v3 @kind object;
  #L0f53f0.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/Incomplete;.isActive:()Z` @kind interface;
  #L0f53f6.  v3:= temp;
  #L0f53f8.  if v3 == 0 then goto L0f53fe;
  #L0f53fc.  goto L0f5416;
  #L0f53fe.  v1:= "New" @kind object;
  #L0f5402.  goto L0f5416;
  #L0f5404.  v3:= instanceof @variable v3 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f5408.  if v3 == 0 then goto L0f5412;
  #L0f540c.  v1:= "Cancelled" @kind object;
  #L0f5410.  goto L0f5416;
  #L0f5412.  v1:= "Completed" @kind object;
  #L0f5416.  return v1 @kind object;
}
procedure `boolean` `y`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.Incomplete` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.y:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f4aec.  v0:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f4af0.  call temp:= `boxIncomplete`(v4) @signature `Lkotlinx/coroutines/JobSupportKt;.boxIncomplete:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f4af6.  v1:= temp @kind object;
  #L0f4af8.  call temp:= `a`(v0, v2, v3, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f4afe.  v0:= temp;
  #L0f4b00.  if v0 != 0 then goto L0f4b08;
  #L0f4b04.  v3:= 0I;
  #L0f4b06.  return v3;
  #L0f4b08.  v0:= 0I;
  #L0f4b0a.  call `onCancelling`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.onCancelling:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f4b10.  call `onCompletionInternal`(v2, v4) @signature `Lkotlinx/coroutines/JobSupport;.onCompletionInternal:(Ljava/lang/Object;)V` @kind virtual;
  #L0f4b16.  call `f`(v2, v3, v4) @signature `Lkotlinx/coroutines/JobSupport;.f:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)V` @kind direct;
  #L0f4b1c.  v3:= 1I;
  #L0f4b1e.  return v3;
}
procedure `boolean` `z`(`kotlinx.coroutines.JobSupport` v4 @kind this, `kotlinx.coroutines.Incomplete` v5 @kind object, `java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.z:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f4b30.  call temp:= `m`(v4, v5) @signature `Lkotlinx/coroutines/JobSupport;.m:(Lkotlinx/coroutines/Incomplete;)Lkotlinx/coroutines/NodeList;` @kind direct;
  #L0f4b36.  v0:= temp @kind object;
  #L0f4b38.  v1:= 0I;
  #L0f4b3a.  if v0 != 0 then goto L0f4b40;
  #L0f4b3e.  return v1;
  #L0f4b40.  v2:= new `kotlinx.coroutines.JobSupport$c`;
  #L0f4b44.  call `<init>`(v2, v0, v1, v6) @signature `Lkotlinx/coroutines/JobSupport$c;.<init>:(Lkotlinx/coroutines/NodeList;ZLjava/lang/Throwable;)V` @kind direct;
  #L0f4b4a.  v3:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f4b4e.  call temp:= `a`(v3, v4, v5, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f4b54.  v5:= temp;
  #L0f4b56.  if v5 != 0 then goto L0f4b5c;
  #L0f4b5a.  return v1;
  #L0f4b5c.  call `s`(v4, v0, v6) @signature `Lkotlinx/coroutines/JobSupport;.s:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @kind direct;
  #L0f4b62.  v5:= 1I;
  #L0f4b64.  return v5;
}
procedure `void` `afterCompletion`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.afterCompletion:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L0f5e54.  return @kind void;
}
procedure `kotlinx.coroutines.ChildHandle` `attachChild`(`kotlinx.coroutines.JobSupport` v6 @kind this, `kotlinx.coroutines.ChildJob` v7 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.attachChild:(Lkotlinx/coroutines/ChildJob;)Lkotlinx/coroutines/ChildHandle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0f598c.  v3:= new `kotlinx.coroutines.ChildHandleNode`;
  #L0f5990.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/ChildHandleNode;.<init>:(Lkotlinx/coroutines/ChildJob;)V` @kind direct;
  #L0f5996.  v1:= 1I;
  #L0f5998.  v2:= 0I;
  #L0f599a.  v4:= 2I;
  #L0f599c.  v5:= 0I;
  #L0f599e.  v0:= v6 @kind object;
  #L0f59a0.  call temp:= `invokeOnCompletion$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.invokeOnCompletion$default:(Lkotlinx/coroutines/Job;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;` @kind static;
  #L0f59a6.  v7:= temp @kind object;
  #L0f59a8.  v7:= (`kotlinx.coroutines.ChildHandle`) v7 @kind object;
  #L0f59ac.  return v7 @kind object;
}
procedure `java.lang.Object` `awaitInternal$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.awaitInternal$kotlinx_coroutines_core:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f4c84.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f4c8a.  v0:= temp @kind object;
  #L0f4c8c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f4c90.  if v1 != 0 then goto L0f4cb0;
  #L0f4c94.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f4c98.  if v3 != 0 then goto L0f4ca6;
  #L0f4c9c.  call temp:= `unboxState`(v0) @signature `Lkotlinx/coroutines/JobSupportKt;.unboxState:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f4ca2.  v3:= temp @kind object;
  #L0f4ca4.  return v3 @kind object;
  #L0f4ca6.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L0f4caa.  v3:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f4cae.  throw v3;
  #L0f4cb0.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @kind direct;
  #L0f4cb6.  v0:= temp;
  #L0f4cb8.  if v0 < 0 then goto L0f4c84;
  #L0f4cbc.  call temp:= `c`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.c:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L0f4cc2.  v3:= temp @kind object;
  #L0f4cc4.  return v3 @kind object;
}
procedure `void` `cancel`(`kotlinx.coroutines.JobSupport` v0 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.cancel:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0f5e68.  call `cancel`(v0) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel:(Lkotlinx/coroutines/Job;)V` @kind static;
  #L0f5e6e.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.util.concurrent.CancellationException` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f5e80.  if v3 != 0 then goto L0f5e9a;
  #L0f5e84.  v3:= 0I;
  #L0f5e86.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L0f5e8a.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0f5e90.  v1:= temp @kind object;
  #L0f5e92.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f5e98.  v3:= v0 @kind object;
  #L0f5e9a.  call `cancelInternal`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f5ea0.  return @kind void;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.JobSupport` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L0f477c.  v0:= 1I;
  #L0f477e.  v1:= 0I;
  #L0f4780.  if v4 != 0 then goto L0f4788;
  #L0f4784.  v4:= v1 @kind object;
  #L0f4786.  goto L0f4790;
  #L0f4788.  call temp:= `toCancellationException$default`(v3, v4, v1, v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L0f478e.  v4:= temp @kind object;
  #L0f4790.  if v4 != 0 then goto L0f47a6;
  #L0f4794.  v4:= new `kotlinx.coroutines.JobCancellationException`;
  #L0f4798.  call temp:= `access$cancellationExceptionMessage`(v3) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0f479e.  v2:= temp @kind object;
  #L0f47a0.  call `<init>`(v4, v2, v1, v3) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f47a6.  call `cancelInternal`(v3, v4) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f47ac.  return v0;
}
procedure `boolean` `cancelCoroutine`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.cancelCoroutine:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f47c0.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f47c6.  v1:= temp;
  #L0f47c8.  return v1;
}
procedure `boolean` `cancelImpl$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f47dc.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f47e2.  v0:= temp @kind object;
  #L0f47e4.  call temp:= `getOnCancelComplete$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getOnCancelComplete$kotlinx_coroutines_core:()Z` @kind virtual;
  #L0f47ea.  v1:= temp;
  #L0f47ec.  v2:= 1I;
  #L0f47ee.  if v1 == 0 then goto L0f4804;
  #L0f47f2.  call temp:= `d`(v3, v4) @signature `Lkotlinx/coroutines/JobSupport;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0f47f8.  v0:= temp @kind object;
  #L0f47fa.  v1:= `@@kotlinx.coroutines.JobSupportKt.COMPLETING_WAITING_CHILDREN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f47fe.  if v0 != v1 then goto L0f4804;
  #L0f4802.  return v2;
  #L0f4804.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f480a.  v1:= temp @kind object;
  #L0f480c.  if v0 != v1 then goto L0f4818;
  #L0f4810.  call temp:= `p`(v3, v4) @signature `Lkotlinx/coroutines/JobSupport;.p:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0f4816.  v0:= temp @kind object;
  #L0f4818.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f481e.  v4:= temp @kind object;
  #L0f4820.  if v0 != v4 then goto L0f4826;
  #L0f4824.  goto L0f4846;
  #L0f4826.  v4:= `@@kotlinx.coroutines.JobSupportKt.COMPLETING_WAITING_CHILDREN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f482a.  if v0 != v4 then goto L0f4830;
  #L0f482e.  goto L0f4846;
  #L0f4830.  call temp:= `access$getTOO_LATE_TO_CANCEL$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getTOO_LATE_TO_CANCEL$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f4836.  v4:= temp @kind object;
  #L0f4838.  if v0 != v4 then goto L0f4840;
  #L0f483c.  v2:= 0I;
  #L0f483e.  goto L0f4846;
  #L0f4840.  call `afterCompletion`(v3, v0) @signature `Lkotlinx/coroutines/JobSupport;.afterCompletion:(Ljava/lang/Object;)V` @kind virtual;
  #L0f4846.  return v2;
}
procedure `void` `cancelInternal`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L0f5eb4.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f5eba.  return @kind void;
}
procedure `java.lang.String` `cancellationExceptionMessage`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.cancellationExceptionMessage:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0f537c.  v0:= "Job was cancelled" @kind object;
  #L0f5380.  return v0 @kind object;
}
procedure `boolean` `childCancelled`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.childCancelled:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f48ac.  v0:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L0f48b0.  v1:= 1I;
  #L0f48b2.  if v0 == 0 then goto L0f48b8;
  #L0f48b6.  return v1;
  #L0f48b8.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f48be.  v3:= temp;
  #L0f48c0.  if v3 == 0 then goto L0f48d2;
  #L0f48c4.  call temp:= `getHandlesException$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getHandlesException$kotlinx_coroutines_core:()Z` @kind virtual;
  #L0f48ca.  v3:= temp;
  #L0f48cc.  if v3 == 0 then goto L0f48d2;
  #L0f48d0.  goto L0f48d4;
  #L0f48d2.  v1:= 0I;
  #L0f48d4.  return v1;
}
procedure `kotlinx.coroutines.JobCancellationException` `defaultCancellationException$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.defaultCancellationException$kotlinx_coroutines_core:(Ljava/lang/String;Ljava/lang/Throwable;)Lkotlinx/coroutines/JobCancellationException;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f5c50.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L0f5c54.  if v2 != 0 then goto L0f5c60;
  #L0f5c58.  call temp:= `access$cancellationExceptionMessage`(v1) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0f5c5e.  v2:= temp @kind object;
  #L0f5c60.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f5c66.  return v0 @kind object;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L0f4e8c.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.fold:(Lkotlinx/coroutines/Job;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L0f4e92.  v1:= temp @kind object;
  #L0f4e94.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC {
    temp;

  #L0f5930.  call temp:= `get`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.get:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L0f5936.  v1:= temp @kind object;
  #L0f5938.  return v1 @kind object;
}
procedure `java.util.concurrent.CancellationException` `getCancellationException`(`kotlinx.coroutines.JobSupport` v4 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f5704.  call temp:= `getState$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f570a.  v0:= temp @kind object;
  #L0f570c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L0f5710.  v2:= "Job is still new or active: " @kind object;
  #L0f5714.  v3:= 0I;
  #L0f5716.  if v1 == 0 then goto L0f576a;
  #L0f571a.  v0:= (`kotlinx.coroutines.JobSupport$c`) v0 @kind object;
  #L0f571e.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f5724.  v0:= temp @kind object;
  #L0f5726.  if v0 != 0 then goto L0f572c;
  #L0f572a.  goto L0f5748;
  #L0f572c.  call temp:= `getClassSimpleName`(v4) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f5732.  v1:= temp @kind object;
  #L0f5734.  v3:= " is cancelling" @kind object;
  #L0f5738.  call temp:= `stringPlus`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f573e.  v1:= temp @kind object;
  #L0f5740.  call temp:= `toCancellationException`(v4, v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @kind virtual;
  #L0f5746.  v3:= temp @kind object;
  #L0f5748.  if v3 == 0 then goto L0f574e;
  #L0f574c.  goto L0f57ae;
  #L0f574e.  v0:= new `java.lang.IllegalStateException`;
  #L0f5752.  call temp:= `stringPlus`(v2, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f5758.  v1:= temp @kind object;
  #L0f575a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f5760.  v1:= temp @kind object;
  #L0f5762.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f5768.  throw v0;
  #L0f576a.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f576e.  if v1 != 0 then goto L0f57b0;
  #L0f5772.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f5776.  if v1 == 0 then goto L0f578e;
  #L0f577a.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L0f577e.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f5782.  v1:= 1I;
  #L0f5784.  call temp:= `toCancellationException$default`(v4, v0, v3, v1, v3) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L0f578a.  v3:= temp @kind object;
  #L0f578c.  goto L0f57ae;
  #L0f578e.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L0f5792.  call temp:= `getClassSimpleName`(v4) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f5798.  v1:= temp @kind object;
  #L0f579a.  v2:= " has completed normally" @kind object;
  #L0f579e.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f57a4.  v1:= temp @kind object;
  #L0f57a6.  call `<init>`(v0, v1, v3, v4) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f57ac.  v3:= v0 @kind object;
  #L0f57ae.  return v3 @kind object;
  #L0f57b0.  v0:= new `java.lang.IllegalStateException`;
  #L0f57b4.  call temp:= `stringPlus`(v2, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f57ba.  v1:= temp @kind object;
  #L0f57bc.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f57c2.  v1:= temp @kind object;
  #L0f57c4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f57ca.  throw v0;
}
procedure `java.util.concurrent.CancellationException` `getChildJobCancellationCause`(`kotlinx.coroutines.JobSupport` v4 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getChildJobCancellationCause:()Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f57dc.  call temp:= `getState$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f57e2.  v0:= temp @kind object;
  #L0f57e4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L0f57e8.  v2:= 0I;
  #L0f57ea.  if v1 == 0 then goto L0f57fe;
  #L0f57ee.  v1:= v0 @kind object;
  #L0f57f0.  v1:= (`kotlinx.coroutines.JobSupport$c`) v1 @kind object;
  #L0f57f4.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f57fa.  v1:= temp @kind object;
  #L0f57fc.  goto L0f581c;
  #L0f57fe.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f5802.  if v1 == 0 then goto L0f5812;
  #L0f5806.  v1:= v0 @kind object;
  #L0f5808.  v1:= (`kotlinx.coroutines.CompletedExceptionally`) v1 @kind object;
  #L0f580c.  v1:= v1.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f5810.  goto L0f581c;
  #L0f5812.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f5816.  if v1 != 0 then goto L0f584e;
  #L0f581a.  v1:= v2 @kind object;
  #L0f581c.  v3:= instanceof @variable v1 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L0f5820.  if v3 == 0 then goto L0f582a;
  #L0f5824.  v2:= v1 @kind object;
  #L0f5826.  v2:= (`java.util.concurrent.CancellationException`) v2 @kind object;
  #L0f582a.  if v2 != 0 then goto L0f584c;
  #L0f582e.  v2:= new `kotlinx.coroutines.JobCancellationException`;
  #L0f5832.  call temp:= `x`(v4, v0) @signature `Lkotlinx/coroutines/JobSupport;.x:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L0f5838.  v0:= temp @kind object;
  #L0f583a.  v3:= "Parent job is " @kind object;
  #L0f583e.  call temp:= `stringPlus`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f5844.  v0:= temp @kind object;
  #L0f5846.  call `<init>`(v2, v0, v1, v4) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f584c.  return v2 @kind object;
  #L0f584e.  v1:= new `java.lang.IllegalStateException`;
  #L0f5852.  v2:= "Cannot be cancelling child in this state: " @kind object;
  #L0f5856.  call temp:= `stringPlus`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f585c.  v0:= temp @kind object;
  #L0f585e.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f5864.  v0:= temp @kind object;
  #L0f5866.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f586c.  throw v1;
}
procedure `kotlin.sequences.Sequence` `getChildren`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getChildren:()Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f5964.  v0:= new `kotlinx.coroutines.JobSupport$d`;
  #L0f5968.  v1:= 0I;
  #L0f596a.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/JobSupport$d;.<init>:(Lkotlinx/coroutines/JobSupport;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0f5970.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L0f5976.  v0:= temp @kind object;
  #L0f5978.  return v0 @kind object;
}
procedure `java.lang.Object` `getCompletedInternal$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getCompletedInternal$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f4ea8.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f4eae.  v0:= temp @kind object;
  #L0f4eb0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f4eb4.  v1:= v1 ^~ 1;
  #L0f4eb8.  if v1 == 0 then goto L0f4ed8;
  #L0f4ebc.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f4ec0.  if v1 != 0 then goto L0f4ece;
  #L0f4ec4.  call temp:= `unboxState`(v0) @signature `Lkotlinx/coroutines/JobSupportKt;.unboxState:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f4eca.  v0:= temp @kind object;
  #L0f4ecc.  return v0 @kind object;
  #L0f4ece.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L0f4ed2.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f4ed6.  throw v0;
  #L0f4ed8.  v0:= new `java.lang.IllegalStateException`;
  #L0f4edc.  v1:= "This job has not completed yet" @kind object;
  #L0f4ee0.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f4ee6.  v1:= temp @kind object;
  #L0f4ee8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f4eee.  throw v0;
}
procedure `java.lang.Throwable` `getCompletionCause`(`kotlinx.coroutines.JobSupport` v3 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getCompletionCause:()Ljava/lang/Throwable;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f5528.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f552e.  v0:= temp @kind object;
  #L0f5530.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L0f5534.  v2:= "Job is still new or active: " @kind object;
  #L0f5538.  if v1 == 0 then goto L0f556a;
  #L0f553c.  v0:= (`kotlinx.coroutines.JobSupport$c`) v0 @kind object;
  #L0f5540.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f5546.  v0:= temp @kind object;
  #L0f5548.  if v0 == 0 then goto L0f554e;
  #L0f554c.  goto L0f5586;
  #L0f554e.  v0:= new `java.lang.IllegalStateException`;
  #L0f5552.  call temp:= `stringPlus`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f5558.  v1:= temp @kind object;
  #L0f555a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f5560.  v1:= temp @kind object;
  #L0f5562.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f5568.  throw v0;
  #L0f556a.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f556e.  if v1 != 0 then goto L0f5588;
  #L0f5572.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f5576.  if v1 == 0 then goto L0f5584;
  #L0f557a.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L0f557e.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f5582.  goto L0f5586;
  #L0f5584.  v0:= 0I;
  #L0f5586.  return v0 @kind object;
  #L0f5588.  v0:= new `java.lang.IllegalStateException`;
  #L0f558c.  call temp:= `stringPlus`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f5592.  v1:= temp @kind object;
  #L0f5594.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f559a.  v1:= temp @kind object;
  #L0f559c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f55a2.  throw v0;
}
procedure `boolean` `getCompletionCauseHandled`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getCompletionCauseHandled:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L0f48e8.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f48ee.  v0:= temp @kind object;
  #L0f48f0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f48f4.  if v1 == 0 then goto L0f490c;
  #L0f48f8.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L0f48fc.  call temp:= `getHandled`(v0) @signature `Lkotlinx/coroutines/CompletedExceptionally;.getHandled:()Z` @kind virtual;
  #L0f4902.  v0:= temp;
  #L0f4904.  if v0 == 0 then goto L0f490c;
  #L0f4908.  v0:= 1I;
  #L0f490a.  goto L0f490e;
  #L0f490c.  v0:= 0I;
  #L0f490e.  return v0;
}
procedure `java.lang.Throwable` `getCompletionExceptionOrNull`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getCompletionExceptionOrNull:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f55b4.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f55ba.  v0:= temp @kind object;
  #L0f55bc.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f55c0.  v1:= v1 ^~ 1;
  #L0f55c4.  if v1 == 0 then goto L0f55d2;
  #L0f55c8.  call temp:= `k`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.k:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L0f55ce.  v0:= temp @kind object;
  #L0f55d0.  return v0 @kind object;
  #L0f55d2.  v0:= new `java.lang.IllegalStateException`;
  #L0f55d6.  v1:= "This job has not completed yet" @kind object;
  #L0f55da.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f55e0.  v1:= temp @kind object;
  #L0f55e2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f55e8.  throw v0;
}
procedure `boolean` `getHandlesException$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getHandlesException$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f4920.  v0:= 1I;
  #L0f4922.  return v0;
}
procedure `kotlin.coroutines.CoroutineContext$Key` `getKey`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f594c.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0f5950.  return v0 @kind object;
}
procedure `boolean` `getOnCancelComplete$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getOnCancelComplete$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f4934.  v0:= 0I;
  #L0f4936.  return v0;
}
procedure `kotlinx.coroutines.selects.SelectClause0` `getOnJoin`(`kotlinx.coroutines.JobSupport` v0 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getOnJoin:()Lkotlinx/coroutines/selects/SelectClause0;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f5d44.  return v0 @kind object;
}
procedure `kotlinx.coroutines.ChildHandle` `getParentHandle$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f59c0.  v0:= v1.`kotlinx.coroutines.JobSupport._parentHandle` @type ^`java.lang.Object` @kind object;
  #L0f59c4.  v0:= (`kotlinx.coroutines.ChildHandle`) v0 @kind object;
  #L0f59c8.  return v0 @kind object;
}
procedure `java.lang.Object` `getState$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f4f00.  v0:= v2.`kotlinx.coroutines.JobSupport._state` @type ^`java.lang.Object` @kind object;
  #L0f4f04.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.OpDescriptor` @kind boolean;
  #L0f4f08.  if v1 != 0 then goto L0f4f0e;
  #L0f4f0c.  return v0 @kind object;
  #L0f4f0e.  v0:= (`kotlinx.coroutines.internal.OpDescriptor`) v0 @kind object;
  #L0f4f12.  call temp:= `perform`(v0, v2) @signature `Lkotlinx/coroutines/internal/OpDescriptor;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0f4f18.  goto L0f4f00;
}
procedure `boolean` `handleJobException`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.handleJobException:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {
    temp;

  #L0f4948.  v1:= 0I;
  #L0f494a.  return v1;
}
procedure `void` `handleOnCompletionException$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L0f5fd0.  throw v1;
}
procedure `void` `initParentJob`(`kotlinx.coroutines.JobSupport` v1 @kind this, `kotlinx.coroutines.Job` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.initParentJob:(Lkotlinx/coroutines/Job;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L0f5fe4.  if v2 != 0 then goto L0f5ff4;
  #L0f5fe8.  v2:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L0f5fec.  call `setParentHandle$kotlinx_coroutines_core`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/ChildHandle;)V` @kind virtual;
  #L0f5ff2.  return @kind void;
  #L0f5ff4.  call temp:= `start`(v2) @signature `Lkotlinx/coroutines/Job;.start:()Z` @kind interface;
  #L0f5ffa.  call temp:= `attachChild`(v2, v1) @signature `Lkotlinx/coroutines/Job;.attachChild:(Lkotlinx/coroutines/ChildJob;)Lkotlinx/coroutines/ChildHandle;` @kind interface;
  #L0f6000.  v2:= temp @kind object;
  #L0f6002.  call `setParentHandle$kotlinx_coroutines_core`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/ChildHandle;)V` @kind virtual;
  #L0f6008.  call temp:= `isCompleted`(v1) @signature `Lkotlinx/coroutines/JobSupport;.isCompleted:()Z` @kind virtual;
  #L0f600e.  v0:= temp;
  #L0f6010.  if v0 == 0 then goto L0f6024;
  #L0f6014.  call `dispose`(v2) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L0f601a.  v2:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L0f601e.  call `setParentHandle$kotlinx_coroutines_core`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/ChildHandle;)V` @kind virtual;
  #L0f6024.  return @kind void;
}
procedure `kotlinx.coroutines.DisposableHandle` `invokeOnCompletion`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f5bc0.  v0:= 0I;
  #L0f5bc2.  v1:= 1I;
  #L0f5bc4.  call temp:= `invokeOnCompletion`(v2, v0, v1, v3) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(ZZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L0f5bca.  v3:= temp @kind object;
  #L0f5bcc.  return v3 @kind object;
}
procedure `kotlinx.coroutines.DisposableHandle` `invokeOnCompletion`(`kotlinx.coroutines.JobSupport` v6 @kind this, `boolean` v7 , `boolean` v8 , `kotlin.jvm.functions.Function1` v9 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(ZZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0f5a78.  call temp:= `q`(v6, v9, v7) @signature `Lkotlinx/coroutines/JobSupport;.q:(Lkotlin/jvm/functions/Function1;Z)Lkotlinx/coroutines/JobNode;` @kind direct;
  #L0f5a7e.  v0:= temp @kind object;
  #L0f5a80.  call temp:= `getState$kotlinx_coroutines_core`(v6) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f5a86.  v1:= temp @kind object;
  #L0f5a88.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.p` @kind boolean;
  #L0f5a8c.  if v2 == 0 then goto L0f5abc;
  #L0f5a90.  v2:= v1 @kind object;
  #L0f5a92.  v2:= (`kotlinx.coroutines.p`) v2 @kind object;
  #L0f5a96.  call temp:= `isActive`(v2) @signature `Lkotlinx/coroutines/p;.isActive:()Z` @kind virtual;
  #L0f5a9c.  v3:= temp;
  #L0f5a9e.  if v3 == 0 then goto L0f5ab4;
  #L0f5aa2.  v2:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f5aa6.  call temp:= `a`(v2, v6, v1, v0) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f5aac.  v1:= temp;
  #L0f5aae.  if v1 == 0 then goto L0f5a80;
  #L0f5ab2.  return v0 @kind object;
  #L0f5ab4.  call `u`(v6, v2) @signature `Lkotlinx/coroutines/JobSupport;.u:(Lkotlinx/coroutines/p;)V` @kind direct;
  #L0f5aba.  goto L0f5a80;
  #L0f5abc.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f5ac0.  v3:= 0I;
  #L0f5ac2.  if v2 == 0 then goto L0f5b72;
  #L0f5ac6.  v2:= v1 @kind object;
  #L0f5ac8.  v2:= (`kotlinx.coroutines.Incomplete`) v2 @kind object;
  #L0f5acc.  call temp:= `getList`(v2) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L0f5ad2.  v2:= temp @kind object;
  #L0f5ad4.  if v2 != 0 then goto L0f5aee;
  #L0f5ad8.  v2:= "null cannot be cast to non-null type kotlinx.coroutines.JobNode" @kind object;
  #L0f5adc.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L0f5ae2.  v1:= (`kotlinx.coroutines.JobNode`) v1 @kind object;
  #L0f5ae6.  call `v`(v6, v1) @signature `Lkotlinx/coroutines/JobSupport;.v:(Lkotlinx/coroutines/JobNode;)V` @kind direct;
  #L0f5aec.  goto L0f5a80;
  #L0f5aee.  v4:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L0f5af2.  if v7 == 0 then goto L0f5b54;
  #L0f5af6.  v5:= instanceof @variable v1 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L0f5afa.  if v5 == 0 then goto L0f5b54;
  #L0f5afe.  @monitorenter v1
  #L0f5b00.  v3:= v1 @kind object;
  #L0f5b02.  v3:= (`kotlinx.coroutines.JobSupport$c`) v3 @kind object;
  #L0f5b06.  call temp:= `d`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f5b0c.  v3:= temp @kind object;
  #L0f5b0e.  if v3 == 0 then goto L0f5b2c;
  #L0f5b12.  v5:= instanceof @variable v9 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L0f5b16.  if v5 == 0 then goto L0f5b46;
  #L0f5b1a.  v5:= v1 @kind object;
  #L0f5b1c.  v5:= (`kotlinx.coroutines.JobSupport$c`) v5 @kind object;
  #L0f5b20.  call temp:= `f`(v5) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L0f5b26.  v5:= temp;
  #L0f5b28.  if v5 != 0 then goto L0f5b46;
  #L0f5b2c.  call temp:= `a`(v6, v1, v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.a:(Ljava/lang/Object;Lkotlinx/coroutines/NodeList;Lkotlinx/coroutines/JobNode;)Z` @kind direct;
  #L0f5b32.  v4:= temp;
  #L0f5b34.  if v4 != 0 then goto L0f5b3c;
  #L0f5b38.  @monitorexit v1
  #L0f5b3a.  goto L0f5a80;
  #L0f5b3c.  if v3 != 0 then goto L0f5b44;
  #L0f5b40.  @monitorexit v1
  #L0f5b42.  return v0 @kind object;
  #L0f5b44.  v4:= v0 @kind object;
  #L0f5b46.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f5b4a.  @monitorexit v1
  #L0f5b4c.  goto L0f5b54;
  #L0f5b4e.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f5b50.  @monitorexit v1
  #L0f5b52.  throw v7;
  #L0f5b54.  if v3 == 0 then goto L0f5b64;
  #L0f5b58.  if v8 == 0 then goto L0f5b62;
  #L0f5b5c.  call temp:= `invoke`(v9, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0f5b62.  return v4 @kind object;
  #L0f5b64.  call temp:= `a`(v6, v1, v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.a:(Ljava/lang/Object;Lkotlinx/coroutines/NodeList;Lkotlinx/coroutines/JobNode;)Z` @kind direct;
  #L0f5b6a.  v1:= temp;
  #L0f5b6c.  if v1 == 0 then goto L0f5a80;
  #L0f5b70.  return v0 @kind object;
  #L0f5b72.  if v8 == 0 then goto L0f5b96;
  #L0f5b76.  v7:= instanceof @variable v1 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f5b7a.  if v7 == 0 then goto L0f5b84;
  #L0f5b7e.  v1:= (`kotlinx.coroutines.CompletedExceptionally`) v1 @kind object;
  #L0f5b82.  goto L0f5b86;
  #L0f5b84.  v1:= v3 @kind object;
  #L0f5b86.  if v1 != 0 then goto L0f5b8c;
  #L0f5b8a.  goto L0f5b90;
  #L0f5b8c.  v3:= v1.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f5b90.  call temp:= `invoke`(v9, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0f5b96.  v7:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L0f5b9a.  return v7 @kind object;
  catch `java.lang.Throwable` @[L0f5b00..L0f5b34] goto L0f5b4e;
  catch `java.lang.Throwable` @[L0f5b46..L0f5b4a] goto L0f5b4e;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f495c.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f4962.  v0:= temp @kind object;
  #L0f4964.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f4968.  if v1 == 0 then goto L0f4980;
  #L0f496c.  v0:= (`kotlinx.coroutines.Incomplete`) v0 @kind object;
  #L0f4970.  call temp:= `isActive`(v0) @signature `Lkotlinx/coroutines/Incomplete;.isActive:()Z` @kind interface;
  #L0f4976.  v0:= temp;
  #L0f4978.  if v0 == 0 then goto L0f4980;
  #L0f497c.  v0:= 1I;
  #L0f497e.  goto L0f4982;
  #L0f4980.  v0:= 0I;
  #L0f4982.  return v0;
}
procedure `boolean` `isCancelled`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.isCancelled:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f4994.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f499a.  v0:= temp @kind object;
  #L0f499c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f49a0.  if v1 != 0 then goto L0f49c2;
  #L0f49a4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L0f49a8.  if v1 == 0 then goto L0f49be;
  #L0f49ac.  v0:= (`kotlinx.coroutines.JobSupport$c`) v0 @kind object;
  #L0f49b0.  call temp:= `e`(v0) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L0f49b6.  v0:= temp;
  #L0f49b8.  if v0 == 0 then goto L0f49be;
  #L0f49bc.  goto L0f49c2;
  #L0f49be.  v0:= 0I;
  #L0f49c0.  goto L0f49c4;
  #L0f49c2.  v0:= 1I;
  #L0f49c4.  return v0;
}
procedure `boolean` `isCompleted`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.isCompleted:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f49d8.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f49de.  v0:= temp @kind object;
  #L0f49e0.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f49e4.  v0:= v0 ^~ 1;
  #L0f49e8.  return v0;
}
procedure `boolean` `isCompletedExceptionally`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.isCompletedExceptionally:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f49fc.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f4a02.  v0:= temp @kind object;
  #L0f4a04.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f4a08.  return v0;
}
procedure `boolean` `isScopedCoroutine`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.isScopedCoroutine:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0f4a1c.  v0:= 0I;
  #L0f4a1e.  return v0;
}
procedure `java.lang.Object` `join`(`kotlinx.coroutines.JobSupport` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.join:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f4f2c.  call temp:= `n`(v1) @signature `Lkotlinx/coroutines/JobSupport;.n:()Z` @kind direct;
  #L0f4f32.  v0:= temp;
  #L0f4f34.  if v0 != 0 then goto L0f4f4c;
  #L0f4f38.  call temp:= `getContext`(v2) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f4f3e.  v2:= temp @kind object;
  #L0f4f40.  call `ensureActive`(v2) @signature `Lkotlinx/coroutines/JobKt;.ensureActive:(Lkotlin/coroutines/CoroutineContext;)V` @kind static;
  #L0f4f46.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f4f4a.  return v2 @kind object;
  #L0f4f4c.  call temp:= `o`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.o:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L0f4f52.  v2:= temp @kind object;
  #L0f4f54.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f4f5a.  v0:= temp @kind object;
  #L0f4f5c.  if v2 != v0 then goto L0f4f62;
  #L0f4f60.  return v2 @kind object;
  #L0f4f62.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f4f66.  return v2 @kind object;
}
procedure `boolean` `makeCompleting$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.makeCompleting$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f4a64.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f4a6a.  v0:= temp @kind object;
  #L0f4a6c.  call temp:= `A`(v3, v0, v4) @signature `Lkotlinx/coroutines/JobSupport;.A:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0f4a72.  v0:= temp @kind object;
  #L0f4a74.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f4a7a.  v1:= temp @kind object;
  #L0f4a7c.  if v0 != v1 then goto L0f4a84;
  #L0f4a80.  v4:= 0I;
  #L0f4a82.  return v4;
  #L0f4a84.  v1:= `@@kotlinx.coroutines.JobSupportKt.COMPLETING_WAITING_CHILDREN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f4a88.  v2:= 1I;
  #L0f4a8a.  if v0 != v1 then goto L0f4a90;
  #L0f4a8e.  return v2;
  #L0f4a90.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f4a96.  v1:= temp @kind object;
  #L0f4a98.  if v0 != v1 then goto L0f4a9e;
  #L0f4a9c.  goto L0f4a64;
  #L0f4a9e.  call `afterCompletion`(v3, v0) @signature `Lkotlinx/coroutines/JobSupport;.afterCompletion:(Ljava/lang/Object;)V` @kind virtual;
  #L0f4aa4.  return v2;
}
procedure `java.lang.Object` `makeCompletingOnce$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.makeCompletingOnce$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f514c.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f5152.  v0:= temp @kind object;
  #L0f5154.  call temp:= `A`(v3, v0, v4) @signature `Lkotlinx/coroutines/JobSupport;.A:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0f515a.  v0:= temp @kind object;
  #L0f515c.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f5162.  v1:= temp @kind object;
  #L0f5164.  if v0 == v1 then goto L0f5178;
  #L0f5168.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f516e.  v1:= temp @kind object;
  #L0f5170.  if v0 != v1 then goto L0f5176;
  #L0f5174.  goto L0f514c;
  #L0f5176.  return v0 @kind object;
  #L0f5178.  v0:= new `java.lang.IllegalStateException`;
  #L0f517c.  v1:= new `java.lang.StringBuilder`;
  #L0f5180.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f5186.  v2:= "Job " @kind object;
  #L0f518a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f5190.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f5196.  v2:= " is already complete or completing, but is being completed with " @kind object;
  #L0f519a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f51a0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f51a6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f51ac.  v1:= temp @kind object;
  #L0f51ae.  call temp:= `k`(v3, v4) @signature `Lkotlinx/coroutines/JobSupport;.k:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L0f51b4.  v4:= temp @kind object;
  #L0f51b6.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0f51bc.  throw v0;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;

  #L0f58f8.  call temp:= `minusKey`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.minusKey:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0f58fe.  v1:= temp @kind object;
  #L0f5900.  return v1 @kind object;
}
procedure `java.lang.String` `nameString$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.nameString$kotlinx_coroutines_core:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f5394.  call temp:= `getClassSimpleName`(v1) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f539a.  v0:= temp @kind object;
  #L0f539c.  return v0 @kind object;
}
procedure `void` `onCancelling`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.onCancelling:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;

  #L0f61b4.  return @kind void;
}
procedure `void` `onCompletionInternal`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.onCompletionInternal:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L0f61c8.  return @kind void;
}
procedure `void` `onStart`(`kotlinx.coroutines.JobSupport` v0 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.onStart:()V` @AccessFlag PROTECTED {
    temp;

  #L0f61dc.  return @kind void;
}
procedure `void` `parentCancelled`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlinx.coroutines.ParentJob` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.parentCancelled:(Lkotlinx/coroutines/ParentJob;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f61f0.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f61f6.  return @kind void;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;

  #L0f5914.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.plus:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0f591a.  v1:= temp @kind object;
  #L0f591c.  return v1 @kind object;
}
procedure `kotlinx.coroutines.Job` `plus`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.plus:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC {
    temp;

  #L0f5be0.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.plus:(Lkotlinx/coroutines/Job;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @kind static;
  #L0f5be6.  v1:= temp @kind object;
  #L0f5be8.  return v1 @kind object;
}
procedure `void` `registerSelectClause0`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.selects.SelectInstance` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.registerSelectClause0:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f627c.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f6282.  v0:= temp @kind object;
  #L0f6284.  call temp:= `isSelected`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.isSelected:()Z` @kind interface;
  #L0f628a.  v1:= temp;
  #L0f628c.  if v1 == 0 then goto L0f6292;
  #L0f6290.  return @kind void;
  #L0f6292.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f6296.  if v1 != 0 then goto L0f62b6;
  #L0f629a.  call temp:= `trySelect`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L0f62a0.  v0:= temp;
  #L0f62a2.  if v0 == 0 then goto L0f62b4;
  #L0f62a6.  call temp:= `getCompletion`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L0f62ac.  v3:= temp @kind object;
  #L0f62ae.  call `startCoroutineUnintercepted`(v4, v3) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f62b4.  return @kind void;
  #L0f62b6.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @kind direct;
  #L0f62bc.  v0:= temp;
  #L0f62be.  if v0 != 0 then goto L0f627c;
  #L0f62c2.  v0:= new `kotlinx.coroutines.d0`;
  #L0f62c6.  call `<init>`(v0, v3, v4) @signature `Lkotlinx/coroutines/d0;.<init>:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0f62cc.  call temp:= `invokeOnCompletion`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L0f62d2.  v4:= temp @kind object;
  #L0f62d4.  call `disposeOnSelect`(v3, v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @kind interface;
  #L0f62da.  return @kind void;
}
procedure `void` `registerSelectClause1Internal$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.selects.SelectInstance` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.registerSelectClause1Internal$kotlinx_coroutines_core:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f62ec.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f62f2.  v0:= temp @kind object;
  #L0f62f4.  call temp:= `isSelected`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.isSelected:()Z` @kind interface;
  #L0f62fa.  v1:= temp;
  #L0f62fc.  if v1 == 0 then goto L0f6302;
  #L0f6300.  return @kind void;
  #L0f6302.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f6306.  if v1 != 0 then goto L0f6346;
  #L0f630a.  call temp:= `trySelect`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L0f6310.  v1:= temp;
  #L0f6312.  if v1 == 0 then goto L0f6344;
  #L0f6316.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f631a.  if v1 == 0 then goto L0f632e;
  #L0f631e.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L0f6322.  v4:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f6326.  call `resumeSelectWithException`(v3, v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.resumeSelectWithException:(Ljava/lang/Throwable;)V` @kind interface;
  #L0f632c.  goto L0f6344;
  #L0f632e.  call temp:= `unboxState`(v0) @signature `Lkotlinx/coroutines/JobSupportKt;.unboxState:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f6334.  v0:= temp @kind object;
  #L0f6336.  call temp:= `getCompletion`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L0f633c.  v3:= temp @kind object;
  #L0f633e.  call `startCoroutineUnintercepted`(v4, v0, v3) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f6344.  return @kind void;
  #L0f6346.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @kind direct;
  #L0f634c.  v0:= temp;
  #L0f634e.  if v0 != 0 then goto L0f62ec;
  #L0f6352.  v0:= new `kotlinx.coroutines.c0`;
  #L0f6356.  call `<init>`(v0, v3, v4) @signature `Lkotlinx/coroutines/c0;.<init>:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L0f635c.  call temp:= `invokeOnCompletion`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L0f6362.  v4:= temp @kind object;
  #L0f6364.  call `disposeOnSelect`(v3, v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @kind interface;
  #L0f636a.  return @kind void;
}
procedure `void` `removeNode$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v3 @kind this, `kotlinx.coroutines.JobNode` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.removeNode$kotlinx_coroutines_core:(Lkotlinx/coroutines/JobNode;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f637c.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f6382.  v0:= temp @kind object;
  #L0f6384.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L0f6388.  if v1 == 0 then goto L0f63ac;
  #L0f638c.  if v0 == v4 then goto L0f6392;
  #L0f6390.  return @kind void;
  #L0f6392.  v1:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f6396.  call temp:= `access$getEMPTY_ACTIVE$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getEMPTY_ACTIVE$p:()Lkotlinx/coroutines/p;` @kind static;
  #L0f639c.  v2:= temp @kind object;
  #L0f639e.  call temp:= `a`(v1, v3, v0, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f63a4.  v0:= temp;
  #L0f63a6.  if v0 == 0 then goto L0f637c;
  #L0f63aa.  return @kind void;
  #L0f63ac.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f63b0.  if v1 == 0 then goto L0f63ca;
  #L0f63b4.  v0:= (`kotlinx.coroutines.Incomplete`) v0 @kind object;
  #L0f63b8.  call temp:= `getList`(v0) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L0f63be.  v0:= temp @kind object;
  #L0f63c0.  if v0 == 0 then goto L0f63ca;
  #L0f63c4.  call temp:= `remove`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.remove:()Z` @kind virtual;
  #L0f63ca.  return @kind void;
}
procedure `void` `selectAwaitCompletion$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v6 @kind this, `kotlinx.coroutines.selects.SelectInstance` v7 @kind object, `kotlin.jvm.functions.Function2` v8 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.selectAwaitCompletion$kotlinx_coroutines_core:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0f63dc.  call temp:= `getState$kotlinx_coroutines_core`(v6) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f63e2.  v0:= temp @kind object;
  #L0f63e4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f63e8.  if v1 == 0 then goto L0f63fc;
  #L0f63ec.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L0f63f0.  v8:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f63f4.  call `resumeSelectWithException`(v7, v8) @signature `Lkotlinx/coroutines/selects/SelectInstance;.resumeSelectWithException:(Ljava/lang/Throwable;)V` @kind interface;
  #L0f63fa.  goto L0f641a;
  #L0f63fc.  call temp:= `unboxState`(v0) @signature `Lkotlinx/coroutines/JobSupportKt;.unboxState:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f6402.  v1:= temp @kind object;
  #L0f6404.  call temp:= `getCompletion`(v7) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L0f640a.  v2:= temp @kind object;
  #L0f640c.  v3:= 0I;
  #L0f640e.  v4:= 4I;
  #L0f6410.  v5:= 0I;
  #L0f6412.  v0:= v8 @kind object;
  #L0f6414.  call `startCoroutineCancellable$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable$default:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L0f641a.  return @kind void;
}
procedure `void` `setParentHandle$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlinx.coroutines.ChildHandle` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/ChildHandle;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f642c.  v0.`kotlinx.coroutines.JobSupport._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L0f6430.  return @kind void;
}
procedure `boolean` `start`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.start:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f4ab8.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f4abe.  v0:= temp @kind object;
  #L0f4ac0.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @kind direct;
  #L0f4ac6.  v0:= temp;
  #L0f4ac8.  if v0 == 0 then goto L0f4ad6;
  #L0f4acc.  v1:= 1I;
  #L0f4ace.  if v0 == v1 then goto L0f4ad4;
  #L0f4ad2.  goto L0f4ab8;
  #L0f4ad4.  return v1;
  #L0f4ad6.  v0:= 0I;
  #L0f4ad8.  return v0;
}
procedure `java.util.concurrent.CancellationException` `toCancellationException`(`kotlinx.coroutines.JobSupport` v1 @kind this, `java.lang.Throwable` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L0f58b8.  v0:= instanceof @variable v2 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L0f58bc.  if v0 == 0 then goto L0f58c8;
  #L0f58c0.  v0:= v2 @kind object;
  #L0f58c2.  v0:= (`java.util.concurrent.CancellationException`) v0 @kind object;
  #L0f58c6.  goto L0f58ca;
  #L0f58c8.  v0:= 0I;
  #L0f58ca.  if v0 != 0 then goto L0f58e4;
  #L0f58ce.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L0f58d2.  if v3 != 0 then goto L0f58de;
  #L0f58d6.  call temp:= `access$cancellationExceptionMessage`(v1) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0f58dc.  v3:= temp @kind object;
  #L0f58de.  call `<init>`(v0, v3, v2, v1) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f58e4.  return v0 @kind object;
}
procedure `java.lang.String` `toDebugString`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.toDebugString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f5428.  v0:= new `java.lang.StringBuilder`;
  #L0f542c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f5432.  call temp:= `nameString$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.nameString$kotlinx_coroutines_core:()Ljava/lang/String;` @kind virtual;
  #L0f5438.  v1:= temp @kind object;
  #L0f543a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f5440.  v1:= 123I;
  #L0f5444.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f544a.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f5450.  v1:= temp @kind object;
  #L0f5452.  call temp:= `x`(v2, v1) @signature `Lkotlinx/coroutines/JobSupport;.x:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L0f5458.  v1:= temp @kind object;
  #L0f545a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f5460.  v1:= 125I;
  #L0f5464.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f546a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f5470.  v0:= temp @kind object;
  #L0f5472.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f5484.  v0:= new `java.lang.StringBuilder`;
  #L0f5488.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f548e.  call temp:= `toDebugString`(v2) @signature `Lkotlinx/coroutines/JobSupport;.toDebugString:()Ljava/lang/String;` @kind virtual;
  #L0f5494.  v1:= temp @kind object;
  #L0f5496.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f549c.  v1:= 64I;
  #L0f54a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f54a6.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f54ac.  v1:= temp @kind object;
  #L0f54ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f54b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f54ba.  v0:= temp @kind object;
  #L0f54bc.  return v0 @kind object;
}
