record `kotlinx.coroutines.ExecutorsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `CloseableCoroutineDispatcher$annotations`() @signature `Lkotlinx/coroutines/ExecutorsKt;.CloseableCoroutineDispatcher$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f2ce0.  return @kind void;
}
procedure `java.util.concurrent.Executor` `asExecutor`(`kotlinx.coroutines.CoroutineDispatcher` v2 @kind object) @signature `Lkotlinx/coroutines/ExecutorsKt;.asExecutor:(Lkotlinx/coroutines/CoroutineDispatcher;)Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f2c40.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.ExecutorCoroutineDispatcher` @kind boolean;
  #L0f2c44.  v1:= 0I;
  #L0f2c46.  if v0 == 0 then goto L0f2c52;
  #L0f2c4a.  v0:= v2 @kind object;
  #L0f2c4c.  v0:= (`kotlinx.coroutines.ExecutorCoroutineDispatcher`) v0 @kind object;
  #L0f2c50.  goto L0f2c54;
  #L0f2c52.  v0:= v1 @kind object;
  #L0f2c54.  if v0 != 0 then goto L0f2c5a;
  #L0f2c58.  goto L0f2c62;
  #L0f2c5a.  call temp:= `getExecutor`(v0) @signature `Lkotlinx/coroutines/ExecutorCoroutineDispatcher;.getExecutor:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L0f2c60.  v1:= temp @kind object;
  #L0f2c62.  if v1 != 0 then goto L0f2c70;
  #L0f2c66.  v1:= new `kotlinx.coroutines.m`;
  #L0f2c6a.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/m;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;)V` @kind direct;
  #L0f2c70.  return v1 @kind object;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `from`(`java.util.concurrent.Executor` v2 @kind object) @signature `Lkotlinx/coroutines/ExecutorsKt;.from:(Ljava/util/concurrent/Executor;)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f2c84.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L0f2c88.  v1:= 0I;
  #L0f2c8a.  if v0 == 0 then goto L0f2c96;
  #L0f2c8e.  v0:= v2 @kind object;
  #L0f2c90.  v0:= (`kotlinx.coroutines.m`) v0 @kind object;
  #L0f2c94.  goto L0f2c98;
  #L0f2c96.  v0:= v1 @kind object;
  #L0f2c98.  if v0 != 0 then goto L0f2c9e;
  #L0f2c9c.  goto L0f2ca2;
  #L0f2c9e.  v1:= v0.`kotlinx.coroutines.m.a` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L0f2ca2.  if v1 != 0 then goto L0f2cb0;
  #L0f2ca6.  v1:= new `kotlinx.coroutines.ExecutorCoroutineDispatcherImpl`;
  #L0f2caa.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/ExecutorCoroutineDispatcherImpl;.<init>:(Ljava/util/concurrent/Executor;)V` @kind direct;
  #L0f2cb0.  return v1 @kind object;
}
procedure `kotlinx.coroutines.ExecutorCoroutineDispatcher` `from`(`java.util.concurrent.ExecutorService` v1 @kind object) @signature `Lkotlinx/coroutines/ExecutorsKt;.from:(Ljava/util/concurrent/ExecutorService;)Lkotlinx/coroutines/ExecutorCoroutineDispatcher;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f2cc4.  v0:= new `kotlinx.coroutines.ExecutorCoroutineDispatcherImpl`;
  #L0f2cc8.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/ExecutorCoroutineDispatcherImpl;.<init>:(Ljava/util/concurrent/Executor;)V` @kind direct;
  #L0f2cce.  return v0 @kind object;
}
