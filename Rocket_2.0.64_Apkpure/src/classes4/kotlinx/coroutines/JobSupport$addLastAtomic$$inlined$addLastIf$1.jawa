record `kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp` @kind class {
  `kotlinx.coroutines.internal.LockFreeLinkedListNode` `kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.JobSupport` `kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.c` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `kotlinx.coroutines.JobSupport` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport$addLastAtomic$$inlined$addLastIf$1;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/JobSupport;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f43d4.  v0.`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.b` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` := v1 @kind object;
  #L0f43d8.  v0.`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.c` @type ^`kotlinx.coroutines.JobSupport` := v2 @kind object;
  #L0f43dc.  v0.`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.d` @type ^`java.lang.Object` := v3 @kind object;
  #L0f43e0.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$CondAddOp;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind direct;
  #L0f43e6.  return @kind void;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport$addLastAtomic$$inlined$addLastIf$1;.prepare:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0f4378.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L0f437c.  call temp:= `prepare`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport$addLastAtomic$$inlined$addLastIf$1;.prepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @kind virtual;
  #L0f4382.  v1:= temp @kind object;
  #L0f4384.  return v1 @kind object;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport$addLastAtomic$$inlined$addLastIf$1;.prepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f4398.  v2:= v1.`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.c` @type ^`kotlinx.coroutines.JobSupport` @kind object;
  #L0f439c.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f43a2.  v2:= temp @kind object;
  #L0f43a4.  v0:= v1.`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.d` @type ^`java.lang.Object` @kind object;
  #L0f43a8.  if v2 != v0 then goto L0f43b0;
  #L0f43ac.  v2:= 1I;
  #L0f43ae.  goto L0f43b2;
  #L0f43b0.  v2:= 0I;
  #L0f43b2.  if v2 == 0 then goto L0f43ba;
  #L0f43b6.  v2:= 0I;
  #L0f43b8.  goto L0f43c2;
  #L0f43ba.  call temp:= `getCONDITION_FALSE`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getCONDITION_FALSE:()Ljava/lang/Object;` @kind static;
  #L0f43c0.  v2:= temp @kind object;
  #L0f43c2.  return v2 @kind object;
}
