record `kotlinx.coroutines.d` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `java.lang.Object` `a`(`kotlin.coroutines.CoroutineContext` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlinx/coroutines/d;.a:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0ecc90.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L0ecc96.  v0:= temp @kind object;
  #L0ecc98.  v1:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L0ecc9c.  call temp:= `get`(v4, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0ecca2.  v1:= temp @kind object;
  #L0ecca4.  v1:= (`kotlin.coroutines.ContinuationInterceptor`) v1 @kind object;
  #L0ecca8.  if v1 != 0 then goto L0eccce;
  #L0eccac.  v1:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L0eccb0.  call temp:= `getEventLoop$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.getEventLoop$kotlinx_coroutines_core:()Lkotlinx/coroutines/EventLoop;` @kind virtual;
  #L0eccb6.  v1:= temp @kind object;
  #L0eccb8.  v2:= `@@kotlinx.coroutines.GlobalScope.INSTANCE` @type ^`kotlinx.coroutines.GlobalScope` @kind object;
  #L0eccbc.  call temp:= `plus`(v4, v1) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0eccc2.  v4:= temp @kind object;
  #L0eccc4.  call temp:= `newCoroutineContext`(v2, v4) @signature `Lkotlinx/coroutines/CoroutineContextKt;.newCoroutineContext:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0eccca.  v4:= temp @kind object;
  #L0ecccc.  goto L0ecd14;
  #L0eccce.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.EventLoop` @kind boolean;
  #L0eccd2.  v3:= 0I;
  #L0eccd4.  if v2 == 0 then goto L0eccde;
  #L0eccd8.  v1:= (`kotlinx.coroutines.EventLoop`) v1 @kind object;
  #L0eccdc.  goto L0ecce0;
  #L0eccde.  v1:= v3 @kind object;
  #L0ecce0.  if v1 != 0 then goto L0ecce6;
  #L0ecce4.  goto L0eccf4;
  #L0ecce6.  call temp:= `shouldBeProcessedFromContext`(v1) @signature `Lkotlinx/coroutines/EventLoop;.shouldBeProcessedFromContext:()Z` @kind virtual;
  #L0eccec.  v2:= temp;
  #L0eccee.  if v2 == 0 then goto L0eccf4;
  #L0eccf2.  v3:= v1 @kind object;
  #L0eccf4.  if v3 != 0 then goto L0ecd06;
  #L0eccf8.  v1:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L0eccfc.  call temp:= `currentOrNull$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.currentOrNull$kotlinx_coroutines_core:()Lkotlinx/coroutines/EventLoop;` @kind virtual;
  #L0ecd02.  v1:= temp @kind object;
  #L0ecd04.  goto L0ecd08;
  #L0ecd06.  v1:= v3 @kind object;
  #L0ecd08.  v2:= `@@kotlinx.coroutines.GlobalScope.INSTANCE` @type ^`kotlinx.coroutines.GlobalScope` @kind object;
  #L0ecd0c.  call temp:= `newCoroutineContext`(v2, v4) @signature `Lkotlinx/coroutines/CoroutineContextKt;.newCoroutineContext:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0ecd12.  v4:= temp @kind object;
  #L0ecd14.  v2:= new `kotlinx.coroutines.c`;
  #L0ecd18.  call `<init>`(v2, v4, v0, v1) @signature `Lkotlinx/coroutines/c;.<init>:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Thread;Lkotlinx/coroutines/EventLoop;)V` @kind direct;
  #L0ecd1e.  v4:= `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L0ecd22.  call `start`(v2, v4, v2, v5) @signature `Lkotlinx/coroutines/AbstractCoroutine;.start:(Lkotlinx/coroutines/CoroutineStart;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @kind virtual;
  #L0ecd28.  call temp:= `D`(v2) @signature `Lkotlinx/coroutines/c;.D:()Ljava/lang/Object;` @kind virtual;
  #L0ecd2e.  v4:= temp @kind object;
  #L0ecd30.  return v4 @kind object;
}
procedure `java.lang.Object` `b`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `kotlin.jvm.functions.Function2` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/d;.b:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ecc68.  v2:= v2 ^& 1;
  #L0ecc6c.  if v2 == 0 then goto L0ecc74;
  #L0ecc70.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L0ecc74.  call temp:= `runBlocking`(v0, v1) @signature `Lkotlinx/coroutines/BuildersKt;.runBlocking:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L0ecc7a.  v0:= temp @kind object;
  #L0ecc7c.  return v0 @kind object;
}
