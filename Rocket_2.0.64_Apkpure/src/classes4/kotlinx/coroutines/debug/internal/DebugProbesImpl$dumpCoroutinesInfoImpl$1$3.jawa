record `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfoImpl$1$3;.<init>:(Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L106bf0.  v0.`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.a` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L106bf4.  v1:= 1I;
  #L106bf6.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L106bfc.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfoImpl$1$3;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L106b8c.  v1:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v1 @kind object;
  #L106b90.  call temp:= `invoke`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfoImpl$1$3;.invoke:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Ljava/lang/Object;` @kind virtual;
  #L106b96.  v1:= temp @kind object;
  #L106b98.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3` v2 @kind this, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfoImpl$1$3;.invoke:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L106bac.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L106bb0.  call temp:= `access$isFinished`(v0, v3) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$isFinished:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Z` @kind static;
  #L106bb6.  v0:= temp;
  #L106bb8.  v1:= 0I;
  #L106bba.  if v0 == 0 then goto L106bc0;
  #L106bbe.  goto L106bde;
  #L106bc0.  v0:= v3.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L106bc4.  call temp:= `getContext`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L106bca.  v0:= temp @kind object;
  #L106bcc.  if v0 != 0 then goto L106bd2;
  #L106bd0.  goto L106bde;
  #L106bd2.  v1:= v2.`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$1$3.a` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L106bd6.  call temp:= `invoke`(v1, v3, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L106bdc.  v1:= temp @kind object;
  #L106bde.  return v1 @kind object;
}
