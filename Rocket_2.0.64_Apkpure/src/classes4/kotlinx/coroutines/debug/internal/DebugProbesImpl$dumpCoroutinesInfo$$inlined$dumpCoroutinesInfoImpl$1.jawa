record `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L106b70.  v0:= 1I;
  #L106b72.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L106b78.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L106b08.  v1:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v1 @kind object;
  #L106b0c.  call temp:= `invoke`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1;.invoke:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Ljava/lang/Object;` @kind virtual;
  #L106b12.  v1:= temp @kind object;
  #L106b14.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1` v2 @kind this, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1;.invoke:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L106b28.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L106b2c.  call temp:= `access$isFinished`(v0, v3) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$isFinished:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Z` @kind static;
  #L106b32.  v0:= temp;
  #L106b34.  v1:= 0I;
  #L106b36.  if v0 == 0 then goto L106b3c;
  #L106b3a.  goto L106b5c;
  #L106b3c.  v0:= v3.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L106b40.  call temp:= `getContext`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L106b46.  v0:= temp @kind object;
  #L106b48.  if v0 != 0 then goto L106b4e;
  #L106b4c.  goto L106b5c;
  #L106b4e.  v1:= new `kotlinx.coroutines.debug.internal.DebugCoroutineInfo`;
  #L106b52.  v3:= v3.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L106b56.  call `<init>`(v1, v3, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.<init>:(Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L106b5c.  return v1 @kind object;
}
