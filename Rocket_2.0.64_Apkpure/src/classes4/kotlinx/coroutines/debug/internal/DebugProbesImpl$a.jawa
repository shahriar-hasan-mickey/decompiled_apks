record `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.Continuation` @kind interface, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface {
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` `kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @AccessFlag PUBLIC_FINAL;
  `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `kotlinx.coroutines.debug.internal.DebugProbesImpl$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` v2 @kind object, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.<init>:(Lkotlin/coroutines/Continuation;Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L106aa0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L106aa6.  v0.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L106aaa.  v0.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` := v2 @kind object;
  #L106aae.  v0.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.c` @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` := v3 @kind object;
  #L106ab2.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L106a78.  v0:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.c` @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind object;
  #L106a7c.  if v0 != 0 then goto L106a84;
  #L106a80.  v0:= 0I;
  #L106a82.  goto L106a8c;
  #L106a84.  call temp:= `getCallerFrame`(v0) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind interface;
  #L106a8a.  v0:= temp @kind object;
  #L106a8c.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L106a58.  v0:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L106a5c.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L106a62.  v0:= temp @kind object;
  #L106a64.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L106a10.  v0:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.c` @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind object;
  #L106a14.  if v0 != 0 then goto L106a1c;
  #L106a18.  v0:= 0I;
  #L106a1a.  goto L106a24;
  #L106a1c.  call temp:= `getStackTraceElement`(v0) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L106a22.  v0:= temp @kind object;
  #L106a24.  return v0 @kind object;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L106ac4.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L106ac8.  call `access$probeCoroutineCompleted`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$probeCoroutineCompleted:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)V` @kind static;
  #L106ace.  v0:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L106ad2.  call `resumeWith`(v0, v2) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L106ad8.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L106a38.  v0:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L106a3c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L106a42.  v0:= temp @kind object;
  #L106a44.  return v0 @kind object;
}
