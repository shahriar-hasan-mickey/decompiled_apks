record `kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.debug.internal.b` `@@kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.debug.internal.b` `@@kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMapKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L106054.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L106058.  v1:= "REHASH" @kind object;
  #L10605c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L106062.  `@@kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.a` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L106066.  v0:= new `kotlinx.coroutines.debug.internal.b`;
  #L10606a.  v1:= 0I;
  #L10606c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L106072.  `@@kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.b` @type ^`kotlinx.coroutines.debug.internal.b` := v0 @kind object;
  #L106076.  v0:= new `kotlinx.coroutines.debug.internal.b`;
  #L10607a.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L10607e.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L106084.  `@@kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.c` @type ^`kotlinx.coroutines.debug.internal.b` := v0 @kind object;
  #L106088.  return @kind void;
}
procedure `kotlinx.coroutines.debug.internal.b` `a`(`java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMapKt;.a:(Ljava/lang/Object;)Lkotlinx/coroutines/debug/internal/b;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L105ffc.  if v1 != 0 then goto L106006;
  #L106000.  v1:= `@@kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.b` @type ^`kotlinx.coroutines.debug.internal.b` @kind object;
  #L106004.  goto L106028;
  #L106006.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L10600a.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L106010.  v0:= temp;
  #L106012.  if v0 == 0 then goto L10601c;
  #L106016.  v1:= `@@kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.c` @type ^`kotlinx.coroutines.debug.internal.b` @kind object;
  #L10601a.  goto L106028;
  #L10601c.  v0:= new `kotlinx.coroutines.debug.internal.b`;
  #L106020.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L106026.  v1:= v0 @kind object;
  #L106028.  return v1 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getREHASH$p`() @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMapKt;.access$getREHASH$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L10603c.  v0:= `@@kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt.a` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L106040.  return v0 @kind object;
}
procedure `kotlinx.coroutines.debug.internal.b` `access$mark`(`java.lang.Object` v0 @kind object) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMapKt;.access$mark:(Ljava/lang/Object;)Lkotlinx/coroutines/debug/internal/b;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L105fe0.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMapKt;.a:(Ljava/lang/Object;)Lkotlinx/coroutines/debug/internal/b;` @kind static;
  #L105fe6.  v0:= temp @kind object;
  #L105fe8.  return v0 @kind object;
}
procedure `java.lang.Void` `access$noImpl`() @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMapKt;.access$noImpl:()Ljava/lang/Void;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L105fa4.  call temp:= `b`() @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMapKt;.b:()Ljava/lang/Void;` @kind static;
  #L105faa.  v0:= temp @kind object;
  #L105fac.  return v0 @kind object;
}
procedure `java.lang.Void` `b`() @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMapKt;.b:()Ljava/lang/Void;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L105fc0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L105fc4.  v1:= "not implemented" @kind object;
  #L105fc8.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L105fce.  throw v0;
}
