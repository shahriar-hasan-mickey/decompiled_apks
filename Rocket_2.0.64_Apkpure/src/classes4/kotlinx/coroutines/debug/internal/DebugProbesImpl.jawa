record `kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.debug.internal.DebugProbesImpl` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.text.SimpleDateFormat` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Thread` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.b` @AccessFlag PRIVATE_STATIC;
global `kotlinx.coroutines.debug.internal.ConcurrentWeakMap` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.debug.internal.a` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicLongFieldUpdater` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.locks.ReentrantReadWriteLock` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.g` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.h` @AccessFlag PRIVATE_STATIC;
global `kotlin.jvm.functions.Function1` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `kotlinx.coroutines.debug.internal.ConcurrentWeakMap` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L107d54.  v0:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl`;
  #L107d58.  call `<init>`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.<init>:()V` @kind direct;
  #L107d5e.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` := v0 @kind object;
  #L107d62.  v1:= new `java.text.SimpleDateFormat`;
  #L107d66.  v2:= "yyyy/MM/dd HH:mm:ss" @kind object;
  #L107d6a.  call `<init>`(v1, v2) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L107d70.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.a` @type ^`java.text.SimpleDateFormat` := v1 @kind object;
  #L107d74.  v1:= new `kotlinx.coroutines.debug.internal.ConcurrentWeakMap`;
  #L107d78.  v2:= 0I;
  #L107d7a.  v3:= 1I;
  #L107d7c.  v4:= 0I;
  #L107d7e.  call `<init>`(v1, v2, v3, v4) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.<init>:(ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L107d84.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` := v1 @kind object;
  #L107d88.  v1:= new `kotlinx.coroutines.debug.internal.a`;
  #L107d8c.  v4:= 0L;
  #L107d90.  call `<init>`(v1, v4) @signature `Lkotlinx/coroutines/debug/internal/a;.<init>:(J)V` @kind direct;
  #L107d96.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.d` @type ^`kotlinx.coroutines.debug.internal.a` := v1 @kind object;
  #L107d9a.  v1:= new `java.util.concurrent.locks.ReentrantReadWriteLock`;
  #L107d9e.  call `<init>`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.<init>:()V` @kind direct;
  #L107da4.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` := v1 @kind object;
  #L107da8.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.g` @type ^`boolean` := v3 @kind boolean;
  #L107dac.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.h` @type ^`boolean` := v3 @kind boolean;
  #L107db0.  call temp:= `i`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.i:()Lkotlin/jvm/functions/Function1;` @kind direct;
  #L107db6.  v0:= temp @kind object;
  #L107db8.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.i` @type ^`kotlin.jvm.functions.Function1` := v0 @kind object;
  #L107dbc.  v0:= new `kotlinx.coroutines.debug.internal.ConcurrentWeakMap`;
  #L107dc0.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.<init>:(Z)V` @kind direct;
  #L107dc6.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` := v0 @kind object;
  #L107dca.  v0:= constclass @type ^`kotlinx.coroutines.debug.internal.a` @kind object;
  #L107dce.  v1:= "sequenceNumber" @kind object;
  #L107dd2.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;` @kind static;
  #L107dd8.  v0:= temp @kind object;
  #L107dda.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.e` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` := v0 @kind object;
  #L107dde.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L107df0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L107df6.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v6 @kind this, `kotlinx.coroutines.Job` v7 @kind object, `java.util.Map` v8 @kind object, `java.lang.StringBuilder` v9 @kind object, `java.lang.String` v10 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.a:(Lkotlinx/coroutines/Job;Ljava/util/Map;Ljava/lang/StringBuilder;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L107e20.  call temp:= `get`(v8, v7) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L107e26.  v0:= temp @kind object;
  #L107e28.  v0:= (`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl`) v0 @kind object;
  #L107e2c.  v1:= "\t" @kind object;
  #L107e30.  v2:= 10I;
  #L107e34.  if v0 != 0 then goto L107e7c;
  #L107e38.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.internal.ScopeCoroutine` @kind boolean;
  #L107e3c.  if v0 != 0 then goto L107ef2;
  #L107e40.  v0:= new `java.lang.StringBuilder`;
  #L107e44.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L107e4a.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107e50.  call temp:= `h`(v6, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.h:(Lkotlinx/coroutines/Job;)Ljava/lang/String;` @kind direct;
  #L107e56.  v3:= temp @kind object;
  #L107e58.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107e5e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L107e64.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L107e6a.  v0:= temp @kind object;
  #L107e6c.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107e72.  call temp:= `stringPlus`(v10, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L107e78.  v10:= temp @kind object;
  #L107e7a.  goto L107ef2;
  #L107e7c.  call temp:= `lastObservedStackTrace`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.lastObservedStackTrace:()Ljava/util/List;` @kind virtual;
  #L107e82.  v3:= temp @kind object;
  #L107e84.  call temp:= `firstOrNull`(v3) @signature `Lkotlin/collections/CollectionsKt;.firstOrNull:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L107e8a.  v3:= temp @kind object;
  #L107e8c.  v3:= (`java.lang.StackTraceElement`) v3 @kind object;
  #L107e90.  call temp:= `getState`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L107e96.  v0:= temp @kind object;
  #L107e98.  v4:= new `java.lang.StringBuilder`;
  #L107e9c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L107ea2.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107ea8.  call temp:= `h`(v6, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.h:(Lkotlinx/coroutines/Job;)Ljava/lang/String;` @kind direct;
  #L107eae.  v5:= temp @kind object;
  #L107eb0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107eb6.  v5:= ", continuation is " @kind object;
  #L107eba.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107ec0.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107ec6.  v0:= " at line " @kind object;
  #L107eca.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107ed0.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107ed6.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L107edc.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L107ee2.  v0:= temp @kind object;
  #L107ee4.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107eea.  call temp:= `stringPlus`(v10, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L107ef0.  v10:= temp @kind object;
  #L107ef2.  call temp:= `getChildren`(v7) @signature `Lkotlinx/coroutines/Job;.getChildren:()Lkotlin/sequences/Sequence;` @kind interface;
  #L107ef8.  v7:= temp @kind object;
  #L107efa.  call temp:= `iterator`(v7) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L107f00.  v7:= temp @kind object;
  #L107f02.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L107f08.  v0:= temp;
  #L107f0a.  if v0 == 0 then goto L107f22;
  #L107f0e.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L107f14.  v0:= temp @kind object;
  #L107f16.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L107f1a.  call `a`(v6, v0, v8, v9, v10) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.a:(Lkotlinx/coroutines/Job;Ljava/util/Map;Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind direct;
  #L107f20.  goto L107f02;
  #L107f22.  return @kind void;
}
procedure `kotlinx.coroutines.debug.internal.ConcurrentWeakMap` `access$getCallerInfoCache$p`() @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$getCallerInfoCache$p:()Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L107c80.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L107c84.  return v0 @kind object;
}
procedure `boolean` `access$isFinished`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind object, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$isFinished:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L106e4c.  call temp:= `j`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.j:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Z` @kind direct;
  #L106e52.  v0:= temp;
  #L106e54.  return v0;
}
procedure `void` `access$probeCoroutineCompleted`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind object, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$probeCoroutineCompleted:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L107e08.  call `o`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.o:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)V` @kind direct;
  #L107e0e.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `b`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v4 @kind this, `kotlin.coroutines.Continuation` v5 @kind object, `kotlinx.coroutines.debug.internal.StackTraceFrame` v6 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.b:(Lkotlin/coroutines/Continuation;Lkotlinx/coroutines/debug/internal/StackTraceFrame;)Lkotlin/coroutines/Continuation;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L107aec.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L107af2.  v0:= temp;
  #L107af4.  if v0 != 0 then goto L107afa;
  #L107af8.  return v5 @kind object;
  #L107afa.  v0:= new `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl`;
  #L107afe.  call temp:= `getContext`(v5) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L107b04.  v1:= temp @kind object;
  #L107b06.  v2:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.e` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L107b0a.  v3:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.d` @type ^`kotlinx.coroutines.debug.internal.a` @kind object;
  #L107b0e.  call temp:= `incrementAndGet`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.incrementAndGet:(Ljava/lang/Object;)J` @kind virtual;
  #L107b14.  v2:= temp @kind wide;
  #L107b16.  call `<init>`(v0, v1, v6, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/debug/internal/StackTraceFrame;J)V` @kind direct;
  #L107b1c.  v1:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$a`;
  #L107b20.  call `<init>`(v1, v5, v0, v6) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.<init>:(Lkotlin/coroutines/Continuation;Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)V` @kind direct;
  #L107b26.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L107b2a.  v6:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L107b2e.  call temp:= `put`(v5, v1, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L107b34.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L107b3a.  v6:= temp;
  #L107b3c.  if v6 != 0 then goto L107b46;
  #L107b40.  call `clear`(v5) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.clear:()V` @kind virtual;
  #L107b46.  return v1 @kind object;
}
procedure `void` `c`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v13 @kind this, `java.io.PrintStream` v14 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.c:(Ljava/io/PrintStream;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L107f6c.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L107f70.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L107f76.  v1:= temp @kind object;
  #L107f78.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L107f7e.  v2:= temp;
  #L107f80.  v3:= 0I;
  #L107f82.  if v2 != 0 then goto L107f90;
  #L107f86.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L107f8c.  v2:= temp;
  #L107f8e.  goto L107f92;
  #L107f90.  v2:= 0I;
  #L107f92.  v4:= 0I;
  #L107f94.  if v4 >= v2 then goto L107fa4;
  #L107f98.  v4:= v4 + 1;
  #L107f9c.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L107fa2.  goto L107f94;
  #L107fa4.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L107faa.  v0:= temp @kind object;
  #L107fac.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L107fb2.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L107fb6.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L107fbc.  v5:= temp;
  #L107fbe.  if v5 == 0 then goto L108136;
  #L107fc2.  v5:= "Coroutines dump " @kind object;
  #L107fc6.  v6:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.a` @type ^`java.text.SimpleDateFormat` @kind object;
  #L107fca.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L107fd0.  v7:= temp @kind wide;
  #L107fd2.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L107fd8.  v7:= temp @kind object;
  #L107fda.  call temp:= `format`(v6, v7) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L107fe0.  v6:= temp @kind object;
  #L107fe2.  call temp:= `stringPlus`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L107fe8.  v5:= temp @kind object;
  #L107fea.  call `print`(v14, v5) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L107ff0.  call temp:= `g`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.g:()Ljava/util/Set;` @kind direct;
  #L107ff6.  v4:= temp @kind object;
  #L107ff8.  call temp:= `asSequence`(v4) @signature `Lkotlin/collections/CollectionsKt;.asSequence:(Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;` @kind static;
  #L107ffe.  v4:= temp @kind object;
  #L108000.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl$b.a` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl$b` @kind object;
  #L108004.  call temp:= `filter`(v4, v5) @signature `Lkotlin/sequences/SequencesKt;.filter:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L10800a.  v4:= temp @kind object;
  #L10800c.  v5:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$lambda-19$$inlined$sortedBy$1`;
  #L108010.  call `<init>`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesSynchronized$lambda-19$$inlined$sortedBy$1;.<init>:()V` @kind direct;
  #L108016.  call temp:= `sortedWith`(v4, v5) @signature `Lkotlin/sequences/SequencesKt;.sortedWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Lkotlin/sequences/Sequence;` @kind static;
  #L10801c.  v4:= temp @kind object;
  #L10801e.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L108024.  v4:= temp @kind object;
  #L108026.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L10802c.  v5:= temp;
  #L10802e.  if v5 == 0 then goto L10811a;
  #L108032.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L108038.  v5:= temp @kind object;
  #L10803a.  v5:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v5 @kind object;
  #L10803e.  v6:= v5.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L108042.  call temp:= `lastObservedStackTrace`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.lastObservedStackTrace:()Ljava/util/List;` @kind virtual;
  #L108048.  v7:= temp @kind object;
  #L10804a.  v8:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L10804e.  call temp:= `getState`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L108054.  v9:= temp @kind object;
  #L108056.  v10:= v6.`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.lastObservedThread` @type ^`java.lang.Thread` @kind object;
  #L10805a.  call temp:= `d`(v8, v9, v10, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.d:(Ljava/lang/String;Ljava/lang/Thread;Ljava/util/List;)Ljava/util/List;` @kind direct;
  #L108060.  v9:= temp @kind object;
  #L108062.  call temp:= `getState`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L108068.  v10:= temp @kind object;
  #L10806a.  v11:= "RUNNING" @kind object;
  #L10806e.  call temp:= `areEqual`(v10, v11) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L108074.  v10:= temp;
  #L108076.  if v10 == 0 then goto L108094;
  #L10807a.  if v9 != v7 then goto L108094;
  #L10807e.  call temp:= `getState`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L108084.  v10:= temp @kind object;
  #L108086.  v11:= " (Last suspension stacktrace, not an actual stacktrace)" @kind object;
  #L10808a.  call temp:= `stringPlus`(v10, v11) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L108090.  v10:= temp @kind object;
  #L108092.  goto L10809c;
  #L108094.  call temp:= `getState`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L10809a.  v10:= temp @kind object;
  #L10809c.  v11:= new `java.lang.StringBuilder`;
  #L1080a0.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1080a6.  v12:= "\n\nCoroutine " @kind object;
  #L1080aa.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1080b0.  v5:= v5.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L1080b4.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1080ba.  v5:= ", state: " @kind object;
  #L1080be.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1080c4.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1080ca.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1080d0.  v5:= temp @kind object;
  #L1080d2.  call `print`(v14, v5) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L1080d8.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1080de.  v5:= temp;
  #L1080e0.  if v5 == 0 then goto L108112;
  #L1080e4.  v5:= "\n\tat " @kind object;
  #L1080e8.  v7:= "Coroutine creation stacktrace" @kind object;
  #L1080ec.  call temp:= `artificialFrame`(v7) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.artificialFrame:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L1080f2.  v7:= temp @kind object;
  #L1080f4.  call temp:= `stringPlus`(v5, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1080fa.  v5:= temp @kind object;
  #L1080fc.  call `print`(v14, v5) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L108102.  call temp:= `getCreationStackTrace`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getCreationStackTrace:()Ljava/util/List;` @kind virtual;
  #L108108.  v5:= temp @kind object;
  #L10810a.  call `n`(v8, v14, v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.n:(Ljava/io/PrintStream;Ljava/util/List;)V` @kind direct;
  #L108110.  goto L108026;
  #L108112.  call `n`(v8, v14, v9) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.n:(Ljava/io/PrintStream;Ljava/util/List;)V` @kind direct;
  #L108118.  goto L108026;
  #L10811a.  v14:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10811e.  if v3 >= v2 then goto L10812e;
  #L108122.  v3:= v3 + 1;
  #L108126.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L10812c.  goto L10811e;
  #L10812e.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L108134.  return @kind void;
  #L108136.  v14:= "Debug probes are not installed" @kind object;
  #L10813a.  v4:= new `java.lang.IllegalStateException`;
  #L10813e.  call temp:= `toString`(v14) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L108144.  v14:= temp @kind object;
  #L108146.  call `<init>`(v4, v14) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10814c.  throw v4;
  #L10814e.  v14:= Exception @type ^`java.lang.Throwable` @kind object;
  #L108150.  if v3 >= v2 then goto L108160;
  #L108154.  v3:= v3 + 1;
  #L108158.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L10815e.  goto L108150;
  #L108160.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L108166.  throw v14;
  catch `java.lang.Throwable` @[L107fb2..L10811e] goto L10814e;
  catch `java.lang.Throwable` @[L108136..L10814e] goto L10814e;
}
procedure `java.util.List` `d`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v8 @kind this, `java.lang.String` v9 @kind object, `java.lang.Thread` v10 @kind object, `java.util.List` v11 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.d:(Ljava/lang/String;Ljava/lang/Thread;Ljava/util/List;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1077a0.  v0:= "RUNNING" @kind object;
  #L1077a4.  call temp:= `areEqual`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1077aa.  v9:= temp;
  #L1077ac.  if v9 == 0 then goto L1078fa;
  #L1077b0.  if v10 != 0 then goto L1077b8;
  #L1077b4.  goto L1078fa;
  #L1077b8.  v9:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L1077bc.  call temp:= `getStackTrace`(v10) @signature `Ljava/lang/Thread;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L1077c2.  v9:= temp @kind object;
  #L1077c4.  call temp:= `constructor-impl`(v9) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1077ca.  v9:= temp @kind object;
  #L1077cc.  goto L1077e4;
  #L1077ce.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1077d0.  v10:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L1077d4.  call temp:= `createFailure`(v9) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1077da.  v9:= temp @kind object;
  #L1077dc.  call temp:= `constructor-impl`(v9) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1077e2.  v9:= temp @kind object;
  #L1077e4.  call temp:= `isFailure-impl`(v9) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L1077ea.  v10:= temp;
  #L1077ec.  if v10 == 0 then goto L1077f2;
  #L1077f0.  v9:= 0I;
  #L1077f2.  v9:= (`java.lang.StackTraceElement`[]) v9 @kind object;
  #L1077f6.  if v9 != 0 then goto L1077fc;
  #L1077fa.  return v11 @kind object;
  #L1077fc.  v10:= length @variable v9;
  #L1077fe.  v0:= 0I;
  #L107800.  v1:= 0I;
  #L107802.  v2:= -1I;
  #L107804.  v3:= 1I;
  #L107806.  if v1 >= v10 then goto L10786a;
  #L10780a.  v4:= v1 + 1;
  #L10780e.  v5:= v9[v1] @kind object;
  #L107812.  call temp:= `getClassName`(v5) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L107818.  v6:= temp @kind object;
  #L10781a.  v7:= "kotlin.coroutines.jvm.internal.BaseContinuationImpl" @kind object;
  #L10781e.  call temp:= `areEqual`(v6, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L107824.  v6:= temp;
  #L107826.  if v6 == 0 then goto L10785e;
  #L10782a.  call temp:= `getMethodName`(v5) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L107830.  v6:= temp @kind object;
  #L107832.  v7:= "resumeWith" @kind object;
  #L107836.  call temp:= `areEqual`(v6, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L10783c.  v6:= temp;
  #L10783e.  if v6 == 0 then goto L10785e;
  #L107842.  call temp:= `getFileName`(v5) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L107848.  v5:= temp @kind object;
  #L10784a.  v6:= "ContinuationImpl.kt" @kind object;
  #L10784e.  call temp:= `areEqual`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L107854.  v5:= temp;
  #L107856.  if v5 == 0 then goto L10785e;
  #L10785a.  v5:= 1I;
  #L10785c.  goto L107860;
  #L10785e.  v5:= 0I;
  #L107860.  if v5 == 0 then goto L107866;
  #L107864.  goto L10786c;
  #L107866.  v1:= v4;
  #L107868.  goto L107802;
  #L10786a.  v1:= -1I;
  #L10786c.  call temp:= `e`(v8, v1, v9, v11) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.e:(I[Ljava/lang/StackTraceElement;Ljava/util/List;)Lkotlin/Pair;` @kind direct;
  #L107872.  v10:= temp @kind object;
  #L107874.  call temp:= `component1`(v10) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L10787a.  v4:= temp @kind object;
  #L10787c.  v4:= (`java.lang.Number`) v4 @kind object;
  #L107880.  call temp:= `intValue`(v4) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L107886.  v4:= temp;
  #L107888.  call temp:= `component2`(v10) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L10788e.  v10:= temp @kind object;
  #L107890.  v10:= (`java.lang.Number`) v10 @kind object;
  #L107894.  call temp:= `intValue`(v10) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L10789a.  v10:= temp;
  #L10789c.  if v4 != v2 then goto L1078a2;
  #L1078a0.  return v11 @kind object;
  #L1078a2.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1078a8.  v2:= temp;
  #L1078aa.  v2:= v2 + v1 @kind int;
  #L1078ac.  v2:= v2 - v4 @kind int;
  #L1078ae.  v2:= v2 - v3 @kind int;
  #L1078b0.  v2:= v2 - v10 @kind int;
  #L1078b2.  v5:= new `java.util.ArrayList`;
  #L1078b6.  call `<init>`(v5, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1078bc.  v1:= v1 - v10 @kind int;
  #L1078be.  if v0 >= v1 then goto L1078d4;
  #L1078c2.  v10:= v0 + 1;
  #L1078c6.  v0:= v9[v0] @kind object;
  #L1078ca.  call temp:= `add`(v5, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1078d0.  v0:= v10;
  #L1078d2.  goto L1078be;
  #L1078d4.  v4:= v4 + v3 @kind int;
  #L1078d6.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1078dc.  v9:= temp;
  #L1078de.  if v4 >= v9 then goto L1078f8;
  #L1078e2.  v10:= v4 + 1;
  #L1078e6.  call temp:= `get`(v11, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1078ec.  v0:= temp @kind object;
  #L1078ee.  call temp:= `add`(v5, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1078f4.  v4:= v10;
  #L1078f6.  goto L1078de;
  #L1078f8.  return v5 @kind object;
  #L1078fa.  return v11 @kind object;
  catch `java.lang.Throwable` @[L1077b8..L1077cc] goto L1077ce;
}
procedure `kotlin.Pair` `e`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v6 @kind this, `int` v7 , `java.lang.StackTraceElement`[] v8 @kind object, `java.util.List` v9 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.e:(I[Ljava/lang/StackTraceElement;Ljava/util/List;)Lkotlin/Pair;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L107a7c.  v0:= 0I;
  #L107a7e.  v1:= 0I;
  #L107a80.  v2:= -1I;
  #L107a82.  v3:= 3I;
  #L107a84.  if v1 >= v3 then goto L107ac0;
  #L107a88.  v3:= v1 + 1;
  #L107a8c.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L107a90.  v5:= v7 + -1;
  #L107a94.  v5:= v5 - v1 @kind int;
  #L107a96.  call temp:= `f`(v4, v5, v8, v9) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.f:(I[Ljava/lang/StackTraceElement;Ljava/util/List;)I` @kind direct;
  #L107a9c.  v4:= temp;
  #L107a9e.  if v4 == v2 then goto L107abc;
  #L107aa2.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L107aa8.  v7:= temp @kind object;
  #L107aaa.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L107ab0.  v8:= temp @kind object;
  #L107ab2.  call temp:= `to`(v7, v8) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L107ab8.  v7:= temp @kind object;
  #L107aba.  return v7 @kind object;
  #L107abc.  v1:= v3;
  #L107abe.  goto L107a80;
  #L107ac0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L107ac6.  v7:= temp @kind object;
  #L107ac8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L107ace.  v8:= temp @kind object;
  #L107ad0.  call temp:= `to`(v7, v8) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L107ad6.  v7:= temp @kind object;
  #L107ad8.  return v7 @kind object;
}
procedure `int` `f`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v5 @kind this, `int` v6 , `java.lang.StackTraceElement`[] v7 @kind object, `java.util.List` v8 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.f:(I[Ljava/lang/StackTraceElement;Ljava/util/List;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L106f3c.  call temp:= `getOrNull`(v7, v6) @signature `Lkotlin/collections/ArraysKt;.getOrNull:([Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L106f42.  v6:= temp @kind object;
  #L106f44.  v6:= (`java.lang.StackTraceElement`) v6 @kind object;
  #L106f48.  v7:= -1I;
  #L106f4a.  if v6 != 0 then goto L106f50;
  #L106f4e.  return v7;
  #L106f50.  call temp:= `iterator`(v8) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L106f56.  v8:= temp @kind object;
  #L106f58.  v0:= 0I;
  #L106f5a.  v1:= 0I;
  #L106f5c.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L106f62.  v2:= temp;
  #L106f64.  if v2 == 0 then goto L106fdc;
  #L106f68.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L106f6e.  v2:= temp @kind object;
  #L106f70.  v2:= (`java.lang.StackTraceElement`) v2 @kind object;
  #L106f74.  call temp:= `getFileName`(v2) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L106f7a.  v3:= temp @kind object;
  #L106f7c.  call temp:= `getFileName`(v6) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L106f82.  v4:= temp @kind object;
  #L106f84.  call temp:= `areEqual`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L106f8a.  v3:= temp;
  #L106f8c.  if v3 == 0 then goto L106fcc;
  #L106f90.  call temp:= `getClassName`(v2) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L106f96.  v3:= temp @kind object;
  #L106f98.  call temp:= `getClassName`(v6) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L106f9e.  v4:= temp @kind object;
  #L106fa0.  call temp:= `areEqual`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L106fa6.  v3:= temp;
  #L106fa8.  if v3 == 0 then goto L106fcc;
  #L106fac.  call temp:= `getMethodName`(v2) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L106fb2.  v2:= temp @kind object;
  #L106fb4.  call temp:= `getMethodName`(v6) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L106fba.  v3:= temp @kind object;
  #L106fbc.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L106fc2.  v2:= temp;
  #L106fc4.  if v2 == 0 then goto L106fcc;
  #L106fc8.  v2:= 1I;
  #L106fca.  goto L106fce;
  #L106fcc.  v2:= 0I;
  #L106fce.  if v2 == 0 then goto L106fd6;
  #L106fd2.  v7:= v1;
  #L106fd4.  goto L106fdc;
  #L106fd6.  v1:= v1 + 1;
  #L106fda.  goto L106f5c;
  #L106fdc.  return v7;
}
procedure `java.util.Set` `g`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.g:()Ljava/util/Set;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L107a5c.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L107a60.  call temp:= `keySet`(v0) @signature `Lkotlin/collections/AbstractMutableMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L107a66.  v0:= temp @kind object;
  #L107a68.  return v0 @kind object;
}
procedure `java.lang.String` `h`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlinx.coroutines.Job` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.h:(Lkotlinx/coroutines/Job;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L107348.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobSupport` @kind boolean;
  #L10734c.  if v0 == 0 then goto L10735e;
  #L107350.  v2:= (`kotlinx.coroutines.JobSupport`) v2 @kind object;
  #L107354.  call temp:= `toDebugString`(v2) @signature `Lkotlinx/coroutines/JobSupport;.toDebugString:()Ljava/lang/String;` @kind virtual;
  #L10735a.  v2:= temp @kind object;
  #L10735c.  goto L107366;
  #L10735e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L107364.  v2:= temp @kind object;
  #L107366.  return v2 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `i`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.i:()Lkotlin/jvm/functions/Function1;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L107be4.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L107be8.  v0:= "kotlinx.coroutines.debug.internal.ByteBuddyDynamicAttach" @kind object;
  #L107bec.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L107bf2.  v0:= temp @kind object;
  #L107bf4.  call temp:= `getConstructors`(v0) @signature `Ljava/lang/Class;.getConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L107bfa.  v0:= temp @kind object;
  #L107bfc.  v1:= 0I;
  #L107bfe.  v0:= v0[v1] @kind object;
  #L107c02.  v1:= new `java.lang.Object`[v1];
  #L107c06.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L107c0c.  v0:= temp @kind object;
  #L107c0e.  if v0 == 0 then goto L107c2a;
  #L107c12.  v1:= 1I;
  #L107c14.  call temp:= `beforeCheckcastToFunctionOfArity`(v0, v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L107c1a.  v0:= temp @kind object;
  #L107c1c.  v0:= (`kotlin.jvm.functions.Function1`) v0 @kind object;
  #L107c20.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L107c26.  v0:= temp @kind object;
  #L107c28.  goto L107c50;
  #L107c2a.  v0:= new `java.lang.NullPointerException`;
  #L107c2e.  v1:= "null cannot be cast to non-null type kotlin.Function1<kotlin.Boolean, kotlin.Unit>" @kind object;
  #L107c32.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L107c38.  throw v0;
  #L107c3a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L107c3c.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L107c40.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L107c46.  v0:= temp @kind object;
  #L107c48.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L107c4e.  v0:= temp @kind object;
  #L107c50.  call temp:= `isFailure-impl`(v0) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L107c56.  v1:= temp;
  #L107c58.  if v1 == 0 then goto L107c5e;
  #L107c5c.  v0:= 0I;
  #L107c5e.  v0:= (`kotlin.jvm.functions.Function1`) v0 @kind object;
  #L107c62.  return v0 @kind object;
  catch `java.lang.Throwable` @[L107be4..L107c3a] goto L107c3a;
}
procedure `boolean` `j`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.j:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L106e98.  v0:= v3.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L106e9c.  call temp:= `getContext`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L106ea2.  v0:= temp @kind object;
  #L106ea4.  if v0 != 0 then goto L106eac;
  #L106ea8.  v0:= 0I;
  #L106eaa.  goto L106ebc;
  #L106eac.  v1:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L106eb0.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L106eb6.  v0:= temp @kind object;
  #L106eb8.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L106ebc.  v1:= 0I;
  #L106ebe.  if v0 != 0 then goto L106ec4;
  #L106ec2.  return v1;
  #L106ec4.  call temp:= `isCompleted`(v0) @signature `Lkotlinx/coroutines/Job;.isCompleted:()Z` @kind interface;
  #L106eca.  v0:= temp;
  #L106ecc.  if v0 != 0 then goto L106ed2;
  #L106ed0.  return v1;
  #L106ed2.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L106ed6.  call temp:= `remove`(v0, v3) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L106edc.  v3:= 1I;
  #L106ede.  return v3;
}
procedure `boolean` `k`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v4 @kind this, `java.lang.StackTraceElement` v5 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.k:(Ljava/lang/StackTraceElement;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L106f10.  call temp:= `getClassName`(v5) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L106f16.  v5:= temp @kind object;
  #L106f18.  v0:= "kotlinx.coroutines" @kind object;
  #L106f1c.  v1:= 0I;
  #L106f1e.  v2:= 2I;
  #L106f20.  v3:= 0I;
  #L106f22.  call temp:= `startsWith$default`(v5, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L106f28.  v5:= temp;
  #L106f2a.  return v5;
}
procedure `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` `l`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.l:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L107c98.  v0:= instanceof @variable v3 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L107c9c.  v1:= 0I;
  #L107c9e.  if v0 == 0 then goto L107ca8;
  #L107ca2.  v3:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v3 @kind object;
  #L107ca6.  goto L107caa;
  #L107ca8.  v3:= v1 @kind object;
  #L107caa.  if v3 != 0 then goto L107cb0;
  #L107cae.  goto L107cb8;
  #L107cb0.  call temp:= `m`(v2, v3) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.m:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @kind direct;
  #L107cb6.  v1:= temp @kind object;
  #L107cb8.  return v1 @kind object;
}
procedure `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` `m`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.m:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L107ccc.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` @kind boolean;
  #L107cd0.  if v0 == 0 then goto L107cda;
  #L107cd4.  v2:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v2 @kind object;
  #L107cd8.  goto L107ce8;
  #L107cda.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind interface;
  #L107ce0.  v2:= temp @kind object;
  #L107ce2.  if v2 != 0 then goto L107ccc;
  #L107ce6.  v2:= 0I;
  #L107ce8.  return v2 @kind object;
}
procedure `void` `n`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this, `java.io.PrintStream` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.n:(Ljava/io/PrintStream;Ljava/util/List;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1082a8.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1082ae.  v4:= temp @kind object;
  #L1082b0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1082b6.  v0:= temp;
  #L1082b8.  if v0 == 0 then goto L1082dc;
  #L1082bc.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1082c2.  v0:= temp @kind object;
  #L1082c4.  v0:= (`java.lang.StackTraceElement`) v0 @kind object;
  #L1082c8.  v1:= "\n\tat " @kind object;
  #L1082cc.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1082d2.  v0:= temp @kind object;
  #L1082d4.  call `print`(v3, v0) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L1082da.  goto L1082b0;
  #L1082dc.  return @kind void;
}
procedure `void` `o`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.o:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1082f0.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L1082f4.  call temp:= `remove`(v0, v2) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1082fa.  v2:= v2.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L1082fe.  call temp:= `getLastObservedFrame$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getLastObservedFrame$kotlinx_coroutines_core:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind virtual;
  #L108304.  v2:= temp @kind object;
  #L108306.  if v2 != 0 then goto L10830e;
  #L10830a.  v2:= 0I;
  #L10830c.  goto L108316;
  #L10830e.  call temp:= `p`(v1, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.p:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind direct;
  #L108314.  v2:= temp @kind object;
  #L108316.  if v2 != 0 then goto L10831c;
  #L10831a.  return @kind void;
  #L10831c.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L108320.  call temp:= `remove`(v0, v2) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L108326.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `p`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.p:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L107bb4.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind interface;
  #L107bba.  v2:= temp @kind object;
  #L107bbc.  if v2 != 0 then goto L107bc4;
  #L107bc0.  v2:= 0I;
  #L107bc2.  return v2 @kind object;
  #L107bc4.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L107bca.  v0:= temp @kind object;
  #L107bcc.  if v0 == 0 then goto L107bb4;
  #L107bd0.  return v2 @kind object;
}
procedure `java.util.List` `q`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v7 @kind this, `java.lang.Throwable` v8 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.q:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L107918.  call temp:= `getStackTrace`(v8) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L10791e.  v8:= temp @kind object;
  #L107920.  v0:= length @variable v8;
  #L107922.  v1:= length @variable v8;
  #L107924.  v2:= -1I;
  #L107926.  v1:= v1 + v2 @kind int;
  #L107928.  if v1 < 0 then goto L10795a;
  #L10792c.  v3:= v1 + -1;
  #L107930.  v4:= v8[v1] @kind object;
  #L107934.  call temp:= `getClassName`(v4) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L10793a.  v4:= temp @kind object;
  #L10793c.  v5:= "kotlin.coroutines.jvm.internal.DebugProbesKt" @kind object;
  #L107940.  call temp:= `areEqual`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L107946.  v4:= temp;
  #L107948.  if v4 == 0 then goto L107950;
  #L10794c.  v2:= v1;
  #L10794e.  goto L10795a;
  #L107950.  if v3 >= 0 then goto L107956;
  #L107954.  goto L10795a;
  #L107956.  v1:= v3;
  #L107958.  goto L10792c;
  #L10795a.  v1:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.g` @type ^`boolean` @kind boolean;
  #L10795e.  v3:= "Coroutine creation stacktrace" @kind object;
  #L107962.  if v1 != 0 then goto L10799c;
  #L107966.  v0:= v0 - v2 @kind int;
  #L107968.  v1:= new `java.util.ArrayList`;
  #L10796c.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L107972.  v4:= 0I;
  #L107974.  if v4 >= v0 then goto L10799a;
  #L107978.  v5:= v4 + 1;
  #L10797c.  if v4 != 0 then goto L10798a;
  #L107980.  call temp:= `artificialFrame`(v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.artificialFrame:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L107986.  v4:= temp @kind object;
  #L107988.  goto L107990;
  #L10798a.  v4:= v4 + v2 @kind int;
  #L10798c.  v4:= v8[v4] @kind object;
  #L107990.  call temp:= `add`(v1, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L107996.  v4:= v5;
  #L107998.  goto L107974;
  #L10799a.  return v1 @kind object;
  #L10799c.  v1:= new `java.util.ArrayList`;
  #L1079a0.  v4:= v0 - v2 @kind int;
  #L1079a4.  v4:= v4 + 1;
  #L1079a8.  call `<init>`(v1, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1079ae.  call temp:= `artificialFrame`(v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.artificialFrame:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L1079b4.  v3:= temp @kind object;
  #L1079b6.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1079bc.  v2:= v2 + 1;
  #L1079c0.  if v2 >= v0 then goto L107a48;
  #L1079c4.  v3:= v8[v2] @kind object;
  #L1079c8.  call temp:= `k`(v7, v3) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.k:(Ljava/lang/StackTraceElement;)Z` @kind direct;
  #L1079ce.  v3:= temp;
  #L1079d0.  if v3 == 0 then goto L107a3c;
  #L1079d4.  v3:= v8[v2] @kind object;
  #L1079d8.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1079de.  v3:= v2 + 1;
  #L1079e2.  if v3 >= v0 then goto L1079fc;
  #L1079e6.  v4:= v8[v3] @kind object;
  #L1079ea.  call temp:= `k`(v7, v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.k:(Ljava/lang/StackTraceElement;)Z` @kind direct;
  #L1079f0.  v4:= temp;
  #L1079f2.  if v4 == 0 then goto L1079fc;
  #L1079f6.  v3:= v3 + 1;
  #L1079fa.  goto L1079e2;
  #L1079fc.  v4:= v3 + -1;
  #L107a00.  v5:= v4;
  #L107a02.  if v5 <= v2 then goto L107a1c;
  #L107a06.  v6:= v8[v5] @kind object;
  #L107a0a.  call temp:= `getFileName`(v6) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L107a10.  v6:= temp @kind object;
  #L107a12.  if v6 != 0 then goto L107a1c;
  #L107a16.  v5:= v5 + -1;
  #L107a1a.  goto L107a02;
  #L107a1c.  if v5 <= v2 then goto L107a2e;
  #L107a20.  if v5 >= v4 then goto L107a2e;
  #L107a24.  v2:= v8[v5] @kind object;
  #L107a28.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L107a2e.  v2:= v8[v4] @kind object;
  #L107a32.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L107a38.  v2:= v3;
  #L107a3a.  goto L1079c0;
  #L107a3c.  v3:= v8[v2] @kind object;
  #L107a40.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L107a46.  goto L1079bc;
  #L107a48.  return v1 @kind object;
}
procedure `void` `r`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v8 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.r:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1083a0.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl$c.a` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl$c` @kind object;
  #L1083a4.  v0:= 0I;
  #L1083a6.  v1:= 1I;
  #L1083a8.  v2:= 0I;
  #L1083aa.  v3:= "Coroutines Debugger Cleaner" @kind object;
  #L1083ae.  v4:= 0I;
  #L1083b0.  v6:= 21I;
  #L1083b4.  v7:= 0I;
  #L1083b6.  call temp:= `thread$default`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/concurrent/ThreadsKt;.thread$default:(ZZLjava/lang/ClassLoader;Ljava/lang/String;ILkotlin/jvm/functions/Function0;ILjava/lang/Object;)Ljava/lang/Thread;` @kind static;
  #L1083bc.  v0:= temp @kind object;
  #L1083be.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.b` @type ^`java.lang.Thread` := v0 @kind object;
  #L1083c2.  return @kind void;
}
procedure `void` `s`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.s:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1083d4.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.b` @type ^`java.lang.Thread` @kind object;
  #L1083d8.  if v0 != 0 then goto L1083de;
  #L1083dc.  return @kind void;
  #L1083de.  v1:= 0I;
  #L1083e0.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.b` @type ^`java.lang.Thread` := v1 @kind object;
  #L1083e4.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L1083ea.  call `join`(v0) @signature `Ljava/lang/Thread;.join:()V` @kind virtual;
  #L1083f0.  return @kind void;
}
procedure `kotlinx.coroutines.debug.internal.StackTraceFrame` `t`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.t:(Ljava/util/List;)Lkotlinx/coroutines/debug/internal/StackTraceFrame;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L107cfc.  call temp:= `isEmpty`(v4) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L107d02.  v0:= temp;
  #L107d04.  v1:= 0I;
  #L107d06.  if v0 != 0 then goto L107d40;
  #L107d0a.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L107d10.  v0:= temp;
  #L107d12.  call temp:= `listIterator`(v4, v0) @signature `Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;` @kind interface;
  #L107d18.  v4:= temp @kind object;
  #L107d1a.  call temp:= `hasPrevious`(v4) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L107d20.  v0:= temp;
  #L107d22.  if v0 == 0 then goto L107d40;
  #L107d26.  call temp:= `previous`(v4) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L107d2c.  v0:= temp @kind object;
  #L107d2e.  v0:= (`java.lang.StackTraceElement`) v0 @kind object;
  #L107d32.  v2:= new `kotlinx.coroutines.debug.internal.StackTraceFrame`;
  #L107d36.  call `<init>`(v2, v1, v0) @signature `Lkotlinx/coroutines/debug/internal/StackTraceFrame;.<init>:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;Ljava/lang/StackTraceElement;)V` @kind direct;
  #L107d3c.  v1:= v2 @kind object;
  #L107d3e.  goto L107d1a;
  #L107d40.  return v1 @kind object;
}
procedure `java.lang.String` `u`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.u:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L107538.  v0:= new `java.lang.StringBuilder`;
  #L10753c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L107542.  v1:= 34I;
  #L107546.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L10754c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107552.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L107558.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L10755e.  v3:= temp @kind object;
  #L107560.  return v3 @kind object;
}
procedure `void` `v`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v6 @kind this, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.v:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L108560.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L108564.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L10856a.  v0:= temp @kind object;
  #L10856c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L108572.  v1:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L108576.  call temp:= `isInstalled$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L10857c.  v2:= temp;
  #L10857e.  if v2 != 0 then goto L10858a;
  #L108582.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L108588.  return @kind void;
  #L10858a.  v2:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L10858e.  call temp:= `remove`(v2, v7) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L108594.  v3:= temp @kind object;
  #L108596.  v3:= (`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl`) v3 @kind object;
  #L10859a.  if v3 == 0 then goto L1085a0;
  #L10859e.  goto L1085e2;
  #L1085a0.  call temp:= `m`(v1, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.m:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @kind direct;
  #L1085a6.  v3:= temp @kind object;
  #L1085a8.  v4:= 0I;
  #L1085aa.  if v3 != 0 then goto L1085b2;
  #L1085ae.  v3:= v4 @kind object;
  #L1085b0.  goto L1085b6;
  #L1085b2.  v3:= v3.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L1085b6.  if v3 != 0 then goto L1085c2;
  #L1085ba.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L1085c0.  return @kind void;
  #L1085c2.  call temp:= `getLastObservedFrame$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getLastObservedFrame$kotlinx_coroutines_core:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind virtual;
  #L1085c8.  v5:= temp @kind object;
  #L1085ca.  if v5 != 0 then goto L1085d0;
  #L1085ce.  goto L1085d8;
  #L1085d0.  call temp:= `p`(v1, v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.p:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind direct;
  #L1085d6.  v4:= temp @kind object;
  #L1085d8.  if v4 == 0 then goto L1085e2;
  #L1085dc.  call temp:= `remove`(v2, v4) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1085e2.  v4:= v7 @kind object;
  #L1085e4.  v4:= (`kotlin.coroutines.Continuation`) v4 @kind object;
  #L1085e8.  call `updateState$kotlinx_coroutines_core`(v3, v8, v4) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.updateState$kotlinx_coroutines_core:(Ljava/lang/String;Lkotlin/coroutines/Continuation;)V` @kind virtual;
  #L1085ee.  call temp:= `p`(v1, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.p:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind direct;
  #L1085f4.  v7:= temp @kind object;
  #L1085f6.  if v7 != 0 then goto L108602;
  #L1085fa.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L108600.  return @kind void;
  #L108602.  call temp:= `put`(v2, v7, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L108608.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10860c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L108612.  return @kind void;
  #L108614.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L108616.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L10861c.  throw v7;
  catch `java.lang.Throwable` @[L108572..L10857e] goto L108614;
  catch `java.lang.Throwable` @[L10858a..L1085b6] goto L108614;
  catch `java.lang.Throwable` @[L1085c2..L1085f6] goto L108614;
  catch `java.lang.Throwable` @[L108602..L10860c] goto L108614;
}
procedure `void` `w`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v4 @kind this, `kotlin.coroutines.Continuation` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.w:(Lkotlin/coroutines/Continuation;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L108654.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L10865a.  v0:= temp;
  #L10865c.  if v0 != 0 then goto L108662;
  #L108660.  return @kind void;
  #L108662.  v0:= "RUNNING" @kind object;
  #L108666.  call temp:= `areEqual`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L10866c.  v0:= temp;
  #L10866e.  if v0 == 0 then goto L1086a8;
  #L108672.  v0:= `@@kotlin.KotlinVersion.CURRENT` @type ^`kotlin.KotlinVersion` @kind object;
  #L108676.  v1:= 1I;
  #L108678.  v2:= 3I;
  #L10867a.  v3:= 30I;
  #L10867e.  call temp:= `isAtLeast`(v0, v1, v2, v3) @signature `Lkotlin/KotlinVersion;.isAtLeast:(III)Z` @kind virtual;
  #L108684.  v0:= temp;
  #L108686.  if v0 == 0 then goto L1086a8;
  #L10868a.  v0:= instanceof @variable v5 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L10868e.  if v0 == 0 then goto L108698;
  #L108692.  v5:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v5 @kind object;
  #L108696.  goto L10869a;
  #L108698.  v5:= 0I;
  #L10869a.  if v5 != 0 then goto L1086a0;
  #L10869e.  return @kind void;
  #L1086a0.  call `v`(v4, v5, v6) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.v:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;Ljava/lang/String;)V` @kind direct;
  #L1086a6.  return @kind void;
  #L1086a8.  call temp:= `l`(v4, v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.l:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @kind direct;
  #L1086ae.  v0:= temp @kind object;
  #L1086b0.  if v0 != 0 then goto L1086b6;
  #L1086b4.  return @kind void;
  #L1086b6.  call `x`(v4, v0, v5, v6) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.x:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;Lkotlin/coroutines/Continuation;Ljava/lang/String;)V` @kind direct;
  #L1086bc.  return @kind void;
}
procedure `void` `x`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.x:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;Lkotlin/coroutines/Continuation;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1086d0.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L1086d4.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L1086da.  v0:= temp @kind object;
  #L1086dc.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L1086e2.  v1:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L1086e6.  call temp:= `isInstalled$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L1086ec.  v1:= temp;
  #L1086ee.  if v1 != 0 then goto L1086fa;
  #L1086f2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L1086f8.  return @kind void;
  #L1086fa.  v3:= v3.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L1086fe.  call `updateState$kotlinx_coroutines_core`(v3, v5, v4) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.updateState$kotlinx_coroutines_core:(Ljava/lang/String;Lkotlin/coroutines/Continuation;)V` @kind virtual;
  #L108704.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L108708.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L10870e.  return @kind void;
  #L108710.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L108712.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L108718.  throw v3;
  catch `java.lang.Throwable` @[L1086e2..L1086ee] goto L108710;
  catch `java.lang.Throwable` @[L1086fa..L108708] goto L108710;
}
procedure `void` `dumpCoroutines`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `java.io.PrintStream` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.dumpCoroutines:(Ljava/io/PrintStream;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L107f34.  @monitorenter v2
  #L107f36.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L107f3a.  call `c`(v0, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.c:(Ljava/io/PrintStream;)V` @kind direct;
  #L107f40.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L107f44.  @monitorexit v2
  #L107f46.  return @kind void;
  #L107f48.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L107f4a.  @monitorexit v2
  #L107f4c.  throw v0;
  catch `java.lang.Throwable` @[L107f36..L107f44] goto L107f48;
}
procedure `java.util.List` `dumpCoroutinesInfo`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v6 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.dumpCoroutinesInfo:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L107574.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L107578.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L10757e.  v1:= temp @kind object;
  #L107580.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L107586.  v2:= temp;
  #L107588.  v3:= 0I;
  #L10758a.  if v2 != 0 then goto L107598;
  #L10758e.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L107594.  v2:= temp;
  #L107596.  goto L10759a;
  #L107598.  v2:= 0I;
  #L10759a.  v4:= 0I;
  #L10759c.  if v4 >= v2 then goto L1075ac;
  #L1075a0.  v4:= v4 + 1;
  #L1075a4.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L1075aa.  goto L10759c;
  #L1075ac.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L1075b2.  v0:= temp @kind object;
  #L1075b4.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L1075ba.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L1075be.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L1075c4.  v5:= temp;
  #L1075c6.  if v5 == 0 then goto L10761e;
  #L1075ca.  call temp:= `g`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.g:()Ljava/util/Set;` @kind direct;
  #L1075d0.  v4:= temp @kind object;
  #L1075d2.  call temp:= `asSequence`(v4) @signature `Lkotlin/collections/CollectionsKt;.asSequence:(Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;` @kind static;
  #L1075d8.  v4:= temp @kind object;
  #L1075da.  v5:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$lambda-12$$inlined$sortedBy$1`;
  #L1075de.  call `<init>`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfoImpl$lambda-12$$inlined$sortedBy$1;.<init>:()V` @kind direct;
  #L1075e4.  call temp:= `sortedWith`(v4, v5) @signature `Lkotlin/sequences/SequencesKt;.sortedWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Lkotlin/sequences/Sequence;` @kind static;
  #L1075ea.  v4:= temp @kind object;
  #L1075ec.  v5:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1`;
  #L1075f0.  call `<init>`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1;.<init>:()V` @kind direct;
  #L1075f6.  call temp:= `mapNotNull`(v4, v5) @signature `Lkotlin/sequences/SequencesKt;.mapNotNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L1075fc.  v4:= temp @kind object;
  #L1075fe.  call temp:= `toList`(v4) @signature `Lkotlin/sequences/SequencesKt;.toList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @kind static;
  #L107604.  v4:= temp @kind object;
  #L107606.  if v3 >= v2 then goto L107616;
  #L10760a.  v3:= v3 + 1;
  #L10760e.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L107614.  goto L107606;
  #L107616.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L10761c.  return v4 @kind object;
  #L10761e.  v4:= "Debug probes are not installed" @kind object;
  #L107622.  v5:= new `java.lang.IllegalStateException`;
  #L107626.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L10762c.  v4:= temp @kind object;
  #L10762e.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L107634.  throw v5;
  #L107636.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L107638.  if v3 >= v2 then goto L107648;
  #L10763c.  v3:= v3 + 1;
  #L107640.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L107646.  goto L107638;
  #L107648.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L10764e.  throw v4;
  catch `java.lang.Throwable` @[L1075ba..L107606] goto L107636;
  catch `java.lang.Throwable` @[L10761e..L107636] goto L107636;
}
procedure `java.lang.Object`[] `dumpCoroutinesInfoAsJsonAndReferences`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v14 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.dumpCoroutinesInfoAsJsonAndReferences:()[Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L106ff0.  call temp:= `dumpCoroutinesInfo`(v14) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.dumpCoroutinesInfo:()Ljava/util/List;` @kind virtual;
  #L106ff6.  v0:= temp @kind object;
  #L106ff8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L106ffe.  v1:= temp;
  #L107000.  v2:= new `java.util.ArrayList`;
  #L107004.  call `<init>`(v2, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L10700a.  v3:= new `java.util.ArrayList`;
  #L10700e.  call `<init>`(v3, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L107014.  v4:= new `java.util.ArrayList`;
  #L107018.  call `<init>`(v4, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L10701e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L107024.  v1:= temp @kind object;
  #L107026.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L10702c.  v5:= temp;
  #L10702e.  if v5 == 0 then goto L107166;
  #L107032.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L107038.  v5:= temp @kind object;
  #L10703a.  v5:= (`kotlinx.coroutines.debug.internal.DebugCoroutineInfo`) v5 @kind object;
  #L10703e.  call temp:= `getContext`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L107044.  v6:= temp @kind object;
  #L107046.  v7:= `@@kotlinx.coroutines.CoroutineName.Key` @type ^`kotlinx.coroutines.CoroutineName$Key` @kind object;
  #L10704a.  call temp:= `get`(v6, v7) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L107050.  v7:= temp @kind object;
  #L107052.  v7:= (`kotlinx.coroutines.CoroutineName`) v7 @kind object;
  #L107056.  v8:= 0I;
  #L107058.  if v7 != 0 then goto L107060;
  #L10705c.  v7:= v8 @kind object;
  #L10705e.  goto L107076;
  #L107060.  call temp:= `getName`(v7) @signature `Lkotlinx/coroutines/CoroutineName;.getName:()Ljava/lang/String;` @kind virtual;
  #L107066.  v7:= temp @kind object;
  #L107068.  if v7 != 0 then goto L10706e;
  #L10706c.  goto L10705c;
  #L10706e.  call temp:= `u`(v14, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.u:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L107074.  v7:= temp @kind object;
  #L107076.  v9:= `@@kotlinx.coroutines.CoroutineDispatcher.Key` @type ^`kotlinx.coroutines.CoroutineDispatcher$Key` @kind object;
  #L10707a.  call temp:= `get`(v6, v9) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L107080.  v9:= temp @kind object;
  #L107082.  v9:= (`kotlinx.coroutines.CoroutineDispatcher`) v9 @kind object;
  #L107086.  if v9 != 0 then goto L10708e;
  #L10708a.  v9:= v8 @kind object;
  #L10708c.  goto L107096;
  #L10708e.  call temp:= `u`(v14, v9) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.u:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L107094.  v9:= temp @kind object;
  #L107096.  v10:= new `java.lang.StringBuilder`;
  #L10709a.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1070a0.  v11:= "\n                {\n                    \"name\": " @kind object;
  #L1070a4.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1070aa.  call temp:= `append`(v10, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1070b0.  v7:= ",\n                    \"id\": " @kind object;
  #L1070b4.  call temp:= `append`(v10, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1070ba.  v7:= `@@kotlinx.coroutines.CoroutineId.Key` @type ^`kotlinx.coroutines.CoroutineId$Key` @kind object;
  #L1070be.  call temp:= `get`(v6, v7) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L1070c4.  v6:= temp @kind object;
  #L1070c6.  v6:= (`kotlinx.coroutines.CoroutineId`) v6 @kind object;
  #L1070ca.  if v6 != 0 then goto L1070d0;
  #L1070ce.  goto L1070e0;
  #L1070d0.  call temp:= `getId`(v6) @signature `Lkotlinx/coroutines/CoroutineId;.getId:()J` @kind virtual;
  #L1070d6.  v6:= temp @kind wide;
  #L1070d8.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1070de.  v8:= temp @kind object;
  #L1070e0.  call temp:= `append`(v10, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1070e6.  v6:= ",\n                    \"dispatcher\": " @kind object;
  #L1070ea.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1070f0.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1070f6.  v6:= ",\n                    \"sequenceNumber\": " @kind object;
  #L1070fa.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107100.  call temp:= `getSequenceNumber`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.getSequenceNumber:()J` @kind virtual;
  #L107106.  v6:= temp @kind wide;
  #L107108.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L10710e.  v6:= ",\n                    \"state\": \"" @kind object;
  #L107112.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107118.  call temp:= `getState`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.getState:()Ljava/lang/String;` @kind virtual;
  #L10711e.  v6:= temp @kind object;
  #L107120.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107126.  v6:= "\"\n                } \n                " @kind object;
  #L10712a.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107130.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L107136.  v6:= temp @kind object;
  #L107138.  call temp:= `trimIndent`(v6) @signature `Lkotlin/text/StringsKt;.trimIndent:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L10713e.  v6:= temp @kind object;
  #L107140.  call temp:= `add`(v4, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L107146.  call temp:= `getLastObservedFrame`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.getLastObservedFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind virtual;
  #L10714c.  v6:= temp @kind object;
  #L10714e.  call temp:= `add`(v3, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L107154.  call temp:= `getLastObservedThread`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.getLastObservedThread:()Ljava/lang/Thread;` @kind virtual;
  #L10715a.  v5:= temp @kind object;
  #L10715c.  call temp:= `add`(v2, v5) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L107162.  goto L107026;
  #L107166.  v1:= 4I;
  #L107168.  v1:= new `java.lang.Object`[v1];
  #L10716c.  v13:= new `java.lang.StringBuilder`;
  #L107170.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L107176.  v5:= 91I;
  #L10717a.  call temp:= `append`(v13, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L107180.  v5:= 0I;
  #L107182.  v6:= 0I;
  #L107184.  v7:= 0I;
  #L107186.  v8:= 0I;
  #L107188.  v9:= 0I;
  #L10718a.  v10:= 0I;
  #L10718c.  v11:= 63I;
  #L107190.  v12:= 0I;
  #L107192.  call temp:= `joinToString$default`(v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lkotlin/collections/CollectionsKt;.joinToString$default:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L107198.  v4:= temp @kind object;
  #L10719a.  call temp:= `append`(v13, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1071a0.  v4:= 93I;
  #L1071a4.  call temp:= `append`(v13, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1071aa.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1071b0.  v4:= temp @kind object;
  #L1071b2.  v5:= 0I;
  #L1071b4.  v1[v5]:= v4 @kind object;
  #L1071b8.  v4:= 1I;
  #L1071ba.  v6:= new `java.lang.Thread`[v5];
  #L1071be.  call temp:= `toArray`(v2, v6) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1071c4.  v2:= temp @kind object;
  #L1071c6.  v6:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L1071ca.  call temp:= `requireNonNull`(v2, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1071d0.  v1[v4]:= v2 @kind object;
  #L1071d4.  v2:= 2I;
  #L1071d6.  v4:= new `kotlin.coroutines.jvm.internal.CoroutineStackFrame`[v5];
  #L1071da.  call temp:= `toArray`(v3, v4) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1071e0.  v3:= temp @kind object;
  #L1071e2.  call temp:= `requireNonNull`(v3, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1071e8.  v1[v2]:= v3 @kind object;
  #L1071ec.  v2:= 3I;
  #L1071ee.  v3:= new `kotlinx.coroutines.debug.internal.DebugCoroutineInfo`[v5];
  #L1071f2.  call temp:= `toArray`(v0, v3) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1071f8.  v0:= temp @kind object;
  #L1071fa.  call temp:= `requireNonNull`(v0, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L107200.  v1[v2]:= v0 @kind object;
  #L107204.  return v1 @kind object;
}
procedure `java.util.List` `dumpDebuggerInfo`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v6 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.dumpDebuggerInfo:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L107674.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L107678.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L10767e.  v1:= temp @kind object;
  #L107680.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L107686.  v2:= temp;
  #L107688.  v3:= 0I;
  #L10768a.  if v2 != 0 then goto L107698;
  #L10768e.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L107694.  v2:= temp;
  #L107696.  goto L10769a;
  #L107698.  v2:= 0I;
  #L10769a.  v4:= 0I;
  #L10769c.  if v4 >= v2 then goto L1076ac;
  #L1076a0.  v4:= v4 + 1;
  #L1076a4.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L1076aa.  goto L10769c;
  #L1076ac.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L1076b2.  v0:= temp @kind object;
  #L1076b4.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L1076ba.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L1076be.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L1076c4.  v5:= temp;
  #L1076c6.  if v5 == 0 then goto L10771e;
  #L1076ca.  call temp:= `g`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.g:()Ljava/util/Set;` @kind direct;
  #L1076d0.  v4:= temp @kind object;
  #L1076d2.  call temp:= `asSequence`(v4) @signature `Lkotlin/collections/CollectionsKt;.asSequence:(Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;` @kind static;
  #L1076d8.  v4:= temp @kind object;
  #L1076da.  v5:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$lambda-12$$inlined$sortedBy$1`;
  #L1076de.  call `<init>`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfoImpl$lambda-12$$inlined$sortedBy$1;.<init>:()V` @kind direct;
  #L1076e4.  call temp:= `sortedWith`(v4, v5) @signature `Lkotlin/sequences/SequencesKt;.sortedWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Lkotlin/sequences/Sequence;` @kind static;
  #L1076ea.  v4:= temp @kind object;
  #L1076ec.  v5:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1`;
  #L1076f0.  call `<init>`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1;.<init>:()V` @kind direct;
  #L1076f6.  call temp:= `mapNotNull`(v4, v5) @signature `Lkotlin/sequences/SequencesKt;.mapNotNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L1076fc.  v4:= temp @kind object;
  #L1076fe.  call temp:= `toList`(v4) @signature `Lkotlin/sequences/SequencesKt;.toList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @kind static;
  #L107704.  v4:= temp @kind object;
  #L107706.  if v3 >= v2 then goto L107716;
  #L10770a.  v3:= v3 + 1;
  #L10770e.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L107714.  goto L107706;
  #L107716.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L10771c.  return v4 @kind object;
  #L10771e.  v4:= "Debug probes are not installed" @kind object;
  #L107722.  v5:= new `java.lang.IllegalStateException`;
  #L107726.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L10772c.  v4:= temp @kind object;
  #L10772e.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L107734.  throw v5;
  #L107736.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L107738.  if v3 >= v2 then goto L107748;
  #L10773c.  v3:= v3 + 1;
  #L107740.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L107746.  goto L107738;
  #L107748.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L10774e.  throw v4;
  catch `java.lang.Throwable` @[L1076ba..L107706] goto L107736;
  catch `java.lang.Throwable` @[L10771e..L107736] goto L107736;
}
procedure `java.util.List` `enhanceStackTraceWithThreadDump`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlinx.coroutines.debug.internal.DebugCoroutineInfo` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.enhanceStackTraceWithThreadDump:(Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L107774.  call temp:= `getState`(v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.getState:()Ljava/lang/String;` @kind virtual;
  #L10777a.  v0:= temp @kind object;
  #L10777c.  call temp:= `getLastObservedThread`(v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.getLastObservedThread:()Ljava/lang/Thread;` @kind virtual;
  #L107782.  v2:= temp @kind object;
  #L107784.  call temp:= `d`(v1, v0, v2, v3) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.d:(Ljava/lang/String;Ljava/lang/Thread;Ljava/util/List;)Ljava/util/List;` @kind direct;
  #L10778a.  v2:= temp @kind object;
  #L10778c.  return v2 @kind object;
}
procedure `java.lang.String` `enhanceStackTraceWithThreadDumpAsJson`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v9 @kind this, `kotlinx.coroutines.debug.internal.DebugCoroutineInfo` v10 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.enhanceStackTraceWithThreadDumpAsJson:(Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L107218.  call temp:= `lastObservedStackTrace`(v10) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.lastObservedStackTrace:()Ljava/util/List;` @kind virtual;
  #L10721e.  v0:= temp @kind object;
  #L107220.  call temp:= `enhanceStackTraceWithThreadDump`(v9, v10, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.enhanceStackTraceWithThreadDump:(Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L107226.  v10:= temp @kind object;
  #L107228.  v0:= new `java.util.ArrayList`;
  #L10722c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L107232.  call temp:= `iterator`(v10) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L107238.  v10:= temp @kind object;
  #L10723a.  call temp:= `hasNext`(v10) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L107240.  v1:= temp;
  #L107242.  if v1 == 0 then goto L1072ee;
  #L107246.  call temp:= `next`(v10) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L10724c.  v1:= temp @kind object;
  #L10724e.  v1:= (`java.lang.StackTraceElement`) v1 @kind object;
  #L107252.  v2:= new `java.lang.StringBuilder`;
  #L107256.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L10725c.  v3:= "\n                {\n                    \"declaringClass\": \"" @kind object;
  #L107260.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107266.  call temp:= `getClassName`(v1) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L10726c.  v3:= temp @kind object;
  #L10726e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107274.  v3:= "\",\n                    \"methodName\": \"" @kind object;
  #L107278.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L10727e.  call temp:= `getMethodName`(v1) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L107284.  v3:= temp @kind object;
  #L107286.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L10728c.  v3:= "\",\n                    \"fileName\": " @kind object;
  #L107290.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107296.  call temp:= `getFileName`(v1) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L10729c.  v3:= temp @kind object;
  #L10729e.  if v3 != 0 then goto L1072a6;
  #L1072a2.  v3:= 0I;
  #L1072a4.  goto L1072ae;
  #L1072a6.  call temp:= `u`(v9, v3) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.u:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L1072ac.  v3:= temp @kind object;
  #L1072ae.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1072b4.  v3:= ",\n                    \"lineNumber\": " @kind object;
  #L1072b8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1072be.  call temp:= `getLineNumber`(v1) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L1072c4.  v1:= temp;
  #L1072c6.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1072cc.  v1:= "\n                }\n                " @kind object;
  #L1072d0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1072d6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1072dc.  v1:= temp @kind object;
  #L1072de.  call temp:= `trimIndent`(v1) @signature `Lkotlin/text/StringsKt;.trimIndent:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1072e4.  v1:= temp @kind object;
  #L1072e6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1072ec.  goto L10723a;
  #L1072ee.  v10:= new `java.lang.StringBuilder`;
  #L1072f2.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1072f8.  v1:= 91I;
  #L1072fc.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L107302.  v1:= 0I;
  #L107304.  v2:= 0I;
  #L107306.  v3:= 0I;
  #L107308.  v4:= 0I;
  #L10730a.  v5:= 0I;
  #L10730c.  v6:= 0I;
  #L10730e.  v7:= 63I;
  #L107312.  v8:= 0I;
  #L107314.  call temp:= `joinToString$default`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlin/collections/CollectionsKt;.joinToString$default:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L10731a.  v0:= temp @kind object;
  #L10731c.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L107322.  v0:= 93I;
  #L107326.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L10732c.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L107332.  v10:= temp @kind object;
  #L107334.  return v10 @kind object;
}
procedure `boolean` `getEnableCreationStackTraces`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.getEnableCreationStackTraces:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L106e68.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.h` @type ^`boolean` @kind boolean;
  #L106e6c.  return v0;
}
procedure `boolean` `getSanitizeStackTraces`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.getSanitizeStackTraces:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L106e80.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.g` @type ^`boolean` @kind boolean;
  #L106e84.  return v0;
}
procedure `java.lang.String` `hierarchyToString`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v9 @kind this, `kotlinx.coroutines.Job` v10 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.hierarchyToString:(Lkotlinx/coroutines/Job;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L107378.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L10737c.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L107382.  v1:= temp @kind object;
  #L107384.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L10738a.  v2:= temp;
  #L10738c.  v3:= 0I;
  #L10738e.  if v2 != 0 then goto L10739c;
  #L107392.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L107398.  v2:= temp;
  #L10739a.  goto L10739e;
  #L10739c.  v2:= 0I;
  #L10739e.  v4:= 0I;
  #L1073a0.  if v4 >= v2 then goto L1073b0;
  #L1073a4.  v4:= v4 + 1;
  #L1073a8.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L1073ae.  goto L1073a0;
  #L1073b0.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L1073b6.  v0:= temp @kind object;
  #L1073b8.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L1073be.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L1073c2.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L1073c8.  v5:= temp;
  #L1073ca.  if v5 == 0 then goto L1074e2;
  #L1073ce.  call temp:= `g`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.g:()Ljava/util/Set;` @kind direct;
  #L1073d4.  v4:= temp @kind object;
  #L1073d6.  v5:= new `java.util.ArrayList`;
  #L1073da.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1073e0.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1073e6.  v4:= temp @kind object;
  #L1073e8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1073ee.  v6:= temp;
  #L1073f0.  if v6 == 0 then goto L107430;
  #L1073f4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1073fa.  v6:= temp @kind object;
  #L1073fc.  v7:= v6 @kind object;
  #L1073fe.  v7:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v7 @kind object;
  #L107402.  v7:= v7.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L107406.  call temp:= `getContext`(v7) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L10740c.  v7:= temp @kind object;
  #L10740e.  v8:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L107412.  call temp:= `get`(v7, v8) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L107418.  v7:= temp @kind object;
  #L10741a.  if v7 == 0 then goto L107422;
  #L10741e.  v7:= 1I;
  #L107420.  goto L107424;
  #L107422.  v7:= 0I;
  #L107424.  if v7 == 0 then goto L1073e8;
  #L107428.  call temp:= `add`(v5, v6) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L10742e.  goto L1073e8;
  #L107430.  v4:= 10I;
  #L107434.  call temp:= `collectionSizeOrDefault`(v5, v4) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L10743a.  v4:= temp;
  #L10743c.  call temp:= `mapCapacity`(v4) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L107442.  v4:= temp;
  #L107444.  v6:= 16I;
  #L107448.  call temp:= `coerceAtLeast`(v4, v6) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(II)I` @kind static;
  #L10744e.  v4:= temp;
  #L107450.  v6:= new `java.util.LinkedHashMap`;
  #L107454.  call `<init>`(v6, v4) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L10745a.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L107460.  v4:= temp @kind object;
  #L107462.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L107468.  v5:= temp;
  #L10746a.  if v5 == 0 then goto L1074a0;
  #L10746e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L107474.  v5:= temp @kind object;
  #L107476.  v7:= v5 @kind object;
  #L107478.  v7:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v7 @kind object;
  #L10747c.  v7:= v7.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L107480.  call temp:= `getContext`(v7) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L107486.  v7:= temp @kind object;
  #L107488.  call temp:= `getJob`(v7) @signature `Lkotlinx/coroutines/JobKt;.getJob:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Job;` @kind static;
  #L10748e.  v7:= temp @kind object;
  #L107490.  v5:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v5 @kind object;
  #L107494.  v5:= v5.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L107498.  call temp:= `put`(v6, v7, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10749e.  goto L107462;
  #L1074a0.  v4:= new `java.lang.StringBuilder`;
  #L1074a4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1074aa.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L1074ae.  v7:= "" @kind object;
  #L1074b2.  call `a`(v5, v10, v6, v4, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.a:(Lkotlinx/coroutines/Job;Ljava/util/Map;Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind direct;
  #L1074b8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1074be.  v10:= temp @kind object;
  #L1074c0.  v4:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L1074c4.  call `checkNotNullExpressionValue`(v10, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1074ca.  if v3 >= v2 then goto L1074da;
  #L1074ce.  v3:= v3 + 1;
  #L1074d2.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L1074d8.  goto L1074ca;
  #L1074da.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L1074e0.  return v10 @kind object;
  #L1074e2.  v10:= "Debug probes are not installed" @kind object;
  #L1074e6.  v4:= new `java.lang.IllegalStateException`;
  #L1074ea.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1074f0.  v10:= temp @kind object;
  #L1074f2.  call `<init>`(v4, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1074f8.  throw v4;
  #L1074fa.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1074fc.  if v3 >= v2 then goto L10750c;
  #L107500.  v3:= v3 + 1;
  #L107504.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L10750a.  goto L1074fc;
  #L10750c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L107512.  throw v10;
  catch `java.lang.Throwable` @[L1073be..L1074ca] goto L1074fa;
  catch `java.lang.Throwable` @[L1074e2..L1074fa] goto L1074fa;
}
procedure `void` `install`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v7 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.install:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L10818c.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L108190.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L108196.  v1:= temp @kind object;
  #L108198.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L10819e.  v2:= temp;
  #L1081a0.  v3:= 0I;
  #L1081a2.  if v2 != 0 then goto L1081b0;
  #L1081a6.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L1081ac.  v2:= temp;
  #L1081ae.  goto L1081b2;
  #L1081b0.  v2:= 0I;
  #L1081b2.  v4:= 0I;
  #L1081b4.  if v4 >= v2 then goto L1081c4;
  #L1081b8.  v4:= v4 + 1;
  #L1081bc.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L1081c2.  goto L1081b4;
  #L1081c4.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L1081ca.  v0:= temp @kind object;
  #L1081cc.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L1081d2.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L1081d6.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int`;
  #L1081da.  v6:= 1I;
  #L1081dc.  v5:= v5 + v6 @kind int;
  #L1081de.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int` := v5;
  #L1081e2.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int`;
  #L1081e6.  if v5 <= v6 then goto L108202;
  #L1081ea.  if v3 >= v2 then goto L1081fa;
  #L1081ee.  v3:= v3 + 1;
  #L1081f2.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L1081f8.  goto L1081ea;
  #L1081fa.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L108200.  return @kind void;
  #L108202.  call `r`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.r:()V` @kind direct;
  #L108208.  v4:= `@@kotlinx.coroutines.debug.internal.AgentInstallationType.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.AgentInstallationType` @kind object;
  #L10820c.  call temp:= `isInstalledStatically$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/AgentInstallationType;.isInstalledStatically$kotlinx_coroutines_core:()Z` @kind virtual;
  #L108212.  v4:= temp;
  #L108214.  if v4 == 0 then goto L108230;
  #L108218.  if v3 >= v2 then goto L108228;
  #L10821c.  v3:= v3 + 1;
  #L108220.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L108226.  goto L108218;
  #L108228.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L10822e.  return @kind void;
  #L108230.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.i` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L108234.  if v4 != 0 then goto L10823a;
  #L108238.  goto L108244;
  #L10823a.  v5:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L10823e.  call temp:= `invoke`(v4, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L108244.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L108248.  if v3 >= v2 then goto L108258;
  #L10824c.  v3:= v3 + 1;
  #L108250.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L108256.  goto L108248;
  #L108258.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L10825e.  return @kind void;
  #L108260.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L108262.  if v3 >= v2 then goto L108272;
  #L108266.  v3:= v3 + 1;
  #L10826a.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L108270.  goto L108262;
  #L108272.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L108278.  throw v4;
  catch `java.lang.Throwable` @[L1081d2..L1081e6] goto L108260;
  catch `java.lang.Throwable` @[L108202..L108214] goto L108260;
  catch `java.lang.Throwable` @[L108230..L108248] goto L108260;
}
procedure `boolean` `isInstalled$kotlinx_coroutines_core`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L106ef0.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int`;
  #L106ef4.  if v0 <= 0 then goto L106efc;
  #L106ef8.  v0:= 1I;
  #L106efa.  goto L106efe;
  #L106efc.  v0:= 0I;
  #L106efe.  return v0;
}
procedure `kotlin.coroutines.Continuation` `probeCoroutineCreated$kotlinx_coroutines_core`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.probeCoroutineCreated$kotlinx_coroutines_core:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L107b58.  call temp:= `isInstalled$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L107b5e.  v0:= temp;
  #L107b60.  if v0 != 0 then goto L107b66;
  #L107b64.  return v2 @kind object;
  #L107b66.  call temp:= `l`(v1, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.l:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @kind direct;
  #L107b6c.  v0:= temp @kind object;
  #L107b6e.  if v0 == 0 then goto L107b74;
  #L107b72.  return v2 @kind object;
  #L107b74.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.h` @type ^`boolean` @kind boolean;
  #L107b78.  if v0 == 0 then goto L107b98;
  #L107b7c.  v0:= new `java.lang.Exception`;
  #L107b80.  call `<init>`(v0) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L107b86.  call temp:= `q`(v1, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.q:(Ljava/lang/Throwable;)Ljava/util/List;` @kind direct;
  #L107b8c.  v0:= temp @kind object;
  #L107b8e.  call temp:= `t`(v1, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.t:(Ljava/util/List;)Lkotlinx/coroutines/debug/internal/StackTraceFrame;` @kind direct;
  #L107b94.  v0:= temp @kind object;
  #L107b96.  goto L107b9a;
  #L107b98.  v0:= 0I;
  #L107b9a.  call temp:= `b`(v1, v2, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.b:(Lkotlin/coroutines/Continuation;Lkotlinx/coroutines/debug/internal/StackTraceFrame;)Lkotlin/coroutines/Continuation;` @kind direct;
  #L107ba0.  v2:= temp @kind object;
  #L107ba2.  return v2 @kind object;
}
procedure `void` `probeCoroutineResumed$kotlinx_coroutines_core`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.probeCoroutineResumed$kotlinx_coroutines_core:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L108338.  v0:= "RUNNING" @kind object;
  #L10833c.  call `w`(v1, v2, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.w:(Lkotlin/coroutines/Continuation;Ljava/lang/String;)V` @kind direct;
  #L108342.  return @kind void;
}
procedure `void` `probeCoroutineSuspended$kotlinx_coroutines_core`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.probeCoroutineSuspended$kotlinx_coroutines_core:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L108354.  v0:= "SUSPENDED" @kind object;
  #L108358.  call `w`(v1, v2, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.w:(Lkotlin/coroutines/Continuation;Ljava/lang/String;)V` @kind direct;
  #L10835e.  return @kind void;
}
procedure `void` `setEnableCreationStackTraces`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.setEnableCreationStackTraces:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L108370.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.h` @type ^`boolean` := v1 @kind boolean;
  #L108374.  return @kind void;
}
procedure `void` `setSanitizeStackTraces`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.setSanitizeStackTraces:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L108388.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.g` @type ^`boolean` := v1 @kind boolean;
  #L10838c.  return @kind void;
}
procedure `void` `uninstall`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v6 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.uninstall:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L108404.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L108408.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L10840e.  v1:= temp @kind object;
  #L108410.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L108416.  v2:= temp;
  #L108418.  v3:= 0I;
  #L10841a.  if v2 != 0 then goto L108428;
  #L10841e.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L108424.  v2:= temp;
  #L108426.  goto L10842a;
  #L108428.  v2:= 0I;
  #L10842a.  v4:= 0I;
  #L10842c.  if v4 >= v2 then goto L10843c;
  #L108430.  v4:= v4 + 1;
  #L108434.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L10843a.  goto L10842c;
  #L10843c.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L108442.  v0:= temp @kind object;
  #L108444.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L10844a.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L10844e.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L108454.  v5:= temp;
  #L108456.  if v5 == 0 then goto L1084f8;
  #L10845a.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int`;
  #L10845e.  v5:= v5 + -1;
  #L108462.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int` := v5;
  #L108466.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int`;
  #L10846a.  if v5 == 0 then goto L108486;
  #L10846e.  if v3 >= v2 then goto L10847e;
  #L108472.  v3:= v3 + 1;
  #L108476.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L10847c.  goto L10846e;
  #L10847e.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L108484.  return @kind void;
  #L108486.  call `s`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.s:()V` @kind direct;
  #L10848c.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L108490.  call `clear`(v4) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.clear:()V` @kind virtual;
  #L108496.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L10849a.  call `clear`(v4) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.clear:()V` @kind virtual;
  #L1084a0.  v4:= `@@kotlinx.coroutines.debug.internal.AgentInstallationType.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.AgentInstallationType` @kind object;
  #L1084a4.  call temp:= `isInstalledStatically$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/AgentInstallationType;.isInstalledStatically$kotlinx_coroutines_core:()Z` @kind virtual;
  #L1084aa.  v4:= temp;
  #L1084ac.  if v4 == 0 then goto L1084c8;
  #L1084b0.  if v3 >= v2 then goto L1084c0;
  #L1084b4.  v3:= v3 + 1;
  #L1084b8.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L1084be.  goto L1084b0;
  #L1084c0.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L1084c6.  return @kind void;
  #L1084c8.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.i` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1084cc.  if v4 != 0 then goto L1084d2;
  #L1084d0.  goto L1084dc;
  #L1084d2.  v5:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L1084d6.  call temp:= `invoke`(v4, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1084dc.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1084e0.  if v3 >= v2 then goto L1084f0;
  #L1084e4.  v3:= v3 + 1;
  #L1084e8.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L1084ee.  goto L1084e0;
  #L1084f0.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L1084f6.  return @kind void;
  #L1084f8.  v4:= "Agent was not installed" @kind object;
  #L1084fc.  v5:= new `java.lang.IllegalStateException`;
  #L108500.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L108506.  v4:= temp @kind object;
  #L108508.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10850e.  throw v5;
  #L108510.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L108512.  if v3 >= v2 then goto L108522;
  #L108516.  v3:= v3 + 1;
  #L10851a.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L108520.  goto L108512;
  #L108522.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L108528.  throw v4;
  catch `java.lang.Throwable` @[L10844a..L10846a] goto L108510;
  catch `java.lang.Throwable` @[L108486..L1084ac] goto L108510;
  catch `java.lang.Throwable` @[L1084c8..L1084e0] goto L108510;
  catch `java.lang.Throwable` @[L1084f8..L108510] goto L108510;
}
