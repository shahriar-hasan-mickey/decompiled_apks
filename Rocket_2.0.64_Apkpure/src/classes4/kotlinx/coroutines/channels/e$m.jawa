record `kotlinx.coroutines.channels.e$m` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.channels.e$m.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.channels.e$m.b` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.channels.e$m.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.e$m` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/e$m;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0fed5c.  v0.`kotlinx.coroutines.channels.e$m.c` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L0fed60.  v1:= 2I;
  #L0fed62.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0fed68.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.channels.e$m` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/e$m;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0fec94.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/e$m;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0fec9a.  v1:= temp @kind object;
  #L0fec9c.  v1:= (`kotlinx.coroutines.channels.e$m`) v1 @kind object;
  #L0feca0.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0feca4.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/channels/e$m;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0fecaa.  v1:= temp @kind object;
  #L0fecac.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.channels.e$m` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/channels/e$m;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0fed38.  v0:= new `kotlinx.coroutines.channels.e$m`;
  #L0fed3c.  v1:= v2.`kotlinx.coroutines.channels.e$m.c` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L0fed40.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/channels/e$m;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0fed46.  v0.`kotlinx.coroutines.channels.e$m.b` @type ^`java.lang.Object` := v3 @kind object;
  #L0fed4a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.channels.e$m` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/e$m;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0fec74.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L0fec78.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/e$m;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0fec7e.  v1:= temp @kind object;
  #L0fec80.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.channels.e$m` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/channels/e$m;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fecc0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0fecc6.  v0:= temp @kind object;
  #L0fecc8.  v1:= v3.`kotlinx.coroutines.channels.e$m.a` @type ^`int`;
  #L0feccc.  v2:= 1I;
  #L0fecce.  if v1 == 0 then goto L0fecee;
  #L0fecd2.  if v1 != v2 then goto L0fecde;
  #L0fecd6.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0fecdc.  goto L0fed0e;
  #L0fecde.  v4:= new `java.lang.IllegalStateException`;
  #L0fece2.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0fece6.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fecec.  throw v4;
  #L0fecee.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0fecf4.  v4:= v3.`kotlinx.coroutines.channels.e$m.b` @type ^`java.lang.Object` @kind object;
  #L0fecf8.  v1:= v3.`kotlinx.coroutines.channels.e$m.c` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L0fecfc.  v3.`kotlinx.coroutines.channels.e$m.a` @type ^`int` := v2;
  #L0fed00.  call temp:= `invoke`(v1, v4, v3) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0fed06.  v4:= temp @kind object;
  #L0fed08.  if v4 != v0 then goto L0fed0e;
  #L0fed0c.  return v0 @kind object;
  #L0fed0e.  v4:= (`java.lang.Boolean`) v4 @kind object;
  #L0fed12.  call temp:= `booleanValue`(v4) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L0fed18.  v4:= temp;
  #L0fed1a.  v4:= v4 ^~ v2 @kind int;
  #L0fed1c.  call temp:= `boxBoolean`(v4) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L0fed22.  v4:= temp @kind object;
  #L0fed24.  return v4 @kind object;
}
