record `kotlinx.coroutines.channels.ArrayBroadcastChannel$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.channels.AbstractChannel` @kind class, `kotlinx.coroutines.channels.ReceiveChannel` @kind interface {
  `long` `kotlinx.coroutines.channels.ArrayBroadcastChannel$a._subHead` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlinx.coroutines.channels.ArrayBroadcastChannel` `kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.locks.ReentrantLock` `kotlinx.coroutines.channels.ArrayBroadcastChannel$a.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v2 @kind this, `kotlinx.coroutines.channels.ArrayBroadcastChannel` v3 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.<init>:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0fb00c.  v0:= 0I;
  #L0fb00e.  call `<init>`(v2, v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0fb014.  v2.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @type ^`kotlinx.coroutines.channels.ArrayBroadcastChannel` := v3 @kind object;
  #L0fb018.  v3:= new `java.util.concurrent.locks.ReentrantLock`;
  #L0fb01c.  call `<init>`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L0fb022.  v2.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.d` @type ^`java.util.concurrent.locks.ReentrantLock` := v3 @kind object;
  #L0fb026.  v0:= 0L;
  #L0fb02a.  v2.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a._subHead` @type ^`long` := v0 @kind wide;
  #L0fb02e.  return @kind void;
}
procedure `boolean` `s`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.s:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0fadc8.  call temp:= `getClosedForReceive`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForReceive:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0fadce.  v0:= temp @kind object;
  #L0fadd0.  v1:= 0I;
  #L0fadd2.  if v0 == 0 then goto L0fadd8;
  #L0fadd6.  return v1;
  #L0fadd8.  call temp:= `isBufferEmpty`(v2) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.isBufferEmpty:()Z` @kind virtual;
  #L0fadde.  v0:= temp;
  #L0fade0.  if v0 == 0 then goto L0fadf6;
  #L0fade4.  v0:= v2.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @type ^`kotlinx.coroutines.channels.ArrayBroadcastChannel` @kind object;
  #L0fade8.  call temp:= `getClosedForReceive`(v0) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForReceive:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0fadee.  v0:= temp @kind object;
  #L0fadf0.  if v0 != 0 then goto L0fadf6;
  #L0fadf4.  return v1;
  #L0fadf6.  v0:= 1I;
  #L0fadf8.  return v0;
}
procedure `java.lang.Object` `t`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v6 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.t:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0fae0c.  call temp:= `r`(v6) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.r:()J` @kind virtual;
  #L0fae12.  v0:= temp @kind wide;
  #L0fae14.  v2:= v6.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @type ^`kotlinx.coroutines.channels.ArrayBroadcastChannel` @kind object;
  #L0fae18.  call temp:= `getClosedForReceive`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForReceive:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0fae1e.  v2:= temp @kind object;
  #L0fae20.  v3:= v6.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @type ^`kotlinx.coroutines.channels.ArrayBroadcastChannel` @kind object;
  #L0fae24.  call temp:= `access$getTail`(v3) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.access$getTail:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;)J` @kind static;
  #L0fae2a.  v3:= temp @kind wide;
  #L0fae2c.  v5:= lcmp(v0, v3);
  #L0fae30.  if v5 < 0 then goto L0fae4a;
  #L0fae34.  if v2 != 0 then goto L0fae40;
  #L0fae38.  call temp:= `getClosedForReceive`(v6) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForReceive:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0fae3e.  v2:= temp @kind object;
  #L0fae40.  if v2 != 0 then goto L0fae48;
  #L0fae44.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fae48.  return v2 @kind object;
  #L0fae4a.  v2:= v6.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @type ^`kotlinx.coroutines.channels.ArrayBroadcastChannel` @kind object;
  #L0fae4e.  call temp:= `access$elementAt`(v2, v0) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.access$elementAt:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;J)Ljava/lang/Object;` @kind static;
  #L0fae54.  v0:= temp @kind object;
  #L0fae56.  call temp:= `getClosedForReceive`(v6) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForReceive:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0fae5c.  v1:= temp @kind object;
  #L0fae5e.  if v1 == 0 then goto L0fae64;
  #L0fae62.  return v1 @kind object;
  #L0fae64.  return v0 @kind object;
}
procedure `boolean` `close`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.close:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0facc4.  call temp:= `close`(v3, v4) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.close:(Ljava/lang/Throwable;)Z` @kind super;
  #L0facca.  v4:= temp;
  #L0faccc.  if v4 == 0 then goto L0fad10;
  #L0facd0.  v0:= v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @type ^`kotlinx.coroutines.channels.ArrayBroadcastChannel` @kind object;
  #L0facd4.  v1:= 1I;
  #L0facd6.  v2:= 0I;
  #L0facd8.  call `v`(v0, v2, v3, v1, v2) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.v:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;ILjava/lang/Object;)V` @kind static;
  #L0facde.  v0:= v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0face2.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L0face8.  v1:= v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @type ^`kotlinx.coroutines.channels.ArrayBroadcastChannel` @kind object;
  #L0facec.  call temp:= `access$getTail`(v1) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.access$getTail:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;)J` @kind static;
  #L0facf2.  v1:= temp @kind wide;
  #L0facf4.  call `u`(v3, v1) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.u:(J)V` @kind virtual;
  #L0facfa.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0facfe.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fad04.  goto L0fad10;
  #L0fad06.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0fad08.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fad0e.  throw v4;
  #L0fad10.  return v4;
  catch `java.lang.Throwable` @[L0face8..L0facfe] goto L0fad06;
}
procedure `boolean` `isBufferAlwaysEmpty`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.isBufferAlwaysEmpty:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0fad30.  v0:= 0I;
  #L0fad32.  return v0;
}
procedure `boolean` `isBufferAlwaysFull`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.isBufferAlwaysFull:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L0fad44.  v0:= new `java.lang.IllegalStateException`;
  #L0fad48.  v1:= "Should not be used" @kind object;
  #L0fad4c.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fad52.  v1:= temp @kind object;
  #L0fad54.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fad5a.  throw v0;
}
procedure `boolean` `isBufferEmpty`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v5 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.isBufferEmpty:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0fad6c.  call temp:= `r`(v5) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.r:()J` @kind virtual;
  #L0fad72.  v0:= temp @kind wide;
  #L0fad74.  v2:= v5.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @type ^`kotlinx.coroutines.channels.ArrayBroadcastChannel` @kind object;
  #L0fad78.  call temp:= `access$getTail`(v2) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.access$getTail:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;)J` @kind static;
  #L0fad7e.  v2:= temp @kind wide;
  #L0fad80.  v4:= lcmp(v0, v2);
  #L0fad84.  if v4 < 0 then goto L0fad8c;
  #L0fad88.  v0:= 1I;
  #L0fad8a.  goto L0fad8e;
  #L0fad8c.  v0:= 0I;
  #L0fad8e.  return v0;
}
procedure `boolean` `isBufferFull`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.isBufferFull:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L0fada0.  v0:= new `java.lang.IllegalStateException`;
  #L0fada4.  v1:= "Should not be used" @kind object;
  #L0fada8.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fadae.  v1:= temp @kind object;
  #L0fadb0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fadb6.  throw v0;
}
procedure `java.lang.Object` `pollInternal`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v8 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.pollInternal:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0fae78.  v0:= v8.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0fae7c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L0fae82.  call temp:= `t`(v8) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.t:()Ljava/lang/Object;` @kind direct;
  #L0fae88.  v1:= temp @kind object;
  #L0fae8a.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fae8e.  v3:= 1I;
  #L0fae90.  if v2 == 0 then goto L0fae96;
  #L0fae94.  goto L0fae9e;
  #L0fae96.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fae9a.  if v1 != v2 then goto L0faea2;
  #L0fae9e.  v2:= 0I;
  #L0faea0.  goto L0faeb8;
  #L0faea2.  call temp:= `r`(v8) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.r:()J` @kind virtual;
  #L0faea8.  v4:= temp @kind wide;
  #L0faeaa.  v6:= 1L;
  #L0faeae.  v4:= v4 + v6 @kind long;
  #L0faeb0.  call `u`(v8, v4) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.u:(J)V` @kind virtual;
  #L0faeb6.  v2:= 1I;
  #L0faeb8.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0faebe.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0faec2.  v4:= 0I;
  #L0faec4.  if v0 == 0 then goto L0faed0;
  #L0faec8.  v0:= v1 @kind object;
  #L0faeca.  v0:= (`kotlinx.coroutines.channels.Closed`) v0 @kind object;
  #L0faece.  goto L0faed2;
  #L0faed0.  v0:= v4 @kind object;
  #L0faed2.  if v0 != 0 then goto L0faed8;
  #L0faed6.  goto L0faee2;
  #L0faed8.  v0:= v0.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0faedc.  call temp:= `close`(v8, v0) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.close:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0faee2.  call temp:= `q`(v8) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.q:()Z` @kind virtual;
  #L0faee8.  v0:= temp;
  #L0faeea.  if v0 == 0 then goto L0faef0;
  #L0faeee.  goto L0faef2;
  #L0faef0.  v3:= v2;
  #L0faef2.  if v3 == 0 then goto L0faf02;
  #L0faef6.  v0:= v8.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @type ^`kotlinx.coroutines.channels.ArrayBroadcastChannel` @kind object;
  #L0faefa.  v2:= 3I;
  #L0faefc.  call `v`(v0, v4, v4, v2, v4) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.v:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;ILjava/lang/Object;)V` @kind static;
  #L0faf02.  return v1 @kind object;
  #L0faf04.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0faf06.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0faf0c.  throw v1;
  catch `java.lang.Throwable` @[L0fae82..L0faeb6] goto L0faf04;
}
procedure `java.lang.Object` `pollSelectInternal`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v8 @kind this, `kotlinx.coroutines.selects.SelectInstance` v9 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.pollSelectInternal:(Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0faf2c.  v0:= v8.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0faf30.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L0faf36.  call temp:= `t`(v8) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.t:()Ljava/lang/Object;` @kind direct;
  #L0faf3c.  v1:= temp @kind object;
  #L0faf3e.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0faf42.  v3:= 1I;
  #L0faf44.  v4:= 0I;
  #L0faf46.  if v2 == 0 then goto L0faf4c;
  #L0faf4a.  goto L0faf82;
  #L0faf4c.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0faf50.  if v1 != v2 then goto L0faf56;
  #L0faf54.  goto L0faf82;
  #L0faf56.  call temp:= `trySelect`(v9) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L0faf5c.  v9:= temp;
  #L0faf5e.  if v9 != 0 then goto L0faf6c;
  #L0faf62.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L0faf68.  v1:= temp @kind object;
  #L0faf6a.  goto L0faf82;
  #L0faf6c.  call temp:= `r`(v8) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.r:()J` @kind virtual;
  #L0faf72.  v4:= temp @kind wide;
  #L0faf74.  v6:= 1L;
  #L0faf78.  v4:= v4 + v6 @kind long;
  #L0faf7a.  call `u`(v8, v4) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.u:(J)V` @kind virtual;
  #L0faf80.  v4:= 1I;
  #L0faf82.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0faf88.  v9:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0faf8c.  v0:= 0I;
  #L0faf8e.  if v9 == 0 then goto L0faf9a;
  #L0faf92.  v9:= v1 @kind object;
  #L0faf94.  v9:= (`kotlinx.coroutines.channels.Closed`) v9 @kind object;
  #L0faf98.  goto L0faf9c;
  #L0faf9a.  v9:= v0 @kind object;
  #L0faf9c.  if v9 != 0 then goto L0fafa2;
  #L0fafa0.  goto L0fafac;
  #L0fafa2.  v9:= v9.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0fafa6.  call temp:= `close`(v8, v9) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.close:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0fafac.  call temp:= `q`(v8) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.q:()Z` @kind virtual;
  #L0fafb2.  v9:= temp;
  #L0fafb4.  if v9 == 0 then goto L0fafba;
  #L0fafb8.  goto L0fafbc;
  #L0fafba.  v3:= v4;
  #L0fafbc.  if v3 == 0 then goto L0fafcc;
  #L0fafc0.  v9:= v8.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.c` @type ^`kotlinx.coroutines.channels.ArrayBroadcastChannel` @kind object;
  #L0fafc4.  v2:= 3I;
  #L0fafc6.  call `v`(v9, v0, v0, v2, v0) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.v:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;ILjava/lang/Object;)V` @kind static;
  #L0fafcc.  return v1 @kind object;
  #L0fafce.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0fafd0.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fafd6.  throw v9;
  catch `java.lang.Throwable` @[L0faf36..L0faf80] goto L0fafce;
}
procedure `boolean` `q`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v8 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.q:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0fabd0.  v0:= 0I;
  #L0fabd2.  call temp:= `s`(v8) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.s:()Z` @kind direct;
  #L0fabd8.  v1:= temp;
  #L0fabda.  v2:= 0I;
  #L0fabdc.  if v1 == 0 then goto L0fac84;
  #L0fabe0.  v1:= v8.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0fabe4.  call temp:= `tryLock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.tryLock:()Z` @kind virtual;
  #L0fabea.  v1:= temp;
  #L0fabec.  if v1 != 0 then goto L0fabf2;
  #L0fabf0.  goto L0fac84;
  #L0fabf2.  call temp:= `t`(v8) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.t:()Ljava/lang/Object;` @kind direct;
  #L0fabf8.  v1:= temp @kind object;
  #L0fabfa.  v3:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fabfe.  if v1 != v3 then goto L0fac0e;
  #L0fac02.  v1:= v8.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0fac06.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L0fac0c.  goto L0fabd2;
  #L0fac0e.  v3:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fac12.  if v3 == 0 then goto L0fac28;
  #L0fac16.  v2:= v1 @kind object;
  #L0fac18.  v2:= (`kotlinx.coroutines.channels.Closed`) v2 @kind object;
  #L0fac1c.  v1:= v8.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0fac20.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L0fac26.  goto L0fac84;
  #L0fac28.  call temp:= `takeFirstReceiveOrPeekClosed`(v8) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.takeFirstReceiveOrPeekClosed:()Lkotlinx/coroutines/channels/ReceiveOrClosed;` @kind virtual;
  #L0fac2e.  v3:= temp @kind object;
  #L0fac30.  if v3 != 0 then goto L0fac36;
  #L0fac34.  goto L0fac1c;
  #L0fac36.  v4:= instanceof @variable v3 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fac3a.  if v4 == 0 then goto L0fac40;
  #L0fac3e.  goto L0fac1c;
  #L0fac40.  call temp:= `tryResumeReceive`(v3, v1, v2) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.tryResumeReceive:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @kind interface;
  #L0fac46.  v2:= temp @kind object;
  #L0fac48.  if v2 != 0 then goto L0fac4e;
  #L0fac4c.  goto L0fac02;
  #L0fac4e.  call temp:= `r`(v8) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.r:()J` @kind virtual;
  #L0fac54.  v4:= temp @kind wide;
  #L0fac56.  v6:= 1L;
  #L0fac5a.  v4:= v4 + v6 @kind long;
  #L0fac5c.  call `u`(v8, v4) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.u:(J)V` @kind virtual;
  #L0fac62.  v0:= 1I;
  #L0fac64.  v2:= v8.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0fac68.  call `unlock`(v2) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L0fac6e.  call `completeResumeReceive`(v3, v1) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.completeResumeReceive:(Ljava/lang/Object;)V` @kind interface;
  #L0fac74.  goto L0fabd2;
  #L0fac76.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0fac78.  v1:= v8.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0fac7c.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L0fac82.  throw v0;
  #L0fac84.  if v2 != 0 then goto L0fac8a;
  #L0fac88.  goto L0fac94;
  #L0fac8a.  v1:= v2.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0fac8e.  call temp:= `close`(v8, v1) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.close:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0fac94.  return v0;
  catch `java.lang.Throwable` @[L0fabf2..L0fabfe] goto L0fac76;
  catch `java.lang.Throwable` @[L0fac0e..L0fac1c] goto L0fac76;
  catch `java.lang.Throwable` @[L0fac28..L0fac62] goto L0fac76;
}
procedure `long` `r`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.r:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0faff4.  v0:= v2.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a._subHead` @type ^`long` @kind wide;
  #L0faff8.  return v0 @kind wide;
}
procedure `void` `u`(`kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v0 @kind this, `long` v1 ) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.u:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0fb040.  v0.`kotlinx.coroutines.channels.ArrayBroadcastChannel$a._subHead` @type ^`long` := v1 @kind wide;
  #L0fb044.  return @kind void;
}
