record `kotlinx.coroutines.channels.ChannelIterator$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `next`(`kotlinx.coroutines.channels.ChannelIterator` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelIterator$DefaultImpls;.next:(Lkotlinx/coroutines/channels/ChannelIterator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0fcd24.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.channels.ChannelIterator$DefaultImpls$a` @kind boolean;
  #L0fcd28.  if v0 == 0 then goto L0fcd4a;
  #L0fcd2c.  v0:= v5 @kind object;
  #L0fcd2e.  v0:= (`kotlinx.coroutines.channels.ChannelIterator$DefaultImpls$a`) v0 @kind object;
  #L0fcd32.  v1:= v0.`kotlinx.coroutines.channels.ChannelIterator$DefaultImpls$a.c` @type ^`int`;
  #L0fcd36.  v2:= -2147483648I;
  #L0fcd3a.  v3:= v1 ^& v2 @kind int;
  #L0fcd3e.  if v3 == 0 then goto L0fcd4a;
  #L0fcd42.  v1:= v1 - v2 @kind int;
  #L0fcd44.  v0.`kotlinx.coroutines.channels.ChannelIterator$DefaultImpls$a.c` @type ^`int` := v1;
  #L0fcd48.  goto L0fcd54;
  #L0fcd4a.  v0:= new `kotlinx.coroutines.channels.ChannelIterator$DefaultImpls$a`;
  #L0fcd4e.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/channels/ChannelIterator$DefaultImpls$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0fcd54.  v5:= v0.`kotlinx.coroutines.channels.ChannelIterator$DefaultImpls$a.b` @type ^`java.lang.Object` @kind object;
  #L0fcd58.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0fcd5e.  v1:= temp @kind object;
  #L0fcd60.  v2:= v0.`kotlinx.coroutines.channels.ChannelIterator$DefaultImpls$a.c` @type ^`int`;
  #L0fcd64.  v3:= 1I;
  #L0fcd66.  if v2 == 0 then goto L0fcd8e;
  #L0fcd6a.  if v2 != v3 then goto L0fcd7e;
  #L0fcd6e.  v4:= v0.`kotlinx.coroutines.channels.ChannelIterator$DefaultImpls$a.a` @type ^`java.lang.Object` @kind object;
  #L0fcd72.  v4:= (`kotlinx.coroutines.channels.ChannelIterator`) v4 @kind object;
  #L0fcd76.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0fcd7c.  goto L0fcdaa;
  #L0fcd7e.  v4:= new `java.lang.IllegalStateException`;
  #L0fcd82.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0fcd86.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fcd8c.  throw v4;
  #L0fcd8e.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0fcd94.  v0.`kotlinx.coroutines.channels.ChannelIterator$DefaultImpls$a.a` @type ^`java.lang.Object` := v4 @kind object;
  #L0fcd98.  v0.`kotlinx.coroutines.channels.ChannelIterator$DefaultImpls$a.c` @type ^`int` := v3;
  #L0fcd9c.  call temp:= `hasNext`(v4, v0) @signature `Lkotlinx/coroutines/channels/ChannelIterator;.hasNext:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L0fcda2.  v5:= temp @kind object;
  #L0fcda4.  if v5 != v1 then goto L0fcdaa;
  #L0fcda8.  return v1 @kind object;
  #L0fcdaa.  v5:= (`java.lang.Boolean`) v5 @kind object;
  #L0fcdae.  call temp:= `booleanValue`(v5) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L0fcdb4.  v5:= temp;
  #L0fcdb6.  if v5 == 0 then goto L0fcdc4;
  #L0fcdba.  call temp:= `next`(v4) @signature `Lkotlinx/coroutines/channels/ChannelIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0fcdc0.  v4:= temp @kind object;
  #L0fcdc2.  return v4 @kind object;
  #L0fcdc4.  v4:= new `kotlinx.coroutines.channels.ClosedReceiveChannelException`;
  #L0fcdc8.  v5:= "Channel was closed" @kind object;
  #L0fcdcc.  call `<init>`(v4, v5) @signature `Lkotlinx/coroutines/channels/ClosedReceiveChannelException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fcdd2.  throw v4;
}
