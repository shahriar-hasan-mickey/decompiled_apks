record `kotlinx.coroutines.channels.ChannelCoroutine` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.AbstractCoroutine` @kind class, `kotlinx.coroutines.channels.Channel` @kind interface {
  `kotlinx.coroutines.channels.Channel` `kotlinx.coroutines.channels.ChannelCoroutine.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.ChannelCoroutine` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlinx.coroutines.channels.Channel` v2 @kind object, `boolean` v3 , `boolean` v4 ) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/channels/Channel;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0fcc50.  call `<init>`(v0, v1, v3, v4) @signature `Lkotlinx/coroutines/AbstractCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;ZZ)V` @kind direct;
  #L0fcc56.  v0.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` := v2 @kind object;
  #L0fcc5a.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.ChannelCoroutine` v3 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancel:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L0fcc6c.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L0fcc70.  call temp:= `access$cancellationExceptionMessage`(v3) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0fcc76.  v1:= temp @kind object;
  #L0fcc78.  v2:= 0I;
  #L0fcc7a.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0fcc80.  call `cancelInternal`(v3, v0) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0fcc86.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.ChannelCoroutine` v2 @kind this, `java.util.concurrent.CancellationException` v3 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0fcc98.  call temp:= `isCancelled`(v2) @signature `Lkotlinx/coroutines/JobSupport;.isCancelled:()Z` @kind virtual;
  #L0fcc9e.  v0:= temp;
  #L0fcca0.  if v0 == 0 then goto L0fcca6;
  #L0fcca4.  return @kind void;
  #L0fcca6.  if v3 != 0 then goto L0fccc0;
  #L0fccaa.  v3:= 0I;
  #L0fccac.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L0fccb0.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0fccb6.  v1:= temp @kind object;
  #L0fccb8.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0fccbe.  v3:= v0 @kind object;
  #L0fccc0.  call `cancelInternal`(v2, v3) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0fccc6.  return @kind void;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.channels.ChannelCoroutine` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0fc9d0.  v3:= new `kotlinx.coroutines.JobCancellationException`;
  #L0fc9d4.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0fc9da.  v0:= temp @kind object;
  #L0fc9dc.  v1:= 0I;
  #L0fc9de.  call `<init>`(v3, v0, v1, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0fc9e4.  call `cancelInternal`(v2, v3) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0fc9ea.  v3:= 1I;
  #L0fc9ec.  return v3;
}
procedure `void` `cancelInternal`(`kotlinx.coroutines.channels.ChannelCoroutine` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancelInternal:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0fccd8.  v0:= 0I;
  #L0fccda.  v1:= 1I;
  #L0fccdc.  call temp:= `toCancellationException$default`(v2, v3, v0, v1, v0) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L0fcce2.  v3:= temp @kind object;
  #L0fcce4.  v0:= v2.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcce8.  call `cancel`(v0, v3) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L0fccee.  call temp:= `cancelCoroutine`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.cancelCoroutine:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0fccf4.  return @kind void;
}
procedure `boolean` `close`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.close:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fca00.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fca04.  call temp:= `close`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.close:(Ljava/lang/Throwable;)Z` @kind interface;
  #L0fca0a.  v2:= temp;
  #L0fca0c.  return v2;
}
procedure `kotlinx.coroutines.channels.Channel` `getChannel`(`kotlinx.coroutines.channels.ChannelCoroutine` v0 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getChannel:()Lkotlinx/coroutines/channels/Channel;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0fcb84.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceive`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getOnReceive:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcbd0.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcbd4.  call temp:= `getOnReceive`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.getOnReceive:()Lkotlinx/coroutines/selects/SelectClause1;` @kind interface;
  #L0fcbda.  v0:= temp @kind object;
  #L0fcbdc.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveCatching`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getOnReceiveCatching:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcbf0.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcbf4.  call temp:= `getOnReceiveCatching`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.getOnReceiveCatching:()Lkotlinx/coroutines/selects/SelectClause1;` @kind interface;
  #L0fcbfa.  v0:= temp @kind object;
  #L0fcbfc.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveOrNull`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getOnReceiveOrNull:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcc10.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcc14.  call temp:= `getOnReceiveOrNull`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.getOnReceiveOrNull:()Lkotlinx/coroutines/selects/SelectClause1;` @kind interface;
  #L0fcc1a.  v0:= temp @kind object;
  #L0fcc1c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause2` `getOnSend`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getOnSend:()Lkotlinx/coroutines/selects/SelectClause2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcc30.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcc34.  call temp:= `getOnSend`(v0) @signature `Lkotlinx/coroutines/channels/SendChannel;.getOnSend:()Lkotlinx/coroutines/selects/SelectClause2;` @kind interface;
  #L0fcc3a.  v0:= temp @kind object;
  #L0fcc3c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.channels.Channel` `get_channel`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.get_channel:()Lkotlinx/coroutines/channels/Channel;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L0fcb98.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcb9c.  return v0 @kind object;
}
procedure `void` `invokeOnClose`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.invokeOnClose:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcd08.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcd0c.  call `invokeOnClose`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.invokeOnClose:(Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L0fcd12.  return @kind void;
}
procedure `boolean` `isClosedForReceive`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.isClosedForReceive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fca20.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fca24.  call temp:= `isClosedForReceive`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.isClosedForReceive:()Z` @kind interface;
  #L0fca2a.  v0:= temp;
  #L0fca2c.  return v0;
}
procedure `boolean` `isClosedForSend`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.isClosedForSend:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fca40.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fca44.  call temp:= `isClosedForSend`(v0) @signature `Lkotlinx/coroutines/channels/SendChannel;.isClosedForSend:()Z` @kind interface;
  #L0fca4a.  v0:= temp;
  #L0fca4c.  return v0;
}
procedure `boolean` `isEmpty`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fca60.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fca64.  call temp:= `isEmpty`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.isEmpty:()Z` @kind interface;
  #L0fca6a.  v0:= temp;
  #L0fca6c.  return v0;
}
procedure `kotlinx.coroutines.channels.ChannelIterator` `iterator`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.iterator:()Lkotlinx/coroutines/channels/ChannelIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcbb0.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcbb4.  call temp:= `iterator`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.iterator:()Lkotlinx/coroutines/channels/ChannelIterator;` @kind interface;
  #L0fcbba.  v0:= temp @kind object;
  #L0fcbbc.  return v0 @kind object;
}
procedure `boolean` `offer`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fca80.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fca84.  call temp:= `offer`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L0fca8a.  v2:= temp;
  #L0fca8c.  return v2;
}
procedure `java.lang.Object` `poll`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcaa0.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcaa4.  call temp:= `poll`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.poll:()Ljava/lang/Object;` @kind interface;
  #L0fcaaa.  v0:= temp @kind object;
  #L0fcaac.  return v0 @kind object;
}
procedure `java.lang.Object` `receive`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.receive:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcac0.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcac4.  call temp:= `receive`(v0, v2) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.receive:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L0fcaca.  v2:= temp @kind object;
  #L0fcacc.  return v2 @kind object;
}
procedure `java.lang.Object` `receiveCatching-JP2dKIU`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.receiveCatching-JP2dKIU:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcae0.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcae4.  call temp:= `receiveCatching-JP2dKIU`(v0, v2) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.receiveCatching-JP2dKIU:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L0fcaea.  v2:= temp @kind object;
  #L0fcaec.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0fcaf2.  return v2 @kind object;
}
procedure `java.lang.Object` `receiveOrNull`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.receiveOrNull:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcb04.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcb08.  call temp:= `receiveOrNull`(v0, v2) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.receiveOrNull:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L0fcb0e.  v2:= temp @kind object;
  #L0fcb10.  return v2 @kind object;
}
procedure `java.lang.Object` `send`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcb24.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcb28.  call temp:= `send`(v0, v2, v3) @signature `Lkotlinx/coroutines/channels/SendChannel;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L0fcb2e.  v2:= temp @kind object;
  #L0fcb30.  return v2 @kind object;
}
procedure `java.lang.Object` `tryReceive-PtdJZtk`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.tryReceive-PtdJZtk:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcb44.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcb48.  call temp:= `tryReceive-PtdJZtk`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.tryReceive-PtdJZtk:()Ljava/lang/Object;` @kind interface;
  #L0fcb4e.  v0:= temp @kind object;
  #L0fcb50.  return v0 @kind object;
}
procedure `java.lang.Object` `trySend-JP2dKIU`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.trySend-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fcb64.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L0fcb68.  call temp:= `trySend-JP2dKIU`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.trySend-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0fcb6e.  v2:= temp @kind object;
  #L0fcb70.  return v2 @kind object;
}
