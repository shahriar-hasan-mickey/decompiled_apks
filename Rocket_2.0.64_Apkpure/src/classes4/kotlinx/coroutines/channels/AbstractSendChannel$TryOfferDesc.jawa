record `kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc` @kind class {
  `java.lang.Object` `kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc.element` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListHead` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$TryOfferDesc;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListHead;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f9cc4.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$RemoveFirstDesc;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind direct;
  #L0f9cca.  v0.`kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc.element` @type ^`java.lang.Object` := v1 @kind object;
  #L0f9cce.  return @kind void;
}
procedure `java.lang.Object` `failure`(`kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$TryOfferDesc;.failure:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0f9c5c.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f9c60.  if v0 == 0 then goto L0f9c66;
  #L0f9c64.  goto L0f9c76;
  #L0f9c66.  v2:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.ReceiveOrClosed` @kind boolean;
  #L0f9c6a.  if v2 != 0 then goto L0f9c74;
  #L0f9c6e.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f9c72.  goto L0f9c76;
  #L0f9c74.  v2:= 0I;
  #L0f9c76.  return v2 @kind object;
}
procedure `java.lang.Object` `onPrepare`(`kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc` v2 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$TryOfferDesc;.onPrepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f9c88.  v0:= v3.`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp.affected` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L0f9c8c.  v0:= (`kotlinx.coroutines.channels.ReceiveOrClosed`) v0 @kind object;
  #L0f9c90.  v1:= v2.`kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc.element` @type ^`java.lang.Object` @kind object;
  #L0f9c94.  call temp:= `tryResumeReceive`(v0, v1, v3) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.tryResumeReceive:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @kind interface;
  #L0f9c9a.  v3:= temp @kind object;
  #L0f9c9c.  if v3 != 0 then goto L0f9ca6;
  #L0f9ca0.  v3:= `@@kotlinx.coroutines.internal.LockFreeLinkedList_commonKt.REMOVE_PREPARED` @type ^`java.lang.Object` @kind object;
  #L0f9ca4.  return v3 @kind object;
  #L0f9ca6.  v0:= `@@kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC` @type ^`java.lang.Object` @kind object;
  #L0f9caa.  if v3 != v0 then goto L0f9cb0;
  #L0f9cae.  return v0 @kind object;
  #L0f9cb0.  v3:= 0I;
  #L0f9cb2.  return v3 @kind object;
}
