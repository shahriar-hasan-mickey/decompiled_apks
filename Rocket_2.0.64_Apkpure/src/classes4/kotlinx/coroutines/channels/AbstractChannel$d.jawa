record `kotlinx.coroutines.channels.AbstractChannel$d` @kind class @AccessFlag  extends `kotlinx.coroutines.channels.Receive` @kind class {
  `kotlinx.coroutines.channels.AbstractChannel$a` `kotlinx.coroutines.channels.AbstractChannel$d.d` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.CancellableContinuation` `kotlinx.coroutines.channels.AbstractChannel$d.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractChannel$d` v0 @kind this, `kotlinx.coroutines.channels.AbstractChannel$a` v1 @kind object, `kotlinx.coroutines.CancellableContinuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel$a;Lkotlinx/coroutines/CancellableContinuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f8aa4.  call `<init>`(v0) @signature `Lkotlinx/coroutines/channels/Receive;.<init>:()V` @kind direct;
  #L0f8aaa.  v0.`kotlinx.coroutines.channels.AbstractChannel$d.d` @type ^`kotlinx.coroutines.channels.AbstractChannel$a` := v1 @kind object;
  #L0f8aae.  v0.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` := v2 @kind object;
  #L0f8ab2.  return @kind void;
}
procedure `void` `completeResumeReceive`(`kotlinx.coroutines.channels.AbstractChannel$d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.completeResumeReceive:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f8ac4.  v0:= v1.`kotlinx.coroutines.channels.AbstractChannel$d.d` @type ^`kotlinx.coroutines.channels.AbstractChannel$a` @kind object;
  #L0f8ac8.  call `d`(v0, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L0f8ace.  v2:= v1.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L0f8ad2.  v0:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f8ad6.  call `completeResume`(v2, v0) @signature `Lkotlinx/coroutines/CancellableContinuation;.completeResume:(Ljava/lang/Object;)V` @kind interface;
  #L0f8adc.  return @kind void;
}
procedure `kotlin.jvm.functions.Function1` `resumeOnCancellationFun`(`kotlinx.coroutines.channels.AbstractChannel$d` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.resumeOnCancellationFun:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f8a18.  v0:= v2.`kotlinx.coroutines.channels.AbstractChannel$d.d` @type ^`kotlinx.coroutines.channels.AbstractChannel$a` @kind object;
  #L0f8a1c.  v0:= v0.`kotlinx.coroutines.channels.AbstractChannel$a.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L0f8a20.  v0:= v0.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0f8a24.  if v0 != 0 then goto L0f8a2c;
  #L0f8a28.  v3:= 0I;
  #L0f8a2a.  goto L0f8a40;
  #L0f8a2c.  v1:= v2.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L0f8a30.  call temp:= `getContext`(v1) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f8a36.  v1:= temp @kind object;
  #L0f8a38.  call temp:= `bindCancellationFun`(v0, v3, v1) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.bindCancellationFun:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/CoroutineContext;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L0f8a3e.  v3:= temp @kind object;
  #L0f8a40.  return v3 @kind object;
}
procedure `void` `resumeReceiveClosed`(`kotlinx.coroutines.channels.AbstractChannel$d` v4 @kind this, `kotlinx.coroutines.channels.Closed` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.resumeReceiveClosed:(Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f8af0.  v0:= v5.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0f8af4.  if v0 != 0 then goto L0f8b0e;
  #L0f8af8.  v0:= v4.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L0f8afc.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L0f8b00.  v2:= 2I;
  #L0f8b02.  v3:= 0I;
  #L0f8b04.  call temp:= `tryResume$default`(v0, v1, v3, v2, v3) @signature `Lkotlinx/coroutines/CancellableContinuation$DefaultImpls;.tryResume$default:(Lkotlinx/coroutines/CancellableContinuation;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f8b0a.  v0:= temp @kind object;
  #L0f8b0c.  goto L0f8b22;
  #L0f8b0e.  v0:= v4.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L0f8b12.  call temp:= `getReceiveException`(v5) @signature `Lkotlinx/coroutines/channels/Closed;.getReceiveException:()Ljava/lang/Throwable;` @kind virtual;
  #L0f8b18.  v1:= temp @kind object;
  #L0f8b1a.  call temp:= `tryResumeWithException`(v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuation;.tryResumeWithException:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind interface;
  #L0f8b20.  v0:= temp @kind object;
  #L0f8b22.  if v0 == 0 then goto L0f8b3a;
  #L0f8b26.  v1:= v4.`kotlinx.coroutines.channels.AbstractChannel$d.d` @type ^`kotlinx.coroutines.channels.AbstractChannel$a` @kind object;
  #L0f8b2a.  call `d`(v1, v5) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L0f8b30.  v5:= v4.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L0f8b34.  call `completeResume`(v5, v0) @signature `Lkotlinx/coroutines/CancellableContinuation;.completeResume:(Ljava/lang/Object;)V` @kind interface;
  #L0f8b3a.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.AbstractChannel$d` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f89f0.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f89f6.  v0:= temp @kind object;
  #L0f89f8.  v1:= "ReceiveHasNext@" @kind object;
  #L0f89fc.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f8a02.  v0:= temp @kind object;
  #L0f8a04.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `tryResumeReceive`(`kotlinx.coroutines.channels.AbstractChannel$d` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v6 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.tryResumeReceive:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f8a54.  v0:= v4.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L0f8a58.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L0f8a5c.  v2:= 0I;
  #L0f8a5e.  if v6 != 0 then goto L0f8a66;
  #L0f8a62.  v3:= v2 @kind object;
  #L0f8a64.  goto L0f8a6a;
  #L0f8a66.  v3:= v6.`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp.desc` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc` @kind object;
  #L0f8a6a.  call temp:= `resumeOnCancellationFun`(v4, v5) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.resumeOnCancellationFun:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @kind virtual;
  #L0f8a70.  v5:= temp @kind object;
  #L0f8a72.  call temp:= `tryResume`(v0, v1, v3, v5) @signature `Lkotlinx/coroutines/CancellableContinuation;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind interface;
  #L0f8a78.  v5:= temp @kind object;
  #L0f8a7a.  if v5 != 0 then goto L0f8a80;
  #L0f8a7e.  return v2 @kind object;
  #L0f8a80.  if v6 != 0 then goto L0f8a86;
  #L0f8a84.  goto L0f8a8c;
  #L0f8a86.  call `finishPrepare`(v6) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.finishPrepare:()V` @kind virtual;
  #L0f8a8c.  v5:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f8a90.  return v5 @kind object;
}
