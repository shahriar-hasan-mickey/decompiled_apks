record `kotlinx.coroutines.channels.b` @kind class @AccessFlag  extends `kotlinx.coroutines.AbstractCoroutine` @kind class, `kotlinx.coroutines.channels.ProducerScope` @kind interface, `kotlinx.coroutines.channels.BroadcastChannel` @kind interface {
  `kotlinx.coroutines.channels.BroadcastChannel` `kotlinx.coroutines.channels.b.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.b` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object, `kotlinx.coroutines.channels.BroadcastChannel` v3 @kind object, `boolean` v4 ) @signature `Lkotlinx/coroutines/channels/b;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/channels/BroadcastChannel;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0fc378.  v0:= 0I;
  #L0fc37a.  call `<init>`(v1, v2, v0, v4) @signature `Lkotlinx/coroutines/AbstractCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;ZZ)V` @kind direct;
  #L0fc380.  v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` := v3 @kind object;
  #L0fc384.  v3:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0fc388.  call temp:= `get`(v2, v3) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0fc38e.  v2:= temp @kind object;
  #L0fc390.  v2:= (`kotlinx.coroutines.Job`) v2 @kind object;
  #L0fc394.  call `initParentJob`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.initParentJob:(Lkotlinx/coroutines/Job;)V` @kind virtual;
  #L0fc39a.  return @kind void;
}
procedure `kotlinx.coroutines.channels.BroadcastChannel` `D`(`kotlinx.coroutines.channels.b` v1 @kind this) @signature `Lkotlinx/coroutines/channels/b;.D:()Lkotlinx/coroutines/channels/BroadcastChannel;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L0fc30c.  v0:= v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc310.  return v0 @kind object;
}
procedure `void` `E`(`kotlinx.coroutines.channels.b` v2 @kind this, `kotlin.Unit` v3 @kind object) @signature `Lkotlinx/coroutines/channels/b;.E:(Lkotlin/Unit;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L0fc47c.  v3:= v2.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc480.  v0:= 0I;
  #L0fc482.  v1:= 1I;
  #L0fc484.  call temp:= `close$default`(v3, v0, v1, v0) @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.close$default:(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @kind static;
  #L0fc48a.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.b` v2 @kind this, `java.util.concurrent.CancellationException` v3 @kind object) @signature `Lkotlinx/coroutines/channels/b;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0fc3ac.  if v3 != 0 then goto L0fc3c6;
  #L0fc3b0.  v3:= 0I;
  #L0fc3b2.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L0fc3b6.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0fc3bc.  v1:= temp @kind object;
  #L0fc3be.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0fc3c4.  v3:= v0 @kind object;
  #L0fc3c6.  call `cancelInternal`(v2, v3) @signature `Lkotlinx/coroutines/channels/b;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0fc3cc.  return @kind void;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.channels.b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/channels/b;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0fc218.  if v3 != 0 then goto L0fc232;
  #L0fc21c.  v3:= 0I;
  #L0fc21e.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L0fc222.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L0fc228.  v1:= temp @kind object;
  #L0fc22a.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0fc230.  v3:= v0 @kind object;
  #L0fc232.  call `cancelInternal`(v2, v3) @signature `Lkotlinx/coroutines/channels/b;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0fc238.  v3:= 1I;
  #L0fc23a.  return v3;
}
procedure `void` `cancelInternal`(`kotlinx.coroutines.channels.b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/channels/b;.cancelInternal:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0fc3e0.  v0:= 0I;
  #L0fc3e2.  v1:= 1I;
  #L0fc3e4.  call temp:= `toCancellationException$default`(v2, v3, v0, v1, v0) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L0fc3ea.  v3:= temp @kind object;
  #L0fc3ec.  v0:= v2.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc3f0.  call `cancel`(v0, v3) @signature `Lkotlinx/coroutines/channels/BroadcastChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L0fc3f6.  call temp:= `cancelCoroutine`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.cancelCoroutine:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0fc3fc.  return @kind void;
}
procedure `boolean` `close`(`kotlinx.coroutines.channels.b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/channels/b;.close:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fc24c.  v0:= v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc250.  call temp:= `close`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.close:(Ljava/lang/Throwable;)Z` @kind interface;
  #L0fc256.  v2:= temp;
  #L0fc258.  call temp:= `start`(v1) @signature `Lkotlinx/coroutines/JobSupport;.start:()Z` @kind virtual;
  #L0fc25e.  return v2;
}
procedure `kotlinx.coroutines.channels.SendChannel` `getChannel`(`kotlinx.coroutines.channels.b` v0 @kind this) @signature `Lkotlinx/coroutines/channels/b;.getChannel:()Lkotlinx/coroutines/channels/SendChannel;` @AccessFlag PUBLIC {
    temp;

  #L0fc344.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause2` `getOnSend`(`kotlinx.coroutines.channels.b` v1 @kind this) @signature `Lkotlinx/coroutines/channels/b;.getOnSend:()Lkotlinx/coroutines/selects/SelectClause2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fc358.  v0:= v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc35c.  call temp:= `getOnSend`(v0) @signature `Lkotlinx/coroutines/channels/SendChannel;.getOnSend:()Lkotlinx/coroutines/selects/SelectClause2;` @kind interface;
  #L0fc362.  v0:= temp @kind object;
  #L0fc364.  return v0 @kind object;
}
procedure `void` `invokeOnClose`(`kotlinx.coroutines.channels.b` v1 @kind this, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/channels/b;.invokeOnClose:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fc410.  v0:= v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc414.  call `invokeOnClose`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.invokeOnClose:(Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L0fc41a.  return @kind void;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.channels.b` v1 @kind this) @signature `Lkotlinx/coroutines/channels/b;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fc270.  call temp:= `isActive`(v1) @signature `Lkotlinx/coroutines/AbstractCoroutine;.isActive:()Z` @kind super;
  #L0fc276.  v0:= temp;
  #L0fc278.  return v0;
}
procedure `boolean` `isClosedForSend`(`kotlinx.coroutines.channels.b` v1 @kind this) @signature `Lkotlinx/coroutines/channels/b;.isClosedForSend:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fc28c.  v0:= v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc290.  call temp:= `isClosedForSend`(v0) @signature `Lkotlinx/coroutines/channels/SendChannel;.isClosedForSend:()Z` @kind interface;
  #L0fc296.  v0:= temp;
  #L0fc298.  return v0;
}
procedure `boolean` `offer`(`kotlinx.coroutines.channels.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/b;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fc2ac.  v0:= v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc2b0.  call temp:= `offer`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L0fc2b6.  v2:= temp;
  #L0fc2b8.  return v2;
}
procedure `void` `onCancelled`(`kotlinx.coroutines.channels.b` v1 @kind this, `java.lang.Throwable` v2 @kind object, `boolean` v3 ) @signature `Lkotlinx/coroutines/channels/b;.onCancelled:(Ljava/lang/Throwable;Z)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0fc42c.  v0:= v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc430.  call temp:= `close`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.close:(Ljava/lang/Throwable;)Z` @kind interface;
  #L0fc436.  v0:= temp;
  #L0fc438.  if v0 != 0 then goto L0fc44e;
  #L0fc43c.  if v3 != 0 then goto L0fc44e;
  #L0fc440.  call temp:= `getContext`(v1) @signature `Lkotlinx/coroutines/AbstractCoroutine;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L0fc446.  v3:= temp @kind object;
  #L0fc448.  call `handleCoroutineException`(v3, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L0fc44e.  return @kind void;
}
procedure `void` `onCompleted`(`kotlinx.coroutines.channels.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/b;.onCompleted:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0fc460.  v1:= (`kotlin.Unit`) v1 @kind object;
  #L0fc464.  call `E`(v0, v1) @signature `Lkotlinx/coroutines/channels/b;.E:(Lkotlin/Unit;)V` @kind virtual;
  #L0fc46a.  return @kind void;
}
procedure `kotlinx.coroutines.channels.ReceiveChannel` `openSubscription`(`kotlinx.coroutines.channels.b` v1 @kind this) @signature `Lkotlinx/coroutines/channels/b;.openSubscription:()Lkotlinx/coroutines/channels/ReceiveChannel;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fc324.  v0:= v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc328.  call temp:= `openSubscription`(v0) @signature `Lkotlinx/coroutines/channels/BroadcastChannel;.openSubscription:()Lkotlinx/coroutines/channels/ReceiveChannel;` @kind interface;
  #L0fc32e.  v0:= temp @kind object;
  #L0fc330.  return v0 @kind object;
}
procedure `java.lang.Object` `send`(`kotlinx.coroutines.channels.b` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/channels/b;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fc2cc.  v0:= v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc2d0.  call temp:= `send`(v0, v2, v3) @signature `Lkotlinx/coroutines/channels/SendChannel;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L0fc2d6.  v2:= temp @kind object;
  #L0fc2d8.  return v2 @kind object;
}
procedure `java.lang.Object` `trySend-JP2dKIU`(`kotlinx.coroutines.channels.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/b;.trySend-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0fc2ec.  v0:= v1.`kotlinx.coroutines.channels.b.c` @type ^`kotlinx.coroutines.channels.BroadcastChannel` @kind object;
  #L0fc2f0.  call temp:= `trySend-JP2dKIU`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.trySend-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0fc2f6.  v2:= temp @kind object;
  #L0fc2f8.  return v2 @kind object;
}
