record `kotlinx.coroutines.channels.a` @kind class @AccessFlag  extends `kotlinx.coroutines.channels.ChannelCoroutine` @kind class, `kotlinx.coroutines.channels.ActorScope` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.a` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object, `kotlinx.coroutines.channels.Channel` v3 @kind object, `boolean` v4 ) @signature `Lkotlinx/coroutines/channels/a;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/channels/Channel;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0faa28.  v0:= 0I;
  #L0faa2a.  call `<init>`(v1, v2, v3, v0, v4) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/channels/Channel;ZZ)V` @kind direct;
  #L0faa30.  v3:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0faa34.  call temp:= `get`(v2, v3) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0faa3a.  v2:= temp @kind object;
  #L0faa3c.  v2:= (`kotlinx.coroutines.Job`) v2 @kind object;
  #L0faa40.  call `initParentJob`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.initParentJob:(Lkotlinx/coroutines/Job;)V` @kind virtual;
  #L0faa46.  return @kind void;
}
procedure `boolean` `handleJobException`(`kotlinx.coroutines.channels.a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/channels/a;.handleJobException:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0faa04.  call temp:= `getContext`(v1) @signature `Lkotlinx/coroutines/AbstractCoroutine;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L0faa0a.  v0:= temp @kind object;
  #L0faa0c.  call `handleCoroutineException`(v0, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L0faa12.  v2:= 1I;
  #L0faa14.  return v2;
}
procedure `void` `onCancelling`(`kotlinx.coroutines.channels.a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/channels/a;.onCancelling:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L0faa58.  call temp:= `get_channel`(v3) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.get_channel:()Lkotlinx/coroutines/channels/Channel;` @kind virtual;
  #L0faa5e.  v0:= temp @kind object;
  #L0faa60.  v1:= 0I;
  #L0faa62.  if v4 != 0 then goto L0faa68;
  #L0faa66.  goto L0faa98;
  #L0faa68.  v2:= instanceof @variable v4 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L0faa6c.  if v2 == 0 then goto L0faa76;
  #L0faa70.  v1:= v4 @kind object;
  #L0faa72.  v1:= (`java.util.concurrent.CancellationException`) v1 @kind object;
  #L0faa76.  if v1 != 0 then goto L0faa98;
  #L0faa7a.  call temp:= `getClassSimpleName`(v3) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0faa80.  v1:= temp @kind object;
  #L0faa82.  v2:= " was cancelled" @kind object;
  #L0faa86.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0faa8c.  v1:= temp @kind object;
  #L0faa8e.  call temp:= `CancellationException`(v1, v4) @signature `Lkotlinx/coroutines/ExceptionsKt;.CancellationException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L0faa94.  v4:= temp @kind object;
  #L0faa96.  v1:= v4 @kind object;
  #L0faa98.  call `cancel`(v0, v1) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L0faa9e.  return @kind void;
}
