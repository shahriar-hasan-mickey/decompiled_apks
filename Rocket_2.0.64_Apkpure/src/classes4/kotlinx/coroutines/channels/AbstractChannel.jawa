record `kotlinx.coroutines.channels.AbstractChannel` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.channels.AbstractSendChannel` @kind class, `kotlinx.coroutines.channels.Channel` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f9670.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0f9676.  return @kind void;
}
procedure `boolean` `access$enqueueReceive`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind object, `kotlinx.coroutines.channels.Receive` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$enqueueReceive:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/channels/Receive;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f90cc.  call temp:= `k`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.k:(Lkotlinx/coroutines/channels/Receive;)Z` @kind direct;
  #L0f90d2.  v0:= temp;
  #L0f90d4.  return v0;
}
procedure `java.lang.Object` `access$receiveSuspend`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind object, `int` v1 , `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$receiveSuspend:(Lkotlinx/coroutines/channels/AbstractChannel;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f92b0.  call temp:= `m`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.m:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L0f92b6.  v0:= temp @kind object;
  #L0f92b8.  return v0 @kind object;
}
procedure `void` `access$registerSelectReceiveMode`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind object, `kotlinx.coroutines.selects.SelectInstance` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$registerSelectReceiveMode:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/selects/SelectInstance;ILkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f9688.  call `n`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.n:(Lkotlinx/coroutines/selects/SelectInstance;ILkotlin/jvm/functions/Function2;)V` @kind direct;
  #L0f968e.  return @kind void;
}
procedure `void` `access$removeReceiveOnCancel`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind object, `kotlinx.coroutines.CancellableContinuation` v1 @kind object, `kotlinx.coroutines.channels.Receive` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$removeReceiveOnCancel:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/channels/Receive;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f96a0.  call `o`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.o:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/channels/Receive;)V` @kind direct;
  #L0f96a6.  return @kind void;
}
procedure `boolean` `k`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this, `kotlinx.coroutines.channels.Receive` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.k:(Lkotlinx/coroutines/channels/Receive;)Z` @AccessFlag PRIVATE_FINAL {
    temp;

  #L0f9124.  call temp:= `enqueueReceiveInternal`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.enqueueReceiveInternal:(Lkotlinx/coroutines/channels/Receive;)Z` @kind virtual;
  #L0f912a.  v1:= temp;
  #L0f912c.  if v1 == 0 then goto L0f9136;
  #L0f9130.  call `onReceiveEnqueued`(v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveEnqueued:()V` @kind virtual;
  #L0f9136.  return v1;
}
procedure `boolean` `l`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this, `kotlinx.coroutines.selects.SelectInstance` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `int` v4 ) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.l:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;I)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f91d0.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$e`;
  #L0f91d4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel$e;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L0f91da.  call temp:= `k`(v1, v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.k:(Lkotlinx/coroutines/channels/Receive;)Z` @kind direct;
  #L0f91e0.  v3:= temp;
  #L0f91e2.  if v3 == 0 then goto L0f91ec;
  #L0f91e6.  call `disposeOnSelect`(v2, v0) @signature `Lkotlinx/coroutines/selects/SelectInstance;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @kind interface;
  #L0f91ec.  return v3;
}
procedure `java.lang.Object` `m`(`kotlinx.coroutines.channels.AbstractChannel` v3 @kind this, `int` v4 , `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.m:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f94a8.  call temp:= `intercepted`(v5) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L0f94ae.  v0:= temp @kind object;
  #L0f94b0.  call temp:= `getOrCreateCancellableContinuation`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.getOrCreateCancellableContinuation:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/CancellableContinuationImpl;` @kind static;
  #L0f94b6.  v0:= temp @kind object;
  #L0f94b8.  v1:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0f94bc.  if v1 != 0 then goto L0f94cc;
  #L0f94c0.  v1:= new `kotlinx.coroutines.channels.AbstractChannel$b`;
  #L0f94c4.  call `<init>`(v1, v0, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.<init>:(Lkotlinx/coroutines/CancellableContinuation;I)V` @kind direct;
  #L0f94ca.  goto L0f94da;
  #L0f94cc.  v1:= new `kotlinx.coroutines.channels.AbstractChannel$c`;
  #L0f94d0.  v2:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0f94d4.  call `<init>`(v1, v0, v4, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel$c;.<init>:(Lkotlinx/coroutines/CancellableContinuation;ILkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0f94da.  call temp:= `access$enqueueReceive`(v3, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$enqueueReceive:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/channels/Receive;)Z` @kind static;
  #L0f94e0.  v4:= temp;
  #L0f94e2.  if v4 == 0 then goto L0f94ee;
  #L0f94e6.  call `access$removeReceiveOnCancel`(v3, v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$removeReceiveOnCancel:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/channels/Receive;)V` @kind static;
  #L0f94ec.  goto L0f9528;
  #L0f94ee.  call temp:= `pollInternal`(v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @kind virtual;
  #L0f94f4.  v4:= temp @kind object;
  #L0f94f6.  v2:= instanceof @variable v4 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f94fa.  if v2 == 0 then goto L0f950a;
  #L0f94fe.  v4:= (`kotlinx.coroutines.channels.Closed`) v4 @kind object;
  #L0f9502.  call `resumeReceiveClosed`(v1, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.resumeReceiveClosed:(Lkotlinx/coroutines/channels/Closed;)V` @kind virtual;
  #L0f9508.  goto L0f9528;
  #L0f950a.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f950e.  if v4 == v2 then goto L0f94da;
  #L0f9512.  call temp:= `e`(v1, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0f9518.  v2:= temp @kind object;
  #L0f951a.  call temp:= `resumeOnCancellationFun`(v1, v4) @signature `Lkotlinx/coroutines/channels/Receive;.resumeOnCancellationFun:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @kind virtual;
  #L0f9520.  v4:= temp @kind object;
  #L0f9522.  call `resume`(v0, v2, v4) @signature `Lkotlinx/coroutines/CancellableContinuation;.resume:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L0f9528.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0f952e.  v4:= temp @kind object;
  #L0f9530.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f9536.  v0:= temp @kind object;
  #L0f9538.  if v4 != v0 then goto L0f9542;
  #L0f953c.  call `probeCoroutineSuspended`(v5) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f9542.  return v4 @kind object;
}
procedure `void` `n`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this, `kotlinx.coroutines.selects.SelectInstance` v3 @kind object, `int` v4 , `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.n:(Lkotlinx/coroutines/selects/SelectInstance;ILkotlin/jvm/functions/Function2;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f981c.  call temp:= `isSelected`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.isSelected:()Z` @kind interface;
  #L0f9822.  v0:= temp;
  #L0f9824.  if v0 == 0 then goto L0f982a;
  #L0f9828.  return @kind void;
  #L0f982a.  call temp:= `isEmptyImpl`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isEmptyImpl:()Z` @kind virtual;
  #L0f9830.  v0:= temp;
  #L0f9832.  if v0 == 0 then goto L0f9844;
  #L0f9836.  call temp:= `l`(v2, v3, v5, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.l:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;I)Z` @kind direct;
  #L0f983c.  v0:= temp;
  #L0f983e.  if v0 == 0 then goto L0f981c;
  #L0f9842.  return @kind void;
  #L0f9844.  call temp:= `pollSelectInternal`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollSelectInternal:(Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @kind virtual;
  #L0f984a.  v0:= temp @kind object;
  #L0f984c.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L0f9852.  v1:= temp @kind object;
  #L0f9854.  if v0 != v1 then goto L0f985a;
  #L0f9858.  return @kind void;
  #L0f985a.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f985e.  if v0 != v1 then goto L0f9864;
  #L0f9862.  goto L0f981c;
  #L0f9864.  v1:= `@@kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC` @type ^`java.lang.Object` @kind object;
  #L0f9868.  if v0 != v1 then goto L0f986e;
  #L0f986c.  goto L0f981c;
  #L0f986e.  call `p`(v2, v5, v3, v4, v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.p:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/selects/SelectInstance;ILjava/lang/Object;)V` @kind direct;
  #L0f9874.  goto L0f981c;
}
procedure `void` `o`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this, `kotlinx.coroutines.CancellableContinuation` v2 @kind object, `kotlinx.coroutines.channels.Receive` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.o:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/channels/Receive;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f9888.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$f`;
  #L0f988c.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/channels/Receive;)V` @kind direct;
  #L0f9892.  call `invokeOnCancellation`(v2, v0) @signature `Lkotlinx/coroutines/CancellableContinuation;.invokeOnCancellation:(Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L0f9898.  return @kind void;
}
procedure `void` `p`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this, `kotlin.jvm.functions.Function2` v3 @kind object, `kotlinx.coroutines.selects.SelectInstance` v4 @kind object, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.p:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/selects/SelectInstance;ILjava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f98ac.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f98b0.  v1:= 1I;
  #L0f98b2.  if v0 == 0 then goto L0f9910;
  #L0f98b6.  if v5 == 0 then goto L0f98fa;
  #L0f98ba.  if v5 == v1 then goto L0f98c0;
  #L0f98be.  goto L0f995c;
  #L0f98c0.  call temp:= `trySelect`(v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L0f98c6.  v5:= temp;
  #L0f98c8.  if v5 != 0 then goto L0f98ce;
  #L0f98cc.  return @kind void;
  #L0f98ce.  v5:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0f98d2.  v6:= (`kotlinx.coroutines.channels.Closed`) v6 @kind object;
  #L0f98d6.  v6:= v6.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0f98da.  call temp:= `closed-JP2dKIU`(v5, v6) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L0f98e0.  v5:= temp @kind object;
  #L0f98e2.  call temp:= `box-impl`(v5) @signature `Lkotlinx/coroutines/channels/ChannelResult;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ChannelResult;` @kind static;
  #L0f98e8.  v5:= temp @kind object;
  #L0f98ea.  call temp:= `getCompletion`(v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L0f98f0.  v4:= temp @kind object;
  #L0f98f2.  call `startCoroutineUnintercepted`(v3, v5, v4) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f98f8.  goto L0f995c;
  #L0f98fa.  v6:= (`kotlinx.coroutines.channels.Closed`) v6 @kind object;
  #L0f98fe.  call temp:= `getReceiveException`(v6) @signature `Lkotlinx/coroutines/channels/Closed;.getReceiveException:()Ljava/lang/Throwable;` @kind virtual;
  #L0f9904.  v3:= temp @kind object;
  #L0f9906.  call temp:= `recoverStackTrace`(v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.recoverStackTrace:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L0f990c.  v3:= temp @kind object;
  #L0f990e.  throw v3;
  #L0f9910.  if v5 != v1 then goto L0f994e;
  #L0f9914.  v5:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0f9918.  if v0 == 0 then goto L0f992e;
  #L0f991c.  v6:= (`kotlinx.coroutines.channels.Closed`) v6 @kind object;
  #L0f9920.  v6:= v6.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0f9924.  call temp:= `closed-JP2dKIU`(v5, v6) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L0f992a.  v5:= temp @kind object;
  #L0f992c.  goto L0f9936;
  #L0f992e.  call temp:= `success-JP2dKIU`(v5, v6) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.success-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0f9934.  v5:= temp @kind object;
  #L0f9936.  call temp:= `box-impl`(v5) @signature `Lkotlinx/coroutines/channels/ChannelResult;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ChannelResult;` @kind static;
  #L0f993c.  v5:= temp @kind object;
  #L0f993e.  call temp:= `getCompletion`(v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L0f9944.  v4:= temp @kind object;
  #L0f9946.  call `startCoroutineUnintercepted`(v3, v5, v4) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f994c.  goto L0f995c;
  #L0f994e.  call temp:= `getCompletion`(v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L0f9954.  v4:= temp @kind object;
  #L0f9956.  call `startCoroutineUnintercepted`(v3, v6, v4) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f995c.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancel:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0f96b8.  call `cancel`(v0) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.cancel:(Lkotlinx/coroutines/channels/Channel;)V` @kind static;
  #L0f96be.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this, `java.util.concurrent.CancellationException` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f96d0.  call temp:= `isClosedForReceive`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isClosedForReceive:()Z` @kind virtual;
  #L0f96d6.  v0:= temp;
  #L0f96d8.  if v0 == 0 then goto L0f96de;
  #L0f96dc.  return @kind void;
  #L0f96de.  if v3 != 0 then goto L0f9700;
  #L0f96e2.  v3:= new `java.util.concurrent.CancellationException`;
  #L0f96e6.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f96ec.  v0:= temp @kind object;
  #L0f96ee.  v1:= " was cancelled" @kind object;
  #L0f96f2.  call temp:= `stringPlus`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f96f8.  v0:= temp @kind object;
  #L0f96fa.  call `<init>`(v3, v0) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f9700.  call temp:= `cancelInternal$kotlinx_coroutines_core`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancelInternal$kotlinx_coroutines_core:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0f9706.  return @kind void;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L0f90e8.  call temp:= `cancelInternal$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancelInternal$kotlinx_coroutines_core:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0f90ee.  v1:= temp;
  #L0f90f0.  return v1;
}
procedure `boolean` `cancelInternal$kotlinx_coroutines_core`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancelInternal$kotlinx_coroutines_core:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f9104.  call temp:= `close`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.close:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0f910a.  v1:= temp;
  #L0f910c.  call `onCancelIdempotent`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onCancelIdempotent:(Z)V` @kind virtual;
  #L0f9112.  return v1;
}
procedure `kotlinx.coroutines.channels.AbstractChannel$TryPollDesc` `describeTryPoll`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.describeTryPoll:()Lkotlinx/coroutines/channels/AbstractChannel$TryPollDesc;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L0f95b0.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$TryPollDesc`;
  #L0f95b4.  call temp:= `getQueue`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @kind virtual;
  #L0f95ba.  v1:= temp @kind object;
  #L0f95bc.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel$TryPollDesc;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListHead;)V` @kind direct;
  #L0f95c2.  return v0 @kind object;
}
procedure `boolean` `enqueueReceiveInternal`(`kotlinx.coroutines.channels.AbstractChannel` v6 @kind this, `kotlinx.coroutines.channels.Receive` v7 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.enqueueReceiveInternal:(Lkotlinx/coroutines/channels/Receive;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0f9148.  call temp:= `isBufferAlwaysEmpty`(v6) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isBufferAlwaysEmpty:()Z` @kind virtual;
  #L0f914e.  v0:= temp;
  #L0f9150.  v1:= 0I;
  #L0f9152.  v2:= 1I;
  #L0f9154.  if v0 == 0 then goto L0f9182;
  #L0f9158.  call temp:= `getQueue`(v6) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @kind virtual;
  #L0f915e.  v0:= temp @kind object;
  #L0f9160.  call temp:= `getPrevNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f9166.  v3:= temp @kind object;
  #L0f9168.  v4:= instanceof @variable v3 @type ^`kotlinx.coroutines.channels.Send` @kind boolean;
  #L0f916c.  v4:= v4 ^~ v2 @kind int;
  #L0f916e.  if v4 != 0 then goto L0f9174;
  #L0f9172.  goto L0f91be;
  #L0f9174.  call temp:= `addNext`(v3, v7, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.addNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Z` @kind virtual;
  #L0f917a.  v3:= temp;
  #L0f917c.  if v3 == 0 then goto L0f9160;
  #L0f9180.  goto L0f91bc;
  #L0f9182.  call temp:= `getQueue`(v6) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @kind virtual;
  #L0f9188.  v0:= temp @kind object;
  #L0f918a.  v3:= new `kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1`;
  #L0f918e.  call `<init>`(v3, v7, v6) @signature `Lkotlinx/coroutines/channels/AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/channels/AbstractChannel;)V` @kind direct;
  #L0f9194.  call temp:= `getPrevNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f919a.  v4:= temp @kind object;
  #L0f919c.  v5:= instanceof @variable v4 @type ^`kotlinx.coroutines.channels.Send` @kind boolean;
  #L0f91a0.  v5:= v5 ^~ v2 @kind int;
  #L0f91a2.  if v5 != 0 then goto L0f91a8;
  #L0f91a6.  goto L0f91be;
  #L0f91a8.  call temp:= `tryCondAddNext`(v4, v7, v0, v3) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.tryCondAddNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$CondAddOp;)I` @kind virtual;
  #L0f91ae.  v4:= temp;
  #L0f91b0.  if v4 == v2 then goto L0f91bc;
  #L0f91b4.  v5:= 2I;
  #L0f91b6.  if v4 == v5 then goto L0f91be;
  #L0f91ba.  goto L0f9194;
  #L0f91bc.  v1:= 1I;
  #L0f91be.  return v1;
}
procedure `boolean` `getHasReceiveOrClosed`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.getHasReceiveOrClosed:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L0f9200.  call temp:= `getQueue`(v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @kind virtual;
  #L0f9206.  v0:= temp @kind object;
  #L0f9208.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f920e.  v0:= temp @kind object;
  #L0f9210.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ReceiveOrClosed` @kind boolean;
  #L0f9214.  return v0;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceive`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.getOnReceive:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f961c.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$onReceive$1`;
  #L0f9620.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel$onReceive$1;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;)V` @kind direct;
  #L0f9626.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveCatching`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.getOnReceiveCatching:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f9638.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1`;
  #L0f963c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel$onReceiveCatching$1;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;)V` @kind direct;
  #L0f9642.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveOrNull`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.getOnReceiveOrNull:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f9654.  call temp:= `getOnReceiveOrNull`(v1) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.getOnReceiveOrNull:(Lkotlinx/coroutines/channels/Channel;)Lkotlinx/coroutines/selects/SelectClause1;` @kind static;
  #L0f965a.  v0:= temp @kind object;
  #L0f965c.  return v0 @kind object;
}
procedure `boolean` `isBufferAlwaysEmpty`() @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isBufferAlwaysEmpty:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `isBufferEmpty`() @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isBufferEmpty:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `isClosedForReceive`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isClosedForReceive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f9228.  call temp:= `getClosedForReceive`(v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForReceive:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0f922e.  v0:= temp @kind object;
  #L0f9230.  if v0 == 0 then goto L0f9244;
  #L0f9234.  call temp:= `isBufferEmpty`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isBufferEmpty:()Z` @kind virtual;
  #L0f923a.  v0:= temp;
  #L0f923c.  if v0 == 0 then goto L0f9244;
  #L0f9240.  v0:= 1I;
  #L0f9242.  goto L0f9246;
  #L0f9244.  v0:= 0I;
  #L0f9246.  return v0;
}
procedure `boolean` `isEmpty`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f9258.  call temp:= `isEmptyImpl`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isEmptyImpl:()Z` @kind virtual;
  #L0f925e.  v0:= temp;
  #L0f9260.  return v0;
}
procedure `boolean` `isEmptyImpl`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isEmptyImpl:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L0f9274.  call temp:= `getQueue`(v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @kind virtual;
  #L0f927a.  v0:= temp @kind object;
  #L0f927c.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f9282.  v0:= temp @kind object;
  #L0f9284.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Send` @kind boolean;
  #L0f9288.  if v0 != 0 then goto L0f929c;
  #L0f928c.  call temp:= `isBufferEmpty`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isBufferEmpty:()Z` @kind virtual;
  #L0f9292.  v0:= temp;
  #L0f9294.  if v0 == 0 then goto L0f929c;
  #L0f9298.  v0:= 1I;
  #L0f929a.  goto L0f929e;
  #L0f929c.  v0:= 0I;
  #L0f929e.  return v0;
}
procedure `kotlinx.coroutines.channels.ChannelIterator` `iterator`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.iterator:()Lkotlinx/coroutines/channels/ChannelIterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f95d4.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$a`;
  #L0f95d8.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;)V` @kind direct;
  #L0f95de.  return v0 @kind object;
}
procedure `void` `onCancelIdempotent`(`kotlinx.coroutines.channels.AbstractChannel` v3 @kind this, `boolean` v4 ) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onCancelIdempotent:(Z)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L0f9718.  call temp:= `getClosedForSend`(v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0f971e.  v4:= temp @kind object;
  #L0f9720.  if v4 == 0 then goto L0f976a;
  #L0f9724.  v0:= 1I;
  #L0f9726.  v1:= 0I;
  #L0f9728.  call temp:= `constructor-impl$default`(v1, v0, v1) @signature `Lkotlinx/coroutines/internal/InlineList;.constructor-impl$default:(Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)Ljava/lang/Object;` @kind static;
  #L0f972e.  v0:= temp @kind object;
  #L0f9730.  call temp:= `getPrevNode`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f9736.  v1:= temp @kind object;
  #L0f9738.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind boolean;
  #L0f973c.  if v2 == 0 then goto L0f9748;
  #L0f9740.  call `onCancelIdempotentList-w-w6eGU`(v3, v0, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onCancelIdempotentList-w-w6eGU:(Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)V` @kind virtual;
  #L0f9746.  return @kind void;
  #L0f9748.  call temp:= `remove`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.remove:()Z` @kind virtual;
  #L0f974e.  v2:= temp;
  #L0f9750.  if v2 != 0 then goto L0f975c;
  #L0f9754.  call `helpRemove`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.helpRemove:()V` @kind virtual;
  #L0f975a.  goto L0f9730;
  #L0f975c.  v1:= (`kotlinx.coroutines.channels.Send`) v1 @kind object;
  #L0f9760.  call temp:= `plus-FjFbRPM`(v0, v1) @signature `Lkotlinx/coroutines/internal/InlineList;.plus-FjFbRPM:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f9766.  v0:= temp @kind object;
  #L0f9768.  goto L0f9730;
  #L0f976a.  v4:= new `java.lang.IllegalStateException`;
  #L0f976e.  v0:= "Cannot happen" @kind object;
  #L0f9772.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f9778.  v0:= temp @kind object;
  #L0f977a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f9780.  throw v4;
}
procedure `void` `onCancelIdempotentList-w-w6eGU`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlinx.coroutines.channels.Closed` v4 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onCancelIdempotentList-w-w6eGU:(Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L0f9794.  if v3 != 0 then goto L0f979a;
  #L0f9798.  goto L0f97e2;
  #L0f979a.  v0:= instanceof @variable v3 @type ^`java.util.ArrayList` @kind boolean;
  #L0f979e.  if v0 != 0 then goto L0f97ae;
  #L0f97a2.  v3:= (`kotlinx.coroutines.channels.Send`) v3 @kind object;
  #L0f97a6.  call `resumeSendClosed`(v3, v4) @signature `Lkotlinx/coroutines/channels/Send;.resumeSendClosed:(Lkotlinx/coroutines/channels/Closed;)V` @kind virtual;
  #L0f97ac.  goto L0f97e2;
  #L0f97ae.  v3:= (`java.util.ArrayList`) v3 @kind object;
  #L0f97b2.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L0f97b8.  v0:= temp;
  #L0f97ba.  v0:= v0 + -1;
  #L0f97be.  if v0 < 0 then goto L0f97e2;
  #L0f97c2.  v1:= v0 + -1;
  #L0f97c6.  call temp:= `get`(v3, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L0f97cc.  v0:= temp @kind object;
  #L0f97ce.  v0:= (`kotlinx.coroutines.channels.Send`) v0 @kind object;
  #L0f97d2.  call `resumeSendClosed`(v0, v4) @signature `Lkotlinx/coroutines/channels/Send;.resumeSendClosed:(Lkotlinx/coroutines/channels/Closed;)V` @kind virtual;
  #L0f97d8.  if v1 >= 0 then goto L0f97de;
  #L0f97dc.  goto L0f97e2;
  #L0f97de.  v0:= v1;
  #L0f97e0.  goto L0f97c2;
  #L0f97e2.  return @kind void;
}
procedure `void` `onReceiveDequeued`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveDequeued:()V` @AccessFlag PROTECTED {
    temp;

  #L0f97f4.  return @kind void;
}
procedure `void` `onReceiveEnqueued`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveEnqueued:()V` @AccessFlag PROTECTED {
    temp;

  #L0f9808.  return @kind void;
}
procedure `java.lang.Object` `poll`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f92cc.  call temp:= `poll`(v1) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.poll:(Lkotlinx/coroutines/channels/Channel;)Ljava/lang/Object;` @kind static;
  #L0f92d2.  v0:= temp @kind object;
  #L0f92d4.  return v0 @kind object;
}
procedure `java.lang.Object` `pollInternal`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L0f92e8.  call temp:= `takeFirstSendOrPeekClosed`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.takeFirstSendOrPeekClosed:()Lkotlinx/coroutines/channels/Send;` @kind virtual;
  #L0f92ee.  v0:= temp @kind object;
  #L0f92f0.  if v0 != 0 then goto L0f92fa;
  #L0f92f4.  v0:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f92f8.  return v0 @kind object;
  #L0f92fa.  v1:= 0I;
  #L0f92fc.  call temp:= `tryResumeSend`(v0, v1) @signature `Lkotlinx/coroutines/channels/Send;.tryResumeSend:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @kind virtual;
  #L0f9302.  v1:= temp @kind object;
  #L0f9304.  if v1 == 0 then goto L0f9318;
  #L0f9308.  call `completeResumeSend`(v0) @signature `Lkotlinx/coroutines/channels/Send;.completeResumeSend:()V` @kind virtual;
  #L0f930e.  call temp:= `getPollResult`(v0) @signature `Lkotlinx/coroutines/channels/Send;.getPollResult:()Ljava/lang/Object;` @kind virtual;
  #L0f9314.  v0:= temp @kind object;
  #L0f9316.  return v0 @kind object;
  #L0f9318.  call `undeliveredElement`(v0) @signature `Lkotlinx/coroutines/channels/Send;.undeliveredElement:()V` @kind virtual;
  #L0f931e.  goto L0f92e8;
}
procedure `java.lang.Object` `pollSelectInternal`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this, `kotlinx.coroutines.selects.SelectInstance` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollSelectInternal:(Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0f9330.  call temp:= `describeTryPoll`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.describeTryPoll:()Lkotlinx/coroutines/channels/AbstractChannel$TryPollDesc;` @kind virtual;
  #L0f9336.  v0:= temp @kind object;
  #L0f9338.  call temp:= `performAtomicTrySelect`(v2, v0) @signature `Lkotlinx/coroutines/selects/SelectInstance;.performAtomicTrySelect:(Lkotlinx/coroutines/internal/AtomicDesc;)Ljava/lang/Object;` @kind interface;
  #L0f933e.  v2:= temp @kind object;
  #L0f9340.  if v2 == 0 then goto L0f9346;
  #L0f9344.  return v2 @kind object;
  #L0f9346.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$RemoveFirstDesc;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0f934c.  v2:= temp @kind object;
  #L0f934e.  v2:= (`kotlinx.coroutines.channels.Send`) v2 @kind object;
  #L0f9352.  call `completeResumeSend`(v2) @signature `Lkotlinx/coroutines/channels/Send;.completeResumeSend:()V` @kind virtual;
  #L0f9358.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$RemoveFirstDesc;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0f935e.  v2:= temp @kind object;
  #L0f9360.  v2:= (`kotlinx.coroutines.channels.Send`) v2 @kind object;
  #L0f9364.  call temp:= `getPollResult`(v2) @signature `Lkotlinx/coroutines/channels/Send;.getPollResult:()Ljava/lang/Object;` @kind virtual;
  #L0f936a.  v2:= temp @kind object;
  #L0f936c.  return v2 @kind object;
}
procedure `java.lang.Object` `receive`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.receive:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f9380.  call temp:= `pollInternal`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @kind virtual;
  #L0f9386.  v0:= temp @kind object;
  #L0f9388.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f938c.  if v0 == v1 then goto L0f939a;
  #L0f9390.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f9394.  if v1 != 0 then goto L0f939a;
  #L0f9398.  return v0 @kind object;
  #L0f939a.  v0:= 0I;
  #L0f939c.  call temp:= `m`(v2, v0, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.m:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L0f93a2.  v3:= temp @kind object;
  #L0f93a4.  return v3 @kind object;
}
procedure `java.lang.Object` `receiveCatching-JP2dKIU`(`kotlinx.coroutines.channels.AbstractChannel` v4 @kind this, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.receiveCatching-JP2dKIU:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f93b8.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.channels.AbstractChannel$g` @kind boolean;
  #L0f93bc.  if v0 == 0 then goto L0f93de;
  #L0f93c0.  v0:= v5 @kind object;
  #L0f93c2.  v0:= (`kotlinx.coroutines.channels.AbstractChannel$g`) v0 @kind object;
  #L0f93c6.  v1:= v0.`kotlinx.coroutines.channels.AbstractChannel$g.c` @type ^`int`;
  #L0f93ca.  v2:= -2147483648I;
  #L0f93ce.  v3:= v1 ^& v2 @kind int;
  #L0f93d2.  if v3 == 0 then goto L0f93de;
  #L0f93d6.  v1:= v1 - v2 @kind int;
  #L0f93d8.  v0.`kotlinx.coroutines.channels.AbstractChannel$g.c` @type ^`int` := v1;
  #L0f93dc.  goto L0f93e8;
  #L0f93de.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$g`;
  #L0f93e2.  call `<init>`(v0, v4, v5) @signature `Lkotlinx/coroutines/channels/AbstractChannel$g;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0f93e8.  v5:= v0.`kotlinx.coroutines.channels.AbstractChannel$g.a` @type ^`java.lang.Object` @kind object;
  #L0f93ec.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f93f2.  v1:= temp @kind object;
  #L0f93f4.  v2:= v0.`kotlinx.coroutines.channels.AbstractChannel$g.c` @type ^`int`;
  #L0f93f8.  v3:= 1I;
  #L0f93fa.  if v2 == 0 then goto L0f941a;
  #L0f93fe.  if v2 != v3 then goto L0f940a;
  #L0f9402.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0f9408.  goto L0f946e;
  #L0f940a.  v5:= new `java.lang.IllegalStateException`;
  #L0f940e.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0f9412.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f9418.  throw v5;
  #L0f941a.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0f9420.  call temp:= `pollInternal`(v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @kind virtual;
  #L0f9426.  v5:= temp @kind object;
  #L0f9428.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f942c.  if v5 == v2 then goto L0f945c;
  #L0f9430.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f9434.  if v0 == 0 then goto L0f944e;
  #L0f9438.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0f943c.  v5:= (`kotlinx.coroutines.channels.Closed`) v5 @kind object;
  #L0f9440.  v5:= v5.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0f9444.  call temp:= `closed-JP2dKIU`(v0, v5) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L0f944a.  v5:= temp @kind object;
  #L0f944c.  goto L0f945a;
  #L0f944e.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0f9452.  call temp:= `success-JP2dKIU`(v0, v5) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.success-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0f9458.  v5:= temp @kind object;
  #L0f945a.  return v5 @kind object;
  #L0f945c.  v0.`kotlinx.coroutines.channels.AbstractChannel$g.c` @type ^`int` := v3;
  #L0f9460.  call temp:= `m`(v4, v3, v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.m:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L0f9466.  v5:= temp @kind object;
  #L0f9468.  if v5 != v1 then goto L0f946e;
  #L0f946c.  return v1 @kind object;
  #L0f946e.  v5:= (`kotlinx.coroutines.channels.ChannelResult`) v5 @kind object;
  #L0f9472.  call temp:= `unbox-impl`(v5) @signature `Lkotlinx/coroutines/channels/ChannelResult;.unbox-impl:()Ljava/lang/Object;` @kind virtual;
  #L0f9478.  v5:= temp @kind object;
  #L0f947a.  return v5 @kind object;
}
procedure `java.lang.Object` `receiveOrNull`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.receiveOrNull:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L0f948c.  call temp:= `receiveOrNull`(v0, v1) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.receiveOrNull:(Lkotlinx/coroutines/channels/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L0f9492.  v1:= temp @kind object;
  #L0f9494.  return v1 @kind object;
}
procedure `kotlinx.coroutines.channels.ReceiveOrClosed` `takeFirstReceiveOrPeekClosed`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.takeFirstReceiveOrPeekClosed:()Lkotlinx/coroutines/channels/ReceiveOrClosed;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L0f95f0.  call temp:= `takeFirstReceiveOrPeekClosed`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.takeFirstReceiveOrPeekClosed:()Lkotlinx/coroutines/channels/ReceiveOrClosed;` @kind super;
  #L0f95f6.  v0:= temp @kind object;
  #L0f95f8.  if v0 == 0 then goto L0f960a;
  #L0f95fc.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f9600.  if v1 != 0 then goto L0f960a;
  #L0f9604.  call `onReceiveDequeued`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveDequeued:()V` @kind virtual;
  #L0f960a.  return v0 @kind object;
}
procedure `java.lang.Object` `tryReceive-PtdJZtk`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.tryReceive-PtdJZtk:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f9554.  call temp:= `pollInternal`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @kind virtual;
  #L0f955a.  v0:= temp @kind object;
  #L0f955c.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f9560.  if v0 != v1 then goto L0f9572;
  #L0f9564.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0f9568.  call temp:= `failure-PtdJZtk`(v0) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.failure-PtdJZtk:()Ljava/lang/Object;` @kind virtual;
  #L0f956e.  v0:= temp @kind object;
  #L0f9570.  return v0 @kind object;
  #L0f9572.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f9576.  if v1 == 0 then goto L0f9590;
  #L0f957a.  v1:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0f957e.  v0:= (`kotlinx.coroutines.channels.Closed`) v0 @kind object;
  #L0f9582.  v0:= v0.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0f9586.  call temp:= `closed-JP2dKIU`(v1, v0) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L0f958c.  v0:= temp @kind object;
  #L0f958e.  return v0 @kind object;
  #L0f9590.  v1:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0f9594.  call temp:= `success-JP2dKIU`(v1, v0) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.success-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0f959a.  v0:= temp @kind object;
  #L0f959c.  return v0 @kind object;
}
