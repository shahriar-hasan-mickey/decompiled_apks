record `kotlinx.coroutines.channels.AbstractChannel$f` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.BeforeResumeCancelHandler` @kind class {
  `kotlinx.coroutines.channels.Receive` `kotlinx.coroutines.channels.AbstractChannel$f.a` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.channels.AbstractChannel` `kotlinx.coroutines.channels.AbstractChannel$f.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractChannel$f` v0 @kind this, `kotlinx.coroutines.channels.AbstractChannel` v1 @kind object, `kotlinx.coroutines.channels.Receive` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/channels/Receive;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f8da4.  v0.`kotlinx.coroutines.channels.AbstractChannel$f.b` @type ^`kotlinx.coroutines.channels.AbstractChannel` := v1 @kind object;
  #L0f8da8.  call `<init>`(v0) @signature `Lkotlinx/coroutines/BeforeResumeCancelHandler;.<init>:()V` @kind direct;
  #L0f8dae.  v0.`kotlinx.coroutines.channels.AbstractChannel$f.a` @type ^`kotlinx.coroutines.channels.Receive` := v2 @kind object;
  #L0f8db2.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.channels.AbstractChannel$f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0f8d40.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L0f8d44.  call `invoke`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f8d4a.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f8d4e.  return v1 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.channels.AbstractChannel$f` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.invoke:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L0f8dc4.  v1:= v0.`kotlinx.coroutines.channels.AbstractChannel$f.a` @type ^`kotlinx.coroutines.channels.Receive` @kind object;
  #L0f8dc8.  call temp:= `remove`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.remove:()Z` @kind virtual;
  #L0f8dce.  v1:= temp;
  #L0f8dd0.  if v1 == 0 then goto L0f8dde;
  #L0f8dd4.  v1:= v0.`kotlinx.coroutines.channels.AbstractChannel$f.b` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L0f8dd8.  call `onReceiveDequeued`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveDequeued:()V` @kind virtual;
  #L0f8dde.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.AbstractChannel$f` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f8d60.  v0:= new `java.lang.StringBuilder`;
  #L0f8d64.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f8d6a.  v1:= "RemoveReceiveOnCancel[" @kind object;
  #L0f8d6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f8d74.  v1:= v2.`kotlinx.coroutines.channels.AbstractChannel$f.a` @type ^`kotlinx.coroutines.channels.Receive` @kind object;
  #L0f8d78.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f8d7e.  v1:= 93I;
  #L0f8d82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f8d88.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f8d8e.  v0:= temp @kind object;
  #L0f8d90.  return v0 @kind object;
}
