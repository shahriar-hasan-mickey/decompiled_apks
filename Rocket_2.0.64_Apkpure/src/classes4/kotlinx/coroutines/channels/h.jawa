record `kotlinx.coroutines.channels.h` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.channels.ChannelCoroutine` @kind class, `kotlinx.coroutines.channels.ProducerScope` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.h` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object, `kotlinx.coroutines.channels.Channel` v3 @kind object) @signature `Lkotlinx/coroutines/channels/h;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/channels/Channel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1046bc.  v0:= 1I;
  #L1046be.  call `<init>`(v1, v2, v3, v0, v0) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/channels/Channel;ZZ)V` @kind direct;
  #L1046c4.  return @kind void;
}
procedure `void` `D`(`kotlinx.coroutines.channels.h` v2 @kind this, `kotlin.Unit` v3 @kind object) @signature `Lkotlinx/coroutines/channels/h;.D:(Lkotlin/Unit;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L10472c.  call temp:= `get_channel`(v2) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.get_channel:()Lkotlinx/coroutines/channels/Channel;` @kind virtual;
  #L104732.  v3:= temp @kind object;
  #L104734.  v0:= 0I;
  #L104736.  v1:= 1I;
  #L104738.  call temp:= `close$default`(v3, v0, v1, v0) @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.close$default:(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @kind static;
  #L10473e.  return @kind void;
}
procedure `kotlinx.coroutines.channels.SendChannel` `getChannel`(`kotlinx.coroutines.channels.h` v1 @kind this) @signature `Lkotlinx/coroutines/channels/h;.getChannel:()Lkotlinx/coroutines/channels/SendChannel;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1046a0.  call temp:= `getChannel`(v1) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getChannel:()Lkotlinx/coroutines/channels/Channel;` @kind virtual;
  #L1046a6.  v0:= temp @kind object;
  #L1046a8.  return v0 @kind object;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.channels.h` v1 @kind this) @signature `Lkotlinx/coroutines/channels/h;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L104684.  call temp:= `isActive`(v1) @signature `Lkotlinx/coroutines/AbstractCoroutine;.isActive:()Z` @kind super;
  #L10468a.  v0:= temp;
  #L10468c.  return v0;
}
procedure `void` `onCancelled`(`kotlinx.coroutines.channels.h` v1 @kind this, `java.lang.Throwable` v2 @kind object, `boolean` v3 ) @signature `Lkotlinx/coroutines/channels/h;.onCancelled:(Ljava/lang/Throwable;Z)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1046d8.  call temp:= `get_channel`(v1) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.get_channel:()Lkotlinx/coroutines/channels/Channel;` @kind virtual;
  #L1046de.  v0:= temp @kind object;
  #L1046e0.  call temp:= `close`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.close:(Ljava/lang/Throwable;)Z` @kind interface;
  #L1046e6.  v0:= temp;
  #L1046e8.  if v0 != 0 then goto L1046fe;
  #L1046ec.  if v3 != 0 then goto L1046fe;
  #L1046f0.  call temp:= `getContext`(v1) @signature `Lkotlinx/coroutines/AbstractCoroutine;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L1046f6.  v3:= temp @kind object;
  #L1046f8.  call `handleCoroutineException`(v3, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L1046fe.  return @kind void;
}
procedure `void` `onCompleted`(`kotlinx.coroutines.channels.h` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/h;.onCompleted:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L104710.  v1:= (`kotlin.Unit`) v1 @kind object;
  #L104714.  call `D`(v0, v1) @signature `Lkotlinx/coroutines/channels/h;.D:(Lkotlin/Unit;)V` @kind virtual;
  #L10471a.  return @kind void;
}
