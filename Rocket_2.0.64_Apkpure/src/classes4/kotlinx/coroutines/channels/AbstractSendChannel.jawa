record `kotlinx.coroutines.channels.AbstractSendChannel` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.channels.SendChannel` @kind interface {
  `kotlinx.coroutines.internal.LockFreeLinkedListHead` `kotlinx.coroutines.channels.AbstractSendChannel.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlinx.coroutines.channels.AbstractSendChannel.onCloseHandler` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlin.jvm.functions.Function1` `kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @AccessFlag PROTECTED_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.channels.AbstractSendChannel.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0fa63c.  v0:= constclass @type ^`kotlinx.coroutines.channels.AbstractSendChannel` @kind object;
  #L0fa640.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L0fa644.  v2:= "onCloseHandler" @kind object;
  #L0fa648.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L0fa64e.  v0:= temp @kind object;
  #L0fa650.  `@@kotlinx.coroutines.channels.AbstractSendChannel.b` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L0fa654.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractSendChannel` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0fa668.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0fa66e.  v0.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L0fa672.  v1:= new `kotlinx.coroutines.internal.LockFreeLinkedListHead`;
  #L0fa676.  call `<init>`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListHead;.<init>:()V` @kind direct;
  #L0fa67c.  v0.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` := v1 @kind object;
  #L0fa680.  v1:= 0I;
  #L0fa682.  v0.`kotlinx.coroutines.channels.AbstractSendChannel.onCloseHandler` @type ^`java.lang.Object` := v1 @kind object;
  #L0fa686.  return @kind void;
}
procedure `int` `a`(`kotlinx.coroutines.channels.AbstractSendChannel` v4 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.a:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f9eb8.  v0:= v4.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0f9ebc.  call temp:= `getNext`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L0f9ec2.  v1:= temp @kind object;
  #L0f9ec4.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L0f9ec8.  v2:= 0I;
  #L0f9eca.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f9ed0.  v3:= temp;
  #L0f9ed2.  if v3 != 0 then goto L0f9eec;
  #L0f9ed6.  v3:= instanceof @variable v1 @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind boolean;
  #L0f9eda.  if v3 == 0 then goto L0f9ee2;
  #L0f9ede.  v2:= v2 + 1;
  #L0f9ee2.  call temp:= `getNextNode`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f9ee8.  v1:= temp @kind object;
  #L0f9eea.  goto L0f9eca;
  #L0f9eec.  return v2;
}
procedure `void` `access$helpCloseAndResumeWithSendException`(`kotlinx.coroutines.channels.AbstractSendChannel` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlinx.coroutines.channels.Closed` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.access$helpCloseAndResumeWithSendException:(Lkotlinx/coroutines/channels/AbstractSendChannel;Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0fa698.  call `f`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.f:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)V` @kind direct;
  #L0fa69e.  return @kind void;
}
procedure `boolean` `access$isFullImpl`(`kotlinx.coroutines.channels.AbstractSendChannel` v0 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.access$isFullImpl:(Lkotlinx/coroutines/channels/AbstractSendChannel;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f9d88.  call temp:= `h`(v0) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.h:()Z` @kind direct;
  #L0f9d8e.  v0:= temp;
  #L0f9d90.  return v0;
}
procedure `void` `access$registerSelectSend`(`kotlinx.coroutines.channels.AbstractSendChannel` v0 @kind object, `kotlinx.coroutines.selects.SelectInstance` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.access$registerSelectSend:(Lkotlinx/coroutines/channels/AbstractSendChannel;Lkotlinx/coroutines/selects/SelectInstance;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0fa6b0.  call `i`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.i:(Lkotlinx/coroutines/selects/SelectInstance;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L0fa6b6.  return @kind void;
}
procedure `java.lang.Object` `access$sendSuspend`(`kotlinx.coroutines.channels.AbstractSendChannel` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.access$sendSuspend:(Lkotlinx/coroutines/channels/AbstractSendChannel;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f9f00.  call temp:= `j`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.j:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L0f9f06.  v0:= temp @kind object;
  #L0f9f08.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`kotlinx.coroutines.channels.AbstractSendChannel` v3 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.b:()Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fa26c.  v0:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa270.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0fa276.  v0:= temp @kind object;
  #L0fa278.  v1:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa27c.  if v0 != v1 then goto L0fa286;
  #L0fa280.  v0:= "EmptyQueue" @kind object;
  #L0fa284.  return v0 @kind object;
  #L0fa286.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa28a.  if v1 == 0 then goto L0fa298;
  #L0fa28e.  call temp:= `toString`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fa294.  v1:= temp @kind object;
  #L0fa296.  goto L0fa2c0;
  #L0fa298.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Receive` @kind boolean;
  #L0fa29c.  if v1 == 0 then goto L0fa2a6;
  #L0fa2a0.  v1:= "ReceiveQueued" @kind object;
  #L0fa2a4.  goto L0fa2c0;
  #L0fa2a6.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Send` @kind boolean;
  #L0fa2aa.  if v1 == 0 then goto L0fa2b4;
  #L0fa2ae.  v1:= "SendQueued" @kind object;
  #L0fa2b2.  goto L0fa2c0;
  #L0fa2b4.  v1:= "UNEXPECTED:" @kind object;
  #L0fa2b8.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0fa2be.  v1:= temp @kind object;
  #L0fa2c0.  v2:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa2c4.  call temp:= `getPrevNode`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0fa2ca.  v2:= temp @kind object;
  #L0fa2cc.  if v2 == v0 then goto L0fa330;
  #L0fa2d0.  v0:= new `java.lang.StringBuilder`;
  #L0fa2d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0fa2da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa2e0.  v1:= ",queueSize=" @kind object;
  #L0fa2e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa2ea.  call temp:= `a`(v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.a:()I` @kind direct;
  #L0fa2f0.  v1:= temp;
  #L0fa2f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa2f8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fa2fe.  v1:= temp @kind object;
  #L0fa300.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa304.  if v0 == 0 then goto L0fa330;
  #L0fa308.  v0:= new `java.lang.StringBuilder`;
  #L0fa30c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0fa312.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa318.  v1:= ",closedForSend=" @kind object;
  #L0fa31c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa322.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa328.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fa32e.  v1:= temp @kind object;
  #L0fa330.  return v1 @kind object;
}
procedure `void` `c`(`kotlinx.coroutines.channels.AbstractSendChannel` v5 @kind this, `kotlinx.coroutines.channels.Closed` v6 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.c:(Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0fa6c8.  v0:= 0I;
  #L0fa6ca.  v1:= 1I;
  #L0fa6cc.  call temp:= `constructor-impl$default`(v0, v1, v0) @signature `Lkotlinx/coroutines/internal/InlineList;.constructor-impl$default:(Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)Ljava/lang/Object;` @kind static;
  #L0fa6d2.  v2:= temp @kind object;
  #L0fa6d4.  call temp:= `getPrevNode`(v6) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0fa6da.  v3:= temp @kind object;
  #L0fa6dc.  v4:= instanceof @variable v3 @type ^`kotlinx.coroutines.channels.Receive` @kind boolean;
  #L0fa6e0.  if v4 == 0 then goto L0fa6ea;
  #L0fa6e4.  v3:= (`kotlinx.coroutines.channels.Receive`) v3 @kind object;
  #L0fa6e8.  goto L0fa6ec;
  #L0fa6ea.  v3:= v0 @kind object;
  #L0fa6ec.  if v3 != 0 then goto L0fa744;
  #L0fa6f0.  if v2 != 0 then goto L0fa6f6;
  #L0fa6f4.  goto L0fa73c;
  #L0fa6f6.  v0:= instanceof @variable v2 @type ^`java.util.ArrayList` @kind boolean;
  #L0fa6fa.  if v0 != 0 then goto L0fa70a;
  #L0fa6fe.  v2:= (`kotlinx.coroutines.channels.Receive`) v2 @kind object;
  #L0fa702.  call `resumeReceiveClosed`(v2, v6) @signature `Lkotlinx/coroutines/channels/Receive;.resumeReceiveClosed:(Lkotlinx/coroutines/channels/Closed;)V` @kind virtual;
  #L0fa708.  goto L0fa73c;
  #L0fa70a.  v2:= (`java.util.ArrayList`) v2 @kind object;
  #L0fa70e.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L0fa714.  v0:= temp;
  #L0fa716.  v0:= v0 - v1 @kind int;
  #L0fa718.  if v0 < 0 then goto L0fa73c;
  #L0fa71c.  v1:= v0 + -1;
  #L0fa720.  call temp:= `get`(v2, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L0fa726.  v0:= temp @kind object;
  #L0fa728.  v0:= (`kotlinx.coroutines.channels.Receive`) v0 @kind object;
  #L0fa72c.  call `resumeReceiveClosed`(v0, v6) @signature `Lkotlinx/coroutines/channels/Receive;.resumeReceiveClosed:(Lkotlinx/coroutines/channels/Closed;)V` @kind virtual;
  #L0fa732.  if v1 >= 0 then goto L0fa738;
  #L0fa736.  goto L0fa73c;
  #L0fa738.  v0:= v1;
  #L0fa73a.  goto L0fa71c;
  #L0fa73c.  call `onClosedIdempotent`(v5, v6) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.onClosedIdempotent:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind virtual;
  #L0fa742.  return @kind void;
  #L0fa744.  call temp:= `remove`(v3) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.remove:()Z` @kind virtual;
  #L0fa74a.  v4:= temp;
  #L0fa74c.  if v4 != 0 then goto L0fa758;
  #L0fa750.  call `helpRemove`(v3) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.helpRemove:()V` @kind virtual;
  #L0fa756.  goto L0fa6d4;
  #L0fa758.  call temp:= `plus-FjFbRPM`(v2, v3) @signature `Lkotlinx/coroutines/internal/InlineList;.plus-FjFbRPM:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0fa75e.  v2:= temp @kind object;
  #L0fa760.  goto L0fa6d4;
}
procedure `java.lang.Throwable` `d`(`kotlinx.coroutines.channels.AbstractSendChannel` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlinx.coroutines.channels.Closed` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.d:(Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fa3c0.  call `c`(v3, v5) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.c:(Lkotlinx/coroutines/channels/Closed;)V` @kind direct;
  #L0fa3c6.  v0:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0fa3ca.  if v0 != 0 then goto L0fa3d0;
  #L0fa3ce.  goto L0fa3e0;
  #L0fa3d0.  v1:= 2I;
  #L0fa3d2.  v2:= 0I;
  #L0fa3d4.  call temp:= `callUndeliveredElementCatchingException$default`(v0, v4, v2, v1, v2) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.callUndeliveredElementCatchingException$default:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlinx/coroutines/internal/UndeliveredElementException;ILjava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind static;
  #L0fa3da.  v4:= temp @kind object;
  #L0fa3dc.  if v4 != 0 then goto L0fa3ea;
  #L0fa3e0.  call temp:= `getSendException`(v5) @signature `Lkotlinx/coroutines/channels/Closed;.getSendException:()Ljava/lang/Throwable;` @kind virtual;
  #L0fa3e6.  v4:= temp @kind object;
  #L0fa3e8.  return v4 @kind object;
  #L0fa3ea.  call temp:= `getSendException`(v5) @signature `Lkotlinx/coroutines/channels/Closed;.getSendException:()Ljava/lang/Throwable;` @kind virtual;
  #L0fa3f0.  v5:= temp @kind object;
  #L0fa3f2.  call `addSuppressed`(v4, v5) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L0fa3f8.  throw v4;
}
procedure `java.lang.Throwable` `e`(`kotlinx.coroutines.channels.AbstractSendChannel` v0 @kind this, `kotlinx.coroutines.channels.Closed` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.e:(Lkotlinx/coroutines/channels/Closed;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;

  #L0fa40c.  call `c`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.c:(Lkotlinx/coroutines/channels/Closed;)V` @kind direct;
  #L0fa412.  call temp:= `getSendException`(v1) @signature `Lkotlinx/coroutines/channels/Closed;.getSendException:()Ljava/lang/Throwable;` @kind virtual;
  #L0fa418.  v1:= temp @kind object;
  #L0fa41a.  return v1 @kind object;
}
procedure `void` `f`(`kotlinx.coroutines.channels.AbstractSendChannel` v3 @kind this, `kotlin.coroutines.Continuation` v4 @kind object, `java.lang.Object` v5 @kind object, `kotlinx.coroutines.channels.Closed` v6 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.f:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fa774.  call `c`(v3, v6) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.c:(Lkotlinx/coroutines/channels/Closed;)V` @kind direct;
  #L0fa77a.  call temp:= `getSendException`(v6) @signature `Lkotlinx/coroutines/channels/Closed;.getSendException:()Ljava/lang/Throwable;` @kind virtual;
  #L0fa780.  v6:= temp @kind object;
  #L0fa782.  v0:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0fa786.  if v0 != 0 then goto L0fa78c;
  #L0fa78a.  goto L0fa79c;
  #L0fa78c.  v1:= 2I;
  #L0fa78e.  v2:= 0I;
  #L0fa790.  call temp:= `callUndeliveredElementCatchingException$default`(v0, v5, v2, v1, v2) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.callUndeliveredElementCatchingException$default:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlinx/coroutines/internal/UndeliveredElementException;ILjava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind static;
  #L0fa796.  v5:= temp @kind object;
  #L0fa798.  if v5 != 0 then goto L0fa7b8;
  #L0fa79c.  v5:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0fa7a0.  call temp:= `createFailure`(v6) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L0fa7a6.  v5:= temp @kind object;
  #L0fa7a8.  call temp:= `constructor-impl`(v5) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0fa7ae.  v5:= temp @kind object;
  #L0fa7b0.  call `resumeWith`(v4, v5) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L0fa7b6.  return @kind void;
  #L0fa7b8.  call `addSuppressed`(v5, v6) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L0fa7be.  v6:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0fa7c2.  call temp:= `createFailure`(v5) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L0fa7c8.  v5:= temp @kind object;
  #L0fa7ca.  call temp:= `constructor-impl`(v5) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0fa7d0.  v5:= temp @kind object;
  #L0fa7d2.  call `resumeWith`(v4, v5) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L0fa7d8.  return @kind void;
}
procedure `void` `g`(`kotlinx.coroutines.channels.AbstractSendChannel` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.g:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fa86c.  v0:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onCloseHandler` @type ^`java.lang.Object` @kind object;
  #L0fa870.  if v0 == 0 then goto L0fa8a0;
  #L0fa874.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.HANDLER_INVOKED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa878.  if v0 == v1 then goto L0fa8a0;
  #L0fa87c.  v2:= `@@kotlinx.coroutines.channels.AbstractSendChannel.b` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0fa880.  call temp:= `a`(v2, v3, v0, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0fa886.  v1:= temp;
  #L0fa888.  if v1 == 0 then goto L0fa8a0;
  #L0fa88c.  v1:= 1I;
  #L0fa88e.  call temp:= `beforeCheckcastToFunctionOfArity`(v0, v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L0fa894.  v0:= temp @kind object;
  #L0fa896.  v0:= (`kotlin.jvm.functions.Function1`) v0 @kind object;
  #L0fa89a.  call temp:= `invoke`(v0, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0fa8a0.  return @kind void;
}
procedure `boolean` `h`(`kotlinx.coroutines.channels.AbstractSendChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.h:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f9e34.  v0:= v1.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0f9e38.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f9e3e.  v0:= temp @kind object;
  #L0f9e40.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ReceiveOrClosed` @kind boolean;
  #L0f9e44.  if v0 != 0 then goto L0f9e58;
  #L0f9e48.  call temp:= `isBufferFull`(v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.isBufferFull:()Z` @kind virtual;
  #L0f9e4e.  v0:= temp;
  #L0f9e50.  if v0 == 0 then goto L0f9e58;
  #L0f9e54.  v0:= 1I;
  #L0f9e56.  goto L0f9e5a;
  #L0f9e58.  v0:= 0I;
  #L0f9e5a.  return v0;
}
procedure `void` `i`(`kotlinx.coroutines.channels.AbstractSendChannel` v2 @kind this, `kotlinx.coroutines.selects.SelectInstance` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.i:(Lkotlinx/coroutines/selects/SelectInstance;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0fa8c8.  call temp:= `isSelected`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.isSelected:()Z` @kind interface;
  #L0fa8ce.  v0:= temp;
  #L0fa8d0.  if v0 == 0 then goto L0fa8d6;
  #L0fa8d4.  return @kind void;
  #L0fa8d6.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.h:()Z` @kind direct;
  #L0fa8dc.  v0:= temp;
  #L0fa8de.  if v0 == 0 then goto L0fa972;
  #L0fa8e2.  v0:= new `kotlinx.coroutines.channels.AbstractSendChannel$b`;
  #L0fa8e6.  call `<init>`(v0, v4, v2, v3, v5) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$b;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/channels/AbstractSendChannel;Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L0fa8ec.  call temp:= `enqueueSend`(v2, v0) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.enqueueSend:(Lkotlinx/coroutines/channels/Send;)Ljava/lang/Object;` @kind virtual;
  #L0fa8f2.  v1:= temp @kind object;
  #L0fa8f4.  if v1 != 0 then goto L0fa900;
  #L0fa8f8.  call `disposeOnSelect`(v3, v0) @signature `Lkotlinx/coroutines/selects/SelectInstance;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @kind interface;
  #L0fa8fe.  return @kind void;
  #L0fa900.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa904.  if v0 != 0 then goto L0fa95c;
  #L0fa908.  v0:= `@@kotlinx.coroutines.channels.AbstractChannelKt.ENQUEUE_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa90c.  if v1 != v0 then goto L0fa912;
  #L0fa910.  goto L0fa972;
  #L0fa912.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Receive` @kind boolean;
  #L0fa916.  if v0 == 0 then goto L0fa91c;
  #L0fa91a.  goto L0fa972;
  #L0fa91c.  v3:= new `java.lang.IllegalStateException`;
  #L0fa920.  v4:= new `java.lang.StringBuilder`;
  #L0fa924.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0fa92a.  v5:= "enqueueSend returned " @kind object;
  #L0fa92e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa934.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa93a.  v5:= 32I;
  #L0fa93e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa944.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fa94a.  v4:= temp @kind object;
  #L0fa94c.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fa952.  v4:= temp @kind object;
  #L0fa954.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fa95a.  throw v3;
  #L0fa95c.  v1:= (`kotlinx.coroutines.channels.Closed`) v1 @kind object;
  #L0fa960.  call temp:= `d`(v2, v4, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.d:(Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)Ljava/lang/Throwable;` @kind direct;
  #L0fa966.  v3:= temp @kind object;
  #L0fa968.  call temp:= `recoverStackTrace`(v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.recoverStackTrace:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L0fa96e.  v3:= temp @kind object;
  #L0fa970.  throw v3;
  #L0fa972.  call temp:= `offerSelectInternal`(v2, v4, v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.offerSelectInternal:(Ljava/lang/Object;Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @kind virtual;
  #L0fa978.  v0:= temp @kind object;
  #L0fa97a.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L0fa980.  v1:= temp @kind object;
  #L0fa982.  if v0 != v1 then goto L0fa988;
  #L0fa986.  return @kind void;
  #L0fa988.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa98c.  if v0 != v1 then goto L0fa992;
  #L0fa990.  goto L0fa8c8;
  #L0fa992.  v1:= `@@kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC` @type ^`java.lang.Object` @kind object;
  #L0fa996.  if v0 != v1 then goto L0fa99c;
  #L0fa99a.  goto L0fa8c8;
  #L0fa99c.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa9a0.  if v0 != v1 then goto L0fa9b4;
  #L0fa9a4.  call temp:= `getCompletion`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L0fa9aa.  v3:= temp @kind object;
  #L0fa9ac.  call `startCoroutineUnintercepted`(v5, v2, v3) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0fa9b2.  return @kind void;
  #L0fa9b4.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa9b8.  if v3 == 0 then goto L0fa9d2;
  #L0fa9bc.  v0:= (`kotlinx.coroutines.channels.Closed`) v0 @kind object;
  #L0fa9c0.  call temp:= `d`(v2, v4, v0) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.d:(Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)Ljava/lang/Throwable;` @kind direct;
  #L0fa9c6.  v3:= temp @kind object;
  #L0fa9c8.  call temp:= `recoverStackTrace`(v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.recoverStackTrace:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L0fa9ce.  v3:= temp @kind object;
  #L0fa9d0.  throw v3;
  #L0fa9d2.  v3:= new `java.lang.IllegalStateException`;
  #L0fa9d6.  v4:= "offerSelectInternal returned " @kind object;
  #L0fa9da.  call temp:= `stringPlus`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0fa9e0.  v4:= temp @kind object;
  #L0fa9e2.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fa9e8.  v4:= temp @kind object;
  #L0fa9ea.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fa9f0.  throw v3;
}
procedure `java.lang.Object` `j`(`kotlinx.coroutines.channels.AbstractSendChannel` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.j:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fa06c.  call temp:= `intercepted`(v5) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L0fa072.  v0:= temp @kind object;
  #L0fa074.  call temp:= `getOrCreateCancellableContinuation`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.getOrCreateCancellableContinuation:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/CancellableContinuationImpl;` @kind static;
  #L0fa07a.  v0:= temp @kind object;
  #L0fa07c.  call temp:= `access$isFullImpl`(v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.access$isFullImpl:(Lkotlinx/coroutines/channels/AbstractSendChannel;)Z` @kind static;
  #L0fa082.  v1:= temp;
  #L0fa084.  if v1 == 0 then goto L0fa106;
  #L0fa088.  v1:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0fa08c.  if v1 != 0 then goto L0fa09c;
  #L0fa090.  v1:= new `kotlinx.coroutines.channels.SendElement`;
  #L0fa094.  call `<init>`(v1, v4, v0) @signature `Lkotlinx/coroutines/channels/SendElement;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/CancellableContinuation;)V` @kind direct;
  #L0fa09a.  goto L0fa0aa;
  #L0fa09c.  v1:= new `kotlinx.coroutines.channels.SendElementWithUndeliveredHandler`;
  #L0fa0a0.  v2:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0fa0a4.  call `<init>`(v1, v4, v0, v2) @signature `Lkotlinx/coroutines/channels/SendElementWithUndeliveredHandler;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/CancellableContinuation;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0fa0aa.  call temp:= `enqueueSend`(v3, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.enqueueSend:(Lkotlinx/coroutines/channels/Send;)Ljava/lang/Object;` @kind virtual;
  #L0fa0b0.  v2:= temp @kind object;
  #L0fa0b2.  if v2 != 0 then goto L0fa0be;
  #L0fa0b6.  call `removeOnCancellation`(v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.removeOnCancellation:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind static;
  #L0fa0bc.  goto L0fa14a;
  #L0fa0be.  v1:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa0c2.  if v1 == 0 then goto L0fa0d2;
  #L0fa0c6.  v2:= (`kotlinx.coroutines.channels.Closed`) v2 @kind object;
  #L0fa0ca.  call `access$helpCloseAndResumeWithSendException`(v3, v0, v4, v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.access$helpCloseAndResumeWithSendException:(Lkotlinx/coroutines/channels/AbstractSendChannel;Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)V` @kind static;
  #L0fa0d0.  goto L0fa14a;
  #L0fa0d2.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.ENQUEUE_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa0d6.  if v2 != v1 then goto L0fa0dc;
  #L0fa0da.  goto L0fa106;
  #L0fa0dc.  v1:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Receive` @kind boolean;
  #L0fa0e0.  if v1 == 0 then goto L0fa0e6;
  #L0fa0e4.  goto L0fa106;
  #L0fa0e6.  v4:= new `java.lang.IllegalStateException`;
  #L0fa0ea.  v5:= "enqueueSend returned " @kind object;
  #L0fa0ee.  call temp:= `stringPlus`(v5, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0fa0f4.  v5:= temp @kind object;
  #L0fa0f6.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fa0fc.  v5:= temp @kind object;
  #L0fa0fe.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fa104.  throw v4;
  #L0fa106.  call temp:= `offerInternal`(v3, v4) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.offerInternal:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0fa10c.  v1:= temp @kind object;
  #L0fa10e.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa112.  if v1 != v2 then goto L0fa12e;
  #L0fa116.  v4:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0fa11a.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0fa11e.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0fa124.  v4:= temp @kind object;
  #L0fa126.  call `resumeWith`(v0, v4) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L0fa12c.  goto L0fa14a;
  #L0fa12e.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa132.  if v1 != v2 then goto L0fa138;
  #L0fa136.  goto L0fa07c;
  #L0fa138.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa13c.  if v2 == 0 then goto L0fa178;
  #L0fa140.  v1:= (`kotlinx.coroutines.channels.Closed`) v1 @kind object;
  #L0fa144.  call `access$helpCloseAndResumeWithSendException`(v3, v0, v4, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.access$helpCloseAndResumeWithSendException:(Lkotlinx/coroutines/channels/AbstractSendChannel;Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)V` @kind static;
  #L0fa14a.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0fa150.  v4:= temp @kind object;
  #L0fa152.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0fa158.  v0:= temp @kind object;
  #L0fa15a.  if v4 != v0 then goto L0fa164;
  #L0fa15e.  call `probeCoroutineSuspended`(v5) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0fa164.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0fa16a.  v5:= temp @kind object;
  #L0fa16c.  if v4 != v5 then goto L0fa172;
  #L0fa170.  return v4 @kind object;
  #L0fa172.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0fa176.  return v4 @kind object;
  #L0fa178.  v4:= new `java.lang.IllegalStateException`;
  #L0fa17c.  v5:= "offerInternal returned " @kind object;
  #L0fa180.  call temp:= `stringPlus`(v5, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0fa186.  v5:= temp @kind object;
  #L0fa188.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fa18e.  v5:= temp @kind object;
  #L0fa190.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fa196.  throw v4;
}
procedure `boolean` `close`(`kotlinx.coroutines.channels.AbstractSendChannel` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.close:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0f9da4.  v0:= new `kotlinx.coroutines.channels.Closed`;
  #L0f9da8.  call `<init>`(v0, v6) @signature `Lkotlinx/coroutines/channels/Closed;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L0f9dae.  v1:= v5.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0f9db2.  call temp:= `getPrevNode`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f9db8.  v2:= temp @kind object;
  #L0f9dba.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f9dbe.  v4:= 1I;
  #L0f9dc0.  v3:= v3 ^~ v4 @kind int;
  #L0f9dc2.  if v3 != 0 then goto L0f9dca;
  #L0f9dc6.  v4:= 0I;
  #L0f9dc8.  goto L0f9dd6;
  #L0f9dca.  call temp:= `addNext`(v2, v0, v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.addNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Z` @kind virtual;
  #L0f9dd0.  v2:= temp;
  #L0f9dd2.  if v2 == 0 then goto L0f9db2;
  #L0f9dd6.  if v4 == 0 then goto L0f9ddc;
  #L0f9dda.  goto L0f9dec;
  #L0f9ddc.  v0:= v5.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0f9de0.  call temp:= `getPrevNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f9de6.  v0:= temp @kind object;
  #L0f9de8.  v0:= (`kotlinx.coroutines.channels.Closed`) v0 @kind object;
  #L0f9dec.  call `c`(v5, v0) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.c:(Lkotlinx/coroutines/channels/Closed;)V` @kind direct;
  #L0f9df2.  if v4 == 0 then goto L0f9dfc;
  #L0f9df6.  call `g`(v5, v6) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.g:(Ljava/lang/Throwable;)V` @kind direct;
  #L0f9dfc.  return v4;
}
procedure `kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` `describeSendBuffered`(`kotlinx.coroutines.channels.AbstractSendChannel` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.describeSendBuffered:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L0fa600.  v0:= new `kotlinx.coroutines.channels.AbstractSendChannel$a`;
  #L0fa604.  v1:= v2.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa608.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$a;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListHead;Ljava/lang/Object;)V` @kind direct;
  #L0fa60e.  return v0 @kind object;
}
procedure `kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc` `describeTryOffer`(`kotlinx.coroutines.channels.AbstractSendChannel` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.describeTryOffer:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/AbstractSendChannel$TryOfferDesc;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L0fa42c.  v0:= new `kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc`;
  #L0fa430.  v1:= v2.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa434.  call `<init>`(v0, v3, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$TryOfferDesc;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListHead;)V` @kind direct;
  #L0fa43a.  return v0 @kind object;
}
procedure `java.lang.Object` `enqueueSend`(`kotlinx.coroutines.channels.AbstractSendChannel` v4 @kind this, `kotlinx.coroutines.channels.Send` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.enqueueSend:(Lkotlinx/coroutines/channels/Send;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f9f1c.  call temp:= `isBufferAlwaysFull`(v4) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.isBufferAlwaysFull:()Z` @kind virtual;
  #L0f9f22.  v0:= temp;
  #L0f9f24.  if v0 == 0 then goto L0f9f4c;
  #L0f9f28.  v0:= v4.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0f9f2c.  call temp:= `getPrevNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f9f32.  v1:= temp @kind object;
  #L0f9f34.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.ReceiveOrClosed` @kind boolean;
  #L0f9f38.  if v2 == 0 then goto L0f9f3e;
  #L0f9f3c.  return v1 @kind object;
  #L0f9f3e.  call temp:= `addNext`(v1, v5, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.addNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Z` @kind virtual;
  #L0f9f44.  v1:= temp;
  #L0f9f46.  if v1 == 0 then goto L0f9f2c;
  #L0f9f4a.  goto L0f9f8e;
  #L0f9f4c.  v0:= v4.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0f9f50.  v1:= new `kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1`;
  #L0f9f54.  call `<init>`(v1, v5, v4) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/channels/AbstractSendChannel;)V` @kind direct;
  #L0f9f5a.  call temp:= `getPrevNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f9f60.  v2:= temp @kind object;
  #L0f9f62.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.ReceiveOrClosed` @kind boolean;
  #L0f9f66.  if v3 == 0 then goto L0f9f6c;
  #L0f9f6a.  return v2 @kind object;
  #L0f9f6c.  call temp:= `tryCondAddNext`(v2, v5, v0, v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.tryCondAddNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$CondAddOp;)I` @kind virtual;
  #L0f9f72.  v2:= temp;
  #L0f9f74.  v3:= 1I;
  #L0f9f76.  if v2 == v3 then goto L0f9f84;
  #L0f9f7a.  v3:= 2I;
  #L0f9f7c.  if v2 == v3 then goto L0f9f82;
  #L0f9f80.  goto L0f9f5a;
  #L0f9f82.  v3:= 0I;
  #L0f9f84.  if v3 != 0 then goto L0f9f8e;
  #L0f9f88.  v5:= `@@kotlinx.coroutines.channels.AbstractChannelKt.ENQUEUE_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f9f8c.  return v5 @kind object;
  #L0f9f8e.  v5:= 0I;
  #L0f9f90.  return v5 @kind object;
}
procedure `java.lang.String` `getBufferDebugString`(`kotlinx.coroutines.channels.AbstractSendChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getBufferDebugString:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0fa254.  v0:= "" @kind object;
  #L0fa258.  return v0 @kind object;
}
procedure `kotlinx.coroutines.channels.Closed` `getClosedForReceive`(`kotlinx.coroutines.channels.AbstractSendChannel` v3 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForReceive:()Lkotlinx/coroutines/channels/Closed;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fa44c.  v0:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa450.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0fa456.  v0:= temp @kind object;
  #L0fa458.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa45c.  v2:= 0I;
  #L0fa45e.  if v1 == 0 then goto L0fa468;
  #L0fa462.  v0:= (`kotlinx.coroutines.channels.Closed`) v0 @kind object;
  #L0fa466.  goto L0fa46a;
  #L0fa468.  v0:= v2 @kind object;
  #L0fa46a.  if v0 != 0 then goto L0fa470;
  #L0fa46e.  goto L0fa478;
  #L0fa470.  call `c`(v3, v0) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.c:(Lkotlinx/coroutines/channels/Closed;)V` @kind direct;
  #L0fa476.  v2:= v0 @kind object;
  #L0fa478.  return v2 @kind object;
}
procedure `kotlinx.coroutines.channels.Closed` `getClosedForSend`(`kotlinx.coroutines.channels.AbstractSendChannel` v3 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fa48c.  v0:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa490.  call temp:= `getPrevNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0fa496.  v0:= temp @kind object;
  #L0fa498.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa49c.  v2:= 0I;
  #L0fa49e.  if v1 == 0 then goto L0fa4a8;
  #L0fa4a2.  v0:= (`kotlinx.coroutines.channels.Closed`) v0 @kind object;
  #L0fa4a6.  goto L0fa4aa;
  #L0fa4a8.  v0:= v2 @kind object;
  #L0fa4aa.  if v0 != 0 then goto L0fa4b0;
  #L0fa4ae.  goto L0fa4b8;
  #L0fa4b0.  call `c`(v3, v0) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.c:(Lkotlinx/coroutines/channels/Closed;)V` @kind direct;
  #L0fa4b6.  v2:= v0 @kind object;
  #L0fa4b8.  return v2 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause2` `getOnSend`(`kotlinx.coroutines.channels.AbstractSendChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getOnSend:()Lkotlinx/coroutines/selects/SelectClause2;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0fa620.  v0:= new `kotlinx.coroutines.channels.AbstractSendChannel$onSend$1`;
  #L0fa624.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$onSend$1;.<init>:(Lkotlinx/coroutines/channels/AbstractSendChannel;)V` @kind direct;
  #L0fa62a.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.LockFreeLinkedListHead` `getQueue`(`kotlinx.coroutines.channels.AbstractSendChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L0fa5e8.  v0:= v1.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa5ec.  return v0 @kind object;
}
procedure `void` `invokeOnClose`(`kotlinx.coroutines.channels.AbstractSendChannel` v3 @kind this, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.invokeOnClose:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0fa7ec.  v0:= `@@kotlinx.coroutines.channels.AbstractSendChannel.b` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0fa7f0.  v1:= 0I;
  #L0fa7f2.  call temp:= `a`(v0, v3, v1, v4) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0fa7f8.  v1:= temp;
  #L0fa7fa.  if v1 != 0 then goto L0fa832;
  #L0fa7fe.  v4:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onCloseHandler` @type ^`java.lang.Object` @kind object;
  #L0fa802.  v0:= `@@kotlinx.coroutines.channels.AbstractChannelKt.HANDLER_INVOKED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa806.  if v4 != v0 then goto L0fa81a;
  #L0fa80a.  v4:= new `java.lang.IllegalStateException`;
  #L0fa80e.  v0:= "Another handler was already registered and successfully invoked" @kind object;
  #L0fa812.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fa818.  throw v4;
  #L0fa81a.  v0:= new `java.lang.IllegalStateException`;
  #L0fa81e.  v1:= "Another handler was already registered: " @kind object;
  #L0fa822.  call temp:= `stringPlus`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0fa828.  v4:= temp @kind object;
  #L0fa82a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fa830.  throw v0;
  #L0fa832.  call temp:= `getClosedForSend`(v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0fa838.  v1:= temp @kind object;
  #L0fa83a.  if v1 == 0 then goto L0fa858;
  #L0fa83e.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.HANDLER_INVOKED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa842.  call temp:= `a`(v0, v3, v4, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0fa848.  v0:= temp;
  #L0fa84a.  if v0 == 0 then goto L0fa858;
  #L0fa84e.  v0:= v1.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0fa852.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0fa858.  return @kind void;
}
procedure `boolean` `isBufferAlwaysFull`() @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.isBufferAlwaysFull:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `isBufferFull`() @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.isBufferFull:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `isClosedForSend`(`kotlinx.coroutines.channels.AbstractSendChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.isClosedForSend:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f9e10.  call temp:= `getClosedForSend`(v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0f9e16.  v0:= temp @kind object;
  #L0f9e18.  if v0 == 0 then goto L0f9e20;
  #L0f9e1c.  v0:= 1I;
  #L0f9e1e.  goto L0f9e22;
  #L0f9e20.  v0:= 0I;
  #L0f9e22.  return v0;
}
procedure `boolean` `offer`(`kotlinx.coroutines.channels.AbstractSendChannel` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f9e6c.  call temp:= `offer`(v4, v5) @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.offer:(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Object;)Z` @kind static;
  #L0f9e72.  v5:= temp;
  #L0f9e74.  return v5;
  #L0f9e76.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f9e78.  v1:= v4.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0f9e7c.  if v1 == 0 then goto L0f9e9a;
  #L0f9e80.  v2:= 2I;
  #L0f9e82.  v3:= 0I;
  #L0f9e84.  call temp:= `callUndeliveredElementCatchingException$default`(v1, v5, v3, v2, v3) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.callUndeliveredElementCatchingException$default:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlinx/coroutines/internal/UndeliveredElementException;ILjava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind static;
  #L0f9e8a.  v5:= temp @kind object;
  #L0f9e8c.  if v5 != 0 then goto L0f9e92;
  #L0f9e90.  goto L0f9e9a;
  #L0f9e92.  call `addSuppressed`(v5, v0) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L0f9e98.  throw v5;
  #L0f9e9a.  throw v0;
  catch `java.lang.Throwable` @[L0f9e6c..L0f9e74] goto L0f9e76;
}
procedure `java.lang.Object` `offerInternal`(`kotlinx.coroutines.channels.AbstractSendChannel` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.offerInternal:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L0f9fa4.  call temp:= `takeFirstReceiveOrPeekClosed`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.takeFirstReceiveOrPeekClosed:()Lkotlinx/coroutines/channels/ReceiveOrClosed;` @kind virtual;
  #L0f9faa.  v0:= temp @kind object;
  #L0f9fac.  if v0 != 0 then goto L0f9fb6;
  #L0f9fb0.  v3:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f9fb4.  return v3 @kind object;
  #L0f9fb6.  v1:= 0I;
  #L0f9fb8.  call temp:= `tryResumeReceive`(v0, v3, v1) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.tryResumeReceive:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @kind interface;
  #L0f9fbe.  v1:= temp @kind object;
  #L0f9fc0.  if v1 == 0 then goto L0f9fa4;
  #L0f9fc4.  call `completeResumeReceive`(v0, v3) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.completeResumeReceive:(Ljava/lang/Object;)V` @kind interface;
  #L0f9fca.  call temp:= `getOfferResult`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.getOfferResult:()Ljava/lang/Object;` @kind interface;
  #L0f9fd0.  v3:= temp @kind object;
  #L0f9fd2.  return v3 @kind object;
}
procedure `java.lang.Object` `offerSelectInternal`(`kotlinx.coroutines.channels.AbstractSendChannel` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlinx.coroutines.selects.SelectInstance` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.offerSelectInternal:(Ljava/lang/Object;Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0f9fe4.  call temp:= `describeTryOffer`(v1, v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.describeTryOffer:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/AbstractSendChannel$TryOfferDesc;` @kind virtual;
  #L0f9fea.  v0:= temp @kind object;
  #L0f9fec.  call temp:= `performAtomicTrySelect`(v3, v0) @signature `Lkotlinx/coroutines/selects/SelectInstance;.performAtomicTrySelect:(Lkotlinx/coroutines/internal/AtomicDesc;)Ljava/lang/Object;` @kind interface;
  #L0f9ff2.  v3:= temp @kind object;
  #L0f9ff4.  if v3 == 0 then goto L0f9ffa;
  #L0f9ff8.  return v3 @kind object;
  #L0f9ffa.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$RemoveFirstDesc;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0fa000.  v3:= temp @kind object;
  #L0fa002.  v3:= (`kotlinx.coroutines.channels.ReceiveOrClosed`) v3 @kind object;
  #L0fa006.  call `completeResumeReceive`(v3, v2) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.completeResumeReceive:(Ljava/lang/Object;)V` @kind interface;
  #L0fa00c.  call temp:= `getOfferResult`(v3) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.getOfferResult:()Ljava/lang/Object;` @kind interface;
  #L0fa012.  v2:= temp @kind object;
  #L0fa014.  return v2 @kind object;
}
procedure `void` `onClosedIdempotent`(`kotlinx.coroutines.channels.AbstractSendChannel` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.onClosedIdempotent:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @AccessFlag PROTECTED {
    temp;

  #L0fa8b4.  return @kind void;
}
procedure `java.lang.Object` `send`(`kotlinx.coroutines.channels.AbstractSendChannel` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0fa028.  call temp:= `offerInternal`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.offerInternal:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0fa02e.  v0:= temp @kind object;
  #L0fa030.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa034.  if v0 != v1 then goto L0fa03e;
  #L0fa038.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0fa03c.  return v3 @kind object;
  #L0fa03e.  call temp:= `j`(v2, v3, v4) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.j:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L0fa044.  v3:= temp @kind object;
  #L0fa046.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0fa04c.  v4:= temp @kind object;
  #L0fa04e.  if v3 != v4 then goto L0fa054;
  #L0fa052.  return v3 @kind object;
  #L0fa054.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0fa058.  return v3 @kind object;
}
procedure `kotlinx.coroutines.channels.ReceiveOrClosed` `sendBuffered`(`kotlinx.coroutines.channels.AbstractSendChannel` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.sendBuffered:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ReceiveOrClosed;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fa4cc.  v0:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa4d0.  v1:= new `kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered`;
  #L0fa4d4.  call `<init>`(v1, v4) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$SendBuffered;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L0fa4da.  call temp:= `getPrevNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0fa4e0.  v4:= temp @kind object;
  #L0fa4e2.  v2:= instanceof @variable v4 @type ^`kotlinx.coroutines.channels.ReceiveOrClosed` @kind boolean;
  #L0fa4e6.  if v2 == 0 then goto L0fa4f0;
  #L0fa4ea.  v4:= (`kotlinx.coroutines.channels.ReceiveOrClosed`) v4 @kind object;
  #L0fa4ee.  return v4 @kind object;
  #L0fa4f0.  call temp:= `addNext`(v4, v1, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.addNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Z` @kind virtual;
  #L0fa4f6.  v4:= temp;
  #L0fa4f8.  if v4 == 0 then goto L0fa4da;
  #L0fa4fc.  v4:= 0I;
  #L0fa4fe.  return v4 @kind object;
}
procedure `kotlinx.coroutines.channels.ReceiveOrClosed` `takeFirstReceiveOrPeekClosed`(`kotlinx.coroutines.channels.AbstractSendChannel` v4 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.takeFirstReceiveOrPeekClosed:()Lkotlinx/coroutines/channels/ReceiveOrClosed;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0fa510.  v0:= v4.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa514.  call temp:= `getNext`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L0fa51a.  v1:= temp @kind object;
  #L0fa51c.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L0fa520.  v2:= 0I;
  #L0fa522.  if v1 != v0 then goto L0fa52a;
  #L0fa526.  v1:= v2 @kind object;
  #L0fa528.  goto L0fa55c;
  #L0fa52a.  v3:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.ReceiveOrClosed` @kind boolean;
  #L0fa52e.  if v3 != 0 then goto L0fa534;
  #L0fa532.  goto L0fa526;
  #L0fa534.  v2:= v1 @kind object;
  #L0fa536.  v2:= (`kotlinx.coroutines.channels.ReceiveOrClosed`) v2 @kind object;
  #L0fa53a.  v2:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa53e.  if v2 == 0 then goto L0fa550;
  #L0fa542.  call temp:= `isRemoved`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.isRemoved:()Z` @kind virtual;
  #L0fa548.  v2:= temp;
  #L0fa54a.  if v2 != 0 then goto L0fa550;
  #L0fa54e.  goto L0fa55c;
  #L0fa550.  call temp:= `removeOrNext`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.removeOrNext:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0fa556.  v2:= temp @kind object;
  #L0fa558.  if v2 != 0 then goto L0fa562;
  #L0fa55c.  v1:= (`kotlinx.coroutines.channels.ReceiveOrClosed`) v1 @kind object;
  #L0fa560.  return v1 @kind object;
  #L0fa562.  call `helpRemovePrev`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.helpRemovePrev:()V` @kind virtual;
  #L0fa568.  goto L0fa514;
}
procedure `kotlinx.coroutines.channels.Send` `takeFirstSendOrPeekClosed`(`kotlinx.coroutines.channels.AbstractSendChannel` v4 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.takeFirstSendOrPeekClosed:()Lkotlinx/coroutines/channels/Send;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0fa57c.  v0:= v4.`kotlinx.coroutines.channels.AbstractSendChannel.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind object;
  #L0fa580.  call temp:= `getNext`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L0fa586.  v1:= temp @kind object;
  #L0fa588.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L0fa58c.  v2:= 0I;
  #L0fa58e.  if v1 != v0 then goto L0fa596;
  #L0fa592.  v1:= v2 @kind object;
  #L0fa594.  goto L0fa5c8;
  #L0fa596.  v3:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Send` @kind boolean;
  #L0fa59a.  if v3 != 0 then goto L0fa5a0;
  #L0fa59e.  goto L0fa592;
  #L0fa5a0.  v2:= v1 @kind object;
  #L0fa5a2.  v2:= (`kotlinx.coroutines.channels.Send`) v2 @kind object;
  #L0fa5a6.  v2:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa5aa.  if v2 == 0 then goto L0fa5bc;
  #L0fa5ae.  call temp:= `isRemoved`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.isRemoved:()Z` @kind virtual;
  #L0fa5b4.  v2:= temp;
  #L0fa5b6.  if v2 != 0 then goto L0fa5bc;
  #L0fa5ba.  goto L0fa5c8;
  #L0fa5bc.  call temp:= `removeOrNext`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.removeOrNext:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0fa5c2.  v2:= temp @kind object;
  #L0fa5c4.  if v2 != 0 then goto L0fa5ce;
  #L0fa5c8.  v1:= (`kotlinx.coroutines.channels.Send`) v1 @kind object;
  #L0fa5cc.  return v1 @kind object;
  #L0fa5ce.  call `helpRemovePrev`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.helpRemovePrev:()V` @kind virtual;
  #L0fa5d4.  goto L0fa580;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.AbstractSendChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0fa344.  v0:= new `java.lang.StringBuilder`;
  #L0fa348.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0fa34e.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0fa354.  v1:= temp @kind object;
  #L0fa356.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa35c.  v1:= 64I;
  #L0fa360.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa366.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0fa36c.  v1:= temp @kind object;
  #L0fa36e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa374.  v1:= 123I;
  #L0fa378.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa37e.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.b:()Ljava/lang/String;` @kind direct;
  #L0fa384.  v1:= temp @kind object;
  #L0fa386.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa38c.  v1:= 125I;
  #L0fa390.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa396.  call temp:= `getBufferDebugString`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getBufferDebugString:()Ljava/lang/String;` @kind virtual;
  #L0fa39c.  v1:= temp @kind object;
  #L0fa39e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fa3a4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fa3aa.  v0:= temp @kind object;
  #L0fa3ac.  return v0 @kind object;
}
procedure `java.lang.Object` `trySend-JP2dKIU`(`kotlinx.coroutines.channels.AbstractSendChannel` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.trySend-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0fa1a8.  call temp:= `offerInternal`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.offerInternal:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0fa1ae.  v3:= temp @kind object;
  #L0fa1b0.  v0:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa1b4.  if v3 != v0 then goto L0fa1ca;
  #L0fa1b8.  v3:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0fa1bc.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0fa1c0.  call temp:= `success-JP2dKIU`(v3, v0) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.success-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0fa1c6.  v3:= temp @kind object;
  #L0fa1c8.  goto L0fa222;
  #L0fa1ca.  v0:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fa1ce.  if v3 != v0 then goto L0fa202;
  #L0fa1d2.  call temp:= `getClosedForSend`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0fa1d8.  v3:= temp @kind object;
  #L0fa1da.  if v3 != 0 then goto L0fa1ec;
  #L0fa1de.  v3:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0fa1e2.  call temp:= `failure-PtdJZtk`(v3) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.failure-PtdJZtk:()Ljava/lang/Object;` @kind virtual;
  #L0fa1e8.  v3:= temp @kind object;
  #L0fa1ea.  return v3 @kind object;
  #L0fa1ec.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0fa1f0.  call temp:= `e`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.e:(Lkotlinx/coroutines/channels/Closed;)Ljava/lang/Throwable;` @kind direct;
  #L0fa1f6.  v3:= temp @kind object;
  #L0fa1f8.  call temp:= `closed-JP2dKIU`(v0, v3) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L0fa1fe.  v3:= temp @kind object;
  #L0fa200.  goto L0fa222;
  #L0fa202.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fa206.  if v0 == 0 then goto L0fa224;
  #L0fa20a.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L0fa20e.  v3:= (`kotlinx.coroutines.channels.Closed`) v3 @kind object;
  #L0fa212.  call temp:= `e`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.e:(Lkotlinx/coroutines/channels/Closed;)Ljava/lang/Throwable;` @kind direct;
  #L0fa218.  v3:= temp @kind object;
  #L0fa21a.  call temp:= `closed-JP2dKIU`(v0, v3) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L0fa220.  v3:= temp @kind object;
  #L0fa222.  return v3 @kind object;
  #L0fa224.  v0:= new `java.lang.IllegalStateException`;
  #L0fa228.  v1:= "trySend returned " @kind object;
  #L0fa22c.  call temp:= `stringPlus`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0fa232.  v3:= temp @kind object;
  #L0fa234.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fa23a.  v3:= temp @kind object;
  #L0fa23c.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fa242.  throw v0;
}
