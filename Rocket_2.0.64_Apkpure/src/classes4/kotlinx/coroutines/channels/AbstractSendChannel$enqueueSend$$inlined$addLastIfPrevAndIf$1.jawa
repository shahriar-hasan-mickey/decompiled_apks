record `kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp` @kind class {
  `kotlinx.coroutines.internal.LockFreeLinkedListNode` `kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.AbstractSendChannel` `kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `kotlinx.coroutines.channels.AbstractSendChannel` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/channels/AbstractSendChannel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f9d30.  v0.`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1.b` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` := v1 @kind object;
  #L0f9d34.  v0.`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1.c` @type ^`kotlinx.coroutines.channels.AbstractSendChannel` := v2 @kind object;
  #L0f9d38.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$CondAddOp;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind direct;
  #L0f9d3e.  return @kind void;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1;.prepare:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0f9ce0.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L0f9ce4.  call temp:= `prepare`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1;.prepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @kind virtual;
  #L0f9cea.  v1:= temp @kind object;
  #L0f9cec.  return v1 @kind object;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1;.prepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L0f9d00.  v1:= v0.`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1.c` @type ^`kotlinx.coroutines.channels.AbstractSendChannel` @kind object;
  #L0f9d04.  call temp:= `isBufferFull`(v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.isBufferFull:()Z` @kind virtual;
  #L0f9d0a.  v1:= temp;
  #L0f9d0c.  if v1 == 0 then goto L0f9d14;
  #L0f9d10.  v1:= 0I;
  #L0f9d12.  goto L0f9d1c;
  #L0f9d14.  call temp:= `getCONDITION_FALSE`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getCONDITION_FALSE:()Ljava/lang/Object;` @kind static;
  #L0f9d1a.  v1:= temp @kind object;
  #L0f9d1c.  return v1 @kind object;
}
