record `kotlinx.coroutines.channels.AbstractSendChannel$a` @kind class @AccessFlag  extends `kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` @kind class {
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractSendChannel$a` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListHead` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$a;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListHead;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0f999c.  v0:= new `kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered`;
  #L0f99a0.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$SendBuffered;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L0f99a6.  call `<init>`(v1, v2, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind direct;
  #L0f99ac.  return @kind void;
}
procedure `java.lang.Object` `failure`(`kotlinx.coroutines.channels.AbstractSendChannel$a` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$a;.failure:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0f9970.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f9974.  if v0 == 0 then goto L0f997a;
  #L0f9978.  goto L0f998a;
  #L0f997a.  v2:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.ReceiveOrClosed` @kind boolean;
  #L0f997e.  if v2 == 0 then goto L0f9988;
  #L0f9982.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f9986.  goto L0f998a;
  #L0f9988.  v2:= 0I;
  #L0f998a.  return v2 @kind object;
}
