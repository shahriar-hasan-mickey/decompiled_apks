record `kotlinx.coroutines.channels.SendChannel$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `close$default`(`kotlinx.coroutines.channels.SendChannel` v0 @kind object, `java.lang.Throwable` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.close$default:(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L104bbc.  if v3 != 0 then goto L104bd4;
  #L104bc0.  v2:= v2 ^& 1;
  #L104bc4.  if v2 == 0 then goto L104bca;
  #L104bc8.  v1:= 0I;
  #L104bca.  call temp:= `close`(v0, v1) @signature `Lkotlinx/coroutines/channels/SendChannel;.close:(Ljava/lang/Throwable;)Z` @kind interface;
  #L104bd0.  v0:= temp;
  #L104bd2.  return v0;
  #L104bd4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L104bd8.  v1:= "Super calls with default arguments not supported in this target, function: close" @kind object;
  #L104bdc.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L104be2.  throw v0;
}
procedure `void` `isClosedForSend$annotations`() @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.isClosedForSend$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L104c38.  return @kind void;
}
procedure `boolean` `offer`(`kotlinx.coroutines.channels.SendChannel` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.offer:(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L104bf4.  call temp:= `trySend-JP2dKIU`(v0, v1) @signature `Lkotlinx/coroutines/channels/SendChannel;.trySend-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L104bfa.  v0:= temp @kind object;
  #L104bfc.  call temp:= `isSuccess-impl`(v0) @signature `Lkotlinx/coroutines/channels/ChannelResult;.isSuccess-impl:(Ljava/lang/Object;)Z` @kind static;
  #L104c02.  v1:= temp;
  #L104c04.  if v1 == 0 then goto L104c0c;
  #L104c08.  v0:= 1I;
  #L104c0a.  return v0;
  #L104c0c.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lkotlinx/coroutines/channels/ChannelResult;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L104c12.  v0:= temp @kind object;
  #L104c14.  if v0 != 0 then goto L104c1c;
  #L104c18.  v0:= 0I;
  #L104c1a.  return v0;
  #L104c1c.  call temp:= `recoverStackTrace`(v0) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.recoverStackTrace:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L104c22.  v0:= temp @kind object;
  #L104c24.  throw v0;
}
