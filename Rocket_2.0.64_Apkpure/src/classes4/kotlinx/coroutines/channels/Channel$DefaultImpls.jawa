record `kotlinx.coroutines.channels.Channel$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.Channel` v0 @kind object) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.cancel:(Lkotlinx/coroutines/channels/Channel;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0fc94c.  call `cancel`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel$DefaultImpls;.cancel:(Lkotlinx/coroutines/channels/ReceiveChannel;)V` @kind static;
  #L0fc952.  return @kind void;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveOrNull`(`kotlinx.coroutines.channels.Channel` v0 @kind object) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.getOnReceiveOrNull:(Lkotlinx/coroutines/channels/Channel;)Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0fc930.  call temp:= `getOnReceiveOrNull`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel$DefaultImpls;.getOnReceiveOrNull:(Lkotlinx/coroutines/channels/ReceiveChannel;)Lkotlinx/coroutines/selects/SelectClause1;` @kind static;
  #L0fc936.  v0:= temp @kind object;
  #L0fc938.  return v0 @kind object;
}
procedure `boolean` `offer`(`kotlinx.coroutines.channels.Channel` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.offer:(Lkotlinx/coroutines/channels/Channel;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0fc8dc.  call temp:= `offer`(v0, v1) @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.offer:(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Object;)Z` @kind static;
  #L0fc8e2.  v0:= temp;
  #L0fc8e4.  return v0;
}
procedure `java.lang.Object` `poll`(`kotlinx.coroutines.channels.Channel` v0 @kind object) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.poll:(Lkotlinx/coroutines/channels/Channel;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0fc8f8.  call temp:= `poll`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel$DefaultImpls;.poll:(Lkotlinx/coroutines/channels/ReceiveChannel;)Ljava/lang/Object;` @kind static;
  #L0fc8fe.  v0:= temp @kind object;
  #L0fc900.  return v0 @kind object;
}
procedure `java.lang.Object` `receiveOrNull`(`kotlinx.coroutines.channels.Channel` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.receiveOrNull:(Lkotlinx/coroutines/channels/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0fc914.  call temp:= `receiveOrNull`(v0, v1) @signature `Lkotlinx/coroutines/channels/ReceiveChannel$DefaultImpls;.receiveOrNull:(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L0fc91a.  v0:= temp @kind object;
  #L0fc91c.  return v0 @kind object;
}
