record `kotlinx.coroutines.channels.BufferOverflow` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.channels.BufferOverflow` `@@kotlinx.coroutines.channels.BufferOverflow.DROP_LATEST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.channels.BufferOverflow` `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.channels.BufferOverflow` `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.channels.BufferOverflow`[] `@@kotlinx.coroutines.channels.BufferOverflow.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0fc868.  v0:= new `kotlinx.coroutines.channels.BufferOverflow`;
  #L0fc86c.  v1:= "SUSPEND" @kind object;
  #L0fc870.  v2:= 0I;
  #L0fc872.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/BufferOverflow;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0fc878.  `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` := v0 @kind object;
  #L0fc87c.  v0:= new `kotlinx.coroutines.channels.BufferOverflow`;
  #L0fc880.  v1:= "DROP_OLDEST" @kind object;
  #L0fc884.  v2:= 1I;
  #L0fc886.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/BufferOverflow;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0fc88c.  `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` := v0 @kind object;
  #L0fc890.  v0:= new `kotlinx.coroutines.channels.BufferOverflow`;
  #L0fc894.  v1:= "DROP_LATEST" @kind object;
  #L0fc898.  v2:= 2I;
  #L0fc89a.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/BufferOverflow;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0fc8a0.  `@@kotlinx.coroutines.channels.BufferOverflow.DROP_LATEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` := v0 @kind object;
  #L0fc8a4.  call temp:= `a`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.a:()[Lkotlinx/coroutines/channels/BufferOverflow;` @kind static;
  #L0fc8aa.  v0:= temp @kind object;
  #L0fc8ac.  `@@kotlinx.coroutines.channels.BufferOverflow.a` @type ^`kotlinx.coroutines.channels.BufferOverflow`[] := v0 @kind object;
  #L0fc8b0.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.BufferOverflow` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/channels/BufferOverflow;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0fc8c4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0fc8ca.  return @kind void;
}
procedure `kotlinx.coroutines.channels.BufferOverflow`[] `a`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.a:()[Lkotlinx/coroutines/channels/BufferOverflow;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L0fc80c.  v0:= 3I;
  #L0fc80e.  v0:= new `kotlinx.coroutines.channels.BufferOverflow`[v0];
  #L0fc812.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L0fc816.  v2:= 0I;
  #L0fc818.  v0[v2]:= v1 @kind object;
  #L0fc81c.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L0fc820.  v2:= 1I;
  #L0fc822.  v0[v2]:= v1 @kind object;
  #L0fc826.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_LATEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L0fc82a.  v2:= 2I;
  #L0fc82c.  v0[v2]:= v1 @kind object;
  #L0fc830.  return v0 @kind object;
}
procedure `kotlinx.coroutines.channels.BufferOverflow` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/channels/BufferOverflow;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/channels/BufferOverflow;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0fc7e8.  v0:= constclass @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L0fc7ec.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L0fc7f2.  v1:= temp @kind object;
  #L0fc7f4.  v1:= (`kotlinx.coroutines.channels.BufferOverflow`) v1 @kind object;
  #L0fc7f8.  return v1 @kind object;
}
procedure `kotlinx.coroutines.channels.BufferOverflow`[] `values`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.values:()[Lkotlinx/coroutines/channels/BufferOverflow;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0fc844.  v0:= `@@kotlinx.coroutines.channels.BufferOverflow.a` @type ^`kotlinx.coroutines.channels.BufferOverflow`[] @kind object;
  #L0fc848.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L0fc84e.  v0:= temp @kind object;
  #L0fc850.  v0:= (`kotlinx.coroutines.channels.BufferOverflow`[]) v0 @kind object;
  #L0fc854.  return v0 @kind object;
}
