record `kotlinx.coroutines.channels.AbstractChannel$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.channels.ChannelIterator` @kind interface {
  `kotlinx.coroutines.channels.AbstractChannel` `kotlinx.coroutines.channels.AbstractChannel$a.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `kotlinx.coroutines.channels.AbstractChannel$a.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractChannel$a` v0 @kind this, `kotlinx.coroutines.channels.AbstractChannel` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f87d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0f87de.  v0.`kotlinx.coroutines.channels.AbstractChannel$a.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` := v1 @kind object;
  #L0f87e2.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f87e6.  v0.`kotlinx.coroutines.channels.AbstractChannel$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L0f87ea.  return @kind void;
}
procedure `boolean` `b`(`kotlinx.coroutines.channels.AbstractChannel$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.b:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f8594.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f8598.  if v0 == 0 then goto L0f85be;
  #L0f859c.  v2:= (`kotlinx.coroutines.channels.Closed`) v2 @kind object;
  #L0f85a0.  v0:= v2.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0f85a4.  if v0 != 0 then goto L0f85ac;
  #L0f85a8.  v2:= 0I;
  #L0f85aa.  return v2;
  #L0f85ac.  call temp:= `getReceiveException`(v2) @signature `Lkotlinx/coroutines/channels/Closed;.getReceiveException:()Ljava/lang/Throwable;` @kind virtual;
  #L0f85b2.  v2:= temp @kind object;
  #L0f85b4.  call temp:= `recoverStackTrace`(v2) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.recoverStackTrace:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L0f85ba.  v2:= temp @kind object;
  #L0f85bc.  throw v2;
  #L0f85be.  v2:= 1I;
  #L0f85c0.  return v2;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.channels.AbstractChannel$a` v5 @kind this, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.c:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0f8668.  call temp:= `intercepted`(v6) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L0f866e.  v0:= temp @kind object;
  #L0f8670.  call temp:= `getOrCreateCancellableContinuation`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.getOrCreateCancellableContinuation:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/CancellableContinuationImpl;` @kind static;
  #L0f8676.  v0:= temp @kind object;
  #L0f8678.  v1:= new `kotlinx.coroutines.channels.AbstractChannel$d`;
  #L0f867c.  call `<init>`(v1, v5, v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel$a;Lkotlinx/coroutines/CancellableContinuation;)V` @kind direct;
  #L0f8682.  v2:= v5.`kotlinx.coroutines.channels.AbstractChannel$a.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L0f8686.  call temp:= `access$enqueueReceive`(v2, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$enqueueReceive:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/channels/Receive;)Z` @kind static;
  #L0f868c.  v2:= temp;
  #L0f868e.  if v2 == 0 then goto L0f869e;
  #L0f8692.  v2:= v5.`kotlinx.coroutines.channels.AbstractChannel$a.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L0f8696.  call `access$removeReceiveOnCancel`(v2, v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$removeReceiveOnCancel:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/channels/Receive;)V` @kind static;
  #L0f869c.  goto L0f873e;
  #L0f869e.  v2:= v5.`kotlinx.coroutines.channels.AbstractChannel$a.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L0f86a2.  call temp:= `pollInternal`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @kind virtual;
  #L0f86a8.  v2:= temp @kind object;
  #L0f86aa.  call `d`(v5, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L0f86b0.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f86b4.  if v3 == 0 then goto L0f8706;
  #L0f86b8.  v2:= (`kotlinx.coroutines.channels.Closed`) v2 @kind object;
  #L0f86bc.  v1:= v2.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L0f86c0.  if v1 != 0 then goto L0f86e2;
  #L0f86c4.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0f86c8.  v1:= 0I;
  #L0f86ca.  call temp:= `boxBoolean`(v1) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L0f86d0.  v1:= temp @kind object;
  #L0f86d2.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f86d8.  v1:= temp @kind object;
  #L0f86da.  call `resumeWith`(v0, v1) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L0f86e0.  goto L0f873e;
  #L0f86e2.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0f86e6.  call temp:= `getReceiveException`(v2) @signature `Lkotlinx/coroutines/channels/Closed;.getReceiveException:()Ljava/lang/Throwable;` @kind virtual;
  #L0f86ec.  v1:= temp @kind object;
  #L0f86ee.  call temp:= `createFailure`(v1) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L0f86f4.  v1:= temp @kind object;
  #L0f86f6.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f86fc.  v1:= temp @kind object;
  #L0f86fe.  call `resumeWith`(v0, v1) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L0f8704.  goto L0f873e;
  #L0f8706.  v3:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f870a.  if v2 == v3 then goto L0f8682;
  #L0f870e.  v1:= 1I;
  #L0f8710.  call temp:= `boxBoolean`(v1) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L0f8716.  v1:= temp @kind object;
  #L0f8718.  v3:= v5.`kotlinx.coroutines.channels.AbstractChannel$a.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L0f871c.  v3:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L0f8720.  if v3 != 0 then goto L0f8728;
  #L0f8724.  v2:= 0I;
  #L0f8726.  goto L0f8738;
  #L0f8728.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f872e.  v4:= temp @kind object;
  #L0f8730.  call temp:= `bindCancellationFun`(v3, v2, v4) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.bindCancellationFun:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/CoroutineContext;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L0f8736.  v2:= temp @kind object;
  #L0f8738.  call `resume`(v0, v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuation;.resume:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L0f873e.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0f8744.  v0:= temp @kind object;
  #L0f8746.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f874c.  v1:= temp @kind object;
  #L0f874e.  if v0 != v1 then goto L0f8758;
  #L0f8752.  call `probeCoroutineSuspended`(v6) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f8758.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.channels.AbstractChannel$a` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f85d4.  v0:= v1.`kotlinx.coroutines.channels.AbstractChannel$a.b` @type ^`java.lang.Object` @kind object;
  #L0f85d8.  return v0 @kind object;
}
procedure `void` `d`(`kotlinx.coroutines.channels.AbstractChannel$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.d:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f87fc.  v0.`kotlinx.coroutines.channels.AbstractChannel$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L0f8800.  return @kind void;
}
procedure `java.lang.Object` `hasNext`(`kotlinx.coroutines.channels.AbstractChannel$a` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.hasNext:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f85ec.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L0f85f2.  v0:= temp @kind object;
  #L0f85f4.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f85f8.  if v0 == v1 then goto L0f8616;
  #L0f85fc.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L0f8602.  v3:= temp @kind object;
  #L0f8604.  call temp:= `b`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.b:(Ljava/lang/Object;)Z` @kind direct;
  #L0f860a.  v3:= temp;
  #L0f860c.  call temp:= `boxBoolean`(v3) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L0f8612.  v3:= temp @kind object;
  #L0f8614.  return v3 @kind object;
  #L0f8616.  v0:= v2.`kotlinx.coroutines.channels.AbstractChannel$a.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L0f861a.  call temp:= `pollInternal`(v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @kind virtual;
  #L0f8620.  v0:= temp @kind object;
  #L0f8622.  call `d`(v2, v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L0f8628.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L0f862e.  v0:= temp @kind object;
  #L0f8630.  if v0 == v1 then goto L0f864e;
  #L0f8634.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.a:()Ljava/lang/Object;` @kind virtual;
  #L0f863a.  v3:= temp @kind object;
  #L0f863c.  call temp:= `b`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.b:(Ljava/lang/Object;)Z` @kind direct;
  #L0f8642.  v3:= temp;
  #L0f8644.  call temp:= `boxBoolean`(v3) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L0f864a.  v3:= temp @kind object;
  #L0f864c.  return v3 @kind object;
  #L0f864e.  call temp:= `c`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.c:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L0f8654.  v3:= temp @kind object;
  #L0f8656.  return v3 @kind object;
}
procedure `java.lang.Object` `next`(`kotlinx.coroutines.channels.AbstractChannel$a` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f876c.  v0:= v2.`kotlinx.coroutines.channels.AbstractChannel$a.b` @type ^`java.lang.Object` @kind object;
  #L0f8770.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0f8774.  if v1 != 0 then goto L0f8796;
  #L0f8778.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f877c.  if v0 == v1 then goto L0f8786;
  #L0f8780.  v2.`kotlinx.coroutines.channels.AbstractChannel$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L0f8784.  return v0 @kind object;
  #L0f8786.  v0:= new `java.lang.IllegalStateException`;
  #L0f878a.  v1:= "'hasNext' should be called prior to 'next' invocation" @kind object;
  #L0f878e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f8794.  throw v0;
  #L0f8796.  v0:= (`kotlinx.coroutines.channels.Closed`) v0 @kind object;
  #L0f879a.  call temp:= `getReceiveException`(v0) @signature `Lkotlinx/coroutines/channels/Closed;.getReceiveException:()Ljava/lang/Throwable;` @kind virtual;
  #L0f87a0.  v0:= temp @kind object;
  #L0f87a2.  call temp:= `recoverStackTrace`(v0) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.recoverStackTrace:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L0f87a8.  v0:= temp @kind object;
  #L0f87aa.  throw v0;
}
procedure `java.lang.Object` `next`(`kotlinx.coroutines.channels.AbstractChannel$a` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.next:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0f87bc.  call temp:= `next`(v0, v1) @signature `Lkotlinx/coroutines/channels/ChannelIterator$DefaultImpls;.next:(Lkotlinx/coroutines/channels/ChannelIterator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L0f87c2.  v1:= temp @kind object;
  #L0f87c4.  return v1 @kind object;
}
