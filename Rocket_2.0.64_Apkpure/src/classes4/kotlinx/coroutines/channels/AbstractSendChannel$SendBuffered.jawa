record `kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.channels.Send` @kind class {
  `java.lang.Object` `kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered.element` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$SendBuffered;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f9a58.  call `<init>`(v0) @signature `Lkotlinx/coroutines/channels/Send;.<init>:()V` @kind direct;
  #L0f9a5e.  v0.`kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered.element` @type ^`java.lang.Object` := v1 @kind object;
  #L0f9a62.  return @kind void;
}
procedure `void` `completeResumeSend`(`kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered` v0 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$SendBuffered;.completeResumeSend:()V` @AccessFlag PUBLIC {
    temp;

  #L0f9a74.  return @kind void;
}
procedure `java.lang.Object` `getPollResult`(`kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$SendBuffered;.getPollResult:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f99c0.  v0:= v1.`kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered.element` @type ^`java.lang.Object` @kind object;
  #L0f99c4.  return v0 @kind object;
}
procedure `void` `resumeSendClosed`(`kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered` v0 @kind this, `kotlinx.coroutines.channels.Closed` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$SendBuffered;.resumeSendClosed:(Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PUBLIC {
    temp;

  #L0f9a88.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$SendBuffered;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f99d8.  v0:= new `java.lang.StringBuilder`;
  #L0f99dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f99e2.  v1:= "SendBuffered@" @kind object;
  #L0f99e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f99ec.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f99f2.  v1:= temp @kind object;
  #L0f99f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f99fa.  v1:= 40I;
  #L0f99fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f9a04.  v1:= v2.`kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered.element` @type ^`java.lang.Object` @kind object;
  #L0f9a08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f9a0e.  v1:= 41I;
  #L0f9a12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f9a18.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f9a1e.  v0:= temp @kind object;
  #L0f9a20.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `tryResumeSend`(`kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$SendBuffered;.tryResumeSend:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f9a34.  v0:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f9a38.  if v2 != 0 then goto L0f9a3e;
  #L0f9a3c.  goto L0f9a44;
  #L0f9a3e.  call `finishPrepare`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.finishPrepare:()V` @kind virtual;
  #L0f9a44.  return v0 @kind object;
}
