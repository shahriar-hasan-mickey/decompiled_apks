record `kotlinx.coroutines.channels.ReceiveChannel` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `cancel`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.cancel:()V` @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {

  # return;
}
procedure `void` `cancel`(`java.util.concurrent.CancellationException` v0 @kind object) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `cancel`(`java.lang.Throwable` v0 @kind object) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {

  # return;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceive`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.getOnReceive:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveCatching`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.getOnReceiveCatching:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveOrNull`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.getOnReceiveOrNull:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isClosedForReceive`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.isClosedForReceive:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.channels.ChannelIterator` `iterator`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.iterator:()Lkotlinx/coroutines/channels/ChannelIterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `poll`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `receive`(`kotlin.coroutines.Continuation` v0 @kind object) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.receive:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `receiveCatching-JP2dKIU`(`kotlin.coroutines.Continuation` v0 @kind object) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.receiveCatching-JP2dKIU:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `receiveOrNull`(`kotlin.coroutines.Continuation` v0 @kind object) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.receiveOrNull:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `tryReceive-PtdJZtk`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.tryReceive-PtdJZtk:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
