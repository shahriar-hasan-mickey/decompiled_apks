record `kotlinx.coroutines.channels.ArrayBroadcastChannel` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.channels.AbstractSendChannel` @kind class, `kotlinx.coroutines.channels.BroadcastChannel` @kind interface {
  `long` `kotlinx.coroutines.channels.ArrayBroadcastChannel._head` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.channels.ArrayBroadcastChannel._size` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `long` `kotlinx.coroutines.channels.ArrayBroadcastChannel._tail` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.channels.ArrayBroadcastChannel.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.locks.ReentrantLock` `kotlinx.coroutines.channels.ArrayBroadcastChannel.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object`[] `kotlinx.coroutines.channels.ArrayBroadcastChannel.e` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `kotlinx.coroutines.channels.ArrayBroadcastChannel.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v3 @kind this, `int` v4 ) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0fb44c.  v0:= 0I;
  #L0fb44e.  call `<init>`(v3, v0) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0fb454.  v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel.c` @type ^`int` := v4;
  #L0fb458.  v0:= 0I;
  #L0fb45a.  v1:= 1I;
  #L0fb45c.  if v4 < v1 then goto L0fb462;
  #L0fb460.  goto L0fb464;
  #L0fb462.  v1:= 0I;
  #L0fb464.  if v1 == 0 then goto L0fb49c;
  #L0fb468.  v1:= new `java.util.concurrent.locks.ReentrantLock`;
  #L0fb46c.  call `<init>`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L0fb472.  v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel.d` @type ^`java.util.concurrent.locks.ReentrantLock` := v1 @kind object;
  #L0fb476.  v4:= new `java.lang.Object`[v4];
  #L0fb47a.  v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel.e` @type ^`java.lang.Object`[] := v4 @kind object;
  #L0fb47e.  v1:= 0L;
  #L0fb482.  v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel._head` @type ^`long` := v1 @kind wide;
  #L0fb486.  v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel._tail` @type ^`long` := v1 @kind wide;
  #L0fb48a.  v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel._size` @type ^`int` := v0;
  #L0fb48e.  call temp:= `subscriberList`() @signature `Lkotlinx/coroutines/internal/ConcurrentKt;.subscriberList:()Ljava/util/List;` @kind static;
  #L0fb494.  v4:= temp @kind object;
  #L0fb496.  v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel.f` @type ^`java.util.List` := v4 @kind object;
  #L0fb49a.  return @kind void;
  #L0fb49c.  v4:= new `java.lang.StringBuilder`;
  #L0fb4a0.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0fb4a6.  v0:= "ArrayBroadcastChannel capacity must be at least 1, but " @kind object;
  #L0fb4aa.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fb4b0.  call temp:= `getCapacity`(v3) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.getCapacity:()I` @kind virtual;
  #L0fb4b6.  v0:= temp;
  #L0fb4b8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fb4be.  v0:= " was specified" @kind object;
  #L0fb4c2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fb4c8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fb4ce.  v4:= temp @kind object;
  #L0fb4d0.  v0:= new `java.lang.IllegalArgumentException`;
  #L0fb4d4.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fb4da.  v4:= temp @kind object;
  #L0fb4dc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0fb4e2.  throw v0;
}
procedure `java.lang.Object` `access$elementAt`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v0 @kind object, `long` v1 ) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.access$elementAt:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;J)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0fb154.  call temp:= `n`(v0, v1) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.n:(J)Ljava/lang/Object;` @kind direct;
  #L0fb15a.  v0:= temp @kind object;
  #L0fb15c.  return v0 @kind object;
}
procedure `long` `access$getTail`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.access$getTail:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L0fb3ac.  call temp:= `q`(v2) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.q:()J` @kind direct;
  #L0fb3b2.  v0:= temp @kind wide;
  #L0fb3b4.  return v0 @kind wide;
}
procedure `boolean` `k`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.k:(Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fb074.  call temp:= `close`(v3, v4) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.close:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0fb07a.  v0:= temp;
  #L0fb07c.  v1:= v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel.f` @type ^`java.util.List` @kind object;
  #L0fb080.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0fb086.  v1:= temp @kind object;
  #L0fb088.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0fb08e.  v2:= temp;
  #L0fb090.  if v2 == 0 then goto L0fb0a8;
  #L0fb094.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0fb09a.  v2:= temp @kind object;
  #L0fb09c.  v2:= (`kotlinx.coroutines.channels.ArrayBroadcastChannel$a`) v2 @kind object;
  #L0fb0a0.  call temp:= `cancelInternal$kotlinx_coroutines_core`(v2, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancelInternal$kotlinx_coroutines_core:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0fb0a6.  goto L0fb088;
  #L0fb0a8.  return v0;
}
procedure `void` `l`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v5 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.l:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0fb50c.  v0:= v5.`kotlinx.coroutines.channels.ArrayBroadcastChannel.f` @type ^`java.util.List` @kind object;
  #L0fb510.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0fb516.  v0:= temp @kind object;
  #L0fb518.  v1:= 1I;
  #L0fb51a.  v2:= 0I;
  #L0fb51c.  v3:= 0I;
  #L0fb51e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0fb524.  v4:= temp;
  #L0fb526.  if v4 == 0 then goto L0fb548;
  #L0fb52a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0fb530.  v3:= temp @kind object;
  #L0fb532.  v3:= (`kotlinx.coroutines.channels.ArrayBroadcastChannel$a`) v3 @kind object;
  #L0fb536.  call temp:= `q`(v3) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.q:()Z` @kind virtual;
  #L0fb53c.  v3:= temp;
  #L0fb53e.  if v3 == 0 then goto L0fb544;
  #L0fb542.  v2:= 1I;
  #L0fb544.  v3:= 1I;
  #L0fb546.  goto L0fb51e;
  #L0fb548.  if v2 != 0 then goto L0fb550;
  #L0fb54c.  if v3 != 0 then goto L0fb55a;
  #L0fb550.  v0:= 3I;
  #L0fb552.  v1:= 0I;
  #L0fb554.  call `v`(v5, v1, v1, v0, v1) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.v:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;ILjava/lang/Object;)V` @kind static;
  #L0fb55a.  return @kind void;
}
procedure `long` `m`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v5 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.m:()J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0fb3c8.  v0:= v5.`kotlinx.coroutines.channels.ArrayBroadcastChannel.f` @type ^`java.util.List` @kind object;
  #L0fb3cc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0fb3d2.  v0:= temp @kind object;
  #L0fb3d4.  v1:= 9223372036854775807L;
  #L0fb3de.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0fb3e4.  v3:= temp;
  #L0fb3e6.  if v3 == 0 then goto L0fb408;
  #L0fb3ea.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0fb3f0.  v3:= temp @kind object;
  #L0fb3f2.  v3:= (`kotlinx.coroutines.channels.ArrayBroadcastChannel$a`) v3 @kind object;
  #L0fb3f6.  call temp:= `r`(v3) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.r:()J` @kind virtual;
  #L0fb3fc.  v3:= temp @kind wide;
  #L0fb3fe.  call temp:= `coerceAtMost`(v1, v3) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(JJ)J` @kind static;
  #L0fb404.  v1:= temp @kind wide;
  #L0fb406.  goto L0fb3de;
  #L0fb408.  return v1 @kind wide;
}
procedure `java.lang.Object` `n`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v3 @kind this, `long` v4 ) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.n:(J)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0fb170.  v0:= v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel.e` @type ^`java.lang.Object`[] @kind object;
  #L0fb174.  v1:= v3.`kotlinx.coroutines.channels.ArrayBroadcastChannel.c` @type ^`int`;
  #L0fb178.  v1:= (`long`) v1 @kind i2l;
  #L0fb17a.  v4:= v4 %% v1 @kind long;
  #L0fb17c.  v5:= (`int`) v4 @kind l2i;
  #L0fb17e.  v4:= v0[v5] @kind object;
  #L0fb182.  return v4 @kind object;
}
procedure `long` `o`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.o:()J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0fb41c.  v0:= v2.`kotlinx.coroutines.channels.ArrayBroadcastChannel._head` @type ^`long` @kind wide;
  #L0fb420.  return v0 @kind wide;
}
procedure `int` `p`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.p:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0fb13c.  v0:= v1.`kotlinx.coroutines.channels.ArrayBroadcastChannel._size` @type ^`int`;
  #L0fb140.  return v0;
}
procedure `long` `q`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.q:()J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0fb434.  v0:= v2.`kotlinx.coroutines.channels.ArrayBroadcastChannel._tail` @type ^`long` @kind wide;
  #L0fb438.  return v0 @kind wide;
}
procedure `void` `r`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v0 @kind this, `long` v1 ) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.r:(J)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L0fb56c.  v0.`kotlinx.coroutines.channels.ArrayBroadcastChannel._head` @type ^`long` := v1 @kind wide;
  #L0fb570.  return @kind void;
}
procedure `void` `s`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v0 @kind this, `int` v1 ) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.s:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L0fb584.  v0.`kotlinx.coroutines.channels.ArrayBroadcastChannel._size` @type ^`int` := v1;
  #L0fb588.  return @kind void;
}
procedure `void` `t`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v0 @kind this, `long` v1 ) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.t:(J)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L0fb59c.  v0.`kotlinx.coroutines.channels.ArrayBroadcastChannel._tail` @type ^`long` := v1 @kind wide;
  #L0fb5a0.  return @kind void;
}
procedure `void` `u`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v11 @kind this, `kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v12 @kind object, `kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v13 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.u:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L0fb5e4.  v0:= 0I;
  #L0fb5e6.  v1:= v11.`kotlinx.coroutines.channels.ArrayBroadcastChannel.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0fb5ea.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L0fb5f0.  if v12 == 0 then goto L0fb62a;
  #L0fb5f4.  call temp:= `q`(v11) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.q:()J` @kind direct;
  #L0fb5fa.  v2:= temp @kind wide;
  #L0fb5fc.  call `u`(v12, v2) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.u:(J)V` @kind virtual;
  #L0fb602.  v2:= v11.`kotlinx.coroutines.channels.ArrayBroadcastChannel.f` @type ^`java.util.List` @kind object;
  #L0fb606.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L0fb60c.  v2:= temp;
  #L0fb60e.  v3:= v11.`kotlinx.coroutines.channels.ArrayBroadcastChannel.f` @type ^`java.util.List` @kind object;
  #L0fb612.  call temp:= `add`(v3, v12) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0fb618.  if v2 != 0 then goto L0fb62a;
  #L0fb61c.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb622.  return @kind void;
  #L0fb624.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0fb626.  goto L0fb758;
  #L0fb62a.  if v13 == 0 then goto L0fb658;
  #L0fb62e.  v12:= v11.`kotlinx.coroutines.channels.ArrayBroadcastChannel.f` @type ^`java.util.List` @kind object;
  #L0fb632.  call temp:= `remove`(v12, v13) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L0fb638.  call temp:= `o`(v11) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.o:()J` @kind direct;
  #L0fb63e.  v2:= temp @kind wide;
  #L0fb640.  call temp:= `r`(v13) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.r:()J` @kind virtual;
  #L0fb646.  v12:= temp @kind wide;
  #L0fb648.  v4:= lcmp(v2, v12);
  #L0fb64c.  if v4 == 0 then goto L0fb658;
  #L0fb650.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb656.  return @kind void;
  #L0fb658.  call temp:= `m`(v11) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.m:()J` @kind direct;
  #L0fb65e.  v12:= temp @kind wide;
  #L0fb660.  call temp:= `q`(v11) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.q:()J` @kind direct;
  #L0fb666.  v2:= temp @kind wide;
  #L0fb668.  call temp:= `o`(v11) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.o:()J` @kind direct;
  #L0fb66e.  v4:= temp @kind wide;
  #L0fb670.  call temp:= `coerceAtMost`(v12, v2) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(JJ)J` @kind static;
  #L0fb676.  v12:= temp @kind wide;
  #L0fb678.  v6:= lcmp(v12, v4);
  #L0fb67c.  if v6 > 0 then goto L0fb688;
  #L0fb680.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb686.  return @kind void;
  #L0fb688.  call temp:= `p`(v11) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.p:()I` @kind direct;
  #L0fb68e.  v6:= temp;
  #L0fb690.  v7:= lcmp(v4, v12);
  #L0fb694.  if v7 >= 0 then goto L0fb750;
  #L0fb698.  v7:= v11.`kotlinx.coroutines.channels.ArrayBroadcastChannel.e` @type ^`java.lang.Object`[] @kind object;
  #L0fb69c.  call temp:= `getCapacity`(v11) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.getCapacity:()I` @kind virtual;
  #L0fb6a2.  v8:= temp;
  #L0fb6a4.  v8:= (`long`) v8 @kind i2l;
  #L0fb6a6.  v8:= v4 %% v8 @kind long;
  #L0fb6aa.  v9:= (`int`) v8 @kind l2i;
  #L0fb6ac.  v7[v9]:= v0 @kind object;
  #L0fb6b0.  call temp:= `getCapacity`(v11) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.getCapacity:()I` @kind virtual;
  #L0fb6b6.  v7:= temp;
  #L0fb6b8.  if v6 < v7 then goto L0fb6c0;
  #L0fb6bc.  v7:= 1I;
  #L0fb6be.  goto L0fb6c2;
  #L0fb6c0.  v7:= 0I;
  #L0fb6c2.  v8:= 1L;
  #L0fb6c6.  v4:= v4 + v8 @kind long;
  #L0fb6c8.  call `r`(v11, v4) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.r:(J)V` @kind direct;
  #L0fb6ce.  v6:= v6 + -1;
  #L0fb6d2.  call `s`(v11, v6) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.s:(I)V` @kind direct;
  #L0fb6d8.  if v7 == 0 then goto L0fb690;
  #L0fb6dc.  call temp:= `takeFirstSendOrPeekClosed`(v11) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.takeFirstSendOrPeekClosed:()Lkotlinx/coroutines/channels/Send;` @kind virtual;
  #L0fb6e2.  v7:= temp @kind object;
  #L0fb6e4.  if v7 != 0 then goto L0fb6ea;
  #L0fb6e8.  goto L0fb690;
  #L0fb6ea.  v10:= instanceof @variable v7 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L0fb6ee.  if v10 == 0 then goto L0fb6f4;
  #L0fb6f2.  goto L0fb690;
  #L0fb6f4.  call temp:= `tryResumeSend`(v7, v0) @signature `Lkotlinx/coroutines/channels/Send;.tryResumeSend:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @kind virtual;
  #L0fb6fa.  v10:= temp @kind object;
  #L0fb6fc.  if v10 == 0 then goto L0fb6dc;
  #L0fb700.  v12:= v11.`kotlinx.coroutines.channels.ArrayBroadcastChannel.e` @type ^`java.lang.Object`[] @kind object;
  #L0fb704.  call temp:= `getCapacity`(v11) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.getCapacity:()I` @kind virtual;
  #L0fb70a.  v13:= temp;
  #L0fb70c.  v4:= (`long`) v13 @kind i2l;
  #L0fb70e.  v4:= v2 %% v4 @kind long;
  #L0fb712.  v13:= (`int`) v4 @kind l2i;
  #L0fb714.  call temp:= `getPollResult`(v7) @signature `Lkotlinx/coroutines/channels/Send;.getPollResult:()Ljava/lang/Object;` @kind virtual;
  #L0fb71a.  v4:= temp @kind object;
  #L0fb71c.  v12[v13]:= v4 @kind object;
  #L0fb720.  v6:= v6 + 1;
  #L0fb724.  call `s`(v11, v6) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.s:(I)V` @kind direct;
  #L0fb72a.  v2:= v2 + v8 @kind long;
  #L0fb72c.  call `t`(v11, v2) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.t:(J)V` @kind direct;
  #L0fb732.  v12:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0fb736.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb73c.  call `completeResumeSend`(v7) @signature `Lkotlinx/coroutines/channels/Send;.completeResumeSend:()V` @kind virtual;
  #L0fb742.  call `l`(v11) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.l:()V` @kind direct;
  #L0fb748.  v12:= v0 @kind object;
  #L0fb74a.  v13:= v12 @kind object;
  #L0fb74c.  goto L0fb5e6;
  #L0fb750.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb756.  return @kind void;
  #L0fb758.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb75e.  throw v12;
  catch `java.lang.Throwable` @[L0fb5f4..L0fb618] goto L0fb624;
  catch `java.lang.Throwable` @[L0fb62e..L0fb648] goto L0fb624;
  catch `java.lang.Throwable` @[L0fb658..L0fb678] goto L0fb624;
  catch `java.lang.Throwable` @[L0fb688..L0fb736] goto L0fb624;
}
procedure `void` `v`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v1 @kind object, `kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v2 @kind object, `kotlinx.coroutines.channels.ArrayBroadcastChannel$a` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.v:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;ILjava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L0fb5b4.  v5:= v4 ^& 1;
  #L0fb5b8.  v0:= 0I;
  #L0fb5ba.  if v5 == 0 then goto L0fb5c0;
  #L0fb5be.  v2:= v0 @kind object;
  #L0fb5c0.  v4:= v4 ^& 2;
  #L0fb5c4.  if v4 == 0 then goto L0fb5ca;
  #L0fb5c8.  v3:= v0 @kind object;
  #L0fb5ca.  call `u`(v1, v2, v3) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.u:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;)V` @kind direct;
  #L0fb5d0.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v0 @kind this, `java.util.concurrent.CancellationException` v1 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC {
    temp;

  #L0fb4f4.  call temp:= `k`(v0, v1) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.k:(Ljava/lang/Throwable;)Z` @kind direct;
  #L0fb4fa.  return @kind void;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0fb058.  call temp:= `k`(v0, v1) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.k:(Ljava/lang/Throwable;)Z` @kind direct;
  #L0fb05e.  v1:= temp;
  #L0fb060.  return v1;
}
procedure `boolean` `close`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.close:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;

  #L0fb0bc.  call temp:= `close`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.close:(Ljava/lang/Throwable;)Z` @kind super;
  #L0fb0c2.  v1:= temp;
  #L0fb0c4.  if v1 != 0 then goto L0fb0cc;
  #L0fb0c8.  v1:= 0I;
  #L0fb0ca.  return v1;
  #L0fb0cc.  call `l`(v0) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.l:()V` @kind direct;
  #L0fb0d2.  v1:= 1I;
  #L0fb0d4.  return v1;
}
procedure `java.lang.String` `getBufferDebugString`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.getBufferDebugString:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L0fb328.  v0:= new `java.lang.StringBuilder`;
  #L0fb32c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0fb332.  v1:= "(buffer:capacity=" @kind object;
  #L0fb336.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fb33c.  v1:= v2.`kotlinx.coroutines.channels.ArrayBroadcastChannel.e` @type ^`java.lang.Object`[] @kind object;
  #L0fb340.  v1:= length @variable v1;
  #L0fb342.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fb348.  v1:= ",size=" @kind object;
  #L0fb34c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fb352.  call temp:= `p`(v2) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.p:()I` @kind direct;
  #L0fb358.  v1:= temp;
  #L0fb35a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fb360.  v1:= 41I;
  #L0fb364.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0fb36a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0fb370.  v0:= temp @kind object;
  #L0fb372.  return v0 @kind object;
}
procedure `int` `getCapacity`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.getCapacity:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0fb124.  v0:= v1.`kotlinx.coroutines.channels.ArrayBroadcastChannel.c` @type ^`int`;
  #L0fb128.  return v0;
}
procedure `boolean` `isBufferAlwaysFull`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.isBufferAlwaysFull:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0fb0e8.  v0:= 0I;
  #L0fb0ea.  return v0;
}
procedure `boolean` `isBufferFull`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.isBufferFull:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L0fb0fc.  call temp:= `p`(v2) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.p:()I` @kind direct;
  #L0fb102.  v0:= temp;
  #L0fb104.  v1:= v2.`kotlinx.coroutines.channels.ArrayBroadcastChannel.c` @type ^`int`;
  #L0fb108.  if v0 < v1 then goto L0fb110;
  #L0fb10c.  v0:= 1I;
  #L0fb10e.  goto L0fb112;
  #L0fb110.  v0:= 0I;
  #L0fb112.  return v0;
}
procedure `java.lang.Object` `offerInternal`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.offerInternal:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0fb194.  v0:= v7.`kotlinx.coroutines.channels.ArrayBroadcastChannel.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0fb198.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L0fb19e.  call temp:= `getClosedForSend`(v7) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0fb1a4.  v1:= temp @kind object;
  #L0fb1a6.  if v1 != 0 then goto L0fb216;
  #L0fb1aa.  call temp:= `p`(v7) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.p:()I` @kind direct;
  #L0fb1b0.  v1:= temp;
  #L0fb1b2.  call temp:= `getCapacity`(v7) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.getCapacity:()I` @kind virtual;
  #L0fb1b8.  v2:= temp;
  #L0fb1ba.  if v1 < v2 then goto L0fb1ca;
  #L0fb1be.  v8:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fb1c2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb1c8.  return v8 @kind object;
  #L0fb1ca.  call temp:= `q`(v7) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.q:()J` @kind direct;
  #L0fb1d0.  v2:= temp @kind wide;
  #L0fb1d2.  v4:= v7.`kotlinx.coroutines.channels.ArrayBroadcastChannel.e` @type ^`java.lang.Object`[] @kind object;
  #L0fb1d6.  call temp:= `getCapacity`(v7) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.getCapacity:()I` @kind virtual;
  #L0fb1dc.  v5:= temp;
  #L0fb1de.  v5:= (`long`) v5 @kind i2l;
  #L0fb1e0.  v5:= v2 %% v5 @kind long;
  #L0fb1e4.  v6:= (`int`) v5 @kind l2i;
  #L0fb1e6.  v4[v6]:= v8 @kind object;
  #L0fb1ea.  v1:= v1 + 1;
  #L0fb1ee.  call `s`(v7, v1) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.s:(I)V` @kind direct;
  #L0fb1f4.  v4:= 1L;
  #L0fb1f8.  v2:= v2 + v4 @kind long;
  #L0fb1fa.  call `t`(v7, v2) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.t:(J)V` @kind direct;
  #L0fb200.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0fb204.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb20a.  call `l`(v7) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.l:()V` @kind direct;
  #L0fb210.  v8:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fb214.  return v8 @kind object;
  #L0fb216.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb21c.  return v1 @kind object;
  #L0fb21e.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0fb220.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb226.  throw v8;
  catch `java.lang.Throwable` @[L0fb19e..L0fb1c2] goto L0fb21e;
  catch `java.lang.Throwable` @[L0fb1ca..L0fb204] goto L0fb21e;
}
procedure `java.lang.Object` `offerSelectInternal`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlinx.coroutines.selects.SelectInstance` v8 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.offerSelectInternal:(Ljava/lang/Object;Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0fb24c.  v0:= v6.`kotlinx.coroutines.channels.ArrayBroadcastChannel.d` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L0fb250.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L0fb256.  call temp:= `getClosedForSend`(v6) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L0fb25c.  v1:= temp @kind object;
  #L0fb25e.  if v1 != 0 then goto L0fb2ea;
  #L0fb262.  call temp:= `p`(v6) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.p:()I` @kind direct;
  #L0fb268.  v1:= temp;
  #L0fb26a.  call temp:= `getCapacity`(v6) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.getCapacity:()I` @kind virtual;
  #L0fb270.  v2:= temp;
  #L0fb272.  if v1 < v2 then goto L0fb282;
  #L0fb276.  v7:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fb27a.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb280.  return v7 @kind object;
  #L0fb282.  call temp:= `trySelect`(v8) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L0fb288.  v8:= temp;
  #L0fb28a.  if v8 != 0 then goto L0fb29e;
  #L0fb28e.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L0fb294.  v7:= temp @kind object;
  #L0fb296.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb29c.  return v7 @kind object;
  #L0fb29e.  call temp:= `q`(v6) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.q:()J` @kind direct;
  #L0fb2a4.  v2:= temp @kind wide;
  #L0fb2a6.  v8:= v6.`kotlinx.coroutines.channels.ArrayBroadcastChannel.e` @type ^`java.lang.Object`[] @kind object;
  #L0fb2aa.  call temp:= `getCapacity`(v6) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.getCapacity:()I` @kind virtual;
  #L0fb2b0.  v4:= temp;
  #L0fb2b2.  v4:= (`long`) v4 @kind i2l;
  #L0fb2b4.  v4:= v2 %% v4 @kind long;
  #L0fb2b8.  v5:= (`int`) v4 @kind l2i;
  #L0fb2ba.  v8[v5]:= v7 @kind object;
  #L0fb2be.  v1:= v1 + 1;
  #L0fb2c2.  call `s`(v6, v1) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.s:(I)V` @kind direct;
  #L0fb2c8.  v7:= 1L;
  #L0fb2cc.  v2:= v2 + v7 @kind long;
  #L0fb2ce.  call `t`(v6, v2) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.t:(J)V` @kind direct;
  #L0fb2d4.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0fb2d8.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb2de.  call `l`(v6) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.l:()V` @kind direct;
  #L0fb2e4.  v7:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0fb2e8.  return v7 @kind object;
  #L0fb2ea.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb2f0.  return v1 @kind object;
  #L0fb2f2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0fb2f4.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L0fb2fa.  throw v7;
  catch `java.lang.Throwable` @[L0fb256..L0fb27a] goto L0fb2f2;
  catch `java.lang.Throwable` @[L0fb282..L0fb296] goto L0fb2f2;
  catch `java.lang.Throwable` @[L0fb29e..L0fb2d8] goto L0fb2f2;
}
procedure `kotlinx.coroutines.channels.ReceiveChannel` `openSubscription`(`kotlinx.coroutines.channels.ArrayBroadcastChannel` v3 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.openSubscription:()Lkotlinx/coroutines/channels/ReceiveChannel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0fb384.  v0:= new `kotlinx.coroutines.channels.ArrayBroadcastChannel$a`;
  #L0fb388.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;.<init>:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;)V` @kind direct;
  #L0fb38e.  v1:= 0I;
  #L0fb390.  v2:= 2I;
  #L0fb392.  call `v`(v3, v0, v1, v2, v1) @signature `Lkotlinx/coroutines/channels/ArrayBroadcastChannel;.v:(Lkotlinx/coroutines/channels/ArrayBroadcastChannel;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;Lkotlinx/coroutines/channels/ArrayBroadcastChannel$a;ILjava/lang/Object;)V` @kind static;
  #L0fb398.  return v0 @kind object;
}
