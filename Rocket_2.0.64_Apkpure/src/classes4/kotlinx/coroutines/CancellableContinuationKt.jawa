record `kotlinx.coroutines.CancellableContinuationKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `disposeOnCancellation`(`kotlinx.coroutines.CancellableContinuation` v1 @kind object, `kotlinx.coroutines.DisposableHandle` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.disposeOnCancellation:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/DisposableHandle;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ee044.  v0:= new `kotlinx.coroutines.o`;
  #L0ee048.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/o;.<init>:(Lkotlinx/coroutines/DisposableHandle;)V` @kind direct;
  #L0ee04e.  call `invokeOnCancellation`(v1, v0) @signature `Lkotlinx/coroutines/CancellableContinuation;.invokeOnCancellation:(Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L0ee054.  return @kind void;
}
procedure `kotlinx.coroutines.CancellableContinuationImpl` `getOrCreateCancellableContinuation`(`kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.getOrCreateCancellableContinuation:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/CancellableContinuationImpl;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0edfe8.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind boolean;
  #L0edfec.  if v0 != 0 then goto L0edffe;
  #L0edff0.  v0:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L0edff4.  v1:= 1I;
  #L0edff6.  call `<init>`(v0, v3, v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L0edffc.  return v0 @kind object;
  #L0edffe.  v0:= v3 @kind object;
  #L0ee000.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L0ee004.  call temp:= `claimReusableCancellableContinuation`(v0) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.claimReusableCancellableContinuation:()Lkotlinx/coroutines/CancellableContinuationImpl;` @kind virtual;
  #L0ee00a.  v0:= temp @kind object;
  #L0ee00c.  v1:= 0I;
  #L0ee00e.  if v0 != 0 then goto L0ee016;
  #L0ee012.  v0:= v1 @kind object;
  #L0ee014.  goto L0ee022;
  #L0ee016.  call temp:= `resetStateReusable`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resetStateReusable:()Z` @kind virtual;
  #L0ee01c.  v2:= temp;
  #L0ee01e.  if v2 == 0 then goto L0ee012;
  #L0ee022.  if v0 != 0 then goto L0ee032;
  #L0ee026.  v0:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L0ee02a.  v1:= 2I;
  #L0ee02c.  call `<init>`(v0, v3, v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L0ee032.  return v0 @kind object;
}
procedure `void` `removeOnCancellation`(`kotlinx.coroutines.CancellableContinuation` v1 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.removeOnCancellation:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ee068.  v0:= new `kotlinx.coroutines.y`;
  #L0ee06c.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/y;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind direct;
  #L0ee072.  call `invokeOnCancellation`(v1, v0) @signature `Lkotlinx/coroutines/CancellableContinuation;.invokeOnCancellation:(Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L0ee078.  return @kind void;
}
procedure `java.lang.Object` `suspendCancellableCoroutine`(`kotlin.jvm.functions.Function1` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.suspendCancellableCoroutine:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0edf58.  v0:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L0edf5c.  call temp:= `intercepted`(v4) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L0edf62.  v1:= temp @kind object;
  #L0edf64.  v2:= 1I;
  #L0edf66.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L0edf6c.  call `initCancellability`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L0edf72.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0edf78.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0edf7e.  v3:= temp @kind object;
  #L0edf80.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0edf86.  v0:= temp @kind object;
  #L0edf88.  if v3 != v0 then goto L0edf92;
  #L0edf8c.  call `probeCoroutineSuspended`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0edf92.  return v3 @kind object;
}
procedure `java.lang.Object` `suspendCancellableCoroutineReusable`(`kotlin.jvm.functions.Function1` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.suspendCancellableCoroutineReusable:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0edfa4.  call temp:= `intercepted`(v2) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L0edfaa.  v0:= temp @kind object;
  #L0edfac.  call temp:= `getOrCreateCancellableContinuation`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.getOrCreateCancellableContinuation:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/CancellableContinuationImpl;` @kind static;
  #L0edfb2.  v0:= temp @kind object;
  #L0edfb4.  call temp:= `invoke`(v1, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0edfba.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0edfc0.  v1:= temp @kind object;
  #L0edfc2.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0edfc8.  v0:= temp @kind object;
  #L0edfca.  if v1 != v0 then goto L0edfd4;
  #L0edfce.  call `probeCoroutineSuspended`(v2) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0edfd4.  return v1 @kind object;
}
