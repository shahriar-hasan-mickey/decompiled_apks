record `kotlinx.coroutines.AbstractCoroutine` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.JobSupport` @kind class, `kotlin.coroutines.Continuation` @kind interface, `kotlinx.coroutines.CoroutineScope` @kind interface {
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.AbstractCoroutine.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.AbstractCoroutine` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lkotlinx/coroutines/AbstractCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0ec240.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/JobSupport;.<init>:(Z)V` @kind direct;
  #L0ec246.  if v2 == 0 then goto L0ec260;
  #L0ec24a.  v2:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0ec24e.  call temp:= `get`(v1, v2) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0ec254.  v2:= temp @kind object;
  #L0ec256.  v2:= (`kotlinx.coroutines.Job`) v2 @kind object;
  #L0ec25a.  call `initParentJob`(v0, v2) @signature `Lkotlinx/coroutines/JobSupport;.initParentJob:(Lkotlinx/coroutines/Job;)V` @kind virtual;
  #L0ec260.  call temp:= `plus`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0ec266.  v1:= temp @kind object;
  #L0ec268.  v0.`kotlinx.coroutines.AbstractCoroutine.b` @type ^`kotlin.coroutines.CoroutineContext` := v1 @kind object;
  #L0ec26c.  return @kind void;
}
procedure `void` `getContext$annotations`() @signature `Lkotlinx/coroutines/AbstractCoroutine;.getContext$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ec298.  return @kind void;
}
procedure `void` `afterResume`(`kotlinx.coroutines.AbstractCoroutine` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/AbstractCoroutine;.afterResume:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L0ec280.  call `afterCompletion`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.afterCompletion:(Ljava/lang/Object;)V` @kind virtual;
  #L0ec286.  return @kind void;
}
procedure `java.lang.String` `cancellationExceptionMessage`(`kotlinx.coroutines.AbstractCoroutine` v2 @kind this) @signature `Lkotlinx/coroutines/AbstractCoroutine;.cancellationExceptionMessage:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L0ec180.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0ec186.  v0:= temp @kind object;
  #L0ec188.  v1:= " was cancelled" @kind object;
  #L0ec18c.  call temp:= `stringPlus`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0ec192.  v0:= temp @kind object;
  #L0ec194.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.AbstractCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/AbstractCoroutine;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0ec210.  v0:= v1.`kotlinx.coroutines.AbstractCoroutine.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L0ec214.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getCoroutineContext`(`kotlinx.coroutines.AbstractCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/AbstractCoroutine;.getCoroutineContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ec228.  v0:= v1.`kotlinx.coroutines.AbstractCoroutine.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L0ec22c.  return v0 @kind object;
}
procedure `void` `handleOnCompletionException$kotlinx_coroutines_core`(`kotlinx.coroutines.AbstractCoroutine` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/AbstractCoroutine;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0ec2ac.  v0:= v1.`kotlinx.coroutines.AbstractCoroutine.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L0ec2b0.  call `handleCoroutineException`(v0, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L0ec2b6.  return @kind void;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.AbstractCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/AbstractCoroutine;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ec164.  call temp:= `isActive`(v1) @signature `Lkotlinx/coroutines/JobSupport;.isActive:()Z` @kind super;
  #L0ec16a.  v0:= temp;
  #L0ec16c.  return v0;
}
procedure `java.lang.String` `nameString$kotlinx_coroutines_core`(`kotlinx.coroutines.AbstractCoroutine` v3 @kind this) @signature `Lkotlinx/coroutines/AbstractCoroutine;.nameString$kotlinx_coroutines_core:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0ec1a8.  v0:= v3.`kotlinx.coroutines.AbstractCoroutine.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L0ec1ac.  call temp:= `getCoroutineName`(v0) @signature `Lkotlinx/coroutines/CoroutineContextKt;.getCoroutineName:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/String;` @kind static;
  #L0ec1b2.  v0:= temp @kind object;
  #L0ec1b4.  if v0 != 0 then goto L0ec1c2;
  #L0ec1b8.  call temp:= `nameString$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.nameString$kotlinx_coroutines_core:()Ljava/lang/String;` @kind super;
  #L0ec1be.  v0:= temp @kind object;
  #L0ec1c0.  return v0 @kind object;
  #L0ec1c2.  v1:= new `java.lang.StringBuilder`;
  #L0ec1c6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0ec1cc.  v2:= 34I;
  #L0ec1d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ec1d6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ec1dc.  v0:= "\":" @kind object;
  #L0ec1e0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ec1e6.  call temp:= `nameString$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.nameString$kotlinx_coroutines_core:()Ljava/lang/String;` @kind super;
  #L0ec1ec.  v0:= temp @kind object;
  #L0ec1ee.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ec1f4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ec1fa.  v0:= temp @kind object;
  #L0ec1fc.  return v0 @kind object;
}
procedure `void` `onCancelled`(`kotlinx.coroutines.AbstractCoroutine` v0 @kind this, `java.lang.Throwable` v1 @kind object, `boolean` v2 ) @signature `Lkotlinx/coroutines/AbstractCoroutine;.onCancelled:(Ljava/lang/Throwable;Z)V` @AccessFlag PROTECTED {
    temp;

  #L0ec2c8.  return @kind void;
}
procedure `void` `onCompleted`(`kotlinx.coroutines.AbstractCoroutine` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/AbstractCoroutine;.onCompleted:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L0ec2dc.  return @kind void;
}
procedure `void` `onCompletionInternal`(`kotlinx.coroutines.AbstractCoroutine` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/AbstractCoroutine;.onCompletionInternal:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L0ec2f0.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0ec2f4.  if v0 == 0 then goto L0ec310;
  #L0ec2f8.  v2:= (`kotlinx.coroutines.CompletedExceptionally`) v2 @kind object;
  #L0ec2fc.  v0:= v2.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0ec300.  call temp:= `getHandled`(v2) @signature `Lkotlinx/coroutines/CompletedExceptionally;.getHandled:()Z` @kind virtual;
  #L0ec306.  v2:= temp;
  #L0ec308.  call `onCancelled`(v1, v0, v2) @signature `Lkotlinx/coroutines/AbstractCoroutine;.onCancelled:(Ljava/lang/Throwable;Z)V` @kind virtual;
  #L0ec30e.  goto L0ec316;
  #L0ec310.  call `onCompleted`(v1, v2) @signature `Lkotlinx/coroutines/AbstractCoroutine;.onCompleted:(Ljava/lang/Object;)V` @kind virtual;
  #L0ec316.  return @kind void;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.AbstractCoroutine` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/AbstractCoroutine;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0ec328.  v0:= 0I;
  #L0ec32a.  v1:= 1I;
  #L0ec32c.  call temp:= `toState$default`(v3, v0, v1, v0) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState$default:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0ec332.  v3:= temp @kind object;
  #L0ec334.  call temp:= `makeCompletingOnce$kotlinx_coroutines_core`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.makeCompletingOnce$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0ec33a.  v3:= temp @kind object;
  #L0ec33c.  v0:= `@@kotlinx.coroutines.JobSupportKt.COMPLETING_WAITING_CHILDREN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0ec340.  if v3 != v0 then goto L0ec346;
  #L0ec344.  return @kind void;
  #L0ec346.  call `afterResume`(v2, v3) @signature `Lkotlinx/coroutines/AbstractCoroutine;.afterResume:(Ljava/lang/Object;)V` @kind virtual;
  #L0ec34c.  return @kind void;
}
procedure `void` `start`(`kotlinx.coroutines.AbstractCoroutine` v0 @kind this, `kotlinx.coroutines.CoroutineStart` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/AbstractCoroutine;.start:(Lkotlinx/coroutines/CoroutineStart;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0ec360.  call `invoke`(v1, v3, v2, v0) @signature `Lkotlinx/coroutines/CoroutineStart;.invoke:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind virtual;
  #L0ec366.  return @kind void;
}
