record `kotlinx.coroutines.selects.SelectBuilderImpl` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind class, `kotlinx.coroutines.selects.SelectBuilder` @kind interface, `kotlinx.coroutines.selects.SelectInstance` @kind interface, `kotlin.coroutines.Continuation` @kind interface, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.selects.SelectBuilderImpl._parentHandle` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.selects.SelectBuilderImpl._result` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.selects.SelectBuilderImpl._state` @AccessFlag VOLATILE_SYNTHETIC;
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.selects.SelectBuilderImpl.d` @AccessFlag PRIVATE_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.selects.SelectBuilderImpl.e` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L126968.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L12696c.  v1:= constclass @type ^`kotlinx.coroutines.selects.SelectBuilderImpl` @kind object;
  #L126970.  v2:= "_state" @kind object;
  #L126974.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L12697a.  v2:= temp @kind object;
  #L12697c.  `@@kotlinx.coroutines.selects.SelectBuilderImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v2 @kind object;
  #L126980.  v2:= "_result" @kind object;
  #L126984.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L12698a.  v0:= temp @kind object;
  #L12698c.  `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L126990.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.<init>:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1269a4.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListHead;.<init>:()V` @kind direct;
  #L1269aa.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L1269ae.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L1269b4.  v1:= temp @kind object;
  #L1269b6.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl._state` @type ^`java.lang.Object` := v1 @kind object;
  #L1269ba.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L1269c0.  v1:= temp @kind object;
  #L1269c2.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` := v1 @kind object;
  #L1269c6.  v1:= 0I;
  #L1269c8.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L1269cc.  return @kind void;
}
procedure `void` `access$doAfterSelect`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.access$doAfterSelect:(Lkotlinx/coroutines/selects/SelectBuilderImpl;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1269e0.  call `e`(v0) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.e:()V` @kind direct;
  #L1269e6.  return @kind void;
}
procedure `void` `e`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.e:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L126a3c.  call temp:= `f`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.f:()Lkotlinx/coroutines/DisposableHandle;` @kind direct;
  #L126a42.  v0:= temp @kind object;
  #L126a44.  if v0 != 0 then goto L126a4a;
  #L126a48.  goto L126a50;
  #L126a4a.  call `dispose`(v0) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L126a50.  call temp:= `getNext`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L126a56.  v0:= temp @kind object;
  #L126a58.  v0:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v0 @kind object;
  #L126a5c.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L126a62.  v1:= temp;
  #L126a64.  if v1 != 0 then goto L126a8a;
  #L126a68.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.selects.SelectBuilderImpl$b` @kind boolean;
  #L126a6c.  if v1 == 0 then goto L126a80;
  #L126a70.  v1:= v0 @kind object;
  #L126a72.  v1:= (`kotlinx.coroutines.selects.SelectBuilderImpl$b`) v1 @kind object;
  #L126a76.  v1:= v1.`kotlinx.coroutines.selects.SelectBuilderImpl$b.d` @type ^`kotlinx.coroutines.DisposableHandle` @kind object;
  #L126a7a.  call `dispose`(v1) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L126a80.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L126a86.  v0:= temp @kind object;
  #L126a88.  goto L126a5c;
  #L126a8a.  return @kind void;
}
procedure `kotlinx.coroutines.DisposableHandle` `f`(`kotlinx.coroutines.selects.SelectBuilderImpl` v1 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.f:()Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L12694c.  v0:= v1.`kotlinx.coroutines.selects.SelectBuilderImpl._parentHandle` @type ^`java.lang.Object` @kind object;
  #L126950.  v0:= (`kotlinx.coroutines.DisposableHandle`) v0 @kind object;
  #L126954.  return v0 @kind object;
}
procedure `void` `g`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlinx.coroutines.DisposableHandle` v1 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.g:(Lkotlinx/coroutines/DisposableHandle;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L126db0.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L126db4.  return @kind void;
}
procedure `void` `initCancellability`(`kotlinx.coroutines.selects.SelectBuilderImpl` v7 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.initCancellability:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L126b08.  call temp:= `getContext`(v7) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L126b0e.  v0:= temp @kind object;
  #L126b10.  v1:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L126b14.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L126b1a.  v0:= temp @kind object;
  #L126b1c.  v1:= v0 @kind object;
  #L126b1e.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L126b22.  if v1 != 0 then goto L126b28;
  #L126b26.  return @kind void;
  #L126b28.  v2:= 1I;
  #L126b2a.  v3:= 0I;
  #L126b2c.  v4:= new `kotlinx.coroutines.selects.SelectBuilderImpl$d`;
  #L126b30.  call `<init>`(v4, v7) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$d;.<init>:(Lkotlinx/coroutines/selects/SelectBuilderImpl;)V` @kind direct;
  #L126b36.  v5:= 2I;
  #L126b38.  v6:= 0I;
  #L126b3a.  call temp:= `invokeOnCompletion$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.invokeOnCompletion$default:(Lkotlinx/coroutines/Job;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;` @kind static;
  #L126b40.  v0:= temp @kind object;
  #L126b42.  call `g`(v7, v0) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.g:(Lkotlinx/coroutines/DisposableHandle;)V` @kind direct;
  #L126b48.  call temp:= `isSelected`(v7) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @kind virtual;
  #L126b4e.  v1:= temp;
  #L126b50.  if v1 == 0 then goto L126b5a;
  #L126b54.  call `dispose`(v0) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L126b5a.  return @kind void;
}
procedure `void` `disposeOnSelect`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this, `kotlinx.coroutines.DisposableHandle` v3 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1269f8.  v0:= new `kotlinx.coroutines.selects.SelectBuilderImpl$b`;
  #L1269fc.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$b;.<init>:(Lkotlinx/coroutines/DisposableHandle;)V` @kind direct;
  #L126a02.  call temp:= `isSelected`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @kind virtual;
  #L126a08.  v1:= temp;
  #L126a0a.  if v1 != 0 then goto L126a22;
  #L126a0e.  call `addLast`(v2, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.addLast:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind virtual;
  #L126a14.  call temp:= `isSelected`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @kind virtual;
  #L126a1a.  v0:= temp;
  #L126a1c.  if v0 != 0 then goto L126a22;
  #L126a20.  return @kind void;
  #L126a22.  call `dispose`(v3) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L126a28.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L126924.  v0:= v2.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L126928.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L12692c.  if v1 == 0 then goto L126936;
  #L126930.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L126934.  goto L126938;
  #L126936.  v0:= 0I;
  #L126938.  return v0 @kind object;
}
procedure `kotlin.coroutines.Continuation` `getCompletion`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getCompletion:()Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC {
    temp;

  #L1268f0.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.selects.SelectBuilderImpl` v1 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L126904.  v0:= v1.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L126908.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L12690e.  v0:= temp @kind object;
  #L126910.  return v0 @kind object;
}
procedure `java.lang.Object` `getResult`(`kotlinx.coroutines.selects.SelectBuilderImpl` v3 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getResult:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1266d0.  call temp:= `isSelected`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @kind virtual;
  #L1266d6.  v0:= temp;
  #L1266d8.  if v0 != 0 then goto L1266e2;
  #L1266dc.  call `initCancellability`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.initCancellability:()V` @kind direct;
  #L1266e2.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` @kind object;
  #L1266e6.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L1266ec.  v1:= temp @kind object;
  #L1266ee.  if v0 != v1 then goto L126720;
  #L1266f2.  v0:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1266f6.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L1266fc.  v1:= temp @kind object;
  #L1266fe.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L126704.  v2:= temp @kind object;
  #L126706.  call temp:= `a`(v0, v3, v1, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12670c.  v0:= temp;
  #L12670e.  if v0 == 0 then goto L12671c;
  #L126712.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L126718.  v0:= temp @kind object;
  #L12671a.  return v0 @kind object;
  #L12671c.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` @kind object;
  #L126720.  call temp:= `access$getRESUMED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getRESUMED$p:()Ljava/lang/Object;` @kind static;
  #L126726.  v1:= temp @kind object;
  #L126728.  if v0 == v1 then goto L126740;
  #L12672c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L126730.  if v1 != 0 then goto L126736;
  #L126734.  return v0 @kind object;
  #L126736.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L12673a.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L12673e.  throw v0;
  #L126740.  v0:= new `java.lang.IllegalStateException`;
  #L126744.  v1:= "Already resumed" @kind object;
  #L126748.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12674e.  throw v0;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.selects.SelectBuilderImpl` v1 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L126884.  v0:= 0I;
  #L126886.  return v0 @kind object;
}
procedure `void` `handleBuilderException`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.handleBuilderException:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L126a9c.  call temp:= `trySelect`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.trySelect:()Z` @kind virtual;
  #L126aa2.  v0:= temp;
  #L126aa4.  if v0 == 0 then goto L126ac4;
  #L126aa8.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L126aac.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L126ab2.  v3:= temp @kind object;
  #L126ab4.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L126aba.  v3:= temp @kind object;
  #L126abc.  call `resumeWith`(v2, v3) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L126ac2.  goto L126af6;
  #L126ac4.  v0:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L126ac8.  if v0 != 0 then goto L126af6;
  #L126acc.  call temp:= `getResult`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L126ad2.  v0:= temp @kind object;
  #L126ad4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L126ad8.  if v1 == 0 then goto L126ae8;
  #L126adc.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L126ae0.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L126ae4.  if v0 == v3 then goto L126af6;
  #L126ae8.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L126aee.  v0:= temp @kind object;
  #L126af0.  call `handleCoroutineException`(v0, v3) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L126af6.  return @kind void;
}
procedure `void` `invoke`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlinx.coroutines.selects.SelectClause0` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.invoke:(Lkotlinx/coroutines/selects/SelectClause0;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;

  #L126b6c.  call `registerSelectClause0`(v1, v0, v2) @signature `Lkotlinx/coroutines/selects/SelectClause0;.registerSelectClause0:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L126b72.  return @kind void;
}
procedure `void` `invoke`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlinx.coroutines.selects.SelectClause1` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.invoke:(Lkotlinx/coroutines/selects/SelectClause1;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC {
    temp;

  #L126b84.  call `registerSelectClause1`(v1, v0, v2) @signature `Lkotlinx/coroutines/selects/SelectClause1;.registerSelectClause1:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @kind interface;
  #L126b8a.  return @kind void;
}
procedure `void` `invoke`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlinx.coroutines.selects.SelectClause2` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.invoke:(Lkotlinx/coroutines/selects/SelectClause2;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC {
    temp;

  #L126b9c.  call `registerSelectClause2`(v1, v0, v2, v3) @signature `Lkotlinx/coroutines/selects/SelectClause2;.registerSelectClause2:(Lkotlinx/coroutines/selects/SelectInstance;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @kind interface;
  #L126ba2.  return @kind void;
}
procedure `void` `invoke`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlinx.coroutines.selects.SelectClause2` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.invoke:(Lkotlinx/coroutines/selects/SelectClause2;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC {
    temp;

  #L126bb4.  call `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/selects/SelectBuilder$DefaultImpls;.invoke:(Lkotlinx/coroutines/selects/SelectBuilder;Lkotlinx/coroutines/selects/SelectClause2;Lkotlin/jvm/functions/Function2;)V` @kind static;
  #L126bba.  return @kind void;
}
procedure `boolean` `isSelected`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L126644.  v0:= v2.`kotlinx.coroutines.selects.SelectBuilderImpl._state` @type ^`java.lang.Object` @kind object;
  #L126648.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L12664e.  v1:= temp @kind object;
  #L126650.  if v0 != v1 then goto L126658;
  #L126654.  v0:= 0I;
  #L126656.  return v0;
  #L126658.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.OpDescriptor` @kind boolean;
  #L12665c.  if v1 == 0 then goto L12666c;
  #L126660.  v0:= (`kotlinx.coroutines.internal.OpDescriptor`) v0 @kind object;
  #L126664.  call temp:= `perform`(v0, v2) @signature `Lkotlinx/coroutines/internal/OpDescriptor;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12666a.  goto L126644;
  #L12666c.  v0:= 1I;
  #L12666e.  return v0;
}
procedure `void` `onTimeout`(`kotlinx.coroutines.selects.SelectBuilderImpl` v3 @kind this, `long` v4 , `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.onTimeout:(JLkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L126bcc.  v0:= 0L;
  #L126bd0.  v2:= lcmp(v4, v0);
  #L126bd4.  if v2 > 0 then goto L126bf4;
  #L126bd8.  call temp:= `trySelect`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.trySelect:()Z` @kind virtual;
  #L126bde.  v4:= temp;
  #L126be0.  if v4 == 0 then goto L126bf2;
  #L126be4.  call temp:= `getCompletion`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind virtual;
  #L126bea.  v4:= temp @kind object;
  #L126bec.  call `startCoroutineUnintercepted`(v6, v4) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L126bf2.  return @kind void;
  #L126bf4.  v0:= new `kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1`;
  #L126bf8.  call `<init>`(v0, v3, v6) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$onTimeout$$inlined$Runnable$1;.<init>:(Lkotlinx/coroutines/selects/SelectBuilderImpl;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L126bfe.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L126c04.  v6:= temp @kind object;
  #L126c06.  call temp:= `getDelay`(v6) @signature `Lkotlinx/coroutines/DelayKt;.getDelay:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Delay;` @kind static;
  #L126c0c.  v6:= temp @kind object;
  #L126c0e.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L126c14.  v1:= temp @kind object;
  #L126c16.  call temp:= `invokeOnTimeout`(v6, v4, v0, v1) @signature `Lkotlinx/coroutines/Delay;.invokeOnTimeout:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/DisposableHandle;` @kind interface;
  #L126c1c.  v4:= temp @kind object;
  #L126c1e.  call `disposeOnSelect`(v3, v4) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @kind virtual;
  #L126c24.  return @kind void;
}
procedure `java.lang.Object` `performAtomicTrySelect`(`kotlinx.coroutines.selects.SelectBuilderImpl` v1 @kind this, `kotlinx.coroutines.internal.AtomicDesc` v2 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.performAtomicTrySelect:(Lkotlinx/coroutines/internal/AtomicDesc;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L126760.  v0:= new `kotlinx.coroutines.selects.SelectBuilderImpl$a`;
  #L126764.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$a;.<init>:(Lkotlinx/coroutines/selects/SelectBuilderImpl;Lkotlinx/coroutines/internal/AtomicDesc;)V` @kind direct;
  #L12676a.  v2:= 0I;
  #L12676c.  call temp:= `perform`(v0, v2) @signature `Lkotlinx/coroutines/internal/AtomicOp;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L126772.  v2:= temp @kind object;
  #L126774.  return v2 @kind object;
}
procedure `void` `resumeSelectWithException`(`kotlinx.coroutines.selects.SelectBuilderImpl` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.resumeSelectWithException:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L126c38.  v0:= v4.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` @kind object;
  #L126c3c.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L126c42.  v1:= temp @kind object;
  #L126c44.  if v0 != v1 then goto L126c72;
  #L126c48.  v0:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L126c4c.  v1:= 0I;
  #L126c4e.  v2:= 2I;
  #L126c50.  v3:= 0I;
  #L126c52.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L126c58.  v1:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L126c5c.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L126c62.  v2:= temp @kind object;
  #L126c64.  call temp:= `a`(v1, v4, v2, v0) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L126c6a.  v0:= temp;
  #L126c6c.  if v0 == 0 then goto L126c38;
  #L126c70.  goto L126cc4;
  #L126c72.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L126c78.  v1:= temp @kind object;
  #L126c7a.  if v0 != v1 then goto L126cc6;
  #L126c7e.  v0:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L126c82.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L126c88.  v1:= temp @kind object;
  #L126c8a.  call temp:= `access$getRESUMED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getRESUMED$p:()Ljava/lang/Object;` @kind static;
  #L126c90.  v2:= temp @kind object;
  #L126c92.  call temp:= `a`(v0, v4, v1, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L126c98.  v0:= temp;
  #L126c9a.  if v0 == 0 then goto L126c38;
  #L126c9e.  v0:= v4.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L126ca2.  call temp:= `intercepted`(v0) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L126ca8.  v0:= temp @kind object;
  #L126caa.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L126cae.  call temp:= `createFailure`(v5) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L126cb4.  v5:= temp @kind object;
  #L126cb6.  call temp:= `constructor-impl`(v5) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L126cbc.  v5:= temp @kind object;
  #L126cbe.  call `resumeWith`(v0, v5) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L126cc4.  return @kind void;
  #L126cc6.  v5:= new `java.lang.IllegalStateException`;
  #L126cca.  v0:= "Already resumed" @kind object;
  #L126cce.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L126cd4.  throw v5;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.selects.SelectBuilderImpl` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L126ce8.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` @kind object;
  #L126cec.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L126cf2.  v1:= temp @kind object;
  #L126cf4.  if v0 != v1 then goto L126d1e;
  #L126cf8.  v0:= 1I;
  #L126cfa.  v1:= 0I;
  #L126cfc.  call temp:= `toState$default`(v4, v1, v0, v1) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState$default:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L126d02.  v0:= temp @kind object;
  #L126d04.  v1:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L126d08.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L126d0e.  v2:= temp @kind object;
  #L126d10.  call temp:= `a`(v1, v3, v2, v0) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L126d16.  v0:= temp;
  #L126d18.  if v0 == 0 then goto L126ce8;
  #L126d1c.  goto L126d8e;
  #L126d1e.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L126d24.  v1:= temp @kind object;
  #L126d26.  if v0 != v1 then goto L126d90;
  #L126d2a.  v0:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L126d2e.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L126d34.  v1:= temp @kind object;
  #L126d36.  call temp:= `access$getRESUMED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getRESUMED$p:()Ljava/lang/Object;` @kind static;
  #L126d3c.  v2:= temp @kind object;
  #L126d3e.  call temp:= `a`(v0, v3, v1, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L126d44.  v0:= temp;
  #L126d46.  if v0 == 0 then goto L126ce8;
  #L126d4a.  call temp:= `isFailure-impl`(v4) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L126d50.  v0:= temp;
  #L126d52.  if v0 == 0 then goto L126d84;
  #L126d56.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L126d5a.  call temp:= `exceptionOrNull-impl`(v4) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L126d60.  v4:= temp @kind object;
  #L126d62.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L126d68.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L126d6c.  call temp:= `createFailure`(v4) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L126d72.  v4:= temp @kind object;
  #L126d74.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L126d7a.  v4:= temp @kind object;
  #L126d7c.  call `resumeWith`(v0, v4) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L126d82.  goto L126d8e;
  #L126d84.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L126d88.  call `resumeWith`(v0, v4) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L126d8e.  return @kind void;
  #L126d90.  v4:= new `java.lang.IllegalStateException`;
  #L126d94.  v0:= "Already resumed" @kind object;
  #L126d98.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L126d9e.  throw v4;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L126898.  v0:= new `java.lang.StringBuilder`;
  #L12689c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1268a2.  v1:= "SelectInstance(state=" @kind object;
  #L1268a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1268ac.  v1:= v2.`kotlinx.coroutines.selects.SelectBuilderImpl._state` @type ^`java.lang.Object` @kind object;
  #L1268b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1268b6.  v1:= ", result=" @kind object;
  #L1268ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1268c0.  v1:= v2.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` @kind object;
  #L1268c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1268ca.  v1:= 41I;
  #L1268ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1268d4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1268da.  v0:= temp @kind object;
  #L1268dc.  return v0 @kind object;
}
procedure `boolean` `trySelect`(`kotlinx.coroutines.selects.SelectBuilderImpl` v3 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.trySelect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L126680.  v0:= 0I;
  #L126682.  call temp:= `trySelectOther`(v3, v0) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.trySelectOther:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Ljava/lang/Object;` @kind virtual;
  #L126688.  v0:= temp @kind object;
  #L12668a.  v1:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L12668e.  if v0 != v1 then goto L126696;
  #L126692.  v0:= 1I;
  #L126694.  goto L12669c;
  #L126696.  if v0 != 0 then goto L12669e;
  #L12669a.  v0:= 0I;
  #L12669c.  return v0;
  #L12669e.  v1:= new `java.lang.IllegalStateException`;
  #L1266a2.  v2:= "Unexpected trySelectIdempotent result " @kind object;
  #L1266a6.  call temp:= `stringPlus`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1266ac.  v0:= temp @kind object;
  #L1266ae.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1266b4.  v0:= temp @kind object;
  #L1266b6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1266bc.  throw v1;
}
procedure `java.lang.Object` `trySelectOther`(`kotlinx.coroutines.selects.SelectBuilderImpl` v3 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v4 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.trySelectOther:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L126788.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl._state` @type ^`java.lang.Object` @kind object;
  #L12678c.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L126792.  v1:= temp @kind object;
  #L126794.  v2:= 0I;
  #L126796.  if v0 != v1 then goto L1267f6;
  #L12679a.  if v4 != 0 then goto L1267b8;
  #L12679e.  v0:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1267a2.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L1267a8.  v1:= temp @kind object;
  #L1267aa.  call temp:= `a`(v0, v3, v1, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1267b0.  v0:= temp;
  #L1267b2.  if v0 != 0 then goto L1267ea;
  #L1267b6.  goto L126788;
  #L1267b8.  v0:= new `kotlinx.coroutines.selects.SelectBuilderImpl$c`;
  #L1267bc.  call `<init>`(v0, v4) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$c;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)V` @kind direct;
  #L1267c2.  v1:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1267c6.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L1267cc.  v2:= temp @kind object;
  #L1267ce.  call temp:= `a`(v1, v3, v2, v0) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1267d4.  v1:= temp;
  #L1267d6.  if v1 != 0 then goto L1267dc;
  #L1267da.  goto L126788;
  #L1267dc.  call temp:= `perform`(v0, v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$c;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1267e2.  v4:= temp @kind object;
  #L1267e4.  if v4 == 0 then goto L1267ea;
  #L1267e8.  return v4 @kind object;
  #L1267ea.  call `e`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.e:()V` @kind direct;
  #L1267f0.  v4:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1267f4.  return v4 @kind object;
  #L1267f6.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.OpDescriptor` @kind boolean;
  #L1267fa.  if v1 == 0 then goto L12685e;
  #L1267fe.  if v4 == 0 then goto L126852;
  #L126802.  call temp:= `getAtomicOp`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.getAtomicOp:()Lkotlinx/coroutines/internal/AtomicOp;` @kind virtual;
  #L126808.  v1:= temp @kind object;
  #L12680a.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.selects.SelectBuilderImpl$a` @kind boolean;
  #L12680e.  if v2 == 0 then goto L12683a;
  #L126812.  v2:= v1 @kind object;
  #L126814.  v2:= (`kotlinx.coroutines.selects.SelectBuilderImpl$a`) v2 @kind object;
  #L126818.  v2:= v2.`kotlinx.coroutines.selects.SelectBuilderImpl$a.b` @type ^`kotlinx.coroutines.selects.SelectBuilderImpl` @kind object;
  #L12681c.  if v2 == v3 then goto L126822;
  #L126820.  goto L12683a;
  #L126822.  v4:= new `java.lang.IllegalStateException`;
  #L126826.  v0:= "Cannot use matching select clauses on the same object" @kind object;
  #L12682a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L126830.  v0:= temp @kind object;
  #L126832.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L126838.  throw v4;
  #L12683a.  v2:= v0 @kind object;
  #L12683c.  v2:= (`kotlinx.coroutines.internal.OpDescriptor`) v2 @kind object;
  #L126840.  call temp:= `isEarlierThan`(v1, v2) @signature `Lkotlinx/coroutines/internal/OpDescriptor;.isEarlierThan:(Lkotlinx/coroutines/internal/OpDescriptor;)Z` @kind virtual;
  #L126846.  v1:= temp;
  #L126848.  if v1 == 0 then goto L126852;
  #L12684c.  v4:= `@@kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC` @type ^`java.lang.Object` @kind object;
  #L126850.  return v4 @kind object;
  #L126852.  v0:= (`kotlinx.coroutines.internal.OpDescriptor`) v0 @kind object;
  #L126856.  call temp:= `perform`(v0, v3) @signature `Lkotlinx/coroutines/internal/OpDescriptor;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12685c.  goto L126788;
  #L12685e.  if v4 != 0 then goto L126864;
  #L126862.  return v2 @kind object;
  #L126864.  v4:= v4.`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp.desc` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc` @kind object;
  #L126868.  if v0 != v4 then goto L126872;
  #L12686c.  v4:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L126870.  return v4 @kind object;
  #L126872.  return v2 @kind object;
}
