record `kotlinx.coroutines.GlobalScope` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.CoroutineScope` @kind interface {
}
global `kotlinx.coroutines.GlobalScope` `@@kotlinx.coroutines.GlobalScope.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/GlobalScope;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0f2d0c.  v0:= new `kotlinx.coroutines.GlobalScope`;
  #L0f2d10.  call `<init>`(v0) @signature `Lkotlinx/coroutines/GlobalScope;.<init>:()V` @kind direct;
  #L0f2d16.  `@@kotlinx.coroutines.GlobalScope.INSTANCE` @type ^`kotlinx.coroutines.GlobalScope` := v0 @kind object;
  #L0f2d1a.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.GlobalScope` v0 @kind this) @signature `Lkotlinx/coroutines/GlobalScope;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0f2d2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0f2d32.  return @kind void;
}
procedure `kotlin.coroutines.CoroutineContext` `getCoroutineContext`(`kotlinx.coroutines.GlobalScope` v1 @kind this) @signature `Lkotlinx/coroutines/GlobalScope;.getCoroutineContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f2cf4.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L0f2cf8.  return v0 @kind object;
}
