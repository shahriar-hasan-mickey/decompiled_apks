record `kotlinx.coroutines.JobImpl` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.JobSupport` @kind class, `kotlinx.coroutines.CompletableJob` @kind interface {
  `boolean` `kotlinx.coroutines.JobImpl.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobImpl` v1 @kind this, `kotlinx.coroutines.Job` v2 @kind object) @signature `Lkotlinx/coroutines/JobImpl;.<init>:(Lkotlinx/coroutines/Job;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0f3570.  v0:= 1I;
  #L0f3572.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/JobSupport;.<init>:(Z)V` @kind direct;
  #L0f3578.  call `initParentJob`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.initParentJob:(Lkotlinx/coroutines/Job;)V` @kind virtual;
  #L0f357e.  call temp:= `D`(v1) @signature `Lkotlinx/coroutines/JobImpl;.D:()Z` @kind direct;
  #L0f3584.  v2:= temp;
  #L0f3586.  v1.`kotlinx.coroutines.JobImpl.b` @type ^`boolean` := v2 @kind boolean;
  #L0f358a.  return @kind void;
}
procedure `boolean` `D`(`kotlinx.coroutines.JobImpl` v4 @kind this) @signature `Lkotlinx/coroutines/JobImpl;.D:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f34f0.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @kind virtual;
  #L0f34f6.  v0:= temp @kind object;
  #L0f34f8.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L0f34fc.  v2:= 0I;
  #L0f34fe.  if v1 == 0 then goto L0f3508;
  #L0f3502.  v0:= (`kotlinx.coroutines.ChildHandleNode`) v0 @kind object;
  #L0f3506.  goto L0f350a;
  #L0f3508.  v0:= v2 @kind object;
  #L0f350a.  if v0 != 0 then goto L0f3512;
  #L0f350e.  v0:= v2 @kind object;
  #L0f3510.  goto L0f351a;
  #L0f3512.  call temp:= `getJob`(v0) @signature `Lkotlinx/coroutines/JobNode;.getJob:()Lkotlinx/coroutines/JobSupport;` @kind virtual;
  #L0f3518.  v0:= temp @kind object;
  #L0f351a.  v1:= 0I;
  #L0f351c.  if v0 != 0 then goto L0f3522;
  #L0f3520.  return v1;
  #L0f3522.  call temp:= `getHandlesException$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/JobSupport;.getHandlesException$kotlinx_coroutines_core:()Z` @kind virtual;
  #L0f3528.  v3:= temp;
  #L0f352a.  if v3 == 0 then goto L0f3532;
  #L0f352e.  v0:= 1I;
  #L0f3530.  return v0;
  #L0f3532.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @kind virtual;
  #L0f3538.  v0:= temp @kind object;
  #L0f353a.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L0f353e.  if v3 == 0 then goto L0f3548;
  #L0f3542.  v0:= (`kotlinx.coroutines.ChildHandleNode`) v0 @kind object;
  #L0f3546.  goto L0f354a;
  #L0f3548.  v0:= v2 @kind object;
  #L0f354a.  if v0 != 0 then goto L0f3552;
  #L0f354e.  v0:= v2 @kind object;
  #L0f3550.  goto L0f355a;
  #L0f3552.  call temp:= `getJob`(v0) @signature `Lkotlinx/coroutines/JobNode;.getJob:()Lkotlinx/coroutines/JobSupport;` @kind virtual;
  #L0f3558.  v0:= temp @kind object;
  #L0f355a.  if v0 != 0 then goto L0f3522;
  #L0f355e.  return v1;
}
procedure `boolean` `complete`(`kotlinx.coroutines.JobImpl` v1 @kind this) @signature `Lkotlinx/coroutines/JobImpl;.complete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f3478.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f347c.  call temp:= `makeCompleting$kotlinx_coroutines_core`(v1, v0) @signature `Lkotlinx/coroutines/JobSupport;.makeCompleting$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f3482.  v0:= temp;
  #L0f3484.  return v0;
}
procedure `boolean` `completeExceptionally`(`kotlinx.coroutines.JobImpl` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/JobImpl;.completeExceptionally:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f3498.  v0:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L0f349c.  v1:= 0I;
  #L0f349e.  v2:= 2I;
  #L0f34a0.  v3:= 0I;
  #L0f34a2.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0f34a8.  call temp:= `makeCompleting$kotlinx_coroutines_core`(v4, v0) @signature `Lkotlinx/coroutines/JobSupport;.makeCompleting$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f34ae.  v5:= temp;
  #L0f34b0.  return v5;
}
procedure `boolean` `getHandlesException$kotlinx_coroutines_core`(`kotlinx.coroutines.JobImpl` v1 @kind this) @signature `Lkotlinx/coroutines/JobImpl;.getHandlesException$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f34c4.  v0:= v1.`kotlinx.coroutines.JobImpl.b` @type ^`boolean` @kind boolean;
  #L0f34c8.  return v0;
}
procedure `boolean` `getOnCancelComplete$kotlinx_coroutines_core`(`kotlinx.coroutines.JobImpl` v1 @kind this) @signature `Lkotlinx/coroutines/JobImpl;.getOnCancelComplete$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f34dc.  v0:= 1I;
  #L0f34de.  return v0;
}
