record `kotlinx.coroutines.SchedulerTaskKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `afterTask`(`kotlinx.coroutines.scheduling.TaskContext` v0 @kind object) @signature `Lkotlinx/coroutines/SchedulerTaskKt;.afterTask:(Lkotlinx/coroutines/scheduling/TaskContext;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0f6c6c.  call `afterTask`(v0) @signature `Lkotlinx/coroutines/scheduling/TaskContext;.afterTask:()V` @kind interface;
  #L0f6c72.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.TaskContext` `getTaskContext`(`kotlinx.coroutines.scheduling.Task` v0 @kind object) @signature `Lkotlinx/coroutines/SchedulerTaskKt;.getTaskContext:(Lkotlinx/coroutines/scheduling/Task;)Lkotlinx/coroutines/scheduling/TaskContext;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0f6c54.  v0:= v0.`kotlinx.coroutines.scheduling.Task.taskContext` @type ^`kotlinx.coroutines.scheduling.TaskContext` @kind object;
  #L0f6c58.  return v0 @kind object;
}
procedure `void` `getTaskContext$annotations`(`kotlinx.coroutines.scheduling.Task` v0 @kind object) @signature `Lkotlinx/coroutines/SchedulerTaskKt;.getTaskContext$annotations:(Lkotlinx/coroutines/scheduling/Task;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f6c84.  return @kind void;
}
