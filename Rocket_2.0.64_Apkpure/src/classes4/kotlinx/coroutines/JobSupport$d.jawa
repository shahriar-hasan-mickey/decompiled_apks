record `kotlinx.coroutines.JobSupport$d` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.JobSupport$d.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.JobSupport$d.b` @AccessFlag ;
  `int` `kotlinx.coroutines.JobSupport$d.c` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.JobSupport$d.d` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlinx.coroutines.JobSupport` `kotlinx.coroutines.JobSupport$d.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobSupport$d` v0 @kind this, `kotlinx.coroutines.JobSupport` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport$d;.<init>:(Lkotlinx/coroutines/JobSupport;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0f458c.  v0.`kotlinx.coroutines.JobSupport$d.e` @type ^`kotlinx.coroutines.JobSupport` := v1 @kind object;
  #L0f4590.  v1:= 2I;
  #L0f4592.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0f4598.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.JobSupport$d` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport$d;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f4568.  v0:= new `kotlinx.coroutines.JobSupport$d`;
  #L0f456c.  v1:= v2.`kotlinx.coroutines.JobSupport$d.e` @type ^`kotlinx.coroutines.JobSupport` @kind object;
  #L0f4570.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/JobSupport$d;.<init>:(Lkotlinx/coroutines/JobSupport;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0f4576.  v0.`kotlinx.coroutines.JobSupport$d.d` @type ^`java.lang.Object` := v3 @kind object;
  #L0f457a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.JobSupport$d` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport$d;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0f43f8.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L0f43fc.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L0f4400.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/JobSupport$d;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0f4406.  v1:= temp @kind object;
  #L0f4408.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.JobSupport$d` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport$d;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f441c.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/JobSupport$d;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0f4422.  v1:= temp @kind object;
  #L0f4424.  v1:= (`kotlinx.coroutines.JobSupport$d`) v1 @kind object;
  #L0f4428.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f442c.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0f4432.  v1:= temp @kind object;
  #L0f4434.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.JobSupport$d` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/JobSupport$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0f4448.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f444e.  v0:= temp @kind object;
  #L0f4450.  v1:= v7.`kotlinx.coroutines.JobSupport$d.c` @type ^`int`;
  #L0f4454.  v2:= 2I;
  #L0f4456.  v3:= 1I;
  #L0f4458.  if v1 == 0 then goto L0f449e;
  #L0f445c.  if v1 == v3 then goto L0f4496;
  #L0f4460.  if v1 != v2 then goto L0f4486;
  #L0f4464.  v1:= v7.`kotlinx.coroutines.JobSupport$d.b` @type ^`java.lang.Object` @kind object;
  #L0f4468.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L0f446c.  v3:= v7.`kotlinx.coroutines.JobSupport$d.a` @type ^`java.lang.Object` @kind object;
  #L0f4470.  v3:= (`kotlinx.coroutines.internal.LockFreeLinkedListHead`) v3 @kind object;
  #L0f4474.  v4:= v7.`kotlinx.coroutines.JobSupport$d.d` @type ^`java.lang.Object` @kind object;
  #L0f4478.  v4:= (`kotlin.sequences.SequenceScope`) v4 @kind object;
  #L0f447c.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0f4482.  v8:= v7 @kind object;
  #L0f4484.  goto L0f4546;
  #L0f4486.  v8:= new `java.lang.IllegalStateException`;
  #L0f448a.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0f448e.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f4494.  throw v8;
  #L0f4496.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0f449c.  goto L0f4550;
  #L0f449e.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0f44a4.  v8:= v7.`kotlinx.coroutines.JobSupport$d.d` @type ^`java.lang.Object` @kind object;
  #L0f44a8.  v8:= (`kotlin.sequences.SequenceScope`) v8 @kind object;
  #L0f44ac.  v1:= v7.`kotlinx.coroutines.JobSupport$d.e` @type ^`kotlinx.coroutines.JobSupport` @kind object;
  #L0f44b0.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f44b6.  v1:= temp @kind object;
  #L0f44b8.  v4:= instanceof @variable v1 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L0f44bc.  if v4 == 0 then goto L0f44da;
  #L0f44c0.  v1:= (`kotlinx.coroutines.ChildHandleNode`) v1 @kind object;
  #L0f44c4.  v1:= v1.`kotlinx.coroutines.ChildHandleNode.childJob` @type ^`kotlinx.coroutines.ChildJob` @kind object;
  #L0f44c8.  v7.`kotlinx.coroutines.JobSupport$d.c` @type ^`int` := v3;
  #L0f44cc.  call temp:= `yield`(v8, v1, v7) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0f44d2.  v8:= temp @kind object;
  #L0f44d4.  if v8 != v0 then goto L0f4550;
  #L0f44d8.  return v0 @kind object;
  #L0f44da.  v3:= instanceof @variable v1 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L0f44de.  if v3 == 0 then goto L0f4550;
  #L0f44e2.  v1:= (`kotlinx.coroutines.Incomplete`) v1 @kind object;
  #L0f44e6.  call temp:= `getList`(v1) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L0f44ec.  v1:= temp @kind object;
  #L0f44ee.  if v1 != 0 then goto L0f44f4;
  #L0f44f2.  goto L0f4550;
  #L0f44f4.  call temp:= `getNext`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L0f44fa.  v3:= temp @kind object;
  #L0f44fc.  v3:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v3 @kind object;
  #L0f4500.  v4:= v8 @kind object;
  #L0f4502.  v8:= v7 @kind object;
  #L0f4504.  v6:= v3 @kind object;
  #L0f4506.  v3:= v1 @kind object;
  #L0f4508.  v1:= v6 @kind object;
  #L0f450a.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f4510.  v5:= temp;
  #L0f4512.  if v5 != 0 then goto L0f4550;
  #L0f4516.  v5:= instanceof @variable v1 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L0f451a.  if v5 == 0 then goto L0f4546;
  #L0f451e.  v5:= v1 @kind object;
  #L0f4520.  v5:= (`kotlinx.coroutines.ChildHandleNode`) v5 @kind object;
  #L0f4524.  v5:= v5.`kotlinx.coroutines.ChildHandleNode.childJob` @type ^`kotlinx.coroutines.ChildJob` @kind object;
  #L0f4528.  v8.`kotlinx.coroutines.JobSupport$d.d` @type ^`java.lang.Object` := v4 @kind object;
  #L0f452c.  v8.`kotlinx.coroutines.JobSupport$d.a` @type ^`java.lang.Object` := v3 @kind object;
  #L0f4530.  v8.`kotlinx.coroutines.JobSupport$d.b` @type ^`java.lang.Object` := v1 @kind object;
  #L0f4534.  v8.`kotlinx.coroutines.JobSupport$d.c` @type ^`int` := v2;
  #L0f4538.  call temp:= `yield`(v4, v5, v8) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0f453e.  v5:= temp @kind object;
  #L0f4540.  if v5 != v0 then goto L0f4546;
  #L0f4544.  return v0 @kind object;
  #L0f4546.  call temp:= `getNextNode`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f454c.  v1:= temp @kind object;
  #L0f454e.  goto L0f450a;
  #L0f4550.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f4554.  return v8 @kind object;
}
