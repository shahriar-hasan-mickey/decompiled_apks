record `kotlinx.coroutines.CancelledContinuation` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.CompletedExceptionally` @kind class {
  `int` `kotlinx.coroutines.CancelledContinuation._resumed` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.CancelledContinuation.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CancelledContinuation;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0ee0b0.  v0:= constclass @type ^`kotlinx.coroutines.CancelledContinuation` @kind object;
  #L0ee0b4.  v1:= "_resumed" @kind object;
  #L0ee0b8.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L0ee0be.  v0:= temp @kind object;
  #L0ee0c0.  `@@kotlinx.coroutines.CancelledContinuation.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L0ee0c4.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CancelledContinuation` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object, `java.lang.Throwable` v4 @kind object, `boolean` v5 ) @signature `Lkotlinx/coroutines/CancelledContinuation;.<init>:(Lkotlin/coroutines/Continuation;Ljava/lang/Throwable;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0ee0d8.  if v4 != 0 then goto L0ee112;
  #L0ee0dc.  v4:= new `java.util.concurrent.CancellationException`;
  #L0ee0e0.  v0:= new `java.lang.StringBuilder`;
  #L0ee0e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0ee0ea.  v1:= "Continuation " @kind object;
  #L0ee0ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ee0f4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ee0fa.  v3:= " was cancelled normally" @kind object;
  #L0ee0fe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ee104.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ee10a.  v3:= temp @kind object;
  #L0ee10c.  call `<init>`(v4, v3) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0ee112.  call `<init>`(v2, v4, v5) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;Z)V` @kind direct;
  #L0ee118.  v3:= 0I;
  #L0ee11a.  v2.`kotlinx.coroutines.CancelledContinuation._resumed` @type ^`int` := v3;
  #L0ee11e.  return @kind void;
}
procedure `boolean` `makeResumed`(`kotlinx.coroutines.CancelledContinuation` v3 @kind this) @signature `Lkotlinx/coroutines/CancelledContinuation;.makeResumed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ee08c.  v0:= `@@kotlinx.coroutines.CancelledContinuation.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L0ee090.  v1:= 0I;
  #L0ee092.  v2:= 1I;
  #L0ee094.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L0ee09a.  v0:= temp;
  #L0ee09c.  return v0;
}
