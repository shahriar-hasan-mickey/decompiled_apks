record `kotlinx.coroutines.b$b` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.CancelHandler` @kind class {
  `kotlinx.coroutines.b$a`[] `kotlinx.coroutines.b$b.a` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.b` `kotlinx.coroutines.b$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.b$b` v0 @kind this, `kotlinx.coroutines.b` v1 @kind object, `kotlinx.coroutines.b$a`[] v2 @kind object) @signature `Lkotlinx/coroutines/b$b;.<init>:(Lkotlinx/coroutines/b;[Lkotlinx/coroutines/b$a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0ec5ec.  v0.`kotlinx.coroutines.b$b.b` @type ^`kotlinx.coroutines.b` := v1 @kind object;
  #L0ec5f0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/CancelHandler;.<init>:()V` @kind direct;
  #L0ec5f6.  v0.`kotlinx.coroutines.b$b.a` @type ^`kotlinx.coroutines.b$a`[] := v2 @kind object;
  #L0ec5fa.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.b$b` v4 @kind this) @signature `Lkotlinx/coroutines/b$b;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0ec60c.  v0:= v4.`kotlinx.coroutines.b$b.a` @type ^`kotlinx.coroutines.b$a`[] @kind object;
  #L0ec610.  v1:= length @variable v0;
  #L0ec612.  v2:= 0I;
  #L0ec614.  if v2 >= v1 then goto L0ec630;
  #L0ec618.  v3:= v0[v2] @kind object;
  #L0ec61c.  v2:= v2 + 1;
  #L0ec620.  call temp:= `f`(v3) @signature `Lkotlinx/coroutines/b$a;.f:()Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L0ec626.  v3:= temp @kind object;
  #L0ec628.  call `dispose`(v3) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L0ec62e.  goto L0ec614;
  #L0ec630.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.b$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/b$b;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0ec588.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L0ec58c.  call `invoke`(v0, v1) @signature `Lkotlinx/coroutines/b$b;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0ec592.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0ec596.  return v1 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.b$b` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/b$b;.invoke:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L0ec644.  call `a`(v0) @signature `Lkotlinx/coroutines/b$b;.a:()V` @kind virtual;
  #L0ec64a.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.b$b` v2 @kind this) @signature `Lkotlinx/coroutines/b$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0ec5a8.  v0:= new `java.lang.StringBuilder`;
  #L0ec5ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0ec5b2.  v1:= "DisposeHandlersOnCancel[" @kind object;
  #L0ec5b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ec5bc.  v1:= v2.`kotlinx.coroutines.b$b.a` @type ^`kotlinx.coroutines.b$a`[] @kind object;
  #L0ec5c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ec5c6.  v1:= 93I;
  #L0ec5ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ec5d0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ec5d6.  v0:= temp @kind object;
  #L0ec5d8.  return v0 @kind object;
}
