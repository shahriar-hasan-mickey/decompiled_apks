record `kotlinx.coroutines.DelayKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `awaitCancellation`(`kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.awaitCancellation:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f0ad4.  v0:= instanceof @variable v4 @type ^`kotlinx.coroutines.DelayKt$a` @kind boolean;
  #L0f0ad8.  if v0 == 0 then goto L0f0afa;
  #L0f0adc.  v0:= v4 @kind object;
  #L0f0ade.  v0:= (`kotlinx.coroutines.DelayKt$a`) v0 @kind object;
  #L0f0ae2.  v1:= v0.`kotlinx.coroutines.DelayKt$a.b` @type ^`int`;
  #L0f0ae6.  v2:= -2147483648I;
  #L0f0aea.  v3:= v1 ^& v2 @kind int;
  #L0f0aee.  if v3 == 0 then goto L0f0afa;
  #L0f0af2.  v1:= v1 - v2 @kind int;
  #L0f0af4.  v0.`kotlinx.coroutines.DelayKt$a.b` @type ^`int` := v1;
  #L0f0af8.  goto L0f0b04;
  #L0f0afa.  v0:= new `kotlinx.coroutines.DelayKt$a`;
  #L0f0afe.  call `<init>`(v0, v4) @signature `Lkotlinx/coroutines/DelayKt$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0f0b04.  v4:= v0.`kotlinx.coroutines.DelayKt$a.a` @type ^`java.lang.Object` @kind object;
  #L0f0b08.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f0b0e.  v1:= temp @kind object;
  #L0f0b10.  v2:= v0.`kotlinx.coroutines.DelayKt$a.b` @type ^`int`;
  #L0f0b14.  v3:= 1I;
  #L0f0b16.  if v2 == 0 then goto L0f0b36;
  #L0f0b1a.  if v2 == v3 then goto L0f0b2e;
  #L0f0b1e.  v4:= new `java.lang.IllegalStateException`;
  #L0f0b22.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0f0b26.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f0b2c.  throw v4;
  #L0f0b2e.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0f0b34.  goto L0f0b78;
  #L0f0b36.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0f0b3c.  v0.`kotlinx.coroutines.DelayKt$a.b` @type ^`int` := v3;
  #L0f0b40.  v4:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L0f0b44.  call temp:= `intercepted`(v0) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L0f0b4a.  v2:= temp @kind object;
  #L0f0b4c.  call `<init>`(v4, v2, v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L0f0b52.  call `initCancellability`(v4) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L0f0b58.  call temp:= `getResult`(v4) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0f0b5e.  v4:= temp @kind object;
  #L0f0b60.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f0b66.  v2:= temp @kind object;
  #L0f0b68.  if v4 != v2 then goto L0f0b72;
  #L0f0b6c.  call `probeCoroutineSuspended`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f0b72.  if v4 != v1 then goto L0f0b78;
  #L0f0b76.  return v1 @kind object;
  #L0f0b78.  v4:= new `kotlin.KotlinNothingValueException`;
  #L0f0b7c.  call `<init>`(v4) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0f0b82.  throw v4;
}
procedure `java.lang.Object` `delay`(`long` v4 , `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f0b94.  v0:= 0L;
  #L0f0b98.  v2:= lcmp(v4, v0);
  #L0f0b9c.  if v2 > 0 then goto L0f0ba6;
  #L0f0ba0.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f0ba4.  return v4 @kind object;
  #L0f0ba6.  v0:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L0f0baa.  call temp:= `intercepted`(v6) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L0f0bb0.  v1:= temp @kind object;
  #L0f0bb2.  v2:= 1I;
  #L0f0bb4.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L0f0bba.  call `initCancellability`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L0f0bc0.  v1:= 9223372036854775807L;
  #L0f0bca.  v3:= lcmp(v4, v1);
  #L0f0bce.  if v3 >= 0 then goto L0f0be8;
  #L0f0bd2.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f0bd8.  v1:= temp @kind object;
  #L0f0bda.  call temp:= `getDelay`(v1) @signature `Lkotlinx/coroutines/DelayKt;.getDelay:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Delay;` @kind static;
  #L0f0be0.  v1:= temp @kind object;
  #L0f0be2.  call `scheduleResumeAfterDelay`(v1, v4, v0) @signature `Lkotlinx/coroutines/Delay;.scheduleResumeAfterDelay:(JLkotlinx/coroutines/CancellableContinuation;)V` @kind interface;
  #L0f0be8.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0f0bee.  v4:= temp @kind object;
  #L0f0bf0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f0bf6.  v5:= temp @kind object;
  #L0f0bf8.  if v4 != v5 then goto L0f0c02;
  #L0f0bfc.  call `probeCoroutineSuspended`(v6) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f0c02.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f0c08.  v5:= temp @kind object;
  #L0f0c0a.  if v4 != v5 then goto L0f0c10;
  #L0f0c0e.  return v4 @kind object;
  #L0f0c10.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f0c14.  return v4 @kind object;
}
procedure `java.lang.Object` `delay-VtjQ1oo`(`long` v0 , `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.delay-VtjQ1oo:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0f0c28.  call temp:= `toDelayMillis-LRDsOJo`(v0) @signature `Lkotlinx/coroutines/DelayKt;.toDelayMillis-LRDsOJo:(J)J` @kind static;
  #L0f0c2e.  v0:= temp @kind wide;
  #L0f0c30.  call temp:= `delay`(v0, v2) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L0f0c36.  v0:= temp @kind object;
  #L0f0c38.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f0c3e.  v1:= temp @kind object;
  #L0f0c40.  if v0 != v1 then goto L0f0c46;
  #L0f0c44.  return v0 @kind object;
  #L0f0c46.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f0c4a.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Delay` `getDelay`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.getDelay:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Delay;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f0c5c.  v0:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L0f0c60.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f0c66.  v1:= temp @kind object;
  #L0f0c68.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.Delay` @kind boolean;
  #L0f0c6c.  if v0 == 0 then goto L0f0c76;
  #L0f0c70.  v1:= (`kotlinx.coroutines.Delay`) v1 @kind object;
  #L0f0c74.  goto L0f0c78;
  #L0f0c76.  v1:= 0I;
  #L0f0c78.  if v1 != 0 then goto L0f0c84;
  #L0f0c7c.  call temp:= `getDefaultDelay`() @signature `Lkotlinx/coroutines/DefaultExecutorKt;.getDefaultDelay:()Lkotlinx/coroutines/Delay;` @kind static;
  #L0f0c82.  v1:= temp @kind object;
  #L0f0c84.  return v1 @kind object;
}
procedure `long` `toDelayMillis-LRDsOJo`(`long` v2 ) @signature `Lkotlinx/coroutines/DelayKt;.toDelayMillis-LRDsOJo:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f0c98.  v0:= `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` @kind object;
  #L0f0c9c.  call temp:= `getZERO-UwyO8pc`(v0) @signature `Lkotlin/time/Duration$Companion;.getZERO-UwyO8pc:()J` @kind virtual;
  #L0f0ca2.  v0:= temp @kind wide;
  #L0f0ca4.  call temp:= `compareTo-LRDsOJo`(v2, v0) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(JJ)I` @kind static;
  #L0f0caa.  v0:= temp;
  #L0f0cac.  if v0 <= 0 then goto L0f0cc6;
  #L0f0cb0.  call temp:= `getInWholeMilliseconds-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeMilliseconds-impl:(J)J` @kind static;
  #L0f0cb6.  v2:= temp @kind wide;
  #L0f0cb8.  v0:= 1L;
  #L0f0cbc.  call temp:= `coerceAtLeast`(v2, v0) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(JJ)J` @kind static;
  #L0f0cc2.  v2:= temp @kind wide;
  #L0f0cc4.  goto L0f0cca;
  #L0f0cc6.  v2:= 0L;
  #L0f0cca.  return v2 @kind wide;
}
