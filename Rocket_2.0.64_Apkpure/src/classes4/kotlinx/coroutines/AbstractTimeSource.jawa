record `kotlinx.coroutines.AbstractTimeSource` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`kotlinx.coroutines.AbstractTimeSource` v0 @kind this) @signature `Lkotlinx/coroutines/AbstractTimeSource;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0ec3bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0ec3c2.  return @kind void;
}
procedure `long` `currentTimeMillis`() @signature `Lkotlinx/coroutines/AbstractTimeSource;.currentTimeMillis:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `nanoTime`() @signature `Lkotlinx/coroutines/AbstractTimeSource;.nanoTime:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `parkNanos`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Lkotlinx/coroutines/AbstractTimeSource;.parkNanos:(Ljava/lang/Object;J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `registerTimeLoopThread`() @signature `Lkotlinx/coroutines/AbstractTimeSource;.registerTimeLoopThread:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `trackTask`() @signature `Lkotlinx/coroutines/AbstractTimeSource;.trackTask:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `unTrackTask`() @signature `Lkotlinx/coroutines/AbstractTimeSource;.unTrackTask:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `unpark`(`java.lang.Thread` v0 @kind object) @signature `Lkotlinx/coroutines/AbstractTimeSource;.unpark:(Ljava/lang/Thread;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `unregisterTimeLoopThread`() @signature `Lkotlinx/coroutines/AbstractTimeSource;.unregisterTimeLoopThread:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Runnable` `wrapTask`(`java.lang.Runnable` v0 @kind object) @signature `Lkotlinx/coroutines/AbstractTimeSource;.wrapTask:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
