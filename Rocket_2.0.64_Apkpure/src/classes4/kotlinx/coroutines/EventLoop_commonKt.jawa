record `kotlinx.coroutines.EventLoop_commonKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.EventLoop_commonKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.EventLoop_commonKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0f2558.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L0f255c.  v1:= "REMOVED_TASK" @kind object;
  #L0f2560.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f2566.  `@@kotlinx.coroutines.EventLoop_commonKt.a` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L0f256a.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L0f256e.  v1:= "CLOSED_EMPTY" @kind object;
  #L0f2572.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f2578.  `@@kotlinx.coroutines.EventLoop_commonKt.b` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L0f257c.  return @kind void;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getCLOSED_EMPTY$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getCLOSED_EMPTY$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0f24c4.  v0:= `@@kotlinx.coroutines.EventLoop_commonKt.b` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f24c8.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getDISPOSED_TASK$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getDISPOSED_TASK$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0f24dc.  v0:= `@@kotlinx.coroutines.EventLoop_commonKt.a` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f24e0.  return v0 @kind object;
}
procedure `long` `delayNanosToMillis`(`long` v2 ) @signature `Lkotlinx/coroutines/EventLoop_commonKt;.delayNanosToMillis:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f24f4.  v0:= 1000000L;
  #L0f24fa.  v2:= v2 / v0 @kind long;
  #L0f24fc.  return v2 @kind wide;
}
procedure `long` `delayToNanos`(`long` v3 ) @signature `Lkotlinx/coroutines/EventLoop_commonKt;.delayToNanos:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f2510.  v0:= 0L;
  #L0f2514.  v2:= lcmp(v3, v0);
  #L0f2518.  if v2 > 0 then goto L0f251e;
  #L0f251c.  goto L0f2546;
  #L0f251e.  v0:= 9223372036854L;
  #L0f2528.  v2:= lcmp(v3, v0);
  #L0f252c.  if v2 < 0 then goto L0f253c;
  #L0f2530.  v0:= 9223372036854775807L;
  #L0f253a.  goto L0f2546;
  #L0f253c.  v0:= 1000000L;
  #L0f2542.  v0:= v0 * v3 @kind long;
  #L0f2546.  return v0 @kind wide;
}
