record `kotlinx.coroutines.JobNode` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.CompletionHandlerBase` @kind class, `kotlinx.coroutines.DisposableHandle` @kind interface, `kotlinx.coroutines.Incomplete` @kind interface {
  `kotlinx.coroutines.JobSupport` `kotlinx.coroutines.JobNode.job` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobNode` v0 @kind this) @signature `Lkotlinx/coroutines/JobNode;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f3ed0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/CompletionHandlerBase;.<init>:()V` @kind direct;
  #L0f3ed6.  return @kind void;
}
procedure `void` `dispose`(`kotlinx.coroutines.JobNode` v1 @kind this) @signature `Lkotlinx/coroutines/JobNode;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f3ee8.  call temp:= `getJob`(v1) @signature `Lkotlinx/coroutines/JobNode;.getJob:()Lkotlinx/coroutines/JobSupport;` @kind virtual;
  #L0f3eee.  v0:= temp @kind object;
  #L0f3ef0.  call `removeNode$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.removeNode$kotlinx_coroutines_core:(Lkotlinx/coroutines/JobNode;)V` @kind virtual;
  #L0f3ef6.  return @kind void;
}
procedure `kotlinx.coroutines.JobSupport` `getJob`(`kotlinx.coroutines.JobNode` v1 @kind this) @signature `Lkotlinx/coroutines/JobNode;.getJob:()Lkotlinx/coroutines/JobSupport;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f3e94.  v0:= v1.`kotlinx.coroutines.JobNode.job` @type ^`kotlinx.coroutines.JobSupport` @kind object;
  #L0f3e98.  if v0 == 0 then goto L0f3e9e;
  #L0f3e9c.  return v0 @kind object;
  #L0f3e9e.  v0:= "job" @kind object;
  #L0f3ea2.  call `throwUninitializedPropertyAccessException`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L0f3ea8.  v0:= 0I;
  #L0f3eaa.  return v0 @kind object;
}
procedure `kotlinx.coroutines.NodeList` `getList`(`kotlinx.coroutines.JobNode` v1 @kind this) @signature `Lkotlinx/coroutines/JobNode;.getList:()Lkotlinx/coroutines/NodeList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f3ebc.  v0:= 0I;
  #L0f3ebe.  return v0 @kind object;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.JobNode` v1 @kind this) @signature `Lkotlinx/coroutines/JobNode;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f3e0c.  v0:= 1I;
  #L0f3e0e.  return v0;
}
procedure `void` `setJob`(`kotlinx.coroutines.JobNode` v0 @kind this, `kotlinx.coroutines.JobSupport` v1 @kind object) @signature `Lkotlinx/coroutines/JobNode;.setJob:(Lkotlinx/coroutines/JobSupport;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f3f08.  v0.`kotlinx.coroutines.JobNode.job` @type ^`kotlinx.coroutines.JobSupport` := v1 @kind object;
  #L0f3f0c.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.JobNode` v2 @kind this) @signature `Lkotlinx/coroutines/JobNode;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f3e20.  v0:= new `java.lang.StringBuilder`;
  #L0f3e24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f3e2a.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f3e30.  v1:= temp @kind object;
  #L0f3e32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f3e38.  v1:= 64I;
  #L0f3e3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f3e42.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f3e48.  v1:= temp @kind object;
  #L0f3e4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f3e50.  v1:= "[job@" @kind object;
  #L0f3e54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f3e5a.  call temp:= `getJob`(v2) @signature `Lkotlinx/coroutines/JobNode;.getJob:()Lkotlinx/coroutines/JobSupport;` @kind virtual;
  #L0f3e60.  v1:= temp @kind object;
  #L0f3e62.  call temp:= `getHexAddress`(v1) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f3e68.  v1:= temp @kind object;
  #L0f3e6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f3e70.  v1:= 93I;
  #L0f3e74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f3e7a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f3e80.  v0:= temp @kind object;
  #L0f3e82.  return v0 @kind object;
}
