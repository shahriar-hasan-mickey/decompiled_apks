record `kotlinx.coroutines.CancellableContinuation` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `kotlin.coroutines.Continuation` @kind interface {
}
procedure `boolean` `cancel`(`java.lang.Throwable` v0 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuation;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `completeResume`(`java.lang.Object` v0 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuation;.completeResume:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `initCancellability`() @signature `Lkotlinx/coroutines/CancellableContinuation;.initCancellability:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `invokeOnCancellation`(`kotlin.jvm.functions.Function1` v0 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuation;.invokeOnCancellation:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isActive`() @signature `Lkotlinx/coroutines/CancellableContinuation;.isActive:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isCancelled`() @signature `Lkotlinx/coroutines/CancellableContinuation;.isCancelled:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isCompleted`() @signature `Lkotlinx/coroutines/CancellableContinuation;.isCompleted:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `resume`(`java.lang.Object` v0 @kind object, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuation;.resume:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `resumeUndispatched`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuation;.resumeUndispatched:(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `resumeUndispatchedWithException`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind object, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuation;.resumeUndispatchedWithException:(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `tryResume`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuation;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `tryResume`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuation;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `tryResumeWithException`(`java.lang.Throwable` v0 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuation;.tryResumeWithException:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
