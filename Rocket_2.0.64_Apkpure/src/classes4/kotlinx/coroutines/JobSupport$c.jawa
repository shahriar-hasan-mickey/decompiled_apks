record `kotlinx.coroutines.JobSupport$c` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.Incomplete` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.JobSupport$c._exceptionsHolder` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.JobSupport$c._isCompleting` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.JobSupport$c._rootCause` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlinx.coroutines.NodeList` `kotlinx.coroutines.JobSupport$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobSupport$c` v0 @kind this, `kotlinx.coroutines.NodeList` v1 @kind object, `boolean` v2 , `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport$c;.<init>:(Lkotlinx/coroutines/NodeList;ZLjava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f4268.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0f426e.  v0.`kotlinx.coroutines.JobSupport$c.a` @type ^`kotlinx.coroutines.NodeList` := v1 @kind object;
  #L0f4272.  v0.`kotlinx.coroutines.JobSupport$c._isCompleting` @type ^`int` := v2;
  #L0f4276.  v0.`kotlinx.coroutines.JobSupport$c._rootCause` @type ^`java.lang.Object` := v3 @kind object;
  #L0f427a.  v1:= 0I;
  #L0f427c.  v0.`kotlinx.coroutines.JobSupport$c._exceptionsHolder` @type ^`java.lang.Object` := v1 @kind object;
  #L0f4280.  return @kind void;
}
procedure `java.util.ArrayList` `b`(`kotlinx.coroutines.JobSupport$c` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.b:()Ljava/util/ArrayList;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f4188.  v0:= new `java.util.ArrayList`;
  #L0f418c.  v1:= 4I;
  #L0f418e.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0f4194.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.c:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f40ac.  v0:= v1.`kotlinx.coroutines.JobSupport$c._exceptionsHolder` @type ^`java.lang.Object` @kind object;
  #L0f40b0.  return v0 @kind object;
}
procedure `void` `j`(`kotlinx.coroutines.JobSupport$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport$c;.j:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L0f4348.  v0.`kotlinx.coroutines.JobSupport$c._exceptionsHolder` @type ^`java.lang.Object` := v1 @kind object;
  #L0f434c.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.JobSupport$c` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport$c;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f4294.  call temp:= `d`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f429a.  v0:= temp @kind object;
  #L0f429c.  if v0 != 0 then goto L0f42a8;
  #L0f42a0.  call `k`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport$c;.k:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f42a6.  return @kind void;
  #L0f42a8.  if v3 != v0 then goto L0f42ae;
  #L0f42ac.  return @kind void;
  #L0f42ae.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.c:()Ljava/lang/Object;` @kind direct;
  #L0f42b4.  v0:= temp @kind object;
  #L0f42b6.  if v0 != 0 then goto L0f42c2;
  #L0f42ba.  call `j`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport$c;.j:(Ljava/lang/Object;)V` @kind direct;
  #L0f42c0.  goto L0f42fe;
  #L0f42c2.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L0f42c6.  if v1 == 0 then goto L0f42ec;
  #L0f42ca.  if v3 != v0 then goto L0f42d0;
  #L0f42ce.  return @kind void;
  #L0f42d0.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.b:()Ljava/util/ArrayList;` @kind direct;
  #L0f42d6.  v1:= temp @kind object;
  #L0f42d8.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f42de.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f42e4.  call `j`(v2, v1) @signature `Lkotlinx/coroutines/JobSupport$c;.j:(Ljava/lang/Object;)V` @kind direct;
  #L0f42ea.  goto L0f42fe;
  #L0f42ec.  v1:= instanceof @variable v0 @type ^`java.util.ArrayList` @kind boolean;
  #L0f42f0.  if v1 == 0 then goto L0f4300;
  #L0f42f4.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L0f42f8.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f42fe.  return @kind void;
  #L0f4300.  v3:= new `java.lang.IllegalStateException`;
  #L0f4304.  v1:= "State is " @kind object;
  #L0f4308.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f430e.  v0:= temp @kind object;
  #L0f4310.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f4316.  v0:= temp @kind object;
  #L0f4318.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f431e.  throw v3;
}
procedure `java.lang.Throwable` `d`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f416c.  v0:= v1.`kotlinx.coroutines.JobSupport$c._rootCause` @type ^`java.lang.Object` @kind object;
  #L0f4170.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L0f4174.  return v0 @kind object;
}
procedure `boolean` `e`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f4044.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f404a.  v0:= temp @kind object;
  #L0f404c.  if v0 == 0 then goto L0f4054;
  #L0f4050.  v0:= 1I;
  #L0f4052.  goto L0f4056;
  #L0f4054.  v0:= 0I;
  #L0f4056.  return v0;
}
procedure `boolean` `f`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f4068.  v0:= v1.`kotlinx.coroutines.JobSupport$c._isCompleting` @type ^`int`;
  #L0f406c.  return v0;
}
procedure `boolean` `g`(`kotlinx.coroutines.JobSupport$c` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.g:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f4080.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.c:()Ljava/lang/Object;` @kind direct;
  #L0f4086.  v0:= temp @kind object;
  #L0f4088.  call temp:= `access$getSEALED$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getSEALED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f408e.  v1:= temp @kind object;
  #L0f4090.  if v0 != v1 then goto L0f4098;
  #L0f4094.  v0:= 1I;
  #L0f4096.  goto L0f409a;
  #L0f4098.  v0:= 0I;
  #L0f409a.  return v0;
}
procedure `kotlinx.coroutines.NodeList` `getList`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.getList:()Lkotlinx/coroutines/NodeList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f4250.  v0:= v1.`kotlinx.coroutines.JobSupport$c.a` @type ^`kotlinx.coroutines.NodeList` @kind object;
  #L0f4254.  return v0 @kind object;
}
procedure `java.util.List` `h`(`kotlinx.coroutines.JobSupport$c` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport$c;.h:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f41a8.  call temp:= `c`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.c:()Ljava/lang/Object;` @kind direct;
  #L0f41ae.  v0:= temp @kind object;
  #L0f41b0.  if v0 != 0 then goto L0f41be;
  #L0f41b4.  call temp:= `b`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.b:()Ljava/util/ArrayList;` @kind direct;
  #L0f41ba.  v0:= temp @kind object;
  #L0f41bc.  goto L0f41e4;
  #L0f41be.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L0f41c2.  if v1 == 0 then goto L0f41d8;
  #L0f41c6.  call temp:= `b`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.b:()Ljava/util/ArrayList;` @kind direct;
  #L0f41cc.  v1:= temp @kind object;
  #L0f41ce.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f41d4.  v0:= v1 @kind object;
  #L0f41d6.  goto L0f41e4;
  #L0f41d8.  v1:= instanceof @variable v0 @type ^`java.util.ArrayList` @kind boolean;
  #L0f41dc.  if v1 == 0 then goto L0f4220;
  #L0f41e0.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L0f41e4.  call temp:= `d`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f41ea.  v1:= temp @kind object;
  #L0f41ec.  if v1 != 0 then goto L0f41f2;
  #L0f41f0.  goto L0f41fa;
  #L0f41f2.  v2:= 0I;
  #L0f41f4.  call `add`(v0, v2, v1) @signature `Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V` @kind virtual;
  #L0f41fa.  if v4 == 0 then goto L0f4210;
  #L0f41fe.  call temp:= `areEqual`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f4204.  v1:= temp;
  #L0f4206.  if v1 != 0 then goto L0f4210;
  #L0f420a.  call temp:= `add`(v0, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f4210.  call temp:= `access$getSEALED$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getSEALED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f4216.  v4:= temp @kind object;
  #L0f4218.  call `j`(v3, v4) @signature `Lkotlinx/coroutines/JobSupport$c;.j:(Ljava/lang/Object;)V` @kind direct;
  #L0f421e.  return v0 @kind object;
  #L0f4220.  v4:= new `java.lang.IllegalStateException`;
  #L0f4224.  v1:= "State is " @kind object;
  #L0f4228.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f422e.  v0:= temp @kind object;
  #L0f4230.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f4236.  v0:= temp @kind object;
  #L0f4238.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f423e.  throw v4;
}
procedure `void` `i`(`kotlinx.coroutines.JobSupport$c` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/JobSupport$c;.i:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f4330.  v0.`kotlinx.coroutines.JobSupport$c._isCompleting` @type ^`int` := v1;
  #L0f4334.  return @kind void;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f4020.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f4026.  v0:= temp @kind object;
  #L0f4028.  if v0 != 0 then goto L0f4030;
  #L0f402c.  v0:= 1I;
  #L0f402e.  goto L0f4032;
  #L0f4030.  v0:= 0I;
  #L0f4032.  return v0;
}
procedure `void` `k`(`kotlinx.coroutines.JobSupport$c` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport$c;.k:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f4360.  v0.`kotlinx.coroutines.JobSupport$c._rootCause` @type ^`java.lang.Object` := v1 @kind object;
  #L0f4364.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.JobSupport$c` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f40c4.  v0:= new `java.lang.StringBuilder`;
  #L0f40c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f40ce.  v1:= "Finishing[cancelling=" @kind object;
  #L0f40d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f40d8.  call temp:= `e`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L0f40de.  v1:= temp;
  #L0f40e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f40e6.  v1:= ", completing=" @kind object;
  #L0f40ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f40f0.  call temp:= `f`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L0f40f6.  v1:= temp;
  #L0f40f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f40fe.  v1:= ", rootCause=" @kind object;
  #L0f4102.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f4108.  call temp:= `d`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L0f410e.  v1:= temp @kind object;
  #L0f4110.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f4116.  v1:= ", exceptions=" @kind object;
  #L0f411a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f4120.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.c:()Ljava/lang/Object;` @kind direct;
  #L0f4126.  v1:= temp @kind object;
  #L0f4128.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f412e.  v1:= ", list=" @kind object;
  #L0f4132.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f4138.  call temp:= `getList`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.getList:()Lkotlinx/coroutines/NodeList;` @kind virtual;
  #L0f413e.  v1:= temp @kind object;
  #L0f4140.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f4146.  v1:= 93I;
  #L0f414a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f4150.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f4156.  v0:= temp @kind object;
  #L0f4158.  return v0 @kind object;
}
