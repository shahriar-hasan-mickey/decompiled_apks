record `kotlinx.coroutines.NodeList` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind class, `kotlinx.coroutines.Incomplete` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.NodeList` v0 @kind this) @signature `Lkotlinx/coroutines/NodeList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f669c.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListHead;.<init>:()V` @kind direct;
  #L0f66a2.  return @kind void;
}
procedure `kotlinx.coroutines.NodeList` `getList`(`kotlinx.coroutines.NodeList` v0 @kind this) @signature `Lkotlinx/coroutines/NodeList;.getList:()Lkotlinx/coroutines/NodeList;` @AccessFlag PUBLIC {
    temp;

  #L0f6688.  return v0 @kind object;
}
procedure `java.lang.String` `getString`(`kotlinx.coroutines.NodeList` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lkotlinx/coroutines/NodeList;.getString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f65d0.  v0:= new `java.lang.StringBuilder`;
  #L0f65d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f65da.  v1:= "List{" @kind object;
  #L0f65de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f65e4.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f65ea.  v5:= "}[" @kind object;
  #L0f65ee.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f65f4.  call temp:= `getNext`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L0f65fa.  v5:= temp @kind object;
  #L0f65fc.  v5:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v5 @kind object;
  #L0f6600.  v1:= 1I;
  #L0f6602.  call temp:= `areEqual`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f6608.  v2:= temp;
  #L0f660a.  if v2 != 0 then goto L0f663e;
  #L0f660e.  v2:= instanceof @variable v5 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L0f6612.  if v2 == 0 then goto L0f6634;
  #L0f6616.  v2:= v5 @kind object;
  #L0f6618.  v2:= (`kotlinx.coroutines.JobNode`) v2 @kind object;
  #L0f661c.  if v1 == 0 then goto L0f6624;
  #L0f6620.  v1:= 0I;
  #L0f6622.  goto L0f662e;
  #L0f6624.  v3:= ", " @kind object;
  #L0f6628.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f662e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f6634.  call temp:= `getNextNode`(v5) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L0f663a.  v5:= temp @kind object;
  #L0f663c.  goto L0f6602;
  #L0f663e.  v5:= "]" @kind object;
  #L0f6642.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f6648.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f664e.  v5:= temp @kind object;
  #L0f6650.  v0:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L0f6654.  call `checkNotNullExpressionValue`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0f665a.  return v5 @kind object;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.NodeList` v1 @kind this) @signature `Lkotlinx/coroutines/NodeList;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f65bc.  v0:= 1I;
  #L0f65be.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.NodeList` v1 @kind this) @signature `Lkotlinx/coroutines/NodeList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f666c.  call temp:= `toString`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.toString:()Ljava/lang/String;` @kind super;
  #L0f6672.  v0:= temp @kind object;
  #L0f6674.  return v0 @kind object;
}
