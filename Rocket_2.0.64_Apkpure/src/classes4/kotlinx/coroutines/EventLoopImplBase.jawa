record `kotlinx.coroutines.EventLoopImplBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.EventLoopImplPlatform` @kind class, `kotlinx.coroutines.Delay` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.EventLoopImplBase._delayed` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.EventLoopImplBase._isCompleted` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.EventLoopImplBase._queue` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.EventLoopImplBase.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.EventLoopImplBase.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/EventLoopImplBase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0f20d4.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L0f20d8.  v1:= constclass @type ^`kotlinx.coroutines.EventLoopImplBase` @kind object;
  #L0f20dc.  v2:= "_queue" @kind object;
  #L0f20e0.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L0f20e6.  v2:= temp @kind object;
  #L0f20e8.  `@@kotlinx.coroutines.EventLoopImplBase.d` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v2 @kind object;
  #L0f20ec.  v2:= "_delayed" @kind object;
  #L0f20f0.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L0f20f6.  v0:= temp @kind object;
  #L0f20f8.  `@@kotlinx.coroutines.EventLoopImplBase.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L0f20fc.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.EventLoopImplBase` v1 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0f2110.  call `<init>`(v1) @signature `Lkotlinx/coroutines/EventLoopImplPlatform;.<init>:()V` @kind direct;
  #L0f2116.  v0:= 0I;
  #L0f2118.  v1.`kotlinx.coroutines.EventLoopImplBase._queue` @type ^`java.lang.Object` := v0 @kind object;
  #L0f211c.  v1.`kotlinx.coroutines.EventLoopImplBase._delayed` @type ^`java.lang.Object` := v0 @kind object;
  #L0f2120.  v0:= 0I;
  #L0f2122.  v1.`kotlinx.coroutines.EventLoopImplBase._isCompleted` @type ^`int` := v0;
  #L0f2126.  return @kind void;
}
procedure `boolean` `access$isCompleted`(`kotlinx.coroutines.EventLoopImplBase` v0 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.access$isCompleted:(Lkotlinx/coroutines/EventLoopImplBase;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f1bf0.  call temp:= `isCompleted`(v0) @signature `Lkotlinx/coroutines/EventLoopImplBase;.isCompleted:()Z` @kind direct;
  #L0f1bf6.  v0:= temp;
  #L0f1bf8.  return v0;
}
procedure `void` `b`(`kotlinx.coroutines.EventLoopImplBase` v4 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f2138.  v0:= v4.`kotlinx.coroutines.EventLoopImplBase._queue` @type ^`java.lang.Object` @kind object;
  #L0f213c.  if v0 != 0 then goto L0f215c;
  #L0f2140.  v0:= `@@kotlinx.coroutines.EventLoopImplBase.d` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f2144.  v1:= 0I;
  #L0f2146.  call temp:= `access$getCLOSED_EMPTY$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getCLOSED_EMPTY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f214c.  v2:= temp @kind object;
  #L0f214e.  call temp:= `a`(v0, v4, v1, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f2154.  v0:= temp;
  #L0f2156.  if v0 == 0 then goto L0f2138;
  #L0f215a.  return @kind void;
  #L0f215c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.LockFreeTaskQueueCore` @kind boolean;
  #L0f2160.  if v1 == 0 then goto L0f2170;
  #L0f2164.  v0:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v0 @kind object;
  #L0f2168.  call temp:= `close`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.close:()Z` @kind virtual;
  #L0f216e.  return @kind void;
  #L0f2170.  call temp:= `access$getCLOSED_EMPTY$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getCLOSED_EMPTY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f2176.  v1:= temp @kind object;
  #L0f2178.  if v0 != v1 then goto L0f217e;
  #L0f217c.  return @kind void;
  #L0f217e.  v1:= new `kotlinx.coroutines.internal.LockFreeTaskQueueCore`;
  #L0f2182.  v2:= 8I;
  #L0f2186.  v3:= 1I;
  #L0f2188.  call `<init>`(v1, v2, v3) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.<init>:(IZ)V` @kind direct;
  #L0f218e.  v2:= v0 @kind object;
  #L0f2190.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L0f2194.  call temp:= `addLast`(v1, v2) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.addLast:(Ljava/lang/Object;)I` @kind virtual;
  #L0f219a.  v2:= `@@kotlinx.coroutines.EventLoopImplBase.d` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f219e.  call temp:= `a`(v2, v4, v0, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f21a4.  v0:= temp;
  #L0f21a6.  if v0 == 0 then goto L0f2138;
  #L0f21aa.  return @kind void;
}
procedure `java.lang.Runnable` `c`(`kotlinx.coroutines.EventLoopImplBase` v4 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase;.c:()Ljava/lang/Runnable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f1e00.  v0:= v4.`kotlinx.coroutines.EventLoopImplBase._queue` @type ^`java.lang.Object` @kind object;
  #L0f1e04.  v1:= 0I;
  #L0f1e06.  if v0 != 0 then goto L0f1e0c;
  #L0f1e0a.  return v1 @kind object;
  #L0f1e0c.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.LockFreeTaskQueueCore` @kind boolean;
  #L0f1e10.  if v2 == 0 then goto L0f1e44;
  #L0f1e14.  v1:= v0 @kind object;
  #L0f1e16.  v1:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v1 @kind object;
  #L0f1e1a.  call temp:= `removeFirstOrNull`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.removeFirstOrNull:()Ljava/lang/Object;` @kind virtual;
  #L0f1e20.  v2:= temp @kind object;
  #L0f1e22.  v3:= `@@kotlinx.coroutines.internal.LockFreeTaskQueueCore.REMOVE_FROZEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f1e26.  if v2 == v3 then goto L0f1e30;
  #L0f1e2a.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L0f1e2e.  return v2 @kind object;
  #L0f1e30.  v2:= `@@kotlinx.coroutines.EventLoopImplBase.d` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f1e34.  call temp:= `next`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.next:()Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;` @kind virtual;
  #L0f1e3a.  v1:= temp @kind object;
  #L0f1e3c.  call temp:= `a`(v2, v4, v0, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f1e42.  goto L0f1e00;
  #L0f1e44.  call temp:= `access$getCLOSED_EMPTY$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getCLOSED_EMPTY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f1e4a.  v2:= temp @kind object;
  #L0f1e4c.  if v0 != v2 then goto L0f1e52;
  #L0f1e50.  return v1 @kind object;
  #L0f1e52.  v2:= `@@kotlinx.coroutines.EventLoopImplBase.d` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f1e56.  call temp:= `a`(v2, v4, v0, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f1e5c.  v1:= temp;
  #L0f1e5e.  if v1 == 0 then goto L0f1e00;
  #L0f1e62.  v0:= (`java.lang.Runnable`) v0 @kind object;
  #L0f1e66.  return v0 @kind object;
}
procedure `boolean` `d`(`kotlinx.coroutines.EventLoopImplBase` v5 @kind this, `java.lang.Runnable` v6 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.d:(Ljava/lang/Runnable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0f1c0c.  v0:= v5.`kotlinx.coroutines.EventLoopImplBase._queue` @type ^`java.lang.Object` @kind object;
  #L0f1c10.  call temp:= `isCompleted`(v5) @signature `Lkotlinx/coroutines/EventLoopImplBase;.isCompleted:()Z` @kind direct;
  #L0f1c16.  v1:= temp;
  #L0f1c18.  v2:= 0I;
  #L0f1c1a.  if v1 == 0 then goto L0f1c20;
  #L0f1c1e.  return v2;
  #L0f1c20.  v1:= 1I;
  #L0f1c22.  if v0 != 0 then goto L0f1c3a;
  #L0f1c26.  v0:= `@@kotlinx.coroutines.EventLoopImplBase.d` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f1c2a.  v2:= 0I;
  #L0f1c2c.  call temp:= `a`(v0, v5, v2, v6) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f1c32.  v0:= temp;
  #L0f1c34.  if v0 == 0 then goto L0f1c0c;
  #L0f1c38.  return v1;
  #L0f1c3a.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.LockFreeTaskQueueCore` @kind boolean;
  #L0f1c3e.  if v3 == 0 then goto L0f1c78;
  #L0f1c42.  v3:= v0 @kind object;
  #L0f1c44.  v3:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v3 @kind object;
  #L0f1c48.  call temp:= `addLast`(v3, v6) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.addLast:(Ljava/lang/Object;)I` @kind virtual;
  #L0f1c4e.  v4:= temp;
  #L0f1c50.  if v4 == 0 then goto L0f1c76;
  #L0f1c54.  if v4 == v1 then goto L0f1c62;
  #L0f1c58.  v0:= 2I;
  #L0f1c5a.  if v4 == v0 then goto L0f1c60;
  #L0f1c5e.  goto L0f1c0c;
  #L0f1c60.  return v2;
  #L0f1c62.  v1:= `@@kotlinx.coroutines.EventLoopImplBase.d` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f1c66.  call temp:= `next`(v3) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.next:()Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;` @kind virtual;
  #L0f1c6c.  v2:= temp @kind object;
  #L0f1c6e.  call temp:= `a`(v1, v5, v0, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f1c74.  goto L0f1c0c;
  #L0f1c76.  return v1;
  #L0f1c78.  call temp:= `access$getCLOSED_EMPTY$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getCLOSED_EMPTY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f1c7e.  v3:= temp @kind object;
  #L0f1c80.  if v0 != v3 then goto L0f1c86;
  #L0f1c84.  return v2;
  #L0f1c86.  v2:= new `kotlinx.coroutines.internal.LockFreeTaskQueueCore`;
  #L0f1c8a.  v3:= 8I;
  #L0f1c8e.  call `<init>`(v2, v3, v1) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.<init>:(IZ)V` @kind direct;
  #L0f1c94.  v3:= v0 @kind object;
  #L0f1c96.  v3:= (`java.lang.Runnable`) v3 @kind object;
  #L0f1c9a.  call temp:= `addLast`(v2, v3) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.addLast:(Ljava/lang/Object;)I` @kind virtual;
  #L0f1ca0.  call temp:= `addLast`(v2, v6) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.addLast:(Ljava/lang/Object;)I` @kind virtual;
  #L0f1ca6.  v3:= `@@kotlinx.coroutines.EventLoopImplBase.d` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f1caa.  call temp:= `a`(v3, v5, v0, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f1cb0.  v0:= temp;
  #L0f1cb2.  if v0 == 0 then goto L0f1c0c;
  #L0f1cb6.  return v1;
}
procedure `void` `e`(`kotlinx.coroutines.EventLoopImplBase` v4 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase;.e:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f2204.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f220a.  v0:= temp @kind object;
  #L0f220c.  v1:= 0I;
  #L0f220e.  if v0 != 0 then goto L0f2216;
  #L0f2212.  v0:= v1 @kind object;
  #L0f2214.  goto L0f2226;
  #L0f2216.  call temp:= `nanoTime`(v0) @signature `Lkotlinx/coroutines/AbstractTimeSource;.nanoTime:()J` @kind virtual;
  #L0f221c.  v2:= temp @kind wide;
  #L0f221e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0f2224.  v0:= temp @kind object;
  #L0f2226.  if v0 != 0 then goto L0f2234;
  #L0f222a.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L0f2230.  v2:= temp @kind wide;
  #L0f2232.  goto L0f223c;
  #L0f2234.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L0f223a.  v2:= temp @kind wide;
  #L0f223c.  v0:= v4.`kotlinx.coroutines.EventLoopImplBase._delayed` @type ^`java.lang.Object` @kind object;
  #L0f2240.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue`) v0 @kind object;
  #L0f2244.  if v0 != 0 then goto L0f224c;
  #L0f2248.  v0:= v1 @kind object;
  #L0f224a.  goto L0f2258;
  #L0f224c.  call temp:= `removeFirstOrNull`(v0) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.removeFirstOrNull:()Lkotlinx/coroutines/internal/ThreadSafeHeapNode;` @kind virtual;
  #L0f2252.  v0:= temp @kind object;
  #L0f2254.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTask`) v0 @kind object;
  #L0f2258.  if v0 != 0 then goto L0f225e;
  #L0f225c.  return @kind void;
  #L0f225e.  call `reschedule`(v4, v2, v0) @signature `Lkotlinx/coroutines/EventLoopImplPlatform;.reschedule:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTask;)V` @kind virtual;
  #L0f2264.  goto L0f223c;
}
procedure `int` `f`(`kotlinx.coroutines.EventLoopImplBase` v3 @kind this, `long` v4 , `kotlinx.coroutines.EventLoopImplBase$DelayedTask` v6 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.f:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTask;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f1d88.  call temp:= `isCompleted`(v3) @signature `Lkotlinx/coroutines/EventLoopImplBase;.isCompleted:()Z` @kind direct;
  #L0f1d8e.  v0:= temp;
  #L0f1d90.  if v0 == 0 then goto L0f1d98;
  #L0f1d94.  v4:= 1I;
  #L0f1d96.  return v4;
  #L0f1d98.  v0:= v3.`kotlinx.coroutines.EventLoopImplBase._delayed` @type ^`java.lang.Object` @kind object;
  #L0f1d9c.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue`) v0 @kind object;
  #L0f1da0.  if v0 != 0 then goto L0f1dc8;
  #L0f1da4.  v0:= `@@kotlinx.coroutines.EventLoopImplBase.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0f1da8.  v1:= 0I;
  #L0f1daa.  v2:= new `kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue`;
  #L0f1dae.  call `<init>`(v2, v4) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTaskQueue;.<init>:(J)V` @kind direct;
  #L0f1db4.  call temp:= `a`(v0, v3, v1, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0f1dba.  v0:= v3.`kotlinx.coroutines.EventLoopImplBase._delayed` @type ^`java.lang.Object` @kind object;
  #L0f1dbe.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0f1dc4.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue`) v0 @kind object;
  #L0f1dc8.  call temp:= `scheduleTask`(v6, v4, v0, v3) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.scheduleTask:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTaskQueue;Lkotlinx/coroutines/EventLoopImplBase;)I` @kind virtual;
  #L0f1dce.  v4:= temp;
  #L0f1dd0.  return v4;
}
procedure `void` `g`(`kotlinx.coroutines.EventLoopImplBase` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/EventLoopImplBase;.g:(Z)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L0f2370.  v0.`kotlinx.coroutines.EventLoopImplBase._isCompleted` @type ^`int` := v1;
  #L0f2374.  return @kind void;
}
procedure `boolean` `h`(`kotlinx.coroutines.EventLoopImplBase` v1 @kind this, `kotlinx.coroutines.EventLoopImplBase$DelayedTask` v2 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.h:(Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f1d50.  v0:= v1.`kotlinx.coroutines.EventLoopImplBase._delayed` @type ^`java.lang.Object` @kind object;
  #L0f1d54.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue`) v0 @kind object;
  #L0f1d58.  if v0 != 0 then goto L0f1d60;
  #L0f1d5c.  v0:= 0I;
  #L0f1d5e.  goto L0f1d6c;
  #L0f1d60.  call temp:= `peek`(v0) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.peek:()Lkotlinx/coroutines/internal/ThreadSafeHeapNode;` @kind virtual;
  #L0f1d66.  v0:= temp @kind object;
  #L0f1d68.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTask`) v0 @kind object;
  #L0f1d6c.  if v0 != v2 then goto L0f1d74;
  #L0f1d70.  v2:= 1I;
  #L0f1d72.  goto L0f1d76;
  #L0f1d74.  v2:= 0I;
  #L0f1d76.  return v2;
}
procedure `boolean` `isCompleted`(`kotlinx.coroutines.EventLoopImplBase` v1 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase;.isCompleted:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f1cc8.  v0:= v1.`kotlinx.coroutines.EventLoopImplBase._isCompleted` @type ^`int`;
  #L0f1ccc.  return v0;
}
procedure `java.lang.Object` `delay`(`kotlinx.coroutines.EventLoopImplBase` v0 @kind this, `long` v1 , `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L0f1de4.  call temp:= `delay`(v0, v1, v3) @signature `Lkotlinx/coroutines/Delay$DefaultImpls;.delay:(Lkotlinx/coroutines/Delay;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L0f1dea.  v1:= temp @kind object;
  #L0f1dec.  return v1 @kind object;
}
procedure `void` `dispatch`(`kotlinx.coroutines.EventLoopImplBase` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f21bc.  call `enqueue`(v0, v2) @signature `Lkotlinx/coroutines/EventLoopImplBase;.enqueue:(Ljava/lang/Runnable;)V` @kind virtual;
  #L0f21c2.  return @kind void;
}
procedure `void` `enqueue`(`kotlinx.coroutines.EventLoopImplBase` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.enqueue:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f21d4.  call temp:= `d`(v1, v2) @signature `Lkotlinx/coroutines/EventLoopImplBase;.d:(Ljava/lang/Runnable;)Z` @kind direct;
  #L0f21da.  v0:= temp;
  #L0f21dc.  if v0 == 0 then goto L0f21e8;
  #L0f21e0.  call `unpark`(v1) @signature `Lkotlinx/coroutines/EventLoopImplPlatform;.unpark:()V` @kind virtual;
  #L0f21e6.  goto L0f21f2;
  #L0f21e8.  v0:= `@@kotlinx.coroutines.DefaultExecutor.INSTANCE` @type ^`kotlinx.coroutines.DefaultExecutor` @kind object;
  #L0f21ec.  call `enqueue`(v0, v2) @signature `Lkotlinx/coroutines/DefaultExecutor;.enqueue:(Ljava/lang/Runnable;)V` @kind virtual;
  #L0f21f2.  return @kind void;
}
procedure `long` `getNextTime`(`kotlinx.coroutines.EventLoopImplBase` v6 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase;.getNextTime:()J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0f1f10.  call temp:= `getNextTime`(v6) @signature `Lkotlinx/coroutines/EventLoop;.getNextTime:()J` @kind super;
  #L0f1f16.  v0:= temp @kind wide;
  #L0f1f18.  v2:= 0L;
  #L0f1f1c.  v4:= lcmp(v0, v2);
  #L0f1f20.  if v4 != 0 then goto L0f1f26;
  #L0f1f24.  return v2 @kind wide;
  #L0f1f26.  v0:= v6.`kotlinx.coroutines.EventLoopImplBase._queue` @type ^`java.lang.Object` @kind object;
  #L0f1f2a.  v4:= 9223372036854775807L;
  #L0f1f34.  if v0 != 0 then goto L0f1f3a;
  #L0f1f38.  goto L0f1f54;
  #L0f1f3a.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.LockFreeTaskQueueCore` @kind boolean;
  #L0f1f3e.  if v1 == 0 then goto L0f1fbc;
  #L0f1f42.  v0:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v0 @kind object;
  #L0f1f46.  call temp:= `isEmpty`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.isEmpty:()Z` @kind virtual;
  #L0f1f4c.  v0:= temp;
  #L0f1f4e.  if v0 != 0 then goto L0f1f54;
  #L0f1f52.  return v2 @kind wide;
  #L0f1f54.  v0:= v6.`kotlinx.coroutines.EventLoopImplBase._delayed` @type ^`java.lang.Object` @kind object;
  #L0f1f58.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue`) v0 @kind object;
  #L0f1f5c.  v1:= 0I;
  #L0f1f5e.  if v0 != 0 then goto L0f1f66;
  #L0f1f62.  v0:= v1 @kind object;
  #L0f1f64.  goto L0f1f72;
  #L0f1f66.  call temp:= `peek`(v0) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.peek:()Lkotlinx/coroutines/internal/ThreadSafeHeapNode;` @kind virtual;
  #L0f1f6c.  v0:= temp @kind object;
  #L0f1f6e.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTask`) v0 @kind object;
  #L0f1f72.  if v0 != 0 then goto L0f1f78;
  #L0f1f76.  return v4 @kind wide;
  #L0f1f78.  v4:= v0.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L0f1f7c.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f1f82.  v0:= temp @kind object;
  #L0f1f84.  if v0 != 0 then goto L0f1f8a;
  #L0f1f88.  goto L0f1f9a;
  #L0f1f8a.  call temp:= `nanoTime`(v0) @signature `Lkotlinx/coroutines/AbstractTimeSource;.nanoTime:()J` @kind virtual;
  #L0f1f90.  v0:= temp @kind wide;
  #L0f1f92.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0f1f98.  v1:= temp @kind object;
  #L0f1f9a.  if v1 != 0 then goto L0f1fa8;
  #L0f1f9e.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L0f1fa4.  v0:= temp @kind wide;
  #L0f1fa6.  goto L0f1fb0;
  #L0f1fa8.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L0f1fae.  v0:= temp @kind wide;
  #L0f1fb0.  v4:= v4 - v0 @kind long;
  #L0f1fb2.  call temp:= `coerceAtLeast`(v4, v2) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(JJ)J` @kind static;
  #L0f1fb8.  v0:= temp @kind wide;
  #L0f1fba.  return v0 @kind wide;
  #L0f1fbc.  call temp:= `access$getCLOSED_EMPTY$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getCLOSED_EMPTY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f1fc2.  v1:= temp @kind object;
  #L0f1fc4.  if v0 != v1 then goto L0f1fca;
  #L0f1fc8.  return v4 @kind wide;
  #L0f1fca.  return v2 @kind wide;
}
procedure `kotlinx.coroutines.DisposableHandle` `invokeOnTimeout`(`kotlinx.coroutines.EventLoopImplBase` v0 @kind this, `long` v1 , `java.lang.Runnable` v3 @kind object, `kotlin.coroutines.CoroutineContext` v4 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.invokeOnTimeout:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC {
    temp;

  #L0f1e78.  call temp:= `invokeOnTimeout`(v0, v1, v3, v4) @signature `Lkotlinx/coroutines/Delay$DefaultImpls;.invokeOnTimeout:(Lkotlinx/coroutines/Delay;JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/DisposableHandle;` @kind static;
  #L0f1e7e.  v1:= temp @kind object;
  #L0f1e80.  return v1 @kind object;
}
procedure `boolean` `isEmpty`(`kotlinx.coroutines.EventLoopImplBase` v4 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase;.isEmpty:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f1ce0.  call temp:= `isUnconfinedQueueEmpty`(v4) @signature `Lkotlinx/coroutines/EventLoop;.isUnconfinedQueueEmpty:()Z` @kind virtual;
  #L0f1ce6.  v0:= temp;
  #L0f1ce8.  v1:= 0I;
  #L0f1cea.  if v0 != 0 then goto L0f1cf0;
  #L0f1cee.  return v1;
  #L0f1cf0.  v0:= v4.`kotlinx.coroutines.EventLoopImplBase._delayed` @type ^`java.lang.Object` @kind object;
  #L0f1cf4.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue`) v0 @kind object;
  #L0f1cf8.  if v0 == 0 then goto L0f1d0a;
  #L0f1cfc.  call temp:= `isEmpty`(v0) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.isEmpty:()Z` @kind virtual;
  #L0f1d02.  v0:= temp;
  #L0f1d04.  if v0 != 0 then goto L0f1d0a;
  #L0f1d08.  return v1;
  #L0f1d0a.  v0:= v4.`kotlinx.coroutines.EventLoopImplBase._queue` @type ^`java.lang.Object` @kind object;
  #L0f1d0e.  v2:= 1I;
  #L0f1d10.  if v0 != 0 then goto L0f1d18;
  #L0f1d14.  v1:= 1I;
  #L0f1d16.  goto L0f1d3c;
  #L0f1d18.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.LockFreeTaskQueueCore` @kind boolean;
  #L0f1d1c.  if v3 == 0 then goto L0f1d2e;
  #L0f1d20.  v0:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v0 @kind object;
  #L0f1d24.  call temp:= `isEmpty`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.isEmpty:()Z` @kind virtual;
  #L0f1d2a.  v1:= temp;
  #L0f1d2c.  goto L0f1d3c;
  #L0f1d2e.  call temp:= `access$getCLOSED_EMPTY$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getCLOSED_EMPTY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f1d34.  v3:= temp @kind object;
  #L0f1d36.  if v0 != v3 then goto L0f1d3c;
  #L0f1d3a.  goto L0f1d14;
  #L0f1d3c.  return v1;
}
procedure `long` `processNextEvent`(`kotlinx.coroutines.EventLoopImplBase` v9 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase;.processNextEvent:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L0f1fdc.  call temp:= `processUnconfinedEvent`(v9) @signature `Lkotlinx/coroutines/EventLoop;.processUnconfinedEvent:()Z` @kind virtual;
  #L0f1fe2.  v0:= temp;
  #L0f1fe4.  v1:= 0L;
  #L0f1fe8.  if v0 == 0 then goto L0f1fee;
  #L0f1fec.  return v1 @kind wide;
  #L0f1fee.  v0:= v9.`kotlinx.coroutines.EventLoopImplBase._delayed` @type ^`java.lang.Object` @kind object;
  #L0f1ff2.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue`) v0 @kind object;
  #L0f1ff6.  if v0 == 0 then goto L0f2092;
  #L0f1ffa.  call temp:= `isEmpty`(v0) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.isEmpty:()Z` @kind virtual;
  #L0f2000.  v3:= temp;
  #L0f2002.  if v3 != 0 then goto L0f2092;
  #L0f2006.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f200c.  v3:= temp @kind object;
  #L0f200e.  v4:= 0I;
  #L0f2010.  if v3 != 0 then goto L0f2018;
  #L0f2014.  v3:= v4 @kind object;
  #L0f2016.  goto L0f2028;
  #L0f2018.  call temp:= `nanoTime`(v3) @signature `Lkotlinx/coroutines/AbstractTimeSource;.nanoTime:()J` @kind virtual;
  #L0f201e.  v5:= temp @kind wide;
  #L0f2020.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0f2026.  v3:= temp @kind object;
  #L0f2028.  if v3 != 0 then goto L0f2036;
  #L0f202c.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L0f2032.  v5:= temp @kind wide;
  #L0f2034.  goto L0f203e;
  #L0f2036.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L0f203c.  v5:= temp @kind wide;
  #L0f203e.  @monitorenter v0
  #L0f2040.  call temp:= `firstImpl`(v0) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.firstImpl:()Lkotlinx/coroutines/internal/ThreadSafeHeapNode;` @kind virtual;
  #L0f2046.  v3:= temp @kind object;
  #L0f2048.  if v3 != 0 then goto L0f2052;
  #L0f204c.  @monitorexit v0
  #L0f204e.  v3:= v4 @kind object;
  #L0f2050.  goto L0f2082;
  #L0f2052.  v3:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTask`) v3 @kind object;
  #L0f2056.  call temp:= `timeToExecute`(v3, v5) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.timeToExecute:(J)Z` @kind virtual;
  #L0f205c.  v7:= temp;
  #L0f205e.  v8:= 0I;
  #L0f2060.  if v7 == 0 then goto L0f206e;
  #L0f2064.  call temp:= `d`(v9, v3) @signature `Lkotlinx/coroutines/EventLoopImplBase;.d:(Ljava/lang/Runnable;)Z` @kind direct;
  #L0f206a.  v3:= temp;
  #L0f206c.  goto L0f2070;
  #L0f206e.  v3:= 0I;
  #L0f2070.  if v3 == 0 then goto L0f207e;
  #L0f2074.  call temp:= `removeAtImpl`(v0, v8) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.removeAtImpl:(I)Lkotlinx/coroutines/internal/ThreadSafeHeapNode;` @kind virtual;
  #L0f207a.  v3:= temp @kind object;
  #L0f207c.  goto L0f2080;
  #L0f207e.  v3:= v4 @kind object;
  #L0f2080.  @monitorexit v0
  #L0f2082.  v3:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTask`) v3 @kind object;
  #L0f2086.  if v3 != 0 then goto L0f203e;
  #L0f208a.  goto L0f2092;
  #L0f208c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f208e.  @monitorexit v0
  #L0f2090.  throw v1;
  #L0f2092.  call temp:= `c`(v9) @signature `Lkotlinx/coroutines/EventLoopImplBase;.c:()Ljava/lang/Runnable;` @kind direct;
  #L0f2098.  v0:= temp @kind object;
  #L0f209a.  if v0 == 0 then goto L0f20a6;
  #L0f209e.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L0f20a4.  return v1 @kind wide;
  #L0f20a6.  call temp:= `getNextTime`(v9) @signature `Lkotlinx/coroutines/EventLoopImplBase;.getNextTime:()J` @kind virtual;
  #L0f20ac.  v0:= temp @kind wide;
  #L0f20ae.  return v0 @kind wide;
  catch `java.lang.Throwable` @[L0f2040..L0f2048] goto L0f208c;
  catch `java.lang.Throwable` @[L0f2052..L0f207c] goto L0f208c;
}
procedure `void` `resetAll`(`kotlinx.coroutines.EventLoopImplBase` v1 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase;.resetAll:()V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L0f2278.  v0:= 0I;
  #L0f227a.  v1.`kotlinx.coroutines.EventLoopImplBase._queue` @type ^`java.lang.Object` := v0 @kind object;
  #L0f227e.  v1.`kotlinx.coroutines.EventLoopImplBase._delayed` @type ^`java.lang.Object` := v0 @kind object;
  #L0f2282.  return @kind void;
}
procedure `void` `schedule`(`kotlinx.coroutines.EventLoopImplBase` v2 @kind this, `long` v3 , `kotlinx.coroutines.EventLoopImplBase$DelayedTask` v5 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.schedule:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTask;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f2294.  call temp:= `f`(v2, v3, v5) @signature `Lkotlinx/coroutines/EventLoopImplBase;.f:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTask;)I` @kind direct;
  #L0f229a.  v0:= temp;
  #L0f229c.  if v0 == 0 then goto L0f22ce;
  #L0f22a0.  v1:= 1I;
  #L0f22a2.  if v0 == v1 then goto L0f22c6;
  #L0f22a6.  v3:= 2I;
  #L0f22a8.  if v0 != v3 then goto L0f22ae;
  #L0f22ac.  goto L0f22e0;
  #L0f22ae.  v3:= new `java.lang.IllegalStateException`;
  #L0f22b2.  v4:= "unexpected result" @kind object;
  #L0f22b6.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f22bc.  v4:= temp @kind object;
  #L0f22be.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f22c4.  throw v3;
  #L0f22c6.  call `reschedule`(v2, v3, v5) @signature `Lkotlinx/coroutines/EventLoopImplPlatform;.reschedule:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTask;)V` @kind virtual;
  #L0f22cc.  goto L0f22e0;
  #L0f22ce.  call temp:= `h`(v2, v5) @signature `Lkotlinx/coroutines/EventLoopImplBase;.h:(Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;)Z` @kind direct;
  #L0f22d4.  v3:= temp;
  #L0f22d6.  if v3 == 0 then goto L0f22e0;
  #L0f22da.  call `unpark`(v2) @signature `Lkotlinx/coroutines/EventLoopImplPlatform;.unpark:()V` @kind virtual;
  #L0f22e0.  return @kind void;
}
procedure `kotlinx.coroutines.DisposableHandle` `scheduleInvokeOnTimeout`(`kotlinx.coroutines.EventLoopImplBase` v3 @kind this, `long` v4 , `java.lang.Runnable` v6 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.scheduleInvokeOnTimeout:(JLjava/lang/Runnable;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f1e94.  call temp:= `delayToNanos`(v4) @signature `Lkotlinx/coroutines/EventLoop_commonKt;.delayToNanos:(J)J` @kind static;
  #L0f1e9a.  v4:= temp @kind wide;
  #L0f1e9c.  v0:= 1.9999999999999998D;
  #L0f1ea6.  v2:= lcmp(v4, v0);
  #L0f1eaa.  if v2 >= 0 then goto L0f1ef8;
  #L0f1eae.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f1eb4.  v0:= temp @kind object;
  #L0f1eb6.  if v0 != 0 then goto L0f1ebe;
  #L0f1eba.  v0:= 0I;
  #L0f1ebc.  goto L0f1ece;
  #L0f1ebe.  call temp:= `nanoTime`(v0) @signature `Lkotlinx/coroutines/AbstractTimeSource;.nanoTime:()J` @kind virtual;
  #L0f1ec4.  v0:= temp @kind wide;
  #L0f1ec6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0f1ecc.  v0:= temp @kind object;
  #L0f1ece.  if v0 != 0 then goto L0f1edc;
  #L0f1ed2.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L0f1ed8.  v0:= temp @kind wide;
  #L0f1eda.  goto L0f1ee4;
  #L0f1edc.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L0f1ee2.  v0:= temp @kind wide;
  #L0f1ee4.  v2:= new `kotlinx.coroutines.EventLoopImplBase$b`;
  #L0f1ee8.  v4:= v4 + v0 @kind long;
  #L0f1eea.  call `<init>`(v2, v4, v6) @signature `Lkotlinx/coroutines/EventLoopImplBase$b;.<init>:(JLjava/lang/Runnable;)V` @kind direct;
  #L0f1ef0.  call `schedule`(v3, v0, v2) @signature `Lkotlinx/coroutines/EventLoopImplBase;.schedule:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTask;)V` @kind virtual;
  #L0f1ef6.  goto L0f1efc;
  #L0f1ef8.  v2:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L0f1efc.  return v2 @kind object;
}
procedure `void` `scheduleResumeAfterDelay`(`kotlinx.coroutines.EventLoopImplBase` v3 @kind this, `long` v4 , `kotlinx.coroutines.CancellableContinuation` v6 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase;.scheduleResumeAfterDelay:(JLkotlinx/coroutines/CancellableContinuation;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0f22f4.  call temp:= `delayToNanos`(v4) @signature `Lkotlinx/coroutines/EventLoop_commonKt;.delayToNanos:(J)J` @kind static;
  #L0f22fa.  v4:= temp @kind wide;
  #L0f22fc.  v0:= 1.9999999999999998D;
  #L0f2306.  v2:= lcmp(v4, v0);
  #L0f230a.  if v2 >= 0 then goto L0f235c;
  #L0f230e.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f2314.  v0:= temp @kind object;
  #L0f2316.  if v0 != 0 then goto L0f231e;
  #L0f231a.  v0:= 0I;
  #L0f231c.  goto L0f232e;
  #L0f231e.  call temp:= `nanoTime`(v0) @signature `Lkotlinx/coroutines/AbstractTimeSource;.nanoTime:()J` @kind virtual;
  #L0f2324.  v0:= temp @kind wide;
  #L0f2326.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0f232c.  v0:= temp @kind object;
  #L0f232e.  if v0 != 0 then goto L0f233c;
  #L0f2332.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L0f2338.  v0:= temp @kind wide;
  #L0f233a.  goto L0f2344;
  #L0f233c.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L0f2342.  v0:= temp @kind wide;
  #L0f2344.  v2:= new `kotlinx.coroutines.EventLoopImplBase$a`;
  #L0f2348.  v4:= v4 + v0 @kind long;
  #L0f234a.  call `<init>`(v2, v3, v4, v6) @signature `Lkotlinx/coroutines/EventLoopImplBase$a;.<init>:(Lkotlinx/coroutines/EventLoopImplBase;JLkotlinx/coroutines/CancellableContinuation;)V` @kind direct;
  #L0f2350.  call `disposeOnCancellation`(v6, v2) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.disposeOnCancellation:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/DisposableHandle;)V` @kind static;
  #L0f2356.  call `schedule`(v3, v0, v2) @signature `Lkotlinx/coroutines/EventLoopImplBase;.schedule:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTask;)V` @kind virtual;
  #L0f235c.  return @kind void;
}
procedure `void` `shutdown`(`kotlinx.coroutines.EventLoopImplBase` v5 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0f2388.  v0:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L0f238c.  call `resetEventLoop$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.resetEventLoop$kotlinx_coroutines_core:()V` @kind virtual;
  #L0f2392.  v0:= 1I;
  #L0f2394.  call `g`(v5, v0) @signature `Lkotlinx/coroutines/EventLoopImplBase;.g:(Z)V` @kind direct;
  #L0f239a.  call `b`(v5) @signature `Lkotlinx/coroutines/EventLoopImplBase;.b:()V` @kind direct;
  #L0f23a0.  call temp:= `processNextEvent`(v5) @signature `Lkotlinx/coroutines/EventLoopImplBase;.processNextEvent:()J` @kind virtual;
  #L0f23a6.  v0:= temp @kind wide;
  #L0f23a8.  v2:= 0L;
  #L0f23ac.  v4:= lcmp(v0, v2);
  #L0f23b0.  if v4 > 0 then goto L0f23b6;
  #L0f23b4.  goto L0f23a0;
  #L0f23b6.  call `e`(v5) @signature `Lkotlinx/coroutines/EventLoopImplBase;.e:()V` @kind direct;
  #L0f23bc.  return @kind void;
}
