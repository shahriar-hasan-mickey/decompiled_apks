record `kotlinx.coroutines.m` @kind class @AccessFlag FINAL extends `java.util.concurrent.Executor` @kind interface {
  `kotlinx.coroutines.CoroutineDispatcher` `kotlinx.coroutines.m.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.m` v0 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v1 @kind object) @signature `Lkotlinx/coroutines/m;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f14ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0f14b2.  v0.`kotlinx.coroutines.m.a` @type ^`kotlinx.coroutines.CoroutineDispatcher` := v1 @kind object;
  #L0f14b6.  return @kind void;
}
procedure `void` `execute`(`kotlinx.coroutines.m` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lkotlinx/coroutines/m;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f14c8.  v0:= v2.`kotlinx.coroutines.m.a` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L0f14cc.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L0f14d0.  call `dispatch`(v0, v1, v3) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L0f14d6.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.m` v1 @kind this) @signature `Lkotlinx/coroutines/m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f148c.  v0:= v1.`kotlinx.coroutines.m.a` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L0f1490.  call temp:= `toString`(v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f1496.  v0:= temp @kind object;
  #L0f1498.  return v0 @kind object;
}
