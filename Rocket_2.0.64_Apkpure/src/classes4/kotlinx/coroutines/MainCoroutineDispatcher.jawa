record `kotlinx.coroutines.MainCoroutineDispatcher` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.CoroutineDispatcher` @kind class {
}
procedure `void` `<init>`(`kotlinx.coroutines.MainCoroutineDispatcher` v0 @kind this) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f65a4.  call `<init>`(v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.<init>:()V` @kind direct;
  #L0f65aa.  return @kind void;
}
procedure `kotlinx.coroutines.MainCoroutineDispatcher` `getImmediate`() @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.getImmediate:()Lkotlinx/coroutines/MainCoroutineDispatcher;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `limitedParallelism`(`kotlinx.coroutines.MainCoroutineDispatcher` v0 @kind this, `int` v1 ) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.limitedParallelism:(I)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC {
    temp;

  #L0f658c.  call `checkParallelism`(v1) @signature `Lkotlinx/coroutines/internal/LimitedDispatcherKt;.checkParallelism:(I)V` @kind static;
  #L0f6592.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.MainCoroutineDispatcher` v2 @kind this) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f64e8.  call temp:= `toStringInternalImpl`(v2) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.toStringInternalImpl:()Ljava/lang/String;` @kind virtual;
  #L0f64ee.  v0:= temp @kind object;
  #L0f64f0.  if v0 != 0 then goto L0f652c;
  #L0f64f4.  v0:= new `java.lang.StringBuilder`;
  #L0f64f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f64fe.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f6504.  v1:= temp @kind object;
  #L0f6506.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f650c.  v1:= 64I;
  #L0f6510.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f6516.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f651c.  v1:= temp @kind object;
  #L0f651e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f6524.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f652a.  v0:= temp @kind object;
  #L0f652c.  return v0 @kind object;
}
procedure `java.lang.String` `toStringInternalImpl`(`kotlinx.coroutines.MainCoroutineDispatcher` v2 @kind this) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.toStringInternalImpl:()Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L0f6540.  call temp:= `getMain`() @signature `Lkotlinx/coroutines/Dispatchers;.getMain:()Lkotlinx/coroutines/MainCoroutineDispatcher;` @kind static;
  #L0f6546.  v0:= temp @kind object;
  #L0f6548.  if v2 != v0 then goto L0f6552;
  #L0f654c.  v0:= "Dispatchers.Main" @kind object;
  #L0f6550.  return v0 @kind object;
  #L0f6552.  v1:= 0I;
  #L0f6554.  call temp:= `getImmediate`(v0) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.getImmediate:()Lkotlinx/coroutines/MainCoroutineDispatcher;` @kind virtual;
  #L0f655a.  v0:= temp @kind object;
  #L0f655c.  goto L0f6560;
  #L0f655e.  v0:= v1 @kind object;
  #L0f6560.  if v2 != v0 then goto L0f656a;
  #L0f6564.  v0:= "Dispatchers.Main.immediate" @kind object;
  #L0f6568.  return v0 @kind object;
  #L0f656a.  return v1 @kind object;
  catch `java.lang.UnsupportedOperationException` @[L0f6554..L0f655c] goto L0f655e;
}
