record `kotlinx.coroutines.test.TestCoroutineContext$Dispatcher` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.EventLoop` @kind class, `kotlinx.coroutines.Delay` @kind interface {
  `kotlinx.coroutines.test.TestCoroutineContext` `kotlinx.coroutines.test.TestCoroutineContext$Dispatcher.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher` v2 @kind this, `kotlinx.coroutines.test.TestCoroutineContext` v3 @kind object) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher;.<init>:(Lkotlinx/coroutines/test/TestCoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1293c0.  v2.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher.d` @type ^`kotlinx.coroutines.test.TestCoroutineContext` := v3 @kind object;
  #L1293c4.  call `<init>`(v2) @signature `Lkotlinx/coroutines/EventLoop;.<init>:()V` @kind direct;
  #L1293ca.  v3:= 0I;
  #L1293cc.  v0:= 1I;
  #L1293ce.  v1:= 0I;
  #L1293d0.  call `incrementUseCount$default`(v2, v3, v0, v1) @signature `Lkotlinx/coroutines/EventLoop;.incrementUseCount$default:(Lkotlinx/coroutines/EventLoop;ZILjava/lang/Object;)V` @kind static;
  #L1293d6.  return @kind void;
}
procedure `java.lang.Object` `delay`(`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher` v0 @kind this, `long` v1 , `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L129314.  call temp:= `delay`(v0, v1, v3) @signature `Lkotlinx/coroutines/Delay$DefaultImpls;.delay:(Lkotlinx/coroutines/Delay;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L12931a.  v1:= temp @kind object;
  #L12931c.  return v1 @kind object;
}
procedure `void` `dispatch`(`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L1293e8.  v1:= v0.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher.d` @type ^`kotlinx.coroutines.test.TestCoroutineContext` @kind object;
  #L1293ec.  call `access$enqueue`(v1, v2) @signature `Lkotlinx/coroutines/test/TestCoroutineContext;.access$enqueue:(Lkotlinx/coroutines/test/TestCoroutineContext;Ljava/lang/Runnable;)V` @kind static;
  #L1293f2.  return @kind void;
}
procedure `kotlinx.coroutines.DisposableHandle` `invokeOnTimeout`(`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher` v0 @kind this, `long` v1 , `java.lang.Runnable` v3 @kind object, `kotlin.coroutines.CoroutineContext` v4 @kind object) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher;.invokeOnTimeout:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC {
    temp;

  #L129374.  v4:= v0.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher.d` @type ^`kotlinx.coroutines.test.TestCoroutineContext` @kind object;
  #L129378.  call temp:= `access$postDelayed`(v4, v3, v1) @signature `Lkotlinx/coroutines/test/TestCoroutineContext;.access$postDelayed:(Lkotlinx/coroutines/test/TestCoroutineContext;Ljava/lang/Runnable;J)Lkotlinx/coroutines/test/a;` @kind static;
  #L12937e.  v1:= temp @kind object;
  #L129380.  v2:= new `kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1`;
  #L129384.  v3:= v0.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher.d` @type ^`kotlinx.coroutines.test.TestCoroutineContext` @kind object;
  #L129388.  call `<init>`(v2, v3, v1) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher$invokeOnTimeout$1;.<init>:(Lkotlinx/coroutines/test/TestCoroutineContext;Lkotlinx/coroutines/test/a;)V` @kind direct;
  #L12938e.  return v2 @kind object;
}
procedure `long` `processNextEvent`(`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher` v2 @kind this) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher;.processNextEvent:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1293a0.  v0:= v2.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher.d` @type ^`kotlinx.coroutines.test.TestCoroutineContext` @kind object;
  #L1293a4.  call temp:= `access$processNextEvent`(v0) @signature `Lkotlinx/coroutines/test/TestCoroutineContext;.access$processNextEvent:(Lkotlinx/coroutines/test/TestCoroutineContext;)J` @kind static;
  #L1293aa.  v0:= temp @kind wide;
  #L1293ac.  return v0 @kind wide;
}
procedure `void` `scheduleResumeAfterDelay`(`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher` v2 @kind this, `long` v3 , `kotlinx.coroutines.CancellableContinuation` v5 @kind object) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher;.scheduleResumeAfterDelay:(JLkotlinx/coroutines/CancellableContinuation;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L129404.  v0:= v2.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher.d` @type ^`kotlinx.coroutines.test.TestCoroutineContext` @kind object;
  #L129408.  v1:= new `kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1`;
  #L12940c.  call `<init>`(v1, v5, v2) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1;.<init>:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher;)V` @kind direct;
  #L129412.  call temp:= `access$postDelayed`(v0, v1, v3) @signature `Lkotlinx/coroutines/test/TestCoroutineContext;.access$postDelayed:(Lkotlinx/coroutines/test/TestCoroutineContext;Ljava/lang/Runnable;J)Lkotlinx/coroutines/test/a;` @kind static;
  #L129418.  return @kind void;
}
procedure `boolean` `shouldBeProcessedFromContext`(`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher` v1 @kind this) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher;.shouldBeProcessedFromContext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L129300.  v0:= 1I;
  #L129302.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher` v2 @kind this) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L129330.  v0:= new `java.lang.StringBuilder`;
  #L129334.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12933a.  v1:= "Dispatcher(" @kind object;
  #L12933e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L129344.  v1:= v2.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher.d` @type ^`kotlinx.coroutines.test.TestCoroutineContext` @kind object;
  #L129348.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12934e.  v1:= 41I;
  #L129352.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L129358.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12935e.  v0:= temp @kind object;
  #L129360.  return v0 @kind object;
}
