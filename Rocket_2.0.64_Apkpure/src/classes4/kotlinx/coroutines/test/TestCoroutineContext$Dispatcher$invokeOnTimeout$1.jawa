record `kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.DisposableHandle` @kind interface {
  `kotlinx.coroutines.test.TestCoroutineContext` `kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.test.a` `kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1` v0 @kind this, `kotlinx.coroutines.test.TestCoroutineContext` v1 @kind object, `kotlinx.coroutines.test.a` v2 @kind object) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher$invokeOnTimeout$1;.<init>:(Lkotlinx/coroutines/test/TestCoroutineContext;Lkotlinx/coroutines/test/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L129274.  v0.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1.a` @type ^`kotlinx.coroutines.test.TestCoroutineContext` := v1 @kind object;
  #L129278.  v0.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1.b` @type ^`kotlinx.coroutines.test.a` := v2 @kind object;
  #L12927c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L129282.  return @kind void;
}
procedure `void` `dispose`(`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1` v2 @kind this) @signature `Lkotlinx/coroutines/test/TestCoroutineContext$Dispatcher$invokeOnTimeout$1;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L129294.  v0:= v2.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1.a` @type ^`kotlinx.coroutines.test.TestCoroutineContext` @kind object;
  #L129298.  call temp:= `access$getQueue$p`(v0) @signature `Lkotlinx/coroutines/test/TestCoroutineContext;.access$getQueue$p:(Lkotlinx/coroutines/test/TestCoroutineContext;)Lkotlinx/coroutines/internal/ThreadSafeHeap;` @kind static;
  #L12929e.  v0:= temp @kind object;
  #L1292a0.  v1:= v2.`kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1.b` @type ^`kotlinx.coroutines.test.a` @kind object;
  #L1292a4.  call temp:= `remove`(v0, v1) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.remove:(Lkotlinx/coroutines/internal/ThreadSafeHeapNode;)Z` @kind virtual;
  #L1292aa.  return @kind void;
}
