record `kotlinx.coroutines.test.a` @kind class @AccessFlag FINAL extends `java.lang.Comparable` @kind interface, `java.lang.Runnable` @kind interface, `kotlinx.coroutines.internal.ThreadSafeHeapNode` @kind interface {
  `java.lang.Runnable` `kotlinx.coroutines.test.a.a` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.test.a.b` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.test.a.c` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.internal.ThreadSafeHeap` `kotlinx.coroutines.test.a.d` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.test.a.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.test.a` v0 @kind this, `java.lang.Runnable` v1 @kind object, `long` v2 , `long` v4 ) @signature `Lkotlinx/coroutines/test/a;.<init>:(Ljava/lang/Runnable;JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L129cf4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L129cfa.  v0.`kotlinx.coroutines.test.a.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L129cfe.  v0.`kotlinx.coroutines.test.a.b` @type ^`long` := v2 @kind wide;
  #L129d02.  v0.`kotlinx.coroutines.test.a.c` @type ^`long` := v4 @kind wide;
  #L129d06.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.test.a` v8 @kind this, `java.lang.Runnable` v9 @kind object, `long` v10 , `long` v12 , `int` v14 , `kotlin.jvm.internal.DefaultConstructorMarker` v15 @kind object) @signature `Lkotlinx/coroutines/test/a;.<init>:(Ljava/lang/Runnable;JJILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L129d18.  v15:= v14 ^& 2;
  #L129d1c.  v0:= 0L;
  #L129d20.  if v15 == 0 then goto L129d28;
  #L129d24.  v4:= v0 @kind wide;
  #L129d26.  goto L129d2a;
  #L129d28.  v4:= v10 @kind wide;
  #L129d2a.  v10:= v14 ^& 4;
  #L129d2e.  if v10 == 0 then goto L129d36;
  #L129d32.  v6:= v0 @kind wide;
  #L129d34.  goto L129d38;
  #L129d36.  v6:= v12 @kind wide;
  #L129d38.  v2:= v8 @kind object;
  #L129d3a.  v3:= v9 @kind object;
  #L129d3c.  call `<init>`(v2, v3, v4, v6) @signature `Lkotlinx/coroutines/test/a;.<init>:(Ljava/lang/Runnable;JJ)V` @kind direct;
  #L129d42.  return @kind void;
}
procedure `int` `a`(`kotlinx.coroutines.test.a` v5 @kind this, `kotlinx.coroutines.test.a` v6 @kind object) @signature `Lkotlinx/coroutines/test/a;.a:(Lkotlinx/coroutines/test/a;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L129c30.  v0:= v5.`kotlinx.coroutines.test.a.c` @type ^`long` @kind wide;
  #L129c34.  v2:= v6.`kotlinx.coroutines.test.a.c` @type ^`long` @kind wide;
  #L129c38.  v4:= lcmp(v0, v2);
  #L129c3c.  if v4 != 0 then goto L129c52;
  #L129c40.  v0:= v5.`kotlinx.coroutines.test.a.b` @type ^`long` @kind wide;
  #L129c44.  v2:= v6.`kotlinx.coroutines.test.a.b` @type ^`long` @kind wide;
  #L129c48.  call temp:= `compare`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(JJ)I` @kind static;
  #L129c4e.  v6:= temp;
  #L129c50.  goto L129c5a;
  #L129c52.  call temp:= `compare`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(JJ)I` @kind static;
  #L129c58.  v6:= temp;
  #L129c5a.  return v6;
}
procedure `int` `compareTo`(`kotlinx.coroutines.test.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/test/a;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L129c10.  v1:= (`kotlinx.coroutines.test.a`) v1 @kind object;
  #L129c14.  call temp:= `a`(v0, v1) @signature `Lkotlinx/coroutines/test/a;.a:(Lkotlinx/coroutines/test/a;)I` @kind virtual;
  #L129c1a.  v1:= temp;
  #L129c1c.  return v1;
}
procedure `kotlinx.coroutines.internal.ThreadSafeHeap` `getHeap`(`kotlinx.coroutines.test.a` v1 @kind this) @signature `Lkotlinx/coroutines/test/a;.getHeap:()Lkotlinx/coroutines/internal/ThreadSafeHeap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L129cdc.  v0:= v1.`kotlinx.coroutines.test.a.d` @type ^`kotlinx.coroutines.internal.ThreadSafeHeap` @kind object;
  #L129ce0.  return v0 @kind object;
}
procedure `int` `getIndex`(`kotlinx.coroutines.test.a` v1 @kind this) @signature `Lkotlinx/coroutines/test/a;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L129c6c.  v0:= v1.`kotlinx.coroutines.test.a.e` @type ^`int`;
  #L129c70.  return v0;
}
procedure `void` `run`(`kotlinx.coroutines.test.a` v1 @kind this) @signature `Lkotlinx/coroutines/test/a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L129d54.  v0:= v1.`kotlinx.coroutines.test.a.a` @type ^`java.lang.Runnable` @kind object;
  #L129d58.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L129d5e.  return @kind void;
}
procedure `void` `setHeap`(`kotlinx.coroutines.test.a` v0 @kind this, `kotlinx.coroutines.internal.ThreadSafeHeap` v1 @kind object) @signature `Lkotlinx/coroutines/test/a;.setHeap:(Lkotlinx/coroutines/internal/ThreadSafeHeap;)V` @AccessFlag PUBLIC {
    temp;

  #L129d70.  v0.`kotlinx.coroutines.test.a.d` @type ^`kotlinx.coroutines.internal.ThreadSafeHeap` := v1 @kind object;
  #L129d74.  return @kind void;
}
procedure `void` `setIndex`(`kotlinx.coroutines.test.a` v0 @kind this, `int` v1 ) @signature `Lkotlinx/coroutines/test/a;.setIndex:(I)V` @AccessFlag PUBLIC {
    temp;

  #L129d88.  v0.`kotlinx.coroutines.test.a.e` @type ^`int` := v1;
  #L129d8c.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.test.a` v3 @kind this) @signature `Lkotlinx/coroutines/test/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L129c84.  v0:= new `java.lang.StringBuilder`;
  #L129c88.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L129c8e.  v1:= "TimedRunnable(time=" @kind object;
  #L129c92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L129c98.  v1:= v3.`kotlinx.coroutines.test.a.c` @type ^`long` @kind wide;
  #L129c9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L129ca2.  v1:= ", run=" @kind object;
  #L129ca6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L129cac.  v1:= v3.`kotlinx.coroutines.test.a.a` @type ^`java.lang.Runnable` @kind object;
  #L129cb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L129cb6.  v1:= 41I;
  #L129cba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L129cc0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L129cc6.  v0:= temp @kind object;
  #L129cc8.  return v0 @kind object;
}
