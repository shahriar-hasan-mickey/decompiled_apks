record `kotlinx.coroutines.p` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.Incomplete` @kind interface {
  `boolean` `kotlinx.coroutines.p.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.p` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/p;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f1804.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0f180a.  v0.`kotlinx.coroutines.p.a` @type ^`boolean` := v1 @kind boolean;
  #L0f180e.  return @kind void;
}
procedure `kotlinx.coroutines.NodeList` `getList`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.getList:()Lkotlinx/coroutines/NodeList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f17f0.  v0:= 0I;
  #L0f17f2.  return v0 @kind object;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f1784.  v0:= v1.`kotlinx.coroutines.p.a` @type ^`boolean` @kind boolean;
  #L0f1788.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.p` v2 @kind this) @signature `Lkotlinx/coroutines/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f179c.  v0:= new `java.lang.StringBuilder`;
  #L0f17a0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f17a6.  v1:= "Empty{" @kind object;
  #L0f17aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f17b0.  call temp:= `isActive`(v2) @signature `Lkotlinx/coroutines/p;.isActive:()Z` @kind virtual;
  #L0f17b6.  v1:= temp;
  #L0f17b8.  if v1 == 0 then goto L0f17c2;
  #L0f17bc.  v1:= "Active" @kind object;
  #L0f17c0.  goto L0f17c6;
  #L0f17c2.  v1:= "New" @kind object;
  #L0f17c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f17cc.  v1:= 125I;
  #L0f17d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f17d6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f17dc.  v0:= temp @kind object;
  #L0f17de.  return v0 @kind object;
}
