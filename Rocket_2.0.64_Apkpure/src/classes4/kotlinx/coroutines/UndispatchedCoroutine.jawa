record `kotlinx.coroutines.UndispatchedCoroutine` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.ScopeCoroutine` @kind class {
  `java.lang.ThreadLocal` `kotlinx.coroutines.UndispatchedCoroutine.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.UndispatchedCoroutine` v2 @kind this, `kotlin.coroutines.CoroutineContext` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0f7920.  v0:= `@@kotlinx.coroutines.k0.a` @type ^`kotlinx.coroutines.k0` @kind object;
  #L0f7924.  call temp:= `get`(v3, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f792a.  v1:= temp @kind object;
  #L0f792c.  if v1 != 0 then goto L0f7938;
  #L0f7930.  call temp:= `plus`(v3, v0) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f7936.  v3:= temp @kind object;
  #L0f7938.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0f793e.  v3:= new `java.lang.ThreadLocal`;
  #L0f7942.  call `<init>`(v3) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L0f7948.  v2.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`java.lang.ThreadLocal` := v3 @kind object;
  #L0f794c.  return @kind void;
}
procedure `void` `afterResume`(`kotlinx.coroutines.UndispatchedCoroutine` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.afterResume:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0f7960.  v0:= v5.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`java.lang.ThreadLocal` @kind object;
  #L0f7964.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L0f796a.  v0:= temp @kind object;
  #L0f796c.  v0:= (`kotlin.Pair`) v0 @kind object;
  #L0f7970.  v1:= 0I;
  #L0f7972.  if v0 != 0 then goto L0f7978;
  #L0f7976.  goto L0f799c;
  #L0f7978.  call temp:= `component1`(v0) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L0f797e.  v2:= temp @kind object;
  #L0f7980.  v2:= (`kotlin.coroutines.CoroutineContext`) v2 @kind object;
  #L0f7984.  call temp:= `component2`(v0) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L0f798a.  v0:= temp @kind object;
  #L0f798c.  call `restoreThreadContext`(v2, v0) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0f7992.  v0:= v5.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`java.lang.ThreadLocal` @kind object;
  #L0f7996.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L0f799c.  v0:= v5.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0f79a0.  call temp:= `recoverResult`(v6, v0) @signature `Lkotlinx/coroutines/CompletionStateKt;.recoverResult:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L0f79a6.  v6:= temp @kind object;
  #L0f79a8.  v0:= v5.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0f79ac.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f79b2.  v2:= temp @kind object;
  #L0f79b4.  call temp:= `updateThreadContext`(v2, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f79ba.  v3:= temp @kind object;
  #L0f79bc.  v4:= `@@kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f79c0.  if v3 == v4 then goto L0f79cc;
  #L0f79c4.  call temp:= `updateUndispatchedCompletion`(v0, v2, v3) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L0f79ca.  v1:= temp @kind object;
  #L0f79cc.  v0:= v5.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0f79d0.  call `resumeWith`(v0, v6) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L0f79d6.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f79da.  if v1 == 0 then goto L0f79ea;
  #L0f79de.  call temp:= `clearThreadContext`(v1) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L0f79e4.  v6:= temp;
  #L0f79e6.  if v6 == 0 then goto L0f79f0;
  #L0f79ea.  call `restoreThreadContext`(v2, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0f79f0.  return @kind void;
  #L0f79f2.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f79f4.  if v1 == 0 then goto L0f7a04;
  #L0f79f8.  call temp:= `clearThreadContext`(v1) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L0f79fe.  v0:= temp;
  #L0f7a00.  if v0 == 0 then goto L0f7a0a;
  #L0f7a04.  call `restoreThreadContext`(v2, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0f7a0a.  throw v6;
  catch `java.lang.Throwable` @[L0f79cc..L0f79da] goto L0f79f2;
}
procedure `boolean` `clearThreadContext`(`kotlinx.coroutines.UndispatchedCoroutine` v2 @kind this) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f78ec.  v0:= v2.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`java.lang.ThreadLocal` @kind object;
  #L0f78f0.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L0f78f6.  v0:= temp @kind object;
  #L0f78f8.  if v0 != 0 then goto L0f7900;
  #L0f78fc.  v0:= 0I;
  #L0f78fe.  return v0;
  #L0f7900.  v0:= v2.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`java.lang.ThreadLocal` @kind object;
  #L0f7904.  v1:= 0I;
  #L0f7906.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L0f790c.  v0:= 1I;
  #L0f790e.  return v0;
}
procedure `void` `saveThreadContext`(`kotlinx.coroutines.UndispatchedCoroutine` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.saveThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f7a28.  v0:= v1.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`java.lang.ThreadLocal` @kind object;
  #L0f7a2c.  call temp:= `to`(v2, v3) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L0f7a32.  v2:= temp @kind object;
  #L0f7a34.  call `set`(v0, v2) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L0f7a3a.  return @kind void;
}
