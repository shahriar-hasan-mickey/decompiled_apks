record `kotlinx.coroutines.CoroutineContextKt$c` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
}
global `kotlinx.coroutines.CoroutineContextKt$c` `@@kotlinx.coroutines.CoroutineContextKt$c.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineContextKt$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0eef04.  v0:= new `kotlinx.coroutines.CoroutineContextKt$c`;
  #L0eef08.  call `<init>`(v0) @signature `Lkotlinx/coroutines/CoroutineContextKt$c;.<init>:()V` @kind direct;
  #L0eef0e.  `@@kotlinx.coroutines.CoroutineContextKt$c.a` @type ^`kotlinx.coroutines.CoroutineContextKt$c` := v0 @kind object;
  #L0eef12.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineContextKt$c` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineContextKt$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L0eef24.  v0:= 2I;
  #L0eef26.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L0eef2c.  return @kind void;
}
procedure `java.lang.Boolean` `a`(`kotlinx.coroutines.CoroutineContextKt$c` v0 @kind this, `boolean` v1 , `kotlin.coroutines.CoroutineContext$Element` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt$c;.a:(ZLkotlin/coroutines/CoroutineContext$Element;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0eeea8.  if v1 != 0 then goto L0eeeba;
  #L0eeeac.  v1:= instanceof @variable v2 @type ^`kotlinx.coroutines.CopyableThreadContextElement` @kind boolean;
  #L0eeeb0.  if v1 == 0 then goto L0eeeb6;
  #L0eeeb4.  goto L0eeeba;
  #L0eeeb6.  v1:= 0I;
  #L0eeeb8.  goto L0eeebc;
  #L0eeeba.  v1:= 1I;
  #L0eeebc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L0eeec2.  v1:= temp @kind object;
  #L0eeec4.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.CoroutineContextKt$c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt$c;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0eeed8.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L0eeedc.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L0eeee2.  v1:= temp;
  #L0eeee4.  v2:= (`kotlin.coroutines.CoroutineContext$Element`) v2 @kind object;
  #L0eeee8.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineContextKt$c;.a:(ZLkotlin/coroutines/CoroutineContext$Element;)Ljava/lang/Boolean;` @kind virtual;
  #L0eeeee.  v1:= temp @kind object;
  #L0eeef0.  return v1 @kind object;
}
