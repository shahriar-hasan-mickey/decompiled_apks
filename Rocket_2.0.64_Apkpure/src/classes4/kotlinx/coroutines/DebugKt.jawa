record `kotlinx.coroutines.DebugKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@kotlinx.coroutines.DebugKt.DEBUG_PROPERTY_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@kotlinx.coroutines.DebugKt.DEBUG_PROPERTY_VALUE_AUTO` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@kotlinx.coroutines.DebugKt.DEBUG_PROPERTY_VALUE_OFF` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@kotlinx.coroutines.DebugKt.DEBUG_PROPERTY_VALUE_ON` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@kotlinx.coroutines.DebugKt.STACKTRACE_RECOVERY_PROPERTY_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.DebugKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.DebugKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.DebugKt.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicLong` `@@kotlinx.coroutines.DebugKt.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/DebugKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0f005c.  v0:= "kotlinx.coroutines.debug" @kind object;
  #L0f0060.  call temp:= `systemProp`(v0) @signature `Lkotlinx/coroutines/internal/SystemPropsKt;.systemProp:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0f0066.  v0:= temp @kind object;
  #L0f0068.  v1:= 1I;
  #L0f006a.  v2:= 0I;
  #L0f006c.  if v0 == 0 then goto L0f0122;
  #L0f0070.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L0f0076.  v3:= temp;
  #L0f0078.  if v3 == 0 then goto L0f00ce;
  #L0f007c.  v4:= 3551I;
  #L0f0080.  if v3 == v4 then goto L0f00bc;
  #L0f0084.  v4:= 109935I;
  #L0f008a.  if v3 == v4 then goto L0f00aa;
  #L0f008e.  v4:= 3005871I;
  #L0f0094.  if v3 != v4 then goto L0f00e2;
  #L0f0098.  v3:= "auto" @kind object;
  #L0f009c.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f00a2.  v3:= temp;
  #L0f00a4.  if v3 == 0 then goto L0f00e2;
  #L0f00a8.  goto L0f0122;
  #L0f00aa.  v3:= "off" @kind object;
  #L0f00ae.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f00b4.  v3:= temp;
  #L0f00b6.  if v3 == 0 then goto L0f00e2;
  #L0f00ba.  goto L0f0122;
  #L0f00bc.  v3:= "on" @kind object;
  #L0f00c0.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f00c6.  v3:= temp;
  #L0f00c8.  if v3 == 0 then goto L0f00e2;
  #L0f00cc.  goto L0f00de;
  #L0f00ce.  v3:= "" @kind object;
  #L0f00d2.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0f00d8.  v3:= temp;
  #L0f00da.  if v3 == 0 then goto L0f00e2;
  #L0f00de.  v0:= 1I;
  #L0f00e0.  goto L0f0124;
  #L0f00e2.  v1:= new `java.lang.IllegalStateException`;
  #L0f00e6.  v2:= new `java.lang.StringBuilder`;
  #L0f00ea.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f00f0.  v3:= "System property 'kotlinx.coroutines.debug' has unrecognized value '" @kind object;
  #L0f00f4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f00fa.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f0100.  v0:= 39I;
  #L0f0104.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f010a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f0110.  v0:= temp @kind object;
  #L0f0112.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f0118.  v0:= temp @kind object;
  #L0f011a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f0120.  throw v1;
  #L0f0122.  v0:= 0I;
  #L0f0124.  `@@kotlinx.coroutines.DebugKt.b` @type ^`boolean` := v0 @kind boolean;
  #L0f0128.  if v0 == 0 then goto L0f013e;
  #L0f012c.  v0:= "kotlinx.coroutines.stacktrace.recovery" @kind object;
  #L0f0130.  call temp:= `systemProp`(v0, v1) @signature `Lkotlinx/coroutines/internal/SystemPropsKt;.systemProp:(Ljava/lang/String;Z)Z` @kind static;
  #L0f0136.  v0:= temp;
  #L0f0138.  if v0 == 0 then goto L0f013e;
  #L0f013c.  goto L0f0140;
  #L0f013e.  v1:= 0I;
  #L0f0140.  `@@kotlinx.coroutines.DebugKt.c` @type ^`boolean` := v1 @kind boolean;
  #L0f0144.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L0f0148.  v1:= 0L;
  #L0f014c.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:(J)V` @kind direct;
  #L0f0152.  `@@kotlinx.coroutines.DebugKt.d` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L0f0156.  return @kind void;
}
procedure `boolean` `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0efffc.  v0:= `@@kotlinx.coroutines.DebugKt.a` @type ^`boolean` @kind boolean;
  #L0f0000.  return v0;
}
procedure `java.util.concurrent.atomic.AtomicLong` `getCOROUTINE_ID`() @signature `Lkotlinx/coroutines/DebugKt;.getCOROUTINE_ID:()Ljava/util/concurrent/atomic/AtomicLong;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f0044.  v0:= `@@kotlinx.coroutines.DebugKt.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L0f0048.  return v0 @kind object;
}
procedure `boolean` `getDEBUG`() @signature `Lkotlinx/coroutines/DebugKt;.getDEBUG:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f0014.  v0:= `@@kotlinx.coroutines.DebugKt.b` @type ^`boolean` @kind boolean;
  #L0f0018.  return v0;
}
procedure `boolean` `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f002c.  v0:= `@@kotlinx.coroutines.DebugKt.c` @type ^`boolean` @kind boolean;
  #L0f0030.  return v0;
}
procedure `void` `resetCoroutineId`() @signature `Lkotlinx/coroutines/DebugKt;.resetCoroutineId:()V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f0168.  v0:= `@@kotlinx.coroutines.DebugKt.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L0f016c.  v1:= 0L;
  #L0f0170.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.set:(J)V` @kind virtual;
  #L0f0176.  return @kind void;
}
