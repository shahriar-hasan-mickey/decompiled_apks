record `kotlinx.coroutines.DispatchedTask` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.scheduling.Task` @kind class {
  `int` `kotlinx.coroutines.DispatchedTask.resumeMode` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.DispatchedTask` v0 @kind this, `int` v1 ) @signature `Lkotlinx/coroutines/DispatchedTask;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f11e8.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/Task;.<init>:()V` @kind direct;
  #L0f11ee.  v0.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v1;
  #L0f11f2.  return @kind void;
}
procedure `void` `cancelCompletedResult$kotlinx_coroutines_core`(`kotlinx.coroutines.DispatchedTask` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/DispatchedTask;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L0f1204.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `getDelegate$kotlinx_coroutines_core`() @signature `Lkotlinx/coroutines/DispatchedTask;.getDelegate$kotlinx_coroutines_core:()Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Throwable` `getExceptionalResult$kotlinx_coroutines_core`(`kotlinx.coroutines.DispatchedTask` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/DispatchedTask;.getExceptionalResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f11b8.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0f11bc.  v1:= 0I;
  #L0f11be.  if v0 == 0 then goto L0f11c8;
  #L0f11c2.  v3:= (`kotlinx.coroutines.CompletedExceptionally`) v3 @kind object;
  #L0f11c6.  goto L0f11ca;
  #L0f11c8.  v3:= v1 @kind object;
  #L0f11ca.  if v3 != 0 then goto L0f11d0;
  #L0f11ce.  goto L0f11d4;
  #L0f11d0.  v1:= v3.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0f11d4.  return v1 @kind object;
}
procedure `java.lang.Object` `getSuccessfulResult$kotlinx_coroutines_core`(`kotlinx.coroutines.DispatchedTask` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/DispatchedTask;.getSuccessfulResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L0f11a4.  return v1 @kind object;
}
procedure `void` `handleFatalException`(`kotlinx.coroutines.DispatchedTask` v2 @kind this, `java.lang.Throwable` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/DispatchedTask;.handleFatalException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f1218.  if v3 != 0 then goto L0f1222;
  #L0f121c.  if v4 != 0 then goto L0f1222;
  #L0f1220.  return @kind void;
  #L0f1222.  if v3 == 0 then goto L0f1230;
  #L0f1226.  if v4 == 0 then goto L0f1230;
  #L0f122a.  call `addSuppressed`(v3, v4) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L0f1230.  if v3 != 0 then goto L0f1236;
  #L0f1234.  v3:= v4 @kind object;
  #L0f1236.  v4:= new `kotlinx.coroutines.CoroutinesInternalError`;
  #L0f123a.  v0:= new `java.lang.StringBuilder`;
  #L0f123e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f1244.  v1:= "Fatal exception in coroutines machinery for " @kind object;
  #L0f1248.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f124e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f1254.  v1:= ". Please read KDoc to 'handleFatalException' method and report this incident to maintainers" @kind object;
  #L0f1258.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f125e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f1264.  v0:= temp @kind object;
  #L0f1266.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L0f126c.  call `<init>`(v4, v0, v3) @signature `Lkotlinx/coroutines/CoroutinesInternalError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0f1272.  call temp:= `getDelegate$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/DispatchedTask;.getDelegate$kotlinx_coroutines_core:()Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0f1278.  v3:= temp @kind object;
  #L0f127a.  call temp:= `getContext`(v3) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f1280.  v3:= temp @kind object;
  #L0f1282.  call `handleCoroutineException`(v3, v4) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L0f1288.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.DispatchedTask` v10 @kind this) @signature `Lkotlinx/coroutines/DispatchedTask;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L0f129c.  v0:= v10.`kotlinx.coroutines.scheduling.Task.taskContext` @type ^`kotlinx.coroutines.scheduling.TaskContext` @kind object;
  #L0f12a0.  call temp:= `getDelegate$kotlinx_coroutines_core`(v10) @signature `Lkotlinx/coroutines/DispatchedTask;.getDelegate$kotlinx_coroutines_core:()Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0f12a6.  v1:= temp @kind object;
  #L0f12a8.  v1:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v1 @kind object;
  #L0f12ac.  v2:= v1.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0f12b0.  v1:= v1.`kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @type ^`java.lang.Object` @kind object;
  #L0f12b4.  call temp:= `getContext`(v2) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f12ba.  v3:= temp @kind object;
  #L0f12bc.  call temp:= `updateThreadContext`(v3, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f12c2.  v1:= temp @kind object;
  #L0f12c4.  v4:= `@@kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0f12c8.  v5:= 0I;
  #L0f12ca.  if v1 == v4 then goto L0f12d8;
  #L0f12ce.  call temp:= `updateUndispatchedCompletion`(v2, v3, v1) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L0f12d4.  v4:= temp @kind object;
  #L0f12d6.  goto L0f12da;
  #L0f12d8.  v4:= v5 @kind object;
  #L0f12da.  call temp:= `getContext`(v2) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f12e0.  v6:= temp @kind object;
  #L0f12e2.  call temp:= `takeState$kotlinx_coroutines_core`(v10) @signature `Lkotlinx/coroutines/DispatchedTask;.takeState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0f12e8.  v7:= temp @kind object;
  #L0f12ea.  call temp:= `getExceptionalResult$kotlinx_coroutines_core`(v10, v7) @signature `Lkotlinx/coroutines/DispatchedTask;.getExceptionalResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind virtual;
  #L0f12f0.  v8:= temp @kind object;
  #L0f12f2.  if v8 != 0 then goto L0f1318;
  #L0f12f6.  v9:= v10.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L0f12fa.  call temp:= `isCancellableMode`(v9) @signature `Lkotlinx/coroutines/DispatchedTaskKt;.isCancellableMode:(I)Z` @kind static;
  #L0f1300.  v9:= temp;
  #L0f1302.  if v9 == 0 then goto L0f1318;
  #L0f1306.  v9:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0f130a.  call temp:= `get`(v6, v9) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f1310.  v6:= temp @kind object;
  #L0f1312.  v6:= (`kotlinx.coroutines.Job`) v6 @kind object;
  #L0f1316.  goto L0f131a;
  #L0f1318.  v6:= v5 @kind object;
  #L0f131a.  if v6 == 0 then goto L0f1354;
  #L0f131e.  call temp:= `isActive`(v6) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L0f1324.  v9:= temp;
  #L0f1326.  if v9 != 0 then goto L0f1354;
  #L0f132a.  call temp:= `getCancellationException`(v6) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L0f1330.  v6:= temp @kind object;
  #L0f1332.  call `cancelCompletedResult$kotlinx_coroutines_core`(v10, v7, v6) @signature `Lkotlinx/coroutines/DispatchedTask;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L0f1338.  v7:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0f133c.  call temp:= `createFailure`(v6) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L0f1342.  v6:= temp @kind object;
  #L0f1344.  call temp:= `constructor-impl`(v6) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f134a.  v6:= temp @kind object;
  #L0f134c.  call `resumeWith`(v2, v6) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L0f1352.  goto L0f138e;
  #L0f1354.  if v8 == 0 then goto L0f1374;
  #L0f1358.  v6:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0f135c.  call temp:= `createFailure`(v8) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L0f1362.  v6:= temp @kind object;
  #L0f1364.  call temp:= `constructor-impl`(v6) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f136a.  v6:= temp @kind object;
  #L0f136c.  call `resumeWith`(v2, v6) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L0f1372.  goto L0f138e;
  #L0f1374.  call temp:= `getSuccessfulResult$kotlinx_coroutines_core`(v10, v7) @signature `Lkotlinx/coroutines/DispatchedTask;.getSuccessfulResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0f137a.  v6:= temp @kind object;
  #L0f137c.  v7:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0f1380.  call temp:= `constructor-impl`(v6) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f1386.  v6:= temp @kind object;
  #L0f1388.  call `resumeWith`(v2, v6) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L0f138e.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f1392.  if v4 == 0 then goto L0f13a2;
  #L0f1396.  call temp:= `clearThreadContext`(v4) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L0f139c.  v4:= temp;
  #L0f139e.  if v4 == 0 then goto L0f13a8;
  #L0f13a2.  call `restoreThreadContext`(v3, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0f13a8.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0f13ac.  call `afterTask`(v0) @signature `Lkotlinx/coroutines/scheduling/TaskContext;.afterTask:()V` @kind interface;
  #L0f13b2.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f13b8.  v0:= temp @kind object;
  #L0f13ba.  goto L0f13d2;
  #L0f13bc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f13be.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0f13c2.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L0f13c8.  v0:= temp @kind object;
  #L0f13ca.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f13d0.  v0:= temp @kind object;
  #L0f13d2.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L0f13d8.  v0:= temp @kind object;
  #L0f13da.  call `handleFatalException`(v10, v5, v0) @signature `Lkotlinx/coroutines/DispatchedTask;.handleFatalException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L0f13e0.  goto L0f143a;
  #L0f13e2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f13e4.  if v4 == 0 then goto L0f13f4;
  #L0f13e8.  call temp:= `clearThreadContext`(v4) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L0f13ee.  v4:= temp;
  #L0f13f0.  if v4 == 0 then goto L0f13fa;
  #L0f13f4.  call `restoreThreadContext`(v3, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0f13fa.  throw v2;
  #L0f13fc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f13fe.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0f1402.  call `afterTask`(v0) @signature `Lkotlinx/coroutines/scheduling/TaskContext;.afterTask:()V` @kind interface;
  #L0f1408.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f140c.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f1412.  v0:= temp @kind object;
  #L0f1414.  goto L0f142c;
  #L0f1416.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f1418.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0f141c.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L0f1422.  v0:= temp @kind object;
  #L0f1424.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0f142a.  v0:= temp @kind object;
  #L0f142c.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L0f1432.  v0:= temp @kind object;
  #L0f1434.  call `handleFatalException`(v10, v1, v0) @signature `Lkotlinx/coroutines/DispatchedTask;.handleFatalException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L0f143a.  return @kind void;
  catch `java.lang.Throwable` @[L0f12a0..L0f12d6] goto L0f13fc;
  catch `java.lang.Throwable` @[L0f12da..L0f1392] goto L0f13e2;
  catch `java.lang.Throwable` @[L0f1396..L0f13a8] goto L0f13fc;
  catch `java.lang.Throwable` @[L0f13a8..L0f13ba] goto L0f13bc;
  catch `java.lang.Throwable` @[L0f13e8..L0f13fc] goto L0f13fc;
  catch `java.lang.Throwable` @[L0f13fe..L0f1414] goto L0f1416;
}
procedure `java.lang.Object` `takeState$kotlinx_coroutines_core`() @signature `Lkotlinx/coroutines/DispatchedTask;.takeState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
