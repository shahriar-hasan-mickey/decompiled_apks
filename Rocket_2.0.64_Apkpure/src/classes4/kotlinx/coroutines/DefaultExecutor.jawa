record `kotlinx.coroutines.DefaultExecutor` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.EventLoopImplBase` @kind class, `java.lang.Runnable` @kind interface {
}
global `kotlinx.coroutines.DefaultExecutor` `@@kotlinx.coroutines.DefaultExecutor.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@kotlinx.coroutines.DefaultExecutor.THREAD_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Thread` `@@kotlinx.coroutines.DefaultExecutor._thread` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `int` `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `long` `@@kotlinx.coroutines.DefaultExecutor.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/DefaultExecutor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f0484.  v0:= new `kotlinx.coroutines.DefaultExecutor`;
  #L0f0488.  call `<init>`(v0) @signature `Lkotlinx/coroutines/DefaultExecutor;.<init>:()V` @kind direct;
  #L0f048e.  `@@kotlinx.coroutines.DefaultExecutor.INSTANCE` @type ^`kotlinx.coroutines.DefaultExecutor` := v0 @kind object;
  #L0f0492.  v1:= 0I;
  #L0f0494.  v2:= 1I;
  #L0f0496.  v3:= 0I;
  #L0f0498.  call `incrementUseCount$default`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/EventLoop;.incrementUseCount$default:(Lkotlinx/coroutines/EventLoop;ZILjava/lang/Object;)V` @kind static;
  #L0f049e.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0f04a2.  v1:= 1000L;
  #L0f04a6.  v3:= "kotlinx.coroutines.DefaultExecutor.keepAlive" @kind object;
  #L0f04aa.  call temp:= `getLong`(v3, v1) @signature `Ljava/lang/Long;.getLong:(Ljava/lang/String;J)Ljava/lang/Long;` @kind static;
  #L0f04b0.  v1:= temp @kind object;
  #L0f04b2.  goto L0f04bc;
  #L0f04b4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0f04ba.  v1:= temp @kind object;
  #L0f04bc.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L0f04c2.  v1:= temp @kind wide;
  #L0f04c4.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L0f04ca.  v0:= temp @kind wide;
  #L0f04cc.  `@@kotlinx.coroutines.DefaultExecutor.f` @type ^`long` := v0 @kind wide;
  #L0f04d0.  return @kind void;
  catch `java.lang.SecurityException` @[L0f04a6..L0f04b2] goto L0f04b4;
}
procedure `void` `<init>`(`kotlinx.coroutines.DefaultExecutor` v0 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0f04f4.  call `<init>`(v0) @signature `Lkotlinx/coroutines/EventLoopImplBase;.<init>:()V` @kind direct;
  #L0f04fa.  return @kind void;
}
procedure `void` `i`(`kotlinx.coroutines.DefaultExecutor` v1 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.i:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f050c.  @monitorenter v1
  #L0f050e.  call temp:= `l`(v1) @signature `Lkotlinx/coroutines/DefaultExecutor;.l:()Z` @kind direct;
  #L0f0514.  v0:= temp;
  #L0f0516.  if v0 != 0 then goto L0f051e;
  #L0f051a.  @monitorexit v1
  #L0f051c.  return @kind void;
  #L0f051e.  v0:= 3I;
  #L0f0520.  `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @type ^`int` := v0;
  #L0f0524.  call `resetAll`(v1) @signature `Lkotlinx/coroutines/EventLoopImplBase;.resetAll:()V` @kind virtual;
  #L0f052a.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L0f0530.  @monitorexit v1
  #L0f0532.  return @kind void;
  #L0f0534.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f0536.  @monitorexit v1
  #L0f0538.  throw v0;
  catch `java.lang.Throwable` @[L0f050e..L0f0516] goto L0f0534;
  catch `java.lang.Throwable` @[L0f0520..L0f0530] goto L0f0534;
}
procedure `java.lang.Thread` `j`(`kotlinx.coroutines.DefaultExecutor` v2 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.j:()Ljava/lang/Thread;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f03f4.  @monitorenter v2
  #L0f03f6.  v0:= `@@kotlinx.coroutines.DefaultExecutor._thread` @type ^`java.lang.Thread` @kind object;
  #L0f03fa.  if v0 != 0 then goto L0f041e;
  #L0f03fe.  v0:= new `java.lang.Thread`;
  #L0f0402.  v1:= "kotlinx.coroutines.DefaultExecutor" @kind object;
  #L0f0406.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L0f040c.  `@@kotlinx.coroutines.DefaultExecutor._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L0f0410.  v1:= 1I;
  #L0f0412.  call `setDaemon`(v0, v1) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L0f0418.  call `start`(v0) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L0f041e.  @monitorexit v2
  #L0f0420.  return v0 @kind object;
  #L0f0422.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f0424.  @monitorexit v2
  #L0f0426.  throw v0;
  catch `java.lang.Throwable` @[L0f03f6..L0f041e] goto L0f0422;
}
procedure `boolean` `k`(`kotlinx.coroutines.DefaultExecutor` v2 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.k:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f0334.  v0:= `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @type ^`int`;
  #L0f0338.  v1:= 4I;
  #L0f033a.  if v0 != v1 then goto L0f0342;
  #L0f033e.  v0:= 1I;
  #L0f0340.  goto L0f0344;
  #L0f0342.  v0:= 0I;
  #L0f0344.  return v0;
}
procedure `boolean` `l`(`kotlinx.coroutines.DefaultExecutor` v2 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.l:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f0358.  v0:= `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @type ^`int`;
  #L0f035c.  v1:= 2I;
  #L0f035e.  if v0 == v1 then goto L0f036e;
  #L0f0362.  v1:= 3I;
  #L0f0364.  if v0 != v1 then goto L0f036a;
  #L0f0368.  goto L0f036e;
  #L0f036a.  v0:= 0I;
  #L0f036c.  goto L0f0370;
  #L0f036e.  v0:= 1I;
  #L0f0370.  return v0;
}
procedure `boolean` `m`(`kotlinx.coroutines.DefaultExecutor` v1 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.m:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0f03a4.  @monitorenter v1
  #L0f03a6.  call temp:= `l`(v1) @signature `Lkotlinx/coroutines/DefaultExecutor;.l:()Z` @kind direct;
  #L0f03ac.  v0:= temp;
  #L0f03ae.  if v0 == 0 then goto L0f03b8;
  #L0f03b2.  v0:= 0I;
  #L0f03b4.  @monitorexit v1
  #L0f03b6.  return v0;
  #L0f03b8.  v0:= 1I;
  #L0f03ba.  `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @type ^`int` := v0;
  #L0f03be.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L0f03c4.  @monitorexit v1
  #L0f03c6.  return v0;
  #L0f03c8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f03ca.  @monitorexit v1
  #L0f03cc.  throw v0;
  catch `java.lang.Throwable` @[L0f03a6..L0f03ae] goto L0f03c8;
  catch `java.lang.Throwable` @[L0f03ba..L0f03c4] goto L0f03c8;
}
procedure `void` `n`(`kotlinx.coroutines.DefaultExecutor` v2 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.n:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0f07f0.  v0:= new `java.util.concurrent.RejectedExecutionException`;
  #L0f07f4.  v1:= "DefaultExecutor was shut down. This error indicates that Dispatchers.shutdown() was invoked prior to completion of exiting coroutines, leaving coroutines in incomplete state. Please refer to Dispatchers.shutdown documentation for more details" @kind object;
  #L0f07f8.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f07fe.  throw v0;
}
procedure `void` `enqueue`(`kotlinx.coroutines.DefaultExecutor` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/DefaultExecutor;.enqueue:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f0560.  call temp:= `k`(v1) @signature `Lkotlinx/coroutines/DefaultExecutor;.k:()Z` @kind direct;
  #L0f0566.  v0:= temp;
  #L0f0568.  if v0 == 0 then goto L0f0572;
  #L0f056c.  call `n`(v1) @signature `Lkotlinx/coroutines/DefaultExecutor;.n:()V` @kind direct;
  #L0f0572.  call `enqueue`(v1, v2) @signature `Lkotlinx/coroutines/EventLoopImplBase;.enqueue:(Ljava/lang/Runnable;)V` @kind super;
  #L0f0578.  return @kind void;
}
procedure `void` `ensureStarted$kotlinx_coroutines_core`(`kotlinx.coroutines.DefaultExecutor` v1 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.ensureStarted$kotlinx_coroutines_core:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f058c.  @monitorenter v1
  #L0f058e.  v0:= 0I;
  #L0f0590.  `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @type ^`int` := v0;
  #L0f0594.  call temp:= `j`(v1) @signature `Lkotlinx/coroutines/DefaultExecutor;.j:()Ljava/lang/Thread;` @kind direct;
  #L0f059a.  v0:= `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @type ^`int`;
  #L0f059e.  if v0 != 0 then goto L0f05aa;
  #L0f05a2.  call `wait`(v1) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L0f05a8.  goto L0f059a;
  #L0f05aa.  @monitorexit v1
  #L0f05ac.  return @kind void;
  #L0f05ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f05b0.  @monitorexit v1
  #L0f05b2.  throw v0;
  catch `java.lang.Throwable` @[L0f0590..L0f05a8] goto L0f05ae;
}
procedure `java.lang.Thread` `getThread`(`kotlinx.coroutines.DefaultExecutor` v1 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.getThread:()Ljava/lang/Thread;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0f0444.  v0:= `@@kotlinx.coroutines.DefaultExecutor._thread` @type ^`java.lang.Thread` @kind object;
  #L0f0448.  if v0 != 0 then goto L0f0454;
  #L0f044c.  call temp:= `j`(v1) @signature `Lkotlinx/coroutines/DefaultExecutor;.j:()Ljava/lang/Thread;` @kind direct;
  #L0f0452.  v0:= temp @kind object;
  #L0f0454.  return v0 @kind object;
}
procedure `kotlinx.coroutines.DisposableHandle` `invokeOnTimeout`(`kotlinx.coroutines.DefaultExecutor` v0 @kind this, `long` v1 , `java.lang.Runnable` v3 @kind object, `kotlin.coroutines.CoroutineContext` v4 @kind object) @signature `Lkotlinx/coroutines/DefaultExecutor;.invokeOnTimeout:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC {
    temp;

  #L0f0468.  call temp:= `scheduleInvokeOnTimeout`(v0, v1, v3) @signature `Lkotlinx/coroutines/EventLoopImplBase;.scheduleInvokeOnTimeout:(JLjava/lang/Runnable;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L0f046e.  v1:= temp @kind object;
  #L0f0470.  return v1 @kind object;
}
procedure `boolean` `isThreadPresent$kotlinx_coroutines_core`(`kotlinx.coroutines.DefaultExecutor` v1 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.isThreadPresent$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f0384.  v0:= `@@kotlinx.coroutines.DefaultExecutor._thread` @type ^`java.lang.Thread` @kind object;
  #L0f0388.  if v0 == 0 then goto L0f0390;
  #L0f038c.  v0:= 1I;
  #L0f038e.  goto L0f0392;
  #L0f0390.  v0:= 0I;
  #L0f0392.  return v0;
}
procedure `void` `reschedule`(`kotlinx.coroutines.DefaultExecutor` v0 @kind this, `long` v1 , `kotlinx.coroutines.EventLoopImplBase$DelayedTask` v3 @kind object) @signature `Lkotlinx/coroutines/DefaultExecutor;.reschedule:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTask;)V` @AccessFlag PROTECTED {
    temp;

  #L0f05d0.  call `n`(v0) @signature `Lkotlinx/coroutines/DefaultExecutor;.n:()V` @kind direct;
  #L0f05d6.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.DefaultExecutor` v12 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L0f05e8.  v0:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L0f05ec.  call `setEventLoop$kotlinx_coroutines_core`(v0, v12) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.setEventLoop$kotlinx_coroutines_core:(Lkotlinx/coroutines/EventLoop;)V` @kind virtual;
  #L0f05f2.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f05f8.  v0:= temp @kind object;
  #L0f05fa.  if v0 != 0 then goto L0f0600;
  #L0f05fe.  goto L0f0606;
  #L0f0600.  call `registerTimeLoopThread`(v0) @signature `Lkotlinx/coroutines/AbstractTimeSource;.registerTimeLoopThread:()V` @kind virtual;
  #L0f0606.  v0:= 0I;
  #L0f0608.  call temp:= `m`(v12) @signature `Lkotlinx/coroutines/DefaultExecutor;.m:()Z` @kind direct;
  #L0f060e.  v1:= temp;
  #L0f0610.  if v1 != 0 then goto L0f0646;
  #L0f0614.  `@@kotlinx.coroutines.DefaultExecutor._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L0f0618.  call `i`(v12) @signature `Lkotlinx/coroutines/DefaultExecutor;.i:()V` @kind direct;
  #L0f061e.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f0624.  v0:= temp @kind object;
  #L0f0626.  if v0 != 0 then goto L0f062c;
  #L0f062a.  goto L0f0632;
  #L0f062c.  call `unregisterTimeLoopThread`(v0) @signature `Lkotlinx/coroutines/AbstractTimeSource;.unregisterTimeLoopThread:()V` @kind virtual;
  #L0f0632.  call temp:= `isEmpty`(v12) @signature `Lkotlinx/coroutines/EventLoopImplBase;.isEmpty:()Z` @kind virtual;
  #L0f0638.  v0:= temp;
  #L0f063a.  if v0 != 0 then goto L0f0644;
  #L0f063e.  call temp:= `getThread`(v12) @signature `Lkotlinx/coroutines/DefaultExecutor;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L0f0644.  return @kind void;
  #L0f0646.  v1:= 9223372036854775807L;
  #L0f0650.  v3:= v1 @kind wide;
  #L0f0652.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L0f0658.  call temp:= `processNextEvent`(v12) @signature `Lkotlinx/coroutines/EventLoopImplBase;.processNextEvent:()J` @kind virtual;
  #L0f065e.  v5:= temp @kind wide;
  #L0f0660.  v7:= 0L;
  #L0f0664.  v9:= lcmp(v5, v1);
  #L0f0668.  if v9 != 0 then goto L0f06f8;
  #L0f066c.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f0672.  v9:= temp @kind object;
  #L0f0674.  if v9 != 0 then goto L0f067c;
  #L0f0678.  v9:= v0 @kind object;
  #L0f067a.  goto L0f068c;
  #L0f067c.  call temp:= `nanoTime`(v9) @signature `Lkotlinx/coroutines/AbstractTimeSource;.nanoTime:()J` @kind virtual;
  #L0f0682.  v9:= temp @kind wide;
  #L0f0684.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0f068a.  v9:= temp @kind object;
  #L0f068c.  if v9 != 0 then goto L0f069a;
  #L0f0690.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L0f0696.  v9:= temp @kind wide;
  #L0f0698.  goto L0f06a2;
  #L0f069a.  call temp:= `longValue`(v9) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L0f06a0.  v9:= temp @kind wide;
  #L0f06a2.  v11:= lcmp(v3, v1);
  #L0f06a6.  if v11 != 0 then goto L0f06b0;
  #L0f06aa.  v3:= `@@kotlinx.coroutines.DefaultExecutor.f` @type ^`long` @kind wide;
  #L0f06ae.  v3:= v3 + v9 @kind long;
  #L0f06b0.  v9:= v3 - v9 @kind long;
  #L0f06b4.  v11:= lcmp(v9, v7);
  #L0f06b8.  if v11 > 0 then goto L0f06ee;
  #L0f06bc.  `@@kotlinx.coroutines.DefaultExecutor._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L0f06c0.  call `i`(v12) @signature `Lkotlinx/coroutines/DefaultExecutor;.i:()V` @kind direct;
  #L0f06c6.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f06cc.  v0:= temp @kind object;
  #L0f06ce.  if v0 != 0 then goto L0f06d4;
  #L0f06d2.  goto L0f06da;
  #L0f06d4.  call `unregisterTimeLoopThread`(v0) @signature `Lkotlinx/coroutines/AbstractTimeSource;.unregisterTimeLoopThread:()V` @kind virtual;
  #L0f06da.  call temp:= `isEmpty`(v12) @signature `Lkotlinx/coroutines/EventLoopImplBase;.isEmpty:()Z` @kind virtual;
  #L0f06e0.  v0:= temp;
  #L0f06e2.  if v0 != 0 then goto L0f06ec;
  #L0f06e6.  call temp:= `getThread`(v12) @signature `Lkotlinx/coroutines/DefaultExecutor;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L0f06ec.  return @kind void;
  #L0f06ee.  call temp:= `coerceAtMost`(v5, v9) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(JJ)J` @kind static;
  #L0f06f4.  v5:= temp @kind wide;
  #L0f06f6.  goto L0f06fa;
  #L0f06f8.  v3:= v1 @kind wide;
  #L0f06fa.  v9:= lcmp(v5, v7);
  #L0f06fe.  if v9 <= 0 then goto L0f0652;
  #L0f0702.  call temp:= `l`(v12) @signature `Lkotlinx/coroutines/DefaultExecutor;.l:()Z` @kind direct;
  #L0f0708.  v7:= temp;
  #L0f070a.  if v7 == 0 then goto L0f0740;
  #L0f070e.  `@@kotlinx.coroutines.DefaultExecutor._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L0f0712.  call `i`(v12) @signature `Lkotlinx/coroutines/DefaultExecutor;.i:()V` @kind direct;
  #L0f0718.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f071e.  v0:= temp @kind object;
  #L0f0720.  if v0 != 0 then goto L0f0726;
  #L0f0724.  goto L0f072c;
  #L0f0726.  call `unregisterTimeLoopThread`(v0) @signature `Lkotlinx/coroutines/AbstractTimeSource;.unregisterTimeLoopThread:()V` @kind virtual;
  #L0f072c.  call temp:= `isEmpty`(v12) @signature `Lkotlinx/coroutines/EventLoopImplBase;.isEmpty:()Z` @kind virtual;
  #L0f0732.  v0:= temp;
  #L0f0734.  if v0 != 0 then goto L0f073e;
  #L0f0738.  call temp:= `getThread`(v12) @signature `Lkotlinx/coroutines/DefaultExecutor;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L0f073e.  return @kind void;
  #L0f0740.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f0746.  v7:= temp @kind object;
  #L0f0748.  if v7 != 0 then goto L0f0750;
  #L0f074c.  v7:= v0 @kind object;
  #L0f074e.  goto L0f075a;
  #L0f0750.  call `parkNanos`(v7, v12, v5) @signature `Lkotlinx/coroutines/AbstractTimeSource;.parkNanos:(Ljava/lang/Object;J)V` @kind virtual;
  #L0f0756.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f075a.  if v7 != 0 then goto L0f0652;
  #L0f075e.  call `parkNanos`(v12, v5) @signature `Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V` @kind static;
  #L0f0764.  goto L0f0652;
  #L0f0768.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f076a.  `@@kotlinx.coroutines.DefaultExecutor._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L0f076e.  call `i`(v12) @signature `Lkotlinx/coroutines/DefaultExecutor;.i:()V` @kind direct;
  #L0f0774.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f077a.  v0:= temp @kind object;
  #L0f077c.  if v0 != 0 then goto L0f0782;
  #L0f0780.  goto L0f0788;
  #L0f0782.  call `unregisterTimeLoopThread`(v0) @signature `Lkotlinx/coroutines/AbstractTimeSource;.unregisterTimeLoopThread:()V` @kind virtual;
  #L0f0788.  call temp:= `isEmpty`(v12) @signature `Lkotlinx/coroutines/EventLoopImplBase;.isEmpty:()Z` @kind virtual;
  #L0f078e.  v0:= temp;
  #L0f0790.  if v0 != 0 then goto L0f079a;
  #L0f0794.  call temp:= `getThread`(v12) @signature `Lkotlinx/coroutines/DefaultExecutor;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L0f079a.  throw v1;
  catch `java.lang.Throwable` @[L0f0608..L0f0610] goto L0f0768;
  catch `java.lang.Throwable` @[L0f0652..L0f06ae] goto L0f0768;
  catch `java.lang.Throwable` @[L0f06ee..L0f070a] goto L0f0768;
  catch `java.lang.Throwable` @[L0f0740..L0f0764] goto L0f0768;
}
procedure `void` `shutdown`(`kotlinx.coroutines.DefaultExecutor` v1 @kind this) @signature `Lkotlinx/coroutines/DefaultExecutor;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f07d0.  v0:= 4I;
  #L0f07d2.  `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @type ^`int` := v0;
  #L0f07d6.  call `shutdown`(v1) @signature `Lkotlinx/coroutines/EventLoopImplBase;.shutdown:()V` @kind super;
  #L0f07dc.  return @kind void;
}
procedure `void` `shutdownForTests`(`kotlinx.coroutines.DefaultExecutor` v7 @kind this, `long` v8 ) @signature `Lkotlinx/coroutines/DefaultExecutor;.shutdownForTests:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0f0810.  @monitorenter v7
  #L0f0812.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L0f0818.  v0:= temp @kind wide;
  #L0f081a.  v0:= v0 + v8 @kind long;
  #L0f081c.  call temp:= `l`(v7) @signature `Lkotlinx/coroutines/DefaultExecutor;.l:()Z` @kind direct;
  #L0f0822.  v2:= temp;
  #L0f0824.  if v2 != 0 then goto L0f082e;
  #L0f0828.  v2:= 2I;
  #L0f082a.  `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @type ^`int` := v2;
  #L0f082e.  v2:= `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @type ^`int`;
  #L0f0832.  v3:= 3I;
  #L0f0834.  if v2 == v3 then goto L0f0890;
  #L0f0838.  v2:= `@@kotlinx.coroutines.DefaultExecutor._thread` @type ^`java.lang.Thread` @kind object;
  #L0f083c.  if v2 == 0 then goto L0f0890;
  #L0f0840.  v2:= `@@kotlinx.coroutines.DefaultExecutor._thread` @type ^`java.lang.Thread` @kind object;
  #L0f0844.  if v2 != 0 then goto L0f084a;
  #L0f0848.  goto L0f086e;
  #L0f084a.  call temp:= `getTimeSource`() @signature `Lkotlinx/coroutines/AbstractTimeSourceKt;.getTimeSource:()Lkotlinx/coroutines/AbstractTimeSource;` @kind static;
  #L0f0850.  v3:= temp @kind object;
  #L0f0852.  if v3 != 0 then goto L0f085a;
  #L0f0856.  v3:= 0I;
  #L0f0858.  goto L0f0864;
  #L0f085a.  call `unpark`(v3, v2) @signature `Lkotlinx/coroutines/AbstractTimeSource;.unpark:(Ljava/lang/Thread;)V` @kind virtual;
  #L0f0860.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f0864.  if v3 != 0 then goto L0f086e;
  #L0f0868.  call `unpark`(v2) @signature `Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V` @kind static;
  #L0f086e.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L0f0874.  v2:= temp @kind wide;
  #L0f0876.  v2:= v0 - v2 @kind long;
  #L0f087a.  v4:= 0L;
  #L0f087e.  v6:= lcmp(v2, v4);
  #L0f0882.  if v6 > 0 then goto L0f0888;
  #L0f0886.  goto L0f0890;
  #L0f0888.  call `wait`(v7, v8) @signature `Ljava/lang/Object;.wait:(J)V` @kind virtual;
  #L0f088e.  goto L0f082e;
  #L0f0890.  v8:= 0I;
  #L0f0892.  `@@kotlinx.coroutines.DefaultExecutor.debugStatus` @type ^`int` := v8;
  #L0f0896.  @monitorexit v7
  #L0f0898.  return @kind void;
  #L0f089a.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f089c.  @monitorexit v7
  #L0f089e.  throw v8;
  catch `java.lang.Throwable` @[L0f0812..L0f0896] goto L0f089a;
}
