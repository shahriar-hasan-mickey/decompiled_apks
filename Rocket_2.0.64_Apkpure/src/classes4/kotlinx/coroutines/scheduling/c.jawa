record `kotlinx.coroutines.scheduling.c` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.CoroutineDispatcher` @kind class {
}
global `kotlinx.coroutines.scheduling.c` `@@kotlinx.coroutines.scheduling.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L125de4.  v0:= new `kotlinx.coroutines.scheduling.c`;
  #L125de8.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/c;.<init>:()V` @kind direct;
  #L125dee.  `@@kotlinx.coroutines.scheduling.c.a` @type ^`kotlinx.coroutines.scheduling.c` := v0 @kind object;
  #L125df2.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.c` v0 @kind this) @signature `Lkotlinx/coroutines/scheduling/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L125e04.  call `<init>`(v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.<init>:()V` @kind direct;
  #L125e0a.  return @kind void;
}
procedure `void` `dispatch`(`kotlinx.coroutines.scheduling.c` v2 @kind this, `kotlin.coroutines.CoroutineContext` v3 @kind object, `java.lang.Runnable` v4 @kind object) @signature `Lkotlinx/coroutines/scheduling/c;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L125e1c.  v3:= `@@kotlinx.coroutines.scheduling.DefaultScheduler.INSTANCE` @type ^`kotlinx.coroutines.scheduling.DefaultScheduler` @kind object;
  #L125e20.  v0:= `@@kotlinx.coroutines.scheduling.TasksKt.BlockingContext` @type ^`kotlinx.coroutines.scheduling.TaskContext` @kind object;
  #L125e24.  v1:= 0I;
  #L125e26.  call `dispatchWithContext$kotlinx_coroutines_core`(v3, v4, v0, v1) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.dispatchWithContext$kotlinx_coroutines_core:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;Z)V` @kind virtual;
  #L125e2c.  return @kind void;
}
procedure `void` `dispatchYield`(`kotlinx.coroutines.scheduling.c` v2 @kind this, `kotlin.coroutines.CoroutineContext` v3 @kind object, `java.lang.Runnable` v4 @kind object) @signature `Lkotlinx/coroutines/scheduling/c;.dispatchYield:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L125e40.  v3:= `@@kotlinx.coroutines.scheduling.DefaultScheduler.INSTANCE` @type ^`kotlinx.coroutines.scheduling.DefaultScheduler` @kind object;
  #L125e44.  v0:= `@@kotlinx.coroutines.scheduling.TasksKt.BlockingContext` @type ^`kotlinx.coroutines.scheduling.TaskContext` @kind object;
  #L125e48.  v1:= 1I;
  #L125e4a.  call `dispatchWithContext$kotlinx_coroutines_core`(v3, v4, v0, v1) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.dispatchWithContext$kotlinx_coroutines_core:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;Z)V` @kind virtual;
  #L125e50.  return @kind void;
}
