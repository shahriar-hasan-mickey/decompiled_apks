record `kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L123920.  call temp:= `values`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.values:()[Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;` @kind static;
  #L123926.  v0:= temp @kind object;
  #L123928.  v0:= length @variable v0;
  #L12392a.  v0:= new `int`[v0];
  #L12392e.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.PARKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L123932.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L123938.  v1:= temp;
  #L12393a.  v2:= 1I;
  #L12393c.  v0[v1]:= v2;
  #L123940.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.BLOCKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L123944.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L12394a.  v1:= temp;
  #L12394c.  v2:= 2I;
  #L12394e.  v0[v1]:= v2;
  #L123952.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.CPU_ACQUIRED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L123956.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L12395c.  v1:= temp;
  #L12395e.  v2:= 3I;
  #L123960.  v0[v1]:= v2;
  #L123964.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.DORMANT` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L123968.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L12396e.  v1:= temp;
  #L123970.  v2:= 4I;
  #L123972.  v0[v1]:= v2;
  #L123976.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L12397a.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L123980.  v1:= temp;
  #L123982.  v2:= 5I;
  #L123984.  v0[v1]:= v2;
  #L123988.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L12398c.  return @kind void;
}
