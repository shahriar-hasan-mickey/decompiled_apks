record `kotlinx.coroutines.scheduling.NanoTimeSource` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.scheduling.SchedulerTimeSource` @kind class {
}
global `kotlinx.coroutines.scheduling.NanoTimeSource` `@@kotlinx.coroutines.scheduling.NanoTimeSource.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/NanoTimeSource;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1258e8.  v0:= new `kotlinx.coroutines.scheduling.NanoTimeSource`;
  #L1258ec.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/NanoTimeSource;.<init>:()V` @kind direct;
  #L1258f2.  `@@kotlinx.coroutines.scheduling.NanoTimeSource.INSTANCE` @type ^`kotlinx.coroutines.scheduling.NanoTimeSource` := v0 @kind object;
  #L1258f6.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.NanoTimeSource` v0 @kind this) @signature `Lkotlinx/coroutines/scheduling/NanoTimeSource;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L125908.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/SchedulerTimeSource;.<init>:()V` @kind direct;
  #L12590e.  return @kind void;
}
procedure `long` `nanoTime`(`kotlinx.coroutines.scheduling.NanoTimeSource` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/NanoTimeSource;.nanoTime:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1258cc.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L1258d2.  v0:= temp @kind wide;
  #L1258d4.  return v0 @kind wide;
}
