record `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.ExecutorCoroutineDispatcher` @kind class {
  `int` `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.a` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.b` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.d` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.scheduling.CoroutineScheduler` `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v8 @kind this, `int` v9 , `int` v10 ) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(II)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L125484.  v3:= `@@kotlinx.coroutines.scheduling.TasksKt.IDLE_WORKER_KEEP_ALIVE_NS` @type ^`long` @kind wide;
  #L125488.  v5:= 0I;
  #L12548a.  v6:= 8I;
  #L12548e.  v7:= 0I;
  #L125490.  v0:= v8 @kind object;
  #L125492.  v1:= v9;
  #L125494.  v2:= v10;
  #L125496.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIJLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L12549c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1254b0.  v4:= v3 ^& 1;
  #L1254b4.  if v4 == 0 then goto L1254bc;
  #L1254b8.  v1:= `@@kotlinx.coroutines.scheduling.TasksKt.CORE_POOL_SIZE` @type ^`int`;
  #L1254bc.  v3:= v3 ^& 2;
  #L1254c0.  if v3 == 0 then goto L1254c8;
  #L1254c4.  v2:= `@@kotlinx.coroutines.scheduling.TasksKt.MAX_POOL_SIZE` @type ^`int`;
  #L1254c8.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(II)V` @kind direct;
  #L1254ce.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v0 @kind this, `int` v1 , `int` v2 , `long` v3 , `java.lang.String` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIJLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L125540.  call `<init>`(v0) @signature `Lkotlinx/coroutines/ExecutorCoroutineDispatcher;.<init>:()V` @kind direct;
  #L125546.  v0.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.a` @type ^`int` := v1;
  #L12554a.  v0.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.b` @type ^`int` := v2;
  #L12554e.  v0.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.c` @type ^`long` := v3 @kind wide;
  #L125552.  v0.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.d` @type ^`java.lang.String` := v5 @kind object;
  #L125556.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.a:()Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @kind direct;
  #L12555c.  v1:= temp @kind object;
  #L12555e.  v0.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` := v1 @kind object;
  #L125562.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v6 @kind this, `int` v7 , `int` v8 , `long` v9 , `java.lang.String` v11 @kind object, `int` v12 , `kotlin.jvm.internal.DefaultConstructorMarker` v13 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIJLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L125574.  v12:= v12 ^& 8;
  #L125578.  if v12 == 0 then goto L125580;
  #L12557c.  v11:= "CoroutineScheduler" @kind object;
  #L125580.  v5:= v11 @kind object;
  #L125582.  v0:= v6 @kind object;
  #L125584.  v1:= v7;
  #L125586.  v2:= v8;
  #L125588.  v3:= v9 @kind wide;
  #L12558a.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIJLjava/lang/String;)V` @kind direct;
  #L125590.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v6 @kind this, `int` v7 , `int` v8 , `java.lang.String` v9 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1254e0.  v3:= `@@kotlinx.coroutines.scheduling.TasksKt.IDLE_WORKER_KEEP_ALIVE_NS` @type ^`long` @kind wide;
  #L1254e4.  v0:= v6 @kind object;
  #L1254e6.  v1:= v7;
  #L1254e8.  v2:= v8;
  #L1254ea.  v5:= v9 @kind object;
  #L1254ec.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIJLjava/lang/String;)V` @kind direct;
  #L1254f2.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v0 @kind this, `int` v1 , `int` v2 , `java.lang.String` v3 @kind object, `int` v4 , `kotlin.jvm.internal.DefaultConstructorMarker` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L125504.  v5:= v4 ^& 1;
  #L125508.  if v5 == 0 then goto L125510;
  #L12550c.  v1:= `@@kotlinx.coroutines.scheduling.TasksKt.CORE_POOL_SIZE` @type ^`int`;
  #L125510.  v5:= v4 ^& 2;
  #L125514.  if v5 == 0 then goto L12551c;
  #L125518.  v2:= `@@kotlinx.coroutines.scheduling.TasksKt.MAX_POOL_SIZE` @type ^`int`;
  #L12551c.  v4:= v4 ^& 4;
  #L125520.  if v4 == 0 then goto L125528;
  #L125524.  v3:= "DefaultDispatcher" @kind object;
  #L125528.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IILjava/lang/String;)V` @kind direct;
  #L12552e.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.CoroutineScheduler` `a`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v7 @kind this) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.a:()Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L125454.  v6:= new `kotlinx.coroutines.scheduling.CoroutineScheduler`;
  #L125458.  v1:= v7.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.a` @type ^`int`;
  #L12545c.  v2:= v7.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.b` @type ^`int`;
  #L125460.  v3:= v7.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.c` @type ^`long` @kind wide;
  #L125464.  v5:= v7.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.d` @type ^`java.lang.String` @kind object;
  #L125468.  v0:= v6 @kind object;
  #L12546a.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.<init>:(IIJLjava/lang/String;)V` @kind direct;
  #L125470.  return v6 @kind object;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `blocking$default`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.blocking$default:(Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;IILjava/lang/Object;)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12530c.  if v3 != 0 then goto L125326;
  #L125310.  v2:= v2 ^& 1;
  #L125314.  if v2 == 0 then goto L12531c;
  #L125318.  v1:= 16I;
  #L12531c.  call temp:= `blocking`(v0, v1) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.blocking:(I)Lkotlinx/coroutines/CoroutineDispatcher;` @kind virtual;
  #L125322.  v0:= temp @kind object;
  #L125324.  return v0 @kind object;
  #L125326.  v0:= new `java.lang.UnsupportedOperationException`;
  #L12532a.  v1:= "Super calls with default arguments not supported in this target, function: blocking" @kind object;
  #L12532e.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L125334.  throw v0;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `blocking`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v3 @kind this, `int` v4 ) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.blocking:(I)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L125348.  v0:= 1I;
  #L12534a.  if v4 <= 0 then goto L125352;
  #L12534e.  v1:= 1I;
  #L125350.  goto L125354;
  #L125352.  v1:= 0I;
  #L125354.  if v1 == 0 then goto L125366;
  #L125358.  v1:= new `kotlinx.coroutines.scheduling.a`;
  #L12535c.  v2:= 0I;
  #L12535e.  call `<init>`(v1, v3, v4, v2, v0) @signature `Lkotlinx/coroutines/scheduling/a;.<init>:(Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;ILjava/lang/String;I)V` @kind direct;
  #L125364.  return v1 @kind object;
  #L125366.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L12536c.  v4:= temp @kind object;
  #L12536e.  v0:= "Expected positive parallelism level, but have " @kind object;
  #L125372.  call temp:= `stringPlus`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L125378.  v4:= temp @kind object;
  #L12537a.  v0:= new `java.lang.IllegalArgumentException`;
  #L12537e.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L125384.  v4:= temp @kind object;
  #L125386.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12538c.  throw v0;
}
procedure `void` `close`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1255a4.  v0:= v1.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L1255a8.  call `close`(v0) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.close:()V` @kind virtual;
  #L1255ae.  return @kind void;
}
procedure `void` `dispatch`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v6 @kind this, `kotlin.coroutines.CoroutineContext` v7 @kind object, `java.lang.Runnable` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1255c0.  v0:= v6.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L1255c4.  v2:= 0I;
  #L1255c6.  v3:= 0I;
  #L1255c8.  v4:= 6I;
  #L1255ca.  v5:= 0I;
  #L1255cc.  v1:= v8 @kind object;
  #L1255ce.  call `dispatch$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.dispatch$default:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;ZILjava/lang/Object;)V` @kind static;
  #L1255d4.  goto L1255e0;
  #L1255d6.  v0:= `@@kotlinx.coroutines.DefaultExecutor.INSTANCE` @type ^`kotlinx.coroutines.DefaultExecutor` @kind object;
  #L1255da.  call `dispatch`(v0, v7, v8) @signature `Lkotlinx/coroutines/EventLoopImplBase;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L1255e0.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L1255c0..L1255d4] goto L1255d6;
}
procedure `void` `dispatchWithContext$kotlinx_coroutines_core`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v1 @kind this, `java.lang.Runnable` v2 @kind object, `kotlinx.coroutines.scheduling.TaskContext` v3 @kind object, `boolean` v4 ) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.dispatchWithContext$kotlinx_coroutines_core:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L125604.  v0:= v1.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L125608.  call `dispatch`(v0, v2, v3, v4) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.dispatch:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;Z)V` @kind virtual;
  #L12560e.  goto L125626;
  #L125610.  v4:= `@@kotlinx.coroutines.DefaultExecutor.INSTANCE` @type ^`kotlinx.coroutines.DefaultExecutor` @kind object;
  #L125614.  v0:= v1.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L125618.  call temp:= `createTask`(v0, v2, v3) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.createTask:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;)Lkotlinx/coroutines/scheduling/Task;` @kind virtual;
  #L12561e.  v2:= temp @kind object;
  #L125620.  call `enqueue`(v4, v2) @signature `Lkotlinx/coroutines/DefaultExecutor;.enqueue:(Ljava/lang/Runnable;)V` @kind virtual;
  #L125626.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L125604..L12560e] goto L125610;
}
procedure `void` `dispatchYield`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v6 @kind this, `kotlin.coroutines.CoroutineContext` v7 @kind object, `java.lang.Runnable` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.dispatchYield:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L125648.  v0:= v6.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L12564c.  v2:= 0I;
  #L12564e.  v3:= 1I;
  #L125650.  v4:= 2I;
  #L125652.  v5:= 0I;
  #L125654.  v1:= v8 @kind object;
  #L125656.  call `dispatch$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.dispatch$default:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;ZILjava/lang/Object;)V` @kind static;
  #L12565c.  goto L125668;
  #L12565e.  v0:= `@@kotlinx.coroutines.DefaultExecutor.INSTANCE` @type ^`kotlinx.coroutines.DefaultExecutor` @kind object;
  #L125662.  call `dispatchYield`(v0, v7, v8) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatchYield:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L125668.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L125648..L12565c] goto L12565e;
}
procedure `java.util.concurrent.Executor` `getExecutor`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.getExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1252f4.  v0:= v1.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L1252f8.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `limited`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v3 @kind this, `int` v4 ) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.limited:(I)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1253a0.  v0:= 1I;
  #L1253a2.  v1:= 0I;
  #L1253a4.  if v4 <= 0 then goto L1253ac;
  #L1253a8.  v2:= 1I;
  #L1253aa.  goto L1253ae;
  #L1253ac.  v2:= 0I;
  #L1253ae.  if v2 == 0 then goto L12541a;
  #L1253b2.  v2:= v3.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.a` @type ^`int`;
  #L1253b6.  if v4 > v2 then goto L1253bc;
  #L1253ba.  goto L1253be;
  #L1253bc.  v0:= 0I;
  #L1253be.  if v0 == 0 then goto L1253d0;
  #L1253c2.  v0:= new `kotlinx.coroutines.scheduling.a`;
  #L1253c6.  v2:= 0I;
  #L1253c8.  call `<init>`(v0, v3, v4, v2, v1) @signature `Lkotlinx/coroutines/scheduling/a;.<init>:(Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;ILjava/lang/String;I)V` @kind direct;
  #L1253ce.  return v0 @kind object;
  #L1253d0.  v0:= new `java.lang.StringBuilder`;
  #L1253d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1253da.  v1:= "Expected parallelism level lesser than core pool size (" @kind object;
  #L1253de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1253e4.  v1:= v3.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.a` @type ^`int`;
  #L1253e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1253ee.  v1:= "), but have " @kind object;
  #L1253f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1253f8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1253fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L125404.  v4:= temp @kind object;
  #L125406.  v0:= new `java.lang.IllegalArgumentException`;
  #L12540a.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L125410.  v4:= temp @kind object;
  #L125412.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L125418.  throw v0;
  #L12541a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L125420.  v4:= temp @kind object;
  #L125422.  v0:= "Expected positive parallelism level, but have " @kind object;
  #L125426.  call temp:= `stringPlus`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L12542c.  v4:= temp @kind object;
  #L12542e.  v0:= new `java.lang.IllegalArgumentException`;
  #L125432.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L125438.  v4:= temp @kind object;
  #L12543a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L125440.  throw v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1252a4.  v0:= new `java.lang.StringBuilder`;
  #L1252a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1252ae.  call temp:= `toString`(v2) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.toString:()Ljava/lang/String;` @kind super;
  #L1252b4.  v1:= temp @kind object;
  #L1252b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1252bc.  v1:= "[scheduler = " @kind object;
  #L1252c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1252c6.  v1:= v2.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L1252ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1252d0.  v1:= 93I;
  #L1252d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1252da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1252e0.  v0:= temp @kind object;
  #L1252e2.  return v0 @kind object;
}
