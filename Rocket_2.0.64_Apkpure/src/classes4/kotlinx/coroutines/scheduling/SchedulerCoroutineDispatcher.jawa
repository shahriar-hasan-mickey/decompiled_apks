record `kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.ExecutorCoroutineDispatcher` @kind class {
  `int` `kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.a` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.b` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.d` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.scheduling.CoroutineScheduler` `kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v8 @kind this) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L125968.  v1:= 0I;
  #L12596a.  v2:= 0I;
  #L12596c.  v3:= 0L;
  #L125970.  v5:= 0I;
  #L125972.  v6:= 15I;
  #L125976.  v7:= 0I;
  #L125978.  v0:= v8 @kind object;
  #L12597a.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.<init>:(IIJLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L125980.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v0 @kind this, `int` v1 , `int` v2 , `long` v3 , `java.lang.String` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.<init>:(IIJLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L125994.  call `<init>`(v0) @signature `Lkotlinx/coroutines/ExecutorCoroutineDispatcher;.<init>:()V` @kind direct;
  #L12599a.  v0.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.a` @type ^`int` := v1;
  #L12599e.  v0.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.b` @type ^`int` := v2;
  #L1259a2.  v0.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.c` @type ^`long` := v3 @kind wide;
  #L1259a6.  v0.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.d` @type ^`java.lang.String` := v5 @kind object;
  #L1259aa.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.a:()Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @kind direct;
  #L1259b0.  v1:= temp @kind object;
  #L1259b2.  v0.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` := v1 @kind object;
  #L1259b6.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v3 @kind this, `int` v4 , `int` v5 , `long` v6 , `java.lang.String` v8 @kind object, `int` v9 , `kotlin.jvm.internal.DefaultConstructorMarker` v10 @kind object) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.<init>:(IIJLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1259c8.  v10:= v9 ^& 1;
  #L1259cc.  if v10 == 0 then goto L1259d4;
  #L1259d0.  v4:= `@@kotlinx.coroutines.scheduling.TasksKt.CORE_POOL_SIZE` @type ^`int`;
  #L1259d4.  v10:= v9 ^& 2;
  #L1259d8.  if v10 == 0 then goto L1259e0;
  #L1259dc.  v5:= `@@kotlinx.coroutines.scheduling.TasksKt.MAX_POOL_SIZE` @type ^`int`;
  #L1259e0.  v10:= v5;
  #L1259e2.  v5:= v9 ^& 4;
  #L1259e6.  if v5 == 0 then goto L1259ee;
  #L1259ea.  v6:= `@@kotlinx.coroutines.scheduling.TasksKt.IDLE_WORKER_KEEP_ALIVE_NS` @type ^`long` @kind wide;
  #L1259ee.  v0:= v6 @kind wide;
  #L1259f0.  v5:= v9 ^& 8;
  #L1259f4.  if v5 == 0 then goto L1259fc;
  #L1259f8.  v8:= "CoroutineScheduler" @kind object;
  #L1259fc.  v2:= v8 @kind object;
  #L1259fe.  v5:= v3 @kind object;
  #L125a00.  v6:= v4;
  #L125a02.  v7:= v10;
  #L125a04.  v8:= v0 @kind wide;
  #L125a06.  v10:= v2 @kind object;
  #L125a08.  call `<init>`(v5, v6, v7, v8, v10) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.<init>:(IIJLjava/lang/String;)V` @kind direct;
  #L125a0e.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.CoroutineScheduler` `a`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v7 @kind this) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.a:()Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L125938.  v6:= new `kotlinx.coroutines.scheduling.CoroutineScheduler`;
  #L12593c.  v1:= v7.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.a` @type ^`int`;
  #L125940.  v2:= v7.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.b` @type ^`int`;
  #L125944.  v3:= v7.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.c` @type ^`long` @kind wide;
  #L125948.  v5:= v7.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.d` @type ^`java.lang.String` @kind object;
  #L12594c.  v0:= v6 @kind object;
  #L12594e.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.<init>:(IIJLjava/lang/String;)V` @kind direct;
  #L125954.  return v6 @kind object;
}
procedure `void` `close`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L125a20.  v0:= v1.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L125a24.  call `close`(v0) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.close:()V` @kind virtual;
  #L125a2a.  return @kind void;
}
procedure `void` `dispatch`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v6 @kind this, `kotlin.coroutines.CoroutineContext` v7 @kind object, `java.lang.Runnable` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L125a3c.  v0:= v6.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L125a40.  v2:= 0I;
  #L125a42.  v3:= 0I;
  #L125a44.  v4:= 6I;
  #L125a46.  v5:= 0I;
  #L125a48.  v1:= v8 @kind object;
  #L125a4a.  call `dispatch$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.dispatch$default:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;ZILjava/lang/Object;)V` @kind static;
  #L125a50.  return @kind void;
}
procedure `void` `dispatchWithContext$kotlinx_coroutines_core`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v1 @kind this, `java.lang.Runnable` v2 @kind object, `kotlinx.coroutines.scheduling.TaskContext` v3 @kind object, `boolean` v4 ) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.dispatchWithContext$kotlinx_coroutines_core:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L125a64.  v0:= v1.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L125a68.  call `dispatch`(v0, v2, v3, v4) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.dispatch:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;Z)V` @kind virtual;
  #L125a6e.  return @kind void;
}
procedure `void` `dispatchYield`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v6 @kind this, `kotlin.coroutines.CoroutineContext` v7 @kind object, `java.lang.Runnable` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.dispatchYield:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L125a80.  v0:= v6.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L125a84.  v2:= 0I;
  #L125a86.  v3:= 1I;
  #L125a88.  v4:= 2I;
  #L125a8a.  v5:= 0I;
  #L125a8c.  v1:= v8 @kind object;
  #L125a8e.  call `dispatch$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.dispatch$default:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;ZILjava/lang/Object;)V` @kind static;
  #L125a94.  return @kind void;
}
procedure `java.util.concurrent.Executor` `getExecutor`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.getExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L125920.  v0:= v1.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L125924.  return v0 @kind object;
}
procedure `void` `restore$kotlinx_coroutines_core`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v0 @kind this) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.restore$kotlinx_coroutines_core:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L125aa8.  call `usePrivateScheduler$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.usePrivateScheduler$kotlinx_coroutines_core:()V` @kind virtual;
  #L125aae.  return @kind void;
}
procedure `void` `shutdown$kotlinx_coroutines_core`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v1 @kind this, `long` v2 ) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.shutdown$kotlinx_coroutines_core:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L125ac0.  @monitorenter v1
  #L125ac2.  v0:= v1.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L125ac6.  call `shutdown`(v0, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.shutdown:(J)V` @kind virtual;
  #L125acc.  @monitorexit v1
  #L125ace.  return @kind void;
  #L125ad0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L125ad2.  @monitorexit v1
  #L125ad4.  throw v2;
  catch `java.lang.Throwable` @[L125ac2..L125acc] goto L125ad0;
}
procedure `void` `usePrivateScheduler$kotlinx_coroutines_core`(`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher` v3 @kind this) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.usePrivateScheduler$kotlinx_coroutines_core:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L125af4.  @monitorenter v3
  #L125af6.  v0:= v3.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L125afa.  v1:= 1000L;
  #L125afe.  call `shutdown`(v0, v1) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.shutdown:(J)V` @kind virtual;
  #L125b04.  call temp:= `a`(v3) @signature `Lkotlinx/coroutines/scheduling/SchedulerCoroutineDispatcher;.a:()Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @kind direct;
  #L125b0a.  v0:= temp @kind object;
  #L125b0c.  v3.`kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` := v0 @kind object;
  #L125b10.  @monitorexit v3
  #L125b12.  return @kind void;
  #L125b14.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L125b16.  @monitorexit v3
  #L125b18.  throw v0;
  catch `java.lang.Throwable` @[L125af6..L125b10] goto L125b14;
}
