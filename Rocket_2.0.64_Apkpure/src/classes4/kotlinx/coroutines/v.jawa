record `kotlinx.coroutines.v` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `boolean` `A`(`kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlinx/coroutines/v;.A:(Lkotlin/coroutines/CoroutineContext;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f3650.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0f3654.  call temp:= `get`(v2, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f365a.  v2:= temp @kind object;
  #L0f365c.  v2:= (`kotlinx.coroutines.Job`) v2 @kind object;
  #L0f3660.  v0:= 0I;
  #L0f3662.  v1:= 1I;
  #L0f3664.  if v2 != 0 then goto L0f366a;
  #L0f3668.  goto L0f3678;
  #L0f366a.  call temp:= `isActive`(v2) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L0f3670.  v2:= temp;
  #L0f3672.  if v2 != v1 then goto L0f3678;
  #L0f3676.  v0:= 1I;
  #L0f3678.  return v0;
}
procedure `java.lang.Throwable` `B`(`java.lang.Throwable` v2 @kind object, `kotlinx.coroutines.Job` v3 @kind object) @signature `Lkotlinx/coroutines/v;.B:(Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f36c4.  if v2 != 0 then goto L0f36d8;
  #L0f36c8.  v2:= new `kotlinx.coroutines.JobCancellationException`;
  #L0f36cc.  v0:= 0I;
  #L0f36ce.  v1:= "Job was cancelled" @kind object;
  #L0f36d2.  call `<init>`(v2, v1, v0, v3) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f36d8.  return v2 @kind object;
}
procedure `kotlinx.coroutines.CompletableJob` `a`(`kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/v;.a:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableJob;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f3710.  v0:= new `kotlinx.coroutines.JobImpl`;
  #L0f3714.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/JobImpl;.<init>:(Lkotlinx/coroutines/Job;)V` @kind direct;
  #L0f371a.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `b`(`kotlinx.coroutines.Job` v0 @kind object) @signature `Lkotlinx/coroutines/v;.b:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L0f3774.  call temp:= `Job`(v0) @signature `Lkotlinx/coroutines/JobKt;.Job:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableJob;` @kind static;
  #L0f377a.  v0:= temp @kind object;
  #L0f377c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CompletableJob` `c`(`kotlinx.coroutines.Job` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/v;.c:(Lkotlinx/coroutines/Job;ILjava/lang/Object;)Lkotlinx/coroutines/CompletableJob;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f36ec.  v1:= v1 ^& 1;
  #L0f36f0.  if v1 == 0 then goto L0f36f6;
  #L0f36f4.  v0:= 0I;
  #L0f36f6.  call temp:= `Job`(v0) @signature `Lkotlinx/coroutines/JobKt;.Job:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableJob;` @kind static;
  #L0f36fc.  v0:= temp @kind object;
  #L0f36fe.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `d`(`kotlinx.coroutines.Job` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/v;.d:(Lkotlinx/coroutines/Job;ILjava/lang/Object;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f3750.  v1:= v1 ^& 1;
  #L0f3754.  if v1 == 0 then goto L0f375a;
  #L0f3758.  v0:= 0I;
  #L0f375a.  call temp:= `Job`(v0) @signature `Lkotlinx/coroutines/JobKt;.Job:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @kind static;
  #L0f3760.  v0:= temp @kind object;
  #L0f3762.  return v0 @kind object;
}
procedure `void` `e`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/v;.e:(Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0f3820.  v0:= 0I;
  #L0f3822.  call `cancel`(v1, v0) @signature `Lkotlinx/coroutines/JobKt;.cancel:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L0f3828.  return @kind void;
}
procedure `void` `f`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.util.concurrent.CancellationException` v2 @kind object) @signature `Lkotlinx/coroutines/v;.f:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f383c.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0f3840.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f3846.  v1:= temp @kind object;
  #L0f3848.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L0f384c.  if v1 != 0 then goto L0f3852;
  #L0f3850.  goto L0f3858;
  #L0f3852.  call `cancel`(v1, v2) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L0f3858.  return @kind void;
}
procedure `void` `g`(`kotlinx.coroutines.Job` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/v;.g:(Lkotlinx/coroutines/Job;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0f386c.  call temp:= `CancellationException`(v1, v2) @signature `Lkotlinx/coroutines/ExceptionsKt;.CancellationException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L0f3872.  v1:= temp @kind object;
  #L0f3874.  call `cancel`(v0, v1) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L0f387a.  return @kind void;
}
procedure `boolean` `h`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/v;.h:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0f3608.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0f360c.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f3612.  v1:= temp @kind object;
  #L0f3614.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.JobSupport` @kind boolean;
  #L0f3618.  if v0 == 0 then goto L0f3622;
  #L0f361c.  v1:= (`kotlinx.coroutines.JobSupport`) v1 @kind object;
  #L0f3620.  goto L0f3624;
  #L0f3622.  v1:= 0I;
  #L0f3624.  if v1 != 0 then goto L0f362c;
  #L0f3628.  v1:= 0I;
  #L0f362a.  return v1;
  #L0f362c.  call temp:= `B`(v2, v1) @signature `Lkotlinx/coroutines/v;.B:(Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)Ljava/lang/Throwable;` @kind static;
  #L0f3632.  v2:= temp @kind object;
  #L0f3634.  call `cancelInternal`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f363a.  v1:= 1I;
  #L0f363c.  return v1;
}
procedure `void` `i`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/v;.i:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f37d8.  v2:= v2 ^& 1;
  #L0f37dc.  if v2 == 0 then goto L0f37e2;
  #L0f37e0.  v1:= 0I;
  #L0f37e2.  call `cancel`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancel:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L0f37e8.  return @kind void;
}
procedure `void` `j`(`kotlinx.coroutines.Job` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/v;.j:(Lkotlinx/coroutines/Job;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f37fc.  v3:= v3 ^& 2;
  #L0f3800.  if v3 == 0 then goto L0f3806;
  #L0f3804.  v2:= 0I;
  #L0f3806.  call `cancel`(v0, v1, v2) @signature `Lkotlinx/coroutines/JobKt;.cancel:(Lkotlinx/coroutines/Job;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L0f380c.  return @kind void;
}
procedure `boolean` `k`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.lang.Throwable` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/v;.k:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f35e4.  v2:= v2 ^& 1;
  #L0f35e8.  if v2 == 0 then goto L0f35ee;
  #L0f35ec.  v1:= 0I;
  #L0f35ee.  call temp:= `cancel`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancel:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)Z` @kind static;
  #L0f35f4.  v0:= temp;
  #L0f35f6.  return v0;
}
procedure `java.lang.Object` `l`(`kotlinx.coroutines.Job` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/v;.l:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f368c.  v0:= 0I;
  #L0f368e.  v1:= 1I;
  #L0f3690.  call `cancel$default`(v2, v0, v1, v0) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel$default:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @kind static;
  #L0f3696.  call temp:= `join`(v2, v3) @signature `Lkotlinx/coroutines/Job;.join:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L0f369c.  v2:= temp @kind object;
  #L0f369e.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f36a4.  v3:= temp @kind object;
  #L0f36a6.  if v2 != v3 then goto L0f36ac;
  #L0f36aa.  return v2 @kind object;
  #L0f36ac.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f36b0.  return v2 @kind object;
}
procedure `void` `m`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/v;.m:(Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0f391c.  v0:= 0I;
  #L0f391e.  call `cancelChildren`(v1, v0) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L0f3924.  return @kind void;
}
procedure `void` `n`(`kotlin.coroutines.CoroutineContext` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/v;.n:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L0f3938.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0f393c.  call temp:= `get`(v3, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f3942.  v3:= temp @kind object;
  #L0f3944.  v3:= (`kotlinx.coroutines.Job`) v3 @kind object;
  #L0f3948.  if v3 != 0 then goto L0f394e;
  #L0f394c.  return @kind void;
  #L0f394e.  call temp:= `getChildren`(v3) @signature `Lkotlinx/coroutines/Job;.getChildren:()Lkotlin/sequences/Sequence;` @kind interface;
  #L0f3954.  v0:= temp @kind object;
  #L0f3956.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0f395c.  v0:= temp @kind object;
  #L0f395e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0f3964.  v1:= temp;
  #L0f3966.  if v1 == 0 then goto L0f399c;
  #L0f396a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0f3970.  v1:= temp @kind object;
  #L0f3972.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L0f3976.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.JobSupport` @kind boolean;
  #L0f397a.  if v2 == 0 then goto L0f3984;
  #L0f397e.  v1:= (`kotlinx.coroutines.JobSupport`) v1 @kind object;
  #L0f3982.  goto L0f3986;
  #L0f3984.  v1:= 0I;
  #L0f3986.  if v1 != 0 then goto L0f398c;
  #L0f398a.  goto L0f395e;
  #L0f398c.  call temp:= `B`(v4, v3) @signature `Lkotlinx/coroutines/v;.B:(Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)Ljava/lang/Throwable;` @kind static;
  #L0f3992.  v2:= temp @kind object;
  #L0f3994.  call `cancelInternal`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f399a.  goto L0f395e;
  #L0f399c.  return @kind void;
}
procedure `void` `o`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.util.concurrent.CancellationException` v2 @kind object) @signature `Lkotlinx/coroutines/v;.o:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f39b0.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0f39b4.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f39ba.  v1:= temp @kind object;
  #L0f39bc.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L0f39c0.  if v1 != 0 then goto L0f39c6;
  #L0f39c4.  goto L0f39fc;
  #L0f39c6.  call temp:= `getChildren`(v1) @signature `Lkotlinx/coroutines/Job;.getChildren:()Lkotlin/sequences/Sequence;` @kind interface;
  #L0f39cc.  v1:= temp @kind object;
  #L0f39ce.  if v1 != 0 then goto L0f39d4;
  #L0f39d2.  goto L0f39fc;
  #L0f39d4.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0f39da.  v1:= temp @kind object;
  #L0f39dc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0f39e2.  v0:= temp;
  #L0f39e4.  if v0 == 0 then goto L0f39fc;
  #L0f39e8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0f39ee.  v0:= temp @kind object;
  #L0f39f0.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L0f39f4.  call `cancel`(v0, v2) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L0f39fa.  goto L0f39dc;
  #L0f39fc.  return @kind void;
}
procedure `void` `p`(`kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/v;.p:(Lkotlinx/coroutines/Job;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L0f3a10.  v0:= 0I;
  #L0f3a12.  call `cancelChildren`(v1, v0) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L0f3a18.  return @kind void;
}
procedure `void` `q`(`kotlinx.coroutines.Job` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/v;.q:(Lkotlinx/coroutines/Job;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L0f3a2c.  call temp:= `getChildren`(v3) @signature `Lkotlinx/coroutines/Job;.getChildren:()Lkotlin/sequences/Sequence;` @kind interface;
  #L0f3a32.  v0:= temp @kind object;
  #L0f3a34.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0f3a3a.  v0:= temp @kind object;
  #L0f3a3c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0f3a42.  v1:= temp;
  #L0f3a44.  if v1 == 0 then goto L0f3a7a;
  #L0f3a48.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0f3a4e.  v1:= temp @kind object;
  #L0f3a50.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L0f3a54.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.JobSupport` @kind boolean;
  #L0f3a58.  if v2 == 0 then goto L0f3a62;
  #L0f3a5c.  v1:= (`kotlinx.coroutines.JobSupport`) v1 @kind object;
  #L0f3a60.  goto L0f3a64;
  #L0f3a62.  v1:= 0I;
  #L0f3a64.  if v1 != 0 then goto L0f3a6a;
  #L0f3a68.  goto L0f3a3c;
  #L0f3a6a.  call temp:= `B`(v4, v3) @signature `Lkotlinx/coroutines/v;.B:(Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)Ljava/lang/Throwable;` @kind static;
  #L0f3a70.  v2:= temp @kind object;
  #L0f3a72.  call `cancelInternal`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0f3a78.  goto L0f3a3c;
  #L0f3a7a.  return @kind void;
}
procedure `void` `r`(`kotlinx.coroutines.Job` v1 @kind object, `java.util.concurrent.CancellationException` v2 @kind object) @signature `Lkotlinx/coroutines/v;.r:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f3a8c.  call temp:= `getChildren`(v1) @signature `Lkotlinx/coroutines/Job;.getChildren:()Lkotlin/sequences/Sequence;` @kind interface;
  #L0f3a92.  v1:= temp @kind object;
  #L0f3a94.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0f3a9a.  v1:= temp @kind object;
  #L0f3a9c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0f3aa2.  v0:= temp;
  #L0f3aa4.  if v0 == 0 then goto L0f3abc;
  #L0f3aa8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0f3aae.  v0:= temp @kind object;
  #L0f3ab0.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L0f3ab4.  call `cancel`(v0, v2) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L0f3aba.  goto L0f3a9c;
  #L0f3abc.  return @kind void;
}
procedure `void` `s`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.lang.Throwable` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/v;.s:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f388c.  v2:= v2 ^& 1;
  #L0f3890.  if v2 == 0 then goto L0f3896;
  #L0f3894.  v1:= 0I;
  #L0f3896.  call `cancelChildren`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L0f389c.  return @kind void;
}
procedure `void` `t`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/v;.t:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f38b0.  v2:= v2 ^& 1;
  #L0f38b4.  if v2 == 0 then goto L0f38ba;
  #L0f38b8.  v1:= 0I;
  #L0f38ba.  call `cancelChildren`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L0f38c0.  return @kind void;
}
procedure `void` `u`(`kotlinx.coroutines.Job` v0 @kind object, `java.lang.Throwable` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/v;.u:(Lkotlinx/coroutines/Job;Ljava/lang/Throwable;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f38d4.  v2:= v2 ^& 1;
  #L0f38d8.  if v2 == 0 then goto L0f38de;
  #L0f38dc.  v1:= 0I;
  #L0f38de.  call `cancelChildren`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlinx/coroutines/Job;Ljava/lang/Throwable;)V` @kind static;
  #L0f38e4.  return @kind void;
}
procedure `void` `v`(`kotlinx.coroutines.Job` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/v;.v:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f38f8.  v2:= v2 ^& 1;
  #L0f38fc.  if v2 == 0 then goto L0f3902;
  #L0f3900.  v1:= 0I;
  #L0f3902.  call `cancelChildren`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L0f3908.  return @kind void;
}
procedure `kotlinx.coroutines.DisposableHandle` `w`(`kotlinx.coroutines.Job` v1 @kind object, `kotlinx.coroutines.DisposableHandle` v2 @kind object) @signature `Lkotlinx/coroutines/v;.w:(Lkotlinx/coroutines/Job;Lkotlinx/coroutines/DisposableHandle;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f372c.  v0:= new `kotlinx.coroutines.DisposeOnCompletion`;
  #L0f3730.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/DisposeOnCompletion;.<init>:(Lkotlinx/coroutines/DisposableHandle;)V` @kind direct;
  #L0f3736.  call temp:= `invokeOnCompletion`(v1, v0) @signature `Lkotlinx/coroutines/Job;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind interface;
  #L0f373c.  v1:= temp @kind object;
  #L0f373e.  return v1 @kind object;
}
procedure `void` `x`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/v;.x:(Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f3ad0.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0f3ad4.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f3ada.  v1:= temp @kind object;
  #L0f3adc.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L0f3ae0.  if v1 != 0 then goto L0f3ae6;
  #L0f3ae4.  goto L0f3aec;
  #L0f3ae6.  call `ensureActive`(v1) @signature `Lkotlinx/coroutines/JobKt;.ensureActive:(Lkotlinx/coroutines/Job;)V` @kind static;
  #L0f3aec.  return @kind void;
}
procedure `void` `y`(`kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/v;.y:(Lkotlinx/coroutines/Job;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f3b00.  call temp:= `isActive`(v1) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L0f3b06.  v0:= temp;
  #L0f3b08.  if v0 == 0 then goto L0f3b0e;
  #L0f3b0c.  return @kind void;
  #L0f3b0e.  call temp:= `getCancellationException`(v1) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L0f3b14.  v1:= temp @kind object;
  #L0f3b16.  throw v1;
}
procedure `kotlinx.coroutines.Job` `z`(`kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlinx/coroutines/v;.z:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f3790.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0f3794.  call temp:= `get`(v2, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f379a.  v0:= temp @kind object;
  #L0f379c.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L0f37a0.  if v0 == 0 then goto L0f37a6;
  #L0f37a4.  return v0 @kind object;
  #L0f37a6.  v0:= new `java.lang.IllegalStateException`;
  #L0f37aa.  v1:= "Current context doesn't contain Job in it: " @kind object;
  #L0f37ae.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0f37b4.  v2:= temp @kind object;
  #L0f37b6.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f37bc.  v2:= temp @kind object;
  #L0f37be.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f37c4.  throw v0;
}
