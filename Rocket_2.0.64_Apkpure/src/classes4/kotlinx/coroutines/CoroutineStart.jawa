record `kotlinx.coroutines.CoroutineStart` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.CoroutineStart` `@@kotlinx.coroutines.CoroutineStart.ATOMIC` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.CoroutineStart` `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.CoroutineStart` `@@kotlinx.coroutines.CoroutineStart.LAZY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.CoroutineStart` `@@kotlinx.coroutines.CoroutineStart.UNDISPATCHED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.CoroutineStart`[] `@@kotlinx.coroutines.CoroutineStart.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineStart;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0efe7c.  v0:= new `kotlinx.coroutines.CoroutineStart`;
  #L0efe80.  v1:= "DEFAULT" @kind object;
  #L0efe84.  v2:= 0I;
  #L0efe86.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineStart;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0efe8c.  `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @type ^`kotlinx.coroutines.CoroutineStart` := v0 @kind object;
  #L0efe90.  v0:= new `kotlinx.coroutines.CoroutineStart`;
  #L0efe94.  v1:= "LAZY" @kind object;
  #L0efe98.  v2:= 1I;
  #L0efe9a.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineStart;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0efea0.  `@@kotlinx.coroutines.CoroutineStart.LAZY` @type ^`kotlinx.coroutines.CoroutineStart` := v0 @kind object;
  #L0efea4.  v0:= new `kotlinx.coroutines.CoroutineStart`;
  #L0efea8.  v1:= "ATOMIC" @kind object;
  #L0efeac.  v2:= 2I;
  #L0efeae.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineStart;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0efeb4.  `@@kotlinx.coroutines.CoroutineStart.ATOMIC` @type ^`kotlinx.coroutines.CoroutineStart` := v0 @kind object;
  #L0efeb8.  v0:= new `kotlinx.coroutines.CoroutineStart`;
  #L0efebc.  v1:= "UNDISPATCHED" @kind object;
  #L0efec0.  v2:= 3I;
  #L0efec2.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineStart;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0efec8.  `@@kotlinx.coroutines.CoroutineStart.UNDISPATCHED` @type ^`kotlinx.coroutines.CoroutineStart` := v0 @kind object;
  #L0efecc.  call temp:= `a`() @signature `Lkotlinx/coroutines/CoroutineStart;.a:()[Lkotlinx/coroutines/CoroutineStart;` @kind static;
  #L0efed2.  v0:= temp @kind object;
  #L0efed4.  `@@kotlinx.coroutines.CoroutineStart.a` @type ^`kotlinx.coroutines.CoroutineStart`[] := v0 @kind object;
  #L0efed8.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineStart` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/CoroutineStart;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0efeec.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0efef2.  return @kind void;
}
procedure `kotlinx.coroutines.CoroutineStart`[] `a`() @signature `Lkotlinx/coroutines/CoroutineStart;.a:()[Lkotlinx/coroutines/CoroutineStart;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L0efe18.  v0:= 4I;
  #L0efe1a.  v0:= new `kotlinx.coroutines.CoroutineStart`[v0];
  #L0efe1e.  v1:= `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L0efe22.  v2:= 0I;
  #L0efe24.  v0[v2]:= v1 @kind object;
  #L0efe28.  v1:= `@@kotlinx.coroutines.CoroutineStart.LAZY` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L0efe2c.  v2:= 1I;
  #L0efe2e.  v0[v2]:= v1 @kind object;
  #L0efe32.  v1:= `@@kotlinx.coroutines.CoroutineStart.ATOMIC` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L0efe36.  v2:= 2I;
  #L0efe38.  v0[v2]:= v1 @kind object;
  #L0efe3c.  v1:= `@@kotlinx.coroutines.CoroutineStart.UNDISPATCHED` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L0efe40.  v2:= 3I;
  #L0efe42.  v0[v2]:= v1 @kind object;
  #L0efe46.  return v0 @kind object;
}
procedure `void` `isLazy$annotations`() @signature `Lkotlinx/coroutines/CoroutineStart;.isLazy$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0effd0.  return @kind void;
}
procedure `kotlinx.coroutines.CoroutineStart` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineStart;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/CoroutineStart;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0efdf4.  v0:= constclass @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L0efdf8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L0efdfe.  v1:= temp @kind object;
  #L0efe00.  v1:= (`kotlinx.coroutines.CoroutineStart`) v1 @kind object;
  #L0efe04.  return v1 @kind object;
}
procedure `kotlinx.coroutines.CoroutineStart`[] `values`() @signature `Lkotlinx/coroutines/CoroutineStart;.values:()[Lkotlinx/coroutines/CoroutineStart;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0efe58.  v0:= `@@kotlinx.coroutines.CoroutineStart.a` @type ^`kotlinx.coroutines.CoroutineStart`[] @kind object;
  #L0efe5c.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L0efe62.  v0:= temp @kind object;
  #L0efe64.  v0:= (`kotlinx.coroutines.CoroutineStart`[]) v0 @kind object;
  #L0efe68.  return v0 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.CoroutineStart` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/CoroutineStart;.invoke:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0eff04.  v0:= `@@kotlinx.coroutines.CoroutineStart$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L0eff08.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0eff0e.  v1:= temp;
  #L0eff10.  v0:= v0[v1];
  #L0eff14.  v1:= 1I;
  #L0eff16.  if v0 == v1 then goto L0eff4a;
  #L0eff1a.  v1:= 2I;
  #L0eff1c.  if v0 == v1 then goto L0eff42;
  #L0eff20.  v1:= 3I;
  #L0eff22.  if v0 == v1 then goto L0eff3a;
  #L0eff26.  v3:= 4I;
  #L0eff28.  if v0 != v3 then goto L0eff2e;
  #L0eff2c.  goto L0eff50;
  #L0eff2e.  v3:= new `kotlin.NoWhenBranchMatchedException`;
  #L0eff32.  call `<init>`(v3) @signature `Lkotlin/NoWhenBranchMatchedException;.<init>:()V` @kind direct;
  #L0eff38.  throw v3;
  #L0eff3a.  call `startCoroutineUndispatched`(v3, v4) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUndispatched:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0eff40.  goto L0eff50;
  #L0eff42.  call `startCoroutine`(v3, v4) @signature `Lkotlin/coroutines/ContinuationKt;.startCoroutine:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0eff48.  goto L0eff50;
  #L0eff4a.  call `startCoroutineCancellable`(v3, v4) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0eff50.  return @kind void;
}
procedure `void` `invoke`(`kotlinx.coroutines.CoroutineStart` v6 @kind this, `kotlin.jvm.functions.Function2` v7 @kind object, `java.lang.Object` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/CoroutineStart;.invoke:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0eff64.  v0:= `@@kotlinx.coroutines.CoroutineStart$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L0eff68.  call temp:= `ordinal`(v6) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L0eff6e.  v1:= temp;
  #L0eff70.  v0:= v0[v1];
  #L0eff74.  v1:= 1I;
  #L0eff76.  if v0 == v1 then goto L0effaa;
  #L0eff7a.  v1:= 2I;
  #L0eff7c.  if v0 == v1 then goto L0effa2;
  #L0eff80.  v1:= 3I;
  #L0eff82.  if v0 == v1 then goto L0eff9a;
  #L0eff86.  v7:= 4I;
  #L0eff88.  if v0 != v7 then goto L0eff8e;
  #L0eff8c.  goto L0effbc;
  #L0eff8e.  v7:= new `kotlin.NoWhenBranchMatchedException`;
  #L0eff92.  call `<init>`(v7) @signature `Lkotlin/NoWhenBranchMatchedException;.<init>:()V` @kind direct;
  #L0eff98.  throw v7;
  #L0eff9a.  call `startCoroutineUndispatched`(v7, v8, v9) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUndispatched:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0effa0.  goto L0effbc;
  #L0effa2.  call `startCoroutine`(v7, v8, v9) @signature `Lkotlin/coroutines/ContinuationKt;.startCoroutine:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0effa8.  goto L0effbc;
  #L0effaa.  v3:= 0I;
  #L0effac.  v4:= 4I;
  #L0effae.  v5:= 0I;
  #L0effb0.  v0:= v7 @kind object;
  #L0effb2.  v1:= v8 @kind object;
  #L0effb4.  v2:= v9 @kind object;
  #L0effb6.  call `startCoroutineCancellable$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable$default:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L0effbc.  return @kind void;
}
procedure `boolean` `isLazy`(`kotlinx.coroutines.CoroutineStart` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineStart;.isLazy:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0efdd4.  v0:= `@@kotlinx.coroutines.CoroutineStart.LAZY` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L0efdd8.  if v1 != v0 then goto L0efde0;
  #L0efddc.  v0:= 1I;
  #L0efdde.  goto L0efde2;
  #L0efde0.  v0:= 0I;
  #L0efde2.  return v0;
}
