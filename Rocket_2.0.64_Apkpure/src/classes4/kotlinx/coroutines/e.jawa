record `kotlinx.coroutines.e` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `kotlinx.coroutines.Deferred` `a`(`kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `kotlinx.coroutines.CoroutineStart` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlinx/coroutines/e;.a:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Deferred;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ece68.  call temp:= `newCoroutineContext`(v1, v2) @signature `Lkotlinx/coroutines/CoroutineContextKt;.newCoroutineContext:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0ece6e.  v1:= temp @kind object;
  #L0ece70.  call temp:= `isLazy`(v3) @signature `Lkotlinx/coroutines/CoroutineStart;.isLazy:()Z` @kind virtual;
  #L0ece76.  v2:= temp;
  #L0ece78.  if v2 == 0 then goto L0ece88;
  #L0ece7c.  v2:= new `kotlinx.coroutines.w`;
  #L0ece80.  call `<init>`(v2, v1, v4) @signature `Lkotlinx/coroutines/w;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L0ece86.  goto L0ece94;
  #L0ece88.  v2:= new `kotlinx.coroutines.k`;
  #L0ece8c.  v0:= 1I;
  #L0ece8e.  call `<init>`(v2, v1, v0) @signature `Lkotlinx/coroutines/k;.<init>:(Lkotlin/coroutines/CoroutineContext;Z)V` @kind direct;
  #L0ece94.  call `start`(v2, v3, v2, v4) @signature `Lkotlinx/coroutines/AbstractCoroutine;.start:(Lkotlinx/coroutines/CoroutineStart;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @kind virtual;
  #L0ece9a.  return v2 @kind object;
}
procedure `kotlinx.coroutines.Deferred` `b`(`kotlinx.coroutines.CoroutineScope` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlinx.coroutines.CoroutineStart` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/e;.b:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Deferred;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ece34.  v5:= v4 ^& 1;
  #L0ece38.  if v5 == 0 then goto L0ece40;
  #L0ece3c.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L0ece40.  v4:= v4 ^& 2;
  #L0ece44.  if v4 == 0 then goto L0ece4c;
  #L0ece48.  v2:= `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L0ece4c.  call temp:= `async`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/BuildersKt;.async:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Deferred;` @kind static;
  #L0ece52.  v0:= temp @kind object;
  #L0ece54.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind object, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/e;.c:(Lkotlinx/coroutines/CoroutineDispatcher;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0ecd44.  call temp:= `withContext`(v0, v1, v2) @signature `Lkotlinx/coroutines/BuildersKt;.withContext:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L0ecd4a.  v0:= temp @kind object;
  #L0ecd4c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `d`(`kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `kotlinx.coroutines.CoroutineStart` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlinx/coroutines/e;.d:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ecee0.  call temp:= `newCoroutineContext`(v1, v2) @signature `Lkotlinx/coroutines/CoroutineContextKt;.newCoroutineContext:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0ecee6.  v1:= temp @kind object;
  #L0ecee8.  call temp:= `isLazy`(v3) @signature `Lkotlinx/coroutines/CoroutineStart;.isLazy:()Z` @kind virtual;
  #L0eceee.  v2:= temp;
  #L0ecef0.  if v2 == 0 then goto L0ecf00;
  #L0ecef4.  v2:= new `kotlinx.coroutines.x`;
  #L0ecef8.  call `<init>`(v2, v1, v4) @signature `Lkotlinx/coroutines/x;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L0ecefe.  goto L0ecf0c;
  #L0ecf00.  v2:= new `kotlinx.coroutines.e0`;
  #L0ecf04.  v0:= 1I;
  #L0ecf06.  call `<init>`(v2, v1, v0) @signature `Lkotlinx/coroutines/e0;.<init>:(Lkotlin/coroutines/CoroutineContext;Z)V` @kind direct;
  #L0ecf0c.  call `start`(v2, v3, v2, v4) @signature `Lkotlinx/coroutines/AbstractCoroutine;.start:(Lkotlinx/coroutines/CoroutineStart;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @kind virtual;
  #L0ecf12.  return v2 @kind object;
}
procedure `kotlinx.coroutines.Job` `e`(`kotlinx.coroutines.CoroutineScope` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlinx.coroutines.CoroutineStart` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/e;.e:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0eceac.  v5:= v4 ^& 1;
  #L0eceb0.  if v5 == 0 then goto L0eceb8;
  #L0eceb4.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L0eceb8.  v4:= v4 ^& 2;
  #L0ecebc.  if v4 == 0 then goto L0ecec4;
  #L0ecec0.  v2:= `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L0ecec4.  call temp:= `launch`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/BuildersKt;.launch:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;` @kind static;
  #L0ececa.  v0:= temp @kind object;
  #L0ececc.  return v0 @kind object;
}
procedure `java.lang.Object` `f`(`kotlin.coroutines.CoroutineContext` v8 @kind object, `kotlin.jvm.functions.Function2` v9 @kind object, `kotlin.coroutines.Continuation` v10 @kind object) @signature `Lkotlinx/coroutines/e;.f:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0ecd60.  call temp:= `getContext`(v10) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0ecd66.  v0:= temp @kind object;
  #L0ecd68.  call temp:= `newCoroutineContext`(v0, v8) @signature `Lkotlinx/coroutines/CoroutineContextKt;.newCoroutineContext:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0ecd6e.  v8:= temp @kind object;
  #L0ecd70.  call `ensureActive`(v8) @signature `Lkotlinx/coroutines/JobKt;.ensureActive:(Lkotlin/coroutines/CoroutineContext;)V` @kind static;
  #L0ecd76.  if v8 != v0 then goto L0ecd8e;
  #L0ecd7a.  v0:= new `kotlinx.coroutines.internal.ScopeCoroutine`;
  #L0ecd7e.  call `<init>`(v0, v8, v10) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0ecd84.  call temp:= `startUndispatchedOrReturn`(v0, v0, v9) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startUndispatchedOrReturn:(Lkotlinx/coroutines/internal/ScopeCoroutine;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L0ecd8a.  v8:= temp @kind object;
  #L0ecd8c.  goto L0ece02;
  #L0ecd8e.  v1:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L0ecd92.  call temp:= `get`(v8, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0ecd98.  v2:= temp @kind object;
  #L0ecd9a.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0ecda0.  v0:= temp @kind object;
  #L0ecda2.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0ecda8.  v0:= temp;
  #L0ecdaa.  if v0 == 0 then goto L0ecdde;
  #L0ecdae.  v0:= new `kotlinx.coroutines.UndispatchedCoroutine`;
  #L0ecdb2.  call `<init>`(v0, v8, v10) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0ecdb8.  v1:= 0I;
  #L0ecdba.  call temp:= `updateThreadContext`(v8, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0ecdc0.  v1:= temp @kind object;
  #L0ecdc2.  call temp:= `startUndispatchedOrReturn`(v0, v0, v9) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startUndispatchedOrReturn:(Lkotlinx/coroutines/internal/ScopeCoroutine;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L0ecdc8.  v9:= temp @kind object;
  #L0ecdca.  call `restoreThreadContext`(v8, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0ecdd0.  v8:= v9 @kind object;
  #L0ecdd2.  goto L0ece02;
  #L0ecdd4.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0ecdd6.  call `restoreThreadContext`(v8, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0ecddc.  throw v9;
  #L0ecdde.  v0:= new `kotlinx.coroutines.DispatchedCoroutine`;
  #L0ecde2.  call `<init>`(v0, v8, v10) @signature `Lkotlinx/coroutines/DispatchedCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0ecde8.  v5:= 0I;
  #L0ecdea.  v6:= 4I;
  #L0ecdec.  v7:= 0I;
  #L0ecdee.  v2:= v9 @kind object;
  #L0ecdf0.  v3:= v0 @kind object;
  #L0ecdf2.  v4:= v0 @kind object;
  #L0ecdf4.  call `startCoroutineCancellable$default`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable$default:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L0ecdfa.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/DispatchedCoroutine;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0ece00.  v8:= temp @kind object;
  #L0ece02.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0ece08.  v9:= temp @kind object;
  #L0ece0a.  if v8 != v9 then goto L0ece14;
  #L0ece0e.  call `probeCoroutineSuspended`(v10) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0ece14.  return v8 @kind object;
  catch `java.lang.Throwable` @[L0ecdc2..L0ecdca] goto L0ecdd4;
}
