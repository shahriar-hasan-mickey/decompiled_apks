record `kotlinx.coroutines.ChildJob$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `cancel`(`kotlinx.coroutines.ChildJob` v0 @kind object) @signature `Lkotlinx/coroutines/ChildJob$DefaultImpls;.cancel:(Lkotlinx/coroutines/ChildJob;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ee2d8.  call `cancel`(v0) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel:(Lkotlinx/coroutines/Job;)V` @kind static;
  #L0ee2de.  return @kind void;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.ChildJob` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/ChildJob$DefaultImpls;.fold:(Lkotlinx/coroutines/ChildJob;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0ee24c.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.fold:(Lkotlinx/coroutines/Job;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L0ee252.  v0:= temp @kind object;
  #L0ee254.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.ChildJob` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/ChildJob$DefaultImpls;.get:(Lkotlinx/coroutines/ChildJob;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0ee2a0.  call temp:= `get`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.get:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L0ee2a6.  v0:= temp @kind object;
  #L0ee2a8.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.ChildJob` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/ChildJob$DefaultImpls;.minusKey:(Lkotlinx/coroutines/ChildJob;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0ee268.  call temp:= `minusKey`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.minusKey:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0ee26e.  v0:= temp @kind object;
  #L0ee270.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlinx.coroutines.ChildJob` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/ChildJob$DefaultImpls;.plus:(Lkotlinx/coroutines/ChildJob;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0ee284.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.plus:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0ee28a.  v0:= temp @kind object;
  #L0ee28c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `plus`(`kotlinx.coroutines.ChildJob` v0 @kind object, `kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/ChildJob$DefaultImpls;.plus:(Lkotlinx/coroutines/ChildJob;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0ee2bc.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.plus:(Lkotlinx/coroutines/Job;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @kind static;
  #L0ee2c2.  v0:= temp @kind object;
  #L0ee2c4.  return v0 @kind object;
}
