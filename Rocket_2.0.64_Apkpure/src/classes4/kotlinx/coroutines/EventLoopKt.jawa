record `kotlinx.coroutines.EventLoopKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.EventLoop` `createEventLoop`() @signature `Lkotlinx/coroutines/EventLoopKt;.createEventLoop:()Lkotlinx/coroutines/EventLoop;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f2450.  v0:= new `kotlinx.coroutines.BlockingEventLoop`;
  #L0f2454.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L0f245a.  v1:= temp @kind object;
  #L0f245c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/BlockingEventLoop;.<init>:(Ljava/lang/Thread;)V` @kind direct;
  #L0f2462.  return v0 @kind object;
}
procedure `void` `platformAutoreleasePool`(`kotlin.jvm.functions.Function0` v0 @kind object) @signature `Lkotlinx/coroutines/EventLoopKt;.platformAutoreleasePool:(Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0f24ac.  call temp:= `invoke`(v0) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0f24b2.  return @kind void;
}
procedure `long` `processNextEventInCurrentThread`() @signature `Lkotlinx/coroutines/EventLoopKt;.processNextEventInCurrentThread:()J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f2474.  v0:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L0f2478.  call temp:= `currentOrNull$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.currentOrNull$kotlinx_coroutines_core:()Lkotlinx/coroutines/EventLoop;` @kind virtual;
  #L0f247e.  v0:= temp @kind object;
  #L0f2480.  if v0 != 0 then goto L0f2490;
  #L0f2484.  v0:= 9223372036854775807L;
  #L0f248e.  goto L0f2498;
  #L0f2490.  call temp:= `processNextEvent`(v0) @signature `Lkotlinx/coroutines/EventLoop;.processNextEvent:()J` @kind virtual;
  #L0f2496.  v0:= temp @kind wide;
  #L0f2498.  return v0 @kind wide;
}
