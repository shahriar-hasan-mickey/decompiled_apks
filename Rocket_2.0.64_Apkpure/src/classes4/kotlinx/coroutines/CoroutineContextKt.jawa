record `kotlinx.coroutines.CoroutineContextKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlin.coroutines.CoroutineContext` `a`(`kotlin.coroutines.CoroutineContext` v3 @kind object, `kotlin.coroutines.CoroutineContext` v4 @kind object, `boolean` v5 ) @signature `Lkotlinx/coroutines/CoroutineContextKt;.a:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext;Z)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ef070.  call temp:= `b`(v3) @signature `Lkotlinx/coroutines/CoroutineContextKt;.b:(Lkotlin/coroutines/CoroutineContext;)Z` @kind static;
  #L0ef076.  v0:= temp;
  #L0ef078.  call temp:= `b`(v4) @signature `Lkotlinx/coroutines/CoroutineContextKt;.b:(Lkotlin/coroutines/CoroutineContext;)Z` @kind static;
  #L0ef07e.  v1:= temp;
  #L0ef080.  if v0 != 0 then goto L0ef092;
  #L0ef084.  if v1 != 0 then goto L0ef092;
  #L0ef088.  call temp:= `plus`(v3, v4) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0ef08e.  v3:= temp @kind object;
  #L0ef090.  return v3 @kind object;
  #L0ef092.  v0:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L0ef096.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L0ef09c.  v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v4 @kind object;
  #L0ef0a0.  v4:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L0ef0a4.  v2:= new `kotlinx.coroutines.CoroutineContextKt$b`;
  #L0ef0a8.  call `<init>`(v2, v0, v5) @signature `Lkotlinx/coroutines/CoroutineContextKt$b;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Z)V` @kind direct;
  #L0ef0ae.  call temp:= `fold`(v3, v4, v2) @signature `Lkotlin/coroutines/CoroutineContext;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind interface;
  #L0ef0b4.  v3:= temp @kind object;
  #L0ef0b6.  v3:= (`kotlin.coroutines.CoroutineContext`) v3 @kind object;
  #L0ef0ba.  if v1 == 0 then goto L0ef0d6;
  #L0ef0be.  v5:= v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L0ef0c2.  v5:= (`kotlin.coroutines.CoroutineContext`) v5 @kind object;
  #L0ef0c6.  v1:= `@@kotlinx.coroutines.CoroutineContextKt$a.a` @type ^`kotlinx.coroutines.CoroutineContextKt$a` @kind object;
  #L0ef0ca.  call temp:= `fold`(v5, v4, v1) @signature `Lkotlin/coroutines/CoroutineContext;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind interface;
  #L0ef0d0.  v4:= temp @kind object;
  #L0ef0d2.  v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v4 @kind object;
  #L0ef0d6.  v4:= v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L0ef0da.  v4:= (`kotlin.coroutines.CoroutineContext`) v4 @kind object;
  #L0ef0de.  call temp:= `plus`(v3, v4) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0ef0e4.  v3:= temp @kind object;
  #L0ef0e6.  return v3 @kind object;
}
procedure `boolean` `b`(`kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.b:(Lkotlin/coroutines/CoroutineContext;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0eef40.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L0eef44.  v1:= `@@kotlinx.coroutines.CoroutineContextKt$c.a` @type ^`kotlinx.coroutines.CoroutineContextKt$c` @kind object;
  #L0eef48.  call temp:= `fold`(v2, v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind interface;
  #L0eef4e.  v2:= temp @kind object;
  #L0eef50.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L0eef54.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L0eef5a.  v2:= temp;
  #L0eef5c.  return v2;
}
procedure `java.lang.String` `getCoroutineName`(`kotlin.coroutines.CoroutineContext` v0 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.getCoroutineName:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L0ef05c.  v0:= 0I;
  #L0ef05e.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `newCoroutineContext`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.newCoroutineContext:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ef0f8.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/CoroutineContextKt;.b:(Lkotlin/coroutines/CoroutineContext;)Z` @kind static;
  #L0ef0fe.  v0:= temp;
  #L0ef100.  if v0 != 0 then goto L0ef10e;
  #L0ef104.  call temp:= `plus`(v1, v2) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0ef10a.  v1:= temp @kind object;
  #L0ef10c.  return v1 @kind object;
  #L0ef10e.  v0:= 0I;
  #L0ef110.  call temp:= `a`(v1, v2, v0) @signature `Lkotlinx/coroutines/CoroutineContextKt;.a:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext;Z)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0ef116.  v1:= temp @kind object;
  #L0ef118.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `newCoroutineContext`(`kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.newCoroutineContext:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ef12c.  call temp:= `getCoroutineContext`(v1) @signature `Lkotlinx/coroutines/CoroutineScope;.getCoroutineContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0ef132.  v1:= temp @kind object;
  #L0ef134.  v0:= 1I;
  #L0ef136.  call temp:= `a`(v1, v2, v0) @signature `Lkotlinx/coroutines/CoroutineContextKt;.a:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext;Z)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0ef13c.  v1:= temp @kind object;
  #L0ef13e.  call temp:= `getDefault`() @signature `Lkotlinx/coroutines/Dispatchers;.getDefault:()Lkotlinx/coroutines/CoroutineDispatcher;` @kind static;
  #L0ef144.  v2:= temp @kind object;
  #L0ef146.  if v1 == v2 then goto L0ef16a;
  #L0ef14a.  v2:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L0ef14e.  call temp:= `get`(v1, v2) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0ef154.  v2:= temp @kind object;
  #L0ef156.  if v2 != 0 then goto L0ef16a;
  #L0ef15a.  call temp:= `getDefault`() @signature `Lkotlinx/coroutines/Dispatchers;.getDefault:()Lkotlinx/coroutines/CoroutineDispatcher;` @kind static;
  #L0ef160.  v2:= temp @kind object;
  #L0ef162.  call temp:= `plus`(v1, v2) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0ef168.  v1:= temp @kind object;
  #L0ef16a.  return v1 @kind object;
}
procedure `kotlinx.coroutines.UndispatchedCoroutine` `undispatchedCompletion`(`kotlin.coroutines.jvm.internal.CoroutineStackFrame` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.undispatchedCompletion:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlinx/coroutines/UndispatchedCoroutine;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ef17c.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.DispatchedCoroutine` @kind boolean;
  #L0ef180.  v1:= 0I;
  #L0ef182.  if v0 == 0 then goto L0ef188;
  #L0ef186.  return v1 @kind object;
  #L0ef188.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind interface;
  #L0ef18e.  v2:= temp @kind object;
  #L0ef190.  if v2 != 0 then goto L0ef196;
  #L0ef194.  return v1 @kind object;
  #L0ef196.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.UndispatchedCoroutine` @kind boolean;
  #L0ef19a.  if v0 == 0 then goto L0ef17c;
  #L0ef19e.  v2:= (`kotlinx.coroutines.UndispatchedCoroutine`) v2 @kind object;
  #L0ef1a2.  return v2 @kind object;
}
procedure `kotlinx.coroutines.UndispatchedCoroutine` `updateUndispatchedCompletion`(`kotlin.coroutines.Continuation` v2 @kind object, `kotlin.coroutines.CoroutineContext` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0ef1b4.  v0:= instanceof @variable v2 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L0ef1b8.  v1:= 0I;
  #L0ef1ba.  if v0 != 0 then goto L0ef1c0;
  #L0ef1be.  return v1 @kind object;
  #L0ef1c0.  v0:= `@@kotlinx.coroutines.k0.a` @type ^`kotlinx.coroutines.k0` @kind object;
  #L0ef1c4.  call temp:= `get`(v3, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0ef1ca.  v0:= temp @kind object;
  #L0ef1cc.  if v0 == 0 then goto L0ef1d4;
  #L0ef1d0.  v0:= 1I;
  #L0ef1d2.  goto L0ef1d6;
  #L0ef1d4.  v0:= 0I;
  #L0ef1d6.  if v0 != 0 then goto L0ef1dc;
  #L0ef1da.  return v1 @kind object;
  #L0ef1dc.  v2:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v2 @kind object;
  #L0ef1e0.  call temp:= `undispatchedCompletion`(v2) @signature `Lkotlinx/coroutines/CoroutineContextKt;.undispatchedCompletion:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L0ef1e6.  v2:= temp @kind object;
  #L0ef1e8.  if v2 != 0 then goto L0ef1ee;
  #L0ef1ec.  goto L0ef1f4;
  #L0ef1ee.  call `saveThreadContext`(v2, v3, v4) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.saveThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind virtual;
  #L0ef1f4.  return v2 @kind object;
}
procedure `java.lang.Object` `withContinuationContext`(`kotlin.coroutines.Continuation` v2 @kind object, `java.lang.Object` v3 @kind object, `kotlin.jvm.functions.Function0` v4 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.withContinuationContext:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0eef70.  call temp:= `getContext`(v2) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0eef76.  v0:= temp @kind object;
  #L0eef78.  call temp:= `updateThreadContext`(v0, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0eef7e.  v3:= temp @kind object;
  #L0eef80.  v1:= `@@kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0eef84.  if v3 == v1 then goto L0eef92;
  #L0eef88.  call temp:= `updateUndispatchedCompletion`(v2, v0, v3) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L0eef8e.  v2:= temp @kind object;
  #L0eef90.  goto L0eef94;
  #L0eef92.  v2:= 0I;
  #L0eef94.  v1:= 1I;
  #L0eef96.  call temp:= `invoke`(v4) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0eef9c.  v4:= temp @kind object;
  #L0eef9e.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L0eefa4.  if v2 == 0 then goto L0eefb4;
  #L0eefa8.  call temp:= `clearThreadContext`(v2) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L0eefae.  v2:= temp;
  #L0eefb0.  if v2 == 0 then goto L0eefba;
  #L0eefb4.  call `restoreThreadContext`(v0, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0eefba.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L0eefc0.  return v4 @kind object;
  #L0eefc2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0eefc4.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L0eefca.  if v2 == 0 then goto L0eefda;
  #L0eefce.  call temp:= `clearThreadContext`(v2) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L0eefd4.  v2:= temp;
  #L0eefd6.  if v2 == 0 then goto L0eefe0;
  #L0eefda.  call `restoreThreadContext`(v0, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0eefe0.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L0eefe6.  throw v4;
  catch `java.lang.Throwable` @[L0eef96..L0eef9e] goto L0eefc2;
}
procedure `java.lang.Object` `withCoroutineContext`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.withCoroutineContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0ef004.  call temp:= `updateThreadContext`(v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0ef00a.  v2:= temp @kind object;
  #L0ef00c.  v0:= 1I;
  #L0ef00e.  call temp:= `invoke`(v3) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L0ef014.  v3:= temp @kind object;
  #L0ef016.  call `finallyStart`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L0ef01c.  call `restoreThreadContext`(v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0ef022.  call `finallyEnd`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L0ef028.  return v3 @kind object;
  #L0ef02a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0ef02c.  call `finallyStart`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L0ef032.  call `restoreThreadContext`(v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L0ef038.  call `finallyEnd`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L0ef03e.  throw v3;
  catch `java.lang.Throwable` @[L0ef00e..L0ef016] goto L0ef02a;
}
