record `kotlinx.coroutines.sync.MutexKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.sync.MutexKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.sync.MutexKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.sync.MutexKt.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.sync.MutexKt.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.sync.b` `@@kotlinx.coroutines.sync.MutexKt.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.sync.b` `@@kotlinx.coroutines.sync.MutexKt.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/sync/MutexKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1286f8.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L1286fc.  v1:= "LOCK_FAIL" @kind object;
  #L128700.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L128706.  `@@kotlinx.coroutines.sync.MutexKt.a` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L12870a.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L12870e.  v1:= "UNLOCK_FAIL" @kind object;
  #L128712.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L128718.  `@@kotlinx.coroutines.sync.MutexKt.b` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L12871c.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L128720.  v1:= "LOCKED" @kind object;
  #L128724.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12872a.  `@@kotlinx.coroutines.sync.MutexKt.c` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L12872e.  v1:= new `kotlinx.coroutines.internal.Symbol`;
  #L128732.  v2:= "UNLOCKED" @kind object;
  #L128736.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12873c.  `@@kotlinx.coroutines.sync.MutexKt.d` @type ^`kotlinx.coroutines.internal.Symbol` := v1 @kind object;
  #L128740.  v2:= new `kotlinx.coroutines.sync.b`;
  #L128744.  call `<init>`(v2, v0) @signature `Lkotlinx/coroutines/sync/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L12874a.  `@@kotlinx.coroutines.sync.MutexKt.e` @type ^`kotlinx.coroutines.sync.b` := v2 @kind object;
  #L12874e.  v0:= new `kotlinx.coroutines.sync.b`;
  #L128752.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/sync/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L128758.  `@@kotlinx.coroutines.sync.MutexKt.f` @type ^`kotlinx.coroutines.sync.b` := v0 @kind object;
  #L12875c.  return @kind void;
}
procedure `kotlinx.coroutines.sync.Mutex` `Mutex`(`boolean` v1 ) @signature `Lkotlinx/coroutines/sync/MutexKt;.Mutex:(Z)Lkotlinx/coroutines/sync/Mutex;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1286dc.  v0:= new `kotlinx.coroutines.sync.MutexImpl`;
  #L1286e0.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/sync/MutexImpl;.<init>:(Z)V` @kind direct;
  #L1286e6.  return v0 @kind object;
}
procedure `kotlinx.coroutines.sync.Mutex` `Mutex$default`(`boolean` v0 , `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/sync/MutexKt;.Mutex$default:(ZILjava/lang/Object;)Lkotlinx/coroutines/sync/Mutex;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1286b8.  v1:= v1 ^& 1;
  #L1286bc.  if v1 == 0 then goto L1286c2;
  #L1286c0.  v0:= 0I;
  #L1286c2.  call temp:= `Mutex`(v0) @signature `Lkotlinx/coroutines/sync/MutexKt;.Mutex:(Z)Lkotlinx/coroutines/sync/Mutex;` @kind static;
  #L1286c8.  v0:= temp @kind object;
  #L1286ca.  return v0 @kind object;
}
procedure `kotlinx.coroutines.sync.b` `access$getEMPTY_LOCKED$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getEMPTY_LOCKED$p:()Lkotlinx/coroutines/sync/b;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L128688.  v0:= `@@kotlinx.coroutines.sync.MutexKt.e` @type ^`kotlinx.coroutines.sync.b` @kind object;
  #L12868c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.sync.b` `access$getEMPTY_UNLOCKED$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getEMPTY_UNLOCKED$p:()Lkotlinx/coroutines/sync/b;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1286a0.  v0:= `@@kotlinx.coroutines.sync.MutexKt.f` @type ^`kotlinx.coroutines.sync.b` @kind object;
  #L1286a4.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getLOCKED$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getLOCKED$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L128628.  v0:= `@@kotlinx.coroutines.sync.MutexKt.c` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L12862c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getLOCK_FAIL$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getLOCK_FAIL$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L128640.  v0:= `@@kotlinx.coroutines.sync.MutexKt.a` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L128644.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getUNLOCKED$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getUNLOCKED$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L128658.  v0:= `@@kotlinx.coroutines.sync.MutexKt.d` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L12865c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getUNLOCK_FAIL$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getUNLOCK_FAIL$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L128670.  v0:= `@@kotlinx.coroutines.sync.MutexKt.b` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L128674.  return v0 @kind object;
}
procedure `java.lang.Object` `withLock`(`kotlinx.coroutines.sync.Mutex` v4 @kind object, `java.lang.Object` v5 @kind object, `kotlin.jvm.functions.Function0` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/sync/MutexKt;.withLock:(Lkotlinx/coroutines/sync/Mutex;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12853c.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.sync.MutexKt$a` @kind boolean;
  #L128540.  if v0 == 0 then goto L128562;
  #L128544.  v0:= v7 @kind object;
  #L128546.  v0:= (`kotlinx.coroutines.sync.MutexKt$a`) v0 @kind object;
  #L12854a.  v1:= v0.`kotlinx.coroutines.sync.MutexKt$a.e` @type ^`int`;
  #L12854e.  v2:= -2147483648I;
  #L128552.  v3:= v1 ^& v2 @kind int;
  #L128556.  if v3 == 0 then goto L128562;
  #L12855a.  v1:= v1 - v2 @kind int;
  #L12855c.  v0.`kotlinx.coroutines.sync.MutexKt$a.e` @type ^`int` := v1;
  #L128560.  goto L12856c;
  #L128562.  v0:= new `kotlinx.coroutines.sync.MutexKt$a`;
  #L128566.  call `<init>`(v0, v7) @signature `Lkotlinx/coroutines/sync/MutexKt$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L12856c.  v7:= v0.`kotlinx.coroutines.sync.MutexKt$a.d` @type ^`java.lang.Object` @kind object;
  #L128570.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L128576.  v1:= temp @kind object;
  #L128578.  v2:= v0.`kotlinx.coroutines.sync.MutexKt$a.e` @type ^`int`;
  #L12857c.  v3:= 1I;
  #L12857e.  if v2 == 0 then goto L1285b4;
  #L128582.  if v2 != v3 then goto L1285a4;
  #L128586.  v4:= v0.`kotlinx.coroutines.sync.MutexKt$a.c` @type ^`java.lang.Object` @kind object;
  #L12858a.  v6:= v4 @kind object;
  #L12858c.  v6:= (`kotlin.jvm.functions.Function0`) v6 @kind object;
  #L128590.  v5:= v0.`kotlinx.coroutines.sync.MutexKt$a.b` @type ^`java.lang.Object` @kind object;
  #L128594.  v4:= v0.`kotlinx.coroutines.sync.MutexKt$a.a` @type ^`java.lang.Object` @kind object;
  #L128598.  v4:= (`kotlinx.coroutines.sync.Mutex`) v4 @kind object;
  #L12859c.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1285a2.  goto L1285d8;
  #L1285a4.  v4:= new `java.lang.IllegalStateException`;
  #L1285a8.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1285ac.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1285b2.  throw v4;
  #L1285b4.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1285ba.  v0.`kotlinx.coroutines.sync.MutexKt$a.a` @type ^`java.lang.Object` := v4 @kind object;
  #L1285be.  v0.`kotlinx.coroutines.sync.MutexKt$a.b` @type ^`java.lang.Object` := v5 @kind object;
  #L1285c2.  v0.`kotlinx.coroutines.sync.MutexKt$a.c` @type ^`java.lang.Object` := v6 @kind object;
  #L1285c6.  v0.`kotlinx.coroutines.sync.MutexKt$a.e` @type ^`int` := v3;
  #L1285ca.  call temp:= `lock`(v4, v5, v0) @signature `Lkotlinx/coroutines/sync/Mutex;.lock:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1285d0.  v7:= temp @kind object;
  #L1285d2.  if v7 != v1 then goto L1285d8;
  #L1285d6.  return v1 @kind object;
  #L1285d8.  call temp:= `invoke`(v6) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L1285de.  v6:= temp @kind object;
  #L1285e0.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1285e6.  call `unlock`(v4, v5) @signature `Lkotlinx/coroutines/sync/Mutex;.unlock:(Ljava/lang/Object;)V` @kind interface;
  #L1285ec.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1285f2.  return v6 @kind object;
  #L1285f4.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1285f6.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1285fc.  call `unlock`(v4, v5) @signature `Lkotlinx/coroutines/sync/Mutex;.unlock:(Ljava/lang/Object;)V` @kind interface;
  #L128602.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L128608.  throw v6;
  catch `java.lang.Throwable` @[L1285d8..L1285e0] goto L1285f4;
}
procedure `java.lang.Object` `withLock$default`(`kotlinx.coroutines.sync.Mutex` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/sync/MutexKt;.withLock$default:(Lkotlinx/coroutines/sync/Mutex;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1284d0.  v5:= 1I;
  #L1284d2.  v4:= v4 ^& v5 @kind int;
  #L1284d4.  if v4 == 0 then goto L1284da;
  #L1284d8.  v1:= 0I;
  #L1284da.  v4:= 0I;
  #L1284dc.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1284e2.  call temp:= `lock`(v0, v1, v3) @signature `Lkotlinx/coroutines/sync/Mutex;.lock:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1284e8.  call `mark`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1284ee.  call temp:= `invoke`(v2) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L1284f4.  v2:= temp @kind object;
  #L1284f6.  call `finallyStart`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1284fc.  call `unlock`(v0, v1) @signature `Lkotlinx/coroutines/sync/Mutex;.unlock:(Ljava/lang/Object;)V` @kind interface;
  #L128502.  call `finallyEnd`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L128508.  return v2 @kind object;
  #L12850a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12850c.  call `finallyStart`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L128512.  call `unlock`(v0, v1) @signature `Lkotlinx/coroutines/sync/Mutex;.unlock:(Ljava/lang/Object;)V` @kind interface;
  #L128518.  call `finallyEnd`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L12851e.  throw v2;
  catch `java.lang.Throwable` @[L1284ee..L1284f6] goto L12850a;
}
