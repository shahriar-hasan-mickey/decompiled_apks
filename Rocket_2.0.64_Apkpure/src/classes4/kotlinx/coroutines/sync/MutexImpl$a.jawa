record `kotlinx.coroutines.sync.MutexImpl$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.sync.MutexImpl$c` @kind class {
  `kotlinx.coroutines.CancellableContinuation` `kotlinx.coroutines.sync.MutexImpl$a.g` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.sync.MutexImpl` `kotlinx.coroutines.sync.MutexImpl$a.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.sync.MutexImpl$a` v0 @kind this, `kotlinx.coroutines.sync.MutexImpl` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlinx.coroutines.CancellableContinuation` v3 @kind object) @signature `Lkotlinx/coroutines/sync/MutexImpl$a;.<init>:(Lkotlinx/coroutines/sync/MutexImpl;Ljava/lang/Object;Lkotlinx/coroutines/CancellableContinuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L127790.  v0.`kotlinx.coroutines.sync.MutexImpl$a.h` @type ^`kotlinx.coroutines.sync.MutexImpl` := v1 @kind object;
  #L127794.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/sync/MutexImpl$c;.<init>:(Lkotlinx/coroutines/sync/MutexImpl;Ljava/lang/Object;)V` @kind direct;
  #L12779a.  v0.`kotlinx.coroutines.sync.MutexImpl$a.g` @type ^`kotlinx.coroutines.CancellableContinuation` := v3 @kind object;
  #L12779e.  return @kind void;
}
procedure `void` `e`(`kotlinx.coroutines.sync.MutexImpl$a` v2 @kind this) @signature `Lkotlinx/coroutines/sync/MutexImpl$a;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1277b0.  v0:= v2.`kotlinx.coroutines.sync.MutexImpl$a.g` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L1277b4.  v1:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1277b8.  call `completeResume`(v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuation;.completeResume:(Ljava/lang/Object;)V` @kind interface;
  #L1277be.  return @kind void;
}
procedure `boolean` `g`(`kotlinx.coroutines.sync.MutexImpl$a` v6 @kind this) @signature `Lkotlinx/coroutines/sync/MutexImpl$a;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1276e8.  call temp:= `f`(v6) @signature `Lkotlinx/coroutines/sync/MutexImpl$c;.f:()Z` @kind virtual;
  #L1276ee.  v0:= temp;
  #L1276f0.  v1:= 0I;
  #L1276f2.  if v0 != 0 then goto L1276f8;
  #L1276f6.  return v1;
  #L1276f8.  v0:= v6.`kotlinx.coroutines.sync.MutexImpl$a.g` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L1276fc.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L127700.  v3:= 0I;
  #L127702.  v4:= new `kotlinx.coroutines.sync.MutexImpl$a$a`;
  #L127706.  v5:= v6.`kotlinx.coroutines.sync.MutexImpl$a.h` @type ^`kotlinx.coroutines.sync.MutexImpl` @kind object;
  #L12770a.  call `<init>`(v4, v5, v6) @signature `Lkotlinx/coroutines/sync/MutexImpl$a$a;.<init>:(Lkotlinx/coroutines/sync/MutexImpl;Lkotlinx/coroutines/sync/MutexImpl$a;)V` @kind direct;
  #L127710.  call temp:= `tryResume`(v0, v2, v3, v4) @signature `Lkotlinx/coroutines/CancellableContinuation;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind interface;
  #L127716.  v0:= temp @kind object;
  #L127718.  if v0 == 0 then goto L12771e;
  #L12771c.  v1:= 1I;
  #L12771e.  return v1;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.sync.MutexImpl$a` v2 @kind this) @signature `Lkotlinx/coroutines/sync/MutexImpl$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L127730.  v0:= new `java.lang.StringBuilder`;
  #L127734.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12773a.  v1:= "LockCont[" @kind object;
  #L12773e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L127744.  v1:= v2.`kotlinx.coroutines.sync.MutexImpl$c.d` @type ^`java.lang.Object` @kind object;
  #L127748.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12774e.  v1:= ", " @kind object;
  #L127752.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L127758.  v1:= v2.`kotlinx.coroutines.sync.MutexImpl$a.g` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L12775c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L127762.  v1:= "] for " @kind object;
  #L127766.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12776c.  v1:= v2.`kotlinx.coroutines.sync.MutexImpl$a.h` @type ^`kotlinx.coroutines.sync.MutexImpl` @kind object;
  #L127770.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L127776.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12777c.  v0:= temp @kind object;
  #L12777e.  return v0 @kind object;
}
