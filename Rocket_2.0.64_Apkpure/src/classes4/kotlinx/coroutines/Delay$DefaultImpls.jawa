record `kotlinx.coroutines.Delay$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `delay`(`kotlinx.coroutines.Delay` v3 @kind object, `long` v4 , `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/Delay$DefaultImpls;.delay:(Lkotlinx/coroutines/Delay;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L0f09fc.  v0:= 0L;
  #L0f0a00.  v2:= lcmp(v4, v0);
  #L0f0a04.  if v2 > 0 then goto L0f0a0e;
  #L0f0a08.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f0a0c.  return v3 @kind object;
  #L0f0a0e.  v0:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L0f0a12.  call temp:= `intercepted`(v6) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L0f0a18.  v1:= temp @kind object;
  #L0f0a1a.  v2:= 1I;
  #L0f0a1c.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L0f0a22.  call `initCancellability`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L0f0a28.  call `scheduleResumeAfterDelay`(v3, v4, v0) @signature `Lkotlinx/coroutines/Delay;.scheduleResumeAfterDelay:(JLkotlinx/coroutines/CancellableContinuation;)V` @kind interface;
  #L0f0a2e.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L0f0a34.  v3:= temp @kind object;
  #L0f0a36.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f0a3c.  v4:= temp @kind object;
  #L0f0a3e.  if v3 != v4 then goto L0f0a48;
  #L0f0a42.  call `probeCoroutineSuspended`(v6) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L0f0a48.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f0a4e.  v4:= temp @kind object;
  #L0f0a50.  if v3 != v4 then goto L0f0a56;
  #L0f0a54.  return v3 @kind object;
  #L0f0a56.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f0a5a.  return v3 @kind object;
}
procedure `kotlinx.coroutines.DisposableHandle` `invokeOnTimeout`(`kotlinx.coroutines.Delay` v0 @kind object, `long` v1 , `java.lang.Runnable` v3 @kind object, `kotlin.coroutines.CoroutineContext` v4 @kind object) @signature `Lkotlinx/coroutines/Delay$DefaultImpls;.invokeOnTimeout:(Lkotlinx/coroutines/Delay;JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0f0a6c.  call temp:= `getDefaultDelay`() @signature `Lkotlinx/coroutines/DefaultExecutorKt;.getDefaultDelay:()Lkotlinx/coroutines/Delay;` @kind static;
  #L0f0a72.  v0:= temp @kind object;
  #L0f0a74.  call temp:= `invokeOnTimeout`(v0, v1, v3, v4) @signature `Lkotlinx/coroutines/Delay;.invokeOnTimeout:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/DisposableHandle;` @kind interface;
  #L0f0a7a.  v0:= temp @kind object;
  #L0f0a7c.  return v0 @kind object;
}
