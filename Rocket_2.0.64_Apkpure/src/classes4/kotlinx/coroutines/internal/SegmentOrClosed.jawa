record `kotlinx.coroutines.internal.SegmentOrClosed` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `kotlinx.coroutines.internal.SegmentOrClosed.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.SegmentOrClosed` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.<init>:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L121bbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L121bc2.  v0.`kotlinx.coroutines.internal.SegmentOrClosed.a` @type ^`java.lang.Object` := v1 @kind object;
  #L121bc6.  return @kind void;
}
procedure `kotlinx.coroutines.internal.SegmentOrClosed` `box-impl`(`java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/SegmentOrClosed;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L121ba0.  v0:= new `kotlinx.coroutines.internal.SegmentOrClosed`;
  #L121ba4.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L121baa.  return v0 @kind object;
}
procedure `java.lang.Object` `constructor-impl`(`java.lang.Object` v0 @kind object) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L121ad0.  return v0 @kind object;
}
procedure `boolean` `equals-impl`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.equals-impl:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L121a10.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.internal.SegmentOrClosed` @kind boolean;
  #L121a14.  v1:= 0I;
  #L121a16.  if v0 != 0 then goto L121a1c;
  #L121a1a.  return v1;
  #L121a1c.  v3:= (`kotlinx.coroutines.internal.SegmentOrClosed`) v3 @kind object;
  #L121a20.  call temp:= `unbox-impl`(v3) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.unbox-impl:()Ljava/lang/Object;` @kind virtual;
  #L121a26.  v3:= temp @kind object;
  #L121a28.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L121a2e.  v2:= temp;
  #L121a30.  if v2 != 0 then goto L121a36;
  #L121a34.  return v1;
  #L121a36.  v2:= 1I;
  #L121a38.  return v2;
}
procedure `boolean` `equals-impl0`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.equals-impl0:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L121a4c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L121a52.  v0:= temp;
  #L121a54.  return v0;
}
procedure `void` `getSegment$annotations`() @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.getSegment$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L121bd8.  return @kind void;
}
procedure `kotlinx.coroutines.internal.Segment` `getSegment-impl`(`java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.getSegment-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/Segment;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L121b5c.  call temp:= `access$getCLOSED$p`() @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListKt;.access$getCLOSED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L121b62.  v0:= temp @kind object;
  #L121b64.  if v1 == v0 then goto L121b78;
  #L121b68.  v0:= "null cannot be cast to non-null type S of kotlinx.coroutines.internal.SegmentOrClosed" @kind object;
  #L121b6c.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L121b72.  v1:= (`kotlinx.coroutines.internal.Segment`) v1 @kind object;
  #L121b76.  return v1 @kind object;
  #L121b78.  v1:= new `java.lang.IllegalStateException`;
  #L121b7c.  v0:= "Does not contain segment" @kind object;
  #L121b80.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L121b86.  v0:= temp @kind object;
  #L121b88.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L121b8e.  throw v1;
}
procedure `int` `hashCode-impl`(`java.lang.Object` v0 @kind object) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.hashCode-impl:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L121aac.  if v0 != 0 then goto L121ab4;
  #L121ab0.  v0:= 0I;
  #L121ab2.  goto L121abc;
  #L121ab4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L121aba.  v0:= temp;
  #L121abc.  return v0;
}
procedure `boolean` `isClosed-impl`(`java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.isClosed-impl:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L121a68.  call temp:= `access$getCLOSED$p`() @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListKt;.access$getCLOSED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L121a6e.  v0:= temp @kind object;
  #L121a70.  if v1 != v0 then goto L121a78;
  #L121a74.  v1:= 1I;
  #L121a76.  goto L121a7a;
  #L121a78.  v1:= 0I;
  #L121a7a.  return v1;
}
procedure `java.lang.String` `toString-impl`(`java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.toString-impl:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L121b1c.  v0:= new `java.lang.StringBuilder`;
  #L121b20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L121b26.  v1:= "SegmentOrClosed(value=" @kind object;
  #L121b2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L121b30.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L121b36.  v2:= 41I;
  #L121b3a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L121b40.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L121b46.  v2:= temp @kind object;
  #L121b48.  return v2 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.internal.SegmentOrClosed` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1219f0.  v0:= v1.`kotlinx.coroutines.internal.SegmentOrClosed.a` @type ^`java.lang.Object` @kind object;
  #L1219f4.  call temp:= `equals-impl`(v0, v2) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.equals-impl:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1219fa.  v2:= temp;
  #L1219fc.  return v2;
}
procedure `int` `hashCode`(`kotlinx.coroutines.internal.SegmentOrClosed` v1 @kind this) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L121a8c.  v0:= v1.`kotlinx.coroutines.internal.SegmentOrClosed.a` @type ^`java.lang.Object` @kind object;
  #L121a90.  call temp:= `hashCode-impl`(v0) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.hashCode-impl:(Ljava/lang/Object;)I` @kind static;
  #L121a96.  v0:= temp;
  #L121a98.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.SegmentOrClosed` v1 @kind this) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L121afc.  v0:= v1.`kotlinx.coroutines.internal.SegmentOrClosed.a` @type ^`java.lang.Object` @kind object;
  #L121b00.  call temp:= `toString-impl`(v0) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.toString-impl:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L121b06.  v0:= temp @kind object;
  #L121b08.  return v0 @kind object;
}
procedure `java.lang.Object` `unbox-impl`(`kotlinx.coroutines.internal.SegmentOrClosed` v1 @kind this) @signature `Lkotlinx/coroutines/internal/SegmentOrClosed;.unbox-impl:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L121ae4.  v0:= v1.`kotlinx.coroutines.internal.SegmentOrClosed.a` @type ^`java.lang.Object` @kind object;
  #L121ae8.  return v0 @kind object;
}
