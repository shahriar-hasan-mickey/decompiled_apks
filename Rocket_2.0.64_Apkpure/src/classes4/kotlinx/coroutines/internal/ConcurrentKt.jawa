record `kotlinx.coroutines.internal.ConcurrentKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.reflect.Method` `@@kotlinx.coroutines.internal.ConcurrentKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/ConcurrentKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L11d4a0.  v0:= constclass @type ^`java.util.concurrent.ScheduledThreadPoolExecutor` @kind object;
  #L11d4a4.  v1:= "setRemoveOnCancelPolicy" @kind object;
  #L11d4a8.  v2:= 1I;
  #L11d4aa.  v2:= new `java.lang.Class`[v2];
  #L11d4ae.  v3:= 0I;
  #L11d4b0.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L11d4b4.  v2[v3]:= v4 @kind object;
  #L11d4b8.  call temp:= `getMethod`(v0, v1, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L11d4be.  v0:= temp @kind object;
  #L11d4c0.  goto L11d4c4;
  #L11d4c2.  v0:= 0I;
  #L11d4c4.  `@@kotlinx.coroutines.internal.ConcurrentKt.a` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L11d4c8.  return @kind void;
  catch `java.lang.Throwable` @[L11d4a0..L11d4c0] goto L11d4c2;
}
procedure `void` `ReentrantLock$annotations`() @signature `Lkotlinx/coroutines/internal/ConcurrentKt;.ReentrantLock$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L11d4e8.  return @kind void;
}
procedure `java.util.Set` `identitySet`(`int` v1 ) @signature `Lkotlinx/coroutines/internal/ConcurrentKt;.identitySet:(I)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L11d47c.  v0:= new `java.util.IdentityHashMap`;
  #L11d480.  call `<init>`(v0, v1) @signature `Ljava/util/IdentityHashMap;.<init>:(I)V` @kind direct;
  #L11d486.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L11d48c.  v1:= temp @kind object;
  #L11d48e.  return v1 @kind object;
}
procedure `boolean` `removeFutureOnCancel`(`java.util.concurrent.Executor` v5 @kind object) @signature `Lkotlinx/coroutines/internal/ConcurrentKt;.removeFutureOnCancel:(Ljava/util/concurrent/Executor;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L11d3b0.  v0:= 0I;
  #L11d3b2.  v1:= instanceof @variable v5 @type ^`java.util.concurrent.ScheduledThreadPoolExecutor` @kind boolean;
  #L11d3b6.  if v1 == 0 then goto L11d3c0;
  #L11d3ba.  v5:= (`java.util.concurrent.ScheduledThreadPoolExecutor`) v5 @kind object;
  #L11d3be.  goto L11d3c2;
  #L11d3c0.  v5:= 0I;
  #L11d3c2.  if v5 != 0 then goto L11d3c8;
  #L11d3c6.  return v0;
  #L11d3c8.  v1:= `@@kotlinx.coroutines.internal.ConcurrentKt.a` @type ^`java.lang.reflect.Method` @kind object;
  #L11d3cc.  if v1 != 0 then goto L11d3d2;
  #L11d3d0.  return v0;
  #L11d3d2.  v2:= 1I;
  #L11d3d4.  v3:= new `java.lang.Object`[v2];
  #L11d3d8.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L11d3dc.  v3[v0]:= v4 @kind object;
  #L11d3e0.  call temp:= `invoke`(v1, v5, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L11d3e6.  return v2;
  #L11d3e8.  return v0;
  catch `java.lang.Throwable` @[L11d3b2..L11d3e6] goto L11d3e8;
}
procedure `java.util.List` `subscriberList`() @signature `Lkotlinx/coroutines/internal/ConcurrentKt;.subscriberList:()Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L11d460.  v0:= new `java.util.concurrent.CopyOnWriteArrayList`;
  #L11d464.  call `<init>`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V` @kind direct;
  #L11d46a.  return v0 @kind object;
}
procedure `java.lang.Object` `withLock`(`java.util.concurrent.locks.ReentrantLock` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ConcurrentKt;.withLock:(Ljava/util/concurrent/locks/ReentrantLock;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L11d408.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L11d40e.  v0:= 1I;
  #L11d410.  call temp:= `invoke`(v2) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L11d416.  v2:= temp @kind object;
  #L11d418.  call `finallyStart`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L11d41e.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L11d424.  call `finallyEnd`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L11d42a.  return v2 @kind object;
  #L11d42c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11d42e.  call `finallyStart`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L11d434.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L11d43a.  call `finallyEnd`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L11d440.  throw v2;
  catch `java.lang.Throwable` @[L11d410..L11d418] goto L11d42c;
}
