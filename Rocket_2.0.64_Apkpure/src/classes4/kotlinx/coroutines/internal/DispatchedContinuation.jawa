record `kotlinx.coroutines.internal.DispatchedContinuation` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.DispatchedTask` @kind class, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface, `kotlin.coroutines.Continuation` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.internal.DispatchedContinuation._state` @AccessFlag PUBLIC;
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.internal.DispatchedContinuation.continuation` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.CoroutineDispatcher` `kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L11de4c.  v0:= constclass @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind object;
  #L11de50.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L11de54.  v2:= "_reusableCancellableContinuation" @kind object;
  #L11de58.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L11de5e.  v0:= temp @kind object;
  #L11de60.  `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L11de64.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L11de78.  v0:= -1I;
  #L11de7a.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/DispatchedTask;.<init>:(I)V` @kind direct;
  #L11de80.  v1.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` := v2 @kind object;
  #L11de84.  v1.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` := v3 @kind object;
  #L11de88.  call temp:= `access$getUNDEFINED$p`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.access$getUNDEFINED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L11de8e.  v2:= temp @kind object;
  #L11de90.  v1.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v2 @kind object;
  #L11de94.  call temp:= `getContext`(v1) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L11de9a.  v2:= temp @kind object;
  #L11de9c.  call temp:= `threadContextElements`(v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.threadContextElements:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @kind static;
  #L11dea2.  v2:= temp @kind object;
  #L11dea4.  v1.`kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @type ^`java.lang.Object` := v2 @kind object;
  #L11dea8.  v2:= 0I;
  #L11deaa.  v1.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` := v2 @kind object;
  #L11deae.  return @kind void;
}
procedure `kotlinx.coroutines.CancellableContinuationImpl` `a`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.a:()Lkotlinx/coroutines/CancellableContinuationImpl;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L11de24.  v0:= v2.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L11de28.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancellableContinuationImpl` @kind boolean;
  #L11de2c.  if v1 == 0 then goto L11de36;
  #L11de30.  v0:= (`kotlinx.coroutines.CancellableContinuationImpl`) v0 @kind object;
  #L11de34.  goto L11de38;
  #L11de36.  v0:= 0I;
  #L11de38.  return v0 @kind object;
}
procedure `void` `get_state$kotlinx_coroutines_core$annotations`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.get_state$kotlinx_coroutines_core$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L11df30.  return @kind void;
}
procedure `void` `awaitReusability`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.awaitReusability:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L11dec0.  v0:= v2.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L11dec4.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11dec8.  if v0 == v1 then goto L11dec0;
  #L11decc.  return @kind void;
}
procedure `void` `cancelCompletedResult$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11dee0.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.CompletedWithCancellation` @kind boolean;
  #L11dee4.  if v0 == 0 then goto L11def6;
  #L11dee8.  v2:= (`kotlinx.coroutines.CompletedWithCancellation`) v2 @kind object;
  #L11deec.  v2:= v2.`kotlinx.coroutines.CompletedWithCancellation.onCancellation` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L11def0.  call temp:= `invoke`(v2, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L11def6.  return @kind void;
}
procedure `kotlinx.coroutines.CancellableContinuationImpl` `claimReusableCancellableContinuation`(`kotlinx.coroutines.internal.DispatchedContinuation` v3 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.claimReusableCancellableContinuation:()Lkotlinx/coroutines/CancellableContinuationImpl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L11dda8.  v0:= v3.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L11ddac.  if v0 != 0 then goto L11ddbc;
  #L11ddb0.  v0:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11ddb4.  v3.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` := v0 @kind object;
  #L11ddb8.  v0:= 0I;
  #L11ddba.  return v0 @kind object;
  #L11ddbc.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancellableContinuationImpl` @kind boolean;
  #L11ddc0.  if v1 == 0 then goto L11ddde;
  #L11ddc4.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L11ddc8.  v2:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11ddcc.  call temp:= `a`(v1, v3, v0, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11ddd2.  v1:= temp;
  #L11ddd4.  if v1 == 0 then goto L11dda8;
  #L11ddd8.  v0:= (`kotlinx.coroutines.CancellableContinuationImpl`) v0 @kind object;
  #L11dddc.  return v0 @kind object;
  #L11ddde.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11dde2.  if v0 != v1 then goto L11dde8;
  #L11dde6.  goto L11dda8;
  #L11dde8.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L11ddec.  if v1 == 0 then goto L11ddf2;
  #L11ddf0.  goto L11dda8;
  #L11ddf2.  v1:= new `java.lang.IllegalStateException`;
  #L11ddf6.  v2:= "Inconsistent state " @kind object;
  #L11ddfa.  call temp:= `stringPlus`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L11de00.  v0:= temp @kind object;
  #L11de02.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L11de08.  v0:= temp @kind object;
  #L11de0a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11de10.  throw v1;
}
procedure `void` `dispatchYield$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.DispatchedContinuation` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.dispatchYield$kotlinx_coroutines_core:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L11df08.  v0.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v2 @kind object;
  #L11df0c.  v2:= 1I;
  #L11df0e.  v0.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v2;
  #L11df12.  v2:= v0.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L11df16.  call `dispatchYield`(v2, v1, v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatchYield:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L11df1c.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L11dd80.  v0:= v2.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11dd84.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L11dd88.  if v1 == 0 then goto L11dd92;
  #L11dd8c.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L11dd90.  goto L11dd94;
  #L11dd92.  v0:= 0I;
  #L11dd94.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11dd60.  v0:= v1.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11dd64.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L11dd6a.  v0:= temp @kind object;
  #L11dd6c.  return v0 @kind object;
}
procedure `kotlin.coroutines.Continuation` `getDelegate$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.DispatchedContinuation` v0 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getDelegate$kotlinx_coroutines_core:()Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC {
    temp;

  #L11dd4c.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11dc50.  v0:= 0I;
  #L11dc52.  return v0 @kind object;
}
procedure `boolean` `isReusable`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.isReusable:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L11db4c.  v0:= v1.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L11db50.  if v0 == 0 then goto L11db58;
  #L11db54.  v0:= 1I;
  #L11db56.  goto L11db5a;
  #L11db58.  v0:= 0I;
  #L11db5a.  return v0;
}
procedure `boolean` `postponeCancellation`(`kotlinx.coroutines.internal.DispatchedContinuation` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.postponeCancellation:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L11db6c.  v0:= v4.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L11db70.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11db74.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11db7a.  v2:= temp;
  #L11db7c.  v3:= 1I;
  #L11db7e.  if v2 == 0 then goto L11db94;
  #L11db82.  v0:= `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L11db86.  call temp:= `a`(v0, v4, v1, v5) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11db8c.  v0:= temp;
  #L11db8e.  if v0 == 0 then goto L11db6c;
  #L11db92.  return v3;
  #L11db94.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L11db98.  if v1 == 0 then goto L11db9e;
  #L11db9c.  return v3;
  #L11db9e.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L11dba2.  v2:= 0I;
  #L11dba4.  call temp:= `a`(v1, v4, v0, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11dbaa.  v0:= temp;
  #L11dbac.  if v0 == 0 then goto L11db6c;
  #L11dbb0.  v5:= 0I;
  #L11dbb2.  return v5;
}
procedure `void` `release`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.release:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L11df44.  call `awaitReusability`(v1) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.awaitReusability:()V` @kind virtual;
  #L11df4a.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.a:()Lkotlinx/coroutines/CancellableContinuationImpl;` @kind direct;
  #L11df50.  v0:= temp @kind object;
  #L11df52.  if v0 != 0 then goto L11df58;
  #L11df56.  goto L11df5e;
  #L11df58.  call `detachChild$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.detachChild$kotlinx_coroutines_core:()V` @kind virtual;
  #L11df5e.  return @kind void;
}
procedure `void` `resumeCancellableWith`(`kotlinx.coroutines.internal.DispatchedContinuation` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.jvm.functions.Function1` v8 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.resumeCancellableWith:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L11df70.  call temp:= `toState`(v7, v8) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind static;
  #L11df76.  v8:= temp @kind object;
  #L11df78.  v0:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L11df7c.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L11df82.  v1:= temp @kind object;
  #L11df84.  call temp:= `isDispatchNeeded`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.isDispatchNeeded:(Lkotlin/coroutines/CoroutineContext;)Z` @kind virtual;
  #L11df8a.  v0:= temp;
  #L11df8c.  v1:= 1I;
  #L11df8e.  if v0 == 0 then goto L11dfb0;
  #L11df92.  v6.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v8 @kind object;
  #L11df96.  v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v1;
  #L11df9a.  v7:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L11df9e.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L11dfa4.  v8:= temp @kind object;
  #L11dfa6.  call `dispatch`(v7, v8, v6) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L11dfac.  goto L11e0ee;
  #L11dfb0.  v0:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L11dfb4.  call temp:= `getEventLoop$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.getEventLoop$kotlinx_coroutines_core:()Lkotlinx/coroutines/EventLoop;` @kind virtual;
  #L11dfba.  v0:= temp @kind object;
  #L11dfbc.  call temp:= `isUnconfinedLoopActive`(v0) @signature `Lkotlinx/coroutines/EventLoop;.isUnconfinedLoopActive:()Z` @kind virtual;
  #L11dfc2.  v2:= temp;
  #L11dfc4.  if v2 == 0 then goto L11dfda;
  #L11dfc8.  v6.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v8 @kind object;
  #L11dfcc.  v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v1;
  #L11dfd0.  call `dispatchUnconfined`(v0, v6) @signature `Lkotlinx/coroutines/EventLoop;.dispatchUnconfined:(Lkotlinx/coroutines/DispatchedTask;)V` @kind virtual;
  #L11dfd6.  goto L11e0ee;
  #L11dfda.  call `incrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/EventLoop;.incrementUseCount:(Z)V` @kind virtual;
  #L11dfe0.  v2:= 0I;
  #L11dfe2.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L11dfe8.  v3:= temp @kind object;
  #L11dfea.  v4:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L11dfee.  call temp:= `get`(v3, v4) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L11dff4.  v3:= temp @kind object;
  #L11dff6.  v3:= (`kotlinx.coroutines.Job`) v3 @kind object;
  #L11dffa.  if v3 == 0 then goto L11e036;
  #L11dffe.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L11e004.  v4:= temp;
  #L11e006.  if v4 != 0 then goto L11e036;
  #L11e00a.  call temp:= `getCancellationException`(v3) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L11e010.  v3:= temp @kind object;
  #L11e012.  call `cancelCompletedResult$kotlinx_coroutines_core`(v6, v8, v3) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L11e018.  v8:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L11e01c.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L11e022.  v8:= temp @kind object;
  #L11e024.  call temp:= `constructor-impl`(v8) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11e02a.  v8:= temp @kind object;
  #L11e02c.  call `resumeWith`(v6, v8) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L11e032.  v8:= 1I;
  #L11e034.  goto L11e038;
  #L11e036.  v8:= 0I;
  #L11e038.  if v8 != 0 then goto L11e0c0;
  #L11e03c.  v8:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11e040.  v3:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @type ^`java.lang.Object` @kind object;
  #L11e044.  call temp:= `getContext`(v8) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L11e04a.  v4:= temp @kind object;
  #L11e04c.  call temp:= `updateThreadContext`(v4, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11e052.  v3:= temp @kind object;
  #L11e054.  v5:= `@@kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11e058.  if v3 == v5 then goto L11e066;
  #L11e05c.  call temp:= `updateUndispatchedCompletion`(v8, v4, v3) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L11e062.  v8:= temp @kind object;
  #L11e064.  goto L11e068;
  #L11e066.  v8:= v2 @kind object;
  #L11e068.  v5:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11e06c.  call `resumeWith`(v5, v7) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L11e072.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11e076.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L11e07c.  if v8 == 0 then goto L11e08c;
  #L11e080.  call temp:= `clearThreadContext`(v8) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L11e086.  v7:= temp;
  #L11e088.  if v7 == 0 then goto L11e092;
  #L11e08c.  call `restoreThreadContext`(v4, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L11e092.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L11e098.  goto L11e0c0;
  #L11e09a.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11e09c.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L11e0a2.  if v8 == 0 then goto L11e0b2;
  #L11e0a6.  call temp:= `clearThreadContext`(v8) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L11e0ac.  v8:= temp;
  #L11e0ae.  if v8 == 0 then goto L11e0b8;
  #L11e0b2.  call `restoreThreadContext`(v4, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L11e0b8.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L11e0be.  throw v7;
  #L11e0c0.  call temp:= `processUnconfinedEvent`(v0) @signature `Lkotlinx/coroutines/EventLoop;.processUnconfinedEvent:()Z` @kind virtual;
  #L11e0c6.  v7:= temp;
  #L11e0c8.  if v7 != 0 then goto L11e0c0;
  #L11e0cc.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L11e0d2.  goto L11e0e2;
  #L11e0d4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11e0d6.  call `handleFatalException`(v6, v7, v2) @signature `Lkotlinx/coroutines/DispatchedTask;.handleFatalException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L11e0dc.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L11e0e2.  call `decrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L11e0e8.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L11e0ee.  return @kind void;
  #L11e0f0.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11e0f2.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L11e0f8.  call `decrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L11e0fe.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L11e104.  throw v7;
  catch `java.lang.Throwable` @[L11dfe2..L11e064] goto L11e0d4;
  catch `java.lang.Throwable` @[L11e068..L11e076] goto L11e09a;
  catch `java.lang.Throwable` @[L11e076..L11e0c8] goto L11e0d4;
  catch `java.lang.Throwable` @[L11e0d6..L11e0dc] goto L11e0f0;
}
procedure `boolean` `resumeCancelled`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.resumeCancelled:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L11dbc4.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L11dbca.  v0:= temp @kind object;
  #L11dbcc.  v1:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L11dbd0.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L11dbd6.  v0:= temp @kind object;
  #L11dbd8.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L11dbdc.  if v0 == 0 then goto L11dc18;
  #L11dbe0.  call temp:= `isActive`(v0) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L11dbe6.  v1:= temp;
  #L11dbe8.  if v1 != 0 then goto L11dc18;
  #L11dbec.  call temp:= `getCancellationException`(v0) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L11dbf2.  v0:= temp @kind object;
  #L11dbf4.  call `cancelCompletedResult$kotlinx_coroutines_core`(v2, v3, v0) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L11dbfa.  v3:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L11dbfe.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L11dc04.  v3:= temp @kind object;
  #L11dc06.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11dc0c.  v3:= temp @kind object;
  #L11dc0e.  call `resumeWith`(v2, v3) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L11dc14.  v3:= 1I;
  #L11dc16.  return v3;
  #L11dc18.  v3:= 0I;
  #L11dc1a.  return v3;
}
procedure `void` `resumeUndispatchedWith`(`kotlinx.coroutines.internal.DispatchedContinuation` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.resumeUndispatchedWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L11e144.  v0:= v5.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11e148.  v1:= v5.`kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @type ^`java.lang.Object` @kind object;
  #L11e14c.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L11e152.  v2:= temp @kind object;
  #L11e154.  call temp:= `updateThreadContext`(v2, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11e15a.  v1:= temp @kind object;
  #L11e15c.  v3:= `@@kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11e160.  if v1 == v3 then goto L11e16e;
  #L11e164.  call temp:= `updateUndispatchedCompletion`(v0, v2, v1) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L11e16a.  v0:= temp @kind object;
  #L11e16c.  goto L11e170;
  #L11e16e.  v0:= 0I;
  #L11e170.  v3:= 1I;
  #L11e172.  v4:= v5.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11e176.  call `resumeWith`(v4, v6) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L11e17c.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11e180.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L11e186.  if v0 == 0 then goto L11e196;
  #L11e18a.  call temp:= `clearThreadContext`(v0) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L11e190.  v6:= temp;
  #L11e192.  if v6 == 0 then goto L11e19c;
  #L11e196.  call `restoreThreadContext`(v2, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L11e19c.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L11e1a2.  return @kind void;
  #L11e1a4.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11e1a6.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L11e1ac.  if v0 == 0 then goto L11e1bc;
  #L11e1b0.  call temp:= `clearThreadContext`(v0) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L11e1b6.  v0:= temp;
  #L11e1b8.  if v0 == 0 then goto L11e1c2;
  #L11e1bc.  call `restoreThreadContext`(v2, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L11e1c2.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L11e1c8.  throw v6;
  catch `java.lang.Throwable` @[L11e172..L11e180] goto L11e1a4;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.internal.DispatchedContinuation` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L11e1e8.  v0:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11e1ec.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L11e1f2.  v0:= temp @kind object;
  #L11e1f4.  v1:= 0I;
  #L11e1f6.  v2:= 1I;
  #L11e1f8.  call temp:= `toState$default`(v7, v1, v2, v1) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState$default:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11e1fe.  v3:= temp @kind object;
  #L11e200.  v4:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L11e204.  call temp:= `isDispatchNeeded`(v4, v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.isDispatchNeeded:(Lkotlin/coroutines/CoroutineContext;)Z` @kind virtual;
  #L11e20a.  v4:= temp;
  #L11e20c.  v5:= 0I;
  #L11e20e.  if v4 == 0 then goto L11e226;
  #L11e212.  v6.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v3 @kind object;
  #L11e216.  v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v5;
  #L11e21a.  v7:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L11e21e.  call `dispatch`(v7, v0, v6) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L11e224.  goto L11e2a2;
  #L11e226.  v0:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L11e22a.  call temp:= `getEventLoop$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.getEventLoop$kotlinx_coroutines_core:()Lkotlinx/coroutines/EventLoop;` @kind virtual;
  #L11e230.  v0:= temp @kind object;
  #L11e232.  call temp:= `isUnconfinedLoopActive`(v0) @signature `Lkotlinx/coroutines/EventLoop;.isUnconfinedLoopActive:()Z` @kind virtual;
  #L11e238.  v4:= temp;
  #L11e23a.  if v4 == 0 then goto L11e24e;
  #L11e23e.  v6.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v3 @kind object;
  #L11e242.  v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v5;
  #L11e246.  call `dispatchUnconfined`(v0, v6) @signature `Lkotlinx/coroutines/EventLoop;.dispatchUnconfined:(Lkotlinx/coroutines/DispatchedTask;)V` @kind virtual;
  #L11e24c.  goto L11e2a2;
  #L11e24e.  call `incrementUseCount`(v0, v2) @signature `Lkotlinx/coroutines/EventLoop;.incrementUseCount:(Z)V` @kind virtual;
  #L11e254.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L11e25a.  v3:= temp @kind object;
  #L11e25c.  v4:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @type ^`java.lang.Object` @kind object;
  #L11e260.  call temp:= `updateThreadContext`(v3, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11e266.  v4:= temp @kind object;
  #L11e268.  v5:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11e26c.  call `resumeWith`(v5, v7) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L11e272.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11e276.  call `restoreThreadContext`(v3, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L11e27c.  call temp:= `processUnconfinedEvent`(v0) @signature `Lkotlinx/coroutines/EventLoop;.processUnconfinedEvent:()Z` @kind virtual;
  #L11e282.  v7:= temp;
  #L11e284.  if v7 != 0 then goto L11e27c;
  #L11e288.  goto L11e29c;
  #L11e28a.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11e28c.  call `restoreThreadContext`(v3, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L11e292.  throw v7;
  #L11e294.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11e296.  call `handleFatalException`(v6, v7, v1) @signature `Lkotlinx/coroutines/DispatchedTask;.handleFatalException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L11e29c.  call `decrementUseCount`(v0, v2) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L11e2a2.  return @kind void;
  #L11e2a4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11e2a6.  call `decrementUseCount`(v0, v2) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L11e2ac.  throw v7;
  catch `java.lang.Throwable` @[L11e254..L11e268] goto L11e294;
  catch `java.lang.Throwable` @[L11e268..L11e276] goto L11e28a;
  catch `java.lang.Throwable` @[L11e276..L11e294] goto L11e294;
  catch `java.lang.Throwable` @[L11e296..L11e29c] goto L11e2a4;
}
procedure `java.lang.Object` `takeState$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.takeState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L11dc2c.  v0:= v2.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` @kind object;
  #L11dc30.  call temp:= `access$getUNDEFINED$p`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.access$getUNDEFINED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L11dc36.  v1:= temp @kind object;
  #L11dc38.  v2.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v1 @kind object;
  #L11dc3c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L11dc64.  v0:= new `java.lang.StringBuilder`;
  #L11dc68.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L11dc6e.  v1:= "DispatchedContinuation[" @kind object;
  #L11dc72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11dc78.  v1:= v2.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L11dc7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11dc82.  v1:= ", " @kind object;
  #L11dc86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11dc8c.  v1:= v2.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11dc90.  call temp:= `toDebugString`(v1) @signature `Lkotlinx/coroutines/DebugStringsKt;.toDebugString:(Lkotlin/coroutines/Continuation;)Ljava/lang/String;` @kind static;
  #L11dc96.  v1:= temp @kind object;
  #L11dc98.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11dc9e.  v1:= 93I;
  #L11dca2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L11dca8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L11dcae.  v0:= temp @kind object;
  #L11dcb0.  return v0 @kind object;
}
procedure `java.lang.Throwable` `tryReleaseClaimedContinuation`(`kotlinx.coroutines.internal.DispatchedContinuation` v3 @kind this, `kotlinx.coroutines.CancellableContinuation` v4 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.tryReleaseClaimedContinuation:(Lkotlinx/coroutines/CancellableContinuation;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L11dcc4.  v0:= v3.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L11dcc8.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11dccc.  v2:= 0I;
  #L11dcce.  if v0 != v1 then goto L11dce4;
  #L11dcd2.  v0:= `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L11dcd6.  call temp:= `a`(v0, v3, v1, v4) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11dcdc.  v0:= temp;
  #L11dcde.  if v0 == 0 then goto L11dcc4;
  #L11dce2.  return v2 @kind object;
  #L11dce4.  v4:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L11dce8.  if v4 == 0 then goto L11dd1a;
  #L11dcec.  v4:= `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L11dcf0.  call temp:= `a`(v4, v3, v0, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11dcf6.  v4:= temp;
  #L11dcf8.  if v4 == 0 then goto L11dd02;
  #L11dcfc.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L11dd00.  return v0 @kind object;
  #L11dd02.  v4:= new `java.lang.IllegalArgumentException`;
  #L11dd06.  v0:= "Failed requirement." @kind object;
  #L11dd0a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L11dd10.  v0:= temp @kind object;
  #L11dd12.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11dd18.  throw v4;
  #L11dd1a.  v4:= new `java.lang.IllegalStateException`;
  #L11dd1e.  v1:= "Inconsistent state " @kind object;
  #L11dd22.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L11dd28.  v0:= temp @kind object;
  #L11dd2a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L11dd30.  v0:= temp @kind object;
  #L11dd32.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11dd38.  throw v4;
}
