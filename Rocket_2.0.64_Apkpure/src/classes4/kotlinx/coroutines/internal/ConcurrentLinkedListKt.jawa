record `kotlinx.coroutines.internal.ConcurrentLinkedListKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.internal.ConcurrentLinkedListKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L11d554.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L11d558.  v1:= "CLOSED" @kind object;
  #L11d55c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11d562.  `@@kotlinx.coroutines.internal.ConcurrentLinkedListKt.a` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L11d566.  return @kind void;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getCLOSED$p`() @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListKt;.access$getCLOSED$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L11d53c.  v0:= `@@kotlinx.coroutines.internal.ConcurrentLinkedListKt.a` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11d540.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.ConcurrentLinkedListNode` `close`(`kotlinx.coroutines.internal.ConcurrentLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListKt;.close:(Lkotlinx/coroutines/internal/ConcurrentLinkedListNode;)Lkotlinx/coroutines/internal/ConcurrentLinkedListNode;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L11d4fc.  call temp:= `access$getNextOrClosed`(v2) @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListNode;.access$getNextOrClosed:(Lkotlinx/coroutines/internal/ConcurrentLinkedListNode;)Ljava/lang/Object;` @kind static;
  #L11d502.  v0:= temp @kind object;
  #L11d504.  call temp:= `access$getCLOSED$p`() @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListKt;.access$getCLOSED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L11d50a.  v1:= temp @kind object;
  #L11d50c.  if v0 != v1 then goto L11d512;
  #L11d510.  return v2 @kind object;
  #L11d512.  v0:= (`kotlinx.coroutines.internal.ConcurrentLinkedListNode`) v0 @kind object;
  #L11d516.  if v0 != 0 then goto L11d528;
  #L11d51a.  call temp:= `markAsClosed`(v2) @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListNode;.markAsClosed:()Z` @kind virtual;
  #L11d520.  v0:= temp;
  #L11d522.  if v0 == 0 then goto L11d4fc;
  #L11d526.  return v2 @kind object;
  #L11d528.  v2:= v0 @kind object;
  #L11d52a.  goto L11d4fc;
}
