record `kotlinx.coroutines.internal.e` @kind class @AccessFlag FINAL {
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.internal.e.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object`[] `kotlinx.coroutines.internal.e.b` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.ThreadContextElement`[] `kotlinx.coroutines.internal.e.c` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.internal.e.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.e` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/internal/e;.<init>:(Lkotlin/coroutines/CoroutineContext;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1231d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1231da.  v0.`kotlinx.coroutines.internal.e.a` @type ^`kotlin.coroutines.CoroutineContext` := v1 @kind object;
  #L1231de.  v1:= new `java.lang.Object`[v2];
  #L1231e2.  v0.`kotlinx.coroutines.internal.e.b` @type ^`java.lang.Object`[] := v1 @kind object;
  #L1231e6.  v1:= new `kotlinx.coroutines.ThreadContextElement`[v2];
  #L1231ea.  v0.`kotlinx.coroutines.internal.e.c` @type ^`kotlinx.coroutines.ThreadContextElement`[] := v1 @kind object;
  #L1231ee.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.internal.e` v2 @kind this, `kotlinx.coroutines.ThreadContextElement` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/e;.a:(Lkotlinx/coroutines/ThreadContextElement;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L123200.  v0:= v2.`kotlinx.coroutines.internal.e.b` @type ^`java.lang.Object`[] @kind object;
  #L123204.  v1:= v2.`kotlinx.coroutines.internal.e.d` @type ^`int`;
  #L123208.  v0[v1]:= v4 @kind object;
  #L12320c.  v4:= v2.`kotlinx.coroutines.internal.e.c` @type ^`kotlinx.coroutines.ThreadContextElement`[] @kind object;
  #L123210.  v0:= v1 + 1;
  #L123214.  v2.`kotlinx.coroutines.internal.e.d` @type ^`int` := v0;
  #L123218.  v4[v1]:= v3 @kind object;
  #L12321c.  return @kind void;
}
procedure `void` `b`(`kotlinx.coroutines.internal.e` v4 @kind this, `kotlin.coroutines.CoroutineContext` v5 @kind object) @signature `Lkotlinx/coroutines/internal/e;.b:(Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L123230.  v0:= v4.`kotlinx.coroutines.internal.e.c` @type ^`kotlinx.coroutines.ThreadContextElement`[] @kind object;
  #L123234.  v0:= length @variable v0;
  #L123236.  v0:= v0 + -1;
  #L12323a.  if v0 < 0 then goto L123268;
  #L12323e.  v1:= v0 + -1;
  #L123242.  v2:= v4.`kotlinx.coroutines.internal.e.c` @type ^`kotlinx.coroutines.ThreadContextElement`[] @kind object;
  #L123246.  v2:= v2[v0] @kind object;
  #L12324a.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L123250.  v3:= v4.`kotlinx.coroutines.internal.e.b` @type ^`java.lang.Object`[] @kind object;
  #L123254.  v0:= v3[v0] @kind object;
  #L123258.  call `restoreThreadContext`(v2, v5, v0) @signature `Lkotlinx/coroutines/ThreadContextElement;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind interface;
  #L12325e.  if v1 >= 0 then goto L123264;
  #L123262.  goto L123268;
  #L123264.  v0:= v1;
  #L123266.  goto L12323e;
  #L123268.  return @kind void;
}
