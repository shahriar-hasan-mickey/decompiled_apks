record `kotlinx.coroutines.internal.ClassValueCtorCache$cache$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.ClassValue` @kind class {
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.ClassValueCtorCache$cache$1` v0 @kind this) @signature `Lkotlinx/coroutines/internal/ClassValueCtorCache$cache$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L11d32c.  call `<init>`(v0) @signature `Ljava/lang/ClassValue;.<init>:()V` @kind direct;
  #L11d332.  return @kind void;
}
procedure `java.lang.Object` `computeValue`(`kotlinx.coroutines.internal.ClassValueCtorCache$cache$1` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lkotlinx/coroutines/internal/ClassValueCtorCache$cache$1;.computeValue:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L11d2ec.  call temp:= `computeValue`(v0, v1) @signature `Lkotlinx/coroutines/internal/ClassValueCtorCache$cache$1;.computeValue:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @kind virtual;
  #L11d2f2.  v1:= temp @kind object;
  #L11d2f4.  return v1 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `computeValue`(`kotlinx.coroutines.internal.ClassValueCtorCache$cache$1` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ClassValueCtorCache$cache$1;.computeValue:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L11d308.  v0:= "null cannot be cast to non-null type java.lang.Class<out kotlin.Throwable>" @kind object;
  #L11d30c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L11d312.  call temp:= `access$createConstructor`(v2) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.access$createConstructor:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L11d318.  v2:= temp @kind object;
  #L11d31a.  return v2 @kind object;
}
