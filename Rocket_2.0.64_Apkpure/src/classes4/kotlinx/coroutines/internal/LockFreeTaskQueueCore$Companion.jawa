record `kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion` v0 @kind this) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L120858.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12085e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L120870.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore$Companion;.<init>:()V` @kind direct;
  #L120876.  return @kind void;
}
procedure `int` `addFailReason`(`kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion` v3 @kind this, `long` v4 ) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore$Companion;.addFailReason:(J)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L120770.  v0:= 2305843009213693952L;
  #L120774.  v4:= v4 ^& v0 @kind long;
  #L120776.  v0:= 0L;
  #L12077a.  v2:= lcmp(v4, v0);
  #L12077e.  if v2 == 0 then goto L120786;
  #L120782.  v4:= 2I;
  #L120784.  goto L120788;
  #L120786.  v4:= 1I;
  #L120788.  return v4;
}
procedure `long` `updateHead`(`kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore$Companion;.updateHead:(JI)J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1207e8.  v0:= 1073741823L;
  #L1207ee.  call temp:= `wo`(v2, v3, v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore$Companion;.wo:(JJ)J` @kind virtual;
  #L1207f4.  v3:= temp @kind wide;
  #L1207f6.  v0:= (`long`) v5 @kind i2l;
  #L1207f8.  v5:= 0I;
  #L1207fa.  v0:= v0 ^< v5 @kind long;
  #L1207fc.  v3:= v3 ^| v0 @kind long;
  #L1207fe.  return v3 @kind wide;
}
procedure `long` `updateTail`(`kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore$Companion;.updateTail:(JI)J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L120810.  v0:= 1152921503533105152L;
  #L12081a.  call temp:= `wo`(v2, v3, v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore$Companion;.wo:(JJ)J` @kind virtual;
  #L120820.  v3:= temp @kind wide;
  #L120822.  v0:= (`long`) v5 @kind i2l;
  #L120824.  v5:= 30I;
  #L120828.  v0:= v0 ^< v5 @kind long;
  #L12082a.  v3:= v3 ^| v0 @kind long;
  #L12082c.  return v3 @kind wide;
}
procedure `java.lang.Object` `withState`(`kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion` v4 @kind this, `long` v5 , `kotlin.jvm.functions.Function2` v7 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore$Companion;.withState:(JLkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12079c.  v0:= 1073741823L;
  #L1207a2.  v0:= v0 ^& v5 @kind long;
  #L1207a4.  v2:= 0I;
  #L1207a6.  v0:= v0 ^> v2 @kind long;
  #L1207a8.  v1:= (`int`) v0 @kind l2i;
  #L1207aa.  v2:= 1152921503533105152L;
  #L1207b4.  v5:= v5 ^& v2 @kind long;
  #L1207b6.  v0:= 30I;
  #L1207ba.  v5:= v5 ^> v0 @kind long;
  #L1207bc.  v6:= (`int`) v5 @kind l2i;
  #L1207be.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1207c4.  v5:= temp @kind object;
  #L1207c6.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1207cc.  v6:= temp @kind object;
  #L1207ce.  call temp:= `invoke`(v7, v5, v6) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1207d4.  v5:= temp @kind object;
  #L1207d6.  return v5 @kind object;
}
procedure `long` `wo`(`kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore$Companion;.wo:(JJ)J` @AccessFlag PUBLIC_FINAL {
    temp;

  #L120840.  v3:= ~v3 @kind long;
  #L120842.  v1:= v1 ^& v3 @kind long;
  #L120844.  return v1 @kind wide;
}
