record `kotlinx.coroutines.internal.ContextScope` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.CoroutineScope` @kind interface {
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.internal.ContextScope.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.ContextScope` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/internal/ContextScope;.<init>:(Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L11d840.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11d846.  v0.`kotlinx.coroutines.internal.ContextScope.a` @type ^`kotlin.coroutines.CoroutineContext` := v1 @kind object;
  #L11d84a.  return @kind void;
}
procedure `kotlin.coroutines.CoroutineContext` `getCoroutineContext`(`kotlinx.coroutines.internal.ContextScope` v1 @kind this) @signature `Lkotlinx/coroutines/internal/ContextScope;.getCoroutineContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11d828.  v0:= v1.`kotlinx.coroutines.internal.ContextScope.a` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L11d82c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.ContextScope` v2 @kind this) @signature `Lkotlinx/coroutines/internal/ContextScope;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L11d7e0.  v0:= new `java.lang.StringBuilder`;
  #L11d7e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L11d7ea.  v1:= "CoroutineScope(coroutineContext=" @kind object;
  #L11d7ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11d7f4.  call temp:= `getCoroutineContext`(v2) @signature `Lkotlinx/coroutines/internal/ContextScope;.getCoroutineContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L11d7fa.  v1:= temp @kind object;
  #L11d7fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11d802.  v1:= 41I;
  #L11d806.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L11d80c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L11d812.  v0:= temp @kind object;
  #L11d814.  return v0 @kind object;
}
