record `kotlinx.coroutines.internal.LockFreeLinkedListKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@kotlinx.coroutines.internal.LockFreeLinkedListKt.FAILURE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlinx.coroutines.internal.LockFreeLinkedListKt.SUCCESS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlinx.coroutines.internal.LockFreeLinkedListKt.UNDECIDED` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Object` `@@kotlinx.coroutines.internal.LockFreeLinkedListKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object` `@@kotlinx.coroutines.internal.LockFreeLinkedListKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L11f7d0.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L11f7d4.  v1:= "CONDITION_FALSE" @kind object;
  #L11f7d8.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11f7de.  `@@kotlinx.coroutines.internal.LockFreeLinkedListKt.a` @type ^`java.lang.Object` := v0 @kind object;
  #L11f7e2.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L11f7e6.  v1:= "LIST_EMPTY" @kind object;
  #L11f7ea.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11f7f0.  `@@kotlinx.coroutines.internal.LockFreeLinkedListKt.b` @type ^`java.lang.Object` := v0 @kind object;
  #L11f7f4.  return @kind void;
}
procedure `java.lang.Object` `getCONDITION_FALSE`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getCONDITION_FALSE:()Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L11f764.  v0:= `@@kotlinx.coroutines.internal.LockFreeLinkedListKt.a` @type ^`java.lang.Object` @kind object;
  #L11f768.  return v0 @kind object;
}
procedure `void` `getCONDITION_FALSE$annotations`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getCONDITION_FALSE$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L11f808.  return @kind void;
}
procedure `void` `getFAILURE$annotations`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getFAILURE$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L11f81c.  return @kind void;
}
procedure `java.lang.Object` `getLIST_EMPTY`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getLIST_EMPTY:()Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L11f77c.  v0:= `@@kotlinx.coroutines.internal.LockFreeLinkedListKt.b` @type ^`java.lang.Object` @kind object;
  #L11f780.  return v0 @kind object;
}
procedure `void` `getLIST_EMPTY$annotations`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getLIST_EMPTY$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L11f830.  return @kind void;
}
procedure `void` `getSUCCESS$annotations`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getSUCCESS$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L11f844.  return @kind void;
}
procedure `void` `getUNDECIDED$annotations`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getUNDECIDED$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L11f858.  return @kind void;
}
procedure `kotlinx.coroutines.internal.LockFreeLinkedListNode` `unwrap`(`java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.unwrap:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L11f794.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.internal.b` @kind boolean;
  #L11f798.  v1:= 0I;
  #L11f79a.  if v0 == 0 then goto L11f7a6;
  #L11f79e.  v0:= v2 @kind object;
  #L11f7a0.  v0:= (`kotlinx.coroutines.internal.b`) v0 @kind object;
  #L11f7a4.  goto L11f7a8;
  #L11f7a6.  v0:= v1 @kind object;
  #L11f7a8.  if v0 != 0 then goto L11f7ae;
  #L11f7ac.  goto L11f7b2;
  #L11f7ae.  v1:= v0.`kotlinx.coroutines.internal.b.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11f7b2.  if v1 != 0 then goto L11f7bc;
  #L11f7b6.  v1:= v2 @kind object;
  #L11f7b8.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L11f7bc.  return v1 @kind object;
}
