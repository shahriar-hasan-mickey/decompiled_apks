record `kotlinx.coroutines.internal.ExceptionsConstructorKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.CtorCache` `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L11ea4c.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L11ea50.  v1:= -1I;
  #L11ea52.  call temp:= `e`(v0, v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.e:(Ljava/lang/Class;I)I` @kind static;
  #L11ea58.  v0:= temp;
  #L11ea5a.  `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.a` @type ^`int` := v0;
  #L11ea5e.  call temp:= `getANDROID_DETECTED`() @signature `Lkotlinx/coroutines/internal/FastServiceLoaderKt;.getANDROID_DETECTED:()Z` @kind static;
  #L11ea64.  v0:= temp;
  #L11ea66.  if v0 == 0 then goto L11ea70;
  #L11ea6a.  v0:= `@@kotlinx.coroutines.internal.f.a` @type ^`kotlinx.coroutines.internal.f` @kind object;
  #L11ea6e.  goto L11ea7a;
  #L11ea70.  v0:= `@@kotlinx.coroutines.internal.ClassValueCtorCache.a` @type ^`kotlinx.coroutines.internal.ClassValueCtorCache` @kind object;
  #L11ea74.  goto L11ea7a;
  #L11ea76.  v0:= `@@kotlinx.coroutines.internal.f.a` @type ^`kotlinx.coroutines.internal.f` @kind object;
  #L11ea7a.  `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.b` @type ^`kotlinx.coroutines.internal.CtorCache` := v0 @kind object;
  #L11ea7e.  return @kind void;
  catch `java.lang.Throwable` @[L11ea5e..L11ea74] goto L11ea76;
}
procedure `kotlin.jvm.functions.Function1` `a`(`java.lang.Class` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.a:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L11e930.  v0:= `@@kotlinx.coroutines.internal.ExceptionsConstructorKt$a.a` @type ^`kotlinx.coroutines.internal.ExceptionsConstructorKt$a` @kind object;
  #L11e934.  v1:= `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.a` @type ^`int`;
  #L11e938.  v2:= 0I;
  #L11e93a.  call temp:= `e`(v3, v2) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.e:(Ljava/lang/Class;I)I` @kind static;
  #L11e940.  v2:= temp;
  #L11e942.  if v1 == v2 then goto L11e948;
  #L11e946.  return v0 @kind object;
  #L11e948.  call temp:= `getConstructors`(v3) @signature `Ljava/lang/Class;.getConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L11e94e.  v3:= temp @kind object;
  #L11e950.  v1:= new `kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$$inlined$sortedByDescending$1`;
  #L11e954.  call `<init>`(v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createConstructor$$inlined$sortedByDescending$1;.<init>:()V` @kind direct;
  #L11e95a.  call temp:= `sortedWith`(v3, v1) @signature `Lkotlin/collections/ArraysKt;.sortedWith:([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;` @kind static;
  #L11e960.  v3:= temp @kind object;
  #L11e962.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L11e968.  v3:= temp @kind object;
  #L11e96a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L11e970.  v1:= temp;
  #L11e972.  if v1 == 0 then goto L11e990;
  #L11e976.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L11e97c.  v1:= temp @kind object;
  #L11e97e.  v1:= (`java.lang.reflect.Constructor`) v1 @kind object;
  #L11e982.  call temp:= `b`(v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.b:(Ljava/lang/reflect/Constructor;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L11e988.  v1:= temp @kind object;
  #L11e98a.  if v1 == 0 then goto L11e96a;
  #L11e98e.  return v1 @kind object;
  #L11e990.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `access$createConstructor`(`java.lang.Class` v0 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.access$createConstructor:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L11e914.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.a:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L11e91a.  v0:= temp @kind object;
  #L11e91c.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `b`(`java.lang.reflect.Constructor` v7 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.b:(Ljava/lang/reflect/Constructor;)Lkotlin/jvm/functions/Function1;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L11e9a4.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L11e9a8.  call temp:= `getParameterTypes`(v7) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L11e9ae.  v1:= temp @kind object;
  #L11e9b0.  v2:= length @variable v1;
  #L11e9b2.  v3:= 0I;
  #L11e9b4.  if v2 == 0 then goto L11ea30;
  #L11e9b8.  v4:= 0I;
  #L11e9ba.  v5:= 1I;
  #L11e9bc.  if v2 == v5 then goto L11e9f8;
  #L11e9c0.  v6:= 2I;
  #L11e9c2.  if v2 == v6 then goto L11e9c8;
  #L11e9c6.  goto L11ea3a;
  #L11e9c8.  v2:= v1[v4] @kind object;
  #L11e9cc.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11e9d2.  v0:= temp;
  #L11e9d4.  if v0 == 0 then goto L11ea3a;
  #L11e9d8.  v0:= v1[v5] @kind object;
  #L11e9dc.  v1:= constclass @type ^`java.lang.Throwable` @kind object;
  #L11e9e0.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11e9e6.  v0:= temp;
  #L11e9e8.  if v0 == 0 then goto L11ea3a;
  #L11e9ec.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1`;
  #L11e9f0.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L11e9f6.  goto L11ea3a;
  #L11e9f8.  v1:= v1[v4] @kind object;
  #L11e9fc.  v2:= constclass @type ^`java.lang.Throwable` @kind object;
  #L11ea00.  call temp:= `areEqual`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11ea06.  v2:= temp;
  #L11ea08.  if v2 == 0 then goto L11ea18;
  #L11ea0c.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2`;
  #L11ea10.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L11ea16.  goto L11ea3a;
  #L11ea18.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11ea1e.  v0:= temp;
  #L11ea20.  if v0 == 0 then goto L11ea3a;
  #L11ea24.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3`;
  #L11ea28.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L11ea2e.  goto L11ea3a;
  #L11ea30.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4`;
  #L11ea34.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L11ea3a.  return v3 @kind object;
}
procedure `int` `c`(`java.lang.Class` v5 @kind object, `int` v6 ) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.c:(Ljava/lang/Class;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L11e7b0.  call temp:= `getDeclaredFields`(v5) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L11e7b6.  v0:= temp @kind object;
  #L11e7b8.  v1:= length @variable v0;
  #L11e7ba.  v2:= 0I;
  #L11e7bc.  v3:= 0I;
  #L11e7be.  if v2 >= v1 then goto L11e7e8;
  #L11e7c2.  v4:= v0[v2] @kind object;
  #L11e7c6.  v2:= v2 + 1;
  #L11e7ca.  call temp:= `getModifiers`(v4) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L11e7d0.  v4:= temp;
  #L11e7d2.  call temp:= `isStatic`(v4) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L11e7d8.  v4:= temp;
  #L11e7da.  v4:= v4 ^~ 1;
  #L11e7de.  if v4 == 0 then goto L11e7be;
  #L11e7e2.  v3:= v3 + 1;
  #L11e7e6.  goto L11e7be;
  #L11e7e8.  v6:= v6 + v3 @kind int;
  #L11e7ea.  call temp:= `getSuperclass`(v5) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L11e7f0.  v5:= temp @kind object;
  #L11e7f2.  if v5 != 0 then goto L11e7b0;
  #L11e7f6.  return v6;
}
procedure `int` `d`(`java.lang.Class` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.d:(Ljava/lang/Class;IILjava/lang/Object;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L11e78c.  v2:= v2 ^& 1;
  #L11e790.  if v2 == 0 then goto L11e796;
  #L11e794.  v1:= 0I;
  #L11e796.  call temp:= `c`(v0, v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.c:(Ljava/lang/Class;I)I` @kind static;
  #L11e79c.  v0:= temp;
  #L11e79e.  return v0;
}
procedure `int` `e`(`java.lang.Class` v3 @kind object, `int` v4 ) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.e:(Ljava/lang/Class;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L11e808.  call temp:= `getKotlinClass`(v3) @signature `Lkotlin/jvm/JvmClassMappingKt;.getKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L11e80e.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L11e812.  v0:= 0I;
  #L11e814.  v1:= 1I;
  #L11e816.  v2:= 0I;
  #L11e818.  call temp:= `d`(v3, v0, v1, v2) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.d:(Ljava/lang/Class;IILjava/lang/Object;)I` @kind static;
  #L11e81e.  v3:= temp;
  #L11e820.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L11e826.  v3:= temp @kind object;
  #L11e828.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11e82e.  v3:= temp @kind object;
  #L11e830.  goto L11e848;
  #L11e832.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11e834.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L11e838.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L11e83e.  v3:= temp @kind object;
  #L11e840.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11e846.  v3:= temp @kind object;
  #L11e848.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L11e84e.  v4:= temp @kind object;
  #L11e850.  call temp:= `isFailure-impl`(v3) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L11e856.  v0:= temp;
  #L11e858.  if v0 == 0 then goto L11e85e;
  #L11e85c.  v3:= v4 @kind object;
  #L11e85e.  v3:= (`java.lang.Number`) v3 @kind object;
  #L11e862.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L11e868.  v3:= temp;
  #L11e86a.  return v3;
  catch `java.lang.Throwable` @[L11e80e..L11e830] goto L11e832;
}
procedure `java.lang.Throwable` `tryCopyException`(`java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.tryCopyException:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L11e888.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.CopyableThrowable` @kind boolean;
  #L11e88c.  if v0 == 0 then goto L11e8d4;
  #L11e890.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L11e894.  v2:= (`kotlinx.coroutines.CopyableThrowable`) v2 @kind object;
  #L11e898.  call temp:= `createCopy`(v2) @signature `Lkotlinx/coroutines/CopyableThrowable;.createCopy:()Ljava/lang/Throwable;` @kind interface;
  #L11e89e.  v2:= temp @kind object;
  #L11e8a0.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11e8a6.  v2:= temp @kind object;
  #L11e8a8.  goto L11e8c0;
  #L11e8aa.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11e8ac.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L11e8b0.  call temp:= `createFailure`(v2) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L11e8b6.  v2:= temp @kind object;
  #L11e8b8.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11e8be.  v2:= temp @kind object;
  #L11e8c0.  call temp:= `isFailure-impl`(v2) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L11e8c6.  v0:= temp;
  #L11e8c8.  if v0 == 0 then goto L11e8ce;
  #L11e8cc.  v2:= 0I;
  #L11e8ce.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L11e8d2.  return v2 @kind object;
  #L11e8d4.  v0:= `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.b` @type ^`kotlinx.coroutines.internal.CtorCache` @kind object;
  #L11e8d8.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L11e8de.  v1:= temp @kind object;
  #L11e8e0.  call temp:= `get`(v0, v1) @signature `Lkotlinx/coroutines/internal/CtorCache;.get:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @kind virtual;
  #L11e8e6.  v0:= temp @kind object;
  #L11e8e8.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L11e8ee.  v2:= temp @kind object;
  #L11e8f0.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L11e8f4.  return v2 @kind object;
  catch `java.lang.Throwable` @[L11e890..L11e8a8] goto L11e8aa;
}
