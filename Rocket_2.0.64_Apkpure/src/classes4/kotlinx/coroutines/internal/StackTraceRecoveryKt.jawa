record `kotlinx.coroutines.internal.StackTraceRecoveryKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@kotlinx.coroutines.internal.StackTraceRecoveryKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@kotlinx.coroutines.internal.StackTraceRecoveryKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L12219c.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L1221a0.  v0:= "kotlin.coroutines.jvm.internal.BaseContinuationImpl" @kind object;
  #L1221a4.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1221aa.  v0:= temp @kind object;
  #L1221ac.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L1221b2.  v0:= temp @kind object;
  #L1221b4.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1221ba.  v0:= temp @kind object;
  #L1221bc.  goto L1221d4;
  #L1221be.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1221c0.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L1221c4.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1221ca.  v0:= temp @kind object;
  #L1221cc.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1221d2.  v0:= temp @kind object;
  #L1221d4.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L1221da.  v1:= temp @kind object;
  #L1221dc.  if v1 != 0 then goto L1221e2;
  #L1221e0.  goto L1221e6;
  #L1221e2.  v0:= "kotlin.coroutines.jvm.internal.BaseContinuationImpl" @kind object;
  #L1221e6.  v0:= (`java.lang.String`) v0 @kind object;
  #L1221ea.  `@@kotlinx.coroutines.internal.StackTraceRecoveryKt.a` @type ^`java.lang.String` := v0 @kind object;
  #L1221ee.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L1221f2.  v0:= constclass @type ^`kotlinx.coroutines.internal.StackTraceRecoveryKt` @kind object;
  #L1221f6.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L1221fc.  v0:= temp @kind object;
  #L1221fe.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L122204.  v0:= temp @kind object;
  #L122206.  goto L12221e;
  #L122208.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12220a.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L12220e.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L122214.  v0:= temp @kind object;
  #L122216.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L12221c.  v0:= temp @kind object;
  #L12221e.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L122224.  v1:= temp @kind object;
  #L122226.  if v1 != 0 then goto L12222c;
  #L12222a.  goto L122230;
  #L12222c.  v0:= "kotlinx.coroutines.internal.StackTraceRecoveryKt" @kind object;
  #L122230.  v0:= (`java.lang.String`) v0 @kind object;
  #L122234.  `@@kotlinx.coroutines.internal.StackTraceRecoveryKt.b` @type ^`java.lang.String` := v0 @kind object;
  #L122238.  return @kind void;
  catch `java.lang.Throwable` @[L12219c..L1221bc] goto L1221be;
  catch `java.lang.Throwable` @[L1221ee..L122206] goto L122208;
}
procedure `void` `CoroutineStackFrame$annotations`() @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.CoroutineStackFrame$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L122264.  return @kind void;
}
procedure `void` `StackTraceElement$annotations`() @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.StackTraceElement$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L122278.  return @kind void;
}
procedure `kotlin.Pair` `a`(`java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.a:(Ljava/lang/Throwable;)Lkotlin/Pair;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L12210c.  call temp:= `getCause`(v6) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L122112.  v0:= temp @kind object;
  #L122114.  v1:= 0I;
  #L122116.  if v0 == 0 then goto L12217c;
  #L12211a.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L122120.  v2:= temp @kind object;
  #L122122.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L122128.  v3:= temp @kind object;
  #L12212a.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L122130.  v2:= temp;
  #L122132.  if v2 == 0 then goto L12217c;
  #L122136.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L12213c.  v2:= temp @kind object;
  #L12213e.  v3:= length @variable v2;
  #L122140.  v4:= 0I;
  #L122142.  if v4 >= v3 then goto L12215e;
  #L122146.  v5:= v2[v4] @kind object;
  #L12214a.  v4:= v4 + 1;
  #L12214e.  call temp:= `isArtificial`(v5) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.isArtificial:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L122154.  v5:= temp;
  #L122156.  if v5 == 0 then goto L122142;
  #L12215a.  v3:= 1I;
  #L12215c.  goto L122160;
  #L12215e.  v3:= 0I;
  #L122160.  if v3 == 0 then goto L12216e;
  #L122164.  call temp:= `to`(v0, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L12216a.  v6:= temp @kind object;
  #L12216c.  goto L122188;
  #L12216e.  v0:= new `java.lang.StackTraceElement`[v1];
  #L122172.  call temp:= `to`(v6, v0) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L122178.  v6:= temp @kind object;
  #L12217a.  goto L122188;
  #L12217c.  v0:= new `java.lang.StackTraceElement`[v1];
  #L122180.  call temp:= `to`(v6, v0) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L122186.  v6:= temp @kind object;
  #L122188.  return v6 @kind object;
}
procedure `java.lang.Throwable` `access$recoverFromStackFrame`(`java.lang.Throwable` v0 @kind object, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v1 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L121e88.  call temp:= `g`(v0, v1) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.g:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L121e8e.  v0:= temp @kind object;
  #L121e90.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `artificialFrame`(`java.lang.String` v3 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.artificialFrame:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L121e58.  v0:= new `java.lang.StackTraceElement`;
  #L121e5c.  v1:= "\b\b\b(" @kind object;
  #L121e60.  call temp:= `stringPlus`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L121e66.  v3:= temp @kind object;
  #L121e68.  v1:= "\b" @kind object;
  #L121e6c.  v2:= -1I;
  #L121e6e.  call `<init>`(v0, v3, v1, v1, v2) @signature `Ljava/lang/StackTraceElement;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L121e74.  return v0 @kind object;
}
procedure `java.lang.Throwable` `b`(`java.lang.Throwable` v6 @kind object, `java.lang.Throwable` v7 @kind object, `java.util.ArrayDeque` v8 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.b:(Ljava/lang/Throwable;Ljava/lang/Throwable;Ljava/util/ArrayDeque;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L121ea4.  v0:= "Coroutine boundary" @kind object;
  #L121ea8.  call temp:= `artificialFrame`(v0) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.artificialFrame:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L121eae.  v0:= temp @kind object;
  #L121eb0.  call `addFirst`(v8, v0) @signature `Ljava/util/ArrayDeque;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L121eb6.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L121ebc.  v6:= temp @kind object;
  #L121ebe.  v0:= `@@kotlinx.coroutines.internal.StackTraceRecoveryKt.a` @type ^`java.lang.String` @kind object;
  #L121ec2.  call temp:= `e`(v6, v0) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.e:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L121ec8.  v0:= temp;
  #L121eca.  v1:= 0I;
  #L121ecc.  v2:= -1I;
  #L121ece.  if v0 != v2 then goto L121ef4;
  #L121ed2.  v6:= new `java.lang.StackTraceElement`[v1];
  #L121ed6.  call temp:= `toArray`(v8, v6) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L121edc.  v6:= temp @kind object;
  #L121ede.  v8:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L121ee2.  call temp:= `requireNonNull`(v6, v8) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L121ee8.  v6:= (`java.lang.StackTraceElement`[]) v6 @kind object;
  #L121eec.  call `setStackTrace`(v7, v6) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L121ef2.  return v7 @kind object;
  #L121ef4.  call temp:= `size`(v8) @signature `Ljava/util/ArrayDeque;.size:()I` @kind virtual;
  #L121efa.  v2:= temp;
  #L121efc.  v2:= v2 + v0 @kind int;
  #L121efe.  v2:= new `java.lang.StackTraceElement`[v2];
  #L121f02.  v3:= 0I;
  #L121f04.  if v3 >= v0 then goto L121f18;
  #L121f08.  v4:= v3 + 1;
  #L121f0c.  v5:= v6[v3] @kind object;
  #L121f10.  v2[v3]:= v5 @kind object;
  #L121f14.  v3:= v4;
  #L121f16.  goto L121f04;
  #L121f18.  call temp:= `iterator`(v8) @signature `Ljava/util/ArrayDeque;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L121f1e.  v6:= temp @kind object;
  #L121f20.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L121f26.  v8:= temp;
  #L121f28.  if v8 == 0 then goto L121f46;
  #L121f2c.  v8:= v1 + 1;
  #L121f30.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L121f36.  v3:= temp @kind object;
  #L121f38.  v3:= (`java.lang.StackTraceElement`) v3 @kind object;
  #L121f3c.  v1:= v1 + v0 @kind int;
  #L121f3e.  v2[v1]:= v3 @kind object;
  #L121f42.  v1:= v8;
  #L121f44.  goto L121f20;
  #L121f46.  call `setStackTrace`(v7, v2) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L121f4c.  return v7 @kind object;
}
procedure `java.util.ArrayDeque` `c`(`kotlin.coroutines.jvm.internal.CoroutineStackFrame` v2 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.c:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/util/ArrayDeque;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1220b8.  v0:= new `java.util.ArrayDeque`;
  #L1220bc.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L1220c2.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L1220c8.  v1:= temp @kind object;
  #L1220ca.  if v1 != 0 then goto L1220d0;
  #L1220ce.  goto L1220d6;
  #L1220d0.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1220d6.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind interface;
  #L1220dc.  v2:= temp @kind object;
  #L1220de.  if v2 != 0 then goto L1220e4;
  #L1220e2.  return v0 @kind object;
  #L1220e4.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L1220ea.  v1:= temp @kind object;
  #L1220ec.  if v1 != 0 then goto L1220f2;
  #L1220f0.  goto L1220d6;
  #L1220f2.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1220f8.  goto L1220d6;
}
procedure `boolean` `d`(`java.lang.StackTraceElement` v2 @kind object, `java.lang.StackTraceElement` v3 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.d:(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L121d58.  call temp:= `getLineNumber`(v2) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L121d5e.  v0:= temp;
  #L121d60.  call temp:= `getLineNumber`(v3) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L121d66.  v1:= temp;
  #L121d68.  if v0 != v1 then goto L121dc4;
  #L121d6c.  call temp:= `getMethodName`(v2) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L121d72.  v0:= temp @kind object;
  #L121d74.  call temp:= `getMethodName`(v3) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L121d7a.  v1:= temp @kind object;
  #L121d7c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L121d82.  v0:= temp;
  #L121d84.  if v0 == 0 then goto L121dc4;
  #L121d88.  call temp:= `getFileName`(v2) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L121d8e.  v0:= temp @kind object;
  #L121d90.  call temp:= `getFileName`(v3) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L121d96.  v1:= temp @kind object;
  #L121d98.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L121d9e.  v0:= temp;
  #L121da0.  if v0 == 0 then goto L121dc4;
  #L121da4.  call temp:= `getClassName`(v2) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L121daa.  v2:= temp @kind object;
  #L121dac.  call temp:= `getClassName`(v3) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L121db2.  v3:= temp @kind object;
  #L121db4.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L121dba.  v2:= temp;
  #L121dbc.  if v2 == 0 then goto L121dc4;
  #L121dc0.  v2:= 1I;
  #L121dc2.  goto L121dc6;
  #L121dc4.  v2:= 0I;
  #L121dc6.  return v2;
}
procedure `int` `e`(`java.lang.StackTraceElement`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.e:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L121e04.  v0:= length @variable v4;
  #L121e06.  v1:= 0I;
  #L121e08.  if v1 >= v0 then goto L121e2e;
  #L121e0c.  v2:= v1 + 1;
  #L121e10.  v3:= v4[v1] @kind object;
  #L121e14.  call temp:= `getClassName`(v3) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L121e1a.  v3:= temp @kind object;
  #L121e1c.  call temp:= `areEqual`(v5, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L121e22.  v3:= temp;
  #L121e24.  if v3 == 0 then goto L121e2a;
  #L121e28.  goto L121e30;
  #L121e2a.  v1:= v2;
  #L121e2c.  goto L121e08;
  #L121e2e.  v1:= -1I;
  #L121e30.  return v1;
}
procedure `void` `f`(`java.lang.StackTraceElement`[] v5 @kind object, `java.util.ArrayDeque` v6 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.f:([Ljava/lang/StackTraceElement;Ljava/util/ArrayDeque;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1222a4.  v0:= length @variable v5;
  #L1222a6.  v1:= 0I;
  #L1222a8.  if v1 >= v0 then goto L1222c6;
  #L1222ac.  v2:= v1 + 1;
  #L1222b0.  v3:= v5[v1] @kind object;
  #L1222b4.  call temp:= `isArtificial`(v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.isArtificial:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L1222ba.  v3:= temp;
  #L1222bc.  if v3 == 0 then goto L1222c2;
  #L1222c0.  goto L1222c8;
  #L1222c2.  v1:= v2;
  #L1222c4.  goto L1222a8;
  #L1222c6.  v1:= -1I;
  #L1222c8.  v1:= v1 + 1;
  #L1222cc.  v0:= length @variable v5;
  #L1222ce.  v0:= v0 + -1;
  #L1222d2.  if v1 > v0 then goto L122310;
  #L1222d6.  v2:= v0 + -1;
  #L1222da.  v3:= v5[v0] @kind object;
  #L1222de.  call temp:= `getLast`(v6) @signature `Ljava/util/ArrayDeque;.getLast:()Ljava/lang/Object;` @kind virtual;
  #L1222e4.  v4:= temp @kind object;
  #L1222e6.  v4:= (`java.lang.StackTraceElement`) v4 @kind object;
  #L1222ea.  call temp:= `d`(v3, v4) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.d:(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z` @kind static;
  #L1222f0.  v3:= temp;
  #L1222f2.  if v3 == 0 then goto L1222fc;
  #L1222f6.  call temp:= `removeLast`(v6) @signature `Ljava/util/ArrayDeque;.removeLast:()Ljava/lang/Object;` @kind virtual;
  #L1222fc.  v3:= v5[v0] @kind object;
  #L122300.  call `addFirst`(v6, v3) @signature `Ljava/util/ArrayDeque;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L122306.  if v0 != v1 then goto L12230c;
  #L12230a.  goto L122310;
  #L12230c.  v0:= v2;
  #L12230e.  goto L1222d6;
  #L122310.  return @kind void;
}
procedure `java.lang.Throwable` `g`(`java.lang.Throwable` v4 @kind object, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v5 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.g:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L121f60.  call temp:= `a`(v4) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.a:(Ljava/lang/Throwable;)Lkotlin/Pair;` @kind static;
  #L121f66.  v0:= temp @kind object;
  #L121f68.  call temp:= `component1`(v0) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L121f6e.  v1:= temp @kind object;
  #L121f70.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L121f74.  call temp:= `component2`(v0) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L121f7a.  v0:= temp @kind object;
  #L121f7c.  v0:= (`java.lang.StackTraceElement`[]) v0 @kind object;
  #L121f80.  call temp:= `h`(v1) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.h:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L121f86.  v2:= temp @kind object;
  #L121f88.  if v2 != 0 then goto L121f8e;
  #L121f8c.  return v4 @kind object;
  #L121f8e.  call temp:= `c`(v5) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.c:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/util/ArrayDeque;` @kind static;
  #L121f94.  v5:= temp @kind object;
  #L121f96.  call temp:= `isEmpty`(v5) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L121f9c.  v3:= temp;
  #L121f9e.  if v3 == 0 then goto L121fa4;
  #L121fa2.  return v4 @kind object;
  #L121fa4.  if v1 == v4 then goto L121fae;
  #L121fa8.  call `f`(v0, v5) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.f:([Ljava/lang/StackTraceElement;Ljava/util/ArrayDeque;)V` @kind static;
  #L121fae.  call temp:= `b`(v1, v2, v5) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.b:(Ljava/lang/Throwable;Ljava/lang/Throwable;Ljava/util/ArrayDeque;)Ljava/lang/Throwable;` @kind static;
  #L121fb4.  v4:= temp @kind object;
  #L121fb6.  return v4 @kind object;
}
procedure `java.lang.Throwable` `h`(`java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.h:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L121ff0.  call temp:= `tryCopyException`(v3) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.tryCopyException:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L121ff6.  v0:= temp @kind object;
  #L121ff8.  v1:= 0I;
  #L121ffa.  if v0 != 0 then goto L122000;
  #L121ffe.  return v1 @kind object;
  #L122000.  v2:= instanceof @variable v3 @type ^`kotlinx.coroutines.CopyableThrowable` @kind boolean;
  #L122004.  if v2 != 0 then goto L122026;
  #L122008.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L12200e.  v2:= temp @kind object;
  #L122010.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L122016.  v3:= temp @kind object;
  #L122018.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12201e.  v3:= temp;
  #L122020.  if v3 != 0 then goto L122026;
  #L122024.  return v1 @kind object;
  #L122026.  return v0 @kind object;
}
procedure `void` `initCause`(`java.lang.Throwable` v0 @kind object, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L12228c.  call temp:= `initCause`(v0, v1) @signature `Ljava/lang/Throwable;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L122292.  return @kind void;
}
procedure `boolean` `isArtificial`(`java.lang.StackTraceElement` v4 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.isArtificial:(Ljava/lang/StackTraceElement;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L121dd8.  call temp:= `getClassName`(v4) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L121dde.  v4:= temp @kind object;
  #L121de0.  v0:= "\b\b\b" @kind object;
  #L121de4.  v1:= 0I;
  #L121de6.  v2:= 2I;
  #L121de8.  v3:= 0I;
  #L121dea.  call temp:= `startsWith$default`(v4, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L121df0.  v4:= temp;
  #L121df2.  return v4;
}
procedure `java.lang.Object` `recoverAndThrow`(`java.lang.Throwable` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.recoverAndThrow:(Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L121e44.  throw v0;
}
procedure `java.lang.Throwable` `recoverStackTrace`(`java.lang.Throwable` v0 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.recoverStackTrace:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L121fc8.  return v0 @kind object;
}
procedure `java.lang.Throwable` `recoverStackTrace`(`java.lang.Throwable` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.recoverStackTrace:(Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L121fdc.  return v0 @kind object;
}
procedure `java.lang.Throwable` `unwrap`(`java.lang.Throwable` v0 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.unwrap:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L122038.  return v0 @kind object;
}
procedure `java.lang.Throwable` `unwrapImpl`(`java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.unwrapImpl:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L12204c.  call temp:= `getCause`(v6) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L122052.  v0:= temp @kind object;
  #L122054.  if v0 == 0 then goto L1220a4;
  #L122058.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L12205e.  v1:= temp @kind object;
  #L122060.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L122066.  v2:= temp @kind object;
  #L122068.  call temp:= `areEqual`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12206e.  v1:= temp;
  #L122070.  if v1 != 0 then goto L122076;
  #L122074.  goto L1220a4;
  #L122076.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L12207c.  v1:= temp @kind object;
  #L12207e.  v2:= length @variable v1;
  #L122080.  v3:= 0I;
  #L122082.  v4:= 0I;
  #L122084.  if v4 >= v2 then goto L12209e;
  #L122088.  v5:= v1[v4] @kind object;
  #L12208c.  v4:= v4 + 1;
  #L122090.  call temp:= `isArtificial`(v5) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.isArtificial:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L122096.  v5:= temp;
  #L122098.  if v5 == 0 then goto L122084;
  #L12209c.  v3:= 1I;
  #L12209e.  if v3 == 0 then goto L1220a4;
  #L1220a2.  return v0 @kind object;
  #L1220a4.  return v6 @kind object;
}
