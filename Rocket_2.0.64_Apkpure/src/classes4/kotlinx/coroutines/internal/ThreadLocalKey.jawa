record `kotlinx.coroutines.internal.ThreadLocalKey` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.CoroutineContext$Key` @kind interface {
  `java.lang.ThreadLocal` `kotlinx.coroutines.internal.ThreadLocalKey.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.ThreadLocalKey` v0 @kind this, `java.lang.ThreadLocal` v1 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.<init>:(Ljava/lang/ThreadLocal;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L122c48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L122c4e.  v0.`kotlinx.coroutines.internal.ThreadLocalKey.a` @type ^`java.lang.ThreadLocal` := v1 @kind object;
  #L122c52.  return @kind void;
}
procedure `kotlinx.coroutines.internal.ThreadLocalKey` `copy$default`(`kotlinx.coroutines.internal.ThreadLocalKey` v0 @kind object, `java.lang.ThreadLocal` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.copy$default:(Lkotlinx/coroutines/internal/ThreadLocalKey;Ljava/lang/ThreadLocal;ILjava/lang/Object;)Lkotlinx/coroutines/internal/ThreadLocalKey;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L122c04.  v2:= v2 ^& 1;
  #L122c08.  if v2 == 0 then goto L122c10;
  #L122c0c.  v1:= v0.`kotlinx.coroutines.internal.ThreadLocalKey.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L122c10.  call temp:= `copy`(v0, v1) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.copy:(Ljava/lang/ThreadLocal;)Lkotlinx/coroutines/internal/ThreadLocalKey;` @kind virtual;
  #L122c16.  v0:= temp @kind object;
  #L122c18.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.ThreadLocalKey` `copy`(`kotlinx.coroutines.internal.ThreadLocalKey` v1 @kind this, `java.lang.ThreadLocal` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.copy:(Ljava/lang/ThreadLocal;)Lkotlinx/coroutines/internal/ThreadLocalKey;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L122c2c.  v0:= new `kotlinx.coroutines.internal.ThreadLocalKey`;
  #L122c30.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.<init>:(Ljava/lang/ThreadLocal;)V` @kind direct;
  #L122c36.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.internal.ThreadLocalKey` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L122b60.  v0:= 1I;
  #L122b62.  if v3 != v4 then goto L122b68;
  #L122b66.  return v0;
  #L122b68.  v1:= instanceof @variable v4 @type ^`kotlinx.coroutines.internal.ThreadLocalKey` @kind boolean;
  #L122b6c.  v2:= 0I;
  #L122b6e.  if v1 != 0 then goto L122b74;
  #L122b72.  return v2;
  #L122b74.  v4:= (`kotlinx.coroutines.internal.ThreadLocalKey`) v4 @kind object;
  #L122b78.  v1:= v3.`kotlinx.coroutines.internal.ThreadLocalKey.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L122b7c.  v4:= v4.`kotlinx.coroutines.internal.ThreadLocalKey.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L122b80.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L122b86.  v4:= temp;
  #L122b88.  if v4 != 0 then goto L122b8e;
  #L122b8c.  return v2;
  #L122b8e.  return v0;
}
procedure `int` `hashCode`(`kotlinx.coroutines.internal.ThreadLocalKey` v1 @kind this) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L122ba0.  v0:= v1.`kotlinx.coroutines.internal.ThreadLocalKey.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L122ba4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/ThreadLocal;.hashCode:()I` @kind virtual;
  #L122baa.  v0:= temp;
  #L122bac.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.ThreadLocalKey` v2 @kind this) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L122bc0.  v0:= new `java.lang.StringBuilder`;
  #L122bc4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L122bca.  v1:= "ThreadLocalKey(threadLocal=" @kind object;
  #L122bce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L122bd4.  v1:= v2.`kotlinx.coroutines.internal.ThreadLocalKey.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L122bd8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L122bde.  v1:= 41I;
  #L122be2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L122be8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L122bee.  v0:= temp @kind object;
  #L122bf0.  return v0 @kind object;
}
