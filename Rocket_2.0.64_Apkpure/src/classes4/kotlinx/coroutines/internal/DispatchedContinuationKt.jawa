record `kotlinx.coroutines.internal.DispatchedContinuationKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.internal.DispatchedContinuationKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L11d92c.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L11d930.  v1:= "UNDEFINED" @kind object;
  #L11d934.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11d93a.  `@@kotlinx.coroutines.internal.DispatchedContinuationKt.a` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L11d93e.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L11d942.  v1:= "REUSABLE_CLAIMED" @kind object;
  #L11d946.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11d94c.  `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L11d950.  return @kind void;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getUNDEFINED$p`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.access$getUNDEFINED$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L11d914.  v0:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.a` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11d918.  return v0 @kind object;
}
procedure `void` `getREUSABLE_CLAIMED$annotations`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.getREUSABLE_CLAIMED$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L11d964.  return @kind void;
}
procedure `void` `resumeCancellableWith`(`kotlin.coroutines.Continuation` v6 @kind object, `java.lang.Object` v7 @kind object, `kotlin.jvm.functions.Function1` v8 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.resumeCancellableWith:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L11d99c.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind boolean;
  #L11d9a0.  if v0 == 0 then goto L11db08;
  #L11d9a4.  v6:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v6 @kind object;
  #L11d9a8.  call temp:= `toState`(v7, v8) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind static;
  #L11d9ae.  v8:= temp @kind object;
  #L11d9b0.  v0:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L11d9b4.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L11d9ba.  v1:= temp @kind object;
  #L11d9bc.  call temp:= `isDispatchNeeded`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.isDispatchNeeded:(Lkotlin/coroutines/CoroutineContext;)Z` @kind virtual;
  #L11d9c2.  v0:= temp;
  #L11d9c4.  v1:= 1I;
  #L11d9c6.  if v0 == 0 then goto L11d9e8;
  #L11d9ca.  v6.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v8 @kind object;
  #L11d9ce.  v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v1;
  #L11d9d2.  v7:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L11d9d6.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L11d9dc.  v8:= temp @kind object;
  #L11d9de.  call `dispatch`(v7, v8, v6) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L11d9e4.  goto L11db0e;
  #L11d9e8.  v0:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L11d9ec.  call temp:= `getEventLoop$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.getEventLoop$kotlinx_coroutines_core:()Lkotlinx/coroutines/EventLoop;` @kind virtual;
  #L11d9f2.  v0:= temp @kind object;
  #L11d9f4.  call temp:= `isUnconfinedLoopActive`(v0) @signature `Lkotlinx/coroutines/EventLoop;.isUnconfinedLoopActive:()Z` @kind virtual;
  #L11d9fa.  v2:= temp;
  #L11d9fc.  if v2 == 0 then goto L11da12;
  #L11da00.  v6.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v8 @kind object;
  #L11da04.  v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v1;
  #L11da08.  call `dispatchUnconfined`(v0, v6) @signature `Lkotlinx/coroutines/EventLoop;.dispatchUnconfined:(Lkotlinx/coroutines/DispatchedTask;)V` @kind virtual;
  #L11da0e.  goto L11db0e;
  #L11da12.  call `incrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/EventLoop;.incrementUseCount:(Z)V` @kind virtual;
  #L11da18.  v2:= 0I;
  #L11da1a.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L11da20.  v3:= temp @kind object;
  #L11da22.  v4:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L11da26.  call temp:= `get`(v3, v4) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L11da2c.  v3:= temp @kind object;
  #L11da2e.  v3:= (`kotlinx.coroutines.Job`) v3 @kind object;
  #L11da32.  if v3 == 0 then goto L11da6e;
  #L11da36.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L11da3c.  v4:= temp;
  #L11da3e.  if v4 != 0 then goto L11da6e;
  #L11da42.  call temp:= `getCancellationException`(v3) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L11da48.  v3:= temp @kind object;
  #L11da4a.  call `cancelCompletedResult$kotlinx_coroutines_core`(v6, v8, v3) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L11da50.  v8:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L11da54.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L11da5a.  v8:= temp @kind object;
  #L11da5c.  call temp:= `constructor-impl`(v8) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11da62.  v8:= temp @kind object;
  #L11da64.  call `resumeWith`(v6, v8) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L11da6a.  v8:= 1I;
  #L11da6c.  goto L11da70;
  #L11da6e.  v8:= 0I;
  #L11da70.  if v8 != 0 then goto L11dae0;
  #L11da74.  v8:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11da78.  v3:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @type ^`java.lang.Object` @kind object;
  #L11da7c.  call temp:= `getContext`(v8) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L11da82.  v4:= temp @kind object;
  #L11da84.  call temp:= `updateThreadContext`(v4, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L11da8a.  v3:= temp @kind object;
  #L11da8c.  v5:= `@@kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11da90.  if v3 == v5 then goto L11da9e;
  #L11da94.  call temp:= `updateUndispatchedCompletion`(v8, v4, v3) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L11da9a.  v8:= temp @kind object;
  #L11da9c.  goto L11daa0;
  #L11da9e.  v8:= v2 @kind object;
  #L11daa0.  v5:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11daa4.  call `resumeWith`(v5, v7) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L11daaa.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11daae.  if v8 == 0 then goto L11dabe;
  #L11dab2.  call temp:= `clearThreadContext`(v8) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L11dab8.  v7:= temp;
  #L11daba.  if v7 == 0 then goto L11dae0;
  #L11dabe.  call `restoreThreadContext`(v4, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L11dac4.  goto L11dae0;
  #L11dac6.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11dac8.  if v8 == 0 then goto L11dad8;
  #L11dacc.  call temp:= `clearThreadContext`(v8) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L11dad2.  v8:= temp;
  #L11dad4.  if v8 == 0 then goto L11dade;
  #L11dad8.  call `restoreThreadContext`(v4, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L11dade.  throw v7;
  #L11dae0.  call temp:= `processUnconfinedEvent`(v0) @signature `Lkotlinx/coroutines/EventLoop;.processUnconfinedEvent:()Z` @kind virtual;
  #L11dae6.  v7:= temp;
  #L11dae8.  if v7 != 0 then goto L11dae0;
  #L11daec.  goto L11daf6;
  #L11daee.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11daf0.  call `handleFatalException`(v6, v7, v2) @signature `Lkotlinx/coroutines/DispatchedTask;.handleFatalException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L11daf6.  call `decrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L11dafc.  goto L11db0e;
  #L11dafe.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11db00.  call `decrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L11db06.  throw v6;
  #L11db08.  call `resumeWith`(v6, v7) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L11db0e.  return @kind void;
  catch `java.lang.Throwable` @[L11da1a..L11da9c] goto L11daee;
  catch `java.lang.Throwable` @[L11daa0..L11daae] goto L11dac6;
  catch `java.lang.Throwable` @[L11dab2..L11dae8] goto L11daee;
  catch `java.lang.Throwable` @[L11daf0..L11daf6] goto L11dafe;
}
procedure `void` `resumeCancellableWith$default`(`kotlin.coroutines.Continuation` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.resumeCancellableWith$default:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L11d978.  v3:= v3 ^& 2;
  #L11d97c.  if v3 == 0 then goto L11d982;
  #L11d980.  v2:= 0I;
  #L11d982.  call `resumeCancellableWith`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.resumeCancellableWith:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @kind static;
  #L11d988.  return @kind void;
}
procedure `boolean` `yieldUndispatched`(`kotlinx.coroutines.internal.DispatchedContinuation` v5 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.yieldUndispatched:(Lkotlinx/coroutines/internal/DispatchedContinuation;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L11d874.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11d878.  v1:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L11d87c.  call temp:= `getEventLoop$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.getEventLoop$kotlinx_coroutines_core:()Lkotlinx/coroutines/EventLoop;` @kind virtual;
  #L11d882.  v1:= temp @kind object;
  #L11d884.  call temp:= `isUnconfinedQueueEmpty`(v1) @signature `Lkotlinx/coroutines/EventLoop;.isUnconfinedQueueEmpty:()Z` @kind virtual;
  #L11d88a.  v2:= temp;
  #L11d88c.  v3:= 0I;
  #L11d88e.  if v2 == 0 then goto L11d894;
  #L11d892.  goto L11d8de;
  #L11d894.  call temp:= `isUnconfinedLoopActive`(v1) @signature `Lkotlinx/coroutines/EventLoop;.isUnconfinedLoopActive:()Z` @kind virtual;
  #L11d89a.  v2:= temp;
  #L11d89c.  v4:= 1I;
  #L11d89e.  if v2 == 0 then goto L11d8b4;
  #L11d8a2.  v5.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v0 @kind object;
  #L11d8a6.  v5.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v4;
  #L11d8aa.  call `dispatchUnconfined`(v1, v5) @signature `Lkotlinx/coroutines/EventLoop;.dispatchUnconfined:(Lkotlinx/coroutines/DispatchedTask;)V` @kind virtual;
  #L11d8b0.  v3:= 1I;
  #L11d8b2.  goto L11d8de;
  #L11d8b4.  call `incrementUseCount`(v1, v4) @signature `Lkotlinx/coroutines/EventLoop;.incrementUseCount:(Z)V` @kind virtual;
  #L11d8ba.  call `run`(v5) @signature `Lkotlinx/coroutines/DispatchedTask;.run:()V` @kind virtual;
  #L11d8c0.  call temp:= `processUnconfinedEvent`(v1) @signature `Lkotlinx/coroutines/EventLoop;.processUnconfinedEvent:()Z` @kind virtual;
  #L11d8c6.  v0:= temp;
  #L11d8c8.  if v0 != 0 then goto L11d8c0;
  #L11d8cc.  goto L11d8d8;
  #L11d8ce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11d8d0.  v2:= 0I;
  #L11d8d2.  call `handleFatalException`(v5, v0, v2) @signature `Lkotlinx/coroutines/DispatchedTask;.handleFatalException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L11d8d8.  call `decrementUseCount`(v1, v4) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L11d8de.  return v3;
  #L11d8e0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11d8e2.  call `decrementUseCount`(v1, v4) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L11d8e8.  throw v5;
  catch `java.lang.Throwable` @[L11d8ba..L11d8c8] goto L11d8ce;
  catch `java.lang.Throwable` @[L11d8d2..L11d8d8] goto L11d8e0;
}
