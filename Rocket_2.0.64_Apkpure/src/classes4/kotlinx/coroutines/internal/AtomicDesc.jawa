record `kotlinx.coroutines.internal.AtomicDesc` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `kotlinx.coroutines.internal.AtomicOp` `kotlinx.coroutines.internal.AtomicDesc.atomicOp` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.AtomicDesc` v0 @kind this) @signature `Lkotlinx/coroutines/internal/AtomicDesc;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L11d13c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11d142.  return @kind void;
}
procedure `void` `complete`(`kotlinx.coroutines.internal.AtomicOp` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/AtomicDesc;.complete:(Lkotlinx/coroutines/internal/AtomicOp;Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.internal.AtomicOp` `getAtomicOp`(`kotlinx.coroutines.internal.AtomicDesc` v1 @kind this) @signature `Lkotlinx/coroutines/internal/AtomicDesc;.getAtomicOp:()Lkotlinx/coroutines/internal/AtomicOp;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L11d114.  v0:= v1.`kotlinx.coroutines.internal.AtomicDesc.atomicOp` @type ^`kotlinx.coroutines.internal.AtomicOp` @kind object;
  #L11d118.  if v0 == 0 then goto L11d11e;
  #L11d11c.  return v0 @kind object;
  #L11d11e.  v0:= "atomicOp" @kind object;
  #L11d122.  call `throwUninitializedPropertyAccessException`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L11d128.  v0:= 0I;
  #L11d12a.  return v0 @kind object;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.internal.AtomicOp` v0 @kind object) @signature `Lkotlinx/coroutines/internal/AtomicDesc;.prepare:(Lkotlinx/coroutines/internal/AtomicOp;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setAtomicOp`(`kotlinx.coroutines.internal.AtomicDesc` v0 @kind this, `kotlinx.coroutines.internal.AtomicOp` v1 @kind object) @signature `Lkotlinx/coroutines/internal/AtomicDesc;.setAtomicOp:(Lkotlinx/coroutines/internal/AtomicOp;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L11d154.  v0.`kotlinx.coroutines.internal.AtomicDesc.atomicOp` @type ^`kotlinx.coroutines.internal.AtomicOp` := v1 @kind object;
  #L11d158.  return @kind void;
}
