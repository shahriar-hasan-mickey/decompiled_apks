record `kotlinx.coroutines.internal.ArrayQueue` @kind class @AccessFlag PUBLIC {
  `java.lang.Object`[] `kotlinx.coroutines.internal.ArrayQueue.a` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.internal.ArrayQueue.b` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.internal.ArrayQueue.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.ArrayQueue` v1 @kind this) @signature `Lkotlinx/coroutines/internal/ArrayQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L11d020.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11d026.  v0:= 16I;
  #L11d02a.  v0:= new `java.lang.Object`[v0];
  #L11d02e.  v1.`kotlinx.coroutines.internal.ArrayQueue.a` @type ^`java.lang.Object`[] := v0 @kind object;
  #L11d032.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.internal.ArrayQueue` v16 @kind this) @signature `Lkotlinx/coroutines/internal/ArrayQueue;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L11d0ac.  v0:= v16 @kind object;
  #L11d0b0.  v1:= v0.`kotlinx.coroutines.internal.ArrayQueue.a` @type ^`java.lang.Object`[] @kind object;
  #L11d0b4.  v8:= length @variable v1;
  #L11d0b6.  v2:= v8 ^< 1;
  #L11d0ba.  v15:= new `java.lang.Object`[v2];
  #L11d0be.  v4:= v0.`kotlinx.coroutines.internal.ArrayQueue.b` @type ^`int`;
  #L11d0c2.  v3:= 0I;
  #L11d0c4.  v5:= 0I;
  #L11d0c6.  v6:= 10I;
  #L11d0ca.  v7:= 0I;
  #L11d0cc.  v2:= v15 @kind object;
  #L11d0ce.  call temp:= `copyInto$default`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/collections/ArraysKt;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L11d0d4.  v9:= v0.`kotlinx.coroutines.internal.ArrayQueue.a` @type ^`java.lang.Object`[] @kind object;
  #L11d0d8.  v1:= length @variable v9;
  #L11d0da.  v13:= v0.`kotlinx.coroutines.internal.ArrayQueue.b` @type ^`int`;
  #L11d0de.  v11:= v1 - v13 @kind int;
  #L11d0e2.  v12:= 0I;
  #L11d0e4.  v14:= 4I;
  #L11d0e6.  v1:= 0I;
  #L11d0e8.  v10:= v15 @kind object;
  #L11d0ea.  v15:= v1 @kind object;
  #L11d0ec.  call temp:= `copyInto$default`(v9, v10, v11, v12, v13, v14, v15) @signature `Lkotlin/collections/ArraysKt;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L11d0f2.  v0.`kotlinx.coroutines.internal.ArrayQueue.a` @type ^`java.lang.Object`[] := v2 @kind object;
  #L11d0f6.  v1:= 0I;
  #L11d0f8.  v0.`kotlinx.coroutines.internal.ArrayQueue.b` @type ^`int` := v1;
  #L11d0fc.  v0.`kotlinx.coroutines.internal.ArrayQueue.c` @type ^`int` := v8;
  #L11d100.  return @kind void;
}
procedure `void` `addLast`(`kotlinx.coroutines.internal.ArrayQueue` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ArrayQueue;.addLast:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L11d044.  v0:= v2.`kotlinx.coroutines.internal.ArrayQueue.a` @type ^`java.lang.Object`[] @kind object;
  #L11d048.  v1:= v2.`kotlinx.coroutines.internal.ArrayQueue.c` @type ^`int`;
  #L11d04c.  v0[v1]:= v3 @kind object;
  #L11d050.  v1:= v1 + 1;
  #L11d054.  v3:= length @variable v0;
  #L11d056.  v3:= v3 + -1;
  #L11d05a.  v3:= v3 ^& v1 @kind int;
  #L11d05c.  v2.`kotlinx.coroutines.internal.ArrayQueue.c` @type ^`int` := v3;
  #L11d060.  v0:= v2.`kotlinx.coroutines.internal.ArrayQueue.b` @type ^`int`;
  #L11d064.  if v3 != v0 then goto L11d06e;
  #L11d068.  call `a`(v2) @signature `Lkotlinx/coroutines/internal/ArrayQueue;.a:()V` @kind direct;
  #L11d06e.  return @kind void;
}
procedure `void` `clear`(`kotlinx.coroutines.internal.ArrayQueue` v1 @kind this) @signature `Lkotlinx/coroutines/internal/ArrayQueue;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L11d080.  v0:= 0I;
  #L11d082.  v1.`kotlinx.coroutines.internal.ArrayQueue.b` @type ^`int` := v0;
  #L11d086.  v1.`kotlinx.coroutines.internal.ArrayQueue.c` @type ^`int` := v0;
  #L11d08a.  v0:= v1.`kotlinx.coroutines.internal.ArrayQueue.a` @type ^`java.lang.Object`[] @kind object;
  #L11d08e.  v0:= length @variable v0;
  #L11d090.  v0:= new `java.lang.Object`[v0];
  #L11d094.  v1.`kotlinx.coroutines.internal.ArrayQueue.a` @type ^`java.lang.Object`[] := v0 @kind object;
  #L11d098.  return @kind void;
}
procedure `boolean` `isEmpty`(`kotlinx.coroutines.internal.ArrayQueue` v2 @kind this) @signature `Lkotlinx/coroutines/internal/ArrayQueue;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L11cfb4.  v0:= v2.`kotlinx.coroutines.internal.ArrayQueue.b` @type ^`int`;
  #L11cfb8.  v1:= v2.`kotlinx.coroutines.internal.ArrayQueue.c` @type ^`int`;
  #L11cfbc.  if v0 != v1 then goto L11cfc4;
  #L11cfc0.  v0:= 1I;
  #L11cfc2.  goto L11cfc6;
  #L11cfc4.  v0:= 0I;
  #L11cfc6.  return v0;
}
procedure `java.lang.Object` `removeFirstOrNull`(`kotlinx.coroutines.internal.ArrayQueue` v4 @kind this) @signature `Lkotlinx/coroutines/internal/ArrayQueue;.removeFirstOrNull:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L11cfd8.  v0:= v4.`kotlinx.coroutines.internal.ArrayQueue.b` @type ^`int`;
  #L11cfdc.  v1:= v4.`kotlinx.coroutines.internal.ArrayQueue.c` @type ^`int`;
  #L11cfe0.  v2:= 0I;
  #L11cfe2.  if v0 != v1 then goto L11cfe8;
  #L11cfe6.  return v2 @kind object;
  #L11cfe8.  v1:= v4.`kotlinx.coroutines.internal.ArrayQueue.a` @type ^`java.lang.Object`[] @kind object;
  #L11cfec.  v3:= v1[v0] @kind object;
  #L11cff0.  v1[v0]:= v2 @kind object;
  #L11cff4.  v0:= v0 + 1;
  #L11cff8.  v1:= length @variable v1;
  #L11cffa.  v1:= v1 + -1;
  #L11cffe.  v0:= v0 ^& v1 @kind int;
  #L11d000.  v4.`kotlinx.coroutines.internal.ArrayQueue.b` @type ^`int` := v0;
  #L11d004.  v0:= "null cannot be cast to non-null type T of kotlinx.coroutines.internal.ArrayQueue" @kind object;
  #L11d008.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L11d00e.  return v3 @kind object;
}
