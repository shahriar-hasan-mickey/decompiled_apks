record `kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc` @kind class {
  `java.lang.Object` `kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc._affectedNode` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlinx.coroutines.internal.LockFreeLinkedListNode` `kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.node` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.internal.LockFreeLinkedListNode` `kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.queue` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L11fad8.  v0:= constclass @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` @kind object;
  #L11fadc.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L11fae0.  v2:= "_affectedNode" @kind object;
  #L11fae4.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L11faea.  v0:= temp @kind object;
  #L11faec.  `@@kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L11faf0.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L11fb04.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AbstractAtomicDesc;.<init>:()V` @kind direct;
  #L11fb0a.  v0.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.queue` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` := v1 @kind object;
  #L11fb0e.  v0.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.node` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` := v2 @kind object;
  #L11fb12.  v1:= 0I;
  #L11fb14.  v0.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc._affectedNode` @type ^`java.lang.Object` := v1 @kind object;
  #L11fb18.  return @kind void;
}
procedure `void` `finishOnSuccess`(`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;.finishOnSuccess:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @AccessFlag PROTECTED {
    temp;

  #L11fb2c.  v1:= v0.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.node` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11fb30.  v2:= v0.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.queue` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11fb34.  call `access$finishAdd`(v1, v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.access$finishAdd:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind static;
  #L11fb3a.  return @kind void;
}
procedure `void` `finishPrepare`(`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` v2 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v3 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;.finishPrepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L11fb4c.  v0:= `@@kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L11fb50.  v3:= v3.`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp.affected` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11fb54.  v1:= 0I;
  #L11fb56.  call temp:= `a`(v0, v2, v1, v3) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11fb5c.  return @kind void;
}
procedure `kotlinx.coroutines.internal.LockFreeLinkedListNode` `getAffectedNode`(`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` v1 @kind this) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;.getAffectedNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L11fa84.  v0:= v1.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc._affectedNode` @type ^`java.lang.Object` @kind object;
  #L11fa88.  v0:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v0 @kind object;
  #L11fa8c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.LockFreeLinkedListNode` `getOriginalNext`(`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` v1 @kind this) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;.getOriginalNext:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L11faa0.  v0:= v1.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.queue` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11faa4.  return v0 @kind object;
}
procedure `boolean` `retry`(`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;.retry:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Ljava/lang/Object;)Z` @AccessFlag PROTECTED {
    temp;

  #L11fa2c.  v1:= v0.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.queue` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11fa30.  if v2 == v1 then goto L11fa38;
  #L11fa34.  v1:= 1I;
  #L11fa36.  goto L11fa3a;
  #L11fa38.  v1:= 0I;
  #L11fa3a.  return v1;
}
procedure `kotlinx.coroutines.internal.LockFreeLinkedListNode` `takeAffectedNode`(`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` v1 @kind this, `kotlinx.coroutines.internal.OpDescriptor` v2 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;.takeAffectedNode:(Lkotlinx/coroutines/internal/OpDescriptor;)Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L11fab8.  v0:= v1.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.queue` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11fabc.  call temp:= `access$correctPrev`(v0, v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.access$correctPrev:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/OpDescriptor;)Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind static;
  #L11fac2.  v2:= temp @kind object;
  #L11fac4.  return v2 @kind object;
}
procedure `java.lang.Object` `updatedNext`(`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v3 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$AddLastDesc;.updatedNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11fa4c.  v3:= v1.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.node` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11fa50.  v0:= `@@kotlinx.coroutines.internal.LockFreeLinkedListNode.b` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L11fa54.  call temp:= `a`(v0, v3, v3, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11fa5a.  v2:= v1.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.node` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11fa5e.  v3:= `@@kotlinx.coroutines.internal.LockFreeLinkedListNode.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L11fa62.  v0:= v1.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.queue` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11fa66.  call temp:= `a`(v3, v2, v2, v0) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L11fa6c.  v2:= v1.`kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc.node` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L11fa70.  return v2 @kind object;
}
