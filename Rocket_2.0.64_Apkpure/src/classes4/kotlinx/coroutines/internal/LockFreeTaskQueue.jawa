record `kotlinx.coroutines.internal.LockFreeTaskQueue` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `kotlinx.coroutines.internal.LockFreeTaskQueue._cur` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.internal.LockFreeTaskQueue.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueue;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L121024.  v0:= constclass @type ^`kotlinx.coroutines.internal.LockFreeTaskQueue` @kind object;
  #L121028.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L12102c.  v2:= "_cur" @kind object;
  #L121030.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L121036.  v0:= temp @kind object;
  #L121038.  `@@kotlinx.coroutines.internal.LockFreeTaskQueue.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L12103c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.LockFreeTaskQueue` v2 @kind this, `boolean` v3 ) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueue;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L121050.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L121056.  v0:= new `kotlinx.coroutines.internal.LockFreeTaskQueueCore`;
  #L12105a.  v1:= 8I;
  #L12105e.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.<init>:(IZ)V` @kind direct;
  #L121064.  v2.`kotlinx.coroutines.internal.LockFreeTaskQueue._cur` @type ^`java.lang.Object` := v0 @kind object;
  #L121068.  return @kind void;
}
procedure `boolean` `addLast`(`kotlinx.coroutines.internal.LockFreeTaskQueue` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueue;.addLast:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L120f08.  v0:= v3.`kotlinx.coroutines.internal.LockFreeTaskQueue._cur` @type ^`java.lang.Object` @kind object;
  #L120f0c.  v0:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v0 @kind object;
  #L120f10.  call temp:= `addLast`(v0, v4) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.addLast:(Ljava/lang/Object;)I` @kind virtual;
  #L120f16.  v1:= temp;
  #L120f18.  v2:= 1I;
  #L120f1a.  if v1 == 0 then goto L120f42;
  #L120f1e.  if v1 == v2 then goto L120f2e;
  #L120f22.  v0:= 2I;
  #L120f24.  if v1 == v0 then goto L120f2a;
  #L120f28.  goto L120f08;
  #L120f2a.  v4:= 0I;
  #L120f2c.  return v4;
  #L120f2e.  v1:= `@@kotlinx.coroutines.internal.LockFreeTaskQueue.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L120f32.  call temp:= `next`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.next:()Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;` @kind virtual;
  #L120f38.  v2:= temp @kind object;
  #L120f3a.  call temp:= `a`(v1, v3, v0, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L120f40.  goto L120f08;
  #L120f42.  return v2;
}
procedure `void` `close`(`kotlinx.coroutines.internal.LockFreeTaskQueue` v3 @kind this) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueue;.close:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L12107c.  v0:= v3.`kotlinx.coroutines.internal.LockFreeTaskQueue._cur` @type ^`java.lang.Object` @kind object;
  #L121080.  v0:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v0 @kind object;
  #L121084.  call temp:= `close`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.close:()Z` @kind virtual;
  #L12108a.  v1:= temp;
  #L12108c.  if v1 == 0 then goto L121092;
  #L121090.  return @kind void;
  #L121092.  v1:= `@@kotlinx.coroutines.internal.LockFreeTaskQueue.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L121096.  call temp:= `next`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.next:()Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;` @kind virtual;
  #L12109c.  v2:= temp @kind object;
  #L12109e.  call temp:= `a`(v1, v3, v0, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1210a4.  goto L12107c;
}
procedure `int` `getSize`(`kotlinx.coroutines.internal.LockFreeTaskQueue` v1 @kind this) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueue;.getSize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L120f9c.  v0:= v1.`kotlinx.coroutines.internal.LockFreeTaskQueue._cur` @type ^`java.lang.Object` @kind object;
  #L120fa0.  v0:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v0 @kind object;
  #L120fa4.  call temp:= `getSize`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.getSize:()I` @kind virtual;
  #L120faa.  v0:= temp;
  #L120fac.  return v0;
}
procedure `boolean` `isClosed`(`kotlinx.coroutines.internal.LockFreeTaskQueue` v1 @kind this) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueue;.isClosed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L120f54.  v0:= v1.`kotlinx.coroutines.internal.LockFreeTaskQueue._cur` @type ^`java.lang.Object` @kind object;
  #L120f58.  v0:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v0 @kind object;
  #L120f5c.  call temp:= `isClosed`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.isClosed:()Z` @kind virtual;
  #L120f62.  v0:= temp;
  #L120f64.  return v0;
}
procedure `boolean` `isEmpty`(`kotlinx.coroutines.internal.LockFreeTaskQueue` v1 @kind this) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueue;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L120f78.  v0:= v1.`kotlinx.coroutines.internal.LockFreeTaskQueue._cur` @type ^`java.lang.Object` @kind object;
  #L120f7c.  v0:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v0 @kind object;
  #L120f80.  call temp:= `isEmpty`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.isEmpty:()Z` @kind virtual;
  #L120f86.  v0:= temp;
  #L120f88.  return v0;
}
procedure `java.util.List` `map`(`kotlinx.coroutines.internal.LockFreeTaskQueue` v1 @kind this, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueue;.map:(Lkotlin/jvm/functions/Function1;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L121000.  v0:= v1.`kotlinx.coroutines.internal.LockFreeTaskQueue._cur` @type ^`java.lang.Object` @kind object;
  #L121004.  v0:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v0 @kind object;
  #L121008.  call temp:= `map`(v0, v2) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.map:(Lkotlin/jvm/functions/Function1;)Ljava/util/List;` @kind virtual;
  #L12100e.  v2:= temp @kind object;
  #L121010.  return v2 @kind object;
}
procedure `java.lang.Object` `removeFirstOrNull`(`kotlinx.coroutines.internal.LockFreeTaskQueue` v3 @kind this) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueue;.removeFirstOrNull:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L120fc0.  v0:= v3.`kotlinx.coroutines.internal.LockFreeTaskQueue._cur` @type ^`java.lang.Object` @kind object;
  #L120fc4.  v0:= (`kotlinx.coroutines.internal.LockFreeTaskQueueCore`) v0 @kind object;
  #L120fc8.  call temp:= `removeFirstOrNull`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.removeFirstOrNull:()Ljava/lang/Object;` @kind virtual;
  #L120fce.  v1:= temp @kind object;
  #L120fd0.  v2:= `@@kotlinx.coroutines.internal.LockFreeTaskQueueCore.REMOVE_FROZEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L120fd4.  if v1 == v2 then goto L120fda;
  #L120fd8.  return v1 @kind object;
  #L120fda.  v1:= `@@kotlinx.coroutines.internal.LockFreeTaskQueue.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L120fde.  call temp:= `next`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;.next:()Lkotlinx/coroutines/internal/LockFreeTaskQueueCore;` @kind virtual;
  #L120fe4.  v2:= temp @kind object;
  #L120fe6.  call temp:= `a`(v1, v3, v0, v2) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L120fec.  goto L120fc0;
}
