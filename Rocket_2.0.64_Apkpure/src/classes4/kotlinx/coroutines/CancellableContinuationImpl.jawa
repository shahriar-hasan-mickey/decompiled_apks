record `kotlinx.coroutines.CancellableContinuationImpl` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.DispatchedTask` @kind class, `kotlinx.coroutines.CancellableContinuation` @kind interface, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface {
  `int` `kotlinx.coroutines.CancellableContinuationImpl._decision` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.CancellableContinuationImpl._state` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.CancellableContinuationImpl.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.CancellableContinuationImpl.b` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.DisposableHandle` `kotlinx.coroutines.CancellableContinuationImpl.c` @AccessFlag PRIVATE;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.CancellableContinuationImpl.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.CancellableContinuationImpl.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0ed89c.  v0:= constclass @type ^`kotlinx.coroutines.CancellableContinuationImpl` @kind object;
  #L0ed8a0.  v1:= "_decision" @kind object;
  #L0ed8a4.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L0ed8aa.  v0:= temp @kind object;
  #L0ed8ac.  `@@kotlinx.coroutines.CancellableContinuationImpl.d` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L0ed8b0.  v0:= constclass @type ^`kotlinx.coroutines.CancellableContinuationImpl` @kind object;
  #L0ed8b4.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L0ed8b8.  v2:= "_state" @kind object;
  #L0ed8bc.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L0ed8c2.  v0:= temp @kind object;
  #L0ed8c4.  `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L0ed8c8.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CancellableContinuationImpl` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0ed8dc.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/DispatchedTask;.<init>:(I)V` @kind direct;
  #L0ed8e2.  v0.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L0ed8e6.  call temp:= `getContext`(v1) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0ed8ec.  v1:= temp @kind object;
  #L0ed8ee.  v0.`kotlinx.coroutines.CancellableContinuationImpl.b` @type ^`kotlin.coroutines.CoroutineContext` := v1 @kind object;
  #L0ed8f2.  v1:= 0I;
  #L0ed8f4.  v0.`kotlinx.coroutines.CancellableContinuationImpl._decision` @type ^`int` := v1;
  #L0ed8f8.  v1:= `@@kotlinx.coroutines.a.a` @type ^`kotlinx.coroutines.a` @kind object;
  #L0ed8fc.  v0.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` := v1 @kind object;
  #L0ed900.  return @kind void;
}
procedure `java.lang.Void` `a`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.a:(Ljava/lang/Object;)Ljava/lang/Void;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0ed720.  v0:= new `java.lang.IllegalStateException`;
  #L0ed724.  v1:= "Already resumed, but proposed with update " @kind object;
  #L0ed728.  call temp:= `stringPlus`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0ed72e.  v3:= temp @kind object;
  #L0ed730.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ed736.  v3:= temp @kind object;
  #L0ed738.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0ed73e.  throw v0;
}
procedure `void` `b`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.b:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0ed914.  call temp:= `invoke`(v3, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ed91a.  goto L0ed942;
  #L0ed91c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0ed91e.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L0ed924.  v4:= temp @kind object;
  #L0ed926.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L0ed92a.  v1:= "Exception in invokeOnCancellation handler for " @kind object;
  #L0ed92e.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0ed934.  v1:= temp @kind object;
  #L0ed936.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0ed93c.  call `handleCoroutineException`(v4, v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L0ed942.  return @kind void;
  catch `java.lang.Throwable` @[L0ed914..L0ed91a] goto L0ed91c;
}
procedure `boolean` `c`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.c:(Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0ed24c.  call temp:= `isReusable`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isReusable:()Z` @kind direct;
  #L0ed252.  v0:= temp;
  #L0ed254.  if v0 != 0 then goto L0ed25c;
  #L0ed258.  v2:= 0I;
  #L0ed25a.  return v2;
  #L0ed25c.  v0:= v1.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0ed260.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L0ed264.  call temp:= `postponeCancellation`(v0, v2) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.postponeCancellation:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0ed26a.  v2:= temp;
  #L0ed26c.  return v2;
}
procedure `void` `d`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.d:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0edb14.  call temp:= `isReusable`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isReusable:()Z` @kind direct;
  #L0edb1a.  v0:= temp;
  #L0edb1c.  if v0 != 0 then goto L0edb26;
  #L0edb20.  call `detachChild$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.detachChild$kotlinx_coroutines_core:()V` @kind virtual;
  #L0edb26.  return @kind void;
}
procedure `void` `e`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `int` v2 ) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.e:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0edb38.  call temp:= `n`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.n:()Z` @kind direct;
  #L0edb3e.  v0:= temp;
  #L0edb40.  if v0 == 0 then goto L0edb46;
  #L0edb44.  return @kind void;
  #L0edb46.  call `dispatch`(v1, v2) @signature `Lkotlinx/coroutines/DispatchedTaskKt;.dispatch:(Lkotlinx/coroutines/DispatchedTask;I)V` @kind static;
  #L0edb4c.  return @kind void;
}
procedure `java.lang.String` `f`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.f:()Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L0ed608.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0ed60e.  v0:= temp @kind object;
  #L0ed610.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L0ed614.  if v1 == 0 then goto L0ed61e;
  #L0ed618.  v0:= "Active" @kind object;
  #L0ed61c.  goto L0ed630;
  #L0ed61e.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancelledContinuation` @kind boolean;
  #L0ed622.  if v0 == 0 then goto L0ed62c;
  #L0ed626.  v0:= "Cancelled" @kind object;
  #L0ed62a.  goto L0ed630;
  #L0ed62c.  v0:= "Completed" @kind object;
  #L0ed630.  return v0 @kind object;
}
procedure `kotlinx.coroutines.DisposableHandle` `g`(`kotlinx.coroutines.CancellableContinuationImpl` v7 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.g:()Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0ed7d4.  call temp:= `getContext`(v7) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L0ed7da.  v0:= temp @kind object;
  #L0ed7dc.  v1:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0ed7e0.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0ed7e6.  v0:= temp @kind object;
  #L0ed7e8.  v1:= v0 @kind object;
  #L0ed7ea.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L0ed7ee.  if v1 != 0 then goto L0ed7f6;
  #L0ed7f2.  v0:= 0I;
  #L0ed7f4.  return v0 @kind object;
  #L0ed7f6.  v2:= 1I;
  #L0ed7f8.  v3:= 0I;
  #L0ed7fa.  v4:= new `kotlinx.coroutines.ChildContinuation`;
  #L0ed7fe.  call `<init>`(v4, v7) @signature `Lkotlinx/coroutines/ChildContinuation;.<init>:(Lkotlinx/coroutines/CancellableContinuationImpl;)V` @kind direct;
  #L0ed804.  v5:= 2I;
  #L0ed806.  v6:= 0I;
  #L0ed808.  call temp:= `invokeOnCompletion$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.invokeOnCompletion$default:(Lkotlinx/coroutines/Job;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;` @kind static;
  #L0ed80e.  v0:= temp @kind object;
  #L0ed810.  v7.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` := v0 @kind object;
  #L0ed814.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CancelHandler` `h`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.h:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/CancelHandler;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0ed7a8.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.CancelHandler` @kind boolean;
  #L0ed7ac.  if v0 == 0 then goto L0ed7b6;
  #L0ed7b0.  v2:= (`kotlinx.coroutines.CancelHandler`) v2 @kind object;
  #L0ed7b4.  goto L0ed7c2;
  #L0ed7b6.  v0:= new `kotlinx.coroutines.r`;
  #L0ed7ba.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/r;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0ed7c0.  v2:= v0 @kind object;
  #L0ed7c2.  return v2 @kind object;
}
procedure `void` `i`(`kotlinx.coroutines.CancellableContinuationImpl` v3 @kind this, `kotlin.jvm.functions.Function1` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.i:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0edcc8.  v0:= new `java.lang.IllegalStateException`;
  #L0edccc.  v1:= new `java.lang.StringBuilder`;
  #L0edcd0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0edcd6.  v2:= "It's prohibited to register multiple handlers, tried to register " @kind object;
  #L0edcda.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0edce0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0edce6.  v4:= ", already has " @kind object;
  #L0edcea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0edcf0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0edcf6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0edcfc.  v4:= temp @kind object;
  #L0edcfe.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0edd04.  v4:= temp @kind object;
  #L0edd06.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0edd0c.  throw v0;
}
procedure `boolean` `isReusable`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isReusable:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L0ed2e4.  v0:= v1.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L0ed2e8.  call temp:= `isReusableMode`(v0) @signature `Lkotlinx/coroutines/DispatchedTaskKt;.isReusableMode:(I)Z` @kind static;
  #L0ed2ee.  v0:= temp;
  #L0ed2f0.  if v0 == 0 then goto L0ed30c;
  #L0ed2f4.  v0:= v1.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0ed2f8.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L0ed2fc.  call temp:= `isReusable`(v0) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.isReusable:()Z` @kind virtual;
  #L0ed302.  v0:= temp;
  #L0ed304.  if v0 == 0 then goto L0ed30c;
  #L0ed308.  v0:= 1I;
  #L0ed30a.  goto L0ed30e;
  #L0ed30c.  v0:= 0I;
  #L0ed30e.  return v0;
}
procedure `void` `j`(`kotlinx.coroutines.CancellableContinuationImpl` v3 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.j:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0edd4c.  v0:= v3.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0edd50.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind boolean;
  #L0edd54.  v2:= 0I;
  #L0edd56.  if v1 == 0 then goto L0edd60;
  #L0edd5a.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L0edd5e.  goto L0edd62;
  #L0edd60.  v0:= v2 @kind object;
  #L0edd62.  if v0 != 0 then goto L0edd68;
  #L0edd66.  goto L0edd70;
  #L0edd68.  call temp:= `tryReleaseClaimedContinuation`(v0, v3) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.tryReleaseClaimedContinuation:(Lkotlinx/coroutines/CancellableContinuation;)Ljava/lang/Throwable;` @kind virtual;
  #L0edd6e.  v2:= temp @kind object;
  #L0edd70.  if v2 != 0 then goto L0edd76;
  #L0edd74.  return @kind void;
  #L0edd76.  call `detachChild$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.detachChild$kotlinx_coroutines_core:()V` @kind virtual;
  #L0edd7c.  call temp:= `cancel`(v3, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.cancel:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0edd82.  return @kind void;
}
procedure `void` `k`(`kotlinx.coroutines.CancellableContinuationImpl` v8 @kind this, `java.lang.Object` v9 @kind object, `int` v10 , `kotlin.jvm.functions.Function1` v11 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.k:(Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0edde8.  v0:= v8.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L0eddec.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L0eddf0.  if v1 == 0 then goto L0ede2c;
  #L0eddf4.  v3:= v0 @kind object;
  #L0eddf6.  v3:= (`kotlinx.coroutines.NotCompleted`) v3 @kind object;
  #L0eddfa.  v7:= 0I;
  #L0eddfc.  v2:= v8 @kind object;
  #L0eddfe.  v4:= v9 @kind object;
  #L0ede00.  v5:= v10;
  #L0ede02.  v6:= v11 @kind object;
  #L0ede04.  call temp:= `m`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.m:(Lkotlinx/coroutines/NotCompleted;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0ede0a.  v1:= temp @kind object;
  #L0ede0c.  v2:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0ede10.  call temp:= `a`(v2, v8, v0, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0ede16.  v0:= temp;
  #L0ede18.  if v0 != 0 then goto L0ede1e;
  #L0ede1c.  goto L0edde8;
  #L0ede1e.  call `d`(v8) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.d:()V` @kind direct;
  #L0ede24.  call `e`(v8, v10) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.e:(I)V` @kind direct;
  #L0ede2a.  return @kind void;
  #L0ede2c.  v10:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancelledContinuation` @kind boolean;
  #L0ede30.  if v10 == 0 then goto L0ede56;
  #L0ede34.  v0:= (`kotlinx.coroutines.CancelledContinuation`) v0 @kind object;
  #L0ede38.  call temp:= `makeResumed`(v0) @signature `Lkotlinx/coroutines/CancelledContinuation;.makeResumed:()Z` @kind virtual;
  #L0ede3e.  v10:= temp;
  #L0ede40.  if v10 == 0 then goto L0ede56;
  #L0ede44.  if v11 != 0 then goto L0ede4a;
  #L0ede48.  goto L0ede54;
  #L0ede4a.  v9:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0ede4e.  call `callOnCancellation`(v8, v11, v9) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.callOnCancellation:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @kind virtual;
  #L0ede54.  return @kind void;
  #L0ede56.  call temp:= `a`(v8, v9) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.a:(Ljava/lang/Object;)Ljava/lang/Void;` @kind direct;
  #L0ede5c.  v9:= new `kotlin.KotlinNothingValueException`;
  #L0ede60.  call `<init>`(v9) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L0ede66.  throw v9;
}
procedure `void` `l`(`kotlinx.coroutines.CancellableContinuationImpl` v0 @kind object, `java.lang.Object` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function1` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.l:(Lkotlinx/coroutines/CancellableContinuationImpl;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L0eddb0.  if v5 != 0 then goto L0eddc6;
  #L0eddb4.  v4:= v4 ^& 4;
  #L0eddb8.  if v4 == 0 then goto L0eddbe;
  #L0eddbc.  v3:= 0I;
  #L0eddbe.  call `k`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.k:(Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0eddc4.  return @kind void;
  #L0eddc6.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0eddca.  v1:= "Super calls with default arguments not supported in this target, function: resumeImpl" @kind object;
  #L0eddce.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0eddd4.  throw v0;
}
procedure `java.lang.Object` `m`(`kotlinx.coroutines.CancellableContinuationImpl` v8 @kind this, `kotlinx.coroutines.NotCompleted` v9 @kind object, `java.lang.Object` v10 @kind object, `int` v11 , `kotlin.jvm.functions.Function1` v12 @kind object, `java.lang.Object` v13 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.m:(Lkotlinx/coroutines/NotCompleted;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0ed500.  v0:= instanceof @variable v10 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0ed504.  if v0 == 0 then goto L0ed50a;
  #L0ed508.  goto L0ed562;
  #L0ed50a.  call temp:= `isCancellableMode`(v11) @signature `Lkotlinx/coroutines/DispatchedTaskKt;.isCancellableMode:(I)Z` @kind static;
  #L0ed510.  v11:= temp;
  #L0ed512.  if v11 != 0 then goto L0ed51c;
  #L0ed516.  if v13 != 0 then goto L0ed51c;
  #L0ed51a.  goto L0ed562;
  #L0ed51c.  if v12 != 0 then goto L0ed534;
  #L0ed520.  v11:= instanceof @variable v9 @type ^`kotlinx.coroutines.CancelHandler` @kind boolean;
  #L0ed524.  if v11 == 0 then goto L0ed530;
  #L0ed528.  v11:= instanceof @variable v9 @type ^`kotlinx.coroutines.BeforeResumeCancelHandler` @kind boolean;
  #L0ed52c.  if v11 == 0 then goto L0ed534;
  #L0ed530.  if v13 == 0 then goto L0ed562;
  #L0ed534.  v11:= new `kotlinx.coroutines.i`;
  #L0ed538.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.CancelHandler` @kind boolean;
  #L0ed53c.  if v0 == 0 then goto L0ed546;
  #L0ed540.  v9:= (`kotlinx.coroutines.CancelHandler`) v9 @kind object;
  #L0ed544.  goto L0ed548;
  #L0ed546.  v9:= 0I;
  #L0ed548.  v2:= v9 @kind object;
  #L0ed54a.  v5:= 0I;
  #L0ed54c.  v6:= 16I;
  #L0ed550.  v7:= 0I;
  #L0ed552.  v0:= v11 @kind object;
  #L0ed554.  v1:= v10 @kind object;
  #L0ed556.  v3:= v12 @kind object;
  #L0ed558.  v4:= v13 @kind object;
  #L0ed55a.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/i;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/CancelHandler;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0ed560.  v10:= v11 @kind object;
  #L0ed562.  return v10 @kind object;
}
procedure `boolean` `n`(`kotlinx.coroutines.CancellableContinuationImpl` v4 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.n:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0ed364.  v0:= v4.`kotlinx.coroutines.CancellableContinuationImpl._decision` @type ^`int`;
  #L0ed368.  v1:= 0I;
  #L0ed36a.  v2:= 1I;
  #L0ed36c.  if v0 == 0 then goto L0ed38e;
  #L0ed370.  if v0 != v2 then goto L0ed376;
  #L0ed374.  return v1;
  #L0ed376.  v0:= new `java.lang.IllegalStateException`;
  #L0ed37a.  v1:= "Already resumed" @kind object;
  #L0ed37e.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ed384.  v1:= temp @kind object;
  #L0ed386.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0ed38c.  throw v0;
  #L0ed38e.  v0:= `@@kotlinx.coroutines.CancellableContinuationImpl.d` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L0ed392.  v3:= 2I;
  #L0ed394.  call temp:= `compareAndSet`(v0, v4, v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L0ed39a.  v0:= temp;
  #L0ed39c.  if v0 == 0 then goto L0ed364;
  #L0ed3a0.  return v2;
}
procedure `kotlinx.coroutines.internal.Symbol` `o`(`kotlinx.coroutines.CancellableContinuationImpl` v8 @kind this, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `kotlin.jvm.functions.Function1` v11 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.o:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0ed828.  v0:= v8.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L0ed82c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L0ed830.  if v1 == 0 then goto L0ed86c;
  #L0ed834.  v3:= v0 @kind object;
  #L0ed836.  v3:= (`kotlinx.coroutines.NotCompleted`) v3 @kind object;
  #L0ed83a.  v5:= v8.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L0ed83e.  v2:= v8 @kind object;
  #L0ed840.  v4:= v9 @kind object;
  #L0ed842.  v6:= v11 @kind object;
  #L0ed844.  v7:= v10 @kind object;
  #L0ed846.  call temp:= `m`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.m:(Lkotlinx/coroutines/NotCompleted;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L0ed84c.  v1:= temp @kind object;
  #L0ed84e.  v2:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0ed852.  call temp:= `a`(v2, v8, v0, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0ed858.  v0:= temp;
  #L0ed85a.  if v0 != 0 then goto L0ed860;
  #L0ed85e.  goto L0ed828;
  #L0ed860.  call `d`(v8) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.d:()V` @kind direct;
  #L0ed866.  v9:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0ed86a.  return v9 @kind object;
  #L0ed86c.  v9:= instanceof @variable v0 @type ^`kotlinx.coroutines.i` @kind boolean;
  #L0ed870.  v11:= 0I;
  #L0ed872.  if v9 == 0 then goto L0ed88a;
  #L0ed876.  if v10 == 0 then goto L0ed88a;
  #L0ed87a.  v0:= (`kotlinx.coroutines.i`) v0 @kind object;
  #L0ed87e.  v9:= v0.`kotlinx.coroutines.i.d` @type ^`java.lang.Object` @kind object;
  #L0ed882.  if v9 != v10 then goto L0ed88a;
  #L0ed886.  v11:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L0ed88a.  return v11 @kind object;
}
procedure `boolean` `p`(`kotlinx.coroutines.CancellableContinuationImpl` v3 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.p:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ed3b4.  v0:= v3.`kotlinx.coroutines.CancellableContinuationImpl._decision` @type ^`int`;
  #L0ed3b8.  v1:= 0I;
  #L0ed3ba.  if v0 == 0 then goto L0ed3de;
  #L0ed3be.  v2:= 2I;
  #L0ed3c0.  if v0 != v2 then goto L0ed3c6;
  #L0ed3c4.  return v1;
  #L0ed3c6.  v0:= new `java.lang.IllegalStateException`;
  #L0ed3ca.  v1:= "Already suspended" @kind object;
  #L0ed3ce.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ed3d4.  v1:= temp @kind object;
  #L0ed3d6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0ed3dc.  throw v0;
  #L0ed3de.  v0:= `@@kotlinx.coroutines.CancellableContinuationImpl.d` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L0ed3e2.  v2:= 1I;
  #L0ed3e4.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L0ed3ea.  v0:= temp;
  #L0ed3ec.  if v0 == 0 then goto L0ed3b4;
  #L0ed3f0.  return v2;
}
procedure `void` `callCancelHandler`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this, `kotlinx.coroutines.CancelHandler` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.callCancelHandler:(Lkotlinx/coroutines/CancelHandler;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0ed960.  call `invoke`(v3, v4) @signature `Lkotlinx/coroutines/CancelHandlerBase;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L0ed966.  goto L0ed98e;
  #L0ed968.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0ed96a.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L0ed970.  v4:= temp @kind object;
  #L0ed972.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L0ed976.  v1:= "Exception in invokeOnCancellation handler for " @kind object;
  #L0ed97a.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0ed980.  v1:= temp @kind object;
  #L0ed982.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0ed988.  call `handleCoroutineException`(v4, v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L0ed98e.  return @kind void;
  catch `java.lang.Throwable` @[L0ed960..L0ed966] goto L0ed968;
}
procedure `void` `callOnCancellation`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.callOnCancellation:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0ed9ac.  call temp:= `invoke`(v3, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0ed9b2.  goto L0ed9da;
  #L0ed9b4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0ed9b6.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L0ed9bc.  v4:= temp @kind object;
  #L0ed9be.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L0ed9c2.  v1:= "Exception in resume onCancellation handler for " @kind object;
  #L0ed9c6.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0ed9cc.  v1:= temp @kind object;
  #L0ed9ce.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L0ed9d4.  call `handleCoroutineException`(v4, v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L0ed9da.  return @kind void;
  catch `java.lang.Throwable` @[L0ed9ac..L0ed9b2] goto L0ed9b4;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.CancellableContinuationImpl` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0ed1e0.  v0:= v4.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L0ed1e4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L0ed1e8.  if v1 != 0 then goto L0ed1f0;
  #L0ed1ec.  v5:= 0I;
  #L0ed1ee.  return v5;
  #L0ed1f0.  v1:= new `kotlinx.coroutines.CancelledContinuation`;
  #L0ed1f4.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancelHandler` @kind boolean;
  #L0ed1f8.  call `<init>`(v1, v4, v5, v2) @signature `Lkotlinx/coroutines/CancelledContinuation;.<init>:(Lkotlin/coroutines/Continuation;Ljava/lang/Throwable;Z)V` @kind direct;
  #L0ed1fe.  v3:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0ed202.  call temp:= `a`(v3, v4, v0, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0ed208.  v1:= temp;
  #L0ed20a.  if v1 != 0 then goto L0ed210;
  #L0ed20e.  goto L0ed1e0;
  #L0ed210.  if v2 == 0 then goto L0ed21a;
  #L0ed214.  v0:= (`kotlinx.coroutines.CancelHandler`) v0 @kind object;
  #L0ed218.  goto L0ed21c;
  #L0ed21a.  v0:= 0I;
  #L0ed21c.  if v0 != 0 then goto L0ed222;
  #L0ed220.  goto L0ed228;
  #L0ed222.  call `callCancelHandler`(v4, v0, v5) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.callCancelHandler:(Lkotlinx/coroutines/CancelHandler;Ljava/lang/Throwable;)V` @kind virtual;
  #L0ed228.  call `d`(v4) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.d:()V` @kind direct;
  #L0ed22e.  v5:= v4.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L0ed232.  call `e`(v4, v5) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.e:(I)V` @kind direct;
  #L0ed238.  v5:= 1I;
  #L0ed23a.  return v5;
}
procedure `void` `cancelCompletedResult$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v10 @kind this, `java.lang.Object` v11 @kind object, `java.lang.Throwable` v12 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L0ed9f8.  v11:= v10.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L0ed9fc.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L0eda00.  if v0 != 0 then goto L0edaa4;
  #L0eda04.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0eda08.  if v0 == 0 then goto L0eda0e;
  #L0eda0c.  return @kind void;
  #L0eda0e.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.i` @kind boolean;
  #L0eda12.  if v0 == 0 then goto L0eda76;
  #L0eda16.  v0:= v11 @kind object;
  #L0eda18.  v0:= (`kotlinx.coroutines.i`) v0 @kind object;
  #L0eda1c.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/i;.c:()Z` @kind virtual;
  #L0eda22.  v1:= temp;
  #L0eda24.  v1:= v1 ^~ 1;
  #L0eda28.  if v1 == 0 then goto L0eda5e;
  #L0eda2c.  v2:= 0I;
  #L0eda2e.  v3:= 0I;
  #L0eda30.  v4:= 0I;
  #L0eda32.  v5:= 0I;
  #L0eda34.  v7:= 15I;
  #L0eda38.  v8:= 0I;
  #L0eda3a.  v1:= v0 @kind object;
  #L0eda3c.  v6:= v12 @kind object;
  #L0eda3e.  call temp:= `b`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/i;.b:(Lkotlinx/coroutines/i;Ljava/lang/Object;Lkotlinx/coroutines/CancelHandler;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/i;` @kind static;
  #L0eda44.  v1:= temp @kind object;
  #L0eda46.  v2:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0eda4a.  call temp:= `a`(v2, v10, v11, v1) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0eda50.  v11:= temp;
  #L0eda52.  if v11 == 0 then goto L0ed9f8;
  #L0eda56.  call `d`(v0, v10, v12) @signature `Lkotlinx/coroutines/i;.d:(Lkotlinx/coroutines/CancellableContinuationImpl;Ljava/lang/Throwable;)V` @kind virtual;
  #L0eda5c.  return @kind void;
  #L0eda5e.  v11:= new `java.lang.IllegalStateException`;
  #L0eda62.  v12:= "Must be called at most once" @kind object;
  #L0eda66.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0eda6c.  v12:= temp @kind object;
  #L0eda6e.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0eda74.  throw v11;
  #L0eda76.  v8:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0eda7a.  v9:= new `kotlinx.coroutines.i`;
  #L0eda7e.  v2:= 0I;
  #L0eda80.  v3:= 0I;
  #L0eda82.  v4:= 0I;
  #L0eda84.  v6:= 14I;
  #L0eda88.  v7:= 0I;
  #L0eda8a.  v0:= v9 @kind object;
  #L0eda8c.  v1:= v11 @kind object;
  #L0eda8e.  v5:= v12 @kind object;
  #L0eda90.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/i;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/CancelHandler;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0eda96.  call temp:= `a`(v8, v10, v11, v9) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0eda9c.  v11:= temp;
  #L0eda9e.  if v11 == 0 then goto L0ed9f8;
  #L0edaa2.  return @kind void;
  #L0edaa4.  v11:= new `java.lang.IllegalStateException`;
  #L0edaa8.  v12:= "Not completed" @kind object;
  #L0edaac.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0edab2.  v12:= temp @kind object;
  #L0edab4.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0edaba.  throw v11;
}
procedure `void` `completeResume`(`kotlinx.coroutines.CancellableContinuationImpl` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.completeResume:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L0edacc.  v1:= v0.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L0edad0.  call `e`(v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.e:(I)V` @kind direct;
  #L0edad6.  return @kind void;
}
procedure `void` `detachChild$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.detachChild$kotlinx_coroutines_core:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0edae8.  v0:= v1.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` @kind object;
  #L0edaec.  if v0 != 0 then goto L0edaf2;
  #L0edaf0.  return @kind void;
  #L0edaf2.  call `dispose`(v0) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L0edaf8.  v0:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L0edafc.  v1.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` := v0 @kind object;
  #L0edb00.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0ed780.  v0:= v2.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0ed784.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L0ed788.  if v1 == 0 then goto L0ed792;
  #L0ed78c.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L0ed790.  goto L0ed794;
  #L0ed792.  v0:= 0I;
  #L0ed794.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ed768.  v0:= v1.`kotlinx.coroutines.CancellableContinuationImpl.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L0ed76c.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getContinuationCancellationCause`(`kotlinx.coroutines.CancellableContinuationImpl` v0 @kind this, `kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContinuationCancellationCause:(Lkotlinx/coroutines/Job;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;

  #L0ed6dc.  call temp:= `getCancellationException`(v1) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L0ed6e2.  v1:= temp @kind object;
  #L0ed6e4.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `getDelegate$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getDelegate$kotlinx_coroutines_core:()Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0ed750.  v0:= v1.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0ed754.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getExceptionalResult$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getExceptionalResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;

  #L0ed6f8.  call temp:= `getExceptionalResult$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/DispatchedTask;.getExceptionalResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind super;
  #L0ed6fe.  v1:= temp @kind object;
  #L0ed700.  if v1 != 0 then goto L0ed708;
  #L0ed704.  v1:= 0I;
  #L0ed706.  goto L0ed70e;
  #L0ed708.  call temp:= `getDelegate$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getDelegate$kotlinx_coroutines_core:()Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0ed70e.  return v1 @kind object;
}
procedure `java.lang.Object` `getResult`(`kotlinx.coroutines.CancellableContinuationImpl` v3 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ed404.  call temp:= `isReusable`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isReusable:()Z` @kind direct;
  #L0ed40a.  v0:= temp;
  #L0ed40c.  call temp:= `p`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.p:()Z` @kind direct;
  #L0ed412.  v1:= temp;
  #L0ed414.  if v1 == 0 then goto L0ed43a;
  #L0ed418.  v1:= v3.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` @kind object;
  #L0ed41c.  if v1 != 0 then goto L0ed426;
  #L0ed420.  call temp:= `g`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.g:()Lkotlinx/coroutines/DisposableHandle;` @kind direct;
  #L0ed426.  if v0 == 0 then goto L0ed430;
  #L0ed42a.  call `j`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.j:()V` @kind direct;
  #L0ed430.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0ed436.  v0:= temp @kind object;
  #L0ed438.  return v0 @kind object;
  #L0ed43a.  if v0 == 0 then goto L0ed444;
  #L0ed43e.  call `j`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.j:()V` @kind direct;
  #L0ed444.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0ed44a.  v0:= temp @kind object;
  #L0ed44c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0ed450.  if v1 != 0 then goto L0ed4a8;
  #L0ed454.  v1:= v3.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L0ed458.  call temp:= `isCancellableMode`(v1) @signature `Lkotlinx/coroutines/DispatchedTaskKt;.isCancellableMode:(I)Z` @kind static;
  #L0ed45e.  v1:= temp;
  #L0ed460.  if v1 == 0 then goto L0ed49e;
  #L0ed464.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L0ed46a.  v1:= temp @kind object;
  #L0ed46c.  v2:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L0ed470.  call temp:= `get`(v1, v2) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0ed476.  v1:= temp @kind object;
  #L0ed478.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L0ed47c.  if v1 == 0 then goto L0ed49e;
  #L0ed480.  call temp:= `isActive`(v1) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L0ed486.  v2:= temp;
  #L0ed488.  if v2 == 0 then goto L0ed48e;
  #L0ed48c.  goto L0ed49e;
  #L0ed48e.  call temp:= `getCancellationException`(v1) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L0ed494.  v1:= temp @kind object;
  #L0ed496.  call `cancelCompletedResult$kotlinx_coroutines_core`(v3, v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L0ed49c.  throw v1;
  #L0ed49e.  call temp:= `getSuccessfulResult$kotlinx_coroutines_core`(v3, v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getSuccessfulResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0ed4a4.  v0:= temp @kind object;
  #L0ed4a6.  return v0 @kind object;
  #L0ed4a8.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L0ed4ac.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0ed4b0.  throw v0;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ed5f4.  v0:= 0I;
  #L0ed5f6.  return v0 @kind object;
}
procedure `java.lang.Object` `getState$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0ed4c4.  v0:= v1.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L0ed4c8.  return v0 @kind object;
}
procedure `java.lang.Object` `getSuccessfulResult$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getSuccessfulResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ed4dc.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.i` @kind boolean;
  #L0ed4e0.  if v0 == 0 then goto L0ed4ec;
  #L0ed4e4.  v2:= (`kotlinx.coroutines.i`) v2 @kind object;
  #L0ed4e8.  v2:= v2.`kotlinx.coroutines.i.a` @type ^`java.lang.Object` @kind object;
  #L0ed4ec.  return v2 @kind object;
}
procedure `void` `initCancellability`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0edb60.  call temp:= `g`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.g:()Lkotlinx/coroutines/DisposableHandle;` @kind direct;
  #L0edb66.  v0:= temp @kind object;
  #L0edb68.  if v0 != 0 then goto L0edb6e;
  #L0edb6c.  return @kind void;
  #L0edb6e.  call temp:= `isCompleted`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isCompleted:()Z` @kind virtual;
  #L0edb74.  v1:= temp;
  #L0edb76.  if v1 == 0 then goto L0edb88;
  #L0edb7a.  call `dispose`(v0) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L0edb80.  v0:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L0edb84.  v2.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` := v0 @kind object;
  #L0edb88.  return @kind void;
}
procedure `void` `invokeOnCancellation`(`kotlinx.coroutines.CancellableContinuationImpl` v11 @kind this, `kotlin.jvm.functions.Function1` v12 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.invokeOnCancellation:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L0edb9c.  call temp:= `h`(v11, v12) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.h:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/CancelHandler;` @kind direct;
  #L0edba2.  v8:= temp @kind object;
  #L0edba4.  v9:= v11.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L0edba8.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.a` @kind boolean;
  #L0edbac.  if v0 == 0 then goto L0edbc2;
  #L0edbb0.  v0:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0edbb4.  call temp:= `a`(v0, v11, v9, v8) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0edbba.  v0:= temp;
  #L0edbbc.  if v0 == 0 then goto L0edba4;
  #L0edbc0.  return @kind void;
  #L0edbc2.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.CancelHandler` @kind boolean;
  #L0edbc6.  if v0 == 0 then goto L0edbd2;
  #L0edbca.  call `i`(v11, v12, v9) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.i:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @kind direct;
  #L0edbd0.  goto L0edba4;
  #L0edbd2.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L0edbd6.  if v0 == 0 then goto L0edc16;
  #L0edbda.  v1:= v9 @kind object;
  #L0edbdc.  v1:= (`kotlinx.coroutines.CompletedExceptionally`) v1 @kind object;
  #L0edbe0.  call temp:= `makeHandled`(v1) @signature `Lkotlinx/coroutines/CompletedExceptionally;.makeHandled:()Z` @kind virtual;
  #L0edbe6.  v2:= temp;
  #L0edbe8.  if v2 != 0 then goto L0edbf2;
  #L0edbec.  call `i`(v11, v12, v9) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.i:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @kind direct;
  #L0edbf2.  v2:= instanceof @variable v9 @type ^`kotlinx.coroutines.CancelledContinuation` @kind boolean;
  #L0edbf6.  if v2 == 0 then goto L0edc14;
  #L0edbfa.  v2:= 0I;
  #L0edbfc.  if v0 == 0 then goto L0edc02;
  #L0edc00.  goto L0edc04;
  #L0edc02.  v1:= v2 @kind object;
  #L0edc04.  if v1 != 0 then goto L0edc0a;
  #L0edc08.  goto L0edc0e;
  #L0edc0a.  v2:= v1.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L0edc0e.  call `b`(v11, v12, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.b:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @kind direct;
  #L0edc14.  return @kind void;
  #L0edc16.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.i` @kind boolean;
  #L0edc1a.  if v0 == 0 then goto L0edc7e;
  #L0edc1e.  v0:= v9 @kind object;
  #L0edc20.  v0:= (`kotlinx.coroutines.i`) v0 @kind object;
  #L0edc24.  v1:= v0.`kotlinx.coroutines.i.b` @type ^`kotlinx.coroutines.CancelHandler` @kind object;
  #L0edc28.  if v1 == 0 then goto L0edc32;
  #L0edc2c.  call `i`(v11, v12, v9) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.i:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @kind direct;
  #L0edc32.  v1:= instanceof @variable v8 @type ^`kotlinx.coroutines.BeforeResumeCancelHandler` @kind boolean;
  #L0edc36.  if v1 == 0 then goto L0edc3c;
  #L0edc3a.  return @kind void;
  #L0edc3c.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/i;.c:()Z` @kind virtual;
  #L0edc42.  v1:= temp;
  #L0edc44.  if v1 == 0 then goto L0edc54;
  #L0edc48.  v0:= v0.`kotlinx.coroutines.i.e` @type ^`java.lang.Throwable` @kind object;
  #L0edc4c.  call `b`(v11, v12, v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.b:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @kind direct;
  #L0edc52.  return @kind void;
  #L0edc54.  v1:= 0I;
  #L0edc56.  v3:= 0I;
  #L0edc58.  v4:= 0I;
  #L0edc5a.  v5:= 0I;
  #L0edc5c.  v6:= 29I;
  #L0edc60.  v7:= 0I;
  #L0edc62.  v2:= v8 @kind object;
  #L0edc64.  call temp:= `b`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/i;.b:(Lkotlinx/coroutines/i;Ljava/lang/Object;Lkotlinx/coroutines/CancelHandler;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/i;` @kind static;
  #L0edc6a.  v0:= temp @kind object;
  #L0edc6c.  v1:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0edc70.  call temp:= `a`(v1, v11, v9, v0) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0edc76.  v0:= temp;
  #L0edc78.  if v0 == 0 then goto L0edba4;
  #L0edc7c.  return @kind void;
  #L0edc7e.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.BeforeResumeCancelHandler` @kind boolean;
  #L0edc82.  if v0 == 0 then goto L0edc88;
  #L0edc86.  return @kind void;
  #L0edc88.  v10:= new `kotlinx.coroutines.i`;
  #L0edc8c.  v3:= 0I;
  #L0edc8e.  v4:= 0I;
  #L0edc90.  v5:= 0I;
  #L0edc92.  v6:= 28I;
  #L0edc96.  v7:= 0I;
  #L0edc98.  v0:= v10 @kind object;
  #L0edc9a.  v1:= v9 @kind object;
  #L0edc9c.  v2:= v8 @kind object;
  #L0edc9e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/i;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/CancelHandler;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0edca4.  v0:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L0edca8.  call temp:= `a`(v0, v11, v9, v10) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0edcae.  v0:= temp;
  #L0edcb0.  if v0 == 0 then goto L0edba4;
  #L0edcb4.  return @kind void;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ed280.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0ed286.  v0:= temp @kind object;
  #L0ed288.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L0ed28c.  return v0;
}
procedure `boolean` `isCancelled`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isCancelled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ed2a0.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0ed2a6.  v0:= temp @kind object;
  #L0ed2a8.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancelledContinuation` @kind boolean;
  #L0ed2ac.  return v0;
}
procedure `boolean` `isCompleted`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isCompleted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ed2c0.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0ed2c6.  v0:= temp @kind object;
  #L0ed2c8.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L0ed2cc.  v0:= v0 ^~ 1;
  #L0ed2d0.  return v0;
}
procedure `java.lang.String` `nameString`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.nameString:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L0ed644.  v0:= "CancellableContinuation" @kind object;
  #L0ed648.  return v0 @kind object;
}
procedure `void` `parentCancelled$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.parentCancelled$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0edd20.  call temp:= `c`(v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.c:(Ljava/lang/Throwable;)Z` @kind direct;
  #L0edd26.  v0:= temp;
  #L0edd28.  if v0 == 0 then goto L0edd2e;
  #L0edd2c.  return @kind void;
  #L0edd2e.  call temp:= `cancel`(v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.cancel:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L0edd34.  call `d`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.d:()V` @kind direct;
  #L0edd3a.  return @kind void;
}
procedure `boolean` `resetStateReusable`(`kotlinx.coroutines.CancellableContinuationImpl` v3 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resetStateReusable:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0ed320.  v0:= v3.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L0ed324.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.i` @kind boolean;
  #L0ed328.  v2:= 0I;
  #L0ed32a.  if v1 == 0 then goto L0ed342;
  #L0ed32e.  v0:= (`kotlinx.coroutines.i`) v0 @kind object;
  #L0ed332.  v0:= v0.`kotlinx.coroutines.i.d` @type ^`java.lang.Object` @kind object;
  #L0ed336.  if v0 == 0 then goto L0ed342;
  #L0ed33a.  call `detachChild$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.detachChild$kotlinx_coroutines_core:()V` @kind virtual;
  #L0ed340.  return v2;
  #L0ed342.  v3.`kotlinx.coroutines.CancellableContinuationImpl._decision` @type ^`int` := v2;
  #L0ed346.  v0:= `@@kotlinx.coroutines.a.a` @type ^`kotlinx.coroutines.a` @kind object;
  #L0ed34a.  v3.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` := v0 @kind object;
  #L0ed34e.  v0:= 1I;
  #L0ed350.  return v0;
}
procedure `void` `resume`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resume:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0edd94.  v0:= v1.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L0edd98.  call `k`(v1, v2, v0, v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.k:(Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V` @kind direct;
  #L0edd9e.  return @kind void;
}
procedure `void` `resumeUndispatched`(`kotlinx.coroutines.CancellableContinuationImpl` v6 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resumeUndispatched:(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0ede78.  v0:= v6.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0ede7c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind boolean;
  #L0ede80.  v2:= 0I;
  #L0ede82.  if v1 == 0 then goto L0ede8c;
  #L0ede86.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L0ede8a.  goto L0ede8e;
  #L0ede8c.  v0:= v2 @kind object;
  #L0ede8e.  if v0 != 0 then goto L0ede94;
  #L0ede92.  goto L0ede98;
  #L0ede94.  v2:= v0.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L0ede98.  if v2 != v7 then goto L0edea2;
  #L0ede9c.  v7:= 4I;
  #L0ede9e.  v2:= 4I;
  #L0edea0.  goto L0edea8;
  #L0edea2.  v7:= v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L0edea6.  v2:= v7;
  #L0edea8.  v3:= 0I;
  #L0edeaa.  v4:= 4I;
  #L0edeac.  v5:= 0I;
  #L0edeae.  v0:= v6 @kind object;
  #L0edeb0.  v1:= v8 @kind object;
  #L0edeb2.  call `l`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.l:(Lkotlinx/coroutines/CancellableContinuationImpl;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L0edeb8.  return @kind void;
}
procedure `void` `resumeUndispatchedWithException`(`kotlinx.coroutines.CancellableContinuationImpl` v9 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v10 @kind object, `java.lang.Throwable` v11 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resumeUndispatchedWithException:(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L0edecc.  v0:= v9.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0eded0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind boolean;
  #L0eded4.  v2:= 0I;
  #L0eded6.  if v1 == 0 then goto L0edee0;
  #L0ededa.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L0edede.  goto L0edee2;
  #L0edee0.  v0:= v2 @kind object;
  #L0edee2.  v4:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L0edee6.  v1:= 0I;
  #L0edee8.  v3:= 2I;
  #L0edeea.  call `<init>`(v4, v11, v1, v3, v2) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0edef0.  if v0 != 0 then goto L0edef6;
  #L0edef4.  goto L0edefa;
  #L0edef6.  v2:= v0.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L0edefa.  if v2 != v10 then goto L0edf04;
  #L0edefe.  v10:= 4I;
  #L0edf00.  v5:= 4I;
  #L0edf02.  goto L0edf0a;
  #L0edf04.  v10:= v9.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L0edf08.  v5:= v10;
  #L0edf0a.  v6:= 0I;
  #L0edf0c.  v7:= 4I;
  #L0edf0e.  v8:= 0I;
  #L0edf10.  v3:= v9 @kind object;
  #L0edf12.  call `l`(v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.l:(Lkotlinx/coroutines/CancellableContinuationImpl;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L0edf18.  return @kind void;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.CancellableContinuationImpl` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0edf2c.  call temp:= `toState`(v7, v6) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState:(Ljava/lang/Object;Lkotlinx/coroutines/CancellableContinuation;)Ljava/lang/Object;` @kind static;
  #L0edf32.  v1:= temp @kind object;
  #L0edf34.  v2:= v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L0edf38.  v3:= 0I;
  #L0edf3a.  v4:= 4I;
  #L0edf3c.  v5:= 0I;
  #L0edf3e.  v0:= v6 @kind object;
  #L0edf40.  call `l`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.l:(Lkotlinx/coroutines/CancellableContinuationImpl;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L0edf46.  return @kind void;
}
procedure `java.lang.Object` `takeState$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.takeState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ed574.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L0ed57a.  v0:= temp @kind object;
  #L0ed57c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0ed65c.  v0:= new `java.lang.StringBuilder`;
  #L0ed660.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0ed666.  call temp:= `nameString`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.nameString:()Ljava/lang/String;` @kind virtual;
  #L0ed66c.  v1:= temp @kind object;
  #L0ed66e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ed674.  v1:= 40I;
  #L0ed678.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ed67e.  v1:= v2.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L0ed682.  call temp:= `toDebugString`(v1) @signature `Lkotlinx/coroutines/DebugStringsKt;.toDebugString:(Lkotlin/coroutines/Continuation;)Ljava/lang/String;` @kind static;
  #L0ed688.  v1:= temp @kind object;
  #L0ed68a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ed690.  v1:= "){" @kind object;
  #L0ed694.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ed69a.  call temp:= `f`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.f:()Ljava/lang/String;` @kind direct;
  #L0ed6a0.  v1:= temp @kind object;
  #L0ed6a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ed6a8.  v1:= "}@" @kind object;
  #L0ed6ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ed6b2.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0ed6b8.  v1:= temp @kind object;
  #L0ed6ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ed6c0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ed6c6.  v0:= temp @kind object;
  #L0ed6c8.  return v0 @kind object;
}
procedure `java.lang.Object` `tryResume`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0ed590.  v0:= 0I;
  #L0ed592.  call temp:= `o`(v1, v2, v3, v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.o:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/Symbol;` @kind direct;
  #L0ed598.  v2:= temp @kind object;
  #L0ed59a.  return v2 @kind object;
}
procedure `java.lang.Object` `tryResume`(`kotlinx.coroutines.CancellableContinuationImpl` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L0ed5ac.  call temp:= `o`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.o:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/Symbol;` @kind direct;
  #L0ed5b2.  v1:= temp @kind object;
  #L0ed5b4.  return v1 @kind object;
}
procedure `java.lang.Object` `tryResumeWithException`(`kotlinx.coroutines.CancellableContinuationImpl` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.tryResumeWithException:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0ed5c8.  v0:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L0ed5cc.  v1:= 0I;
  #L0ed5ce.  v2:= 2I;
  #L0ed5d0.  v3:= 0I;
  #L0ed5d2.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0ed5d8.  call temp:= `o`(v4, v0, v3, v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.o:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/Symbol;` @kind direct;
  #L0ed5de.  v5:= temp @kind object;
  #L0ed5e0.  return v5 @kind object;
}
