record `kotlinx.coroutines.ThreadContextElementKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.ThreadContextElement` `asContextElement`(`java.lang.ThreadLocal` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElementKt;.asContextElement:(Ljava/lang/ThreadLocal;Ljava/lang/Object;)Lkotlinx/coroutines/ThreadContextElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f7048.  v0:= new `kotlinx.coroutines.internal.ThreadLocalElement`;
  #L0f704c.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.<init>:(Ljava/lang/Object;Ljava/lang/ThreadLocal;)V` @kind direct;
  #L0f7052.  return v0 @kind object;
}
procedure `kotlinx.coroutines.ThreadContextElement` `asContextElement$default`(`java.lang.ThreadLocal` v0 @kind object, `java.lang.Object` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElementKt;.asContextElement$default:(Ljava/lang/ThreadLocal;Ljava/lang/Object;ILjava/lang/Object;)Lkotlinx/coroutines/ThreadContextElement;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f701c.  v2:= v2 ^& 1;
  #L0f7020.  if v2 == 0 then goto L0f702c;
  #L0f7024.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L0f702a.  v1:= temp @kind object;
  #L0f702c.  call temp:= `asContextElement`(v0, v1) @signature `Lkotlinx/coroutines/ThreadContextElementKt;.asContextElement:(Ljava/lang/ThreadLocal;Ljava/lang/Object;)Lkotlinx/coroutines/ThreadContextElement;` @kind static;
  #L0f7032.  v0:= temp @kind object;
  #L0f7034.  return v0 @kind object;
}
procedure `java.lang.Object` `ensurePresent`(`java.lang.ThreadLocal` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElementKt;.ensurePresent:(Ljava/lang/ThreadLocal;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L0f6f50.  call temp:= `getContext`(v3) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f6f56.  v0:= temp @kind object;
  #L0f6f58.  v1:= new `kotlinx.coroutines.internal.ThreadLocalKey`;
  #L0f6f5c.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.<init>:(Ljava/lang/ThreadLocal;)V` @kind direct;
  #L0f6f62.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f6f68.  v0:= temp @kind object;
  #L0f6f6a.  if v0 == 0 then goto L0f6f72;
  #L0f6f6e.  v0:= 1I;
  #L0f6f70.  goto L0f6f74;
  #L0f6f72.  v0:= 0I;
  #L0f6f74.  if v0 == 0 then goto L0f6f7e;
  #L0f6f78.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f6f7c.  return v2 @kind object;
  #L0f6f7e.  v0:= new `java.lang.StringBuilder`;
  #L0f6f82.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f6f88.  v1:= "ThreadLocal " @kind object;
  #L0f6f8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f6f92.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f6f98.  v2:= " is missing from context " @kind object;
  #L0f6f9c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f6fa2.  call temp:= `getContext`(v3) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f6fa8.  v2:= temp @kind object;
  #L0f6faa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f6fb0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f6fb6.  v2:= temp @kind object;
  #L0f6fb8.  v3:= new `java.lang.IllegalStateException`;
  #L0f6fbc.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f6fc2.  v2:= temp @kind object;
  #L0f6fc4.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f6fca.  throw v3;
}
procedure `java.lang.Object` `isPresent`(`java.lang.ThreadLocal` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElementKt;.isPresent:(Ljava/lang/ThreadLocal;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L0f6fdc.  call temp:= `getContext`(v2) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f6fe2.  v2:= temp @kind object;
  #L0f6fe4.  v0:= new `kotlinx.coroutines.internal.ThreadLocalKey`;
  #L0f6fe8.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.<init>:(Ljava/lang/ThreadLocal;)V` @kind direct;
  #L0f6fee.  call temp:= `get`(v2, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0f6ff4.  v1:= temp @kind object;
  #L0f6ff6.  if v1 == 0 then goto L0f6ffe;
  #L0f6ffa.  v1:= 1I;
  #L0f6ffc.  goto L0f7000;
  #L0f6ffe.  v1:= 0I;
  #L0f7000.  call temp:= `boxBoolean`(v1) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L0f7006.  v1:= temp @kind object;
  #L0f7008.  return v1 @kind object;
}
