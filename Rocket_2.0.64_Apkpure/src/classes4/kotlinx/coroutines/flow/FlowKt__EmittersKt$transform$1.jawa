record `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L10cec4.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.c` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L10cec8.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.d` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L10cecc.  v1:= 2I;
  #L10cece.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L10ced4.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10ce9c.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1`;
  #L10cea0.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L10cea4.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L10cea8.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10ceae.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.b` @type ^`java.lang.Object` := v4 @kind object;
  #L10ceb2.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L10cd8c.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L10cd90.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L10cd94.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L10cd9a.  v1:= temp @kind object;
  #L10cd9c.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L10cdb0.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L10cdb6.  v1:= temp @kind object;
  #L10cdb8.  v1:= (`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1`) v1 @kind object;
  #L10cdbc.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10cdc0.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L10cdc6.  v1:= temp @kind object;
  #L10cdc8.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L10ce24.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10ce2a.  v0:= temp @kind object;
  #L10ce2c.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.a` @type ^`int`;
  #L10ce30.  v2:= 1I;
  #L10ce32.  if v1 == 0 then goto L10ce52;
  #L10ce36.  if v1 != v2 then goto L10ce42;
  #L10ce3a.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10ce40.  goto L10ce84;
  #L10ce42.  v6:= new `java.lang.IllegalStateException`;
  #L10ce46.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10ce4a.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10ce50.  throw v6;
  #L10ce52.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10ce58.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.b` @type ^`java.lang.Object` @kind object;
  #L10ce5c.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L10ce60.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L10ce64.  v3:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1`;
  #L10ce68.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L10ce6c.  call `<init>`(v3, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L10ce72.  v5.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.a` @type ^`int` := v2;
  #L10ce76.  call temp:= `collect`(v1, v3, v5) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10ce7c.  v6:= temp @kind object;
  #L10ce7e.  if v6 != v0 then goto L10ce84;
  #L10ce82.  return v0 @kind object;
  #L10ce84.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10ce88.  return v6 @kind object;
}
procedure `java.lang.Object` `invokeSuspend$$forInline`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.invokeSuspend$$forInline:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10cddc.  v4:= v3.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.b` @type ^`java.lang.Object` @kind object;
  #L10cde0.  v4:= (`kotlinx.coroutines.flow.FlowCollector`) v4 @kind object;
  #L10cde4.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L10cde8.  v1:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1`;
  #L10cdec.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L10cdf0.  call `<init>`(v1, v2, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L10cdf6.  v4:= 0I;
  #L10cdf8.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10cdfe.  call temp:= `collect`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10ce04.  v4:= 1I;
  #L10ce06.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10ce0c.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10ce10.  return v4 @kind object;
}
