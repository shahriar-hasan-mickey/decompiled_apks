record `kotlinx.coroutines.flow.p` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.SharingStarted` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.p` v0 @kind this) @signature `Lkotlinx/coroutines/flow/p;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L118648.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11864e.  return @kind void;
}
procedure `kotlinx.coroutines.flow.Flow` `command`(`kotlinx.coroutines.flow.p` v0 @kind this, `kotlinx.coroutines.flow.StateFlow` v1 @kind object) @signature `Lkotlinx/coroutines/flow/p;.command:(Lkotlinx/coroutines/flow/StateFlow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC {
    temp;

  #L118628.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L11862c.  call temp:= `flowOf`(v1) @signature `Lkotlinx/coroutines/flow/FlowKt;.flowOf:(Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L118632.  v1:= temp @kind object;
  #L118634.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.flow.p` v1 @kind this) @signature `Lkotlinx/coroutines/flow/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L118610.  v0:= "SharingStarted.Eagerly" @kind object;
  #L118614.  return v0 @kind object;
}
