record `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L11562c.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L115630.  v1:= 3I;
  #L115632.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L115638.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1154e4.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L1154e8.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L1154ec.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L1154f0.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1154f6.  v1:= temp @kind object;
  #L1154f8.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L11550c.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1`;
  #L115510.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L115514.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11551a.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` := v3 @kind object;
  #L11551e.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.c` @type ^`java.lang.Object` := v4 @kind object;
  #L115522.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L115526.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L11552c.  v3:= temp @kind object;
  #L11552e.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L115588.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11558e.  v0:= temp @kind object;
  #L115590.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.a` @type ^`int`;
  #L115594.  v2:= 2I;
  #L115596.  v3:= 1I;
  #L115598.  if v1 == 0 then goto L1155cc;
  #L11559c.  if v1 == v3 then goto L1155bc;
  #L1155a0.  if v1 != v2 then goto L1155ac;
  #L1155a4.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1155aa.  goto L115616;
  #L1155ac.  v6:= new `java.lang.IllegalStateException`;
  #L1155b0.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1155b4.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1155ba.  throw v6;
  #L1155bc.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` @kind object;
  #L1155c0.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L1155c4.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1155ca.  goto L1155fe;
  #L1155cc.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1155d2.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` @kind object;
  #L1155d6.  v1:= v6 @kind object;
  #L1155d8.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L1155dc.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.c` @type ^`java.lang.Object` @kind object;
  #L1155e0.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L1155e4.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L1155e8.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` := v1 @kind object;
  #L1155ec.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.a` @type ^`int` := v3;
  #L1155f0.  call temp:= `invoke`(v4, v6, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1155f6.  v6:= temp @kind object;
  #L1155f8.  if v6 != v0 then goto L1155fe;
  #L1155fc.  return v0 @kind object;
  #L1155fe.  v3:= 0I;
  #L115600.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` := v3 @kind object;
  #L115604.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.a` @type ^`int` := v2;
  #L115608.  call temp:= `emit`(v1, v6, v5) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L11560e.  v6:= temp @kind object;
  #L115610.  if v6 != v0 then goto L115616;
  #L115614.  return v0 @kind object;
  #L115616.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11561a.  return v6 @kind object;
}
procedure `java.lang.Object` `invokeSuspend$$forInline`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invokeSuspend$$forInline:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L115540.  v3:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` @kind object;
  #L115544.  v3:= (`kotlinx.coroutines.flow.FlowCollector`) v3 @kind object;
  #L115548.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.c` @type ^`java.lang.Object` @kind object;
  #L11554c.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L115550.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L115554.  call temp:= `invoke`(v1, v0, v2) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L11555a.  v0:= temp @kind object;
  #L11555c.  v1:= 0I;
  #L11555e.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L115564.  call temp:= `emit`(v3, v0, v2) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L11556a.  v3:= 1I;
  #L11556c.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L115572.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L115576.  return v3 @kind object;
}
