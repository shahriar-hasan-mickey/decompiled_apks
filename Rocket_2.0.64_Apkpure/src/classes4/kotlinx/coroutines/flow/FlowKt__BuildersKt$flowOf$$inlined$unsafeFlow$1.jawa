record `kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `java.lang.Object`[] `kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1;.<init>:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L10a06c.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L10a070.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10a076.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1` v7 @kind this, `kotlinx.coroutines.flow.FlowCollector` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L109f84.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1` @kind boolean;
  #L109f88.  if v0 == 0 then goto L109faa;
  #L109f8c.  v0:= v9 @kind object;
  #L109f8e.  v0:= (`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1`) v0 @kind object;
  #L109f92.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L109f96.  v2:= -2147483648I;
  #L109f9a.  v3:= v1 ^& v2 @kind int;
  #L109f9e.  if v3 == 0 then goto L109faa;
  #L109fa2.  v1:= v1 - v2 @kind int;
  #L109fa4.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.b` @type ^`int` := v1;
  #L109fa8.  goto L109fb4;
  #L109faa.  v0:= new `kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1`;
  #L109fae.  call `<init>`(v0, v7, v9) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L109fb4.  v9:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.a` @type ^`java.lang.Object` @kind object;
  #L109fb8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L109fbe.  v1:= temp @kind object;
  #L109fc0.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L109fc4.  v3:= 1I;
  #L109fc6.  if v2 == 0 then goto L10a008;
  #L109fca.  if v2 != v3 then goto L109ff8;
  #L109fce.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.g` @type ^`int`;
  #L109fd2.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.f` @type ^`int`;
  #L109fd6.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` @kind object;
  #L109fda.  v4:= (`kotlinx.coroutines.flow.FlowCollector`) v4 @kind object;
  #L109fde.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` @kind object;
  #L109fe2.  v5:= (`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1`) v5 @kind object;
  #L109fe6.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L109fec.  v9:= v4 @kind object;
  #L109fee.  v6:= v1 @kind object;
  #L109ff0.  v1:= v0 @kind object;
  #L109ff2.  v0:= v2;
  #L109ff4.  v2:= v6 @kind object;
  #L109ff6.  goto L10a022;
  #L109ff8.  v8:= new `java.lang.IllegalStateException`;
  #L109ffc.  v9:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10a000.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10a006.  throw v8;
  #L10a008.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10a00e.  v9:= 0I;
  #L10a010.  v2:= v7.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1.a` @type ^`java.lang.Object`[] @kind object;
  #L10a014.  v2:= length @variable v2;
  #L10a016.  v5:= v7 @kind object;
  #L10a018.  v9:= v8 @kind object;
  #L10a01a.  v8:= v2;
  #L10a01c.  v2:= v1 @kind object;
  #L10a01e.  v1:= v0 @kind object;
  #L10a020.  v0:= 0I;
  #L10a022.  if v0 >= v8 then goto L10a054;
  #L10a026.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1.a` @type ^`java.lang.Object`[] @kind object;
  #L10a02a.  v4:= v4[v0] @kind object;
  #L10a02e.  v0:= v0 + 1;
  #L10a032.  v1.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` := v5 @kind object;
  #L10a036.  v1.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` := v9 @kind object;
  #L10a03a.  v1.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.f` @type ^`int` := v0;
  #L10a03e.  v1.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.g` @type ^`int` := v8;
  #L10a042.  v1.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.b` @type ^`int` := v3;
  #L10a046.  call temp:= `emit`(v9, v4, v1) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10a04c.  v4:= temp @kind object;
  #L10a04e.  if v4 != v2 then goto L10a022;
  #L10a052.  return v2 @kind object;
  #L10a054.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10a058.  return v8 @kind object;
}
