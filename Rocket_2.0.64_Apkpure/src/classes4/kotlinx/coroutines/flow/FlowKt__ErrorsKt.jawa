record `kotlinx.coroutines.flow.FlowKt__ErrorsKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `kotlinx.coroutines.flow.Flow` `a`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt;.a:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10db18.  v0:= new `kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1`;
  #L10db1c.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L10db22.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlinx.coroutines.flow.FlowCollector` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt;.b:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10da00.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__ErrorsKt$a` @kind boolean;
  #L10da04.  if v0 == 0 then goto L10da26;
  #L10da08.  v0:= v6 @kind object;
  #L10da0a.  v0:= (`kotlinx.coroutines.flow.FlowKt__ErrorsKt$a`) v0 @kind object;
  #L10da0e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$a.c` @type ^`int`;
  #L10da12.  v2:= -2147483648I;
  #L10da16.  v3:= v1 ^& v2 @kind int;
  #L10da1a.  if v3 == 0 then goto L10da26;
  #L10da1e.  v1:= v1 - v2 @kind int;
  #L10da20.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$a.c` @type ^`int` := v1;
  #L10da24.  goto L10da30;
  #L10da26.  v0:= new `kotlinx.coroutines.flow.FlowKt__ErrorsKt$a`;
  #L10da2a.  call `<init>`(v0, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10da30.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$a.b` @type ^`java.lang.Object` @kind object;
  #L10da34.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10da3a.  v1:= temp @kind object;
  #L10da3c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$a.c` @type ^`int`;
  #L10da40.  v3:= 1I;
  #L10da42.  if v2 == 0 then goto L10da6e;
  #L10da46.  if v2 != v3 then goto L10da5e;
  #L10da4a.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$a.a` @type ^`java.lang.Object` @kind object;
  #L10da4e.  v4:= (`kotlin.jvm.internal.Ref$ObjectRef`) v4 @kind object;
  #L10da52.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10da58.  goto L10da9e;
  #L10da5a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L10da5c.  goto L10daa6;
  #L10da5e.  v4:= new `java.lang.IllegalStateException`;
  #L10da62.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10da66.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10da6c.  throw v4;
  #L10da6e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10da74.  v6:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L10da78.  call `<init>`(v6) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L10da7e.  v2:= new `kotlinx.coroutines.flow.FlowKt__ErrorsKt$b`;
  #L10da82.  call `<init>`(v2, v5, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$b;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L10da88.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$a.a` @type ^`java.lang.Object` := v6 @kind object;
  #L10da8c.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$a.c` @type ^`int` := v3;
  #L10da90.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10da96.  v4:= temp @kind object;
  #L10da98.  if v4 != v1 then goto L10da9e;
  #L10da9c.  return v1 @kind object;
  #L10da9e.  v4:= 0I;
  #L10daa0.  return v4 @kind object;
  #L10daa2.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L10daa4.  v4:= v6 @kind object;
  #L10daa6.  v4:= v4.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L10daaa.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L10daae.  call temp:= `d`(v5, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt;.d:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z` @kind static;
  #L10dab4.  v6:= temp;
  #L10dab6.  if v6 != 0 then goto L10daec;
  #L10daba.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L10dac0.  v6:= temp @kind object;
  #L10dac2.  call temp:= `c`(v5, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt;.c:(Ljava/lang/Throwable;Lkotlin/coroutines/CoroutineContext;)Z` @kind static;
  #L10dac8.  v6:= temp;
  #L10daca.  if v6 != 0 then goto L10daec;
  #L10dace.  if v4 != 0 then goto L10dad4;
  #L10dad2.  return v5 @kind object;
  #L10dad4.  v6:= instanceof @variable v5 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L10dad8.  if v6 == 0 then goto L10dae4;
  #L10dadc.  call `addSuppressed`(v4, v5) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L10dae2.  throw v4;
  #L10dae4.  call `addSuppressed`(v5, v4) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L10daea.  throw v5;
  #L10daec.  throw v5;
  catch `java.lang.Throwable` @[L10da52..L10da58] goto L10da5a;
  catch `java.lang.Throwable` @[L10da7e..L10da98] goto L10daa2;
}
procedure `boolean` `c`(`java.lang.Throwable` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt;.c:(Ljava/lang/Throwable;Lkotlin/coroutines/CoroutineContext;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L10d990.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L10d994.  call temp:= `get`(v2, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L10d99a.  v2:= temp @kind object;
  #L10d99c.  v2:= (`kotlinx.coroutines.Job`) v2 @kind object;
  #L10d9a0.  if v2 == 0 then goto L10d9c4;
  #L10d9a4.  call temp:= `isCancelled`(v2) @signature `Lkotlinx/coroutines/Job;.isCancelled:()Z` @kind interface;
  #L10d9aa.  v0:= temp;
  #L10d9ac.  if v0 != 0 then goto L10d9b2;
  #L10d9b0.  goto L10d9c4;
  #L10d9b2.  call temp:= `getCancellationException`(v2) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L10d9b8.  v2:= temp @kind object;
  #L10d9ba.  call temp:= `d`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt;.d:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z` @kind static;
  #L10d9c0.  v1:= temp;
  #L10d9c2.  return v1;
  #L10d9c4.  v1:= 0I;
  #L10d9c6.  return v1;
}
procedure `boolean` `d`(`java.lang.Throwable` v0 @kind object, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt;.d:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L10d9d8.  if v1 == 0 then goto L10d9ec;
  #L10d9dc.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L10d9e2.  v0:= temp;
  #L10d9e4.  if v0 == 0 then goto L10d9ec;
  #L10d9e8.  v0:= 1I;
  #L10d9ea.  goto L10d9ee;
  #L10d9ec.  v0:= 0I;
  #L10d9ee.  return v0;
}
procedure `kotlinx.coroutines.flow.Flow` `e`(`kotlinx.coroutines.flow.Flow` v3 @kind object, `long` v4 , `kotlin.jvm.functions.Function2` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt;.e:(Lkotlinx/coroutines/flow/Flow;JLkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10db74.  v0:= 0L;
  #L10db78.  v2:= lcmp(v4, v0);
  #L10db7c.  if v2 <= 0 then goto L10db84;
  #L10db80.  v0:= 1I;
  #L10db82.  goto L10db86;
  #L10db84.  v0:= 0I;
  #L10db86.  if v0 == 0 then goto L10dba0;
  #L10db8a.  v0:= new `kotlinx.coroutines.flow.FlowKt__ErrorsKt$d`;
  #L10db8e.  v1:= 0I;
  #L10db90.  call `<init>`(v0, v4, v6, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$d;.<init>:(JLkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10db96.  call temp:= `retryWhen`(v3, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.retryWhen:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10db9c.  v3:= temp @kind object;
  #L10db9e.  return v3 @kind object;
  #L10dba0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L10dba6.  v3:= temp @kind object;
  #L10dba8.  v4:= "Expected positive amount of retries, but had " @kind object;
  #L10dbac.  call temp:= `stringPlus`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L10dbb2.  v3:= temp @kind object;
  #L10dbb4.  v4:= new `java.lang.IllegalArgumentException`;
  #L10dbb8.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L10dbbe.  v3:= temp @kind object;
  #L10dbc0.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10dbc6.  throw v4;
}
procedure `kotlinx.coroutines.flow.Flow` `f`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `long` v1 , `kotlin.jvm.functions.Function2` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt;.f:(Lkotlinx/coroutines/flow/Flow;JLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L10db34.  v5:= v4 ^& 1;
  #L10db38.  if v5 == 0 then goto L10db46;
  #L10db3c.  v1:= 9223372036854775807L;
  #L10db46.  v4:= v4 ^& 2;
  #L10db4a.  if v4 == 0 then goto L10db5a;
  #L10db4e.  v3:= new `kotlinx.coroutines.flow.FlowKt__ErrorsKt$c`;
  #L10db52.  v4:= 0I;
  #L10db54.  call `<init>`(v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$c;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10db5a.  call temp:= `retry`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/FlowKt;.retry:(Lkotlinx/coroutines/flow/Flow;JLkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10db60.  v0:= temp @kind object;
  #L10db62.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `g`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function4` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt;.g:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10dbd8.  v0:= new `kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1`;
  #L10dbdc.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L10dbe2.  return v0 @kind object;
}
