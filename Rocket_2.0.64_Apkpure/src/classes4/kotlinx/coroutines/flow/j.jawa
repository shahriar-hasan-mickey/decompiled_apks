record `kotlinx.coroutines.flow.j` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `kotlinx.coroutines.flow.Flow` `a`(`kotlinx.coroutines.flow.Flow` v3 @kind object, `long` v4 ) @signature `Lkotlinx/coroutines/flow/j;.a:(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10c274.  v0:= 0L;
  #L10c278.  v2:= lcmp(v4, v0);
  #L10c27c.  if v2 < 0 then goto L10c284;
  #L10c280.  v0:= 1I;
  #L10c282.  goto L10c286;
  #L10c284.  v0:= 0I;
  #L10c286.  if v0 == 0 then goto L10c2a4;
  #L10c28a.  if v2 != 0 then goto L10c290;
  #L10c28e.  return v3 @kind object;
  #L10c290.  v0:= new `kotlinx.coroutines.flow.j$a`;
  #L10c294.  call `<init>`(v0, v4) @signature `Lkotlinx/coroutines/flow/j$a;.<init>:(J)V` @kind direct;
  #L10c29a.  call temp:= `e`(v3, v0) @signature `Lkotlinx/coroutines/flow/j;.e:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10c2a0.  v3:= temp @kind object;
  #L10c2a2.  return v3 @kind object;
  #L10c2a4.  v3:= new `java.lang.IllegalArgumentException`;
  #L10c2a8.  v4:= "Debounce timeout should not be negative" @kind object;
  #L10c2ac.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L10c2b2.  v4:= temp @kind object;
  #L10c2b4.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10c2ba.  throw v3;
}
procedure `kotlinx.coroutines.flow.Flow` `b`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlinx/coroutines/flow/j;.b:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L10c258.  call temp:= `e`(v0, v1) @signature `Lkotlinx/coroutines/flow/j;.e:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10c25e.  v0:= temp @kind object;
  #L10c260.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `c`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `long` v1 ) @signature `Lkotlinx/coroutines/flow/j;.c:(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L10c2cc.  call temp:= `toDelayMillis-LRDsOJo`(v1) @signature `Lkotlinx/coroutines/DelayKt;.toDelayMillis-LRDsOJo:(J)J` @kind static;
  #L10c2d2.  v1:= temp @kind wide;
  #L10c2d4.  call temp:= `debounce`(v0, v1) @signature `Lkotlinx/coroutines/flow/FlowKt;.debounce:(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10c2da.  v0:= temp @kind object;
  #L10c2dc.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `d`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/flow/j;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10c2f0.  v0:= new `kotlinx.coroutines.flow.j$b`;
  #L10c2f4.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/flow/j$b;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L10c2fa.  call temp:= `e`(v1, v0) @signature `Lkotlinx/coroutines/flow/j;.e:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10c300.  v1:= temp @kind object;
  #L10c302.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `e`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlinx/coroutines/flow/j;.e:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L10c314.  v0:= new `kotlinx.coroutines.flow.j$c`;
  #L10c318.  v1:= 0I;
  #L10c31a.  call `<init>`(v0, v3, v2, v1) @signature `Lkotlinx/coroutines/flow/j$c;.<init>:(Lkotlin/jvm/functions/Function1;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10c320.  call temp:= `scopedFlow`(v0) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt;.scopedFlow:(Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10c326.  v2:= temp @kind object;
  #L10c328.  return v2 @kind object;
}
procedure `kotlinx.coroutines.channels.ReceiveChannel` `f`(`kotlinx.coroutines.CoroutineScope` v10 @kind object, `long` v11 , `long` v13 ) @signature `Lkotlinx/coroutines/flow/j;.f:(Lkotlinx/coroutines/CoroutineScope;JJ)Lkotlinx/coroutines/channels/ReceiveChannel;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L10c174.  v0:= 1I;
  #L10c176.  v5:= 0I;
  #L10c178.  v6:= 0L;
  #L10c17c.  v8:= lcmp(v11, v6);
  #L10c180.  if v8 < 0 then goto L10c188;
  #L10c184.  v8:= 1I;
  #L10c186.  goto L10c18a;
  #L10c188.  v8:= 0I;
  #L10c18a.  v9:= " ms" @kind object;
  #L10c18e.  if v8 == 0 then goto L10c20c;
  #L10c192.  v8:= lcmp(v13, v6);
  #L10c196.  if v8 < 0 then goto L10c19c;
  #L10c19a.  goto L10c19e;
  #L10c19c.  v0:= 0I;
  #L10c19e.  if v0 == 0 then goto L10c1d0;
  #L10c1a2.  v6:= 0I;
  #L10c1a4.  v7:= 0I;
  #L10c1a6.  v8:= new `kotlinx.coroutines.flow.j$d`;
  #L10c1aa.  v5:= 0I;
  #L10c1ac.  v0:= v8 @kind object;
  #L10c1ae.  v1:= v13 @kind wide;
  #L10c1b0.  v3:= v11 @kind wide;
  #L10c1b2.  call `<init>`(v0, v1, v3, v5) @signature `Lkotlinx/coroutines/flow/j$d;.<init>:(JJLkotlin/coroutines/Continuation;)V` @kind direct;
  #L10c1b8.  v5:= 1I;
  #L10c1ba.  v0:= 0I;
  #L10c1bc.  v1:= v10 @kind object;
  #L10c1be.  v2:= v6 @kind object;
  #L10c1c0.  v3:= v7;
  #L10c1c2.  v4:= v8 @kind object;
  #L10c1c4.  v6:= v0 @kind object;
  #L10c1c6.  call temp:= `produce$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/channels/ProduceKt;.produce$default:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/channels/ReceiveChannel;` @kind static;
  #L10c1cc.  v0:= temp @kind object;
  #L10c1ce.  return v0 @kind object;
  #L10c1d0.  v0:= new `java.lang.StringBuilder`;
  #L10c1d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L10c1da.  v3:= "Expected non-negative initial delay, but has " @kind object;
  #L10c1de.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L10c1e4.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L10c1ea.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L10c1f0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L10c1f6.  v0:= temp @kind object;
  #L10c1f8.  v1:= new `java.lang.IllegalArgumentException`;
  #L10c1fc.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L10c202.  v0:= temp @kind object;
  #L10c204.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10c20a.  throw v1;
  #L10c20c.  v0:= new `java.lang.StringBuilder`;
  #L10c210.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L10c216.  v1:= "Expected non-negative delay, but has " @kind object;
  #L10c21a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L10c220.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L10c226.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L10c22c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L10c232.  v0:= temp @kind object;
  #L10c234.  v1:= new `java.lang.IllegalArgumentException`;
  #L10c238.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L10c23e.  v0:= temp @kind object;
  #L10c240.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10c246.  throw v1;
}
procedure `kotlinx.coroutines.channels.ReceiveChannel` `g`(`kotlinx.coroutines.CoroutineScope` v0 @kind object, `long` v1 , `long` v3 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/j;.g:(Lkotlinx/coroutines/CoroutineScope;JJILjava/lang/Object;)Lkotlinx/coroutines/channels/ReceiveChannel;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L10c150.  v5:= v5 ^& 2;
  #L10c154.  if v5 == 0 then goto L10c15a;
  #L10c158.  v3:= v1 @kind wide;
  #L10c15a.  call temp:= `fixedPeriodTicker`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/FlowKt;.fixedPeriodTicker:(Lkotlinx/coroutines/CoroutineScope;JJ)Lkotlinx/coroutines/channels/ReceiveChannel;` @kind static;
  #L10c160.  v0:= temp @kind object;
  #L10c162.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `h`(`kotlinx.coroutines.flow.Flow` v3 @kind object, `long` v4 ) @signature `Lkotlinx/coroutines/flow/j;.h:(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10c33c.  v0:= 0L;
  #L10c340.  v2:= lcmp(v4, v0);
  #L10c344.  if v2 <= 0 then goto L10c34c;
  #L10c348.  v0:= 1I;
  #L10c34a.  goto L10c34e;
  #L10c34c.  v0:= 0I;
  #L10c34e.  if v0 == 0 then goto L10c368;
  #L10c352.  v0:= new `kotlinx.coroutines.flow.j$e`;
  #L10c356.  v1:= 0I;
  #L10c358.  call `<init>`(v0, v4, v3, v1) @signature `Lkotlinx/coroutines/flow/j$e;.<init>:(JLkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10c35e.  call temp:= `scopedFlow`(v0) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt;.scopedFlow:(Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10c364.  v3:= temp @kind object;
  #L10c366.  return v3 @kind object;
  #L10c368.  v3:= new `java.lang.IllegalArgumentException`;
  #L10c36c.  v4:= "Sample period should be positive" @kind object;
  #L10c370.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L10c376.  v4:= temp @kind object;
  #L10c378.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10c37e.  throw v3;
}
procedure `kotlinx.coroutines.flow.Flow` `i`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `long` v1 ) @signature `Lkotlinx/coroutines/flow/j;.i:(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L10c390.  call temp:= `toDelayMillis-LRDsOJo`(v1) @signature `Lkotlinx/coroutines/DelayKt;.toDelayMillis-LRDsOJo:(J)J` @kind static;
  #L10c396.  v1:= temp @kind wide;
  #L10c398.  call temp:= `sample`(v0, v1) @signature `Lkotlinx/coroutines/flow/FlowKt;.sample:(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10c39e.  v0:= temp @kind object;
  #L10c3a0.  return v0 @kind object;
}
