record `kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/SharedFlowImpl$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L116f70.  call temp:= `values`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.values:()[Lkotlinx/coroutines/channels/BufferOverflow;` @kind static;
  #L116f76.  v0:= temp @kind object;
  #L116f78.  v0:= length @variable v0;
  #L116f7a.  v0:= new `int`[v0];
  #L116f7e.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L116f82.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L116f88.  v1:= temp;
  #L116f8a.  v2:= 1I;
  #L116f8c.  v0[v1]:= v2;
  #L116f90.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_LATEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L116f94.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L116f9a.  v1:= temp;
  #L116f9c.  v2:= 2I;
  #L116f9e.  v0[v1]:= v2;
  #L116fa2.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L116fa6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L116fac.  v1:= temp;
  #L116fae.  v2:= 3I;
  #L116fb0.  v0[v1]:= v2;
  #L116fb4.  `@@kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L116fb8.  return @kind void;
}
