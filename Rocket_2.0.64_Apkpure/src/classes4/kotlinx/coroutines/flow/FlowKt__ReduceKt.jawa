record `kotlinx.coroutines.flow.FlowKt__ReduceKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt;.a:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L110940.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$a` @kind boolean;
  #L110944.  if v0 == 0 then goto L110966;
  #L110948.  v0:= v5 @kind object;
  #L11094a.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$a`) v0 @kind object;
  #L11094e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$a.d` @type ^`int`;
  #L110952.  v2:= -2147483648I;
  #L110956.  v3:= v1 ^& v2 @kind int;
  #L11095a.  if v3 == 0 then goto L110966;
  #L11095e.  v1:= v1 - v2 @kind int;
  #L110960.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$a.d` @type ^`int` := v1;
  #L110964.  goto L110970;
  #L110966.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$a`;
  #L11096a.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L110970.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$a.c` @type ^`java.lang.Object` @kind object;
  #L110974.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11097a.  v1:= temp @kind object;
  #L11097c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$a.d` @type ^`int`;
  #L110980.  v3:= 1I;
  #L110982.  if v2 == 0 then goto L1109b6;
  #L110986.  if v2 != v3 then goto L1109a6;
  #L11098a.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$a.b` @type ^`java.lang.Object` @kind object;
  #L11098e.  v4:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1`) v4 @kind object;
  #L110992.  v0:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$a.a` @type ^`java.lang.Object` @kind object;
  #L110996.  v0:= (`kotlin.jvm.internal.Ref$ObjectRef`) v0 @kind object;
  #L11099a.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1109a0.  goto L110a04;
  #L1109a2.  v5:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L1109a4.  goto L1109fe;
  #L1109a6.  v4:= new `java.lang.IllegalStateException`;
  #L1109aa.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1109ae.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1109b4.  throw v4;
  #L1109b6.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1109bc.  v5:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L1109c0.  call `<init>`(v5) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L1109c6.  v2:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1109ca.  v5.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v2 @kind object;
  #L1109ce.  v2:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1`;
  #L1109d2.  call `<init>`(v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$first$$inlined$collectWhile$1;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L1109d8.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$a.a` @type ^`java.lang.Object` := v5 @kind object;
  #L1109dc.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L1109e0.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$a.d` @type ^`int` := v3;
  #L1109e4.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1109ea.  v4:= temp @kind object;
  #L1109ec.  if v4 != v1 then goto L1109f2;
  #L1109f0.  return v1 @kind object;
  #L1109f2.  v0:= v5 @kind object;
  #L1109f4.  goto L110a04;
  #L1109f6.  v4:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L1109f8.  v0:= v5 @kind object;
  #L1109fa.  v5:= v4 @kind object;
  #L1109fc.  v4:= v2 @kind object;
  #L1109fe.  call `checkOwnership`(v5, v4) @signature `Lkotlinx/coroutines/flow/internal/FlowExceptions_commonKt;.checkOwnership:(Lkotlinx/coroutines/flow/internal/AbortFlowException;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind static;
  #L110a04.  v4:= v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L110a08.  v5:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L110a0c.  if v4 == v5 then goto L110a12;
  #L110a10.  return v4 @kind object;
  #L110a12.  v4:= new `java.util.NoSuchElementException`;
  #L110a16.  v5:= "Expected at least one element" @kind object;
  #L110a1a.  call `<init>`(v4, v5) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110a20.  throw v4;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L11099a..L1109a0] goto L1109a2;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L1109d8..L1109ec] goto L1109f6;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt;.b:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L110a50.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$b` @kind boolean;
  #L110a54.  if v0 == 0 then goto L110a76;
  #L110a58.  v0:= v6 @kind object;
  #L110a5a.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$b`) v0 @kind object;
  #L110a5e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.e` @type ^`int`;
  #L110a62.  v2:= -2147483648I;
  #L110a66.  v3:= v1 ^& v2 @kind int;
  #L110a6a.  if v3 == 0 then goto L110a76;
  #L110a6e.  v1:= v1 - v2 @kind int;
  #L110a70.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.e` @type ^`int` := v1;
  #L110a74.  goto L110a80;
  #L110a76.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$b`;
  #L110a7a.  call `<init>`(v0, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$b;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L110a80.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.d` @type ^`java.lang.Object` @kind object;
  #L110a84.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L110a8a.  v1:= temp @kind object;
  #L110a8c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.e` @type ^`int`;
  #L110a90.  v3:= 1I;
  #L110a92.  if v2 == 0 then goto L110ace;
  #L110a96.  if v2 != v3 then goto L110abe;
  #L110a9a.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.c` @type ^`java.lang.Object` @kind object;
  #L110a9e.  v4:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2`) v4 @kind object;
  #L110aa2.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.b` @type ^`java.lang.Object` @kind object;
  #L110aa6.  v5:= (`kotlin.jvm.internal.Ref$ObjectRef`) v5 @kind object;
  #L110aaa.  v0:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.a` @type ^`java.lang.Object` @kind object;
  #L110aae.  v0:= (`kotlin.jvm.functions.Function2`) v0 @kind object;
  #L110ab2.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110ab8.  goto L110b24;
  #L110aba.  v6:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L110abc.  goto L110b1e;
  #L110abe.  v4:= new `java.lang.IllegalStateException`;
  #L110ac2.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L110ac6.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110acc.  throw v4;
  #L110ace.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110ad4.  v6:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L110ad8.  call `<init>`(v6) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L110ade.  v2:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L110ae2.  v6.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v2 @kind object;
  #L110ae6.  v2:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2`;
  #L110aea.  call `<init>`(v2, v5, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$first$$inlined$collectWhile$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L110af0.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.a` @type ^`java.lang.Object` := v5 @kind object;
  #L110af4.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.b` @type ^`java.lang.Object` := v6 @kind object;
  #L110af8.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.c` @type ^`java.lang.Object` := v2 @kind object;
  #L110afc.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$b.e` @type ^`int` := v3;
  #L110b00.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L110b06.  v4:= temp @kind object;
  #L110b08.  if v4 != v1 then goto L110b0e;
  #L110b0c.  return v1 @kind object;
  #L110b0e.  v0:= v5 @kind object;
  #L110b10.  v5:= v6 @kind object;
  #L110b12.  goto L110b24;
  #L110b14.  v4:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L110b16.  v0:= v5 @kind object;
  #L110b18.  v5:= v6 @kind object;
  #L110b1a.  v6:= v4 @kind object;
  #L110b1c.  v4:= v2 @kind object;
  #L110b1e.  call `checkOwnership`(v6, v4) @signature `Lkotlinx/coroutines/flow/internal/FlowExceptions_commonKt;.checkOwnership:(Lkotlinx/coroutines/flow/internal/AbortFlowException;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind static;
  #L110b24.  v4:= v5.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L110b28.  v5:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L110b2c.  if v4 == v5 then goto L110b32;
  #L110b30.  return v4 @kind object;
  #L110b32.  v4:= new `java.util.NoSuchElementException`;
  #L110b36.  v5:= "Expected at least one element matching the predicate " @kind object;
  #L110b3a.  call temp:= `stringPlus`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L110b40.  v5:= temp @kind object;
  #L110b42.  call `<init>`(v4, v5) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110b48.  throw v4;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L110ab2..L110ab8] goto L110aba;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L110af0..L110b08] goto L110b14;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt;.c:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L110b78.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$c` @kind boolean;
  #L110b7c.  if v0 == 0 then goto L110b9e;
  #L110b80.  v0:= v5 @kind object;
  #L110b82.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$c`) v0 @kind object;
  #L110b86.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$c.d` @type ^`int`;
  #L110b8a.  v2:= -2147483648I;
  #L110b8e.  v3:= v1 ^& v2 @kind int;
  #L110b92.  if v3 == 0 then goto L110b9e;
  #L110b96.  v1:= v1 - v2 @kind int;
  #L110b98.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$c.d` @type ^`int` := v1;
  #L110b9c.  goto L110ba8;
  #L110b9e.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$c`;
  #L110ba2.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$c;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L110ba8.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$c.c` @type ^`java.lang.Object` @kind object;
  #L110bac.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L110bb2.  v1:= temp @kind object;
  #L110bb4.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$c.d` @type ^`int`;
  #L110bb8.  v3:= 1I;
  #L110bba.  if v2 == 0 then goto L110bee;
  #L110bbe.  if v2 != v3 then goto L110bde;
  #L110bc2.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$c.b` @type ^`java.lang.Object` @kind object;
  #L110bc6.  v4:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1`) v4 @kind object;
  #L110bca.  v0:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$c.a` @type ^`java.lang.Object` @kind object;
  #L110bce.  v0:= (`kotlin.jvm.internal.Ref$ObjectRef`) v0 @kind object;
  #L110bd2.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110bd8.  goto L110c34;
  #L110bda.  v5:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L110bdc.  goto L110c2e;
  #L110bde.  v4:= new `java.lang.IllegalStateException`;
  #L110be2.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L110be6.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110bec.  throw v4;
  #L110bee.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110bf4.  v5:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L110bf8.  call `<init>`(v5) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L110bfe.  v2:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1`;
  #L110c02.  call `<init>`(v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L110c08.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$c.a` @type ^`java.lang.Object` := v5 @kind object;
  #L110c0c.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$c.b` @type ^`java.lang.Object` := v2 @kind object;
  #L110c10.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$c.d` @type ^`int` := v3;
  #L110c14.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L110c1a.  v4:= temp @kind object;
  #L110c1c.  if v4 != v1 then goto L110c22;
  #L110c20.  return v1 @kind object;
  #L110c22.  v0:= v5 @kind object;
  #L110c24.  goto L110c34;
  #L110c26.  v4:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L110c28.  v0:= v5 @kind object;
  #L110c2a.  v5:= v4 @kind object;
  #L110c2c.  v4:= v2 @kind object;
  #L110c2e.  call `checkOwnership`(v5, v4) @signature `Lkotlinx/coroutines/flow/internal/FlowExceptions_commonKt;.checkOwnership:(Lkotlinx/coroutines/flow/internal/AbortFlowException;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind static;
  #L110c34.  v4:= v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L110c38.  return v4 @kind object;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L110bd2..L110bd8] goto L110bda;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L110c08..L110c1c] goto L110c26;
}
procedure `java.lang.Object` `d`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L110c68.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$d` @kind boolean;
  #L110c6c.  if v0 == 0 then goto L110c8e;
  #L110c70.  v0:= v6 @kind object;
  #L110c72.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$d`) v0 @kind object;
  #L110c76.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$d.d` @type ^`int`;
  #L110c7a.  v2:= -2147483648I;
  #L110c7e.  v3:= v1 ^& v2 @kind int;
  #L110c82.  if v3 == 0 then goto L110c8e;
  #L110c86.  v1:= v1 - v2 @kind int;
  #L110c88.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$d.d` @type ^`int` := v1;
  #L110c8c.  goto L110c98;
  #L110c8e.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$d`;
  #L110c92.  call `<init>`(v0, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$d;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L110c98.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$d.c` @type ^`java.lang.Object` @kind object;
  #L110c9c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L110ca2.  v1:= temp @kind object;
  #L110ca4.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$d.d` @type ^`int`;
  #L110ca8.  v3:= 1I;
  #L110caa.  if v2 == 0 then goto L110cde;
  #L110cae.  if v2 != v3 then goto L110cce;
  #L110cb2.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$d.b` @type ^`java.lang.Object` @kind object;
  #L110cb6.  v4:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2`) v4 @kind object;
  #L110cba.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$d.a` @type ^`java.lang.Object` @kind object;
  #L110cbe.  v5:= (`kotlin.jvm.internal.Ref$ObjectRef`) v5 @kind object;
  #L110cc2.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110cc8.  goto L110d24;
  #L110cca.  v6:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L110ccc.  goto L110d1e;
  #L110cce.  v4:= new `java.lang.IllegalStateException`;
  #L110cd2.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L110cd6.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110cdc.  throw v4;
  #L110cde.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110ce4.  v6:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L110ce8.  call `<init>`(v6) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L110cee.  v2:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2`;
  #L110cf2.  call `<init>`(v2, v5, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L110cf8.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$d.a` @type ^`java.lang.Object` := v6 @kind object;
  #L110cfc.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$d.b` @type ^`java.lang.Object` := v2 @kind object;
  #L110d00.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$d.d` @type ^`int` := v3;
  #L110d04.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L110d0a.  v4:= temp @kind object;
  #L110d0c.  if v4 != v1 then goto L110d12;
  #L110d10.  return v1 @kind object;
  #L110d12.  v5:= v6 @kind object;
  #L110d14.  goto L110d24;
  #L110d16.  v4:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L110d18.  v5:= v6 @kind object;
  #L110d1a.  v6:= v4 @kind object;
  #L110d1c.  v4:= v2 @kind object;
  #L110d1e.  call `checkOwnership`(v6, v4) @signature `Lkotlinx/coroutines/flow/internal/FlowExceptions_commonKt;.checkOwnership:(Lkotlinx/coroutines/flow/internal/AbortFlowException;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind static;
  #L110d24.  v4:= v5.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L110d28.  return v4 @kind object;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L110cc2..L110cc8] goto L110cca;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L110cf8..L110d0c] goto L110d16;
}
procedure `java.lang.Object` `e`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `java.lang.Object` v5 @kind object, `kotlin.jvm.functions.Function3` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt;.e:(Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L110d58.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$e` @kind boolean;
  #L110d5c.  if v0 == 0 then goto L110d7e;
  #L110d60.  v0:= v7 @kind object;
  #L110d62.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$e`) v0 @kind object;
  #L110d66.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$e.c` @type ^`int`;
  #L110d6a.  v2:= -2147483648I;
  #L110d6e.  v3:= v1 ^& v2 @kind int;
  #L110d72.  if v3 == 0 then goto L110d7e;
  #L110d76.  v1:= v1 - v2 @kind int;
  #L110d78.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$e.c` @type ^`int` := v1;
  #L110d7c.  goto L110d88;
  #L110d7e.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$e`;
  #L110d82.  call `<init>`(v0, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$e;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L110d88.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$e.b` @type ^`java.lang.Object` @kind object;
  #L110d8c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L110d92.  v1:= temp @kind object;
  #L110d94.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$e.c` @type ^`int`;
  #L110d98.  v3:= 1I;
  #L110d9a.  if v2 == 0 then goto L110dc2;
  #L110d9e.  if v2 != v3 then goto L110db2;
  #L110da2.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$e.a` @type ^`java.lang.Object` @kind object;
  #L110da6.  v4:= (`kotlin.jvm.internal.Ref$ObjectRef`) v4 @kind object;
  #L110daa.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110db0.  goto L110df8;
  #L110db2.  v4:= new `java.lang.IllegalStateException`;
  #L110db6.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L110dba.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110dc0.  throw v4;
  #L110dc2.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110dc8.  v7:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L110dcc.  call `<init>`(v7) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L110dd2.  v7.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v5 @kind object;
  #L110dd6.  v5:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2`;
  #L110dda.  call `<init>`(v5, v7, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$2;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L110de0.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$e.a` @type ^`java.lang.Object` := v7 @kind object;
  #L110de4.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$e.c` @type ^`int` := v3;
  #L110de8.  call temp:= `collect`(v4, v5, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L110dee.  v4:= temp @kind object;
  #L110df0.  if v4 != v1 then goto L110df6;
  #L110df4.  return v1 @kind object;
  #L110df6.  v4:= v7 @kind object;
  #L110df8.  v4:= v4.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L110dfc.  return v4 @kind object;
}
procedure `java.lang.Object` `f`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt;.f:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L110e10.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$f` @kind boolean;
  #L110e14.  if v0 == 0 then goto L110e36;
  #L110e18.  v0:= v5 @kind object;
  #L110e1a.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$f`) v0 @kind object;
  #L110e1e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$f.c` @type ^`int`;
  #L110e22.  v2:= -2147483648I;
  #L110e26.  v3:= v1 ^& v2 @kind int;
  #L110e2a.  if v3 == 0 then goto L110e36;
  #L110e2e.  v1:= v1 - v2 @kind int;
  #L110e30.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$f.c` @type ^`int` := v1;
  #L110e34.  goto L110e40;
  #L110e36.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$f`;
  #L110e3a.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$f;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L110e40.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$f.b` @type ^`java.lang.Object` @kind object;
  #L110e44.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L110e4a.  v1:= temp @kind object;
  #L110e4c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$f.c` @type ^`int`;
  #L110e50.  v3:= 1I;
  #L110e52.  if v2 == 0 then goto L110e7a;
  #L110e56.  if v2 != v3 then goto L110e6a;
  #L110e5a.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$f.a` @type ^`java.lang.Object` @kind object;
  #L110e5e.  v4:= (`kotlin.jvm.internal.Ref$ObjectRef`) v4 @kind object;
  #L110e62.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110e68.  goto L110eb4;
  #L110e6a.  v4:= new `java.lang.IllegalStateException`;
  #L110e6e.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L110e72.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110e78.  throw v4;
  #L110e7a.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110e80.  v5:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L110e84.  call `<init>`(v5) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L110e8a.  v2:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L110e8e.  v5.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v2 @kind object;
  #L110e92.  v2:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$g`;
  #L110e96.  call `<init>`(v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$g;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L110e9c.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$f.a` @type ^`java.lang.Object` := v5 @kind object;
  #L110ea0.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$f.c` @type ^`int` := v3;
  #L110ea4.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L110eaa.  v4:= temp @kind object;
  #L110eac.  if v4 != v1 then goto L110eb2;
  #L110eb0.  return v1 @kind object;
  #L110eb2.  v4:= v5 @kind object;
  #L110eb4.  v4:= v4.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L110eb8.  v5:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L110ebc.  if v4 == v5 then goto L110ec2;
  #L110ec0.  return v4 @kind object;
  #L110ec2.  v4:= new `java.util.NoSuchElementException`;
  #L110ec6.  v5:= "Expected at least one element" @kind object;
  #L110eca.  call `<init>`(v4, v5) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110ed0.  throw v4;
}
procedure `java.lang.Object` `g`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt;.g:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L110ee4.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$h` @kind boolean;
  #L110ee8.  if v0 == 0 then goto L110f0a;
  #L110eec.  v0:= v5 @kind object;
  #L110eee.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$h`) v0 @kind object;
  #L110ef2.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$h.c` @type ^`int`;
  #L110ef6.  v2:= -2147483648I;
  #L110efa.  v3:= v1 ^& v2 @kind int;
  #L110efe.  if v3 == 0 then goto L110f0a;
  #L110f02.  v1:= v1 - v2 @kind int;
  #L110f04.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$h.c` @type ^`int` := v1;
  #L110f08.  goto L110f14;
  #L110f0a.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$h`;
  #L110f0e.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$h;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L110f14.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$h.b` @type ^`java.lang.Object` @kind object;
  #L110f18.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L110f1e.  v1:= temp @kind object;
  #L110f20.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$h.c` @type ^`int`;
  #L110f24.  v3:= 1I;
  #L110f26.  if v2 == 0 then goto L110f4e;
  #L110f2a.  if v2 != v3 then goto L110f3e;
  #L110f2e.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$h.a` @type ^`java.lang.Object` @kind object;
  #L110f32.  v4:= (`kotlin.jvm.internal.Ref$ObjectRef`) v4 @kind object;
  #L110f36.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110f3c.  goto L110f80;
  #L110f3e.  v4:= new `java.lang.IllegalStateException`;
  #L110f42.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L110f46.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110f4c.  throw v4;
  #L110f4e.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110f54.  v5:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L110f58.  call `<init>`(v5) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L110f5e.  v2:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$i`;
  #L110f62.  call `<init>`(v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$i;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L110f68.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$h.a` @type ^`java.lang.Object` := v5 @kind object;
  #L110f6c.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$h.c` @type ^`int` := v3;
  #L110f70.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L110f76.  v4:= temp @kind object;
  #L110f78.  if v4 != v1 then goto L110f7e;
  #L110f7c.  return v1 @kind object;
  #L110f7e.  v4:= v5 @kind object;
  #L110f80.  v4:= v4.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L110f84.  return v4 @kind object;
}
procedure `java.lang.Object` `h`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.jvm.functions.Function3` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt;.h:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L110f98.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$j` @kind boolean;
  #L110f9c.  if v0 == 0 then goto L110fbe;
  #L110fa0.  v0:= v6 @kind object;
  #L110fa2.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$j`) v0 @kind object;
  #L110fa6.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$j.c` @type ^`int`;
  #L110faa.  v2:= -2147483648I;
  #L110fae.  v3:= v1 ^& v2 @kind int;
  #L110fb2.  if v3 == 0 then goto L110fbe;
  #L110fb6.  v1:= v1 - v2 @kind int;
  #L110fb8.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$j.c` @type ^`int` := v1;
  #L110fbc.  goto L110fc8;
  #L110fbe.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$j`;
  #L110fc2.  call `<init>`(v0, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$j;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L110fc8.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$j.b` @type ^`java.lang.Object` @kind object;
  #L110fcc.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L110fd2.  v1:= temp @kind object;
  #L110fd4.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$j.c` @type ^`int`;
  #L110fd8.  v3:= 1I;
  #L110fda.  if v2 == 0 then goto L111002;
  #L110fde.  if v2 != v3 then goto L110ff2;
  #L110fe2.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$j.a` @type ^`java.lang.Object` @kind object;
  #L110fe6.  v4:= (`kotlin.jvm.internal.Ref$ObjectRef`) v4 @kind object;
  #L110fea.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110ff0.  goto L11103c;
  #L110ff2.  v4:= new `java.lang.IllegalStateException`;
  #L110ff6.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L110ffa.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L111000.  throw v4;
  #L111002.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L111008.  v6:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L11100c.  call `<init>`(v6) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L111012.  v2:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L111016.  v6.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v2 @kind object;
  #L11101a.  v2:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$k`;
  #L11101e.  call `<init>`(v2, v6, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$k;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L111024.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$j.a` @type ^`java.lang.Object` := v6 @kind object;
  #L111028.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$j.c` @type ^`int` := v3;
  #L11102c.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L111032.  v4:= temp @kind object;
  #L111034.  if v4 != v1 then goto L11103a;
  #L111038.  return v1 @kind object;
  #L11103a.  v4:= v6 @kind object;
  #L11103c.  v4:= v4.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L111040.  v5:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L111044.  if v4 == v5 then goto L11104a;
  #L111048.  return v4 @kind object;
  #L11104a.  v4:= new `java.util.NoSuchElementException`;
  #L11104e.  v5:= "Empty flow can't be reduced" @kind object;
  #L111052.  call `<init>`(v4, v5) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L111058.  throw v4;
}
procedure `java.lang.Object` `i`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt;.i:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L11106c.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$l` @kind boolean;
  #L111070.  if v0 == 0 then goto L111092;
  #L111074.  v0:= v5 @kind object;
  #L111076.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$l`) v0 @kind object;
  #L11107a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$l.c` @type ^`int`;
  #L11107e.  v2:= -2147483648I;
  #L111082.  v3:= v1 ^& v2 @kind int;
  #L111086.  if v3 == 0 then goto L111092;
  #L11108a.  v1:= v1 - v2 @kind int;
  #L11108c.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$l.c` @type ^`int` := v1;
  #L111090.  goto L11109c;
  #L111092.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$l`;
  #L111096.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$l;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11109c.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$l.b` @type ^`java.lang.Object` @kind object;
  #L1110a0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1110a6.  v1:= temp @kind object;
  #L1110a8.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$l.c` @type ^`int`;
  #L1110ac.  v3:= 1I;
  #L1110ae.  if v2 == 0 then goto L1110d6;
  #L1110b2.  if v2 != v3 then goto L1110c6;
  #L1110b6.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$l.a` @type ^`java.lang.Object` @kind object;
  #L1110ba.  v4:= (`kotlin.jvm.internal.Ref$ObjectRef`) v4 @kind object;
  #L1110be.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1110c4.  goto L111110;
  #L1110c6.  v4:= new `java.lang.IllegalStateException`;
  #L1110ca.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1110ce.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1110d4.  throw v4;
  #L1110d6.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1110dc.  v5:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L1110e0.  call `<init>`(v5) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L1110e6.  v2:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1110ea.  v5.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v2 @kind object;
  #L1110ee.  v2:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$m`;
  #L1110f2.  call `<init>`(v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$m;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L1110f8.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$l.a` @type ^`java.lang.Object` := v5 @kind object;
  #L1110fc.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$l.c` @type ^`int` := v3;
  #L111100.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L111106.  v4:= temp @kind object;
  #L111108.  if v4 != v1 then goto L11110e;
  #L11110c.  return v1 @kind object;
  #L11110e.  v4:= v5 @kind object;
  #L111110.  v4:= v4.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L111114.  v5:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L111118.  if v4 == v5 then goto L11111e;
  #L11111c.  return v4 @kind object;
  #L11111e.  v4:= new `java.util.NoSuchElementException`;
  #L111122.  v5:= "Flow is empty" @kind object;
  #L111126.  call `<init>`(v4, v5) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11112c.  throw v4;
}
procedure `java.lang.Object` `j`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt;.j:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L111140.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$n` @kind boolean;
  #L111144.  if v0 == 0 then goto L111166;
  #L111148.  v0:= v5 @kind object;
  #L11114a.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$n`) v0 @kind object;
  #L11114e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$n.d` @type ^`int`;
  #L111152.  v2:= -2147483648I;
  #L111156.  v3:= v1 ^& v2 @kind int;
  #L11115a.  if v3 == 0 then goto L111166;
  #L11115e.  v1:= v1 - v2 @kind int;
  #L111160.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$n.d` @type ^`int` := v1;
  #L111164.  goto L111170;
  #L111166.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$n`;
  #L11116a.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$n;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L111170.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$n.c` @type ^`java.lang.Object` @kind object;
  #L111174.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11117a.  v1:= temp @kind object;
  #L11117c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$n.d` @type ^`int`;
  #L111180.  v3:= 1I;
  #L111182.  if v2 == 0 then goto L1111b6;
  #L111186.  if v2 != v3 then goto L1111a6;
  #L11118a.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$n.b` @type ^`java.lang.Object` @kind object;
  #L11118e.  v4:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1`) v4 @kind object;
  #L111192.  v0:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$n.a` @type ^`java.lang.Object` @kind object;
  #L111196.  v0:= (`kotlin.jvm.internal.Ref$ObjectRef`) v0 @kind object;
  #L11119a.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1111a0.  goto L111204;
  #L1111a2.  v5:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L1111a4.  goto L1111fe;
  #L1111a6.  v4:= new `java.lang.IllegalStateException`;
  #L1111aa.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1111ae.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1111b4.  throw v4;
  #L1111b6.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1111bc.  v5:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L1111c0.  call `<init>`(v5) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L1111c6.  v2:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1111ca.  v5.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v2 @kind object;
  #L1111ce.  v2:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1`;
  #L1111d2.  call `<init>`(v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L1111d8.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$n.a` @type ^`java.lang.Object` := v5 @kind object;
  #L1111dc.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$n.b` @type ^`java.lang.Object` := v2 @kind object;
  #L1111e0.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$n.d` @type ^`int` := v3;
  #L1111e4.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1111ea.  v4:= temp @kind object;
  #L1111ec.  if v4 != v1 then goto L1111f2;
  #L1111f0.  return v1 @kind object;
  #L1111f2.  v0:= v5 @kind object;
  #L1111f4.  goto L111204;
  #L1111f6.  v4:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L1111f8.  v0:= v5 @kind object;
  #L1111fa.  v5:= v4 @kind object;
  #L1111fc.  v4:= v2 @kind object;
  #L1111fe.  call `checkOwnership`(v5, v4) @signature `Lkotlinx/coroutines/flow/internal/FlowExceptions_commonKt;.checkOwnership:(Lkotlinx/coroutines/flow/internal/AbortFlowException;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind static;
  #L111204.  v4:= v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L111208.  v5:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L11120c.  if v4 != v5 then goto L111212;
  #L111210.  v4:= 0I;
  #L111212.  return v4 @kind object;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L11119a..L1111a0] goto L1111a2;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L1111d8..L1111ec] goto L1111f6;
}
