record `kotlinx.coroutines.flow.r` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.SharingStarted` @kind interface {
  `long` `kotlinx.coroutines.flow.r.a` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.flow.r.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.r` v6 @kind this, `long` v7 , `long` v9 ) @signature `Lkotlinx/coroutines/flow/r;.<init>:(JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L118dac.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L118db2.  v6.`kotlinx.coroutines.flow.r.a` @type ^`long` := v7 @kind wide;
  #L118db6.  v6.`kotlinx.coroutines.flow.r.b` @type ^`long` := v9 @kind wide;
  #L118dba.  v0:= 1I;
  #L118dbc.  v1:= 0I;
  #L118dbe.  v2:= 0L;
  #L118dc2.  v4:= lcmp(v7, v2);
  #L118dc6.  if v4 < 0 then goto L118dce;
  #L118dca.  v4:= 1I;
  #L118dcc.  goto L118dd0;
  #L118dce.  v4:= 0I;
  #L118dd0.  v5:= " ms) cannot be negative" @kind object;
  #L118dd4.  if v4 == 0 then goto L118e26;
  #L118dd8.  v7:= lcmp(v9, v2);
  #L118ddc.  if v7 < 0 then goto L118de2;
  #L118de0.  goto L118de4;
  #L118de2.  v0:= 0I;
  #L118de4.  if v0 == 0 then goto L118dea;
  #L118de8.  return @kind void;
  #L118dea.  v7:= new `java.lang.StringBuilder`;
  #L118dee.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L118df4.  v8:= "replayExpiration(" @kind object;
  #L118df8.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118dfe.  call temp:= `append`(v7, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L118e04.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118e0a.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L118e10.  v7:= temp @kind object;
  #L118e12.  v8:= new `java.lang.IllegalArgumentException`;
  #L118e16.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L118e1c.  v7:= temp @kind object;
  #L118e1e.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L118e24.  throw v8;
  #L118e26.  v9:= new `java.lang.StringBuilder`;
  #L118e2a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L118e30.  v10:= "stopTimeout(" @kind object;
  #L118e34.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118e3a.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L118e40.  call temp:= `append`(v9, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118e46.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L118e4c.  v7:= temp @kind object;
  #L118e4e.  v8:= new `java.lang.IllegalArgumentException`;
  #L118e52.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L118e58.  v7:= temp @kind object;
  #L118e5a.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L118e60.  throw v8;
}
procedure `long` `a`(`kotlinx.coroutines.flow.r` v2 @kind object) @signature `Lkotlinx/coroutines/flow/r;.a:(Lkotlinx/coroutines/flow/r;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L118d7c.  v0:= v2.`kotlinx.coroutines.flow.r.b` @type ^`long` @kind wide;
  #L118d80.  return v0 @kind wide;
}
procedure `long` `b`(`kotlinx.coroutines.flow.r` v2 @kind object) @signature `Lkotlinx/coroutines/flow/r;.b:(Lkotlinx/coroutines/flow/r;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L118d94.  v0:= v2.`kotlinx.coroutines.flow.r.a` @type ^`long` @kind wide;
  #L118d98.  return v0 @kind wide;
}
procedure `kotlinx.coroutines.flow.Flow` `command`(`kotlinx.coroutines.flow.r` v2 @kind this, `kotlinx.coroutines.flow.StateFlow` v3 @kind object) @signature `Lkotlinx/coroutines/flow/r;.command:(Lkotlinx/coroutines/flow/StateFlow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L118d3c.  v0:= new `kotlinx.coroutines.flow.r$a`;
  #L118d40.  v1:= 0I;
  #L118d42.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/flow/r$a;.<init>:(Lkotlinx/coroutines/flow/r;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L118d48.  call temp:= `transformLatest`(v3, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.transformLatest:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L118d4e.  v3:= temp @kind object;
  #L118d50.  v0:= new `kotlinx.coroutines.flow.r$b`;
  #L118d54.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/flow/r$b;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L118d5a.  call temp:= `dropWhile`(v3, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.dropWhile:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L118d60.  v3:= temp @kind object;
  #L118d62.  call temp:= `distinctUntilChanged`(v3) @signature `Lkotlinx/coroutines/flow/FlowKt;.distinctUntilChanged:(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L118d68.  v3:= temp @kind object;
  #L118d6a.  return v3 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.flow.r` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L118bd0.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.r` @kind boolean;
  #L118bd4.  if v0 == 0 then goto L118c00;
  #L118bd8.  v0:= v5.`kotlinx.coroutines.flow.r.a` @type ^`long` @kind wide;
  #L118bdc.  v6:= (`kotlinx.coroutines.flow.r`) v6 @kind object;
  #L118be0.  v2:= v6.`kotlinx.coroutines.flow.r.a` @type ^`long` @kind wide;
  #L118be4.  v4:= lcmp(v0, v2);
  #L118be8.  if v4 != 0 then goto L118c00;
  #L118bec.  v0:= v5.`kotlinx.coroutines.flow.r.b` @type ^`long` @kind wide;
  #L118bf0.  v2:= v6.`kotlinx.coroutines.flow.r.b` @type ^`long` @kind wide;
  #L118bf4.  v6:= lcmp(v0, v2);
  #L118bf8.  if v6 != 0 then goto L118c00;
  #L118bfc.  v6:= 1I;
  #L118bfe.  goto L118c02;
  #L118c00.  v6:= 0I;
  #L118c02.  return v6;
}
procedure `int` `hashCode`(`kotlinx.coroutines.flow.r` v3 @kind this) @signature `Lkotlinx/coroutines/flow/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L118c14.  v0:= v3.`kotlinx.coroutines.flow.r.a` @type ^`long` @kind wide;
  #L118c18.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/j;.a:(J)I` @kind static;
  #L118c1e.  v0:= temp;
  #L118c20.  v0:= v0 * 31;
  #L118c24.  v1:= v3.`kotlinx.coroutines.flow.r.b` @type ^`long` @kind wide;
  #L118c28.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/j;.a:(J)I` @kind static;
  #L118c2e.  v1:= temp;
  #L118c30.  v0:= v0 + v1 @kind int;
  #L118c32.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.flow.r` v11 @kind this) @signature `Lkotlinx/coroutines/flow/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L118c44.  v0:= 2I;
  #L118c46.  call temp:= `createListBuilder`(v0) @signature `Lkotlin/collections/CollectionsKt;.createListBuilder:(I)Ljava/util/List;` @kind static;
  #L118c4c.  v0:= temp @kind object;
  #L118c4e.  v1:= v11.`kotlinx.coroutines.flow.r.a` @type ^`long` @kind wide;
  #L118c52.  v3:= "ms" @kind object;
  #L118c56.  v4:= 0L;
  #L118c5a.  v6:= lcmp(v1, v4);
  #L118c5e.  if v6 <= 0 then goto L118c94;
  #L118c62.  v1:= new `java.lang.StringBuilder`;
  #L118c66.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L118c6c.  v2:= "stopTimeout=" @kind object;
  #L118c70.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118c76.  v4:= v11.`kotlinx.coroutines.flow.r.a` @type ^`long` @kind wide;
  #L118c7a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L118c80.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118c86.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L118c8c.  v1:= temp @kind object;
  #L118c8e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L118c94.  v1:= v11.`kotlinx.coroutines.flow.r.b` @type ^`long` @kind wide;
  #L118c98.  v4:= 9223372036854775807L;
  #L118ca2.  v6:= lcmp(v1, v4);
  #L118ca6.  if v6 >= 0 then goto L118cdc;
  #L118caa.  v1:= new `java.lang.StringBuilder`;
  #L118cae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L118cb4.  v2:= "replayExpiration=" @kind object;
  #L118cb8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118cbe.  v4:= v11.`kotlinx.coroutines.flow.r.b` @type ^`long` @kind wide;
  #L118cc2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L118cc8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118cce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L118cd4.  v1:= temp @kind object;
  #L118cd6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L118cdc.  call temp:= `build`(v0) @signature `Lkotlin/collections/CollectionsKt;.build:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L118ce2.  v2:= temp @kind object;
  #L118ce4.  v0:= new `java.lang.StringBuilder`;
  #L118ce8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L118cee.  v1:= "SharingStarted.WhileSubscribed(" @kind object;
  #L118cf2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118cf8.  v3:= 0I;
  #L118cfa.  v4:= 0I;
  #L118cfc.  v5:= 0I;
  #L118cfe.  v6:= 0I;
  #L118d00.  v7:= 0I;
  #L118d02.  v8:= 0I;
  #L118d04.  v9:= 63I;
  #L118d08.  v10:= 0I;
  #L118d0a.  call temp:= `joinToString$default`(v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/collections/CollectionsKt;.joinToString$default:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L118d10.  v1:= temp @kind object;
  #L118d12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118d18.  v1:= 41I;
  #L118d1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L118d22.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L118d28.  v0:= temp @kind object;
  #L118d2a.  return v0 @kind object;
}
