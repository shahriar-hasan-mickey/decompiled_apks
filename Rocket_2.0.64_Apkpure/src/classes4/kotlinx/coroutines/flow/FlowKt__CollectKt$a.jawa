record `kotlinx.coroutines.flow.FlowKt__CollectKt$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__CollectKt$a.a` @AccessFlag ;
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__CollectKt$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__CollectKt$a` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10a89c.  v0.`kotlinx.coroutines.flow.FlowKt__CollectKt$a.b` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L10a8a0.  v1:= 2I;
  #L10a8a2.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L10a8a8.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__CollectKt$a` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L10a87c.  v2:= new `kotlinx.coroutines.flow.FlowKt__CollectKt$a`;
  #L10a880.  v0:= v1.`kotlinx.coroutines.flow.FlowKt__CollectKt$a.b` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L10a884.  call `<init>`(v2, v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10a88a.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__CollectKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L10a7cc.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L10a7d0.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L10a7d4.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L10a7da.  v1:= temp @kind object;
  #L10a7dc.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__CollectKt$a` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L10a7f0.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L10a7f6.  v1:= temp @kind object;
  #L10a7f8.  v1:= (`kotlinx.coroutines.flow.FlowKt__CollectKt$a`) v1 @kind object;
  #L10a7fc.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10a800.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L10a806.  v1:= temp @kind object;
  #L10a808.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__CollectKt$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10a81c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10a822.  v0:= temp @kind object;
  #L10a824.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__CollectKt$a.a` @type ^`int`;
  #L10a828.  v2:= 1I;
  #L10a82a.  if v1 == 0 then goto L10a84a;
  #L10a82e.  if v1 != v2 then goto L10a83a;
  #L10a832.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10a838.  goto L10a866;
  #L10a83a.  v4:= new `java.lang.IllegalStateException`;
  #L10a83e.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10a842.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10a848.  throw v4;
  #L10a84a.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10a850.  v4:= v3.`kotlinx.coroutines.flow.FlowKt__CollectKt$a.b` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L10a854.  v3.`kotlinx.coroutines.flow.FlowKt__CollectKt$a.a` @type ^`int` := v2;
  #L10a858.  call temp:= `collect`(v4, v3) @signature `Lkotlinx/coroutines/flow/FlowKt;.collect:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L10a85e.  v4:= temp @kind object;
  #L10a860.  if v4 != v0 then goto L10a866;
  #L10a864.  return v0 @kind object;
  #L10a866.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10a86a.  return v4 @kind object;
}
