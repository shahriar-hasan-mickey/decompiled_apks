record `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$2;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/functions/Function3;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L110548.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L11054c.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2.b` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L110550.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L110556.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$2;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L110494.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1` @kind boolean;
  #L110498.  if v0 == 0 then goto L1104ba;
  #L11049c.  v0:= v8 @kind object;
  #L11049e.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1`) v0 @kind object;
  #L1104a2.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1.d` @type ^`int`;
  #L1104a6.  v2:= -2147483648I;
  #L1104aa.  v3:= v1 ^& v2 @kind int;
  #L1104ae.  if v3 == 0 then goto L1104ba;
  #L1104b2.  v1:= v1 - v2 @kind int;
  #L1104b4.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1.d` @type ^`int` := v1;
  #L1104b8.  goto L1104c4;
  #L1104ba.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1`;
  #L1104be.  call `<init>`(v0, v6, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$2$emit$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1104c4.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1.b` @type ^`java.lang.Object` @kind object;
  #L1104c8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1104ce.  v1:= temp @kind object;
  #L1104d0.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1.d` @type ^`int`;
  #L1104d4.  v3:= 1I;
  #L1104d6.  if v2 == 0 then goto L1104fe;
  #L1104da.  if v2 != v3 then goto L1104ee;
  #L1104de.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1.a` @type ^`java.lang.Object` @kind object;
  #L1104e2.  v7:= (`kotlin.jvm.internal.Ref$ObjectRef`) v7 @kind object;
  #L1104e6.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1104ec.  goto L11052c;
  #L1104ee.  v7:= new `java.lang.IllegalStateException`;
  #L1104f2.  v8:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1104f6.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1104fc.  throw v7;
  #L1104fe.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110504.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L110508.  v2:= v6.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2.b` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L11050c.  v4:= v8.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L110510.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1.a` @type ^`java.lang.Object` := v8 @kind object;
  #L110514.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1.d` @type ^`int` := v3;
  #L110518.  call temp:= `invoke`(v2, v4, v7, v0) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L11051e.  v7:= temp @kind object;
  #L110520.  if v7 != v1 then goto L110526;
  #L110524.  return v1 @kind object;
  #L110526.  v5:= v8 @kind object;
  #L110528.  v8:= v7 @kind object;
  #L11052a.  v7:= v5 @kind object;
  #L11052c.  v7.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v8 @kind object;
  #L110530.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L110534.  return v7 @kind object;
}
procedure `java.lang.Object` `emit$$forInline`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$2;.emit$$forInline:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L11044c.  v0:= 4I;
  #L11044e.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L110454.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1`;
  #L110458.  call `<init>`(v0, v3, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$2$emit$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11045e.  v0:= 5I;
  #L110460.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L110466.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L11046a.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2.b` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L11046e.  v2:= v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L110472.  call temp:= `invoke`(v1, v2, v4, v5) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L110478.  v4:= temp @kind object;
  #L11047a.  v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v4 @kind object;
  #L11047e.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L110482.  return v4 @kind object;
}
