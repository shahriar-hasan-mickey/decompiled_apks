record `kotlinx.coroutines.flow.j$d` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.j$d.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.j$d.b` @AccessFlag PRIVATE_SYNTHETIC;
  `long` `kotlinx.coroutines.flow.j$d.c` @AccessFlag FINAL_SYNTHETIC;
  `long` `kotlinx.coroutines.flow.j$d.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.j$d` v0 @kind this, `long` v1 , `long` v3 , `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/j$d;.<init>:(JJLkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10baf0.  v0.`kotlinx.coroutines.flow.j$d.c` @type ^`long` := v1 @kind wide;
  #L10baf4.  v0.`kotlinx.coroutines.flow.j$d.d` @type ^`long` := v3 @kind wide;
  #L10baf8.  v1:= 2I;
  #L10bafa.  call `<init>`(v0, v1, v5) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L10bb00.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.j$d` v0 @kind this, `kotlinx.coroutines.channels.ProducerScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/j$d;.a:(Lkotlinx/coroutines/channels/ProducerScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L10b9cc.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/j$d;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L10b9d2.  v1:= temp @kind object;
  #L10b9d4.  v1:= (`kotlinx.coroutines.flow.j$d`) v1 @kind object;
  #L10b9d8.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10b9dc.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/j$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L10b9e2.  v1:= temp @kind object;
  #L10b9e4.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.j$d` v7 @kind this, `java.lang.Object` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/flow/j$d;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L10bac4.  v6:= new `kotlinx.coroutines.flow.j$d`;
  #L10bac8.  v1:= v7.`kotlinx.coroutines.flow.j$d.c` @type ^`long` @kind wide;
  #L10bacc.  v3:= v7.`kotlinx.coroutines.flow.j$d.d` @type ^`long` @kind wide;
  #L10bad0.  v0:= v6 @kind object;
  #L10bad2.  v5:= v9 @kind object;
  #L10bad4.  call `<init>`(v0, v1, v3, v5) @signature `Lkotlinx/coroutines/flow/j$d;.<init>:(JJLkotlin/coroutines/Continuation;)V` @kind direct;
  #L10bada.  v6.`kotlinx.coroutines.flow.j$d.b` @type ^`java.lang.Object` := v8 @kind object;
  #L10bade.  return v6 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.j$d` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/j$d;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L10b9a8.  v1:= (`kotlinx.coroutines.channels.ProducerScope`) v1 @kind object;
  #L10b9ac.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L10b9b0.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/j$d;.a:(Lkotlinx/coroutines/channels/ProducerScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L10b9b6.  v1:= temp @kind object;
  #L10b9b8.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.j$d` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/flow/j$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L10b9f8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10b9fe.  v0:= temp @kind object;
  #L10ba00.  v1:= v7.`kotlinx.coroutines.flow.j$d.a` @type ^`int`;
  #L10ba04.  v2:= 3I;
  #L10ba06.  v3:= 2I;
  #L10ba08.  v4:= 1I;
  #L10ba0a.  if v1 == 0 then goto L10ba4c;
  #L10ba0e.  if v1 == v4 then goto L10ba1a;
  #L10ba12.  if v1 == v3 then goto L10ba3a;
  #L10ba16.  if v1 != v2 then goto L10ba2a;
  #L10ba1a.  v1:= v7.`kotlinx.coroutines.flow.j$d.b` @type ^`java.lang.Object` @kind object;
  #L10ba1e.  v1:= (`kotlinx.coroutines.channels.ProducerScope`) v1 @kind object;
  #L10ba22.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10ba28.  goto L10ba76;
  #L10ba2a.  v8:= new `java.lang.IllegalStateException`;
  #L10ba2e.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10ba32.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10ba38.  throw v8;
  #L10ba3a.  v1:= v7.`kotlinx.coroutines.flow.j$d.b` @type ^`java.lang.Object` @kind object;
  #L10ba3e.  v1:= (`kotlinx.coroutines.channels.ProducerScope`) v1 @kind object;
  #L10ba42.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10ba48.  v8:= v7 @kind object;
  #L10ba4a.  goto L10ba9a;
  #L10ba4c.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10ba52.  v8:= v7.`kotlinx.coroutines.flow.j$d.b` @type ^`java.lang.Object` @kind object;
  #L10ba56.  v1:= v8 @kind object;
  #L10ba58.  v1:= (`kotlinx.coroutines.channels.ProducerScope`) v1 @kind object;
  #L10ba5c.  v5:= v7.`kotlinx.coroutines.flow.j$d.c` @type ^`long` @kind wide;
  #L10ba60.  v7.`kotlinx.coroutines.flow.j$d.b` @type ^`java.lang.Object` := v1 @kind object;
  #L10ba64.  v7.`kotlinx.coroutines.flow.j$d.a` @type ^`int` := v4;
  #L10ba68.  call temp:= `delay`(v5, v7) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L10ba6e.  v8:= temp @kind object;
  #L10ba70.  if v8 != v0 then goto L10ba76;
  #L10ba74.  return v0 @kind object;
  #L10ba76.  v8:= v7 @kind object;
  #L10ba78.  call temp:= `getChannel`(v1) @signature `Lkotlinx/coroutines/channels/ProducerScope;.getChannel:()Lkotlinx/coroutines/channels/SendChannel;` @kind interface;
  #L10ba7e.  v4:= temp @kind object;
  #L10ba80.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10ba84.  v8.`kotlinx.coroutines.flow.j$d.b` @type ^`java.lang.Object` := v1 @kind object;
  #L10ba88.  v8.`kotlinx.coroutines.flow.j$d.a` @type ^`int` := v3;
  #L10ba8c.  call temp:= `send`(v4, v5, v8) @signature `Lkotlinx/coroutines/channels/SendChannel;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10ba92.  v4:= temp @kind object;
  #L10ba94.  if v4 != v0 then goto L10ba9a;
  #L10ba98.  return v0 @kind object;
  #L10ba9a.  v4:= v8.`kotlinx.coroutines.flow.j$d.d` @type ^`long` @kind wide;
  #L10ba9e.  v8.`kotlinx.coroutines.flow.j$d.b` @type ^`java.lang.Object` := v1 @kind object;
  #L10baa2.  v8.`kotlinx.coroutines.flow.j$d.a` @type ^`int` := v2;
  #L10baa6.  call temp:= `delay`(v4, v8) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L10baac.  v4:= temp @kind object;
  #L10baae.  if v4 != v0 then goto L10ba78;
  #L10bab2.  return v0 @kind object;
}
