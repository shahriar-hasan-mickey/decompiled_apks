record `kotlinx.coroutines.flow.j$e$c$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlinx.coroutines.channels.ProducerScope` `kotlinx.coroutines.flow.j$e$c$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.j$e$c$a` v0 @kind this, `kotlinx.coroutines.channels.ProducerScope` v1 @kind object) @signature `Lkotlinx/coroutines/flow/j$e$c$a;.<init>:(Lkotlinx/coroutines/channels/ProducerScope;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10be54.  v0.`kotlinx.coroutines.flow.j$e$c$a.a` @type ^`kotlinx.coroutines.channels.ProducerScope` := v1 @kind object;
  #L10be58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10be5e.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.j$e$c$a` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/j$e$c$a;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10bdb8.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.j$e$c$a$a` @kind boolean;
  #L10bdbc.  if v0 == 0 then goto L10bdde;
  #L10bdc0.  v0:= v6 @kind object;
  #L10bdc2.  v0:= (`kotlinx.coroutines.flow.j$e$c$a$a`) v0 @kind object;
  #L10bdc6.  v1:= v0.`kotlinx.coroutines.flow.j$e$c$a$a.c` @type ^`int`;
  #L10bdca.  v2:= -2147483648I;
  #L10bdce.  v3:= v1 ^& v2 @kind int;
  #L10bdd2.  if v3 == 0 then goto L10bdde;
  #L10bdd6.  v1:= v1 - v2 @kind int;
  #L10bdd8.  v0.`kotlinx.coroutines.flow.j$e$c$a$a.c` @type ^`int` := v1;
  #L10bddc.  goto L10bde8;
  #L10bdde.  v0:= new `kotlinx.coroutines.flow.j$e$c$a$a`;
  #L10bde2.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/j$e$c$a$a;.<init>:(Lkotlinx/coroutines/flow/j$e$c$a;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10bde8.  v6:= v0.`kotlinx.coroutines.flow.j$e$c$a$a.a` @type ^`java.lang.Object` @kind object;
  #L10bdec.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10bdf2.  v1:= temp @kind object;
  #L10bdf4.  v2:= v0.`kotlinx.coroutines.flow.j$e$c$a$a.c` @type ^`int`;
  #L10bdf8.  v3:= 1I;
  #L10bdfa.  if v2 == 0 then goto L10be1a;
  #L10bdfe.  if v2 != v3 then goto L10be0a;
  #L10be02.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10be08.  goto L10be3e;
  #L10be0a.  v5:= new `java.lang.IllegalStateException`;
  #L10be0e.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10be12.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10be18.  throw v5;
  #L10be1a.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10be20.  v6:= v4.`kotlinx.coroutines.flow.j$e$c$a.a` @type ^`kotlinx.coroutines.channels.ProducerScope` @kind object;
  #L10be24.  if v5 != 0 then goto L10be2c;
  #L10be28.  v5:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L10be2c.  v0.`kotlinx.coroutines.flow.j$e$c$a$a.c` @type ^`int` := v3;
  #L10be30.  call temp:= `send`(v6, v5, v0) @signature `Lkotlinx/coroutines/channels/SendChannel;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10be36.  v5:= temp @kind object;
  #L10be38.  if v5 != v1 then goto L10be3e;
  #L10be3c.  return v1 @kind object;
  #L10be3e.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10be42.  return v5 @kind object;
}
