record `kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$collect$3;.<init>:(Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L10a688.  v0.`kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3.a` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L10a68c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10a692.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$collect$3;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L10a658.  v0:= v1.`kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3.a` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10a65c.  call temp:= `invoke`(v0, v2, v3) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10a662.  v2:= temp @kind object;
  #L10a664.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10a66a.  v3:= temp @kind object;
  #L10a66c.  if v2 != v3 then goto L10a672;
  #L10a670.  return v2 @kind object;
  #L10a672.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10a676.  return v2 @kind object;
}
procedure `java.lang.Object` `emit$$forInline`(`kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$collect$3;.emit$$forInline:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L10a61c.  v0:= 4I;
  #L10a61e.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10a624.  v0:= new `kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1`;
  #L10a628.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$collect$3$emit$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__CollectKt$collect$3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10a62e.  v0:= 5I;
  #L10a630.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10a636.  v0:= v1.`kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3.a` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10a63a.  call temp:= `invoke`(v0, v2, v3) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10a640.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10a644.  return v2 @kind object;
}
