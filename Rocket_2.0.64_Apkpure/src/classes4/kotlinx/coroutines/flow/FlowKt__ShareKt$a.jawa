record `kotlinx.coroutines.flow.FlowKt__ShareKt$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ShareKt$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ShareKt$a.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__ShareKt$a.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.CompletableDeferred` `kotlinx.coroutines.flow.FlowKt__ShareKt$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ShareKt$a` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlinx.coroutines.CompletableDeferred` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$a;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L11186c.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.c` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L111870.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.d` @type ^`kotlinx.coroutines.CompletableDeferred` := v2 @kind object;
  #L111874.  v1:= 2I;
  #L111876.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L11187c.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__ShareKt$a` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L111844.  v0:= new `kotlinx.coroutines.flow.FlowKt__ShareKt$a`;
  #L111848.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L11184c.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.d` @type ^`kotlinx.coroutines.CompletableDeferred` @kind object;
  #L111850.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$a;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L111856.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.b` @type ^`java.lang.Object` := v4 @kind object;
  #L11185a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ShareKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L111750.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L111754.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L111758.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L11175e.  v1:= temp @kind object;
  #L111760.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ShareKt$a` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L111774.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L11177a.  v1:= temp @kind object;
  #L11177c.  v1:= (`kotlinx.coroutines.flow.FlowKt__ShareKt$a`) v1 @kind object;
  #L111780.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L111784.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L11178a.  v1:= temp @kind object;
  #L11178c.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ShareKt$a` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1117a0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1117a6.  v0:= temp @kind object;
  #L1117a8.  v1:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.a` @type ^`int`;
  #L1117ac.  v2:= 1I;
  #L1117ae.  if v1 == 0 then goto L1117d2;
  #L1117b2.  if v1 != v2 then goto L1117c2;
  #L1117b6.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1117bc.  goto L11180e;
  #L1117be.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1117c0.  goto L111814;
  #L1117c2.  v7:= new `java.lang.IllegalStateException`;
  #L1117c6.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1117ca.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1117d0.  throw v7;
  #L1117d2.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1117d8.  v7:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.b` @type ^`java.lang.Object` @kind object;
  #L1117dc.  v7:= (`kotlinx.coroutines.CoroutineScope`) v7 @kind object;
  #L1117e0.  v1:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L1117e4.  call `<init>`(v1) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L1117ea.  v3:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L1117ee.  v4:= new `kotlinx.coroutines.flow.FlowKt__ShareKt$a$a`;
  #L1117f2.  v5:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.d` @type ^`kotlinx.coroutines.CompletableDeferred` @kind object;
  #L1117f6.  call `<init>`(v4, v1, v7, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$a$a;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CompletableDeferred;)V` @kind direct;
  #L1117fc.  v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.a` @type ^`int` := v2;
  #L111800.  call temp:= `collect`(v3, v4, v6) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L111806.  v7:= temp @kind object;
  #L111808.  if v7 != v0 then goto L11180e;
  #L11180c.  return v0 @kind object;
  #L11180e.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L111812.  return v7 @kind object;
  #L111814.  v0:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$a.d` @type ^`kotlinx.coroutines.CompletableDeferred` @kind object;
  #L111818.  call temp:= `completeExceptionally`(v0, v7) @signature `Lkotlinx/coroutines/CompletableDeferred;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind interface;
  #L11181e.  throw v7;
  catch `java.lang.Throwable` @[L1117b6..L1117bc] goto L1117be;
  catch `java.lang.Throwable` @[L1117e0..L111808] goto L1117be;
}
