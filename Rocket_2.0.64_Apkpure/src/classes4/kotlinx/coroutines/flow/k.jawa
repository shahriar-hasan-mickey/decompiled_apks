record `kotlinx.coroutines.flow.k` @kind class @AccessFlag FINAL_SYNTHETIC {
}
global `kotlin.jvm.functions.Function1` `@@kotlinx.coroutines.flow.k.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlin.jvm.functions.Function2` `@@kotlinx.coroutines.flow.k.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L10c538.  v0:= `@@kotlinx.coroutines.flow.k$b.a` @type ^`kotlinx.coroutines.flow.k$b` @kind object;
  #L10c53c.  `@@kotlinx.coroutines.flow.k.a` @type ^`kotlin.jvm.functions.Function1` := v0 @kind object;
  #L10c540.  v0:= `@@kotlinx.coroutines.flow.k$a.a` @type ^`kotlinx.coroutines.flow.k$a` @kind object;
  #L10c544.  `@@kotlinx.coroutines.flow.k.b` @type ^`kotlin.jvm.functions.Function2` := v0 @kind object;
  #L10c548.  return @kind void;
}
procedure `kotlinx.coroutines.flow.Flow` `a`(`kotlinx.coroutines.flow.Flow` v2 @kind object) @signature `Lkotlinx/coroutines/flow/k;.a:(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L10c480.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.flow.StateFlow` @kind boolean;
  #L10c484.  if v0 == 0 then goto L10c48a;
  #L10c488.  goto L10c49a;
  #L10c48a.  v0:= `@@kotlinx.coroutines.flow.k.a` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L10c48e.  v1:= `@@kotlinx.coroutines.flow.k.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10c492.  call temp:= `d`(v2, v0, v1) @signature `Lkotlinx/coroutines/flow/k;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10c498.  v2:= temp @kind object;
  #L10c49a.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `b`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/flow/k;.b:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L10c4ac.  v0:= `@@kotlinx.coroutines.flow.k.a` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L10c4b0.  v1:= 2I;
  #L10c4b2.  call temp:= `beforeCheckcastToFunctionOfArity`(v3, v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L10c4b8.  v3:= temp @kind object;
  #L10c4ba.  v3:= (`kotlin.jvm.functions.Function2`) v3 @kind object;
  #L10c4be.  call temp:= `d`(v2, v0, v3) @signature `Lkotlinx/coroutines/flow/k;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10c4c4.  v2:= temp @kind object;
  #L10c4c6.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `c`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/flow/k;.c:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10c518.  v0:= `@@kotlinx.coroutines.flow.k.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10c51c.  call temp:= `d`(v1, v2, v0) @signature `Lkotlinx/coroutines/flow/k;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10c522.  v1:= temp @kind object;
  #L10c524.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `d`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlinx/coroutines/flow/k;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L10c4d8.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.flow.e` @kind boolean;
  #L10c4dc.  if v0 == 0 then goto L10c4f8;
  #L10c4e0.  v0:= v2 @kind object;
  #L10c4e2.  v0:= (`kotlinx.coroutines.flow.e`) v0 @kind object;
  #L10c4e6.  v1:= v0.`kotlinx.coroutines.flow.e.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L10c4ea.  if v1 != v3 then goto L10c4f8;
  #L10c4ee.  v0:= v0.`kotlinx.coroutines.flow.e.c` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10c4f2.  if v0 != v4 then goto L10c4f8;
  #L10c4f6.  goto L10c504;
  #L10c4f8.  v0:= new `kotlinx.coroutines.flow.e`;
  #L10c4fc.  call `<init>`(v0, v2, v3, v4) @signature `Lkotlinx/coroutines/flow/e;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L10c502.  v2:= v0 @kind object;
  #L10c504.  return v2 @kind object;
}
