record `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlinx.coroutines.flow.Flow`[] `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7` v0 @kind this, `kotlinx.coroutines.flow.Flow`[] v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1150f8.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.c` @type ^`kotlinx.coroutines.flow.Flow`[] := v1 @kind object;
  #L1150fc.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.d` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L115100.  v1:= 2I;
  #L115102.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L115108.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1150d0.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7`;
  #L1150d4.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.c` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L1150d8.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L1150dc.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1150e2.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.b` @type ^`java.lang.Object` := v4 @kind object;
  #L1150e6.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L114f88.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L114f8c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L114f90.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L114f96.  v1:= temp @kind object;
  #L114f98.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L114fac.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L114fb2.  v1:= temp @kind object;
  #L114fb4.  v1:= (`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7`) v1 @kind object;
  #L114fb8.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L114fbc.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L114fc2.  v1:= temp @kind object;
  #L114fc4.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L11503c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L115042.  v0:= temp @kind object;
  #L115044.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.a` @type ^`int`;
  #L115048.  v2:= 1I;
  #L11504a.  if v1 == 0 then goto L11506a;
  #L11504e.  if v1 != v2 then goto L11505a;
  #L115052.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L115058.  goto L1150b8;
  #L11505a.  v8:= new `java.lang.IllegalStateException`;
  #L11505e.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L115062.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L115068.  throw v8;
  #L11506a.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L115070.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.b` @type ^`java.lang.Object` @kind object;
  #L115074.  v8:= (`kotlinx.coroutines.flow.FlowCollector`) v8 @kind object;
  #L115078.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.c` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L11507c.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L115082.  v3:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1`;
  #L115086.  v4:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.c` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L11508a.  call `<init>`(v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7$1;.<init>:([Lkotlinx/coroutines/flow/Flow;)V` @kind direct;
  #L115090.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L115096.  v4:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2`;
  #L11509a.  v5:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L11509e.  v6:= 0I;
  #L1150a0.  call `<init>`(v4, v5, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7$2;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1150a6.  v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.a` @type ^`int` := v2;
  #L1150aa.  call temp:= `combineInternal`(v8, v1, v3, v4, v7) @signature `Lkotlinx/coroutines/flow/internal/CombineKt;.combineInternal:(Lkotlinx/coroutines/flow/FlowCollector;[Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L1150b0.  v8:= temp @kind object;
  #L1150b2.  if v8 != v0 then goto L1150b8;
  #L1150b6.  return v0 @kind object;
  #L1150b8.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1150bc.  return v8 @kind object;
}
procedure `java.lang.Object` `invokeSuspend$$forInline`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.invokeSuspend$$forInline:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L114fd8.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.b` @type ^`java.lang.Object` @kind object;
  #L114fdc.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L114fe0.  v0:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.c` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L114fe4.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L114fea.  v1:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1`;
  #L114fee.  v2:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.c` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L114ff2.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7$1;.<init>:([Lkotlinx/coroutines/flow/Flow;)V` @kind direct;
  #L114ff8.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L114ffe.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2`;
  #L115002.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L115006.  v4:= 0I;
  #L115008.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7$2;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11500e.  v3:= 0I;
  #L115010.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L115016.  call temp:= `combineInternal`(v6, v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/internal/CombineKt;.combineInternal:(Lkotlinx/coroutines/flow/FlowCollector;[Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L11501c.  v6:= 1I;
  #L11501e.  call `mark`(v6) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L115024.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L115028.  return v6 @kind object;
}
