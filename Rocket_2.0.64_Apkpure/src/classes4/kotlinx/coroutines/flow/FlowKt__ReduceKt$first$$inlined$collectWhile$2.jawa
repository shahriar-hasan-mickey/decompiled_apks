record `kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.jvm.internal.Ref$ObjectRef` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$first$$inlined$collectWhile$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1100e0.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.a` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L1100e4.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v2 @kind object;
  #L1100e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1100ee.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$first$$inlined$collectWhile$2;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10fffc.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1` @kind boolean;
  #L110000.  if v0 == 0 then goto L110022;
  #L110004.  v0:= v6 @kind object;
  #L110006.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1`) v0 @kind object;
  #L11000a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.c` @type ^`int`;
  #L11000e.  v2:= -2147483648I;
  #L110012.  v3:= v1 ^& v2 @kind int;
  #L110016.  if v3 == 0 then goto L110022;
  #L11001a.  v1:= v1 - v2 @kind int;
  #L11001c.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.c` @type ^`int` := v1;
  #L110020.  goto L11002c;
  #L110022.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1`;
  #L110026.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$first$$inlined$collectWhile$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ReduceKt$first$$inlined$collectWhile$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11002c.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.b` @type ^`java.lang.Object` @kind object;
  #L110030.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L110036.  v1:= temp @kind object;
  #L110038.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.c` @type ^`int`;
  #L11003c.  v3:= 1I;
  #L11003e.  if v2 == 0 then goto L11006a;
  #L110042.  if v2 != v3 then goto L11005a;
  #L110046.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.e` @type ^`java.lang.Object` @kind object;
  #L11004a.  v0:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.a` @type ^`java.lang.Object` @kind object;
  #L11004e.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2`) v0 @kind object;
  #L110052.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110058.  goto L1100a0;
  #L11005a.  v5:= new `java.lang.IllegalStateException`;
  #L11005e.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L110062.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110068.  throw v5;
  #L11006a.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110070.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.a` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L110074.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.a` @type ^`java.lang.Object` := v4 @kind object;
  #L110078.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.e` @type ^`java.lang.Object` := v5 @kind object;
  #L11007c.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.c` @type ^`int` := v3;
  #L110080.  v2:= 6I;
  #L110082.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L110088.  call temp:= `invoke`(v6, v5, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L11008e.  v6:= temp @kind object;
  #L110090.  v0:= 7I;
  #L110092.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L110098.  if v6 != v1 then goto L11009e;
  #L11009c.  return v1 @kind object;
  #L11009e.  v0:= v4 @kind object;
  #L1100a0.  v6:= (`java.lang.Boolean`) v6 @kind object;
  #L1100a4.  call temp:= `booleanValue`(v6) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1100aa.  v6:= temp;
  #L1100ac.  if v6 == 0 then goto L1100ba;
  #L1100b0.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L1100b4.  v6.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v5 @kind object;
  #L1100b8.  v3:= 0I;
  #L1100ba.  if v3 == 0 then goto L1100c4;
  #L1100be.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1100c2.  return v5 @kind object;
  #L1100c4.  v5:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L1100c8.  call `<init>`(v5, v0) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L1100ce.  throw v5;
}
