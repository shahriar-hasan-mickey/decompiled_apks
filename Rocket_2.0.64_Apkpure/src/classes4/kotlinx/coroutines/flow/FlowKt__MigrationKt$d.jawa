record `kotlinx.coroutines.flow.FlowKt__MigrationKt$d` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__MigrationKt$d.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$d.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$d.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function1` `kotlinx.coroutines.flow.FlowKt__MigrationKt$d.d` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$d.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$d` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.<init>:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10f910.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.d` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L10f914.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.e` @type ^`java.lang.Object` := v2 @kind object;
  #L10f918.  v1:= 3I;
  #L10f91a.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L10f920.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$d` v3 @kind this, `kotlinx.coroutines.flow.FlowCollector` v4 @kind object, `java.lang.Throwable` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.a:(Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10f844.  v0:= new `kotlinx.coroutines.flow.FlowKt__MigrationKt$d`;
  #L10f848.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.d` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L10f84c.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.e` @type ^`java.lang.Object` @kind object;
  #L10f850.  call `<init>`(v0, v1, v2, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.<init>:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10f856.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.b` @type ^`java.lang.Object` := v4 @kind object;
  #L10f85a.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.c` @type ^`java.lang.Object` := v5 @kind object;
  #L10f85e.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10f862.  call temp:= `invokeSuspend`(v0, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L10f868.  v4:= temp @kind object;
  #L10f86a.  return v4 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$d` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L10f81c.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L10f820.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L10f824.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L10f828.  call temp:= `a`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.a:(Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L10f82e.  v1:= temp @kind object;
  #L10f830.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10f87c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10f882.  v0:= temp @kind object;
  #L10f884.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.a` @type ^`int`;
  #L10f888.  v2:= 1I;
  #L10f88a.  if v1 == 0 then goto L10f8aa;
  #L10f88e.  if v1 != v2 then goto L10f89a;
  #L10f892.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10f898.  goto L10f8f8;
  #L10f89a.  v5:= new `java.lang.IllegalStateException`;
  #L10f89e.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10f8a2.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10f8a8.  throw v5;
  #L10f8aa.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10f8b0.  v5:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.b` @type ^`java.lang.Object` @kind object;
  #L10f8b4.  v5:= (`kotlinx.coroutines.flow.FlowCollector`) v5 @kind object;
  #L10f8b8.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.c` @type ^`java.lang.Object` @kind object;
  #L10f8bc.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L10f8c0.  v3:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.d` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L10f8c4.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10f8ca.  v3:= temp @kind object;
  #L10f8cc.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L10f8d0.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L10f8d6.  v3:= temp;
  #L10f8d8.  if v3 == 0 then goto L10f8fe;
  #L10f8dc.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.e` @type ^`java.lang.Object` @kind object;
  #L10f8e0.  v3:= 0I;
  #L10f8e2.  v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.b` @type ^`java.lang.Object` := v3 @kind object;
  #L10f8e6.  v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.a` @type ^`int` := v2;
  #L10f8ea.  call temp:= `emit`(v5, v1, v4) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10f8f0.  v5:= temp @kind object;
  #L10f8f2.  if v5 != v0 then goto L10f8f8;
  #L10f8f6.  return v0 @kind object;
  #L10f8f8.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10f8fc.  return v5 @kind object;
  #L10f8fe.  throw v1;
}
