record `kotlinx.coroutines.flow.FlowKt__CollectKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt;.a:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10a8bc.  v0:= `@@kotlinx.coroutines.flow.internal.NopCollector.INSTANCE` @type ^`kotlinx.coroutines.flow.internal.NopCollector` @kind object;
  #L10a8c0.  call temp:= `collect`(v1, v0, v2) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10a8c6.  v1:= temp @kind object;
  #L10a8c8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10a8ce.  v2:= temp @kind object;
  #L10a8d0.  if v1 != v2 then goto L10a8d6;
  #L10a8d4.  return v1 @kind object;
  #L10a8d6.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10a8da.  return v1 @kind object;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt;.b:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L10a8ec.  v0:= new `kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3`;
  #L10a8f0.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$collect$3;.<init>:(Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L10a8f6.  call temp:= `collect`(v1, v0, v3) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10a8fc.  v1:= temp @kind object;
  #L10a8fe.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10a904.  v2:= temp @kind object;
  #L10a906.  if v1 != v2 then goto L10a90c;
  #L10a90a.  return v1 @kind object;
  #L10a90c.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10a910.  return v1 @kind object;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt;.c:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10a924.  v0:= new `kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2`;
  #L10a928.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$collectIndexed$2;.<init>:(Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L10a92e.  call temp:= `collect`(v1, v0, v3) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10a934.  v1:= temp @kind object;
  #L10a936.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10a93c.  v2:= temp @kind object;
  #L10a93e.  if v1 != v2 then goto L10a944;
  #L10a942.  return v1 @kind object;
  #L10a944.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10a948.  return v1 @kind object;
}
procedure `java.lang.Object` `d`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L10a95c.  call temp:= `mapLatest`(v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt;.mapLatest:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10a962.  v2:= temp @kind object;
  #L10a964.  v3:= 0I;
  #L10a966.  v0:= 0I;
  #L10a968.  v1:= 2I;
  #L10a96a.  call temp:= `buffer$default`(v2, v3, v0, v1, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.buffer$default:(Lkotlinx/coroutines/flow/Flow;ILkotlinx/coroutines/channels/BufferOverflow;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10a970.  v2:= temp @kind object;
  #L10a972.  call temp:= `collect`(v2, v4) @signature `Lkotlinx/coroutines/flow/FlowKt;.collect:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L10a978.  v2:= temp @kind object;
  #L10a97a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10a980.  v3:= temp @kind object;
  #L10a982.  if v2 != v3 then goto L10a988;
  #L10a986.  return v2 @kind object;
  #L10a988.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10a98c.  return v2 @kind object;
}
procedure `java.lang.Object` `e`(`kotlinx.coroutines.flow.FlowCollector` v0 @kind object, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt;.e:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L10a9a0.  call `ensureActive`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.ensureActive:(Lkotlinx/coroutines/flow/FlowCollector;)V` @kind static;
  #L10a9a6.  call temp:= `collect`(v1, v0, v2) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10a9ac.  v0:= temp @kind object;
  #L10a9ae.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10a9b4.  v1:= temp @kind object;
  #L10a9b6.  if v0 != v1 then goto L10a9bc;
  #L10a9ba.  return v0 @kind object;
  #L10a9bc.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10a9c0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `f`(`kotlinx.coroutines.flow.Flow` v6 @kind object, `kotlinx.coroutines.CoroutineScope` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt;.f:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L10a9d4.  v3:= new `kotlinx.coroutines.flow.FlowKt__CollectKt$a`;
  #L10a9d8.  v0:= 0I;
  #L10a9da.  call `<init>`(v3, v6, v0) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10a9e0.  v1:= 0I;
  #L10a9e2.  v2:= 0I;
  #L10a9e4.  v4:= 3I;
  #L10a9e6.  v5:= 0I;
  #L10a9e8.  v0:= v7 @kind object;
  #L10a9ea.  call temp:= `launch$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/BuildersKt;.launch$default:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;` @kind static;
  #L10a9f0.  v6:= temp @kind object;
  #L10a9f2.  return v6 @kind object;
}
