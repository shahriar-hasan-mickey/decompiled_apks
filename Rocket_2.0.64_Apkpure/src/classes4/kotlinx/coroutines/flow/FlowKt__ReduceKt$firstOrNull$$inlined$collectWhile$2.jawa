record `kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.jvm.internal.Ref$ObjectRef` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L110304.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.a` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L110308.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v2 @kind object;
  #L11030c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L110312.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L110220.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1` @kind boolean;
  #L110224.  if v0 == 0 then goto L110246;
  #L110228.  v0:= v6 @kind object;
  #L11022a.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1`) v0 @kind object;
  #L11022e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.c` @type ^`int`;
  #L110232.  v2:= -2147483648I;
  #L110236.  v3:= v1 ^& v2 @kind int;
  #L11023a.  if v3 == 0 then goto L110246;
  #L11023e.  v1:= v1 - v2 @kind int;
  #L110240.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.c` @type ^`int` := v1;
  #L110244.  goto L110250;
  #L110246.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1`;
  #L11024a.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L110250.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.b` @type ^`java.lang.Object` @kind object;
  #L110254.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11025a.  v1:= temp @kind object;
  #L11025c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.c` @type ^`int`;
  #L110260.  v3:= 1I;
  #L110262.  if v2 == 0 then goto L11028e;
  #L110266.  if v2 != v3 then goto L11027e;
  #L11026a.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.e` @type ^`java.lang.Object` @kind object;
  #L11026e.  v0:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.a` @type ^`java.lang.Object` @kind object;
  #L110272.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2`) v0 @kind object;
  #L110276.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11027c.  goto L1102c4;
  #L11027e.  v5:= new `java.lang.IllegalStateException`;
  #L110282.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L110286.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11028c.  throw v5;
  #L11028e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L110294.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.a` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L110298.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.a` @type ^`java.lang.Object` := v4 @kind object;
  #L11029c.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.e` @type ^`java.lang.Object` := v5 @kind object;
  #L1102a0.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.c` @type ^`int` := v3;
  #L1102a4.  v2:= 6I;
  #L1102a6.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1102ac.  call temp:= `invoke`(v6, v5, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1102b2.  v6:= temp @kind object;
  #L1102b4.  v0:= 7I;
  #L1102b6.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1102bc.  if v6 != v1 then goto L1102c2;
  #L1102c0.  return v1 @kind object;
  #L1102c2.  v0:= v4 @kind object;
  #L1102c4.  v6:= (`java.lang.Boolean`) v6 @kind object;
  #L1102c8.  call temp:= `booleanValue`(v6) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1102ce.  v6:= temp;
  #L1102d0.  if v6 == 0 then goto L1102de;
  #L1102d4.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L1102d8.  v6.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v5 @kind object;
  #L1102dc.  v3:= 0I;
  #L1102de.  if v3 == 0 then goto L1102e8;
  #L1102e2.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1102e6.  return v5 @kind object;
  #L1102e8.  v5:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L1102ec.  call `<init>`(v5, v0) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L1102f2.  throw v5;
}
