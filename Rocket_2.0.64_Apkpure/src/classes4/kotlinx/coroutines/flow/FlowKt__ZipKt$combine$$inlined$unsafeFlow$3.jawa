record `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `kotlinx.coroutines.flow.Flow`[] `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3` v0 @kind this, `kotlinx.coroutines.flow.Flow`[] v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$3;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L113b20.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.a` @type ^`kotlinx.coroutines.flow.Flow`[] := v1 @kind object;
  #L113b24.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L113b28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L113b2e.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3` v5 @kind this, `kotlinx.coroutines.flow.FlowCollector` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$3;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L113ac4.  v0:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.a` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L113ac8.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L113ace.  v1:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1`;
  #L113ad2.  v2:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.a` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L113ad6.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$6$1;.<init>:([Lkotlinx/coroutines/flow/Flow;)V` @kind direct;
  #L113adc.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L113ae2.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2`;
  #L113ae6.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L113aea.  v4:= 0I;
  #L113aec.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$6$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L113af2.  call temp:= `combineInternal`(v6, v0, v1, v2, v7) @signature `Lkotlinx/coroutines/flow/internal/CombineKt;.combineInternal:(Lkotlinx/coroutines/flow/FlowCollector;[Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L113af8.  v6:= temp @kind object;
  #L113afa.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L113b00.  v7:= temp @kind object;
  #L113b02.  if v6 != v7 then goto L113b08;
  #L113b06.  return v6 @kind object;
  #L113b08.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L113b0c.  return v6 @kind object;
}
procedure `java.lang.Object` `collect$$forInline`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3` v5 @kind this, `kotlinx.coroutines.flow.FlowCollector` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$3;.collect$$forInline:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L113a50.  v0:= 4I;
  #L113a52.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L113a58.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1`;
  #L113a5c.  call `<init>`(v0, v5, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L113a62.  v0:= 5I;
  #L113a64.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L113a6a.  v0:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.a` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L113a6e.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L113a74.  v1:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1`;
  #L113a78.  v2:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.a` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L113a7c.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$6$1;.<init>:([Lkotlinx/coroutines/flow/Flow;)V` @kind direct;
  #L113a82.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L113a88.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2`;
  #L113a8c.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L113a90.  v4:= 0I;
  #L113a92.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$6$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L113a98.  v3:= 0I;
  #L113a9a.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L113aa0.  call temp:= `combineInternal`(v6, v0, v1, v2, v7) @signature `Lkotlinx/coroutines/flow/internal/CombineKt;.combineInternal:(Lkotlinx/coroutines/flow/FlowCollector;[Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L113aa6.  v6:= 1I;
  #L113aa8.  call `mark`(v6) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L113aae.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L113ab2.  return v6 @kind object;
}
