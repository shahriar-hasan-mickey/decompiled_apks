record `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10e96c.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.c` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L10e970.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.d` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L10e974.  v1:= 2I;
  #L10e976.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L10e97c.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10e944.  v0:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1`;
  #L10e948.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L10e94c.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L10e950.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10e956.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.b` @type ^`java.lang.Object` := v4 @kind object;
  #L10e95a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L10e848.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L10e84c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L10e850.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L10e856.  v1:= temp @kind object;
  #L10e858.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L10e86c.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L10e872.  v1:= temp @kind object;
  #L10e874.  v1:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1`) v1 @kind object;
  #L10e878.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10e87c.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L10e882.  v1:= temp @kind object;
  #L10e884.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L10e898.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10e89e.  v0:= temp @kind object;
  #L10e8a0.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.a` @type ^`int`;
  #L10e8a4.  v2:= 1I;
  #L10e8a6.  if v1 == 0 then goto L10e8d2;
  #L10e8aa.  if v1 != v2 then goto L10e8c2;
  #L10e8ae.  v0:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.b` @type ^`java.lang.Object` @kind object;
  #L10e8b2.  v0:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1`) v0 @kind object;
  #L10e8b6.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10e8bc.  goto L10e912;
  #L10e8be.  v6:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L10e8c0.  goto L10e90c;
  #L10e8c2.  v6:= new `java.lang.IllegalStateException`;
  #L10e8c6.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10e8ca.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10e8d0.  throw v6;
  #L10e8d2.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10e8d8.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.b` @type ^`java.lang.Object` @kind object;
  #L10e8dc.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L10e8e0.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L10e8e4.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L10e8e8.  v4:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1`;
  #L10e8ec.  call `<init>`(v4, v3, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L10e8f2.  v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.b` @type ^`java.lang.Object` := v4 @kind object;
  #L10e8f6.  v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.a` @type ^`int` := v2;
  #L10e8fa.  call temp:= `collect`(v1, v4, v5) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10e900.  v6:= temp @kind object;
  #L10e902.  if v6 != v0 then goto L10e912;
  #L10e906.  return v0 @kind object;
  #L10e908.  v6:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L10e90a.  v0:= v4 @kind object;
  #L10e90c.  call `checkOwnership`(v6, v0) @signature `Lkotlinx/coroutines/flow/internal/FlowExceptions_commonKt;.checkOwnership:(Lkotlinx/coroutines/flow/internal/AbortFlowException;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind static;
  #L10e912.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10e916.  return v6 @kind object;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L10e8b6..L10e8bc] goto L10e8be;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L10e8f2..L10e902] goto L10e908;
}
