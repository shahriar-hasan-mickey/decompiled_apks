record `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function4` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlin.jvm.functions.Function4` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1140ec.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.d` @type ^`kotlin.jvm.functions.Function4` := v2 @kind object;
  #L1140f0.  v2:= 3I;
  #L1140f2.  call `<init>`(v0, v2, v1) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L1140f8.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L114004.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L114008.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L11400c.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L114010.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L114016.  v1:= temp @kind object;
  #L114018.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L11402c.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1`;
  #L114030.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.d` @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L114034.  call `<init>`(v0, v5, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L11403a.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.b` @type ^`java.lang.Object` := v3 @kind object;
  #L11403e.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.c` @type ^`java.lang.Object` := v4 @kind object;
  #L114042.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L114046.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L11404c.  v3:= temp @kind object;
  #L11404e.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L114060.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L114066.  v0:= temp @kind object;
  #L114068.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.a` @type ^`int`;
  #L11406c.  v2:= 1I;
  #L11406e.  if v1 == 0 then goto L11408e;
  #L114072.  if v1 != v2 then goto L11407e;
  #L114076.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11407c.  goto L1140d4;
  #L11407e.  v6:= new `java.lang.IllegalStateException`;
  #L114082.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L114086.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11408c.  throw v6;
  #L11408e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L114094.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.b` @type ^`java.lang.Object` @kind object;
  #L114098.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L11409c.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.c` @type ^`java.lang.Object` @kind object;
  #L1140a0.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L1140a4.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.d` @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L1140a8.  v4:= 0I;
  #L1140aa.  v4:= v1[v4] @kind object;
  #L1140ae.  v1:= v1[v2] @kind object;
  #L1140b2.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.a` @type ^`int` := v2;
  #L1140b6.  v2:= 6I;
  #L1140b8.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1140be.  call temp:= `invoke`(v3, v6, v4, v1, v5) @signature `Lkotlin/jvm/functions/Function4;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1140c4.  v6:= temp @kind object;
  #L1140c6.  v1:= 7I;
  #L1140c8.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1140ce.  if v6 != v0 then goto L1140d4;
  #L1140d2.  return v0 @kind object;
  #L1140d4.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1140d8.  return v6 @kind object;
}
