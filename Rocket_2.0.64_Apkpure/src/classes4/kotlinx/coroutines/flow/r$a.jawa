record `kotlinx.coroutines.flow.r$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.r$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.r$a.b` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.r$a.c` @AccessFlag SYNTHETIC;
  `kotlinx.coroutines.flow.r` `kotlinx.coroutines.flow.r$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.r$a` v0 @kind this, `kotlinx.coroutines.flow.r` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/r$a;.<init>:(Lkotlinx/coroutines/flow/r;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L118ad0.  v0.`kotlinx.coroutines.flow.r$a.d` @type ^`kotlinx.coroutines.flow.r` := v1 @kind object;
  #L118ad4.  v1:= 3I;
  #L118ad6.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L118adc.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.r$a` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `int` v4 , `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/r$a;.a:(Lkotlinx/coroutines/flow/FlowCollector;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L11894c.  v0:= new `kotlinx.coroutines.flow.r$a`;
  #L118950.  v1:= v2.`kotlinx.coroutines.flow.r$a.d` @type ^`kotlinx.coroutines.flow.r` @kind object;
  #L118954.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/r$a;.<init>:(Lkotlinx/coroutines/flow/r;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11895a.  v0.`kotlinx.coroutines.flow.r$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L11895e.  v0.`kotlinx.coroutines.flow.r$a.c` @type ^`int` := v4;
  #L118962.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L118966.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/r$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L11896c.  v3:= temp @kind object;
  #L11896e.  return v3 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.r$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/r$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L11891c.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L118920.  v2:= (`java.lang.Number`) v2 @kind object;
  #L118924.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L11892a.  v2:= temp;
  #L11892c.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L118930.  call temp:= `a`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/r$a;.a:(Lkotlinx/coroutines/flow/FlowCollector;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L118936.  v1:= temp @kind object;
  #L118938.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.r$a` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/flow/r$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L118980.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L118986.  v0:= temp @kind object;
  #L118988.  v1:= v9.`kotlinx.coroutines.flow.r$a.a` @type ^`int`;
  #L11898c.  v2:= 5I;
  #L11898e.  v3:= 4I;
  #L118990.  v4:= 3I;
  #L118992.  v5:= 2I;
  #L118994.  v6:= 1I;
  #L118996.  if v1 == 0 then goto L1189f8;
  #L11899a.  if v1 == v6 then goto L1189f0;
  #L11899e.  if v1 == v5 then goto L1189e0;
  #L1189a2.  if v1 == v4 then goto L1189d0;
  #L1189a6.  if v1 == v3 then goto L1189c0;
  #L1189aa.  if v1 != v2 then goto L1189b0;
  #L1189ae.  goto L1189f0;
  #L1189b0.  v10:= new `java.lang.IllegalStateException`;
  #L1189b4.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1189b8.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1189be.  throw v10;
  #L1189c0.  v1:= v9.`kotlinx.coroutines.flow.r$a.b` @type ^`java.lang.Object` @kind object;
  #L1189c4.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L1189c8.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1189ce.  goto L118a9c;
  #L1189d0.  v1:= v9.`kotlinx.coroutines.flow.r$a.b` @type ^`java.lang.Object` @kind object;
  #L1189d4.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L1189d8.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1189de.  goto L118a7a;
  #L1189e0.  v1:= v9.`kotlinx.coroutines.flow.r$a.b` @type ^`java.lang.Object` @kind object;
  #L1189e4.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L1189e8.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1189ee.  goto L118a48;
  #L1189f0.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1189f6.  goto L118ab8;
  #L1189f8.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1189fe.  v10:= v9.`kotlinx.coroutines.flow.r$a.b` @type ^`java.lang.Object` @kind object;
  #L118a02.  v1:= v10 @kind object;
  #L118a04.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L118a08.  v10:= v9.`kotlinx.coroutines.flow.r$a.c` @type ^`int`;
  #L118a0c.  if v10 <= 0 then goto L118a26;
  #L118a10.  v10:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L118a14.  v9.`kotlinx.coroutines.flow.r$a.a` @type ^`int` := v6;
  #L118a18.  call temp:= `emit`(v1, v10, v9) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L118a1e.  v10:= temp @kind object;
  #L118a20.  if v10 != v0 then goto L118ab8;
  #L118a24.  return v0 @kind object;
  #L118a26.  v10:= v9.`kotlinx.coroutines.flow.r$a.d` @type ^`kotlinx.coroutines.flow.r` @kind object;
  #L118a2a.  call temp:= `b`(v10) @signature `Lkotlinx/coroutines/flow/r;.b:(Lkotlinx/coroutines/flow/r;)J` @kind static;
  #L118a30.  v6:= temp @kind wide;
  #L118a32.  v9.`kotlinx.coroutines.flow.r$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L118a36.  v9.`kotlinx.coroutines.flow.r$a.a` @type ^`int` := v5;
  #L118a3a.  call temp:= `delay`(v6, v9) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L118a40.  v10:= temp @kind object;
  #L118a42.  if v10 != v0 then goto L118a48;
  #L118a46.  return v0 @kind object;
  #L118a48.  v10:= v9.`kotlinx.coroutines.flow.r$a.d` @type ^`kotlinx.coroutines.flow.r` @kind object;
  #L118a4c.  call temp:= `a`(v10) @signature `Lkotlinx/coroutines/flow/r;.a:(Lkotlinx/coroutines/flow/r;)J` @kind static;
  #L118a52.  v5:= temp @kind wide;
  #L118a54.  v7:= 0L;
  #L118a58.  v10:= lcmp(v5, v7);
  #L118a5c.  if v10 <= 0 then goto L118a9c;
  #L118a60.  v10:= `@@kotlinx.coroutines.flow.SharingCommand.STOP` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L118a64.  v9.`kotlinx.coroutines.flow.r$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L118a68.  v9.`kotlinx.coroutines.flow.r$a.a` @type ^`int` := v4;
  #L118a6c.  call temp:= `emit`(v1, v10, v9) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L118a72.  v10:= temp @kind object;
  #L118a74.  if v10 != v0 then goto L118a7a;
  #L118a78.  return v0 @kind object;
  #L118a7a.  v10:= v9.`kotlinx.coroutines.flow.r$a.d` @type ^`kotlinx.coroutines.flow.r` @kind object;
  #L118a7e.  call temp:= `a`(v10) @signature `Lkotlinx/coroutines/flow/r;.a:(Lkotlinx/coroutines/flow/r;)J` @kind static;
  #L118a84.  v4:= temp @kind wide;
  #L118a86.  v9.`kotlinx.coroutines.flow.r$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L118a8a.  v9.`kotlinx.coroutines.flow.r$a.a` @type ^`int` := v3;
  #L118a8e.  call temp:= `delay`(v4, v9) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L118a94.  v10:= temp @kind object;
  #L118a96.  if v10 != v0 then goto L118a9c;
  #L118a9a.  return v0 @kind object;
  #L118a9c.  v10:= `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L118aa0.  v3:= 0I;
  #L118aa2.  v9.`kotlinx.coroutines.flow.r$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L118aa6.  v9.`kotlinx.coroutines.flow.r$a.a` @type ^`int` := v2;
  #L118aaa.  call temp:= `emit`(v1, v10, v9) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L118ab0.  v10:= temp @kind object;
  #L118ab2.  if v10 != v0 then goto L118ab8;
  #L118ab6.  return v0 @kind object;
  #L118ab8.  v10:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L118abc.  return v10 @kind object;
}
