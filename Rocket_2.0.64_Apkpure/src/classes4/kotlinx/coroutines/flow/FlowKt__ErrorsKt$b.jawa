record `kotlinx.coroutines.flow.FlowKt__ErrorsKt$b` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$b.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.jvm.internal.Ref$ObjectRef` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$b;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10d59c.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L10d5a0.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v2 @kind object;
  #L10d5a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10d5aa.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$b;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10d4d0.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b$a` @kind boolean;
  #L10d4d4.  if v0 == 0 then goto L10d4f6;
  #L10d4d8.  v0:= v6 @kind object;
  #L10d4da.  v0:= (`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b$a`) v0 @kind object;
  #L10d4de.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b$a.d` @type ^`int`;
  #L10d4e2.  v2:= -2147483648I;
  #L10d4e6.  v3:= v1 ^& v2 @kind int;
  #L10d4ea.  if v3 == 0 then goto L10d4f6;
  #L10d4ee.  v1:= v1 - v2 @kind int;
  #L10d4f0.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b$a.d` @type ^`int` := v1;
  #L10d4f4.  goto L10d500;
  #L10d4f6.  v0:= new `kotlinx.coroutines.flow.FlowKt__ErrorsKt$b$a`;
  #L10d4fa.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$b$a;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$b;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10d500.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b$a.b` @type ^`java.lang.Object` @kind object;
  #L10d504.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10d50a.  v1:= temp @kind object;
  #L10d50c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b$a.d` @type ^`int`;
  #L10d510.  v3:= 1I;
  #L10d512.  if v2 == 0 then goto L10d53e;
  #L10d516.  if v2 != v3 then goto L10d52e;
  #L10d51a.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b$a.a` @type ^`java.lang.Object` @kind object;
  #L10d51e.  v5:= (`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b`) v5 @kind object;
  #L10d522.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10d528.  goto L10d55e;
  #L10d52a.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L10d52c.  goto L10d568;
  #L10d52e.  v5:= new `java.lang.IllegalStateException`;
  #L10d532.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10d536.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10d53c.  throw v5;
  #L10d53e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10d544.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L10d548.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b$a.a` @type ^`java.lang.Object` := v4 @kind object;
  #L10d54c.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b$a.d` @type ^`int` := v3;
  #L10d550.  call temp:= `emit`(v6, v5, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10d556.  v5:= temp @kind object;
  #L10d558.  if v5 != v1 then goto L10d55e;
  #L10d55c.  return v1 @kind object;
  #L10d55e.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10d562.  return v5 @kind object;
  #L10d564.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L10d566.  v5:= v4 @kind object;
  #L10d568.  v5:= v5.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$b.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L10d56c.  v5.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v6 @kind object;
  #L10d570.  throw v6;
  catch `java.lang.Throwable` @[L10d522..L10d528] goto L10d52a;
  catch `java.lang.Throwable` @[L10d544..L10d558] goto L10d564;
}
