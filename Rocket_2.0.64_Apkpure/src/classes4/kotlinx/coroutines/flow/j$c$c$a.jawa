record `kotlinx.coroutines.flow.j$c$c$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlinx.coroutines.channels.ProducerScope` `kotlinx.coroutines.flow.j$c$c$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.j$c$c$a` v0 @kind this, `kotlinx.coroutines.channels.ProducerScope` v1 @kind object) @signature `Lkotlinx/coroutines/flow/j$c$c$a;.<init>:(Lkotlinx/coroutines/channels/ProducerScope;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10b5bc.  v0.`kotlinx.coroutines.flow.j$c$c$a.a` @type ^`kotlinx.coroutines.channels.ProducerScope` := v1 @kind object;
  #L10b5c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10b5c6.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.j$c$c$a` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/j$c$c$a;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10b520.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.j$c$c$a$a` @kind boolean;
  #L10b524.  if v0 == 0 then goto L10b546;
  #L10b528.  v0:= v6 @kind object;
  #L10b52a.  v0:= (`kotlinx.coroutines.flow.j$c$c$a$a`) v0 @kind object;
  #L10b52e.  v1:= v0.`kotlinx.coroutines.flow.j$c$c$a$a.c` @type ^`int`;
  #L10b532.  v2:= -2147483648I;
  #L10b536.  v3:= v1 ^& v2 @kind int;
  #L10b53a.  if v3 == 0 then goto L10b546;
  #L10b53e.  v1:= v1 - v2 @kind int;
  #L10b540.  v0.`kotlinx.coroutines.flow.j$c$c$a$a.c` @type ^`int` := v1;
  #L10b544.  goto L10b550;
  #L10b546.  v0:= new `kotlinx.coroutines.flow.j$c$c$a$a`;
  #L10b54a.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/j$c$c$a$a;.<init>:(Lkotlinx/coroutines/flow/j$c$c$a;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10b550.  v6:= v0.`kotlinx.coroutines.flow.j$c$c$a$a.a` @type ^`java.lang.Object` @kind object;
  #L10b554.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10b55a.  v1:= temp @kind object;
  #L10b55c.  v2:= v0.`kotlinx.coroutines.flow.j$c$c$a$a.c` @type ^`int`;
  #L10b560.  v3:= 1I;
  #L10b562.  if v2 == 0 then goto L10b582;
  #L10b566.  if v2 != v3 then goto L10b572;
  #L10b56a.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10b570.  goto L10b5a6;
  #L10b572.  v5:= new `java.lang.IllegalStateException`;
  #L10b576.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10b57a.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10b580.  throw v5;
  #L10b582.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10b588.  v6:= v4.`kotlinx.coroutines.flow.j$c$c$a.a` @type ^`kotlinx.coroutines.channels.ProducerScope` @kind object;
  #L10b58c.  if v5 != 0 then goto L10b594;
  #L10b590.  v5:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L10b594.  v0.`kotlinx.coroutines.flow.j$c$c$a$a.c` @type ^`int` := v3;
  #L10b598.  call temp:= `send`(v6, v5, v0) @signature `Lkotlinx/coroutines/channels/SendChannel;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10b59e.  v5:= temp @kind object;
  #L10b5a0.  if v5 != v1 then goto L10b5a6;
  #L10b5a4.  return v1 @kind object;
  #L10b5a6.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10b5aa.  return v5 @kind object;
}
