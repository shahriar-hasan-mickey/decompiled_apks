record `kotlinx.coroutines.flow.SharingCommand` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.flow.SharingCommand` `@@kotlinx.coroutines.flow.SharingCommand.START` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.flow.SharingCommand` `@@kotlinx.coroutines.flow.SharingCommand.STOP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.flow.SharingCommand` `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.flow.SharingCommand`[] `@@kotlinx.coroutines.flow.SharingCommand.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L118410.  v0:= new `kotlinx.coroutines.flow.SharingCommand`;
  #L118414.  v1:= "START" @kind object;
  #L118418.  v2:= 0I;
  #L11841a.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L118420.  `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` := v0 @kind object;
  #L118424.  v0:= new `kotlinx.coroutines.flow.SharingCommand`;
  #L118428.  v1:= "STOP" @kind object;
  #L11842c.  v2:= 1I;
  #L11842e.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L118434.  `@@kotlinx.coroutines.flow.SharingCommand.STOP` @type ^`kotlinx.coroutines.flow.SharingCommand` := v0 @kind object;
  #L118438.  v0:= new `kotlinx.coroutines.flow.SharingCommand`;
  #L11843c.  v1:= "STOP_AND_RESET_REPLAY_CACHE" @kind object;
  #L118440.  v2:= 2I;
  #L118442.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L118448.  `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @type ^`kotlinx.coroutines.flow.SharingCommand` := v0 @kind object;
  #L11844c.  call temp:= `a`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.a:()[Lkotlinx/coroutines/flow/SharingCommand;` @kind static;
  #L118452.  v0:= temp @kind object;
  #L118454.  `@@kotlinx.coroutines.flow.SharingCommand.a` @type ^`kotlinx.coroutines.flow.SharingCommand`[] := v0 @kind object;
  #L118458.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.SharingCommand` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L11846c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L118472.  return @kind void;
}
procedure `kotlinx.coroutines.flow.SharingCommand`[] `a`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.a:()[Lkotlinx/coroutines/flow/SharingCommand;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L1183b4.  v0:= 3I;
  #L1183b6.  v0:= new `kotlinx.coroutines.flow.SharingCommand`[v0];
  #L1183ba.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L1183be.  v2:= 0I;
  #L1183c0.  v0[v2]:= v1 @kind object;
  #L1183c4.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.STOP` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L1183c8.  v2:= 1I;
  #L1183ca.  v0[v2]:= v1 @kind object;
  #L1183ce.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L1183d2.  v2:= 2I;
  #L1183d4.  v0[v2]:= v1 @kind object;
  #L1183d8.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.SharingCommand` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/flow/SharingCommand;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/flow/SharingCommand;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L118390.  v0:= constclass @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L118394.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L11839a.  v1:= temp @kind object;
  #L11839c.  v1:= (`kotlinx.coroutines.flow.SharingCommand`) v1 @kind object;
  #L1183a0.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.SharingCommand`[] `values`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.values:()[Lkotlinx/coroutines/flow/SharingCommand;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1183ec.  v0:= `@@kotlinx.coroutines.flow.SharingCommand.a` @type ^`kotlinx.coroutines.flow.SharingCommand`[] @kind object;
  #L1183f0.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1183f6.  v0:= temp @kind object;
  #L1183f8.  v0:= (`kotlinx.coroutines.flow.SharingCommand`[]) v0 @kind object;
  #L1183fc.  return v0 @kind object;
}
