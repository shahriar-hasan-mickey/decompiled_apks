record `kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L112648.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L11264c.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L112650.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L112656.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L112578.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1` @kind boolean;
  #L11257c.  if v0 == 0 then goto L11259e;
  #L112580.  v0:= v8 @kind object;
  #L112582.  v0:= (`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1`) v0 @kind object;
  #L112586.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1.b` @type ^`int`;
  #L11258a.  v2:= -2147483648I;
  #L11258e.  v3:= v1 ^& v2 @kind int;
  #L112592.  if v3 == 0 then goto L11259e;
  #L112596.  v1:= v1 - v2 @kind int;
  #L112598.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v1;
  #L11259c.  goto L1125a8;
  #L11259e.  v0:= new `kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1`;
  #L1125a2.  call `<init>`(v0, v6, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1125a8.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1.a` @type ^`java.lang.Object` @kind object;
  #L1125ac.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1125b2.  v1:= temp @kind object;
  #L1125b4.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1.b` @type ^`int`;
  #L1125b8.  v3:= 2I;
  #L1125ba.  v4:= 1I;
  #L1125bc.  if v2 == 0 then goto L1125f0;
  #L1125c0.  if v2 == v4 then goto L1125e0;
  #L1125c4.  if v2 != v3 then goto L1125d0;
  #L1125c8.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1125ce.  goto L112632;
  #L1125d0.  v7:= new `java.lang.IllegalStateException`;
  #L1125d4.  v8:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1125d8.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1125de.  throw v7;
  #L1125e0.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` @kind object;
  #L1125e4.  v7:= (`kotlinx.coroutines.flow.FlowCollector`) v7 @kind object;
  #L1125e8.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1125ee.  goto L11261a;
  #L1125f0.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1125f6.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L1125fa.  v2:= v6.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L1125fe.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` := v8 @kind object;
  #L112602.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v4;
  #L112606.  call temp:= `invoke`(v2, v7, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L11260c.  v7:= temp @kind object;
  #L11260e.  if v7 != v1 then goto L112614;
  #L112612.  return v1 @kind object;
  #L112614.  v5:= v8 @kind object;
  #L112616.  v8:= v7 @kind object;
  #L112618.  v7:= v5 @kind object;
  #L11261a.  v2:= 0I;
  #L11261c.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` := v2 @kind object;
  #L112620.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v3;
  #L112624.  call temp:= `emit`(v7, v8, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L11262a.  v7:= temp @kind object;
  #L11262c.  if v7 != v1 then goto L112632;
  #L112630.  return v1 @kind object;
  #L112632.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L112636.  return v7 @kind object;
}
procedure `java.lang.Object` `emit$$forInline`(`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2;.emit$$forInline:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L112520.  v0:= 4I;
  #L112522.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L112528.  v0:= new `kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1`;
  #L11252c.  call `<init>`(v0, v2, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L112532.  v0:= 5I;
  #L112534.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L11253a.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L11253e.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L112542.  call temp:= `invoke`(v1, v3, v4) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L112548.  v3:= temp @kind object;
  #L11254a.  v1:= 0I;
  #L11254c.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L112552.  call temp:= `emit`(v0, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L112558.  v3:= 1I;
  #L11255a.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L112560.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L112564.  return v3 @kind object;
}
