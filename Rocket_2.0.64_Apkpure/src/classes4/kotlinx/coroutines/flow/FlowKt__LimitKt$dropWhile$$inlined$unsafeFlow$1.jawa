record `kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L10df94.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L10df98.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L10df9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10dfa2.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1` v4 @kind this, `kotlinx.coroutines.flow.FlowCollector` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10df4c.  v0:= new `kotlin.jvm.internal.Ref$BooleanRef`;
  #L10df50.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/Ref$BooleanRef;.<init>:()V` @kind direct;
  #L10df56.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L10df5a.  v2:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$c`;
  #L10df5e.  v3:= v4.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10df62.  call `<init>`(v2, v0, v5, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$c;.<init>:(Lkotlin/jvm/internal/Ref$BooleanRef;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L10df68.  call temp:= `collect`(v1, v2, v6) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10df6e.  v5:= temp @kind object;
  #L10df70.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10df76.  v6:= temp @kind object;
  #L10df78.  if v5 != v6 then goto L10df7e;
  #L10df7c.  return v5 @kind object;
  #L10df7e.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10df82.  return v5 @kind object;
}
