record `kotlinx.coroutines.flow.FlowKt__MergeKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
global `int` `@@kotlinx.coroutines.flow.FlowKt__MergeKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10f588.  v0:= "kotlinx.coroutines.flow.defaultConcurrency" @kind object;
  #L10f58c.  v1:= 16I;
  #L10f590.  v2:= 1I;
  #L10f592.  v3:= 2147483647I;
  #L10f598.  call temp:= `systemProp`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/internal/SystemPropsKt;.systemProp:(Ljava/lang/String;III)I` @kind static;
  #L10f59e.  v0:= temp;
  #L10f5a0.  `@@kotlinx.coroutines.flow.FlowKt__MergeKt.a` @type ^`int` := v0;
  #L10f5a4.  return @kind void;
}
procedure `kotlinx.coroutines.flow.Flow` `a`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.a:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10f38c.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1`;
  #L10f390.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flatMapConcat$$inlined$map$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L10f396.  call temp:= `flattenConcat`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.flattenConcat:(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10f39c.  v1:= temp @kind object;
  #L10f39e.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `b`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.b:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L10f3b0.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1`;
  #L10f3b4.  v1:= 0I;
  #L10f3b6.  call `<init>`(v0, v3, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flatMapLatest$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10f3bc.  call temp:= `transformLatest`(v2, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.transformLatest:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10f3c2.  v2:= temp @kind object;
  #L10f3c4.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `c`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.c:(Lkotlinx/coroutines/flow/Flow;ILkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10f400.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1`;
  #L10f404.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flatMapMerge$$inlined$map$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L10f40a.  call temp:= `flattenMerge`(v0, v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flattenMerge:(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10f410.  v1:= temp @kind object;
  #L10f412.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `d`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `int` v1 , `kotlin.jvm.functions.Function2` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.d:(Lkotlinx/coroutines/flow/Flow;ILkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L10f3d8.  v3:= v3 ^& 1;
  #L10f3dc.  if v3 == 0 then goto L10f3e4;
  #L10f3e0.  v1:= `@@kotlinx.coroutines.flow.FlowKt__MergeKt.a` @type ^`int`;
  #L10f3e4.  call temp:= `flatMapMerge`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flatMapMerge:(Lkotlinx/coroutines/flow/Flow;ILkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10f3ea.  v0:= temp @kind object;
  #L10f3ec.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `e`(`kotlinx.coroutines.flow.Flow` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.e:(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10f424.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1`;
  #L10f428.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;)V` @kind direct;
  #L10f42e.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `f`(`kotlinx.coroutines.flow.Flow` v9 @kind object, `int` v10 ) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.f:(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L10f468.  v0:= 1I;
  #L10f46a.  if v10 <= 0 then goto L10f472;
  #L10f46e.  v1:= 1I;
  #L10f470.  goto L10f474;
  #L10f472.  v1:= 0I;
  #L10f474.  if v1 == 0 then goto L10f4a6;
  #L10f478.  if v10 != v0 then goto L10f486;
  #L10f47c.  call temp:= `flattenConcat`(v9) @signature `Lkotlinx/coroutines/flow/FlowKt;.flattenConcat:(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10f482.  v9:= temp @kind object;
  #L10f484.  goto L10f4a4;
  #L10f486.  v8:= new `kotlinx.coroutines.flow.internal.ChannelFlowMerge`;
  #L10f48a.  v3:= 0I;
  #L10f48c.  v4:= 0I;
  #L10f48e.  v5:= 0I;
  #L10f490.  v6:= 28I;
  #L10f494.  v7:= 0I;
  #L10f496.  v0:= v8 @kind object;
  #L10f498.  v1:= v9 @kind object;
  #L10f49a.  v2:= v10;
  #L10f49c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowMerge;.<init>:(Lkotlinx/coroutines/flow/Flow;ILkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L10f4a2.  v9:= v8 @kind object;
  #L10f4a4.  return v9 @kind object;
  #L10f4a6.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L10f4ac.  v9:= temp @kind object;
  #L10f4ae.  v10:= "Expected positive concurrency level, but had " @kind object;
  #L10f4b2.  call temp:= `stringPlus`(v10, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L10f4b8.  v9:= temp @kind object;
  #L10f4ba.  v10:= new `java.lang.IllegalArgumentException`;
  #L10f4be.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L10f4c4.  v9:= temp @kind object;
  #L10f4c6.  call `<init>`(v10, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10f4cc.  throw v10;
}
procedure `kotlinx.coroutines.flow.Flow` `g`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.g:(Lkotlinx/coroutines/flow/Flow;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L10f440.  v2:= v2 ^& 1;
  #L10f444.  if v2 == 0 then goto L10f44c;
  #L10f448.  v1:= `@@kotlinx.coroutines.flow.FlowKt__MergeKt.a` @type ^`int`;
  #L10f44c.  call temp:= `flattenMerge`(v0, v1) @signature `Lkotlinx/coroutines/flow/FlowKt;.flattenMerge:(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10f452.  v0:= temp @kind object;
  #L10f454.  return v0 @kind object;
}
procedure `int` `h`() @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.h:()I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10f374.  v0:= `@@kotlinx.coroutines.flow.FlowKt__MergeKt.a` @type ^`int`;
  #L10f378.  return v0;
}
procedure `void` `i`() @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.i:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L10f5b8.  return @kind void;
}
procedure `kotlinx.coroutines.flow.Flow` `j`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.j:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L10f4e0.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$b`;
  #L10f4e4.  v1:= 0I;
  #L10f4e6.  call `<init>`(v0, v3, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$b;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10f4ec.  call temp:= `transformLatest`(v2, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.transformLatest:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10f4f2.  v2:= temp @kind object;
  #L10f4f4.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `k`(`java.lang.Iterable` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.k:(Ljava/lang/Iterable;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L10f508.  v7:= new `kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge`;
  #L10f50c.  v2:= 0I;
  #L10f50e.  v3:= 0I;
  #L10f510.  v4:= 0I;
  #L10f512.  v5:= 14I;
  #L10f516.  v6:= 0I;
  #L10f518.  v0:= v7 @kind object;
  #L10f51a.  v1:= v8 @kind object;
  #L10f51c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/flow/internal/ChannelLimitedFlowMerge;.<init>:(Ljava/lang/Iterable;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L10f522.  return v7 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `l`(`kotlinx.coroutines.flow.Flow`[] v0 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.l:([Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L10f534.  call temp:= `asIterable`(v0) @signature `Lkotlin/collections/ArraysKt;.asIterable:([Ljava/lang/Object;)Ljava/lang/Iterable;` @kind static;
  #L10f53a.  v0:= temp @kind object;
  #L10f53c.  call temp:= `merge`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.merge:(Ljava/lang/Iterable;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10f542.  v0:= temp @kind object;
  #L10f544.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `m`(`kotlinx.coroutines.flow.Flow` v9 @kind object, `kotlin.jvm.functions.Function3` v10 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.m:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L10f558.  v8:= new `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest`;
  #L10f55c.  v3:= 0I;
  #L10f55e.  v4:= 0I;
  #L10f560.  v5:= 0I;
  #L10f562.  v6:= 28I;
  #L10f566.  v7:= 0I;
  #L10f568.  v0:= v8 @kind object;
  #L10f56a.  v1:= v10 @kind object;
  #L10f56c.  v2:= v9 @kind object;
  #L10f56e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L10f574.  return v8 @kind object;
}
