record `kotlinx.coroutines.flow.FlowKt__MergeKt$b` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__MergeKt$b.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MergeKt$b.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MergeKt$b.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__MergeKt$b.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MergeKt$b` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$b;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10f354.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.d` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L10f358.  v1:= 3I;
  #L10f35a.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L10f360.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MergeKt$b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$b;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L10f25c.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L10f260.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L10f264.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$b;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L10f26a.  v1:= temp @kind object;
  #L10f26c.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MergeKt$b` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$b;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L10f280.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$b`;
  #L10f284.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10f288.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$b;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10f28e.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.b` @type ^`java.lang.Object` := v3 @kind object;
  #L10f292.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.c` @type ^`java.lang.Object` := v4 @kind object;
  #L10f296.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10f29a.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$b;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L10f2a0.  v3:= temp @kind object;
  #L10f2a2.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__MergeKt$b` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$b;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L10f2b4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10f2ba.  v0:= temp @kind object;
  #L10f2bc.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.a` @type ^`int`;
  #L10f2c0.  v2:= 2I;
  #L10f2c2.  v3:= 1I;
  #L10f2c4.  if v1 == 0 then goto L10f2f8;
  #L10f2c8.  if v1 == v3 then goto L10f2e8;
  #L10f2cc.  if v1 != v2 then goto L10f2d8;
  #L10f2d0.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10f2d6.  goto L10f33e;
  #L10f2d8.  v6:= new `java.lang.IllegalStateException`;
  #L10f2dc.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10f2e0.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10f2e6.  throw v6;
  #L10f2e8.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.b` @type ^`java.lang.Object` @kind object;
  #L10f2ec.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L10f2f0.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10f2f6.  goto L10f326;
  #L10f2f8.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10f2fe.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.b` @type ^`java.lang.Object` @kind object;
  #L10f302.  v1:= v6 @kind object;
  #L10f304.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L10f308.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.c` @type ^`java.lang.Object` @kind object;
  #L10f30c.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10f310.  v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.b` @type ^`java.lang.Object` := v1 @kind object;
  #L10f314.  v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.a` @type ^`int` := v3;
  #L10f318.  call temp:= `invoke`(v4, v6, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10f31e.  v6:= temp @kind object;
  #L10f320.  if v6 != v0 then goto L10f326;
  #L10f324.  return v0 @kind object;
  #L10f326.  v3:= 0I;
  #L10f328.  v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.b` @type ^`java.lang.Object` := v3 @kind object;
  #L10f32c.  v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$b.a` @type ^`int` := v2;
  #L10f330.  call temp:= `emit`(v1, v6, v5) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10f336.  v6:= temp @kind object;
  #L10f338.  if v6 != v0 then goto L10f33e;
  #L10f33c.  return v0 @kind object;
  #L10f33e.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10f342.  return v6 @kind object;
}
