record `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L10cd6c.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1.a` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L10cd70.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L10cd74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10cd7a.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10ccd4.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1` @kind boolean;
  #L10ccd8.  if v0 == 0 then goto L10ccfa;
  #L10ccdc.  v0:= v6 @kind object;
  #L10ccde.  v0:= (`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1`) v0 @kind object;
  #L10cce2.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.c` @type ^`int`;
  #L10cce6.  v2:= -2147483648I;
  #L10ccea.  v3:= v1 ^& v2 @kind int;
  #L10ccee.  if v3 == 0 then goto L10ccfa;
  #L10ccf2.  v1:= v1 - v2 @kind int;
  #L10ccf4.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.c` @type ^`int` := v1;
  #L10ccf8.  goto L10cd04;
  #L10ccfa.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1`;
  #L10ccfe.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1$1$emit$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10cd04.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.a` @type ^`java.lang.Object` @kind object;
  #L10cd08.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10cd0e.  v1:= temp @kind object;
  #L10cd10.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.c` @type ^`int`;
  #L10cd14.  v3:= 1I;
  #L10cd16.  if v2 == 0 then goto L10cd36;
  #L10cd1a.  if v2 != v3 then goto L10cd26;
  #L10cd1e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10cd24.  goto L10cd56;
  #L10cd26.  v5:= new `java.lang.IllegalStateException`;
  #L10cd2a.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10cd2e.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10cd34.  throw v5;
  #L10cd36.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10cd3c.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L10cd40.  v2:= v4.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L10cd44.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1.c` @type ^`int` := v3;
  #L10cd48.  call temp:= `invoke`(v6, v2, v5, v0) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10cd4e.  v5:= temp @kind object;
  #L10cd50.  if v5 != v1 then goto L10cd56;
  #L10cd54.  return v1 @kind object;
  #L10cd56.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10cd5a.  return v5 @kind object;
}
procedure `java.lang.Object` `emit$$forInline`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1$1;.emit$$forInline:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L10cc94.  v0:= 4I;
  #L10cc96.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10cc9c.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1`;
  #L10cca0.  call `<init>`(v0, v2, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1$1$emit$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10cca6.  v0:= 5I;
  #L10cca8.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10ccae.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L10ccb2.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L10ccb6.  call temp:= `invoke`(v0, v1, v3, v4) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10ccbc.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10ccc0.  return v3 @kind object;
}
