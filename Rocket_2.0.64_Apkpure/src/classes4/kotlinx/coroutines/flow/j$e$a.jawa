record `kotlinx.coroutines.flow.j$e$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.j$e$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.j$e$a.b` @AccessFlag SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.j$e$a.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.ReceiveChannel` `kotlinx.coroutines.flow.j$e$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.j$e$a` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object, `kotlinx.coroutines.channels.ReceiveChannel` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/j$e$a;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10bc28.  v0.`kotlinx.coroutines.flow.j$e$a.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L10bc2c.  v0.`kotlinx.coroutines.flow.j$e$a.d` @type ^`kotlinx.coroutines.channels.ReceiveChannel` := v2 @kind object;
  #L10bc30.  v1:= 2I;
  #L10bc32.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L10bc38.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.j$e$a` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/j$e$a;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L10bb40.  call temp:= `box-impl`(v1) @signature `Lkotlinx/coroutines/channels/ChannelResult;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ChannelResult;` @kind static;
  #L10bb46.  v1:= temp @kind object;
  #L10bb48.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/j$e$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L10bb4e.  v1:= temp @kind object;
  #L10bb50.  v1:= (`kotlinx.coroutines.flow.j$e$a`) v1 @kind object;
  #L10bb54.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10bb58.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/j$e$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L10bb5e.  v1:= temp @kind object;
  #L10bb60.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.j$e$a` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/j$e$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10bc00.  v0:= new `kotlinx.coroutines.flow.j$e$a`;
  #L10bc04.  v1:= v3.`kotlinx.coroutines.flow.j$e$a.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L10bc08.  v2:= v3.`kotlinx.coroutines.flow.j$e$a.d` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L10bc0c.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/j$e$a;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10bc12.  v0.`kotlinx.coroutines.flow.j$e$a.b` @type ^`java.lang.Object` := v4 @kind object;
  #L10bc16.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.j$e$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/j$e$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L10bb14.  v1:= (`kotlinx.coroutines.channels.ChannelResult`) v1 @kind object;
  #L10bb18.  call temp:= `unbox-impl`(v1) @signature `Lkotlinx/coroutines/channels/ChannelResult;.unbox-impl:()Ljava/lang/Object;` @kind virtual;
  #L10bb1e.  v1:= temp @kind object;
  #L10bb20.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L10bb24.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/j$e$a;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L10bb2a.  v1:= temp @kind object;
  #L10bb2c.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.j$e$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/j$e$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10bb74.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10bb7a.  v0:= v3.`kotlinx.coroutines.flow.j$e$a.a` @type ^`int`;
  #L10bb7e.  if v0 != 0 then goto L10bbde;
  #L10bb82.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10bb88.  v4:= v3.`kotlinx.coroutines.flow.j$e$a.b` @type ^`java.lang.Object` @kind object;
  #L10bb8c.  v4:= (`kotlinx.coroutines.channels.ChannelResult`) v4 @kind object;
  #L10bb90.  call temp:= `unbox-impl`(v4) @signature `Lkotlinx/coroutines/channels/ChannelResult;.unbox-impl:()Ljava/lang/Object;` @kind virtual;
  #L10bb96.  v4:= temp @kind object;
  #L10bb98.  v0:= v3.`kotlinx.coroutines.flow.j$e$a.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L10bb9c.  v1:= instanceof @variable v4 @type ^`kotlinx.coroutines.channels.ChannelResult$Failed` @kind boolean;
  #L10bba0.  if v1 != 0 then goto L10bba8;
  #L10bba4.  v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v4 @kind object;
  #L10bba8.  v2:= v3.`kotlinx.coroutines.flow.j$e$a.d` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L10bbac.  if v1 == 0 then goto L10bbd8;
  #L10bbb0.  call temp:= `exceptionOrNull-impl`(v4) @signature `Lkotlinx/coroutines/channels/ChannelResult;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L10bbb6.  v4:= temp @kind object;
  #L10bbb8.  if v4 != 0 then goto L10bbd6;
  #L10bbbc.  v4:= new `kotlinx.coroutines.flow.internal.ChildCancelledException`;
  #L10bbc0.  call `<init>`(v4) @signature `Lkotlinx/coroutines/flow/internal/ChildCancelledException;.<init>:()V` @kind direct;
  #L10bbc6.  call `cancel`(v2, v4) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L10bbcc.  v4:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.DONE` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L10bbd0.  v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v4 @kind object;
  #L10bbd4.  goto L10bbd8;
  #L10bbd6.  throw v4;
  #L10bbd8.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10bbdc.  return v4 @kind object;
  #L10bbde.  v4:= new `java.lang.IllegalStateException`;
  #L10bbe2.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10bbe6.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10bbec.  throw v4;
}
