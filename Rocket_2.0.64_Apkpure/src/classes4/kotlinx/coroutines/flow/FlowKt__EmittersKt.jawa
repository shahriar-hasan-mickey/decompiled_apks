record `kotlinx.coroutines.flow.FlowKt__EmittersKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.FlowCollector` v0 @kind object, `kotlin.jvm.functions.Function3` v1 @kind object, `java.lang.Throwable` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.a:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L10d138.  call temp:= `c`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.c:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L10d13e.  v0:= temp @kind object;
  #L10d140.  return v0 @kind object;
}
procedure `void` `b`(`kotlinx.coroutines.flow.FlowCollector` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.b:(Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10d2b0.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.flow.ThrowingCollector` @kind boolean;
  #L10d2b4.  if v0 != 0 then goto L10d2ba;
  #L10d2b8.  return @kind void;
  #L10d2ba.  v1:= (`kotlinx.coroutines.flow.ThrowingCollector`) v1 @kind object;
  #L10d2be.  v1:= v1.`kotlinx.coroutines.flow.ThrowingCollector.e` @type ^`java.lang.Throwable` @kind object;
  #L10d2c2.  throw v1;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.flow.FlowCollector` v4 @kind object, `kotlin.jvm.functions.Function3` v5 @kind object, `java.lang.Throwable` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.c:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10d154.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.FlowKt__EmittersKt$a` @kind boolean;
  #L10d158.  if v0 == 0 then goto L10d17a;
  #L10d15c.  v0:= v7 @kind object;
  #L10d15e.  v0:= (`kotlinx.coroutines.flow.FlowKt__EmittersKt$a`) v0 @kind object;
  #L10d162.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.c` @type ^`int`;
  #L10d166.  v2:= -2147483648I;
  #L10d16a.  v3:= v1 ^& v2 @kind int;
  #L10d16e.  if v3 == 0 then goto L10d17a;
  #L10d172.  v1:= v1 - v2 @kind int;
  #L10d174.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.c` @type ^`int` := v1;
  #L10d178.  goto L10d184;
  #L10d17a.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$a`;
  #L10d17e.  call `<init>`(v0, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10d184.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.b` @type ^`java.lang.Object` @kind object;
  #L10d188.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10d18e.  v1:= temp @kind object;
  #L10d190.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.c` @type ^`int`;
  #L10d194.  v3:= 1I;
  #L10d196.  if v2 == 0 then goto L10d1c0;
  #L10d19a.  if v2 != v3 then goto L10d1b0;
  #L10d19e.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.a` @type ^`java.lang.Object` @kind object;
  #L10d1a2.  v6:= v4 @kind object;
  #L10d1a4.  v6:= (`java.lang.Throwable`) v6 @kind object;
  #L10d1a8.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10d1ae.  goto L10d1dc;
  #L10d1b0.  v4:= new `java.lang.IllegalStateException`;
  #L10d1b4.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10d1b8.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10d1be.  throw v4;
  #L10d1c0.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10d1c6.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.a` @type ^`java.lang.Object` := v6 @kind object;
  #L10d1ca.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.c` @type ^`int` := v3;
  #L10d1ce.  call temp:= `invoke`(v5, v4, v6, v0) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10d1d4.  v4:= temp @kind object;
  #L10d1d6.  if v4 != v1 then goto L10d1dc;
  #L10d1da.  return v1 @kind object;
  #L10d1dc.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10d1e0.  return v4 @kind object;
  #L10d1e2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L10d1e4.  if v6 == 0 then goto L10d1f2;
  #L10d1e8.  if v6 == v4 then goto L10d1f2;
  #L10d1ec.  call `addSuppressed`(v4, v6) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L10d1f2.  throw v4;
  catch `java.lang.Throwable` @[L10d1a8..L10d1ae] goto L10d1e2;
  catch `java.lang.Throwable` @[L10d1c6..L10d1d6] goto L10d1e2;
}
procedure `kotlinx.coroutines.flow.Flow` `d`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10d218.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1`;
  #L10d21c.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L10d222.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `e`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.e:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10d234.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1`;
  #L10d238.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L10d23e.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `f`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.f:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10d250.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1`;
  #L10d254.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/flow/Flow;)V` @kind direct;
  #L10d25a.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `g`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.g:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L10d26c.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1`;
  #L10d270.  v1:= 0I;
  #L10d272.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10d278.  call temp:= `flow`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L10d27e.  v2:= temp @kind object;
  #L10d280.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `h`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.h:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L10d294.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1`;
  #L10d298.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L10d29e.  return v0 @kind object;
}
