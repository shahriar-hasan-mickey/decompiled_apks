record `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L10e828.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.a` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L10e82c.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L10e830.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10e836.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10e754.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1` @kind boolean;
  #L10e758.  if v0 == 0 then goto L10e77a;
  #L10e75c.  v0:= v6 @kind object;
  #L10e75e.  v0:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1`) v0 @kind object;
  #L10e762.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.c` @type ^`int`;
  #L10e766.  v2:= -2147483648I;
  #L10e76a.  v3:= v1 ^& v2 @kind int;
  #L10e76e.  if v3 == 0 then goto L10e77a;
  #L10e772.  v1:= v1 - v2 @kind int;
  #L10e774.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.c` @type ^`int` := v1;
  #L10e778.  goto L10e784;
  #L10e77a.  v0:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1`;
  #L10e77e.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10e784.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.b` @type ^`java.lang.Object` @kind object;
  #L10e788.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10e78e.  v1:= temp @kind object;
  #L10e790.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.c` @type ^`int`;
  #L10e794.  v3:= 1I;
  #L10e796.  if v2 == 0 then goto L10e7be;
  #L10e79a.  if v2 != v3 then goto L10e7ae;
  #L10e79e.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` @kind object;
  #L10e7a2.  v5:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1`) v5 @kind object;
  #L10e7a6.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10e7ac.  goto L10e7f4;
  #L10e7ae.  v5:= new `java.lang.IllegalStateException`;
  #L10e7b2.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10e7b6.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10e7bc.  throw v5;
  #L10e7be.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10e7c4.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L10e7c8.  v2:= v4.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L10e7cc.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` := v4 @kind object;
  #L10e7d0.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.c` @type ^`int` := v3;
  #L10e7d4.  v3:= 6I;
  #L10e7d6.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10e7dc.  call temp:= `invoke`(v6, v2, v5, v0) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10e7e2.  v6:= temp @kind object;
  #L10e7e4.  v5:= 7I;
  #L10e7e6.  call `mark`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10e7ec.  if v6 != v1 then goto L10e7f2;
  #L10e7f0.  return v1 @kind object;
  #L10e7f2.  v5:= v4 @kind object;
  #L10e7f4.  v6:= (`java.lang.Boolean`) v6 @kind object;
  #L10e7f8.  call temp:= `booleanValue`(v6) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L10e7fe.  v6:= temp;
  #L10e800.  if v6 == 0 then goto L10e80a;
  #L10e804.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10e808.  return v5 @kind object;
  #L10e80a.  v6:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L10e80e.  call `<init>`(v6, v5) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L10e814.  throw v6;
}
