record `kotlinx.coroutines.flow.e$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlinx.coroutines.flow.e` `kotlinx.coroutines.flow.e$a.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.e$a.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.e$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.e$a` v0 @kind this, `kotlinx.coroutines.flow.e` v1 @kind object, `kotlin.jvm.internal.Ref$ObjectRef` v2 @kind object, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object) @signature `Lkotlinx/coroutines/flow/e$a;.<init>:(Lkotlinx/coroutines/flow/e;Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L109298.  v0.`kotlinx.coroutines.flow.e$a.a` @type ^`kotlinx.coroutines.flow.e` := v1 @kind object;
  #L10929c.  v0.`kotlinx.coroutines.flow.e$a.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v2 @kind object;
  #L1092a0.  v0.`kotlinx.coroutines.flow.e$a.c` @type ^`kotlinx.coroutines.flow.FlowCollector` := v3 @kind object;
  #L1092a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1092aa.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.e$a` v5 @kind this, `java.lang.Object` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/e$a;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1091b4.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.e$a$a` @kind boolean;
  #L1091b8.  if v0 == 0 then goto L1091da;
  #L1091bc.  v0:= v7 @kind object;
  #L1091be.  v0:= (`kotlinx.coroutines.flow.e$a$a`) v0 @kind object;
  #L1091c2.  v1:= v0.`kotlinx.coroutines.flow.e$a$a.c` @type ^`int`;
  #L1091c6.  v2:= -2147483648I;
  #L1091ca.  v3:= v1 ^& v2 @kind int;
  #L1091ce.  if v3 == 0 then goto L1091da;
  #L1091d2.  v1:= v1 - v2 @kind int;
  #L1091d4.  v0.`kotlinx.coroutines.flow.e$a$a.c` @type ^`int` := v1;
  #L1091d8.  goto L1091e4;
  #L1091da.  v0:= new `kotlinx.coroutines.flow.e$a$a`;
  #L1091de.  call `<init>`(v0, v5, v7) @signature `Lkotlinx/coroutines/flow/e$a$a;.<init>:(Lkotlinx/coroutines/flow/e$a;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1091e4.  v7:= v0.`kotlinx.coroutines.flow.e$a$a.a` @type ^`java.lang.Object` @kind object;
  #L1091e8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1091ee.  v1:= temp @kind object;
  #L1091f0.  v2:= v0.`kotlinx.coroutines.flow.e$a$a.c` @type ^`int`;
  #L1091f4.  v3:= 1I;
  #L1091f6.  if v2 == 0 then goto L109216;
  #L1091fa.  if v2 != v3 then goto L109206;
  #L1091fe.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L109204.  goto L109282;
  #L109206.  v6:= new `java.lang.IllegalStateException`;
  #L10920a.  v7:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10920e.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L109214.  throw v6;
  #L109216.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10921c.  v7:= v5.`kotlinx.coroutines.flow.e$a.a` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L109220.  v7:= v7.`kotlinx.coroutines.flow.e.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L109224.  call temp:= `invoke`(v7, v6) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10922a.  v7:= temp @kind object;
  #L10922c.  v2:= v5.`kotlinx.coroutines.flow.e$a.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L109230.  v2:= v2.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L109234.  v4:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L109238.  if v2 == v4 then goto L109264;
  #L10923c.  v4:= v5.`kotlinx.coroutines.flow.e$a.a` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L109240.  v4:= v4.`kotlinx.coroutines.flow.e.c` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L109244.  call temp:= `invoke`(v4, v2, v7) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10924a.  v2:= temp @kind object;
  #L10924c.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L109250.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L109256.  v2:= temp;
  #L109258.  if v2 != 0 then goto L10925e;
  #L10925c.  goto L109264;
  #L10925e.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L109262.  return v6 @kind object;
  #L109264.  v2:= v5.`kotlinx.coroutines.flow.e$a.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L109268.  v2.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v7 @kind object;
  #L10926c.  v7:= v5.`kotlinx.coroutines.flow.e$a.c` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L109270.  v0.`kotlinx.coroutines.flow.e$a$a.c` @type ^`int` := v3;
  #L109274.  call temp:= `emit`(v7, v6, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10927a.  v6:= temp @kind object;
  #L10927c.  if v6 != v1 then goto L109282;
  #L109280.  return v1 @kind object;
  #L109282.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L109286.  return v6 @kind object;
}
