record `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L11b81c.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L11b820.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1.b` @type ^`kotlinx.coroutines.flow.Flow` := v2 @kind object;
  #L11b824.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1.c` @type ^`kotlin.jvm.functions.Function3` := v3 @kind object;
  #L11b828.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11b82e.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1` v7 @kind this, `kotlinx.coroutines.flow.FlowCollector` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$$inlined$unsafeFlow$1;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L11b7d4.  v6:= new `kotlinx.coroutines.flow.internal.CombineKt$b`;
  #L11b7d8.  v2:= v7.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L11b7dc.  v3:= v7.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1.b` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L11b7e0.  v4:= v7.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1.c` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L11b7e4.  v5:= 0I;
  #L11b7e6.  v0:= v6 @kind object;
  #L11b7e8.  v1:= v8 @kind object;
  #L11b7ea.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$b;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11b7f0.  call temp:= `coroutineScope`(v6, v9) @signature `Lkotlinx/coroutines/CoroutineScopeKt;.coroutineScope:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L11b7f6.  v8:= temp @kind object;
  #L11b7f8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11b7fe.  v9:= temp @kind object;
  #L11b800.  if v8 != v9 then goto L11b806;
  #L11b804.  return v8 @kind object;
  #L11b806.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11b80a.  return v8 @kind object;
}
