record `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.CoroutineScope` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object, `kotlinx.coroutines.CoroutineScope` v2 @kind object, `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` v3 @kind object, `kotlinx.coroutines.flow.FlowCollector` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$a$a;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L11aa8c.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L11aa90.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.b` @type ^`kotlinx.coroutines.CoroutineScope` := v2 @kind object;
  #L11aa94.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.c` @type ^`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` := v3 @kind object;
  #L11aa98.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` := v4 @kind object;
  #L11aa9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11aaa2.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a` v7 @kind this, `java.lang.Object` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$a$a;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L11a988.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b` @kind boolean;
  #L11a98c.  if v0 == 0 then goto L11a9ae;
  #L11a990.  v0:= v9 @kind object;
  #L11a992.  v0:= (`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b`) v0 @kind object;
  #L11a996.  v1:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.f` @type ^`int`;
  #L11a99a.  v2:= -2147483648I;
  #L11a99e.  v3:= v1 ^& v2 @kind int;
  #L11a9a2.  if v3 == 0 then goto L11a9ae;
  #L11a9a6.  v1:= v1 - v2 @kind int;
  #L11a9a8.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.f` @type ^`int` := v1;
  #L11a9ac.  goto L11a9b8;
  #L11a9ae.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b`;
  #L11a9b2.  call `<init>`(v0, v7, v9) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$a$a$b;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$a$a;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11a9b8.  v9:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.d` @type ^`java.lang.Object` @kind object;
  #L11a9bc.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11a9c2.  v1:= temp @kind object;
  #L11a9c4.  v2:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.f` @type ^`int`;
  #L11a9c8.  v3:= 1I;
  #L11a9ca.  if v2 == 0 then goto L11a9fe;
  #L11a9ce.  if v2 != v3 then goto L11a9ee;
  #L11a9d2.  v8:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.c` @type ^`java.lang.Object` @kind object;
  #L11a9d6.  v8:= (`kotlinx.coroutines.Job`) v8 @kind object;
  #L11a9da.  v8:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.b` @type ^`java.lang.Object` @kind object;
  #L11a9de.  v0:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.a` @type ^`java.lang.Object` @kind object;
  #L11a9e2.  v0:= (`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a`) v0 @kind object;
  #L11a9e6.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11a9ec.  goto L11aa46;
  #L11a9ee.  v8:= new `java.lang.IllegalStateException`;
  #L11a9f2.  v9:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L11a9f6.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11a9fc.  throw v8;
  #L11a9fe.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11aa04.  v9:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L11aa08.  v9:= v9.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L11aa0c.  v9:= (`kotlinx.coroutines.Job`) v9 @kind object;
  #L11aa10.  if v9 != 0 then goto L11aa18;
  #L11aa14.  v0:= v7 @kind object;
  #L11aa16.  goto L11aa46;
  #L11aa18.  v2:= new `kotlinx.coroutines.flow.internal.ChildCancelledException`;
  #L11aa1c.  call `<init>`(v2) @signature `Lkotlinx/coroutines/flow/internal/ChildCancelledException;.<init>:()V` @kind direct;
  #L11aa22.  call `cancel`(v9, v2) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L11aa28.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.a` @type ^`java.lang.Object` := v7 @kind object;
  #L11aa2c.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.b` @type ^`java.lang.Object` := v8 @kind object;
  #L11aa30.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.c` @type ^`java.lang.Object` := v9 @kind object;
  #L11aa34.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$b.f` @type ^`int` := v3;
  #L11aa38.  call temp:= `join`(v9, v0) @signature `Lkotlinx/coroutines/Job;.join:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L11aa3e.  v9:= temp @kind object;
  #L11aa40.  if v9 != v1 then goto L11aa14;
  #L11aa44.  return v1 @kind object;
  #L11aa46.  v9:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L11aa4a.  v1:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.b` @type ^`kotlinx.coroutines.CoroutineScope` @kind object;
  #L11aa4e.  v2:= 0I;
  #L11aa50.  v3:= `@@kotlinx.coroutines.CoroutineStart.UNDISPATCHED` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L11aa54.  v4:= new `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a$a`;
  #L11aa58.  v5:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.c` @type ^`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` @kind object;
  #L11aa5c.  v0:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$a$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L11aa60.  v6:= 0I;
  #L11aa62.  call `<init>`(v4, v5, v0, v8, v6) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$a$a$a;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11aa68.  v5:= 1I;
  #L11aa6a.  call temp:= `launch$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/BuildersKt;.launch$default:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;` @kind static;
  #L11aa70.  v8:= temp @kind object;
  #L11aa72.  v9.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v8 @kind object;
  #L11aa76.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11aa7a.  return v8 @kind object;
}
