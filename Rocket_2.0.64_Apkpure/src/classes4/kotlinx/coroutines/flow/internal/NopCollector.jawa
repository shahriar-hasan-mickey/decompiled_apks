record `kotlinx.coroutines.flow.internal.NopCollector` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
}
global `kotlinx.coroutines.flow.internal.NopCollector` `@@kotlinx.coroutines.flow.internal.NopCollector.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/internal/NopCollector;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L11c53c.  v0:= new `kotlinx.coroutines.flow.internal.NopCollector`;
  #L11c540.  call `<init>`(v0) @signature `Lkotlinx/coroutines/flow/internal/NopCollector;.<init>:()V` @kind direct;
  #L11c546.  `@@kotlinx.coroutines.flow.internal.NopCollector.INSTANCE` @type ^`kotlinx.coroutines.flow.internal.NopCollector` := v0 @kind object;
  #L11c54a.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.NopCollector` v0 @kind this) @signature `Lkotlinx/coroutines/flow/internal/NopCollector;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L11c55c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11c562.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.internal.NopCollector` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/NopCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L11c524.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11c528.  return v1 @kind object;
}
