record `kotlinx.coroutines.flow.internal.e$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.internal.e$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.e$a.b` @AccessFlag SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.internal.e$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.e$a` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L11cf24.  v0.`kotlinx.coroutines.flow.internal.e$a.c` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L11cf28.  v1:= 2I;
  #L11cf2a.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L11cf30.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.internal.e$a` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L11ce70.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/e$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L11ce76.  v1:= temp @kind object;
  #L11ce78.  v1:= (`kotlinx.coroutines.flow.internal.e$a`) v1 @kind object;
  #L11ce7c.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11ce80.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/e$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L11ce86.  v1:= temp @kind object;
  #L11ce88.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.e$a` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L11cf00.  v0:= new `kotlinx.coroutines.flow.internal.e$a`;
  #L11cf04.  v1:= v2.`kotlinx.coroutines.flow.internal.e$a.c` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L11cf08.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/flow/internal/e$a;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11cf0e.  v0.`kotlinx.coroutines.flow.internal.e$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L11cf12.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.e$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L11ce50.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L11ce54.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/e$a;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L11ce5a.  v1:= temp @kind object;
  #L11ce5c.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.e$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L11ce9c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11cea2.  v0:= temp @kind object;
  #L11cea4.  v1:= v3.`kotlinx.coroutines.flow.internal.e$a.a` @type ^`int`;
  #L11cea8.  v2:= 1I;
  #L11ceaa.  if v1 == 0 then goto L11ceca;
  #L11ceae.  if v1 != v2 then goto L11ceba;
  #L11ceb2.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11ceb8.  goto L11ceea;
  #L11ceba.  v4:= new `java.lang.IllegalStateException`;
  #L11cebe.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L11cec2.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11cec8.  throw v4;
  #L11ceca.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11ced0.  v4:= v3.`kotlinx.coroutines.flow.internal.e$a.b` @type ^`java.lang.Object` @kind object;
  #L11ced4.  v1:= v3.`kotlinx.coroutines.flow.internal.e$a.c` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L11ced8.  v3.`kotlinx.coroutines.flow.internal.e$a.a` @type ^`int` := v2;
  #L11cedc.  call temp:= `emit`(v1, v4, v3) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L11cee2.  v4:= temp @kind object;
  #L11cee4.  if v4 != v0 then goto L11ceea;
  #L11cee8.  return v0 @kind object;
  #L11ceea.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11ceee.  return v4 @kind object;
}
