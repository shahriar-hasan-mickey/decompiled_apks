record `kotlinx.coroutines.flow.internal.CombineKt$a$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.internal.CombineKt$a$a.a` @AccessFlag ;
  `kotlinx.coroutines.flow.Flow`[] `kotlinx.coroutines.flow.internal.CombineKt$a$a.b` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.internal.CombineKt$a$a.c` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicInteger` `kotlinx.coroutines.flow.internal.CombineKt$a$a.d` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.Channel` `kotlinx.coroutines.flow.internal.CombineKt$a$a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.CombineKt$a$a` v0 @kind this, `kotlinx.coroutines.flow.Flow`[] v1 @kind object, `int` v2 , `java.util.concurrent.atomic.AtomicInteger` v3 @kind object, `kotlinx.coroutines.channels.Channel` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a$a;.<init>:([Lkotlinx/coroutines/flow/Flow;ILjava/util/concurrent/atomic/AtomicInteger;Lkotlinx/coroutines/channels/Channel;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L11b404.  v0.`kotlinx.coroutines.flow.internal.CombineKt$a$a.b` @type ^`kotlinx.coroutines.flow.Flow`[] := v1 @kind object;
  #L11b408.  v0.`kotlinx.coroutines.flow.internal.CombineKt$a$a.c` @type ^`int` := v2;
  #L11b40c.  v0.`kotlinx.coroutines.flow.internal.CombineKt$a$a.d` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L11b410.  v0.`kotlinx.coroutines.flow.internal.CombineKt$a$a.e` @type ^`kotlinx.coroutines.channels.Channel` := v4 @kind object;
  #L11b414.  v1:= 2I;
  #L11b416.  call `<init>`(v0, v1, v5) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L11b41c.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.CombineKt$a$a` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L11b3d4.  v7:= new `kotlinx.coroutines.flow.internal.CombineKt$a$a`;
  #L11b3d8.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.b` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L11b3dc.  v2:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.c` @type ^`int`;
  #L11b3e0.  v3:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L11b3e4.  v4:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.e` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L11b3e8.  v0:= v7 @kind object;
  #L11b3ea.  v5:= v8 @kind object;
  #L11b3ec.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a$a;.<init>:([Lkotlinx/coroutines/flow/Flow;ILjava/util/concurrent/atomic/AtomicInteger;Lkotlinx/coroutines/channels/Channel;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11b3f2.  return v7 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$a$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L11b2bc.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L11b2c0.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L11b2c4.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L11b2ca.  v1:= temp @kind object;
  #L11b2cc.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$a$a` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L11b2e0.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L11b2e6.  v1:= temp @kind object;
  #L11b2e8.  v1:= (`kotlinx.coroutines.flow.internal.CombineKt$a$a`) v1 @kind object;
  #L11b2ec.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11b2f0.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L11b2f6.  v1:= temp @kind object;
  #L11b2f8.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.CombineKt$a$a` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L11b30c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11b312.  v0:= temp @kind object;
  #L11b314.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.a` @type ^`int`;
  #L11b318.  v2:= 0I;
  #L11b31a.  v3:= 1I;
  #L11b31c.  if v1 == 0 then goto L11b340;
  #L11b320.  if v1 != v3 then goto L11b330;
  #L11b324.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11b32a.  goto L11b372;
  #L11b32c.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11b32e.  goto L11b392;
  #L11b330.  v7:= new `java.lang.IllegalStateException`;
  #L11b334.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L11b338.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11b33e.  throw v7;
  #L11b340.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11b346.  v7:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.b` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L11b34a.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.c` @type ^`int`;
  #L11b34e.  v7:= v7[v1] @kind object;
  #L11b352.  v4:= new `kotlinx.coroutines.flow.internal.CombineKt$a$a$a`;
  #L11b356.  v5:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.e` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L11b35a.  call `<init>`(v4, v5, v1) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a$a$a;.<init>:(Lkotlinx/coroutines/channels/Channel;I)V` @kind direct;
  #L11b360.  v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.a` @type ^`int` := v3;
  #L11b364.  call temp:= `collect`(v7, v4, v6) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L11b36a.  v7:= temp @kind object;
  #L11b36c.  if v7 != v0 then goto L11b372;
  #L11b370.  return v0 @kind object;
  #L11b372.  v7:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L11b376.  call temp:= `decrementAndGet`(v7) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L11b37c.  v7:= temp;
  #L11b37e.  if v7 != 0 then goto L11b38c;
  #L11b382.  v7:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.e` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L11b386.  call temp:= `close$default`(v7, v2, v3, v2) @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.close$default:(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @kind static;
  #L11b38c.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11b390.  return v7 @kind object;
  #L11b392.  v0:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L11b396.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L11b39c.  v0:= temp;
  #L11b39e.  if v0 != 0 then goto L11b3ac;
  #L11b3a2.  v0:= v6.`kotlinx.coroutines.flow.internal.CombineKt$a$a.e` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L11b3a6.  call temp:= `close$default`(v0, v2, v3, v2) @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.close$default:(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @kind static;
  #L11b3ac.  throw v7;
  catch `java.lang.Throwable` @[L11b324..L11b32a] goto L11b32c;
  catch `java.lang.Throwable` @[L11b346..L11b36c] goto L11b32c;
}
