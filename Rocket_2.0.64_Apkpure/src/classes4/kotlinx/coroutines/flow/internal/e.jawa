record `kotlinx.coroutines.flow.internal.e` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.flow.internal.e.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.e.b` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.internal.e.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.e` v1 @kind this, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object, `kotlin.coroutines.CoroutineContext` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L11cf7c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11cf82.  v1.`kotlinx.coroutines.flow.internal.e.a` @type ^`kotlin.coroutines.CoroutineContext` := v3 @kind object;
  #L11cf86.  call temp:= `threadContextElements`(v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.threadContextElements:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @kind static;
  #L11cf8c.  v3:= temp @kind object;
  #L11cf8e.  v1.`kotlinx.coroutines.flow.internal.e.b` @type ^`java.lang.Object` := v3 @kind object;
  #L11cf92.  v3:= new `kotlinx.coroutines.flow.internal.e$a`;
  #L11cf96.  v0:= 0I;
  #L11cf98.  call `<init>`(v3, v2, v0) @signature `Lkotlinx/coroutines/flow/internal/e$a;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11cf9e.  v1.`kotlinx.coroutines.flow.internal.e.c` @type ^`kotlin.jvm.functions.Function2` := v3 @kind object;
  #L11cfa2.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.internal.e` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L11cf44.  v0:= v3.`kotlinx.coroutines.flow.internal.e.a` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L11cf48.  v1:= v3.`kotlinx.coroutines.flow.internal.e.b` @type ^`java.lang.Object` @kind object;
  #L11cf4c.  v2:= v3.`kotlinx.coroutines.flow.internal.e.c` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L11cf50.  call temp:= `withContextUndispatched`(v0, v4, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowKt;.withContextUndispatched:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L11cf56.  v4:= temp @kind object;
  #L11cf58.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11cf5e.  v5:= temp @kind object;
  #L11cf60.  if v4 != v5 then goto L11cf66;
  #L11cf64.  return v4 @kind object;
  #L11cf66.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11cf6a.  return v4 @kind object;
}
