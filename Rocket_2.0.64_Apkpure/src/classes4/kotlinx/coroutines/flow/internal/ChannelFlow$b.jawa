record `kotlinx.coroutines.flow.internal.ChannelFlow$b` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.internal.ChannelFlow$b.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.ChannelFlow$b.b` @AccessFlag SYNTHETIC;
  `kotlinx.coroutines.flow.internal.ChannelFlow` `kotlinx.coroutines.flow.internal.ChannelFlow$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlow$b` v0 @kind this, `kotlinx.coroutines.flow.internal.ChannelFlow` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$b;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlow;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L119f24.  v0.`kotlinx.coroutines.flow.internal.ChannelFlow$b.c` @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` := v1 @kind object;
  #L119f28.  v1:= 2I;
  #L119f2a.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L119f30.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.internal.ChannelFlow$b` v0 @kind this, `kotlinx.coroutines.channels.ProducerScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$b;.a:(Lkotlinx/coroutines/channels/ProducerScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L119e6c.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$b;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L119e72.  v1:= temp @kind object;
  #L119e74.  v1:= (`kotlinx.coroutines.flow.internal.ChannelFlow$b`) v1 @kind object;
  #L119e78.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L119e7c.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$b;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L119e82.  v1:= temp @kind object;
  #L119e84.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.ChannelFlow$b` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$b;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L119f00.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlow$b`;
  #L119f04.  v1:= v2.`kotlinx.coroutines.flow.internal.ChannelFlow$b.c` @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` @kind object;
  #L119f08.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$b;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L119f0e.  v0.`kotlinx.coroutines.flow.internal.ChannelFlow$b.b` @type ^`java.lang.Object` := v3 @kind object;
  #L119f12.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.ChannelFlow$b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$b;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L119e48.  v1:= (`kotlinx.coroutines.channels.ProducerScope`) v1 @kind object;
  #L119e4c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L119e50.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$b;.a:(Lkotlinx/coroutines/channels/ProducerScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L119e56.  v1:= temp @kind object;
  #L119e58.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.ChannelFlow$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$b;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L119e98.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L119e9e.  v0:= temp @kind object;
  #L119ea0.  v1:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow$b.a` @type ^`int`;
  #L119ea4.  v2:= 1I;
  #L119ea6.  if v1 == 0 then goto L119ec6;
  #L119eaa.  if v1 != v2 then goto L119eb6;
  #L119eae.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L119eb4.  goto L119eea;
  #L119eb6.  v4:= new `java.lang.IllegalStateException`;
  #L119eba.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L119ebe.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L119ec4.  throw v4;
  #L119ec6.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L119ecc.  v4:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow$b.b` @type ^`java.lang.Object` @kind object;
  #L119ed0.  v4:= (`kotlinx.coroutines.channels.ProducerScope`) v4 @kind object;
  #L119ed4.  v1:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow$b.c` @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` @kind object;
  #L119ed8.  v3.`kotlinx.coroutines.flow.internal.ChannelFlow$b.a` @type ^`int` := v2;
  #L119edc.  call temp:= `collectTo`(v1, v4, v3) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.collectTo:(Lkotlinx/coroutines/channels/ProducerScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L119ee2.  v4:= temp @kind object;
  #L119ee4.  if v4 != v0 then goto L119eea;
  #L119ee8.  return v0 @kind object;
  #L119eea.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L119eee.  return v4 @kind object;
}
