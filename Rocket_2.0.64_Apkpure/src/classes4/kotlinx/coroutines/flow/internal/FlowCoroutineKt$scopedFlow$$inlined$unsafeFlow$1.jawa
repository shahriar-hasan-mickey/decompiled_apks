record `kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1;.<init>:(Lkotlin/jvm/functions/Function3;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L11c260.  v0.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1.a` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L11c264.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11c26a.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1` v3 @kind this, `kotlinx.coroutines.flow.FlowCollector` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L11c224.  v0:= new `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a`;
  #L11c228.  v1:= v3.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L11c22c.  v2:= 0I;
  #L11c22e.  call `<init>`(v0, v1, v4, v2) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11c234.  call temp:= `flowScope`(v0, v5) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt;.flowScope:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L11c23a.  v4:= temp @kind object;
  #L11c23c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11c242.  v5:= temp @kind object;
  #L11c244.  if v4 != v5 then goto L11c24a;
  #L11c248.  return v4 @kind object;
  #L11c24a.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11c24e.  return v4 @kind object;
}
