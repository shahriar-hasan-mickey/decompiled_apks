record `kotlinx.coroutines.flow.internal.CombineKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `combineInternal`(`kotlinx.coroutines.flow.FlowCollector` v7 @kind object, `kotlinx.coroutines.flow.Flow`[] v8 @kind object, `kotlin.jvm.functions.Function0` v9 @kind object, `kotlin.jvm.functions.Function3` v10 @kind object, `kotlin.coroutines.Continuation` v11 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt;.combineInternal:(Lkotlinx/coroutines/flow/FlowCollector;[Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L11c124.  v6:= new `kotlinx.coroutines.flow.internal.CombineKt$a`;
  #L11c128.  v5:= 0I;
  #L11c12a.  v0:= v6 @kind object;
  #L11c12c.  v1:= v8 @kind object;
  #L11c12e.  v2:= v9 @kind object;
  #L11c130.  v3:= v10 @kind object;
  #L11c132.  v4:= v7 @kind object;
  #L11c134.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$a;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11c13a.  call temp:= `flowScope`(v6, v11) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt;.flowScope:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L11c140.  v7:= temp @kind object;
  #L11c142.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11c148.  v8:= temp @kind object;
  #L11c14a.  if v7 != v8 then goto L11c150;
  #L11c14e.  return v7 @kind object;
  #L11c150.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11c154.  return v7 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `zipImpl`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt;.zipImpl:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L11c168.  v0:= new `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1`;
  #L11c16c.  call `<init>`(v0, v2, v1, v3) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L11c172.  return v0 @kind object;
}
