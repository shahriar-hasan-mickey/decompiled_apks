record `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L11c360.  v0.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.c` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L11c364.  v0.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L11c368.  v1:= 2I;
  #L11c36a.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L11c370.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L11c338.  v0:= new `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a`;
  #L11c33c.  v1:= v3.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.c` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L11c340.  v2:= v3.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L11c344.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11c34a.  v0.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.b` @type ^`java.lang.Object` := v4 @kind object;
  #L11c34e.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L11c27c.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L11c280.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L11c284.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L11c28a.  v1:= temp @kind object;
  #L11c28c.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L11c2a0.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L11c2a6.  v1:= temp @kind object;
  #L11c2a8.  v1:= (`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a`) v1 @kind object;
  #L11c2ac.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11c2b0.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L11c2b6.  v1:= temp @kind object;
  #L11c2b8.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L11c2cc.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11c2d2.  v0:= temp @kind object;
  #L11c2d4.  v1:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.a` @type ^`int`;
  #L11c2d8.  v2:= 1I;
  #L11c2da.  if v1 == 0 then goto L11c2fa;
  #L11c2de.  if v1 != v2 then goto L11c2ea;
  #L11c2e2.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11c2e8.  goto L11c322;
  #L11c2ea.  v5:= new `java.lang.IllegalStateException`;
  #L11c2ee.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L11c2f2.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11c2f8.  throw v5;
  #L11c2fa.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11c300.  v5:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.b` @type ^`java.lang.Object` @kind object;
  #L11c304.  v5:= (`kotlinx.coroutines.CoroutineScope`) v5 @kind object;
  #L11c308.  v1:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.c` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L11c30c.  v3:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L11c310.  v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.a` @type ^`int` := v2;
  #L11c314.  call temp:= `invoke`(v1, v5, v3, v4) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L11c31a.  v5:= temp @kind object;
  #L11c31c.  if v5 != v0 then goto L11c322;
  #L11c320.  return v0 @kind object;
  #L11c322.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11c326.  return v5 @kind object;
}
