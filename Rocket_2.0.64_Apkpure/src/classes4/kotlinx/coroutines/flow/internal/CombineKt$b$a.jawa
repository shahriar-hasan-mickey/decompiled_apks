record `kotlinx.coroutines.flow.internal.CombineKt$b$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `kotlinx.coroutines.CompletableJob` `kotlinx.coroutines.flow.internal.CombineKt$b$a.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.internal.CombineKt$b$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.CombineKt$b$a` v0 @kind this, `kotlinx.coroutines.CompletableJob` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$b$a;.<init>:(Lkotlinx/coroutines/CompletableJob;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L11b860.  v0.`kotlinx.coroutines.flow.internal.CombineKt$b$a.a` @type ^`kotlinx.coroutines.CompletableJob` := v1 @kind object;
  #L11b864.  v0.`kotlinx.coroutines.flow.internal.CombineKt$b$a.b` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L11b868.  v1:= 1I;
  #L11b86a.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L11b870.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$b$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$b$a;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L11b840.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L11b844.  call `invoke`(v0, v1) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$b$a;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L11b84a.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11b84e.  return v1 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$b$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$b$a;.invoke:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L11b884.  v3:= v2.`kotlinx.coroutines.flow.internal.CombineKt$b$a.a` @type ^`kotlinx.coroutines.CompletableJob` @kind object;
  #L11b888.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L11b88e.  v3:= temp;
  #L11b890.  if v3 == 0 then goto L11b8ac;
  #L11b894.  v3:= v2.`kotlinx.coroutines.flow.internal.CombineKt$b$a.a` @type ^`kotlinx.coroutines.CompletableJob` @kind object;
  #L11b898.  v0:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L11b89c.  v1:= v2.`kotlinx.coroutines.flow.internal.CombineKt$b$a.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L11b8a0.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L11b8a6.  call `cancel`(v3, v0) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L11b8ac.  return @kind void;
}
