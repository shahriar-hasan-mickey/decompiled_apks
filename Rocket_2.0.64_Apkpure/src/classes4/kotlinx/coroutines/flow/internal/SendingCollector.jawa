record `kotlinx.coroutines.flow.internal.SendingCollector` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlinx.coroutines.channels.SendChannel` `kotlinx.coroutines.flow.internal.SendingCollector.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.SendingCollector` v0 @kind this, `kotlinx.coroutines.channels.SendChannel` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/SendingCollector;.<init>:(Lkotlinx/coroutines/channels/SendChannel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L11ccc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11ccc6.  v0.`kotlinx.coroutines.flow.internal.SendingCollector.a` @type ^`kotlinx.coroutines.channels.SendChannel` := v1 @kind object;
  #L11ccca.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.internal.SendingCollector` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/SendingCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11cc90.  v0:= v1.`kotlinx.coroutines.flow.internal.SendingCollector.a` @type ^`kotlinx.coroutines.channels.SendChannel` @kind object;
  #L11cc94.  call temp:= `send`(v0, v2, v3) @signature `Lkotlinx/coroutines/channels/SendChannel;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L11cc9a.  v2:= temp @kind object;
  #L11cc9c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11cca2.  v3:= temp @kind object;
  #L11cca4.  if v2 != v3 then goto L11ccaa;
  #L11cca8.  return v2 @kind object;
  #L11ccaa.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11ccae.  return v2 @kind object;
}
