record `kotlinx.coroutines.flow.internal.c` @kind class @AccessFlag FINAL extends `kotlin.coroutines.Continuation` @kind interface, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface {
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.flow.internal.c.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.flow.internal.c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.c` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/c;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L11cd30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11cd36.  v0.`kotlinx.coroutines.flow.internal.c.a` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L11cd3a.  v0.`kotlinx.coroutines.flow.internal.c.b` @type ^`kotlin.coroutines.CoroutineContext` := v2 @kind object;
  #L11cd3e.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.flow.internal.c` v2 @kind this) @signature `Lkotlinx/coroutines/flow/internal/c;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L11cd08.  v0:= v2.`kotlinx.coroutines.flow.internal.c.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11cd0c.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L11cd10.  if v1 == 0 then goto L11cd1a;
  #L11cd14.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L11cd18.  goto L11cd1c;
  #L11cd1a.  v0:= 0I;
  #L11cd1c.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.flow.internal.c` v1 @kind this) @signature `Lkotlinx/coroutines/flow/internal/c;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11ccf0.  v0:= v1.`kotlinx.coroutines.flow.internal.c.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L11ccf4.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.flow.internal.c` v1 @kind this) @signature `Lkotlinx/coroutines/flow/internal/c;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11ccdc.  v0:= 0I;
  #L11ccde.  return v0 @kind object;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.flow.internal.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/c;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11cd50.  v0:= v1.`kotlinx.coroutines.flow.internal.c.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L11cd54.  call `resumeWith`(v0, v2) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L11cd5a.  return @kind void;
}
