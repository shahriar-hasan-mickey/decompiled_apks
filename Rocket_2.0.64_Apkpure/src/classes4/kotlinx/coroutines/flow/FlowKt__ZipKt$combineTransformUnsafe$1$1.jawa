record `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransformUnsafe$1$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L115220.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L115224.  v1:= 3I;
  #L115226.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L11522c.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransformUnsafe$1$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L11511c.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L115120.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L115124.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L115128.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransformUnsafe$1$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L11512e.  v1:= temp @kind object;
  #L115130.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransformUnsafe$1$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L115144.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1`;
  #L115148.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L11514c.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransformUnsafe$1$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L115152.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.b` @type ^`java.lang.Object` := v3 @kind object;
  #L115156.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.c` @type ^`java.lang.Object` := v4 @kind object;
  #L11515a.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11515e.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransformUnsafe$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L115164.  v3:= temp @kind object;
  #L115166.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransformUnsafe$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1151a8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1151ae.  v0:= temp @kind object;
  #L1151b0.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.a` @type ^`int`;
  #L1151b4.  v2:= 1I;
  #L1151b6.  if v1 == 0 then goto L1151d6;
  #L1151ba.  if v1 != v2 then goto L1151c6;
  #L1151be.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1151c4.  goto L115208;
  #L1151c6.  v6:= new `java.lang.IllegalStateException`;
  #L1151ca.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1151ce.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1151d4.  throw v6;
  #L1151d6.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1151dc.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.b` @type ^`java.lang.Object` @kind object;
  #L1151e0.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L1151e4.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.c` @type ^`java.lang.Object` @kind object;
  #L1151e8.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L1151ec.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L1151f0.  v4:= 0I;
  #L1151f2.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.b` @type ^`java.lang.Object` := v4 @kind object;
  #L1151f6.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.a` @type ^`int` := v2;
  #L1151fa.  call temp:= `invoke`(v3, v6, v1, v5) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L115200.  v6:= temp @kind object;
  #L115202.  if v6 != v0 then goto L115208;
  #L115206.  return v0 @kind object;
  #L115208.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11520c.  return v6 @kind object;
}
procedure `java.lang.Object` `invokeSuspend$$forInline`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransformUnsafe$1$1;.invokeSuspend$$forInline:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L115178.  v3:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.b` @type ^`java.lang.Object` @kind object;
  #L11517c.  v3:= (`kotlinx.coroutines.flow.FlowCollector`) v3 @kind object;
  #L115180.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.c` @type ^`java.lang.Object` @kind object;
  #L115184.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L115188.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L11518c.  call temp:= `invoke`(v1, v3, v0, v2) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L115192.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L115196.  return v3 @kind object;
}
