record `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L10e6e4.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1.a` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L10e6e8.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L10e6ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10e6f2.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1` v7 @kind this, `java.lang.Object` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L10e5c4.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1` @kind boolean;
  #L10e5c8.  if v0 == 0 then goto L10e5ea;
  #L10e5cc.  v0:= v9 @kind object;
  #L10e5ce.  v0:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1`) v0 @kind object;
  #L10e5d2.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.c` @type ^`int`;
  #L10e5d6.  v2:= -2147483648I;
  #L10e5da.  v3:= v1 ^& v2 @kind int;
  #L10e5de.  if v3 == 0 then goto L10e5ea;
  #L10e5e2.  v1:= v1 - v2 @kind int;
  #L10e5e4.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.c` @type ^`int` := v1;
  #L10e5e8.  goto L10e5f4;
  #L10e5ea.  v0:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1`;
  #L10e5ee.  call `<init>`(v0, v7, v9) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10e5f4.  v9:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.b` @type ^`java.lang.Object` @kind object;
  #L10e5f8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10e5fe.  v1:= temp @kind object;
  #L10e600.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.c` @type ^`int`;
  #L10e604.  v3:= 2I;
  #L10e606.  v4:= 1I;
  #L10e608.  if v2 == 0 then goto L10e650;
  #L10e60c.  if v2 == v4 then goto L10e634;
  #L10e610.  if v2 != v3 then goto L10e624;
  #L10e614.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` @kind object;
  #L10e618.  v8:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1`) v8 @kind object;
  #L10e61c.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10e622.  goto L10e6bc;
  #L10e624.  v8:= new `java.lang.IllegalStateException`;
  #L10e628.  v9:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10e62c.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10e632.  throw v8;
  #L10e634.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.e` @type ^`java.lang.Object` @kind object;
  #L10e638.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` @kind object;
  #L10e63c.  v2:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1`) v2 @kind object;
  #L10e640.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10e646.  v6:= v9 @kind object;
  #L10e648.  v9:= v8 @kind object;
  #L10e64a.  v8:= v2 @kind object;
  #L10e64c.  v2:= v6 @kind object;
  #L10e64e.  goto L10e68a;
  #L10e650.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10e656.  v9:= v7.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1.a` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10e65a.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` := v7 @kind object;
  #L10e65e.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.e` @type ^`java.lang.Object` := v8 @kind object;
  #L10e662.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.c` @type ^`int` := v4;
  #L10e666.  v2:= 6I;
  #L10e668.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10e66e.  call temp:= `invoke`(v9, v8, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10e674.  v9:= temp @kind object;
  #L10e676.  v2:= 7I;
  #L10e678.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10e67e.  if v9 != v1 then goto L10e684;
  #L10e682.  return v1 @kind object;
  #L10e684.  v2:= v9 @kind object;
  #L10e686.  v9:= v8 @kind object;
  #L10e688.  v8:= v7 @kind object;
  #L10e68a.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L10e68e.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L10e694.  v2:= temp;
  #L10e696.  if v2 == 0 then goto L10e6ba;
  #L10e69a.  v2:= v8.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L10e69e.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` := v8 @kind object;
  #L10e6a2.  v5:= 0I;
  #L10e6a4.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.e` @type ^`java.lang.Object` := v5 @kind object;
  #L10e6a8.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-6$$inlined$collectWhile$1$1.c` @type ^`int` := v3;
  #L10e6ac.  call temp:= `emit`(v2, v9, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10e6b2.  v9:= temp @kind object;
  #L10e6b4.  if v9 != v1 then goto L10e6bc;
  #L10e6b8.  return v1 @kind object;
  #L10e6ba.  v4:= 0I;
  #L10e6bc.  if v4 == 0 then goto L10e6c6;
  #L10e6c0.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10e6c4.  return v8 @kind object;
  #L10e6c6.  v9:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L10e6ca.  call `<init>`(v9, v8) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L10e6d0.  throw v9;
}
