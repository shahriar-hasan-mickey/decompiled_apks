record `kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$unsafeTransform$1$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L10d118.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.a` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L10d11c.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L10d120.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10d126.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$unsafeTransform$1$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10d080.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1` @kind boolean;
  #L10d084.  if v0 == 0 then goto L10d0a6;
  #L10d088.  v0:= v6 @kind object;
  #L10d08a.  v0:= (`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1`) v0 @kind object;
  #L10d08e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1.c` @type ^`int`;
  #L10d092.  v2:= -2147483648I;
  #L10d096.  v3:= v1 ^& v2 @kind int;
  #L10d09a.  if v3 == 0 then goto L10d0a6;
  #L10d09e.  v1:= v1 - v2 @kind int;
  #L10d0a0.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1.c` @type ^`int` := v1;
  #L10d0a4.  goto L10d0b0;
  #L10d0a6.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1`;
  #L10d0aa.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$unsafeTransform$1$1$emit$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__EmittersKt$unsafeTransform$1$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10d0b0.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1.a` @type ^`java.lang.Object` @kind object;
  #L10d0b4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10d0ba.  v1:= temp @kind object;
  #L10d0bc.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1.c` @type ^`int`;
  #L10d0c0.  v3:= 1I;
  #L10d0c2.  if v2 == 0 then goto L10d0e2;
  #L10d0c6.  if v2 != v3 then goto L10d0d2;
  #L10d0ca.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10d0d0.  goto L10d102;
  #L10d0d2.  v5:= new `java.lang.IllegalStateException`;
  #L10d0d6.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10d0da.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10d0e0.  throw v5;
  #L10d0e2.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10d0e8.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L10d0ec.  v2:= v4.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L10d0f0.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1.c` @type ^`int` := v3;
  #L10d0f4.  call temp:= `invoke`(v6, v2, v5, v0) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10d0fa.  v5:= temp @kind object;
  #L10d0fc.  if v5 != v1 then goto L10d102;
  #L10d100.  return v1 @kind object;
  #L10d102.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10d106.  return v5 @kind object;
}
procedure `java.lang.Object` `emit$$forInline`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$unsafeTransform$1$1;.emit$$forInline:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L10d040.  v0:= 4I;
  #L10d042.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10d048.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1`;
  #L10d04c.  call `<init>`(v0, v2, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$unsafeTransform$1$1$emit$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__EmittersKt$unsafeTransform$1$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10d052.  v0:= 5I;
  #L10d054.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L10d05a.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L10d05e.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L10d062.  call temp:= `invoke`(v0, v1, v3, v4) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10d068.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10d06c.  return v3 @kind object;
}
