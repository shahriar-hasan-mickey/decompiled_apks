record `kotlinx.coroutines.flow.o` @kind class @AccessFlag FINAL {
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.o.a` @AccessFlag PUBLIC_FINAL;
  `int` `kotlinx.coroutines.flow.o.b` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.channels.BufferOverflow` `kotlinx.coroutines.flow.o.c` @AccessFlag PUBLIC_FINAL;
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.flow.o.d` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.o` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `int` v2 , `kotlinx.coroutines.channels.BufferOverflow` v3 @kind object, `kotlin.coroutines.CoroutineContext` v4 @kind object) @signature `Lkotlinx/coroutines/flow/o;.<init>:(Lkotlinx/coroutines/flow/Flow;ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L118484.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11848a.  v0.`kotlinx.coroutines.flow.o.a` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L11848e.  v0.`kotlinx.coroutines.flow.o.b` @type ^`int` := v2;
  #L118492.  v0.`kotlinx.coroutines.flow.o.c` @type ^`kotlinx.coroutines.channels.BufferOverflow` := v3 @kind object;
  #L118496.  v0.`kotlinx.coroutines.flow.o.d` @type ^`kotlin.coroutines.CoroutineContext` := v4 @kind object;
  #L11849a.  return @kind void;
}
