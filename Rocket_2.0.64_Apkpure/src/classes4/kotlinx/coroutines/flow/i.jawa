record `kotlinx.coroutines.flow.i` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/i;.a:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10b004.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.flow.i$a` @kind boolean;
  #L10b008.  if v0 == 0 then goto L10b02a;
  #L10b00c.  v0:= v5 @kind object;
  #L10b00e.  v0:= (`kotlinx.coroutines.flow.i$a`) v0 @kind object;
  #L10b012.  v1:= v0.`kotlinx.coroutines.flow.i$a.c` @type ^`int`;
  #L10b016.  v2:= -2147483648I;
  #L10b01a.  v3:= v1 ^& v2 @kind int;
  #L10b01e.  if v3 == 0 then goto L10b02a;
  #L10b022.  v1:= v1 - v2 @kind int;
  #L10b024.  v0.`kotlinx.coroutines.flow.i$a.c` @type ^`int` := v1;
  #L10b028.  goto L10b034;
  #L10b02a.  v0:= new `kotlinx.coroutines.flow.i$a`;
  #L10b02e.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/flow/i$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10b034.  v5:= v0.`kotlinx.coroutines.flow.i$a.b` @type ^`java.lang.Object` @kind object;
  #L10b038.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10b03e.  v1:= temp @kind object;
  #L10b040.  v2:= v0.`kotlinx.coroutines.flow.i$a.c` @type ^`int`;
  #L10b044.  v3:= 1I;
  #L10b046.  if v2 == 0 then goto L10b06e;
  #L10b04a.  if v2 != v3 then goto L10b05e;
  #L10b04e.  v4:= v0.`kotlinx.coroutines.flow.i$a.a` @type ^`java.lang.Object` @kind object;
  #L10b052.  v4:= (`kotlin.jvm.internal.Ref$IntRef`) v4 @kind object;
  #L10b056.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10b05c.  goto L10b0a0;
  #L10b05e.  v4:= new `java.lang.IllegalStateException`;
  #L10b062.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10b066.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10b06c.  throw v4;
  #L10b06e.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10b074.  v5:= new `kotlin.jvm.internal.Ref$IntRef`;
  #L10b078.  call `<init>`(v5) @signature `Lkotlin/jvm/internal/Ref$IntRef;.<init>:()V` @kind direct;
  #L10b07e.  v2:= new `kotlinx.coroutines.flow.i$b`;
  #L10b082.  call `<init>`(v2, v5) @signature `Lkotlinx/coroutines/flow/i$b;.<init>:(Lkotlin/jvm/internal/Ref$IntRef;)V` @kind direct;
  #L10b088.  v0.`kotlinx.coroutines.flow.i$a.a` @type ^`java.lang.Object` := v5 @kind object;
  #L10b08c.  v0.`kotlinx.coroutines.flow.i$a.c` @type ^`int` := v3;
  #L10b090.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10b096.  v4:= temp @kind object;
  #L10b098.  if v4 != v1 then goto L10b09e;
  #L10b09c.  return v1 @kind object;
  #L10b09e.  v4:= v5 @kind object;
  #L10b0a0.  v4:= v4.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L10b0a4.  call temp:= `boxInt`(v4) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L10b0aa.  v4:= temp @kind object;
  #L10b0ac.  return v4 @kind object;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/i;.b:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10b0c0.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.i$c` @kind boolean;
  #L10b0c4.  if v0 == 0 then goto L10b0e6;
  #L10b0c8.  v0:= v6 @kind object;
  #L10b0ca.  v0:= (`kotlinx.coroutines.flow.i$c`) v0 @kind object;
  #L10b0ce.  v1:= v0.`kotlinx.coroutines.flow.i$c.c` @type ^`int`;
  #L10b0d2.  v2:= -2147483648I;
  #L10b0d6.  v3:= v1 ^& v2 @kind int;
  #L10b0da.  if v3 == 0 then goto L10b0e6;
  #L10b0de.  v1:= v1 - v2 @kind int;
  #L10b0e0.  v0.`kotlinx.coroutines.flow.i$c.c` @type ^`int` := v1;
  #L10b0e4.  goto L10b0f0;
  #L10b0e6.  v0:= new `kotlinx.coroutines.flow.i$c`;
  #L10b0ea.  call `<init>`(v0, v6) @signature `Lkotlinx/coroutines/flow/i$c;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10b0f0.  v6:= v0.`kotlinx.coroutines.flow.i$c.b` @type ^`java.lang.Object` @kind object;
  #L10b0f4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10b0fa.  v1:= temp @kind object;
  #L10b0fc.  v2:= v0.`kotlinx.coroutines.flow.i$c.c` @type ^`int`;
  #L10b100.  v3:= 1I;
  #L10b102.  if v2 == 0 then goto L10b12a;
  #L10b106.  if v2 != v3 then goto L10b11a;
  #L10b10a.  v4:= v0.`kotlinx.coroutines.flow.i$c.a` @type ^`java.lang.Object` @kind object;
  #L10b10e.  v4:= (`kotlin.jvm.internal.Ref$IntRef`) v4 @kind object;
  #L10b112.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10b118.  goto L10b15c;
  #L10b11a.  v4:= new `java.lang.IllegalStateException`;
  #L10b11e.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10b122.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10b128.  throw v4;
  #L10b12a.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10b130.  v6:= new `kotlin.jvm.internal.Ref$IntRef`;
  #L10b134.  call `<init>`(v6) @signature `Lkotlin/jvm/internal/Ref$IntRef;.<init>:()V` @kind direct;
  #L10b13a.  v2:= new `kotlinx.coroutines.flow.i$d`;
  #L10b13e.  call `<init>`(v2, v5, v6) @signature `Lkotlinx/coroutines/flow/i$d;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/Ref$IntRef;)V` @kind direct;
  #L10b144.  v0.`kotlinx.coroutines.flow.i$c.a` @type ^`java.lang.Object` := v6 @kind object;
  #L10b148.  v0.`kotlinx.coroutines.flow.i$c.c` @type ^`int` := v3;
  #L10b14c.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L10b152.  v4:= temp @kind object;
  #L10b154.  if v4 != v1 then goto L10b15a;
  #L10b158.  return v1 @kind object;
  #L10b15a.  v4:= v6 @kind object;
  #L10b15c.  v4:= v4.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L10b160.  call temp:= `boxInt`(v4) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L10b166.  v4:= temp @kind object;
  #L10b168.  return v4 @kind object;
}
