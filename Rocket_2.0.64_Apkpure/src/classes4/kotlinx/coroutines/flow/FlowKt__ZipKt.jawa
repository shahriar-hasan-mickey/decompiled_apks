record `kotlinx.coroutines.flow.FlowKt__ZipKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `kotlin.jvm.functions.Function0` `a`() @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.a:()Lkotlin/jvm/functions/Function0;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1156b8.  call temp:= `p`() @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.p:()Lkotlin/jvm/functions/Function0;` @kind static;
  #L1156be.  v0:= temp @kind object;
  #L1156c0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `b`(`java.lang.Iterable` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.b:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1156ec.  call temp:= `toList`(v1) @signature `Lkotlin/collections/CollectionsKt;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L1156f2.  v1:= temp @kind object;
  #L1156f4.  v0:= 0I;
  #L1156f6.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L1156fa.  call temp:= `toArray`(v1, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L115700.  v1:= temp @kind object;
  #L115702.  v0:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L115706.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L11570c.  v1:= (`kotlinx.coroutines.flow.Flow`[]) v1 @kind object;
  #L115710.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L115716.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3`;
  #L11571a.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$3;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L115720.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `c`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.c:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L115734.  call temp:= `flowCombine`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flowCombine:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L11573a.  v0:= temp @kind object;
  #L11573c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `d`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.jvm.functions.Function4` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L115750.  v0:= 3I;
  #L115752.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L115756.  v1:= 0I;
  #L115758.  v0[v1]:= v2 @kind object;
  #L11575c.  v2:= 1I;
  #L11575e.  v0[v2]:= v3 @kind object;
  #L115762.  v2:= 2I;
  #L115764.  v0[v2]:= v4 @kind object;
  #L115768.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1`;
  #L11576c.  call `<init>`(v2, v0, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L115772.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `e`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlinx.coroutines.flow.Flow` v5 @kind object, `kotlin.jvm.functions.Function5` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.e:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function5;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L115784.  v0:= 4I;
  #L115786.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L11578a.  v1:= 0I;
  #L11578c.  v0[v1]:= v2 @kind object;
  #L115790.  v2:= 1I;
  #L115792.  v0[v2]:= v3 @kind object;
  #L115796.  v2:= 2I;
  #L115798.  v0[v2]:= v4 @kind object;
  #L11579c.  v2:= 3I;
  #L11579e.  v0[v2]:= v5 @kind object;
  #L1157a2.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2`;
  #L1157a6.  call `<init>`(v2, v0, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function5;)V` @kind direct;
  #L1157ac.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `f`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlinx.coroutines.flow.Flow` v5 @kind object, `kotlinx.coroutines.flow.Flow` v6 @kind object, `kotlin.jvm.functions.Function6` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.f:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function6;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1157c0.  v0:= 5I;
  #L1157c2.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L1157c6.  v1:= 0I;
  #L1157c8.  v0[v1]:= v2 @kind object;
  #L1157cc.  v2:= 1I;
  #L1157ce.  v0[v2]:= v3 @kind object;
  #L1157d2.  v2:= 2I;
  #L1157d4.  v0[v2]:= v4 @kind object;
  #L1157d8.  v2:= 3I;
  #L1157da.  v0[v2]:= v5 @kind object;
  #L1157de.  v2:= 4I;
  #L1157e0.  v0[v2]:= v6 @kind object;
  #L1157e4.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3`;
  #L1157e8.  call `<init>`(v2, v0, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function6;)V` @kind direct;
  #L1157ee.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `g`(`kotlinx.coroutines.flow.Flow`[] v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.g:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L115800.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L115806.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2`;
  #L11580a.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$2;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L115810.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `h`(`java.lang.Iterable` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.h:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L115824.  call temp:= `toList`(v2) @signature `Lkotlin/collections/CollectionsKt;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L11582a.  v2:= temp @kind object;
  #L11582c.  v0:= 0I;
  #L11582e.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L115832.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L115838.  v2:= temp @kind object;
  #L11583a.  v0:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L11583e.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L115844.  v2:= (`kotlinx.coroutines.flow.Flow`[]) v2 @kind object;
  #L115848.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L11584e.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7`;
  #L115852.  v1:= 0I;
  #L115854.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11585a.  call temp:= `flow`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L115860.  v2:= temp @kind object;
  #L115862.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `i`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlin.jvm.functions.Function4` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.i:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L115874.  v0:= 2I;
  #L115876.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L11587a.  v1:= 0I;
  #L11587c.  v0[v1]:= v2 @kind object;
  #L115880.  v2:= 1I;
  #L115882.  v0[v2]:= v3 @kind object;
  #L115886.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2`;
  #L11588a.  v3:= 0I;
  #L11588c.  call `<init>`(v2, v0, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L115892.  call temp:= `flow`(v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L115898.  v2:= temp @kind object;
  #L11589a.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `j`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.jvm.functions.Function5` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.j:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function5;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1158ac.  v0:= 3I;
  #L1158ae.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L1158b2.  v1:= 0I;
  #L1158b4.  v0[v1]:= v2 @kind object;
  #L1158b8.  v2:= 1I;
  #L1158ba.  v0[v2]:= v3 @kind object;
  #L1158be.  v2:= 2I;
  #L1158c0.  v0[v2]:= v4 @kind object;
  #L1158c4.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3`;
  #L1158c8.  v3:= 0I;
  #L1158ca.  call `<init>`(v2, v0, v3, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function5;)V` @kind direct;
  #L1158d0.  call temp:= `flow`(v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L1158d6.  v2:= temp @kind object;
  #L1158d8.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `k`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlinx.coroutines.flow.Flow` v5 @kind object, `kotlin.jvm.functions.Function6` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.k:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function6;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1158ec.  v0:= 4I;
  #L1158ee.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L1158f2.  v1:= 0I;
  #L1158f4.  v0[v1]:= v2 @kind object;
  #L1158f8.  v2:= 1I;
  #L1158fa.  v0[v2]:= v3 @kind object;
  #L1158fe.  v2:= 2I;
  #L115900.  v0[v2]:= v4 @kind object;
  #L115904.  v2:= 3I;
  #L115906.  v0[v2]:= v5 @kind object;
  #L11590a.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4`;
  #L11590e.  v3:= 0I;
  #L115910.  call `<init>`(v2, v0, v3, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function6;)V` @kind direct;
  #L115916.  call temp:= `flow`(v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L11591c.  v2:= temp @kind object;
  #L11591e.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `l`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlinx.coroutines.flow.Flow` v5 @kind object, `kotlinx.coroutines.flow.Flow` v6 @kind object, `kotlin.jvm.functions.Function7` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.l:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function7;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L115930.  v0:= 5I;
  #L115932.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L115936.  v1:= 0I;
  #L115938.  v0[v1]:= v2 @kind object;
  #L11593c.  v2:= 1I;
  #L11593e.  v0[v2]:= v3 @kind object;
  #L115942.  v2:= 2I;
  #L115944.  v0[v2]:= v4 @kind object;
  #L115948.  v2:= 3I;
  #L11594a.  v0[v2]:= v5 @kind object;
  #L11594e.  v2:= 4I;
  #L115950.  v0[v2]:= v6 @kind object;
  #L115954.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5`;
  #L115958.  v3:= 0I;
  #L11595a.  call `<init>`(v2, v0, v3, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function7;)V` @kind direct;
  #L115960.  call temp:= `flow`(v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L115966.  v2:= temp @kind object;
  #L115968.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `m`(`kotlinx.coroutines.flow.Flow`[] v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.m:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L11597c.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L115982.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6`;
  #L115986.  v1:= 0I;
  #L115988.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$6;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11598e.  call temp:= `flow`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L115994.  v2:= temp @kind object;
  #L115996.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `n`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.n:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1159a8.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1`;
  #L1159ac.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L1159b2.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `o`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlin.jvm.functions.Function4` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.o:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1159c4.  v0:= 2I;
  #L1159c6.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L1159ca.  v1:= 0I;
  #L1159cc.  v0[v1]:= v2 @kind object;
  #L1159d0.  v2:= 1I;
  #L1159d2.  v0[v2]:= v3 @kind object;
  #L1159d6.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1`;
  #L1159da.  v3:= 0I;
  #L1159dc.  call `<init>`(v2, v0, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L1159e2.  call temp:= `flow`(v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L1159e8.  v2:= temp @kind object;
  #L1159ea.  return v2 @kind object;
}
procedure `kotlin.jvm.functions.Function0` `p`() @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.p:()Lkotlin/jvm/functions/Function0;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L1156d4.  v0:= `@@kotlinx.coroutines.flow.FlowKt__ZipKt$b.a` @type ^`kotlinx.coroutines.flow.FlowKt__ZipKt$b` @kind object;
  #L1156d8.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `q`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.q:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1159fc.  call temp:= `zipImpl`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt;.zipImpl:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L115a02.  v0:= temp @kind object;
  #L115a04.  return v0 @kind object;
}
