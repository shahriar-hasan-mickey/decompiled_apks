record `kotlinx.coroutines.flow.SharingStarted$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.flow.SharingStarted$Companion` `@@kotlinx.coroutines.flow.SharingStarted$Companion.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.flow.SharingStarted` `@@kotlinx.coroutines.flow.SharingStarted$Companion.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.flow.SharingStarted` `@@kotlinx.coroutines.flow.SharingStarted$Companion.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/SharingStarted$Companion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L118530.  v0:= new `kotlinx.coroutines.flow.SharingStarted$Companion`;
  #L118534.  call `<init>`(v0) @signature `Lkotlinx/coroutines/flow/SharingStarted$Companion;.<init>:()V` @kind direct;
  #L11853a.  `@@kotlinx.coroutines.flow.SharingStarted$Companion.a` @type ^`kotlinx.coroutines.flow.SharingStarted$Companion` := v0 @kind object;
  #L11853e.  v0:= new `kotlinx.coroutines.flow.p`;
  #L118542.  call `<init>`(v0) @signature `Lkotlinx/coroutines/flow/p;.<init>:()V` @kind direct;
  #L118548.  `@@kotlinx.coroutines.flow.SharingStarted$Companion.b` @type ^`kotlinx.coroutines.flow.SharingStarted` := v0 @kind object;
  #L11854c.  v0:= new `kotlinx.coroutines.flow.q`;
  #L118550.  call `<init>`(v0) @signature `Lkotlinx/coroutines/flow/q;.<init>:()V` @kind direct;
  #L118556.  `@@kotlinx.coroutines.flow.SharingStarted$Companion.c` @type ^`kotlinx.coroutines.flow.SharingStarted` := v0 @kind object;
  #L11855a.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.SharingStarted$Companion` v0 @kind this) @signature `Lkotlinx/coroutines/flow/SharingStarted$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L11856c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L118572.  return @kind void;
}
procedure `kotlinx.coroutines.flow.SharingStarted` `WhileSubscribed$default`(`kotlinx.coroutines.flow.SharingStarted$Companion` v0 @kind object, `long` v1 , `long` v3 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/SharingStarted$Companion;.WhileSubscribed$default:(Lkotlinx/coroutines/flow/SharingStarted$Companion;JJILjava/lang/Object;)Lkotlinx/coroutines/flow/SharingStarted;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1184ac.  v6:= v5 ^& 1;
  #L1184b0.  if v6 == 0 then goto L1184b8;
  #L1184b4.  v1:= 0L;
  #L1184b8.  v5:= v5 ^& 2;
  #L1184bc.  if v5 == 0 then goto L1184ca;
  #L1184c0.  v3:= 9223372036854775807L;
  #L1184ca.  call temp:= `WhileSubscribed`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/SharingStarted$Companion;.WhileSubscribed:(JJ)Lkotlinx/coroutines/flow/SharingStarted;` @kind virtual;
  #L1184d0.  v0:= temp @kind object;
  #L1184d2.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.SharingStarted` `WhileSubscribed`(`kotlinx.coroutines.flow.SharingStarted$Companion` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lkotlinx/coroutines/flow/SharingStarted$Companion;.WhileSubscribed:(JJ)Lkotlinx/coroutines/flow/SharingStarted;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1184e4.  v0:= new `kotlinx.coroutines.flow.r`;
  #L1184e8.  call `<init>`(v0, v2, v4) @signature `Lkotlinx/coroutines/flow/r;.<init>:(JJ)V` @kind direct;
  #L1184ee.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.SharingStarted` `getEagerly`(`kotlinx.coroutines.flow.SharingStarted$Companion` v1 @kind this) @signature `Lkotlinx/coroutines/flow/SharingStarted$Companion;.getEagerly:()Lkotlinx/coroutines/flow/SharingStarted;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L118500.  v0:= `@@kotlinx.coroutines.flow.SharingStarted$Companion.b` @type ^`kotlinx.coroutines.flow.SharingStarted` @kind object;
  #L118504.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.SharingStarted` `getLazily`(`kotlinx.coroutines.flow.SharingStarted$Companion` v1 @kind this) @signature `Lkotlinx/coroutines/flow/SharingStarted$Companion;.getLazily:()Lkotlinx/coroutines/flow/SharingStarted;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L118518.  v0:= `@@kotlinx.coroutines.flow.SharingStarted$Companion.c` @type ^`kotlinx.coroutines.flow.SharingStarted` @kind object;
  #L11851c.  return v0 @kind object;
}
