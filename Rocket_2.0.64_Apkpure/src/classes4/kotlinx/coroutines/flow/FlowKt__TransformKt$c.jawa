record `kotlinx.coroutines.flow.FlowKt__TransformKt$c` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__TransformKt$c.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$IntRef` `kotlinx.coroutines.flow.FlowKt__TransformKt$c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__TransformKt$c` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.jvm.internal.Ref$IntRef` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$c;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/internal/Ref$IntRef;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1131d4.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$c.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L1131d8.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$c.b` @type ^`kotlin.jvm.internal.Ref$IntRef` := v2 @kind object;
  #L1131dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1131e2.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__TransformKt$c` v7 @kind this, `java.lang.Object` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$c;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L113110.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.flow.FlowKt__TransformKt$c$a` @kind boolean;
  #L113114.  if v0 == 0 then goto L113136;
  #L113118.  v0:= v9 @kind object;
  #L11311a.  v0:= (`kotlinx.coroutines.flow.FlowKt__TransformKt$c$a`) v0 @kind object;
  #L11311e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$c$a.c` @type ^`int`;
  #L113122.  v2:= -2147483648I;
  #L113126.  v3:= v1 ^& v2 @kind int;
  #L11312a.  if v3 == 0 then goto L113136;
  #L11312e.  v1:= v1 - v2 @kind int;
  #L113130.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$c$a.c` @type ^`int` := v1;
  #L113134.  goto L113140;
  #L113136.  v0:= new `kotlinx.coroutines.flow.FlowKt__TransformKt$c$a`;
  #L11313a.  call `<init>`(v0, v7, v9) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$c$a;.<init>:(Lkotlinx/coroutines/flow/FlowKt__TransformKt$c;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L113140.  v9:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$c$a.a` @type ^`java.lang.Object` @kind object;
  #L113144.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11314a.  v1:= temp @kind object;
  #L11314c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$c$a.c` @type ^`int`;
  #L113150.  v3:= 1I;
  #L113152.  if v2 == 0 then goto L113172;
  #L113156.  if v2 != v3 then goto L113162;
  #L11315a.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L113160.  goto L1131ac;
  #L113162.  v8:= new `java.lang.IllegalStateException`;
  #L113166.  v9:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L11316a.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L113170.  throw v8;
  #L113172.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L113178.  v9:= v7.`kotlinx.coroutines.flow.FlowKt__TransformKt$c.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L11317c.  v2:= new `kotlin.collections.IndexedValue`;
  #L113180.  v4:= v7.`kotlinx.coroutines.flow.FlowKt__TransformKt$c.b` @type ^`kotlin.jvm.internal.Ref$IntRef` @kind object;
  #L113184.  v5:= v4.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L113188.  v6:= v5 + 1;
  #L11318c.  v4.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int` := v6;
  #L113190.  if v5 < 0 then goto L1131b2;
  #L113194.  call `<init>`(v2, v5, v8) @signature `Lkotlin/collections/IndexedValue;.<init>:(ILjava/lang/Object;)V` @kind direct;
  #L11319a.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$c$a.c` @type ^`int` := v3;
  #L11319e.  call temp:= `emit`(v9, v2, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1131a4.  v8:= temp @kind object;
  #L1131a6.  if v8 != v1 then goto L1131ac;
  #L1131aa.  return v1 @kind object;
  #L1131ac.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1131b0.  return v8 @kind object;
  #L1131b2.  v8:= new `java.lang.ArithmeticException`;
  #L1131b6.  v9:= "Index overflow has happened" @kind object;
  #L1131ba.  call `<init>`(v8, v9) @signature `Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1131c0.  throw v8;
}
