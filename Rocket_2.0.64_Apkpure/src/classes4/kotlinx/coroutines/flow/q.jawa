record `kotlinx.coroutines.flow.q` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.SharingStarted` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.q` v0 @kind this) @signature `Lkotlinx/coroutines/flow/q;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L118904.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11890a.  return @kind void;
}
procedure `kotlinx.coroutines.flow.Flow` `command`(`kotlinx.coroutines.flow.q` v2 @kind this, `kotlinx.coroutines.flow.StateFlow` v3 @kind object) @signature `Lkotlinx/coroutines/flow/q;.command:(Lkotlinx/coroutines/flow/StateFlow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1188dc.  v0:= new `kotlinx.coroutines.flow.q$a`;
  #L1188e0.  v1:= 0I;
  #L1188e2.  call `<init>`(v0, v3, v1) @signature `Lkotlinx/coroutines/flow/q$a;.<init>:(Lkotlinx/coroutines/flow/StateFlow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1188e8.  call temp:= `flow`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L1188ee.  v3:= temp @kind object;
  #L1188f0.  return v3 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.flow.q` v1 @kind this) @signature `Lkotlinx/coroutines/flow/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1188c4.  v0:= "SharingStarted.Lazily" @kind object;
  #L1188c8.  return v0 @kind object;
}
