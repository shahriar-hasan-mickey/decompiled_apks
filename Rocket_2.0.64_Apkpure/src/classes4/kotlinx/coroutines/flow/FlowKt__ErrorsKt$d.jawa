record `kotlinx.coroutines.flow.FlowKt__ErrorsKt$d` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function4` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.b` @AccessFlag SYNTHETIC;
  `long` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.c` @AccessFlag SYNTHETIC;
  `long` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.d` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d` v0 @kind this, `long` v1 , `kotlin.jvm.functions.Function2` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$d;.<init>:(JLkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10d788.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.d` @type ^`long` := v1 @kind wide;
  #L10d78c.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.e` @type ^`kotlin.jvm.functions.Function2` := v3 @kind object;
  #L10d790.  v1:= 4I;
  #L10d792.  call `<init>`(v0, v1, v4) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L10d798.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d` v3 @kind this, `kotlinx.coroutines.flow.FlowCollector` v4 @kind object, `java.lang.Throwable` v5 @kind object, `long` v6 , `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$d;.a:(Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Throwable;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L10d6c0.  v4:= new `kotlinx.coroutines.flow.FlowKt__ErrorsKt$d`;
  #L10d6c4.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.d` @type ^`long` @kind wide;
  #L10d6c8.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.e` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10d6cc.  call `<init>`(v4, v0, v2, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$d;.<init>:(JLkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10d6d2.  v4.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.b` @type ^`java.lang.Object` := v5 @kind object;
  #L10d6d6.  v4.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.c` @type ^`long` := v6 @kind wide;
  #L10d6da.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10d6de.  call temp:= `invokeSuspend`(v4, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L10d6e4.  v4:= temp @kind object;
  #L10d6e6.  return v4 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d` v6 @kind this, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$d;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L10d684.  v1:= v7 @kind object;
  #L10d686.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L10d68a.  v2:= v8 @kind object;
  #L10d68c.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L10d690.  v9:= (`java.lang.Number`) v9 @kind object;
  #L10d694.  call temp:= `longValue`(v9) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L10d69a.  v3:= temp @kind wide;
  #L10d69c.  v5:= v10 @kind object;
  #L10d69e.  v5:= (`kotlin.coroutines.Continuation`) v5 @kind object;
  #L10d6a2.  v0:= v6 @kind object;
  #L10d6a4.  call temp:= `a`(v0, v1, v2, v3, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$d;.a:(Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Throwable;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L10d6aa.  v7:= temp @kind object;
  #L10d6ac.  return v7 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L10d6f8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10d6fe.  v0:= temp @kind object;
  #L10d700.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.a` @type ^`int`;
  #L10d704.  v2:= 1I;
  #L10d706.  if v1 == 0 then goto L10d726;
  #L10d70a.  if v1 != v2 then goto L10d716;
  #L10d70e.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10d714.  goto L10d75a;
  #L10d716.  v8:= new `java.lang.IllegalStateException`;
  #L10d71a.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10d71e.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10d724.  throw v8;
  #L10d726.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10d72c.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.b` @type ^`java.lang.Object` @kind object;
  #L10d730.  v8:= (`java.lang.Throwable`) v8 @kind object;
  #L10d734.  v3:= v7.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.c` @type ^`long` @kind wide;
  #L10d738.  v5:= v7.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.d` @type ^`long` @kind wide;
  #L10d73c.  v1:= lcmp(v3, v5);
  #L10d740.  if v1 >= 0 then goto L10d76c;
  #L10d744.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.e` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L10d748.  v7.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$d.a` @type ^`int` := v2;
  #L10d74c.  call temp:= `invoke`(v1, v8, v7) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L10d752.  v8:= temp @kind object;
  #L10d754.  if v8 != v0 then goto L10d75a;
  #L10d758.  return v0 @kind object;
  #L10d75a.  v8:= (`java.lang.Boolean`) v8 @kind object;
  #L10d75e.  call temp:= `booleanValue`(v8) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L10d764.  v8:= temp;
  #L10d766.  if v8 == 0 then goto L10d76c;
  #L10d76a.  goto L10d76e;
  #L10d76c.  v2:= 0I;
  #L10d76e.  call temp:= `boxBoolean`(v2) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L10d774.  v8:= temp @kind object;
  #L10d776.  return v8 @kind object;
}
