record `kotlinx.coroutines.flow.FlowKt__MergeKt$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__MergeKt$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MergeKt$a` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L10f240.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L10f244.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10f24a.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.FlowKt__MergeKt$a` v4 @kind this, `kotlinx.coroutines.flow.Flow` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.a:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10f1ac.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__MergeKt$a$a` @kind boolean;
  #L10f1b0.  if v0 == 0 then goto L10f1d2;
  #L10f1b4.  v0:= v6 @kind object;
  #L10f1b6.  v0:= (`kotlinx.coroutines.flow.FlowKt__MergeKt$a$a`) v0 @kind object;
  #L10f1ba.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$a$a.c` @type ^`int`;
  #L10f1be.  v2:= -2147483648I;
  #L10f1c2.  v3:= v1 ^& v2 @kind int;
  #L10f1c6.  if v3 == 0 then goto L10f1d2;
  #L10f1ca.  v1:= v1 - v2 @kind int;
  #L10f1cc.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$a$a.c` @type ^`int` := v1;
  #L10f1d0.  goto L10f1dc;
  #L10f1d2.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$a$a`;
  #L10f1d6.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a$a;.<init>:(Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L10f1dc.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$a$a.a` @type ^`java.lang.Object` @kind object;
  #L10f1e0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L10f1e6.  v1:= temp @kind object;
  #L10f1e8.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$a$a.c` @type ^`int`;
  #L10f1ec.  v3:= 1I;
  #L10f1ee.  if v2 == 0 then goto L10f20e;
  #L10f1f2.  if v2 != v3 then goto L10f1fe;
  #L10f1f6.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10f1fc.  goto L10f22a;
  #L10f1fe.  v5:= new `java.lang.IllegalStateException`;
  #L10f202.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L10f206.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10f20c.  throw v5;
  #L10f20e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L10f214.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L10f218.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$a$a.c` @type ^`int` := v3;
  #L10f21c.  call temp:= `emitAll`(v6, v5, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.emitAll:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L10f222.  v5:= temp @kind object;
  #L10f224.  if v5 != v1 then goto L10f22a;
  #L10f228.  return v1 @kind object;
  #L10f22a.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L10f22e.  return v5 @kind object;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__MergeKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L10f18c.  v1:= (`kotlinx.coroutines.flow.Flow`) v1 @kind object;
  #L10f190.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.a:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L10f196.  v1:= temp @kind object;
  #L10f198.  return v1 @kind object;
}
