record `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L113e18.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.d` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L113e1c.  v1:= 3I;
  #L113e1e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L113e24.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L113cd0.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L113cd4.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L113cd8.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L113cdc.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L113ce2.  v1:= temp @kind object;
  #L113ce4.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L113cf8.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2`;
  #L113cfc.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L113d00.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L113d06.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` := v3 @kind object;
  #L113d0a.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.c` @type ^`java.lang.Object` := v4 @kind object;
  #L113d0e.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L113d12.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L113d18.  v3:= temp @kind object;
  #L113d1a.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L113d74.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L113d7a.  v0:= temp @kind object;
  #L113d7c.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.a` @type ^`int`;
  #L113d80.  v2:= 2I;
  #L113d82.  v3:= 1I;
  #L113d84.  if v1 == 0 then goto L113db8;
  #L113d88.  if v1 == v3 then goto L113da8;
  #L113d8c.  if v1 != v2 then goto L113d98;
  #L113d90.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L113d96.  goto L113e02;
  #L113d98.  v6:= new `java.lang.IllegalStateException`;
  #L113d9c.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L113da0.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L113da6.  throw v6;
  #L113da8.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` @kind object;
  #L113dac.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L113db0.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L113db6.  goto L113dea;
  #L113db8.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L113dbe.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` @kind object;
  #L113dc2.  v1:= v6 @kind object;
  #L113dc4.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L113dc8.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.c` @type ^`java.lang.Object` @kind object;
  #L113dcc.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L113dd0.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L113dd4.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` := v1 @kind object;
  #L113dd8.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.a` @type ^`int` := v3;
  #L113ddc.  call temp:= `invoke`(v4, v6, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L113de2.  v6:= temp @kind object;
  #L113de4.  if v6 != v0 then goto L113dea;
  #L113de8.  return v0 @kind object;
  #L113dea.  v3:= 0I;
  #L113dec.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` := v3 @kind object;
  #L113df0.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.a` @type ^`int` := v2;
  #L113df4.  call temp:= `emit`(v1, v6, v5) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L113dfa.  v6:= temp @kind object;
  #L113dfc.  if v6 != v0 then goto L113e02;
  #L113e00.  return v0 @kind object;
  #L113e02.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L113e06.  return v6 @kind object;
}
procedure `java.lang.Object` `invokeSuspend$$forInline`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invokeSuspend$$forInline:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L113d2c.  v3:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` @kind object;
  #L113d30.  v3:= (`kotlinx.coroutines.flow.FlowCollector`) v3 @kind object;
  #L113d34.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.c` @type ^`java.lang.Object` @kind object;
  #L113d38.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L113d3c.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L113d40.  call temp:= `invoke`(v1, v0, v2) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L113d46.  v0:= temp @kind object;
  #L113d48.  v1:= 0I;
  #L113d4a.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L113d50.  call temp:= `emit`(v3, v0, v2) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L113d56.  v3:= 1I;
  #L113d58.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L113d5e.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L113d62.  return v3 @kind object;
}
