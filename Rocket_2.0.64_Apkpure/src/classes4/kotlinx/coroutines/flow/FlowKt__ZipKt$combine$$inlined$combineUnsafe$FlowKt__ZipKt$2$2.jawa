record `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function5` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlin.jvm.functions.Function5` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function5;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L113600.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.d` @type ^`kotlin.jvm.functions.Function5` := v2 @kind object;
  #L113604.  v2:= 3I;
  #L113606.  call `<init>`(v0, v2, v1) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L11360c.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1134d8.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L1134dc.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L1134e0.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L1134e4.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1134ea.  v1:= temp @kind object;
  #L1134ec.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L113500.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2`;
  #L113504.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.d` @type ^`kotlin.jvm.functions.Function5` @kind object;
  #L113508.  call `<init>`(v0, v5, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function5;)V` @kind direct;
  #L11350e.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.b` @type ^`java.lang.Object` := v3 @kind object;
  #L113512.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.c` @type ^`java.lang.Object` := v4 @kind object;
  #L113516.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11351a.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L113520.  v3:= temp @kind object;
  #L113522.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L113534.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L11353a.  v0:= temp @kind object;
  #L11353c.  v1:= v10.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.a` @type ^`int`;
  #L113540.  v2:= 2I;
  #L113542.  v3:= 1I;
  #L113544.  if v1 == 0 then goto L113578;
  #L113548.  if v1 == v3 then goto L113568;
  #L11354c.  if v1 != v2 then goto L113558;
  #L113550.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L113556.  goto L1135e8;
  #L113558.  v11:= new `java.lang.IllegalStateException`;
  #L11355c.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L113560.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L113566.  throw v11;
  #L113568.  v1:= v10.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.b` @type ^`java.lang.Object` @kind object;
  #L11356c.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L113570.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L113576.  goto L1135d0;
  #L113578.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L11357e.  v11:= v10.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.b` @type ^`java.lang.Object` @kind object;
  #L113582.  v1:= v11 @kind object;
  #L113584.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L113588.  v11:= v10.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.c` @type ^`java.lang.Object` @kind object;
  #L11358c.  v11:= (`java.lang.Object`[]) v11 @kind object;
  #L113590.  v4:= v10.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.d` @type ^`kotlin.jvm.functions.Function5` @kind object;
  #L113594.  v5:= 0I;
  #L113596.  v5:= v11[v5] @kind object;
  #L11359a.  v6:= v11[v3] @kind object;
  #L11359e.  v7:= v11[v2] @kind object;
  #L1135a2.  v8:= 3I;
  #L1135a4.  v8:= v11[v8] @kind object;
  #L1135a8.  v10.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.b` @type ^`java.lang.Object` := v1 @kind object;
  #L1135ac.  v10.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.a` @type ^`int` := v3;
  #L1135b0.  v11:= 6I;
  #L1135b2.  call `mark`(v11) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1135b8.  v9:= v10 @kind object;
  #L1135ba.  call temp:= `invoke`(v4, v5, v6, v7, v8, v9) @signature `Lkotlin/jvm/functions/Function5;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1135c0.  v11:= temp @kind object;
  #L1135c2.  v3:= 7I;
  #L1135c4.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1135ca.  if v11 != v0 then goto L1135d0;
  #L1135ce.  return v0 @kind object;
  #L1135d0.  v3:= 0I;
  #L1135d2.  v10.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.b` @type ^`java.lang.Object` := v3 @kind object;
  #L1135d6.  v10.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2.a` @type ^`int` := v2;
  #L1135da.  call temp:= `emit`(v1, v11, v10) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1135e0.  v11:= temp @kind object;
  #L1135e2.  if v11 != v0 then goto L1135e8;
  #L1135e6.  return v0 @kind object;
  #L1135e8.  v11:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1135ec.  return v11 @kind object;
}
