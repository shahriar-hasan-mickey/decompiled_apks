record `kotlinx.coroutines.flow.q$a$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlin.jvm.internal.Ref$BooleanRef` `kotlinx.coroutines.flow.q$a$a.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.q$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.q$a$a` v0 @kind this, `kotlin.jvm.internal.Ref$BooleanRef` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object) @signature `Lkotlinx/coroutines/flow/q$a$a;.<init>:(Lkotlin/jvm/internal/Ref$BooleanRef;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L11878c.  v0.`kotlinx.coroutines.flow.q$a$a.a` @type ^`kotlin.jvm.internal.Ref$BooleanRef` := v1 @kind object;
  #L118790.  v0.`kotlinx.coroutines.flow.q$a$a.b` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L118794.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11879a.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.q$a$a` v4 @kind this, `int` v5 , `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/q$a$a;.a:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1186b0.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.q$a$a$a` @kind boolean;
  #L1186b4.  if v0 == 0 then goto L1186d6;
  #L1186b8.  v0:= v6 @kind object;
  #L1186ba.  v0:= (`kotlinx.coroutines.flow.q$a$a$a`) v0 @kind object;
  #L1186be.  v1:= v0.`kotlinx.coroutines.flow.q$a$a$a.c` @type ^`int`;
  #L1186c2.  v2:= -2147483648I;
  #L1186c6.  v3:= v1 ^& v2 @kind int;
  #L1186ca.  if v3 == 0 then goto L1186d6;
  #L1186ce.  v1:= v1 - v2 @kind int;
  #L1186d0.  v0.`kotlinx.coroutines.flow.q$a$a$a.c` @type ^`int` := v1;
  #L1186d4.  goto L1186e0;
  #L1186d6.  v0:= new `kotlinx.coroutines.flow.q$a$a$a`;
  #L1186da.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/q$a$a$a;.<init>:(Lkotlinx/coroutines/flow/q$a$a;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1186e0.  v6:= v0.`kotlinx.coroutines.flow.q$a$a$a.a` @type ^`java.lang.Object` @kind object;
  #L1186e4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1186ea.  v1:= temp @kind object;
  #L1186ec.  v2:= v0.`kotlinx.coroutines.flow.q$a$a$a.c` @type ^`int`;
  #L1186f0.  v3:= 1I;
  #L1186f2.  if v2 == 0 then goto L118712;
  #L1186f6.  if v2 != v3 then goto L118702;
  #L1186fa.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L118700.  goto L118746;
  #L118702.  v5:= new `java.lang.IllegalStateException`;
  #L118706.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L11870a.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L118710.  throw v5;
  #L118712.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L118718.  if v5 <= 0 then goto L11874c;
  #L11871c.  v5:= v4.`kotlinx.coroutines.flow.q$a$a.a` @type ^`kotlin.jvm.internal.Ref$BooleanRef` @kind object;
  #L118720.  v6:= v5.`kotlin.jvm.internal.Ref$BooleanRef.element` @type ^`boolean` @kind boolean;
  #L118724.  if v6 != 0 then goto L11874c;
  #L118728.  v5.`kotlin.jvm.internal.Ref$BooleanRef.element` @type ^`boolean` := v3 @kind boolean;
  #L11872c.  v5:= v4.`kotlinx.coroutines.flow.q$a$a.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L118730.  v6:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L118734.  v0.`kotlinx.coroutines.flow.q$a$a$a.c` @type ^`int` := v3;
  #L118738.  call temp:= `emit`(v5, v6, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L11873e.  v5:= temp @kind object;
  #L118740.  if v5 != v1 then goto L118746;
  #L118744.  return v1 @kind object;
  #L118746.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L11874a.  return v5 @kind object;
  #L11874c.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L118750.  return v5 @kind object;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.q$a$a` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/q$a$a;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L118764.  v1:= (`java.lang.Number`) v1 @kind object;
  #L118768.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L11876e.  v1:= temp;
  #L118770.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/q$a$a;.a:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L118776.  v1:= temp @kind object;
  #L118778.  return v1 @kind object;
}
