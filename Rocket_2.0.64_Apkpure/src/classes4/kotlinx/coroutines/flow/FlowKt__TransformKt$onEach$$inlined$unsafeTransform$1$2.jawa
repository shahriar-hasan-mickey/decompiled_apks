record `kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L112b08.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L112b0c.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L112b10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L112b16.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2` v5 @kind this, `java.lang.Object` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L112a1c.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1` @kind boolean;
  #L112a20.  if v0 == 0 then goto L112a42;
  #L112a24.  v0:= v7 @kind object;
  #L112a26.  v0:= (`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1`) v0 @kind object;
  #L112a2a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.b` @type ^`int`;
  #L112a2e.  v2:= -2147483648I;
  #L112a32.  v3:= v1 ^& v2 @kind int;
  #L112a36.  if v3 == 0 then goto L112a42;
  #L112a3a.  v1:= v1 - v2 @kind int;
  #L112a3c.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v1;
  #L112a40.  goto L112a4c;
  #L112a42.  v0:= new `kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1`;
  #L112a46.  call `<init>`(v0, v5, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L112a4c.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.a` @type ^`java.lang.Object` @kind object;
  #L112a50.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L112a56.  v1:= temp @kind object;
  #L112a58.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.b` @type ^`int`;
  #L112a5c.  v3:= 2I;
  #L112a5e.  v4:= 1I;
  #L112a60.  if v2 == 0 then goto L112a98;
  #L112a64.  if v2 == v4 then goto L112a84;
  #L112a68.  if v2 != v3 then goto L112a74;
  #L112a6c.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L112a72.  goto L112af0;
  #L112a74.  v6:= new `java.lang.IllegalStateException`;
  #L112a78.  v7:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L112a7c.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L112a82.  throw v6;
  #L112a84.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.e` @type ^`java.lang.Object` @kind object;
  #L112a88.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L112a8c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` @kind object;
  #L112a90.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L112a96.  goto L112ad4;
  #L112a98.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L112a9e.  v7:= v5.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L112aa2.  v2:= v5.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L112aa6.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` := v6 @kind object;
  #L112aaa.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.e` @type ^`java.lang.Object` := v7 @kind object;
  #L112aae.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v4;
  #L112ab2.  v4:= 6I;
  #L112ab4.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L112aba.  call temp:= `invoke`(v2, v6, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L112ac0.  v2:= temp @kind object;
  #L112ac2.  v4:= 7I;
  #L112ac4.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L112aca.  if v2 != v1 then goto L112ad0;
  #L112ace.  return v1 @kind object;
  #L112ad0.  v2:= v6 @kind object;
  #L112ad2.  v6:= v7 @kind object;
  #L112ad4.  v7:= 0I;
  #L112ad6.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` := v7 @kind object;
  #L112ada.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.e` @type ^`java.lang.Object` := v7 @kind object;
  #L112ade.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v3;
  #L112ae2.  call temp:= `emit`(v6, v2, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L112ae8.  v6:= temp @kind object;
  #L112aea.  if v6 != v1 then goto L112af0;
  #L112aee.  return v1 @kind object;
  #L112af0.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L112af4.  return v6 @kind object;
}
