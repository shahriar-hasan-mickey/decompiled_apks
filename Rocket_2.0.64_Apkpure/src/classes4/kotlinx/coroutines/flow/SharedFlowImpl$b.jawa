record `kotlinx.coroutines.flow.SharedFlowImpl$b` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.ContinuationImpl` @kind class {
  `java.lang.Object` `kotlinx.coroutines.flow.SharedFlowImpl$b.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.SharedFlowImpl$b.b` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.SharedFlowImpl$b.c` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.SharedFlowImpl$b.d` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.SharedFlowImpl$b.e` @AccessFlag SYNTHETIC;
  `kotlinx.coroutines.flow.SharedFlowImpl` `kotlinx.coroutines.flow.SharedFlowImpl$b.f` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.SharedFlowImpl$b.g` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.SharedFlowImpl$b` v0 @kind this, `kotlinx.coroutines.flow.SharedFlowImpl` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/SharedFlowImpl$b;.<init>:(Lkotlinx/coroutines/flow/SharedFlowImpl;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L117000.  v0.`kotlinx.coroutines.flow.SharedFlowImpl$b.f` @type ^`kotlinx.coroutines.flow.SharedFlowImpl` := v1 @kind object;
  #L117004.  call `<init>`(v0, v2) @signature `Lkotlin/coroutines/jvm/internal/ContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L11700a.  return @kind void;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.SharedFlowImpl$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/SharedFlowImpl$b;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L116fcc.  v1.`kotlinx.coroutines.flow.SharedFlowImpl$b.e` @type ^`java.lang.Object` := v2 @kind object;
  #L116fd0.  v2:= v1.`kotlinx.coroutines.flow.SharedFlowImpl$b.g` @type ^`int`;
  #L116fd4.  v0:= -2147483648I;
  #L116fd8.  v2:= v2 ^| v0 @kind int;
  #L116fda.  v1.`kotlinx.coroutines.flow.SharedFlowImpl$b.g` @type ^`int` := v2;
  #L116fde.  v2:= v1.`kotlinx.coroutines.flow.SharedFlowImpl$b.f` @type ^`kotlinx.coroutines.flow.SharedFlowImpl` @kind object;
  #L116fe2.  v0:= 0I;
  #L116fe4.  call temp:= `d`(v2, v0, v1) @signature `Lkotlinx/coroutines/flow/SharedFlowImpl;.d:(Lkotlinx/coroutines/flow/SharedFlowImpl;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L116fea.  v2:= temp @kind object;
  #L116fec.  return v2 @kind object;
}
