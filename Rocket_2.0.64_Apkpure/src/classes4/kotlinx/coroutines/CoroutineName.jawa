record `kotlinx.coroutines.CoroutineName` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.AbstractCoroutineContextElement` @kind class {
  `java.lang.String` `kotlinx.coroutines.CoroutineName.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlinx.coroutines.CoroutineName$Key` `@@kotlinx.coroutines.CoroutineName.Key` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineName;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0efaf4.  v0:= new `kotlinx.coroutines.CoroutineName$Key`;
  #L0efaf8.  v1:= 0I;
  #L0efafa.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineName$Key;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0efb00.  `@@kotlinx.coroutines.CoroutineName.Key` @type ^`kotlinx.coroutines.CoroutineName$Key` := v0 @kind object;
  #L0efb04.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineName` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineName;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0efb18.  v0:= `@@kotlinx.coroutines.CoroutineName.Key` @type ^`kotlinx.coroutines.CoroutineName$Key` @kind object;
  #L0efb1c.  call `<init>`(v1, v0) @signature `Lkotlin/coroutines/AbstractCoroutineContextElement;.<init>:(Lkotlin/coroutines/CoroutineContext$Key;)V` @kind direct;
  #L0efb22.  v1.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` := v2 @kind object;
  #L0efb26.  return @kind void;
}
procedure `kotlinx.coroutines.CoroutineName` `copy$default`(`kotlinx.coroutines.CoroutineName` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/CoroutineName;.copy$default:(Lkotlinx/coroutines/CoroutineName;Ljava/lang/String;ILjava/lang/Object;)Lkotlinx/coroutines/CoroutineName;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0efab0.  v2:= v2 ^& 1;
  #L0efab4.  if v2 == 0 then goto L0efabc;
  #L0efab8.  v1:= v0.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L0efabc.  call temp:= `copy`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineName;.copy:(Ljava/lang/String;)Lkotlinx/coroutines/CoroutineName;` @kind virtual;
  #L0efac2.  v0:= temp @kind object;
  #L0efac4.  return v0 @kind object;
}
procedure `java.lang.String` `component1`(`kotlinx.coroutines.CoroutineName` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineName;.component1:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0efa3c.  v0:= v1.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L0efa40.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CoroutineName` `copy`(`kotlinx.coroutines.CoroutineName` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineName;.copy:(Ljava/lang/String;)Lkotlinx/coroutines/CoroutineName;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0efad8.  v0:= new `kotlinx.coroutines.CoroutineName`;
  #L0efadc.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/CoroutineName;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0efae2.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.CoroutineName` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/CoroutineName;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0ef9dc.  v0:= 1I;
  #L0ef9de.  if v3 != v4 then goto L0ef9e4;
  #L0ef9e2.  return v0;
  #L0ef9e4.  v1:= instanceof @variable v4 @type ^`kotlinx.coroutines.CoroutineName` @kind boolean;
  #L0ef9e8.  v2:= 0I;
  #L0ef9ea.  if v1 != 0 then goto L0ef9f0;
  #L0ef9ee.  return v2;
  #L0ef9f0.  v4:= (`kotlinx.coroutines.CoroutineName`) v4 @kind object;
  #L0ef9f4.  v1:= v3.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L0ef9f8.  v4:= v4.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L0ef9fc.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L0efa02.  v4:= temp;
  #L0efa04.  if v4 != 0 then goto L0efa0a;
  #L0efa08.  return v2;
  #L0efa0a.  return v0;
}
procedure `java.lang.String` `getName`(`kotlinx.coroutines.CoroutineName` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineName;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0efa54.  v0:= v1.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L0efa58.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlinx.coroutines.CoroutineName` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineName;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0efa1c.  v0:= v1.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L0efa20.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L0efa26.  v0:= temp;
  #L0efa28.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.CoroutineName` v2 @kind this) @signature `Lkotlinx/coroutines/CoroutineName;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0efa6c.  v0:= new `java.lang.StringBuilder`;
  #L0efa70.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0efa76.  v1:= "CoroutineName(" @kind object;
  #L0efa7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0efa80.  v1:= v2.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L0efa84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0efa8a.  v1:= 41I;
  #L0efa8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0efa94.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0efa9a.  v0:= temp @kind object;
  #L0efa9c.  return v0 @kind object;
}
