record `kotlinx.coroutines.CoroutineId` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.AbstractCoroutineContextElement` @kind class, `kotlinx.coroutines.ThreadContextElement` @kind interface {
  `long` `kotlinx.coroutines.CoroutineId.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlinx.coroutines.CoroutineId$Key` `@@kotlinx.coroutines.CoroutineId.Key` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineId;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0ef92c.  v0:= new `kotlinx.coroutines.CoroutineId$Key`;
  #L0ef930.  v1:= 0I;
  #L0ef932.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineId$Key;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L0ef938.  `@@kotlinx.coroutines.CoroutineId.Key` @type ^`kotlinx.coroutines.CoroutineId$Key` := v0 @kind object;
  #L0ef93c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineId` v1 @kind this, `long` v2 ) @signature `Lkotlinx/coroutines/CoroutineId;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L0ef950.  v0:= `@@kotlinx.coroutines.CoroutineId.Key` @type ^`kotlinx.coroutines.CoroutineId$Key` @kind object;
  #L0ef954.  call `<init>`(v1, v0) @signature `Lkotlin/coroutines/AbstractCoroutineContextElement;.<init>:(Lkotlin/coroutines/CoroutineContext$Key;)V` @kind direct;
  #L0ef95a.  v1.`kotlinx.coroutines.CoroutineId.a` @type ^`long` := v2 @kind wide;
  #L0ef95e.  return @kind void;
}
procedure `kotlinx.coroutines.CoroutineId` `copy$default`(`kotlinx.coroutines.CoroutineId` v0 @kind object, `long` v1 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.copy$default:(Lkotlinx/coroutines/CoroutineId;JILjava/lang/Object;)Lkotlinx/coroutines/CoroutineId;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0ef8b8.  v3:= v3 ^& 1;
  #L0ef8bc.  if v3 == 0 then goto L0ef8c4;
  #L0ef8c0.  v1:= v0.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L0ef8c4.  call temp:= `copy`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineId;.copy:(J)Lkotlinx/coroutines/CoroutineId;` @kind virtual;
  #L0ef8ca.  v0:= temp @kind object;
  #L0ef8cc.  return v0 @kind object;
}
procedure `long` `component1`(`kotlinx.coroutines.CoroutineId` v2 @kind this) @signature `Lkotlinx/coroutines/CoroutineId;.component1:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0ef8fc.  v0:= v2.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L0ef900.  return v0 @kind wide;
}
procedure `kotlinx.coroutines.CoroutineId` `copy`(`kotlinx.coroutines.CoroutineId` v1 @kind this, `long` v2 ) @signature `Lkotlinx/coroutines/CoroutineId;.copy:(J)Lkotlinx/coroutines/CoroutineId;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0ef8e0.  v0:= new `kotlinx.coroutines.CoroutineId`;
  #L0ef8e4.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/CoroutineId;.<init>:(J)V` @kind direct;
  #L0ef8ea.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.CoroutineId` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0ef71c.  v0:= 1I;
  #L0ef71e.  if v7 != v8 then goto L0ef724;
  #L0ef722.  return v0;
  #L0ef724.  v1:= instanceof @variable v8 @type ^`kotlinx.coroutines.CoroutineId` @kind boolean;
  #L0ef728.  v2:= 0I;
  #L0ef72a.  if v1 != 0 then goto L0ef730;
  #L0ef72e.  return v2;
  #L0ef730.  v8:= (`kotlinx.coroutines.CoroutineId`) v8 @kind object;
  #L0ef734.  v3:= v7.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L0ef738.  v5:= v8.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L0ef73c.  v8:= lcmp(v3, v5);
  #L0ef740.  if v8 == 0 then goto L0ef746;
  #L0ef744.  return v2;
  #L0ef746.  return v0;
}
procedure `long` `getId`(`kotlinx.coroutines.CoroutineId` v2 @kind this) @signature `Lkotlinx/coroutines/CoroutineId;.getId:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0ef914.  v0:= v2.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L0ef918.  return v0 @kind wide;
}
procedure `int` `hashCode`(`kotlinx.coroutines.CoroutineId` v2 @kind this) @signature `Lkotlinx/coroutines/CoroutineId;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0ef758.  v0:= v2.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L0ef75c.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/j;.a:(J)I` @kind static;
  #L0ef762.  v0:= temp;
  #L0ef764.  return v0;
}
procedure `void` `restoreThreadContext`(`kotlinx.coroutines.CoroutineId` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0ef970.  v2:= (`java.lang.String`) v2 @kind object;
  #L0ef974.  call `restoreThreadContext`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineId;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/String;)V` @kind virtual;
  #L0ef97a.  return @kind void;
}
procedure `void` `restoreThreadContext`(`kotlinx.coroutines.CoroutineId` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L0ef98c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L0ef992.  v1:= temp @kind object;
  #L0ef994.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L0ef99a.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.CoroutineId` v3 @kind this) @signature `Lkotlinx/coroutines/CoroutineId;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0ef794.  v0:= new `java.lang.StringBuilder`;
  #L0ef798.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0ef79e.  v1:= "CoroutineId(" @kind object;
  #L0ef7a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ef7a8.  v1:= v3.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L0ef7ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ef7b2.  v1:= 41I;
  #L0ef7b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ef7bc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ef7c2.  v0:= temp @kind object;
  #L0ef7c4.  return v0 @kind object;
}
procedure `java.lang.Object` `updateThreadContext`(`kotlinx.coroutines.CoroutineId` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0ef778.  call temp:= `updateThreadContext`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineId;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/String;` @kind virtual;
  #L0ef77e.  v1:= temp @kind object;
  #L0ef780.  return v1 @kind object;
}
procedure `java.lang.String` `updateThreadContext`(`kotlinx.coroutines.CoroutineId` v8 @kind this, `kotlin.coroutines.CoroutineContext` v9 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0ef7d8.  v0:= `@@kotlinx.coroutines.CoroutineName.Key` @type ^`kotlinx.coroutines.CoroutineName$Key` @kind object;
  #L0ef7dc.  call temp:= `get`(v9, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L0ef7e2.  v9:= temp @kind object;
  #L0ef7e4.  v9:= (`kotlinx.coroutines.CoroutineName`) v9 @kind object;
  #L0ef7e8.  v0:= "coroutine" @kind object;
  #L0ef7ec.  if v9 != 0 then goto L0ef7f2;
  #L0ef7f0.  goto L0ef802;
  #L0ef7f2.  call temp:= `getName`(v9) @signature `Lkotlinx/coroutines/CoroutineName;.getName:()Ljava/lang/String;` @kind virtual;
  #L0ef7f8.  v9:= temp @kind object;
  #L0ef7fa.  if v9 != 0 then goto L0ef800;
  #L0ef7fe.  goto L0ef802;
  #L0ef800.  v0:= v9 @kind object;
  #L0ef802.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L0ef808.  v9:= temp @kind object;
  #L0ef80a.  call temp:= `getName`(v9) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L0ef810.  v7:= temp @kind object;
  #L0ef812.  v3:= 0I;
  #L0ef814.  v4:= 0I;
  #L0ef816.  v5:= 6I;
  #L0ef818.  v6:= 0I;
  #L0ef81a.  v2:= " @" @kind object;
  #L0ef81e.  v1:= v7 @kind object;
  #L0ef820.  call temp:= `lastIndexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.lastIndexOf$default:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L0ef826.  v1:= temp;
  #L0ef828.  if v1 >= 0 then goto L0ef834;
  #L0ef82c.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0ef832.  v1:= temp;
  #L0ef834.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0ef83a.  v2:= temp;
  #L0ef83c.  v2:= v2 + v1 @kind int;
  #L0ef83e.  v2:= v2 + 10;
  #L0ef842.  v3:= new `java.lang.StringBuilder`;
  #L0ef846.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L0ef84c.  v2:= 0I;
  #L0ef84e.  call temp:= `substring`(v7, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L0ef854.  v1:= temp @kind object;
  #L0ef856.  v2:= "this as java.lang.String…ing(startIndex, endIndex)" @kind object;
  #L0ef85a.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ef860.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ef866.  v1:= " @" @kind object;
  #L0ef86a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ef870.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ef876.  v0:= 35I;
  #L0ef87a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ef880.  call temp:= `getId`(v8) @signature `Lkotlinx/coroutines/CoroutineId;.getId:()J` @kind virtual;
  #L0ef886.  v0:= temp @kind wide;
  #L0ef888.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L0ef88e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0ef894.  v0:= temp @kind object;
  #L0ef896.  v1:= "StringBuilder(capacity).…builderAction).toString()" @kind object;
  #L0ef89a.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L0ef8a0.  call `setName`(v9, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L0ef8a6.  return v7 @kind object;
}
