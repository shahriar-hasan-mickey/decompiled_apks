record `kotlinx.coroutines.CoroutineExceptionHandlerImplKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.List` `@@kotlinx.coroutines.CoroutineExceptionHandlerImplKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerImplKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0ef4c8.  v0:= constclass @type ^`kotlinx.coroutines.CoroutineExceptionHandler` @kind object;
  #L0ef4cc.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L0ef4d2.  v1:= temp @kind object;
  #L0ef4d4.  call temp:= `load`(v0, v1) @signature `Ljava/util/ServiceLoader;.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;` @kind static;
  #L0ef4da.  v0:= temp @kind object;
  #L0ef4dc.  call temp:= `iterator`(v0) @signature `Ljava/util/ServiceLoader;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L0ef4e2.  v0:= temp @kind object;
  #L0ef4e4.  call temp:= `asSequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.asSequence:(Ljava/util/Iterator;)Lkotlin/sequences/Sequence;` @kind static;
  #L0ef4ea.  v0:= temp @kind object;
  #L0ef4ec.  call temp:= `toList`(v0) @signature `Lkotlin/sequences/SequencesKt;.toList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @kind static;
  #L0ef4f2.  v0:= temp @kind object;
  #L0ef4f4.  `@@kotlinx.coroutines.CoroutineExceptionHandlerImplKt.a` @type ^`java.util.List` := v0 @kind object;
  #L0ef4f8.  return @kind void;
}
procedure `void` `handleCoroutineExceptionImpl`(`kotlin.coroutines.CoroutineContext` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerImplKt;.handleCoroutineExceptionImpl:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0ef50c.  v0:= `@@kotlinx.coroutines.CoroutineExceptionHandlerImplKt.a` @type ^`java.util.List` @kind object;
  #L0ef510.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0ef516.  v0:= temp @kind object;
  #L0ef518.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0ef51e.  v1:= temp;
  #L0ef520.  if v1 == 0 then goto L0ef55a;
  #L0ef524.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0ef52a.  v1:= temp @kind object;
  #L0ef52c.  v1:= (`kotlinx.coroutines.CoroutineExceptionHandler`) v1 @kind object;
  #L0ef530.  call `handleException`(v1, v4, v5) @signature `Lkotlinx/coroutines/CoroutineExceptionHandler;.handleException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind interface;
  #L0ef536.  goto L0ef518;
  #L0ef538.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0ef53a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L0ef540.  v2:= temp @kind object;
  #L0ef542.  call temp:= `getUncaughtExceptionHandler`(v2) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L0ef548.  v3:= temp @kind object;
  #L0ef54a.  call temp:= `handlerException`(v5, v1) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handlerException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L0ef550.  v1:= temp @kind object;
  #L0ef552.  call `uncaughtException`(v3, v2, v1) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L0ef558.  goto L0ef518;
  #L0ef55a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L0ef560.  v0:= temp @kind object;
  #L0ef562.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0ef566.  v1:= new `kotlinx.coroutines.l`;
  #L0ef56a.  call `<init>`(v1, v4) @signature `Lkotlinx/coroutines/l;.<init>:(Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L0ef570.  call `addSuppressed`(v5, v1) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L0ef576.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0ef57a.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0ef580.  goto L0ef596;
  #L0ef582.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0ef584.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L0ef588.  call temp:= `createFailure`(v4) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L0ef58e.  v4:= temp @kind object;
  #L0ef590.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L0ef596.  call temp:= `getUncaughtExceptionHandler`(v0) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L0ef59c.  v4:= temp @kind object;
  #L0ef59e.  call `uncaughtException`(v4, v0, v5) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L0ef5a4.  return @kind void;
  catch `java.lang.Throwable` @[L0ef530..L0ef536] goto L0ef538;
  catch `java.lang.Throwable` @[L0ef562..L0ef580] goto L0ef582;
}
