record `kotlinx.coroutines.Job$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `cancel`(`kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel:(Lkotlinx/coroutines/Job;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L0f327c.  v0:= 0I;
  #L0f327e.  call `cancel`(v1, v0) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L0f3284.  return @kind void;
}
procedure `void` `cancel$default`(`kotlinx.coroutines.Job` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel$default:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f3244.  if v3 != 0 then goto L0f325a;
  #L0f3248.  v2:= v2 ^& 1;
  #L0f324c.  if v2 == 0 then goto L0f3252;
  #L0f3250.  v1:= 0I;
  #L0f3252.  call `cancel`(v0, v1) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L0f3258.  return @kind void;
  #L0f325a.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0f325e.  v1:= "Super calls with default arguments not supported in this target, function: cancel" @kind object;
  #L0f3262.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f3268.  throw v0;
}
procedure `boolean` `cancel$default`(`kotlinx.coroutines.Job` v0 @kind object, `java.lang.Throwable` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel$default:(Lkotlinx/coroutines/Job;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f3144.  if v3 != 0 then goto L0f315c;
  #L0f3148.  v2:= v2 ^& 1;
  #L0f314c.  if v2 == 0 then goto L0f3152;
  #L0f3150.  v1:= 0I;
  #L0f3152.  call temp:= `cancel`(v0, v1) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/lang/Throwable;)Z` @kind interface;
  #L0f3158.  v0:= temp;
  #L0f315a.  return v0;
  #L0f315c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0f3160.  v1:= "Super calls with default arguments not supported in this target, function: cancel" @kind object;
  #L0f3164.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f316a.  throw v0;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.Job` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.fold:(Lkotlinx/coroutines/Job;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0f317c.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.fold:(Lkotlin/coroutines/CoroutineContext$Element;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L0f3182.  v0:= temp @kind object;
  #L0f3184.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.Job` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.get:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0f31d0.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.get:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L0f31d6.  v0:= temp @kind object;
  #L0f31d8.  return v0 @kind object;
}
procedure `kotlinx.coroutines.DisposableHandle` `invokeOnCompletion$default`(`kotlinx.coroutines.Job` v0 @kind object, `boolean` v1 , `boolean` v2 , `kotlin.jvm.functions.Function1` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.invokeOnCompletion$default:(Lkotlinx/coroutines/Job;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L0f31ec.  if v5 != 0 then goto L0f320e;
  #L0f31f0.  v5:= v4 ^& 1;
  #L0f31f4.  if v5 == 0 then goto L0f31fa;
  #L0f31f8.  v1:= 0I;
  #L0f31fa.  v4:= v4 ^& 2;
  #L0f31fe.  if v4 == 0 then goto L0f3204;
  #L0f3202.  v2:= 1I;
  #L0f3204.  call temp:= `invokeOnCompletion`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/Job;.invokeOnCompletion:(ZZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind interface;
  #L0f320a.  v0:= temp @kind object;
  #L0f320c.  return v0 @kind object;
  #L0f320e.  v0:= new `java.lang.UnsupportedOperationException`;
  #L0f3212.  v1:= "Super calls with default arguments not supported in this target, function: invokeOnCompletion" @kind object;
  #L0f3216.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f321c.  throw v0;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.Job` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.minusKey:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0f3198.  call temp:= `minusKey`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.minusKey:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0f319e.  v0:= temp @kind object;
  #L0f31a0.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlinx.coroutines.Job` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.plus:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0f31b4.  call temp:= `plus`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.plus:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L0f31ba.  v0:= temp @kind object;
  #L0f31bc.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `plus`(`kotlinx.coroutines.Job` v0 @kind object, `kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.plus:(Lkotlinx/coroutines/Job;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L0f3230.  return v1 @kind object;
}
