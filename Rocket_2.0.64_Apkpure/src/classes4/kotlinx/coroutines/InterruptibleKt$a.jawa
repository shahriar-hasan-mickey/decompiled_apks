record `kotlinx.coroutines.InterruptibleKt$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.InterruptibleKt$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.InterruptibleKt$a.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlin.jvm.functions.Function0` `kotlinx.coroutines.InterruptibleKt$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.InterruptibleKt$a` v0 @kind this, `kotlin.jvm.functions.Function0` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0f2e8c.  v0.`kotlinx.coroutines.InterruptibleKt$a.c` @type ^`kotlin.jvm.functions.Function0` := v1 @kind object;
  #L0f2e90.  v1:= 2I;
  #L0f2e92.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L0f2e98.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.InterruptibleKt$a` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f2e68.  v0:= new `kotlinx.coroutines.InterruptibleKt$a`;
  #L0f2e6c.  v1:= v2.`kotlinx.coroutines.InterruptibleKt$a.c` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L0f2e70.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L0f2e76.  v0.`kotlinx.coroutines.InterruptibleKt$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L0f2e7a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.InterruptibleKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0f2dc4.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L0f2dc8.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L0f2dcc.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L0f2dd2.  v1:= temp @kind object;
  #L0f2dd4.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.InterruptibleKt$a` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L0f2de8.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L0f2dee.  v1:= temp @kind object;
  #L0f2df0.  v1:= (`kotlinx.coroutines.InterruptibleKt$a`) v1 @kind object;
  #L0f2df4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L0f2df8.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0f2dfe.  v1:= temp @kind object;
  #L0f2e00.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.InterruptibleKt$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L0f2e14.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L0f2e1a.  v0:= v1.`kotlinx.coroutines.InterruptibleKt$a.a` @type ^`int`;
  #L0f2e1e.  if v0 != 0 then goto L0f2e46;
  #L0f2e22.  call `throwOnFailure`(v2) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L0f2e28.  v2:= v1.`kotlinx.coroutines.InterruptibleKt$a.b` @type ^`java.lang.Object` @kind object;
  #L0f2e2c.  v2:= (`kotlinx.coroutines.CoroutineScope`) v2 @kind object;
  #L0f2e30.  call temp:= `getCoroutineContext`(v2) @signature `Lkotlinx/coroutines/CoroutineScope;.getCoroutineContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L0f2e36.  v2:= temp @kind object;
  #L0f2e38.  v0:= v1.`kotlinx.coroutines.InterruptibleKt$a.c` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L0f2e3c.  call temp:= `access$runInterruptibleInExpectedContext`(v2, v0) @signature `Lkotlinx/coroutines/InterruptibleKt;.access$runInterruptibleInExpectedContext:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @kind static;
  #L0f2e42.  v2:= temp @kind object;
  #L0f2e44.  return v2 @kind object;
  #L0f2e46.  v2:= new `java.lang.IllegalStateException`;
  #L0f2e4a.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L0f2e4e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f2e54.  throw v2;
}
