record `kotlinx.coroutines.EventLoopImplBase$DelayedTask` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface, `java.lang.Comparable` @kind interface, `kotlinx.coroutines.DisposableHandle` @kind interface, `kotlinx.coroutines.internal.ThreadSafeHeapNode` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.EventLoopImplBase$DelayedTask.b` @AccessFlag PRIVATE;
  `long` `kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v0 @kind this, `long` v1 ) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0f1b00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0f1b06.  v0.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` := v1 @kind wide;
  #L0f1b0a.  v1:= -1I;
  #L0f1b0c.  v0.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.b` @type ^`int` := v1;
  #L0f1b10.  return @kind void;
}
procedure `int` `compareTo`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L0f1934.  v1:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTask`) v1 @kind object;
  #L0f1938.  call temp:= `compareTo`(v0, v1) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.compareTo:(Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;)I` @kind virtual;
  #L0f193e.  v1:= temp;
  #L0f1940.  return v1;
}
procedure `int` `compareTo`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v4 @kind this, `kotlinx.coroutines.EventLoopImplBase$DelayedTask` v5 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.compareTo:(Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0f1954.  v0:= v4.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L0f1958.  v2:= v5.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L0f195c.  v0:= v0 - v2 @kind long;
  #L0f195e.  v2:= 0L;
  #L0f1962.  v5:= lcmp(v0, v2);
  #L0f1966.  if v5 <= 0 then goto L0f196e;
  #L0f196a.  v5:= 1I;
  #L0f196c.  goto L0f1978;
  #L0f196e.  if v5 >= 0 then goto L0f1976;
  #L0f1972.  v5:= -1I;
  #L0f1974.  goto L0f1978;
  #L0f1976.  v5:= 0I;
  #L0f1978.  return v5;
}
procedure `void` `dispose`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v2 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L0f1b24.  @monitorenter v2
  #L0f1b26.  v0:= v2.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` @kind object;
  #L0f1b2a.  call temp:= `access$getDISPOSED_TASK$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getDISPOSED_TASK$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f1b30.  v1:= temp @kind object;
  #L0f1b32.  if v0 != v1 then goto L0f1b3a;
  #L0f1b36.  @monitorexit v2
  #L0f1b38.  return @kind void;
  #L0f1b3a.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue` @kind boolean;
  #L0f1b3e.  if v1 == 0 then goto L0f1b48;
  #L0f1b42.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue`) v0 @kind object;
  #L0f1b46.  goto L0f1b4a;
  #L0f1b48.  v0:= 0I;
  #L0f1b4a.  if v0 != 0 then goto L0f1b50;
  #L0f1b4e.  goto L0f1b56;
  #L0f1b50.  call temp:= `remove`(v0, v2) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.remove:(Lkotlinx/coroutines/internal/ThreadSafeHeapNode;)Z` @kind virtual;
  #L0f1b56.  call temp:= `access$getDISPOSED_TASK$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getDISPOSED_TASK$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f1b5c.  v0:= temp @kind object;
  #L0f1b5e.  v2.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` := v0 @kind object;
  #L0f1b62.  @monitorexit v2
  #L0f1b64.  return @kind void;
  #L0f1b66.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f1b68.  @monitorexit v2
  #L0f1b6a.  throw v0;
  catch `java.lang.Throwable` @[L0f1b26..L0f1b32] goto L0f1b66;
  catch `java.lang.Throwable` @[L0f1b3a..L0f1b62] goto L0f1b66;
}
procedure `kotlinx.coroutines.internal.ThreadSafeHeap` `getHeap`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v2 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.getHeap:()Lkotlinx/coroutines/internal/ThreadSafeHeap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f1ad8.  v0:= v2.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` @kind object;
  #L0f1adc.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.ThreadSafeHeap` @kind boolean;
  #L0f1ae0.  if v1 == 0 then goto L0f1aea;
  #L0f1ae4.  v0:= (`kotlinx.coroutines.internal.ThreadSafeHeap`) v0 @kind object;
  #L0f1ae8.  goto L0f1aec;
  #L0f1aea.  v0:= 0I;
  #L0f1aec.  return v0 @kind object;
}
procedure `int` `getIndex`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v1 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0f198c.  v0:= v1.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.b` @type ^`int`;
  #L0f1990.  return v0;
}
procedure `int` `scheduleTask`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v7 @kind this, `long` v8 , `kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue` v10 @kind object, `kotlinx.coroutines.EventLoopImplBase` v11 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.scheduleTask:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTaskQueue;Lkotlinx/coroutines/EventLoopImplBase;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0f19a4.  @monitorenter v7
  #L0f19a6.  v0:= v7.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` @kind object;
  #L0f19aa.  call temp:= `access$getDISPOSED_TASK$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getDISPOSED_TASK$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f19b0.  v1:= temp @kind object;
  #L0f19b2.  if v0 != v1 then goto L0f19bc;
  #L0f19b6.  v8:= 2I;
  #L0f19b8.  @monitorexit v7
  #L0f19ba.  return v8;
  #L0f19bc.  @monitorenter v10
  #L0f19be.  call temp:= `firstImpl`(v10) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.firstImpl:()Lkotlinx/coroutines/internal/ThreadSafeHeapNode;` @kind virtual;
  #L0f19c4.  v0:= temp @kind object;
  #L0f19c6.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTask`) v0 @kind object;
  #L0f19ca.  call temp:= `access$isCompleted`(v11) @signature `Lkotlinx/coroutines/EventLoopImplBase;.access$isCompleted:(Lkotlinx/coroutines/EventLoopImplBase;)Z` @kind static;
  #L0f19d0.  v11:= temp;
  #L0f19d2.  if v11 == 0 then goto L0f19de;
  #L0f19d6.  v8:= 1I;
  #L0f19d8.  @monitorexit v10
  #L0f19da.  @monitorexit v7
  #L0f19dc.  return v8;
  #L0f19de.  v1:= 0L;
  #L0f19e2.  if v0 != 0 then goto L0f19ec;
  #L0f19e6.  v10.`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue.timeNow` @type ^`long` := v8 @kind wide;
  #L0f19ea.  goto L0f1a14;
  #L0f19ec.  v3:= v0.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L0f19f0.  v5:= v3 - v8 @kind long;
  #L0f19f4.  v11:= lcmp(v5, v1);
  #L0f19f8.  if v11 < 0 then goto L0f19fe;
  #L0f19fc.  goto L0f1a00;
  #L0f19fe.  v8:= v3 @kind wide;
  #L0f1a00.  v3:= v10.`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue.timeNow` @type ^`long` @kind wide;
  #L0f1a04.  v3:= v8 - v3 @kind long;
  #L0f1a08.  v11:= lcmp(v3, v1);
  #L0f1a0c.  if v11 <= 0 then goto L0f1a14;
  #L0f1a10.  v10.`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue.timeNow` @type ^`long` := v8 @kind wide;
  #L0f1a14.  v8:= v7.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L0f1a18.  v3:= v10.`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue.timeNow` @type ^`long` @kind wide;
  #L0f1a1c.  v8:= v8 - v3 @kind long;
  #L0f1a1e.  v11:= lcmp(v8, v1);
  #L0f1a22.  if v11 >= 0 then goto L0f1a2a;
  #L0f1a26.  v7.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` := v3 @kind wide;
  #L0f1a2a.  call `addImpl`(v10, v7) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.addImpl:(Lkotlinx/coroutines/internal/ThreadSafeHeapNode;)V` @kind virtual;
  #L0f1a30.  @monitorexit v10
  #L0f1a32.  v8:= 0I;
  #L0f1a34.  @monitorexit v7
  #L0f1a36.  return v8;
  #L0f1a38.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f1a3a.  @monitorexit v10
  #L0f1a3c.  throw v8;
  #L0f1a3e.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0f1a40.  @monitorexit v7
  #L0f1a42.  throw v8;
  catch `java.lang.Throwable` @[L0f19a6..L0f19b2] goto L0f1a3e;
  catch `java.lang.Throwable` @[L0f19bc..L0f19be] goto L0f1a3e;
  catch `java.lang.Throwable` @[L0f19be..L0f19d2] goto L0f1a38;
  catch `java.lang.Throwable` @[L0f19d8..L0f19da] goto L0f1a3e;
  catch `java.lang.Throwable` @[L0f19e6..L0f1a30] goto L0f1a38;
  catch `java.lang.Throwable` @[L0f1a30..L0f1a32] goto L0f1a3e;
  catch `java.lang.Throwable` @[L0f1a3a..L0f1a3e] goto L0f1a3e;
}
procedure `void` `setHeap`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v2 @kind this, `kotlinx.coroutines.internal.ThreadSafeHeap` v3 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.setHeap:(Lkotlinx/coroutines/internal/ThreadSafeHeap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0f1b90.  v0:= v2.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` @kind object;
  #L0f1b94.  call temp:= `access$getDISPOSED_TASK$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getDISPOSED_TASK$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L0f1b9a.  v1:= temp @kind object;
  #L0f1b9c.  if v0 == v1 then goto L0f1ba4;
  #L0f1ba0.  v0:= 1I;
  #L0f1ba2.  goto L0f1ba6;
  #L0f1ba4.  v0:= 0I;
  #L0f1ba6.  if v0 == 0 then goto L0f1bb0;
  #L0f1baa.  v2.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` := v3 @kind object;
  #L0f1bae.  return @kind void;
  #L0f1bb0.  v3:= new `java.lang.IllegalArgumentException`;
  #L0f1bb4.  v0:= "Failed requirement." @kind object;
  #L0f1bb8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f1bbe.  v0:= temp @kind object;
  #L0f1bc0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0f1bc6.  throw v3;
}
procedure `void` `setIndex`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v0 @kind this, `int` v1 ) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.setIndex:(I)V` @AccessFlag PUBLIC {
    temp;

  #L0f1bd8.  v0.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.b` @type ^`int` := v1;
  #L0f1bdc.  return @kind void;
}
procedure `boolean` `timeToExecute`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v3 @kind this, `long` v4 ) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.timeToExecute:(J)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L0f1908.  v0:= v3.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L0f190c.  v4:= v4 - v0 @kind long;
  #L0f190e.  v0:= 0L;
  #L0f1912.  v2:= lcmp(v4, v0);
  #L0f1916.  if v2 < 0 then goto L0f191e;
  #L0f191a.  v4:= 1I;
  #L0f191c.  goto L0f1920;
  #L0f191e.  v4:= 0I;
  #L0f1920.  return v4;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v3 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0f1a94.  v0:= new `java.lang.StringBuilder`;
  #L0f1a98.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0f1a9e.  v1:= "Delayed[nanos=" @kind object;
  #L0f1aa2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f1aa8.  v1:= v3.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L0f1aac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f1ab2.  v1:= 93I;
  #L0f1ab6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0f1abc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0f1ac2.  v0:= temp @kind object;
  #L0f1ac4.  return v0 @kind object;
}
