record `okhttp3.Response` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.CacheControl` `okhttp3.Response.a` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.Response.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Response.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Response.d` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.Response.e` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Response.f` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Response.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.ResponseBody` `okhttp3.Response.h` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.Response.i` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.Response.j` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.Response.k` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Response.l` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Response.m` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.Exchange` `okhttp3.Response.n` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Response` v6 @kind this, `okhttp3.Request` v7 @kind object, `okhttp3.Protocol` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 , `okhttp3.Handshake` v11 @kind object, `okhttp3.Headers` v12 @kind object, `okhttp3.ResponseBody` v13 @kind object, `okhttp3.Response` v14 @kind object, `okhttp3.Response` v15 @kind object, `okhttp3.Response` v16 @kind object, `long` v17 , `long` v19 , `okhttp3.internal.connection.Exchange` v21 @kind object) @signature `Lokhttp3/Response;.<init>:(Lokhttp3/Request;Lokhttp3/Protocol;Ljava/lang/String;ILokhttp3/Handshake;Lokhttp3/Headers;Lokhttp3/ResponseBody;Lokhttp3/Response;Lokhttp3/Response;Lokhttp3/Response;JJLokhttp3/internal/connection/Exchange;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L13d6c0.  v0:= v6 @kind object;
  #L13d6c2.  v1:= v7 @kind object;
  #L13d6c4.  v2:= v8 @kind object;
  #L13d6c6.  v3:= v9 @kind object;
  #L13d6c8.  v4:= v12 @kind object;
  #L13d6ca.  v5:= "request" @kind object;
  #L13d6ce.  call `checkNotNullParameter`(v7, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13d6d4.  v5:= "protocol" @kind object;
  #L13d6d8.  call `checkNotNullParameter`(v8, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13d6de.  v5:= "message" @kind object;
  #L13d6e2.  call `checkNotNullParameter`(v9, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13d6e8.  v5:= "headers" @kind object;
  #L13d6ec.  call `checkNotNullParameter`(v12, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13d6f2.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13d6f8.  v0.`okhttp3.Response.b` @type ^`okhttp3.Request` := v1 @kind object;
  #L13d6fc.  v0.`okhttp3.Response.c` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L13d700.  v0.`okhttp3.Response.d` @type ^`java.lang.String` := v3 @kind object;
  #L13d704.  v1:= v10;
  #L13d706.  v0.`okhttp3.Response.e` @type ^`int` := v1;
  #L13d70a.  v1:= v11 @kind object;
  #L13d70c.  v0.`okhttp3.Response.f` @type ^`okhttp3.Handshake` := v1 @kind object;
  #L13d710.  v0.`okhttp3.Response.g` @type ^`okhttp3.Headers` := v4 @kind object;
  #L13d714.  v1:= v13 @kind object;
  #L13d716.  v0.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` := v1 @kind object;
  #L13d71a.  v1:= v14 @kind object;
  #L13d71c.  v0.`okhttp3.Response.i` @type ^`okhttp3.Response` := v1 @kind object;
  #L13d720.  v1:= v15 @kind object;
  #L13d722.  v0.`okhttp3.Response.j` @type ^`okhttp3.Response` := v1 @kind object;
  #L13d726.  v1:= v16 @kind object;
  #L13d72a.  v0.`okhttp3.Response.k` @type ^`okhttp3.Response` := v1 @kind object;
  #L13d72e.  v1:= v17 @kind wide;
  #L13d732.  v0.`okhttp3.Response.l` @type ^`long` := v1 @kind wide;
  #L13d736.  v1:= v19 @kind wide;
  #L13d73a.  v0.`okhttp3.Response.m` @type ^`long` := v1 @kind wide;
  #L13d73e.  v1:= v21 @kind object;
  #L13d742.  v0.`okhttp3.Response.n` @type ^`okhttp3.internal.connection.Exchange` := v1 @kind object;
  #L13d746.  return @kind void;
}
procedure `java.lang.String` `header$default`(`okhttp3.Response` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13d224.  v3:= v3 ^& 2;
  #L13d228.  if v3 == 0 then goto L13d22e;
  #L13d22c.  v2:= 0I;
  #L13d22e.  call temp:= `header`(v0, v1, v2) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L13d234.  v0:= temp @kind object;
  #L13d236.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `-deprecated_body`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_body:()Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d5fc.  v0:= v1.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` @kind object;
  #L13d600.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `-deprecated_cacheControl`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d408.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L13d40e.  v0:= temp @kind object;
  #L13d410.  return v0 @kind object;
}
procedure `okhttp3.Response` `-deprecated_cacheResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_cacheResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d550.  v0:= v1.`okhttp3.Response.j` @type ^`okhttp3.Response` @kind object;
  #L13d554.  return v0 @kind object;
}
procedure `int` `-deprecated_code`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_code:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d1dc.  v0:= v1.`okhttp3.Response.e` @type ^`int`;
  #L13d1e0.  return v0;
}
procedure `okhttp3.Handshake` `-deprecated_handshake`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d454.  v0:= v1.`okhttp3.Response.f` @type ^`okhttp3.Handshake` @kind object;
  #L13d458.  return v0 @kind object;
}
procedure `okhttp3.Headers` `-deprecated_headers`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d484.  v0:= v1.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L13d488.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_message`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_message:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d20c.  v0:= v1.`okhttp3.Response.d` @type ^`java.lang.String` @kind object;
  #L13d210.  return v0 @kind object;
}
procedure `okhttp3.Response` `-deprecated_networkResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_networkResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d568.  v0:= v1.`okhttp3.Response.i` @type ^`okhttp3.Response` @kind object;
  #L13d56c.  return v0 @kind object;
}
procedure `okhttp3.Response` `-deprecated_priorResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_priorResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d580.  v0:= v1.`okhttp3.Response.k` @type ^`okhttp3.Response` @kind object;
  #L13d584.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `-deprecated_protocol`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d4f0.  v0:= v1.`okhttp3.Response.c` @type ^`okhttp3.Protocol` @kind object;
  #L13d4f4.  return v0 @kind object;
}
procedure `long` `-deprecated_receivedResponseAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.-deprecated_receivedResponseAtMillis:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d3a8.  v0:= v2.`okhttp3.Response.m` @type ^`long` @kind wide;
  #L13d3ac.  return v0 @kind wide;
}
procedure `okhttp3.Request` `-deprecated_request`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_request:()Lokhttp3/Request;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d520.  v0:= v1.`okhttp3.Response.b` @type ^`okhttp3.Request` @kind object;
  #L13d524.  return v0 @kind object;
}
procedure `long` `-deprecated_sentRequestAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.-deprecated_sentRequestAtMillis:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d3c0.  v0:= v2.`okhttp3.Response.l` @type ^`long` @kind wide;
  #L13d3c4.  return v0 @kind wide;
}
procedure `okhttp3.ResponseBody` `body`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d614.  v0:= v1.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` @kind object;
  #L13d618.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d424.  v0:= v2.`okhttp3.Response.a` @type ^`okhttp3.CacheControl` @kind object;
  #L13d428.  if v0 != 0 then goto L13d440;
  #L13d42c.  v0:= `@@okhttp3.CacheControl.Companion` @type ^`okhttp3.CacheControl$Companion` @kind object;
  #L13d430.  v1:= v2.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L13d434.  call temp:= `parse`(v0, v1) @signature `Lokhttp3/CacheControl$Companion;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind virtual;
  #L13d43a.  v0:= temp @kind object;
  #L13d43c.  v2.`okhttp3.Response.a` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L13d440.  return v0 @kind object;
}
procedure `okhttp3.Response` `cacheResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.cacheResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d598.  v0:= v1.`okhttp3.Response.j` @type ^`okhttp3.Response` @kind object;
  #L13d59c.  return v0 @kind object;
}
procedure `java.util.List` `challenges`(`okhttp3.Response` v3 @kind this) @signature `Lokhttp3/Response;.challenges:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13d338.  v0:= v3.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L13d33c.  v1:= v3.`okhttp3.Response.e` @type ^`int`;
  #L13d340.  v2:= 401I;
  #L13d344.  if v1 == v2 then goto L13d360;
  #L13d348.  v2:= 407I;
  #L13d34c.  if v1 == v2 then goto L13d35a;
  #L13d350.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L13d356.  v0:= temp @kind object;
  #L13d358.  return v0 @kind object;
  #L13d35a.  v1:= "Proxy-Authenticate" @kind object;
  #L13d35e.  goto L13d364;
  #L13d360.  v1:= "WWW-Authenticate" @kind object;
  #L13d364.  call temp:= `parseChallenges`(v0, v1) @signature `Lokhttp3/internal/http/HttpHeaders;.parseChallenges:(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L13d36a.  v0:= temp @kind object;
  #L13d36c.  return v0 @kind object;
}
procedure `void` `close`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13d758.  v0:= v2.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` @kind object;
  #L13d75c.  if v0 == 0 then goto L13d768;
  #L13d760.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L13d766.  return @kind void;
  #L13d768.  v0:= new `java.lang.IllegalStateException`;
  #L13d76c.  v1:= "response is not eligible for a body and must not be closed" @kind object;
  #L13d770.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13d776.  v1:= temp @kind object;
  #L13d778.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13d77e.  throw v0;
}
procedure `int` `code`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.code:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d1f4.  v0:= v1.`okhttp3.Response.e` @type ^`int`;
  #L13d1f8.  return v0;
}
procedure `okhttp3.internal.connection.Exchange` `exchange`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.exchange:()Lokhttp3/internal/connection/Exchange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d6a8.  v0:= v1.`okhttp3.Response.n` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L13d6ac.  return v0 @kind object;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d46c.  v0:= v1.`okhttp3.Response.f` @type ^`okhttp3.Handshake` @kind object;
  #L13d470.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d248.  v0:= 0I;
  #L13d24a.  v1:= 2I;
  #L13d24c.  call temp:= `header$default`(v2, v3, v0, v1, v0) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L13d252.  v3:= temp @kind object;
  #L13d254.  return v3 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d268.  v0:= "name" @kind object;
  #L13d26c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13d272.  v0:= v1.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L13d276.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L13d27c.  v2:= temp @kind object;
  #L13d27e.  if v2 == 0 then goto L13d284;
  #L13d282.  v3:= v2 @kind object;
  #L13d284.  return v3 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Response;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d380.  v0:= "name" @kind object;
  #L13d384.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13d38a.  v0:= v1.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L13d38e.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L13d394.  v2:= temp @kind object;
  #L13d396.  return v2 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d49c.  v0:= v1.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L13d4a0.  return v0 @kind object;
}
procedure `boolean` `isRedirect`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.isRedirect:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d160.  v0:= v2.`okhttp3.Response.e` @type ^`int`;
  #L13d164.  v1:= 307I;
  #L13d168.  if v0 == v1 then goto L13d17e;
  #L13d16c.  v1:= 308I;
  #L13d170.  if v0 == v1 then goto L13d17e;
  #L13d174.  goto L13d184;
  #L13d17a.  v0:= 0I;
  #L13d17c.  goto L13d180;
  #L13d17e.  v0:= 1I;
  #L13d180.  return v0;
  #L13d182.  
  #L13d184.  switch v0
                  | 300 => goto L13d17e
                  | 301 => goto L13d17e
                  | 302 => goto L13d17e
                  | 303 => goto L13d17e
                  | else => goto L13d17a;
}
procedure `boolean` `isSuccessful`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.isSuccessful:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d1ac.  v0:= v2.`okhttp3.Response.e` @type ^`int`;
  #L13d1b0.  v1:= 200I;
  #L13d1b4.  if v1 <= v0 then goto L13d1ba;
  #L13d1b8.  goto L13d1c6;
  #L13d1ba.  v1:= 299I;
  #L13d1be.  if v1 < v0 then goto L13d1c6;
  #L13d1c2.  v0:= 1I;
  #L13d1c4.  goto L13d1c8;
  #L13d1c6.  v0:= 0I;
  #L13d1c8.  return v0;
}
procedure `java.lang.String` `message`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d298.  v0:= v1.`okhttp3.Response.d` @type ^`java.lang.String` @kind object;
  #L13d29c.  return v0 @kind object;
}
procedure `okhttp3.Response` `networkResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d5b0.  v0:= v1.`okhttp3.Response.i` @type ^`okhttp3.Response` @kind object;
  #L13d5b4.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `newBuilder`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d5e0.  v0:= new `okhttp3.Response$Builder`;
  #L13d5e4.  call `<init>`(v0, v1) @signature `Lokhttp3/Response$Builder;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L13d5ea.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `peekBody`(`okhttp3.Response` v4 @kind this, `long` v5 ) @signature `Lokhttp3/Response;.peekBody:(J)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13d62c.  v0:= v4.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` @kind object;
  #L13d630.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L13d636.  call temp:= `source`(v0) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L13d63c.  v0:= temp @kind object;
  #L13d63e.  call temp:= `peek`(v0) @signature `Lokio/BufferedSource;.peek:()Lokio/BufferedSource;` @kind interface;
  #L13d644.  v0:= temp @kind object;
  #L13d646.  v1:= new `okio.Buffer`;
  #L13d64a.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L13d650.  call temp:= `request`(v0, v5) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L13d656.  call temp:= `getBuffer`(v0) @signature `Lokio/BufferedSource;.getBuffer:()Lokio/Buffer;` @kind interface;
  #L13d65c.  v2:= temp @kind object;
  #L13d65e.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L13d664.  v2:= temp @kind wide;
  #L13d666.  call temp:= `min`(v5, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L13d66c.  v5:= temp @kind wide;
  #L13d66e.  call temp:= `write`(v1, v0, v5) @signature `Lokio/Buffer;.write:(Lokio/Source;J)Lokio/Buffer;` @kind virtual;
  #L13d674.  v5:= `@@okhttp3.ResponseBody.Companion` @type ^`okhttp3.ResponseBody$Companion` @kind object;
  #L13d678.  v6:= v4.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` @kind object;
  #L13d67c.  call temp:= `contentType`(v6) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L13d682.  v6:= temp @kind object;
  #L13d684.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L13d68a.  v2:= temp @kind wide;
  #L13d68c.  call temp:= `create`(v5, v1, v6, v2) @signature `Lokhttp3/ResponseBody$Companion;.create:(Lokio/BufferedSource;Lokhttp3/MediaType;J)Lokhttp3/ResponseBody;` @kind virtual;
  #L13d692.  v5:= temp @kind object;
  #L13d694.  return v5 @kind object;
}
procedure `okhttp3.Response` `priorResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d5c8.  v0:= v1.`okhttp3.Response.k` @type ^`okhttp3.Response` @kind object;
  #L13d5cc.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d508.  v0:= v1.`okhttp3.Response.c` @type ^`okhttp3.Protocol` @kind object;
  #L13d50c.  return v0 @kind object;
}
procedure `long` `receivedResponseAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d3d8.  v0:= v2.`okhttp3.Response.m` @type ^`long` @kind wide;
  #L13d3dc.  return v0 @kind wide;
}
procedure `okhttp3.Request` `request`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d538.  v0:= v1.`okhttp3.Response.b` @type ^`okhttp3.Request` @kind object;
  #L13d53c.  return v0 @kind object;
}
procedure `long` `sentRequestAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d3f0.  v0:= v2.`okhttp3.Response.l` @type ^`long` @kind wide;
  #L13d3f4.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13d2b0.  v0:= new `java.lang.StringBuilder`;
  #L13d2b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13d2ba.  v1:= "Response{protocol=" @kind object;
  #L13d2be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d2c4.  v1:= v2.`okhttp3.Response.c` @type ^`okhttp3.Protocol` @kind object;
  #L13d2c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d2ce.  v1:= ", code=" @kind object;
  #L13d2d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d2d8.  v1:= v2.`okhttp3.Response.e` @type ^`int`;
  #L13d2dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d2e2.  v1:= ", message=" @kind object;
  #L13d2e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d2ec.  v1:= v2.`okhttp3.Response.d` @type ^`java.lang.String` @kind object;
  #L13d2f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d2f6.  v1:= ", url=" @kind object;
  #L13d2fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d300.  v1:= v2.`okhttp3.Response.b` @type ^`okhttp3.Request` @kind object;
  #L13d304.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L13d30a.  v1:= temp @kind object;
  #L13d30c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d312.  v1:= 125I;
  #L13d316.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d31c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13d322.  v0:= temp @kind object;
  #L13d324.  return v0 @kind object;
}
procedure `okhttp3.Headers` `trailers`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.trailers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d4b4.  v0:= v2.`okhttp3.Response.n` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L13d4b8.  if v0 == 0 then goto L13d4c6;
  #L13d4bc.  call temp:= `trailers`(v0) @signature `Lokhttp3/internal/connection/Exchange;.trailers:()Lokhttp3/Headers;` @kind virtual;
  #L13d4c2.  v0:= temp @kind object;
  #L13d4c4.  return v0 @kind object;
  #L13d4c6.  v0:= new `java.lang.IllegalStateException`;
  #L13d4ca.  v1:= "trailers not available" @kind object;
  #L13d4ce.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13d4d4.  v1:= temp @kind object;
  #L13d4d6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13d4dc.  throw v0;
}
