record `okhttp3.ConnectionPool` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.internal.connection.RealConnectionPool` `okhttp3.ConnectionPool.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.ConnectionPool` v4 @kind this) @signature `Lokhttp3/ConnectionPool;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12fac0.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L12fac4.  v1:= 5I;
  #L12fac6.  v2:= 5L;
  #L12faca.  call `<init>`(v4, v1, v2, v0) @signature `Lokhttp3/ConnectionPool;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L12fad0.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.ConnectionPool` v7 @kind this, `int` v8 , `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object) @signature `Lokhttp3/ConnectionPool;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L12fae4.  v0:= "timeUnit" @kind object;
  #L12fae8.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12faee.  v0:= new `okhttp3.internal.connection.RealConnectionPool`;
  #L12faf2.  v2:= `@@okhttp3.internal.concurrent.TaskRunner.INSTANCE` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L12faf6.  v1:= v0 @kind object;
  #L12faf8.  v3:= v8;
  #L12fafa.  v4:= v9 @kind wide;
  #L12fafc.  v6:= v11 @kind object;
  #L12fafe.  call `<init>`(v1, v2, v3, v4, v6) @signature `Lokhttp3/internal/connection/RealConnectionPool;.<init>:(Lokhttp3/internal/concurrent/TaskRunner;IJLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L12fb04.  call `<init>`(v7, v0) @signature `Lokhttp3/ConnectionPool;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;)V` @kind direct;
  #L12fb0a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.ConnectionPool` v1 @kind this, `okhttp3.internal.connection.RealConnectionPool` v2 @kind object) @signature `Lokhttp3/ConnectionPool;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12fb1c.  v0:= "delegate" @kind object;
  #L12fb20.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12fb26.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12fb2c.  v1.`okhttp3.ConnectionPool.a` @type ^`okhttp3.internal.connection.RealConnectionPool` := v2 @kind object;
  #L12fb30.  return @kind void;
}
procedure `int` `connectionCount`(`okhttp3.ConnectionPool` v1 @kind this) @signature `Lokhttp3/ConnectionPool;.connectionCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12fa68.  v0:= v1.`okhttp3.ConnectionPool.a` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L12fa6c.  call temp:= `connectionCount`(v0) @signature `Lokhttp3/internal/connection/RealConnectionPool;.connectionCount:()I` @kind virtual;
  #L12fa72.  v0:= temp;
  #L12fa74.  return v0;
}
procedure `void` `evictAll`(`okhttp3.ConnectionPool` v1 @kind this) @signature `Lokhttp3/ConnectionPool;.evictAll:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12fb44.  v0:= v1.`okhttp3.ConnectionPool.a` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L12fb48.  call `evictAll`(v0) @signature `Lokhttp3/internal/connection/RealConnectionPool;.evictAll:()V` @kind virtual;
  #L12fb4e.  return @kind void;
}
procedure `okhttp3.internal.connection.RealConnectionPool` `getDelegate$okhttp`(`okhttp3.ConnectionPool` v1 @kind this) @signature `Lokhttp3/ConnectionPool;.getDelegate$okhttp:()Lokhttp3/internal/connection/RealConnectionPool;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12faa8.  v0:= v1.`okhttp3.ConnectionPool.a` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L12faac.  return v0 @kind object;
}
procedure `int` `idleConnectionCount`(`okhttp3.ConnectionPool` v1 @kind this) @signature `Lokhttp3/ConnectionPool;.idleConnectionCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12fa88.  v0:= v1.`okhttp3.ConnectionPool.a` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L12fa8c.  call temp:= `idleConnectionCount`(v0) @signature `Lokhttp3/internal/connection/RealConnectionPool;.idleConnectionCount:()I` @kind virtual;
  #L12fa92.  v0:= temp;
  #L12fa94.  return v0;
}
