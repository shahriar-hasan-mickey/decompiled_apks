record `okhttp3.Cache$RealCacheRequest$1` @kind class @AccessFlag PUBLIC_FINAL extends `okio.ForwardingSink` @kind class {
  `okhttp3.Cache$RealCacheRequest` `okhttp3.Cache$RealCacheRequest$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$RealCacheRequest$1` v0 @kind this, `okhttp3.Cache$RealCacheRequest` v1 @kind object, `okio.Sink` v2 @kind object) @signature `Lokhttp3/Cache$RealCacheRequest$1;.<init>:(Lokhttp3/Cache$RealCacheRequest;Lokio/Sink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L12c844.  v0.`okhttp3.Cache$RealCacheRequest$1.b` @type ^`okhttp3.Cache$RealCacheRequest` := v1 @kind object;
  #L12c848.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L12c84e.  return @kind void;
}
procedure `void` `close`(`okhttp3.Cache$RealCacheRequest$1` v4 @kind this) @signature `Lokhttp3/Cache$RealCacheRequest$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12c860.  v0:= v4.`okhttp3.Cache$RealCacheRequest$1.b` @type ^`okhttp3.Cache$RealCacheRequest` @kind object;
  #L12c864.  v0:= v0.`okhttp3.Cache$RealCacheRequest.e` @type ^`okhttp3.Cache` @kind object;
  #L12c868.  @monitorenter v0
  #L12c86a.  v1:= v4.`okhttp3.Cache$RealCacheRequest$1.b` @type ^`okhttp3.Cache$RealCacheRequest` @kind object;
  #L12c86e.  call temp:= `b`(v1) @signature `Lokhttp3/Cache$RealCacheRequest;.b:()Z` @kind virtual;
  #L12c874.  v1:= temp;
  #L12c876.  if v1 == 0 then goto L12c87e;
  #L12c87a.  @monitorexit v0
  #L12c87c.  return @kind void;
  #L12c87e.  v1:= v4.`okhttp3.Cache$RealCacheRequest$1.b` @type ^`okhttp3.Cache$RealCacheRequest` @kind object;
  #L12c882.  v2:= 1I;
  #L12c884.  call `c`(v1, v2) @signature `Lokhttp3/Cache$RealCacheRequest;.c:(Z)V` @kind virtual;
  #L12c88a.  v1:= v4.`okhttp3.Cache$RealCacheRequest$1.b` @type ^`okhttp3.Cache$RealCacheRequest` @kind object;
  #L12c88e.  v1:= v1.`okhttp3.Cache$RealCacheRequest.e` @type ^`okhttp3.Cache` @kind object;
  #L12c892.  call temp:= `getWriteSuccessCount$okhttp`(v1) @signature `Lokhttp3/Cache;.getWriteSuccessCount$okhttp:()I` @kind virtual;
  #L12c898.  v3:= temp;
  #L12c89a.  v3:= v3 + v2 @kind int;
  #L12c89c.  call `setWriteSuccessCount$okhttp`(v1, v3) @signature `Lokhttp3/Cache;.setWriteSuccessCount$okhttp:(I)V` @kind virtual;
  #L12c8a2.  @monitorexit v0
  #L12c8a4.  call `close`(v4) @signature `Lokio/ForwardingSink;.close:()V` @kind super;
  #L12c8aa.  v0:= v4.`okhttp3.Cache$RealCacheRequest$1.b` @type ^`okhttp3.Cache$RealCacheRequest` @kind object;
  #L12c8ae.  call temp:= `a`(v0) @signature `Lokhttp3/Cache$RealCacheRequest;.a:(Lokhttp3/Cache$RealCacheRequest;)Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind static;
  #L12c8b4.  v0:= temp @kind object;
  #L12c8b6.  call `commit`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #L12c8bc.  return @kind void;
  #L12c8be.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12c8c0.  @monitorexit v0
  #L12c8c2.  throw v1;
  catch `java.lang.Throwable` @[L12c86a..L12c876] goto L12c8be;
  catch `java.lang.Throwable` @[L12c87e..L12c8a2] goto L12c8be;
}
