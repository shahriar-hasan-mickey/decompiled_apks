record `okhttp3.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.CacheControl` `okhttp3.Request.a` @AccessFlag PRIVATE;
  `okhttp3.HttpUrl` `okhttp3.Request.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Request.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Request.d` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RequestBody` `okhttp3.Request.e` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `okhttp3.Request.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Request` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object, `okhttp3.Headers` v4 @kind object, `okhttp3.RequestBody` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/RequestBody;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L13c0f0.  v0:= "url" @kind object;
  #L13c0f4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13c0fa.  v0:= "method" @kind object;
  #L13c0fe.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13c104.  v0:= "headers" @kind object;
  #L13c108.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13c10e.  v0:= "tags" @kind object;
  #L13c112.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13c118.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13c11e.  v1.`okhttp3.Request.b` @type ^`okhttp3.HttpUrl` := v2 @kind object;
  #L13c122.  v1.`okhttp3.Request.c` @type ^`java.lang.String` := v3 @kind object;
  #L13c126.  v1.`okhttp3.Request.d` @type ^`okhttp3.Headers` := v4 @kind object;
  #L13c12a.  v1.`okhttp3.Request.e` @type ^`okhttp3.RequestBody` := v5 @kind object;
  #L13c12e.  v1.`okhttp3.Request.f` @type ^`java.util.Map` := v6 @kind object;
  #L13c132.  return @kind void;
}
procedure `okhttp3.RequestBody` `-deprecated_body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.-deprecated_body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13c0c0.  v0:= v1.`okhttp3.Request.e` @type ^`okhttp3.RequestBody` @kind object;
  #L13c0c4.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `-deprecated_cacheControl`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.-deprecated_cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13bff8.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L13bffe.  v0:= temp @kind object;
  #L13c000.  return v0 @kind object;
}
procedure `okhttp3.Headers` `-deprecated_headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.-deprecated_headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13c044.  v0:= v1.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L13c048.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.-deprecated_method:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13be40.  v0:= v1.`okhttp3.Request.c` @type ^`java.lang.String` @kind object;
  #L13be44.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `-deprecated_url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.-deprecated_url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13c074.  v0:= v1.`okhttp3.Request.b` @type ^`okhttp3.HttpUrl` @kind object;
  #L13c078.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13c0d8.  v0:= v1.`okhttp3.Request.e` @type ^`okhttp3.RequestBody` @kind object;
  #L13c0dc.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13c014.  v0:= v2.`okhttp3.Request.a` @type ^`okhttp3.CacheControl` @kind object;
  #L13c018.  if v0 != 0 then goto L13c030;
  #L13c01c.  v0:= `@@okhttp3.CacheControl.Companion` @type ^`okhttp3.CacheControl$Companion` @kind object;
  #L13c020.  v1:= v2.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L13c024.  call temp:= `parse`(v0, v1) @signature `Lokhttp3/CacheControl$Companion;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind virtual;
  #L13c02a.  v0:= temp @kind object;
  #L13c02c.  v2.`okhttp3.Request.a` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L13c030.  return v0 @kind object;
}
procedure `java.util.Map` `getTags$okhttp`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.getTags$okhttp:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13bfe0.  v0:= v1.`okhttp3.Request.f` @type ^`java.util.Map` @kind object;
  #L13bfe4.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13be58.  v0:= "name" @kind object;
  #L13be5c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13be62.  v0:= v1.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L13be66.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L13be6c.  v2:= temp @kind object;
  #L13be6e.  return v2 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13bfb8.  v0:= "name" @kind object;
  #L13bfbc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13bfc2.  v0:= v1.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L13bfc6.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L13bfcc.  v2:= temp @kind object;
  #L13bfce.  return v2 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13c05c.  v0:= v1.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L13c060.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.isHttps:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13bdd0.  v0:= v1.`okhttp3.Request.b` @type ^`okhttp3.HttpUrl` @kind object;
  #L13bdd4.  call temp:= `isHttps`(v0) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L13bdda.  v0:= temp;
  #L13bddc.  return v0;
}
procedure `java.lang.String` `method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13be80.  v0:= v1.`okhttp3.Request.c` @type ^`java.lang.String` @kind object;
  #L13be84.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `newBuilder`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13c0a4.  v0:= new `okhttp3.Request$Builder`;
  #L13c0a8.  call `<init>`(v0, v1) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @kind direct;
  #L13c0ae.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.tag:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13bdf0.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L13bdf4.  call temp:= `tag`(v1, v0) @signature `Lokhttp3/Request;.tag:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L13bdfa.  v0:= temp @kind object;
  #L13bdfc.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lokhttp3/Request;.tag:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13be10.  v0:= "type" @kind object;
  #L13be14.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13be1a.  v0:= v1.`okhttp3.Request.f` @type ^`java.util.Map` @kind object;
  #L13be1e.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13be24.  v0:= temp @kind object;
  #L13be26.  call temp:= `cast`(v2, v0) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13be2c.  v2:= temp @kind object;
  #L13be2e.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Request` v6 @kind this) @signature `Lokhttp3/Request;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L13be98.  v0:= new `java.lang.StringBuilder`;
  #L13be9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13bea2.  v1:= "Request{method=" @kind object;
  #L13bea6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13beac.  v1:= v6.`okhttp3.Request.c` @type ^`java.lang.String` @kind object;
  #L13beb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13beb6.  v1:= ", url=" @kind object;
  #L13beba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bec0.  v1:= v6.`okhttp3.Request.b` @type ^`okhttp3.HttpUrl` @kind object;
  #L13bec4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13beca.  v1:= v6.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L13bece.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L13bed4.  v1:= temp;
  #L13bed6.  if v1 == 0 then goto L13bf62;
  #L13beda.  v1:= ", headers=[" @kind object;
  #L13bede.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bee4.  v1:= v6.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L13bee8.  v2:= 0I;
  #L13beea.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13bef0.  v1:= temp @kind object;
  #L13bef2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13bef8.  v3:= temp;
  #L13befa.  if v3 == 0 then goto L13bf58;
  #L13befe.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13bf04.  v3:= temp @kind object;
  #L13bf06.  v4:= v2 + 1;
  #L13bf0a.  if v2 >= 0 then goto L13bf14;
  #L13bf0e.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L13bf14.  v3:= (`kotlin.Pair`) v3 @kind object;
  #L13bf18.  call temp:= `component1`(v3) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L13bf1e.  v5:= temp @kind object;
  #L13bf20.  v5:= (`java.lang.String`) v5 @kind object;
  #L13bf24.  call temp:= `component2`(v3) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L13bf2a.  v3:= temp @kind object;
  #L13bf2c.  v3:= (`java.lang.String`) v3 @kind object;
  #L13bf30.  if v2 <= 0 then goto L13bf3e;
  #L13bf34.  v2:= ", " @kind object;
  #L13bf38.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bf3e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bf44.  v2:= 58I;
  #L13bf48.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bf4e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bf54.  v2:= v4;
  #L13bf56.  goto L13bef2;
  #L13bf58.  v1:= 93I;
  #L13bf5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bf62.  v1:= v6.`okhttp3.Request.f` @type ^`java.util.Map` @kind object;
  #L13bf66.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L13bf6c.  v1:= temp;
  #L13bf6e.  v1:= v1 ^~ 1;
  #L13bf72.  if v1 == 0 then goto L13bf8a;
  #L13bf76.  v1:= ", tags=" @kind object;
  #L13bf7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bf80.  v1:= v6.`okhttp3.Request.f` @type ^`java.util.Map` @kind object;
  #L13bf84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bf8a.  v1:= 125I;
  #L13bf8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bf94.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13bf9a.  v0:= temp @kind object;
  #L13bf9c.  v1:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L13bfa0.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13bfa6.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13c08c.  v0:= v1.`okhttp3.Request.b` @type ^`okhttp3.HttpUrl` @kind object;
  #L13c090.  return v0 @kind object;
}
