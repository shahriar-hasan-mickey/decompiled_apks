record `okhttp3.RequestBody$Companion$asRequestBody$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `java.io.File` `okhttp3.RequestBody$Companion$asRequestBody$1.a` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.MediaType` `okhttp3.RequestBody$Companion$asRequestBody$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RequestBody$Companion$asRequestBody$1` v0 @kind this, `java.io.File` v1 @kind object, `okhttp3.MediaType` v2 @kind object) @signature `Lokhttp3/RequestBody$Companion$asRequestBody$1;.<init>:(Ljava/io/File;Lokhttp3/MediaType;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13b688.  v0.`okhttp3.RequestBody$Companion$asRequestBody$1.a` @type ^`java.io.File` := v1 @kind object;
  #L13b68c.  v0.`okhttp3.RequestBody$Companion$asRequestBody$1.b` @type ^`okhttp3.MediaType` := v2 @kind object;
  #L13b690.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L13b696.  return @kind void;
}
procedure `long` `contentLength`(`okhttp3.RequestBody$Companion$asRequestBody$1` v2 @kind this) @signature `Lokhttp3/RequestBody$Companion$asRequestBody$1;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13b650.  v0:= v2.`okhttp3.RequestBody$Companion$asRequestBody$1.a` @type ^`java.io.File` @kind object;
  #L13b654.  call temp:= `length`(v0) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L13b65a.  v0:= temp @kind wide;
  #L13b65c.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.RequestBody$Companion$asRequestBody$1` v1 @kind this) @signature `Lokhttp3/RequestBody$Companion$asRequestBody$1;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b670.  v0:= v1.`okhttp3.RequestBody$Companion$asRequestBody$1.b` @type ^`okhttp3.MediaType` @kind object;
  #L13b674.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.RequestBody$Companion$asRequestBody$1` v2 @kind this, `okio.BufferedSink` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion$asRequestBody$1;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13b6a8.  v0:= "sink" @kind object;
  #L13b6ac.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b6b2.  v0:= v2.`okhttp3.RequestBody$Companion$asRequestBody$1.a` @type ^`java.io.File` @kind object;
  #L13b6b6.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/File;)Lokio/Source;` @kind static;
  #L13b6bc.  v0:= temp @kind object;
  #L13b6be.  call temp:= `writeAll`(v3, v0) @signature `Lokio/BufferedSink;.writeAll:(Lokio/Source;)J` @kind interface;
  #L13b6c4.  v3:= 0I;
  #L13b6c6.  call `closeFinally`(v0, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L13b6cc.  return @kind void;
  #L13b6ce.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13b6d0.  throw v3;
  #L13b6d2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13b6d4.  call `closeFinally`(v0, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L13b6da.  throw v1;
  catch `java.lang.Throwable` @[L13b6be..L13b6c4] goto L13b6ce;
  catch `java.lang.Throwable` @[L13b6d0..L13b6d2] goto L13b6d2;
}
