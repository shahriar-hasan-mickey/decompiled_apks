record `okhttp3.RequestBody$Companion$toRequestBody$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `okio.ByteString` `okhttp3.RequestBody$Companion$toRequestBody$1.a` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.MediaType` `okhttp3.RequestBody$Companion$toRequestBody$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RequestBody$Companion$toRequestBody$1` v0 @kind this, `okio.ByteString` v1 @kind object, `okhttp3.MediaType` v2 @kind object) @signature `Lokhttp3/RequestBody$Companion$toRequestBody$1;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13b73c.  v0.`okhttp3.RequestBody$Companion$toRequestBody$1.a` @type ^`okio.ByteString` := v1 @kind object;
  #L13b740.  v0.`okhttp3.RequestBody$Companion$toRequestBody$1.b` @type ^`okhttp3.MediaType` := v2 @kind object;
  #L13b744.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L13b74a.  return @kind void;
}
procedure `long` `contentLength`(`okhttp3.RequestBody$Companion$toRequestBody$1` v2 @kind this) @signature `Lokhttp3/RequestBody$Companion$toRequestBody$1;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13b704.  v0:= v2.`okhttp3.RequestBody$Companion$toRequestBody$1.a` @type ^`okio.ByteString` @kind object;
  #L13b708.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L13b70e.  v0:= temp;
  #L13b710.  v0:= (`long`) v0 @kind i2l;
  #L13b712.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.RequestBody$Companion$toRequestBody$1` v1 @kind this) @signature `Lokhttp3/RequestBody$Companion$toRequestBody$1;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b724.  v0:= v1.`okhttp3.RequestBody$Companion$toRequestBody$1.b` @type ^`okhttp3.MediaType` @kind object;
  #L13b728.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.RequestBody$Companion$toRequestBody$1` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lokhttp3/RequestBody$Companion$toRequestBody$1;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b75c.  v0:= "sink" @kind object;
  #L13b760.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b766.  v0:= v1.`okhttp3.RequestBody$Companion$toRequestBody$1.a` @type ^`okio.ByteString` @kind object;
  #L13b76a.  call temp:= `write`(v2, v0) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L13b770.  return @kind void;
}
