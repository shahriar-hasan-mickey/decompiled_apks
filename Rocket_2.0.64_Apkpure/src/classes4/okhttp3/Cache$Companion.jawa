record `okhttp3.Cache$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Cache$Companion` v0 @kind this) @signature `Lokhttp3/Cache$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L12bf28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12bf2e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/Cache$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L12bf40.  call `<init>`(v0) @signature `Lokhttp3/Cache$Companion;.<init>:()V` @kind direct;
  #L12bf46.  return @kind void;
}
procedure `java.util.Set` `a`(`okhttp3.Cache$Companion` v13 @kind this, `okhttp3.Headers` v14 @kind object) @signature `Lokhttp3/Cache$Companion;.a:(Lokhttp3/Headers;)Ljava/util/Set;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L12bd94.  call temp:= `size`(v14) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L12bd9a.  v0:= temp;
  #L12bd9c.  v1:= 0I;
  #L12bd9e.  v2:= 0I;
  #L12bda0.  v3:= 0I;
  #L12bda2.  if v3 >= v0 then goto L12be48;
  #L12bda6.  call temp:= `name`(v14, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L12bdac.  v4:= temp @kind object;
  #L12bdae.  v5:= "Vary" @kind object;
  #L12bdb2.  v6:= 1I;
  #L12bdb4.  call temp:= `equals`(v5, v4, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12bdba.  v4:= temp;
  #L12bdbc.  if v4 != 0 then goto L12bdc2;
  #L12bdc0.  goto L12be42;
  #L12bdc2.  call temp:= `value`(v14, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L12bdc8.  v7:= temp @kind object;
  #L12bdca.  if v2 != 0 then goto L12bde4;
  #L12bdce.  v2:= new `java.util.TreeSet`;
  #L12bdd2.  v4:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L12bdd6.  call temp:= `getCASE_INSENSITIVE_ORDER`(v4) @signature `Lkotlin/text/StringsKt;.getCASE_INSENSITIVE_ORDER:(Lkotlin/jvm/internal/StringCompanionObject;)Ljava/util/Comparator;` @kind static;
  #L12bddc.  v4:= temp @kind object;
  #L12bdde.  call `<init>`(v2, v4) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L12bde4.  v8:= new `char`[v6];
  #L12bde8.  v4:= 44I;
  #L12bdec.  v8[v1]:= v4 @kind char;
  #L12bdf0.  v9:= 0I;
  #L12bdf2.  v10:= 0I;
  #L12bdf4.  v11:= 6I;
  #L12bdf6.  v12:= 0I;
  #L12bdf8.  call temp:= `split$default`(v7, v8, v9, v10, v11, v12) @signature `Lkotlin/text/StringsKt;.split$default:(Ljava/lang/CharSequence;[CZIILjava/lang/Object;)Ljava/util/List;` @kind static;
  #L12bdfe.  v4:= temp @kind object;
  #L12be00.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12be06.  v4:= temp @kind object;
  #L12be08.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12be0e.  v5:= temp;
  #L12be10.  if v5 == 0 then goto L12be42;
  #L12be14.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12be1a.  v5:= temp @kind object;
  #L12be1c.  v5:= (`java.lang.String`) v5 @kind object;
  #L12be20.  v6:= "null cannot be cast to non-null type kotlin.CharSequence" @kind object;
  #L12be24.  call temp:= `requireNonNull`(v5, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L12be2a.  call temp:= `trim`(v5) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L12be30.  v5:= temp @kind object;
  #L12be32.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L12be38.  v5:= temp @kind object;
  #L12be3a.  call temp:= `add`(v2, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L12be40.  goto L12be08;
  #L12be42.  v3:= v3 + 1;
  #L12be46.  goto L12bda2;
  #L12be48.  if v2 == 0 then goto L12be4e;
  #L12be4c.  goto L12be56;
  #L12be4e.  call temp:= `emptySet`() @signature `Lkotlin/collections/SetsKt;.emptySet:()Ljava/util/Set;` @kind static;
  #L12be54.  v2:= temp @kind object;
  #L12be56.  return v2 @kind object;
}
procedure `okhttp3.Headers` `b`(`okhttp3.Cache$Companion` v5 @kind this, `okhttp3.Headers` v6 @kind object, `okhttp3.Headers` v7 @kind object) @signature `Lokhttp3/Cache$Companion;.b:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L12be68.  call temp:= `a`(v5, v7) @signature `Lokhttp3/Cache$Companion;.a:(Lokhttp3/Headers;)Ljava/util/Set;` @kind direct;
  #L12be6e.  v7:= temp @kind object;
  #L12be70.  call temp:= `isEmpty`(v7) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L12be76.  v0:= temp;
  #L12be78.  if v0 == 0 then goto L12be82;
  #L12be7c.  v6:= `@@okhttp3.internal.Util.EMPTY_HEADERS` @type ^`okhttp3.Headers` @kind object;
  #L12be80.  return v6 @kind object;
  #L12be82.  v0:= new `okhttp3.Headers$Builder`;
  #L12be86.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L12be8c.  v1:= 0I;
  #L12be8e.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L12be94.  v2:= temp;
  #L12be96.  if v1 >= v2 then goto L12bec2;
  #L12be9a.  call temp:= `name`(v6, v1) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L12bea0.  v3:= temp @kind object;
  #L12bea2.  call temp:= `contains`(v7, v3) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L12bea8.  v4:= temp;
  #L12beaa.  if v4 == 0 then goto L12bebc;
  #L12beae.  call temp:= `value`(v6, v1) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L12beb4.  v4:= temp @kind object;
  #L12beb6.  call temp:= `add`(v0, v3, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L12bebc.  v1:= v1 + 1;
  #L12bec0.  goto L12be96;
  #L12bec2.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L12bec8.  v6:= temp @kind object;
  #L12beca.  return v6 @kind object;
}
procedure `boolean` `hasVaryAll`(`okhttp3.Cache$Companion` v1 @kind this, `okhttp3.Response` v2 @kind object) @signature `Lokhttp3/Cache$Companion;.hasVaryAll:(Lokhttp3/Response;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12bbc0.  v0:= "$this$hasVaryAll" @kind object;
  #L12bbc4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bbca.  call temp:= `headers`(v2) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L12bbd0.  v2:= temp @kind object;
  #L12bbd2.  call temp:= `a`(v1, v2) @signature `Lokhttp3/Cache$Companion;.a:(Lokhttp3/Headers;)Ljava/util/Set;` @kind direct;
  #L12bbd8.  v2:= temp @kind object;
  #L12bbda.  v0:= "*" @kind object;
  #L12bbde.  call temp:= `contains`(v2, v0) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L12bbe4.  v2:= temp;
  #L12bbe6.  return v2;
}
procedure `java.lang.String` `key`(`okhttp3.Cache$Companion` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object) @signature `Lokhttp3/Cache$Companion;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12bd54.  v0:= "url" @kind object;
  #L12bd58.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bd5e.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L12bd62.  call temp:= `toString`(v2) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L12bd68.  v2:= temp @kind object;
  #L12bd6a.  call temp:= `encodeUtf8`(v0, v2) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L12bd70.  v2:= temp @kind object;
  #L12bd72.  call temp:= `md5`(v2) @signature `Lokio/ByteString;.md5:()Lokio/ByteString;` @kind virtual;
  #L12bd78.  v2:= temp @kind object;
  #L12bd7a.  call temp:= `hex`(v2) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L12bd80.  v2:= temp @kind object;
  #L12bd82.  return v2 @kind object;
}
procedure `int` `readInt$okhttp`(`okhttp3.Cache$Companion` v5 @kind this, `okio.BufferedSource` v6 @kind object) @signature `Lokhttp3/Cache$Companion;.readInt$okhttp:(Lokio/BufferedSource;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L12bc90.  v0:= "source" @kind object;
  #L12bc94.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bc9a.  call temp:= `readDecimalLong`(v6) @signature `Lokio/BufferedSource;.readDecimalLong:()J` @kind interface;
  #L12bca0.  v0:= temp @kind wide;
  #L12bca2.  call temp:= `readUtf8LineStrict`(v6) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12bca8.  v6:= temp @kind object;
  #L12bcaa.  v2:= 0L;
  #L12bcae.  v4:= lcmp(v0, v2);
  #L12bcb2.  if v4 < 0 then goto L12bce0;
  #L12bcb6.  v2:= 2147483647I;
  #L12bcbc.  v2:= (`long`) v2 @kind i2l;
  #L12bcbe.  v4:= lcmp(v0, v2);
  #L12bcc2.  if v4 > 0 then goto L12bce0;
  #L12bcc6.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L12bccc.  v2:= temp;
  #L12bcce.  if v2 <= 0 then goto L12bcd6;
  #L12bcd2.  v2:= 1I;
  #L12bcd4.  goto L12bcd8;
  #L12bcd6.  v2:= 0I;
  #L12bcd8.  if v2 != 0 then goto L12bce0;
  #L12bcdc.  v6:= (`int`) v0 @kind l2i;
  #L12bcde.  return v6;
  #L12bce0.  v2:= new `java.io.IOException`;
  #L12bce4.  v3:= new `java.lang.StringBuilder`;
  #L12bce8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12bcee.  v4:= "expected an int but was \"" @kind object;
  #L12bcf2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12bcf8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L12bcfe.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12bd04.  v6:= 34I;
  #L12bd08.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L12bd0e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12bd14.  v6:= temp @kind object;
  #L12bd16.  call `<init>`(v2, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12bd1c.  throw v2;
  #L12bd1e.  v6:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L12bd20.  v0:= new `java.io.IOException`;
  #L12bd24.  call temp:= `getMessage`(v6) @signature `Ljava/lang/NumberFormatException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L12bd2a.  v6:= temp @kind object;
  #L12bd2c.  call `<init>`(v0, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12bd32.  throw v0;
  catch `java.lang.NumberFormatException` @[L12bc9a..L12bd1e] goto L12bd1e;
}
procedure `okhttp3.Headers` `varyHeaders`(`okhttp3.Cache$Companion` v1 @kind this, `okhttp3.Response` v2 @kind object) @signature `Lokhttp3/Cache$Companion;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12bedc.  v0:= "$this$varyHeaders" @kind object;
  #L12bee0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bee6.  call temp:= `networkResponse`(v2) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @kind virtual;
  #L12beec.  v0:= temp @kind object;
  #L12beee.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L12bef4.  call temp:= `request`(v0) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L12befa.  v0:= temp @kind object;
  #L12befc.  call temp:= `headers`(v0) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L12bf02.  v0:= temp @kind object;
  #L12bf04.  call temp:= `headers`(v2) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L12bf0a.  v2:= temp @kind object;
  #L12bf0c.  call temp:= `b`(v1, v0, v2) @signature `Lokhttp3/Cache$Companion;.b:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind direct;
  #L12bf12.  v2:= temp @kind object;
  #L12bf14.  return v2 @kind object;
}
procedure `boolean` `varyMatches`(`okhttp3.Cache$Companion` v3 @kind this, `okhttp3.Response` v4 @kind object, `okhttp3.Headers` v5 @kind object, `okhttp3.Request` v6 @kind object) @signature `Lokhttp3/Cache$Companion;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L12bbf8.  v0:= "cachedResponse" @kind object;
  #L12bbfc.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bc02.  v0:= "cachedRequest" @kind object;
  #L12bc06.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bc0c.  v0:= "newRequest" @kind object;
  #L12bc10.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bc16.  call temp:= `headers`(v4) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L12bc1c.  v4:= temp @kind object;
  #L12bc1e.  call temp:= `a`(v3, v4) @signature `Lokhttp3/Cache$Companion;.a:(Lokhttp3/Headers;)Ljava/util/Set;` @kind direct;
  #L12bc24.  v4:= temp @kind object;
  #L12bc26.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L12bc2a.  v1:= 1I;
  #L12bc2c.  if v0 == 0 then goto L12bc3e;
  #L12bc30.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L12bc36.  v0:= temp;
  #L12bc38.  if v0 == 0 then goto L12bc3e;
  #L12bc3c.  goto L12bc7e;
  #L12bc3e.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12bc44.  v4:= temp @kind object;
  #L12bc46.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12bc4c.  v0:= temp;
  #L12bc4e.  if v0 == 0 then goto L12bc7e;
  #L12bc52.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12bc58.  v0:= temp @kind object;
  #L12bc5a.  v0:= (`java.lang.String`) v0 @kind object;
  #L12bc5e.  call temp:= `values`(v5, v0) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L12bc64.  v2:= temp @kind object;
  #L12bc66.  call temp:= `headers`(v6, v0) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L12bc6c.  v0:= temp @kind object;
  #L12bc6e.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12bc74.  v0:= temp;
  #L12bc76.  v0:= v0 ^~ v1 @kind int;
  #L12bc78.  if v0 == 0 then goto L12bc46;
  #L12bc7c.  v1:= 0I;
  #L12bc7e.  return v1;
}
