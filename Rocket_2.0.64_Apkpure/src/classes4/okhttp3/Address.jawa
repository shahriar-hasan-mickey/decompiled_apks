record `okhttp3.Address` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.HttpUrl` `okhttp3.Address.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.Address.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.Address.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Dns` `okhttp3.Address.d` @AccessFlag PRIVATE_FINAL;
  `javax.net.SocketFactory` `okhttp3.Address.e` @AccessFlag PRIVATE_FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.Address.f` @AccessFlag PRIVATE_FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.Address.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.CertificatePinner` `okhttp3.Address.h` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Authenticator` `okhttp3.Address.i` @AccessFlag PRIVATE_FINAL;
  `java.net.Proxy` `okhttp3.Address.j` @AccessFlag PRIVATE_FINAL;
  `java.net.ProxySelector` `okhttp3.Address.k` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Address` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `okhttp3.Dns` v4 @kind object, `javax.net.SocketFactory` v5 @kind object, `javax.net.ssl.SSLSocketFactory` v6 @kind object, `javax.net.ssl.HostnameVerifier` v7 @kind object, `okhttp3.CertificatePinner` v8 @kind object, `okhttp3.Authenticator` v9 @kind object, `java.net.Proxy` v10 @kind object, `java.util.List` v11 @kind object, `java.util.List` v12 @kind object, `java.net.ProxySelector` v13 @kind object) @signature `Lokhttp3/Address;.<init>:(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12b924.  v0:= "uriHost" @kind object;
  #L12b928.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12b92e.  v0:= "dns" @kind object;
  #L12b932.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12b938.  v0:= "socketFactory" @kind object;
  #L12b93c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12b942.  v0:= "proxyAuthenticator" @kind object;
  #L12b946.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12b94c.  v0:= "protocols" @kind object;
  #L12b950.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12b956.  v0:= "connectionSpecs" @kind object;
  #L12b95a.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12b960.  v0:= "proxySelector" @kind object;
  #L12b964.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12b96a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12b970.  v1.`okhttp3.Address.d` @type ^`okhttp3.Dns` := v4 @kind object;
  #L12b974.  v1.`okhttp3.Address.e` @type ^`javax.net.SocketFactory` := v5 @kind object;
  #L12b978.  v1.`okhttp3.Address.f` @type ^`javax.net.ssl.SSLSocketFactory` := v6 @kind object;
  #L12b97c.  v1.`okhttp3.Address.g` @type ^`javax.net.ssl.HostnameVerifier` := v7 @kind object;
  #L12b980.  v1.`okhttp3.Address.h` @type ^`okhttp3.CertificatePinner` := v8 @kind object;
  #L12b984.  v1.`okhttp3.Address.i` @type ^`okhttp3.Authenticator` := v9 @kind object;
  #L12b988.  v1.`okhttp3.Address.j` @type ^`java.net.Proxy` := v10 @kind object;
  #L12b98c.  v1.`okhttp3.Address.k` @type ^`java.net.ProxySelector` := v13 @kind object;
  #L12b990.  v4:= new `okhttp3.HttpUrl$Builder`;
  #L12b994.  call `<init>`(v4) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L12b99a.  if v6 == 0 then goto L12b9a4;
  #L12b99e.  v5:= "https" @kind object;
  #L12b9a2.  goto L12b9a8;
  #L12b9a4.  v5:= "http" @kind object;
  #L12b9a8.  call temp:= `scheme`(v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L12b9ae.  v4:= temp @kind object;
  #L12b9b0.  call temp:= `host`(v4, v2) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L12b9b6.  v2:= temp @kind object;
  #L12b9b8.  call temp:= `port`(v2, v3) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L12b9be.  v2:= temp @kind object;
  #L12b9c0.  call temp:= `build`(v2) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L12b9c6.  v2:= temp @kind object;
  #L12b9c8.  v1.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` := v2 @kind object;
  #L12b9cc.  call temp:= `toImmutableList`(v11) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L12b9d2.  v2:= temp @kind object;
  #L12b9d4.  v1.`okhttp3.Address.b` @type ^`java.util.List` := v2 @kind object;
  #L12b9d8.  call temp:= `toImmutableList`(v12) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L12b9de.  v2:= temp @kind object;
  #L12b9e0.  v1.`okhttp3.Address.c` @type ^`java.util.List` := v2 @kind object;
  #L12b9e4.  return @kind void;
}
procedure `okhttp3.CertificatePinner` `-deprecated_certificatePinner`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b894.  v0:= v1.`okhttp3.Address.h` @type ^`okhttp3.CertificatePinner` @kind object;
  #L12b898.  return v0 @kind object;
}
procedure `java.util.List` `-deprecated_connectionSpecs`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b774.  v0:= v1.`okhttp3.Address.c` @type ^`java.util.List` @kind object;
  #L12b778.  return v0 @kind object;
}
procedure `okhttp3.Dns` `-deprecated_dns`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b8c4.  v0:= v1.`okhttp3.Address.d` @type ^`okhttp3.Dns` @kind object;
  #L12b8c8.  return v0 @kind object;
}
procedure `javax.net.ssl.HostnameVerifier` `-deprecated_hostnameVerifier`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b804.  v0:= v1.`okhttp3.Address.g` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L12b808.  return v0 @kind object;
}
procedure `java.util.List` `-deprecated_protocols`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_protocols:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b78c.  v0:= v1.`okhttp3.Address.b` @type ^`java.util.List` @kind object;
  #L12b790.  return v0 @kind object;
}
procedure `java.net.Proxy` `-deprecated_proxy`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b714.  v0:= v1.`okhttp3.Address.j` @type ^`java.net.Proxy` @kind object;
  #L12b718.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `-deprecated_proxyAuthenticator`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b864.  v0:= v1.`okhttp3.Address.i` @type ^`okhttp3.Authenticator` @kind object;
  #L12b868.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `-deprecated_proxySelector`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b744.  v0:= v1.`okhttp3.Address.k` @type ^`java.net.ProxySelector` @kind object;
  #L12b748.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `-deprecated_socketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b7d4.  v0:= v1.`okhttp3.Address.e` @type ^`javax.net.SocketFactory` @kind object;
  #L12b7d8.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `-deprecated_sslSocketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b834.  v0:= v1.`okhttp3.Address.f` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L12b838.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `-deprecated_url`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.-deprecated_url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b8f4.  v0:= v1.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L12b8f8.  return v0 @kind object;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b8ac.  v0:= v1.`okhttp3.Address.h` @type ^`okhttp3.CertificatePinner` @kind object;
  #L12b8b0.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b7a4.  v0:= v1.`okhttp3.Address.c` @type ^`java.util.List` @kind object;
  #L12b7a8.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b8dc.  v0:= v1.`okhttp3.Address.d` @type ^`okhttp3.Dns` @kind object;
  #L12b8e0.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Address` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12b454.  v0:= instanceof @variable v3 @type ^`okhttp3.Address` @kind boolean;
  #L12b458.  if v0 == 0 then goto L12b484;
  #L12b45c.  v0:= v2.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L12b460.  v3:= (`okhttp3.Address`) v3 @kind object;
  #L12b464.  v1:= v3.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L12b468.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b46e.  v0:= temp;
  #L12b470.  if v0 == 0 then goto L12b484;
  #L12b474.  call temp:= `equalsNonHost$okhttp`(v2, v3) @signature `Lokhttp3/Address;.equalsNonHost$okhttp:(Lokhttp3/Address;)Z` @kind virtual;
  #L12b47a.  v3:= temp;
  #L12b47c.  if v3 == 0 then goto L12b484;
  #L12b480.  v3:= 1I;
  #L12b482.  goto L12b486;
  #L12b484.  v3:= 0I;
  #L12b486.  return v3;
}
procedure `boolean` `equalsNonHost$okhttp`(`okhttp3.Address` v2 @kind this, `okhttp3.Address` v3 @kind object) @signature `Lokhttp3/Address;.equalsNonHost$okhttp:(Lokhttp3/Address;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12b498.  v0:= "that" @kind object;
  #L12b49c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12b4a2.  v0:= v2.`okhttp3.Address.d` @type ^`okhttp3.Dns` @kind object;
  #L12b4a6.  v1:= v3.`okhttp3.Address.d` @type ^`okhttp3.Dns` @kind object;
  #L12b4aa.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b4b0.  v0:= temp;
  #L12b4b2.  if v0 == 0 then goto L12b576;
  #L12b4b6.  v0:= v2.`okhttp3.Address.i` @type ^`okhttp3.Authenticator` @kind object;
  #L12b4ba.  v1:= v3.`okhttp3.Address.i` @type ^`okhttp3.Authenticator` @kind object;
  #L12b4be.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b4c4.  v0:= temp;
  #L12b4c6.  if v0 == 0 then goto L12b576;
  #L12b4ca.  v0:= v2.`okhttp3.Address.b` @type ^`java.util.List` @kind object;
  #L12b4ce.  v1:= v3.`okhttp3.Address.b` @type ^`java.util.List` @kind object;
  #L12b4d2.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b4d8.  v0:= temp;
  #L12b4da.  if v0 == 0 then goto L12b576;
  #L12b4de.  v0:= v2.`okhttp3.Address.c` @type ^`java.util.List` @kind object;
  #L12b4e2.  v1:= v3.`okhttp3.Address.c` @type ^`java.util.List` @kind object;
  #L12b4e6.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b4ec.  v0:= temp;
  #L12b4ee.  if v0 == 0 then goto L12b576;
  #L12b4f2.  v0:= v2.`okhttp3.Address.k` @type ^`java.net.ProxySelector` @kind object;
  #L12b4f6.  v1:= v3.`okhttp3.Address.k` @type ^`java.net.ProxySelector` @kind object;
  #L12b4fa.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b500.  v0:= temp;
  #L12b502.  if v0 == 0 then goto L12b576;
  #L12b506.  v0:= v2.`okhttp3.Address.j` @type ^`java.net.Proxy` @kind object;
  #L12b50a.  v1:= v3.`okhttp3.Address.j` @type ^`java.net.Proxy` @kind object;
  #L12b50e.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b514.  v0:= temp;
  #L12b516.  if v0 == 0 then goto L12b576;
  #L12b51a.  v0:= v2.`okhttp3.Address.f` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L12b51e.  v1:= v3.`okhttp3.Address.f` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L12b522.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b528.  v0:= temp;
  #L12b52a.  if v0 == 0 then goto L12b576;
  #L12b52e.  v0:= v2.`okhttp3.Address.g` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L12b532.  v1:= v3.`okhttp3.Address.g` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L12b536.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b53c.  v0:= temp;
  #L12b53e.  if v0 == 0 then goto L12b576;
  #L12b542.  v0:= v2.`okhttp3.Address.h` @type ^`okhttp3.CertificatePinner` @kind object;
  #L12b546.  v1:= v3.`okhttp3.Address.h` @type ^`okhttp3.CertificatePinner` @kind object;
  #L12b54a.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b550.  v0:= temp;
  #L12b552.  if v0 == 0 then goto L12b576;
  #L12b556.  v0:= v2.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L12b55a.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L12b560.  v0:= temp;
  #L12b562.  v3:= v3.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L12b566.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L12b56c.  v3:= temp;
  #L12b56e.  if v0 != v3 then goto L12b576;
  #L12b572.  v3:= 1I;
  #L12b574.  goto L12b578;
  #L12b576.  v3:= 0I;
  #L12b578.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Address` v2 @kind this) @signature `Lokhttp3/Address;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12b58c.  v0:= v2.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L12b590.  call temp:= `hashCode`(v0) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @kind virtual;
  #L12b596.  v0:= temp;
  #L12b598.  v1:= 527I;
  #L12b59c.  v1:= v1 + v0 @kind int;
  #L12b59e.  v1:= v1 * 31;
  #L12b5a2.  v0:= v2.`okhttp3.Address.d` @type ^`okhttp3.Dns` @kind object;
  #L12b5a6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L12b5ac.  v0:= temp;
  #L12b5ae.  v1:= v1 + v0 @kind int;
  #L12b5b0.  v1:= v1 * 31;
  #L12b5b4.  v0:= v2.`okhttp3.Address.i` @type ^`okhttp3.Authenticator` @kind object;
  #L12b5b8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L12b5be.  v0:= temp;
  #L12b5c0.  v1:= v1 + v0 @kind int;
  #L12b5c2.  v1:= v1 * 31;
  #L12b5c6.  v0:= v2.`okhttp3.Address.b` @type ^`java.util.List` @kind object;
  #L12b5ca.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L12b5d0.  v0:= temp;
  #L12b5d2.  v1:= v1 + v0 @kind int;
  #L12b5d4.  v1:= v1 * 31;
  #L12b5d8.  v0:= v2.`okhttp3.Address.c` @type ^`java.util.List` @kind object;
  #L12b5dc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L12b5e2.  v0:= temp;
  #L12b5e4.  v1:= v1 + v0 @kind int;
  #L12b5e6.  v1:= v1 * 31;
  #L12b5ea.  v0:= v2.`okhttp3.Address.k` @type ^`java.net.ProxySelector` @kind object;
  #L12b5ee.  call temp:= `hashCode`(v0) @signature `Ljava/net/ProxySelector;.hashCode:()I` @kind virtual;
  #L12b5f4.  v0:= temp;
  #L12b5f6.  v1:= v1 + v0 @kind int;
  #L12b5f8.  v1:= v1 * 31;
  #L12b5fc.  v0:= v2.`okhttp3.Address.j` @type ^`java.net.Proxy` @kind object;
  #L12b600.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L12b606.  v0:= temp;
  #L12b608.  v1:= v1 + v0 @kind int;
  #L12b60a.  v1:= v1 * 31;
  #L12b60e.  v0:= v2.`okhttp3.Address.f` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L12b612.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L12b618.  v0:= temp;
  #L12b61a.  v1:= v1 + v0 @kind int;
  #L12b61c.  v1:= v1 * 31;
  #L12b620.  v0:= v2.`okhttp3.Address.g` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L12b624.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L12b62a.  v0:= temp;
  #L12b62c.  v1:= v1 + v0 @kind int;
  #L12b62e.  v1:= v1 * 31;
  #L12b632.  v0:= v2.`okhttp3.Address.h` @type ^`okhttp3.CertificatePinner` @kind object;
  #L12b636.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L12b63c.  v0:= temp;
  #L12b63e.  v1:= v1 + v0 @kind int;
  #L12b640.  return v1;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b81c.  v0:= v1.`okhttp3.Address.g` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L12b820.  return v0 @kind object;
}
procedure `java.util.List` `protocols`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b7bc.  v0:= v1.`okhttp3.Address.b` @type ^`java.util.List` @kind object;
  #L12b7c0.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b72c.  v0:= v1.`okhttp3.Address.j` @type ^`java.net.Proxy` @kind object;
  #L12b730.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b87c.  v0:= v1.`okhttp3.Address.i` @type ^`okhttp3.Authenticator` @kind object;
  #L12b880.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b75c.  v0:= v1.`okhttp3.Address.k` @type ^`java.net.ProxySelector` @kind object;
  #L12b760.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b7ec.  v0:= v1.`okhttp3.Address.e` @type ^`javax.net.SocketFactory` @kind object;
  #L12b7f0.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b84c.  v0:= v1.`okhttp3.Address.f` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L12b850.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Address` v3 @kind this) @signature `Lokhttp3/Address;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L12b654.  v0:= new `java.lang.StringBuilder`;
  #L12b658.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12b65e.  v1:= "Address{" @kind object;
  #L12b662.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12b668.  v1:= v3.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L12b66c.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L12b672.  v1:= temp @kind object;
  #L12b674.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12b67a.  v1:= 58I;
  #L12b67e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L12b684.  v1:= v3.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L12b688.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L12b68e.  v1:= temp;
  #L12b690.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L12b696.  v1:= ", " @kind object;
  #L12b69a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12b6a0.  v1:= v3.`okhttp3.Address.j` @type ^`java.net.Proxy` @kind object;
  #L12b6a4.  if v1 == 0 then goto L12b6c2;
  #L12b6a8.  v1:= new `java.lang.StringBuilder`;
  #L12b6ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12b6b2.  v2:= "proxy=" @kind object;
  #L12b6b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12b6bc.  v2:= v3.`okhttp3.Address.j` @type ^`java.net.Proxy` @kind object;
  #L12b6c0.  goto L12b6da;
  #L12b6c2.  v1:= new `java.lang.StringBuilder`;
  #L12b6c6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12b6cc.  v2:= "proxySelector=" @kind object;
  #L12b6d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12b6d6.  v2:= v3.`okhttp3.Address.k` @type ^`java.net.ProxySelector` @kind object;
  #L12b6da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12b6e0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12b6e6.  v1:= temp @kind object;
  #L12b6e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12b6ee.  v1:= "}" @kind object;
  #L12b6f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12b6f8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12b6fe.  v0:= temp @kind object;
  #L12b700.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12b90c.  v0:= v1.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L12b910.  return v0 @kind object;
}
