record `okhttp3.Protocol` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.Protocol.a` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.Protocol$Companion` `@@okhttp3.Protocol.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.Protocol` `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.HTTP_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.HTTP_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.HTTP_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.QUIC` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.SPDY_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol`[] `@@okhttp3.Protocol.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/Protocol;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L13ae58.  v0:= 6I;
  #L13ae5a.  v0:= new `okhttp3.Protocol`[v0];
  #L13ae5e.  v1:= new `okhttp3.Protocol`;
  #L13ae62.  v2:= "HTTP_1_0" @kind object;
  #L13ae66.  v3:= 0I;
  #L13ae68.  v4:= "http/1.0" @kind object;
  #L13ae6c.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L13ae72.  `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L13ae76.  v0[v3]:= v1 @kind object;
  #L13ae7a.  v1:= new `okhttp3.Protocol`;
  #L13ae7e.  v2:= "HTTP_1_1" @kind object;
  #L13ae82.  v3:= 1I;
  #L13ae84.  v4:= "http/1.1" @kind object;
  #L13ae88.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L13ae8e.  `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L13ae92.  v0[v3]:= v1 @kind object;
  #L13ae96.  v1:= new `okhttp3.Protocol`;
  #L13ae9a.  v2:= "SPDY_3" @kind object;
  #L13ae9e.  v3:= 2I;
  #L13aea0.  v4:= "spdy/3.1" @kind object;
  #L13aea4.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L13aeaa.  `@@okhttp3.Protocol.SPDY_3` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L13aeae.  v0[v3]:= v1 @kind object;
  #L13aeb2.  v1:= new `okhttp3.Protocol`;
  #L13aeb6.  v2:= "HTTP_2" @kind object;
  #L13aeba.  v3:= 3I;
  #L13aebc.  v4:= "h2" @kind object;
  #L13aec0.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L13aec6.  `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L13aeca.  v0[v3]:= v1 @kind object;
  #L13aece.  v1:= new `okhttp3.Protocol`;
  #L13aed2.  v2:= "H2_PRIOR_KNOWLEDGE" @kind object;
  #L13aed6.  v3:= 4I;
  #L13aed8.  v4:= "h2_prior_knowledge" @kind object;
  #L13aedc.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L13aee2.  `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L13aee6.  v0[v3]:= v1 @kind object;
  #L13aeea.  v1:= new `okhttp3.Protocol`;
  #L13aeee.  v2:= "QUIC" @kind object;
  #L13aef2.  v3:= 5I;
  #L13aef4.  v4:= "quic" @kind object;
  #L13aef8.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L13aefe.  `@@okhttp3.Protocol.QUIC` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L13af02.  v0[v3]:= v1 @kind object;
  #L13af06.  `@@okhttp3.Protocol.b` @type ^`okhttp3.Protocol`[] := v0 @kind object;
  #L13af0a.  v0:= new `okhttp3.Protocol$Companion`;
  #L13af0e.  v1:= 0I;
  #L13af10.  call `<init>`(v0, v1) @signature `Lokhttp3/Protocol$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L13af16.  `@@okhttp3.Protocol.Companion` @type ^`okhttp3.Protocol$Companion` := v0 @kind object;
  #L13af1a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Protocol` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L13af2c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L13af32.  v0.`okhttp3.Protocol.a` @type ^`java.lang.String` := v3 @kind object;
  #L13af36.  return @kind void;
}
procedure `java.lang.String` `access$getProtocol$p`(`okhttp3.Protocol` v0 @kind object) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L13adc0.  v0:= v0.`okhttp3.Protocol.a` @type ^`java.lang.String` @kind object;
  #L13adc4.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `get`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/Protocol;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13adf0.  v0:= `@@okhttp3.Protocol.Companion` @type ^`okhttp3.Protocol$Companion` @kind object;
  #L13adf4.  call temp:= `get`(v0, v1) @signature `Lokhttp3/Protocol$Companion;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @kind virtual;
  #L13adfa.  v1:= temp @kind object;
  #L13adfc.  return v1 @kind object;
}
procedure `okhttp3.Protocol` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/Protocol;.valueOf:(Ljava/lang/String;)Lokhttp3/Protocol;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13ae10.  v0:= constclass @type ^`okhttp3.Protocol` @kind object;
  #L13ae14.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L13ae1a.  v1:= temp @kind object;
  #L13ae1c.  v1:= (`okhttp3.Protocol`) v1 @kind object;
  #L13ae20.  return v1 @kind object;
}
procedure `okhttp3.Protocol`[] `values`() @signature `Lokhttp3/Protocol;.values:()[Lokhttp3/Protocol;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13ae34.  v0:= `@@okhttp3.Protocol.b` @type ^`okhttp3.Protocol`[] @kind object;
  #L13ae38.  call temp:= `clone`(v0) @signature `[Lokhttp3/Protocol;.clone:()Ljava/lang/Object;` @kind virtual;
  #L13ae3e.  v0:= temp @kind object;
  #L13ae40.  v0:= (`okhttp3.Protocol`[]) v0 @kind object;
  #L13ae44.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Protocol` v1 @kind this) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13add8.  v0:= v1.`okhttp3.Protocol.a` @type ^`java.lang.String` @kind object;
  #L13addc.  return v0 @kind object;
}
