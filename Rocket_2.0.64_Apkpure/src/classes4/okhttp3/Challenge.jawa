record `okhttp3.Challenge` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `okhttp3.Challenge.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Challenge.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Challenge` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12ec14.  v0:= "scheme" @kind object;
  #L12ec18.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ec1e.  v0:= "realm" @kind object;
  #L12ec22.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ec28.  call temp:= `singletonMap`(v0, v3) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L12ec2e.  v3:= temp @kind object;
  #L12ec30.  v0:= "singletonMap(\"realm\", realm)" @kind object;
  #L12ec34.  call `checkNotNullExpressionValue`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ec3a.  call `<init>`(v1, v2, v3) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L12ec40.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Challenge` v4 @kind this, `java.lang.String` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12ec54.  v0:= "scheme" @kind object;
  #L12ec58.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ec5e.  v0:= "authParams" @kind object;
  #L12ec62.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ec68.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12ec6e.  v4.`okhttp3.Challenge.b` @type ^`java.lang.String` := v5 @kind object;
  #L12ec72.  v5:= new `java.util.LinkedHashMap`;
  #L12ec76.  call `<init>`(v5) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L12ec7c.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L12ec82.  v6:= temp @kind object;
  #L12ec84.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12ec8a.  v6:= temp @kind object;
  #L12ec8c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12ec92.  v0:= temp;
  #L12ec94.  if v0 == 0 then goto L12ecec;
  #L12ec98.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12ec9e.  v0:= temp @kind object;
  #L12eca0.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L12eca4.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L12ecaa.  v1:= temp @kind object;
  #L12ecac.  v1:= (`java.lang.String`) v1 @kind object;
  #L12ecb0.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L12ecb6.  v0:= temp @kind object;
  #L12ecb8.  v0:= (`java.lang.String`) v0 @kind object;
  #L12ecbc.  if v1 == 0 then goto L12ece2;
  #L12ecc0.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L12ecc4.  v3:= "US" @kind object;
  #L12ecc8.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ecce.  call temp:= `toLowerCase`(v1, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L12ecd4.  v1:= temp @kind object;
  #L12ecd6.  v2:= "(this as java.lang.String).toLowerCase(locale)" @kind object;
  #L12ecda.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ece0.  goto L12ece4;
  #L12ece2.  v1:= 0I;
  #L12ece4.  call temp:= `put`(v5, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L12ecea.  goto L12ec8c;
  #L12ecec.  call temp:= `unmodifiableMap`(v5) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L12ecf2.  v5:= temp @kind object;
  #L12ecf4.  v6:= "unmodifiableMap<String?, String>(newAuthParams)" @kind object;
  #L12ecf8.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ecfe.  v4.`okhttp3.Challenge.a` @type ^`java.util.Map` := v5 @kind object;
  #L12ed02.  return @kind void;
}
procedure `java.util.Map` `-deprecated_authParams`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.-deprecated_authParams:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12eb94.  v0:= v1.`okhttp3.Challenge.a` @type ^`java.util.Map` @kind object;
  #L12eb98.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `-deprecated_charset`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.-deprecated_charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12eb1c.  call temp:= `charset`(v1) @signature `Lokhttp3/Challenge;.charset:()Ljava/nio/charset/Charset;` @kind virtual;
  #L12eb22.  v0:= temp @kind object;
  #L12eb24.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_realm`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.-deprecated_realm:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12ea64.  call temp:= `realm`(v1) @signature `Lokhttp3/Challenge;.realm:()Ljava/lang/String;` @kind virtual;
  #L12ea6a.  v0:= temp @kind object;
  #L12ea6c.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_scheme`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.-deprecated_scheme:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12ea80.  v0:= v1.`okhttp3.Challenge.b` @type ^`java.lang.String` @kind object;
  #L12ea84.  return v0 @kind object;
}
procedure `java.util.Map` `authParams`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.authParams:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12ebac.  v0:= v1.`okhttp3.Challenge.a` @type ^`java.util.Map` @kind object;
  #L12ebb0.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12eb38.  v0:= v2.`okhttp3.Challenge.a` @type ^`java.util.Map` @kind object;
  #L12eb3c.  v1:= "charset" @kind object;
  #L12eb40.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L12eb46.  v0:= temp @kind object;
  #L12eb48.  v0:= (`java.lang.String`) v0 @kind object;
  #L12eb4c.  if v0 == 0 then goto L12eb64;
  #L12eb50.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L12eb56.  v0:= temp @kind object;
  #L12eb58.  v1:= "Charset.forName(charset)" @kind object;
  #L12eb5c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12eb62.  return v0 @kind object;
  #L12eb64.  v0:= `@@java.nio.charset.StandardCharsets.ISO_8859_1` @type ^`java.nio.charset.Charset` @kind object;
  #L12eb68.  v1:= "ISO_8859_1" @kind object;
  #L12eb6c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12eb72.  return v0 @kind object;
  catch `java.lang.Exception` @[L12eb50..L12eb62] goto L12eb64;
}
procedure `boolean` `equals`(`okhttp3.Challenge` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Challenge;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12e9e0.  v0:= instanceof @variable v3 @type ^`okhttp3.Challenge` @kind boolean;
  #L12e9e4.  if v0 == 0 then goto L12ea18;
  #L12e9e8.  v3:= (`okhttp3.Challenge`) v3 @kind object;
  #L12e9ec.  v0:= v3.`okhttp3.Challenge.b` @type ^`java.lang.String` @kind object;
  #L12e9f0.  v1:= v2.`okhttp3.Challenge.b` @type ^`java.lang.String` @kind object;
  #L12e9f4.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12e9fa.  v0:= temp;
  #L12e9fc.  if v0 == 0 then goto L12ea18;
  #L12ea00.  v3:= v3.`okhttp3.Challenge.a` @type ^`java.util.Map` @kind object;
  #L12ea04.  v0:= v2.`okhttp3.Challenge.a` @type ^`java.util.Map` @kind object;
  #L12ea08.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12ea0e.  v3:= temp;
  #L12ea10.  if v3 == 0 then goto L12ea18;
  #L12ea14.  v3:= 1I;
  #L12ea16.  goto L12ea1a;
  #L12ea18.  v3:= 0I;
  #L12ea1a.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12ea2c.  v0:= v2.`okhttp3.Challenge.b` @type ^`java.lang.String` @kind object;
  #L12ea30.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L12ea36.  v0:= temp;
  #L12ea38.  v1:= 899I;
  #L12ea3c.  v1:= v1 + v0 @kind int;
  #L12ea3e.  v1:= v1 * 31;
  #L12ea42.  v0:= v2.`okhttp3.Challenge.a` @type ^`java.util.Map` @kind object;
  #L12ea46.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L12ea4c.  v0:= temp;
  #L12ea4e.  v1:= v1 + v0 @kind int;
  #L12ea50.  return v1;
}
procedure `java.lang.String` `realm`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.realm:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12ea98.  v0:= v2.`okhttp3.Challenge.a` @type ^`java.util.Map` @kind object;
  #L12ea9c.  v1:= "realm" @kind object;
  #L12eaa0.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L12eaa6.  v0:= temp @kind object;
  #L12eaa8.  v0:= (`java.lang.String`) v0 @kind object;
  #L12eaac.  return v0 @kind object;
}
procedure `java.lang.String` `scheme`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12eac0.  v0:= v1.`okhttp3.Challenge.b` @type ^`java.lang.String` @kind object;
  #L12eac4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12ead8.  v0:= new `java.lang.StringBuilder`;
  #L12eadc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12eae2.  v1:= v2.`okhttp3.Challenge.b` @type ^`java.lang.String` @kind object;
  #L12eae6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12eaec.  v1:= " authParams=" @kind object;
  #L12eaf0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12eaf6.  v1:= v2.`okhttp3.Challenge.a` @type ^`java.util.Map` @kind object;
  #L12eafa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12eb00.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12eb06.  v0:= temp @kind object;
  #L12eb08.  return v0 @kind object;
}
procedure `okhttp3.Challenge` `withCharset`(`okhttp3.Challenge` v3 @kind this, `java.nio.charset.Charset` v4 @kind object) @signature `Lokhttp3/Challenge;.withCharset:(Ljava/nio/charset/Charset;)Lokhttp3/Challenge;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L12ebc4.  v0:= "charset" @kind object;
  #L12ebc8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ebce.  v1:= v3.`okhttp3.Challenge.a` @type ^`java.util.Map` @kind object;
  #L12ebd2.  call temp:= `toMutableMap`(v1) @signature `Lkotlin/collections/MapsKt;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L12ebd8.  v1:= temp @kind object;
  #L12ebda.  call temp:= `name`(v4) @signature `Ljava/nio/charset/Charset;.name:()Ljava/lang/String;` @kind virtual;
  #L12ebe0.  v4:= temp @kind object;
  #L12ebe2.  v2:= "charset.name()" @kind object;
  #L12ebe6.  call `checkNotNullExpressionValue`(v4, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ebec.  call temp:= `put`(v1, v0, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L12ebf2.  v4:= new `okhttp3.Challenge`;
  #L12ebf6.  v0:= v3.`okhttp3.Challenge.b` @type ^`java.lang.String` @kind object;
  #L12ebfa.  call `<init>`(v4, v0, v1) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L12ec00.  return v4 @kind object;
}
