record `okhttp3.Authenticator` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `okhttp3.Authenticator$Companion` `@@okhttp3.Authenticator.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.Authenticator` `@@okhttp3.Authenticator.JAVA_NET_AUTHENTICATOR` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.Authenticator` `@@okhttp3.Authenticator.NONE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Authenticator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L12ba60.  v0:= new `okhttp3.Authenticator$Companion`;
  #L12ba64.  v1:= 0I;
  #L12ba66.  call `<init>`(v0, v1) @signature `Lokhttp3/Authenticator$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L12ba6c.  `@@okhttp3.Authenticator.Companion` @type ^`okhttp3.Authenticator$Companion` := v0 @kind object;
  #L12ba70.  v0:= new `okhttp3.Authenticator$Companion$a`;
  #L12ba74.  call `<init>`(v0) @signature `Lokhttp3/Authenticator$Companion$a;.<init>:()V` @kind direct;
  #L12ba7a.  `@@okhttp3.Authenticator.NONE` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L12ba7e.  v0:= new `okhttp3.internal.authenticator.JavaNetAuthenticator`;
  #L12ba82.  v2:= 1I;
  #L12ba84.  call `<init>`(v0, v1, v2, v1) @signature `Lokhttp3/internal/authenticator/JavaNetAuthenticator;.<init>:(Lokhttp3/Dns;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L12ba8a.  `@@okhttp3.Authenticator.JAVA_NET_AUTHENTICATOR` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L12ba8e.  return @kind void;
}
procedure `okhttp3.Request` `authenticate`(`okhttp3.Route` v0 @kind object, `okhttp3.Response` v1 @kind object) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
