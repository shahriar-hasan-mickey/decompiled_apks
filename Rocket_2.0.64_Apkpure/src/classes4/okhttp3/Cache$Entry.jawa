record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `java.lang.String` `okhttp3.Cache$Entry.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.d` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.Cache$Entry.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.f` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.h` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.i` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.j` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.Cache$Entry.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.Cache$Entry.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.Cache$Entry$Companion` `@@okhttp3.Cache$Entry.m` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache$Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L12c1d4.  v0:= new `okhttp3.Cache$Entry$Companion`;
  #L12c1d8.  v1:= 0I;
  #L12c1da.  call `<init>`(v0, v1) @signature `Lokhttp3/Cache$Entry$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L12c1e0.  `@@okhttp3.Cache$Entry.m` @type ^`okhttp3.Cache$Entry$Companion` := v0 @kind object;
  #L12c1e4.  v0:= new `java.lang.StringBuilder`;
  #L12c1e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12c1ee.  v1:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L12c1f2.  call temp:= `get`(v1) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L12c1f8.  v2:= temp @kind object;
  #L12c1fa.  call temp:= `getPrefix`(v2) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L12c200.  v2:= temp @kind object;
  #L12c202.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12c208.  v2:= "-Sent-Millis" @kind object;
  #L12c20c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12c212.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12c218.  v0:= temp @kind object;
  #L12c21a.  `@@okhttp3.Cache$Entry.k` @type ^`java.lang.String` := v0 @kind object;
  #L12c21e.  v0:= new `java.lang.StringBuilder`;
  #L12c222.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12c228.  call temp:= `get`(v1) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L12c22e.  v1:= temp @kind object;
  #L12c230.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L12c236.  v1:= temp @kind object;
  #L12c238.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12c23e.  v1:= "-Received-Millis" @kind object;
  #L12c242.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12c248.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12c24e.  v0:= temp @kind object;
  #L12c250.  `@@okhttp3.Cache$Entry.l` @type ^`java.lang.String` := v0 @kind object;
  #L12c254.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L12c268.  v0:= "response" @kind object;
  #L12c26c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12c272.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12c278.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L12c27e.  v0:= temp @kind object;
  #L12c280.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L12c286.  v0:= temp @kind object;
  #L12c288.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L12c28e.  v0:= temp @kind object;
  #L12c290.  v2.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` := v0 @kind object;
  #L12c294.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L12c298.  call temp:= `varyHeaders`(v0, v3) @signature `Lokhttp3/Cache$Companion;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind virtual;
  #L12c29e.  v0:= temp @kind object;
  #L12c2a0.  v2.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` := v0 @kind object;
  #L12c2a4.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L12c2aa.  v0:= temp @kind object;
  #L12c2ac.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L12c2b2.  v0:= temp @kind object;
  #L12c2b4.  v2.`okhttp3.Cache$Entry.c` @type ^`java.lang.String` := v0 @kind object;
  #L12c2b8.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L12c2be.  v0:= temp @kind object;
  #L12c2c0.  v2.`okhttp3.Cache$Entry.d` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L12c2c4.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L12c2ca.  v0:= temp;
  #L12c2cc.  v2.`okhttp3.Cache$Entry.e` @type ^`int` := v0;
  #L12c2d0.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L12c2d6.  v0:= temp @kind object;
  #L12c2d8.  v2.`okhttp3.Cache$Entry.f` @type ^`java.lang.String` := v0 @kind object;
  #L12c2dc.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L12c2e2.  v0:= temp @kind object;
  #L12c2e4.  v2.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` := v0 @kind object;
  #L12c2e8.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L12c2ee.  v0:= temp @kind object;
  #L12c2f0.  v2.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L12c2f4.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L12c2fa.  v0:= temp @kind wide;
  #L12c2fc.  v2.`okhttp3.Cache$Entry.i` @type ^`long` := v0 @kind wide;
  #L12c300.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L12c306.  v0:= temp @kind wide;
  #L12c308.  v2.`okhttp3.Cache$Entry.j` @type ^`long` := v0 @kind wide;
  #L12c30c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v9 @kind this, `okio.Source` v10 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L12c320.  v0:= "rawSource" @kind object;
  #L12c324.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12c32a.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12c330.  call temp:= `buffer`(v10) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L12c336.  v0:= temp @kind object;
  #L12c338.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12c33e.  v1:= temp @kind object;
  #L12c340.  v9.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` := v1 @kind object;
  #L12c344.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12c34a.  v1:= temp @kind object;
  #L12c34c.  v9.`okhttp3.Cache$Entry.c` @type ^`java.lang.String` := v1 @kind object;
  #L12c350.  v1:= new `okhttp3.Headers$Builder`;
  #L12c354.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L12c35a.  v2:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L12c35e.  call temp:= `readInt$okhttp`(v2, v0) @signature `Lokhttp3/Cache$Companion;.readInt$okhttp:(Lokio/BufferedSource;)I` @kind virtual;
  #L12c364.  v2:= temp;
  #L12c366.  v3:= 0I;
  #L12c368.  v4:= 0I;
  #L12c36a.  if v4 >= v2 then goto L12c382;
  #L12c36e.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12c374.  v5:= temp @kind object;
  #L12c376.  call temp:= `addLenient$okhttp`(v1, v5) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L12c37c.  v4:= v4 + 1;
  #L12c380.  goto L12c36a;
  #L12c382.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L12c388.  v1:= temp @kind object;
  #L12c38a.  v9.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` := v1 @kind object;
  #L12c38e.  v1:= `@@okhttp3.internal.http.StatusLine.Companion` @type ^`okhttp3.internal.http.StatusLine$Companion` @kind object;
  #L12c392.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12c398.  v2:= temp @kind object;
  #L12c39a.  call temp:= `parse`(v1, v2) @signature `Lokhttp3/internal/http/StatusLine$Companion;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind virtual;
  #L12c3a0.  v1:= temp @kind object;
  #L12c3a2.  v2:= v1.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L12c3a6.  v9.`okhttp3.Cache$Entry.d` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L12c3aa.  v2:= v1.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L12c3ae.  v9.`okhttp3.Cache$Entry.e` @type ^`int` := v2;
  #L12c3b2.  v1:= v1.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L12c3b6.  v9.`okhttp3.Cache$Entry.f` @type ^`java.lang.String` := v1 @kind object;
  #L12c3ba.  v1:= new `okhttp3.Headers$Builder`;
  #L12c3be.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L12c3c4.  v2:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L12c3c8.  call temp:= `readInt$okhttp`(v2, v0) @signature `Lokhttp3/Cache$Companion;.readInt$okhttp:(Lokio/BufferedSource;)I` @kind virtual;
  #L12c3ce.  v2:= temp;
  #L12c3d0.  v4:= 0I;
  #L12c3d2.  if v4 >= v2 then goto L12c3ea;
  #L12c3d6.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12c3dc.  v5:= temp @kind object;
  #L12c3de.  call temp:= `addLenient$okhttp`(v1, v5) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L12c3e4.  v4:= v4 + 1;
  #L12c3e8.  goto L12c3d2;
  #L12c3ea.  v2:= `@@okhttp3.Cache$Entry.k` @type ^`java.lang.String` @kind object;
  #L12c3ee.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L12c3f4.  v4:= temp @kind object;
  #L12c3f6.  v5:= `@@okhttp3.Cache$Entry.l` @type ^`java.lang.String` @kind object;
  #L12c3fa.  call temp:= `get`(v1, v5) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L12c400.  v6:= temp @kind object;
  #L12c402.  call temp:= `removeAll`(v1, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L12c408.  call temp:= `removeAll`(v1, v5) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L12c40e.  v7:= 0L;
  #L12c412.  if v4 == 0 then goto L12c420;
  #L12c416.  call temp:= `parseLong`(v4) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L12c41c.  v4:= temp @kind wide;
  #L12c41e.  goto L12c422;
  #L12c420.  v4:= v7 @kind wide;
  #L12c422.  v9.`okhttp3.Cache$Entry.i` @type ^`long` := v4 @kind wide;
  #L12c426.  if v6 == 0 then goto L12c432;
  #L12c42a.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L12c430.  v7:= temp @kind wide;
  #L12c432.  v9.`okhttp3.Cache$Entry.j` @type ^`long` := v7 @kind wide;
  #L12c436.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L12c43c.  v1:= temp @kind object;
  #L12c43e.  v9.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` := v1 @kind object;
  #L12c442.  call temp:= `a`(v9) @signature `Lokhttp3/Cache$Entry;.a:()Z` @kind direct;
  #L12c448.  v1:= temp;
  #L12c44a.  if v1 == 0 then goto L12c4fc;
  #L12c44e.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12c454.  v1:= temp @kind object;
  #L12c456.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L12c45c.  v2:= temp;
  #L12c45e.  if v2 <= 0 then goto L12c464;
  #L12c462.  v3:= 1I;
  #L12c464.  if v3 != 0 then goto L12c4c4;
  #L12c468.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12c46e.  v1:= temp @kind object;
  #L12c470.  v2:= `@@okhttp3.CipherSuite.Companion` @type ^`okhttp3.CipherSuite$Companion` @kind object;
  #L12c474.  call temp:= `forJavaName`(v2, v1) @signature `Lokhttp3/CipherSuite$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind virtual;
  #L12c47a.  v1:= temp @kind object;
  #L12c47c.  call temp:= `c`(v9, v0) @signature `Lokhttp3/Cache$Entry;.c:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L12c482.  v2:= temp @kind object;
  #L12c484.  call temp:= `c`(v9, v0) @signature `Lokhttp3/Cache$Entry;.c:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L12c48a.  v3:= temp @kind object;
  #L12c48c.  call temp:= `exhausted`(v0) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L12c492.  v4:= temp;
  #L12c494.  if v4 != 0 then goto L12c4ae;
  #L12c498.  v4:= `@@okhttp3.TlsVersion.Companion` @type ^`okhttp3.TlsVersion$Companion` @kind object;
  #L12c49c.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12c4a2.  v0:= temp @kind object;
  #L12c4a4.  call temp:= `forJavaName`(v4, v0) @signature `Lokhttp3/TlsVersion$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind virtual;
  #L12c4aa.  v0:= temp @kind object;
  #L12c4ac.  goto L12c4b2;
  #L12c4ae.  v0:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L12c4b2.  v4:= `@@okhttp3.Handshake.Companion` @type ^`okhttp3.Handshake$Companion` @kind object;
  #L12c4b6.  call temp:= `get`(v4, v0, v1, v2, v3) @signature `Lokhttp3/Handshake$Companion;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind virtual;
  #L12c4bc.  v0:= temp @kind object;
  #L12c4be.  v9.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L12c4c2.  goto L12c502;
  #L12c4c4.  v0:= new `java.io.IOException`;
  #L12c4c8.  v2:= new `java.lang.StringBuilder`;
  #L12c4cc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12c4d2.  v3:= "expected \"\" but was \"" @kind object;
  #L12c4d6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12c4dc.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12c4e2.  v1:= 34I;
  #L12c4e6.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L12c4ec.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12c4f2.  v1:= temp @kind object;
  #L12c4f4.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12c4fa.  throw v0;
  #L12c4fc.  v0:= 0I;
  #L12c4fe.  v9.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L12c502.  call `close`(v10) @signature `Lokio/Source;.close:()V` @kind interface;
  #L12c508.  return @kind void;
  #L12c50a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12c50c.  call `close`(v10) @signature `Lokio/Source;.close:()V` @kind interface;
  #L12c512.  throw v0;
  catch `java.lang.Throwable` @[L12c330..L12c502] goto L12c50a;
}
procedure `boolean` `a`(`okhttp3.Cache$Entry` v5 @kind this) @signature `Lokhttp3/Cache$Entry;.a:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L12bf88.  v0:= v5.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` @kind object;
  #L12bf8c.  v1:= "https://" @kind object;
  #L12bf90.  v2:= 0I;
  #L12bf92.  v3:= 2I;
  #L12bf94.  v4:= 0I;
  #L12bf96.  call temp:= `startsWith$default`(v0, v1, v2, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L12bf9c.  v0:= temp;
  #L12bf9e.  return v0;
}
procedure `java.util.List` `c`(`okhttp3.Cache$Entry` v7 @kind this, `okio.BufferedSource` v8 @kind object) @signature `Lokhttp3/Cache$Entry;.c:(Lokio/BufferedSource;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L12c028.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L12c02c.  call temp:= `readInt$okhttp`(v0, v8) @signature `Lokhttp3/Cache$Companion;.readInt$okhttp:(Lokio/BufferedSource;)I` @kind virtual;
  #L12c032.  v0:= temp;
  #L12c034.  v1:= -1I;
  #L12c036.  if v0 != v1 then goto L12c044;
  #L12c03a.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L12c040.  v8:= temp @kind object;
  #L12c042.  return v8 @kind object;
  #L12c044.  v1:= "X.509" @kind object;
  #L12c048.  call temp:= `getInstance`(v1) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L12c04e.  v1:= temp @kind object;
  #L12c050.  v2:= new `java.util.ArrayList`;
  #L12c054.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L12c05a.  v3:= 0I;
  #L12c05c.  if v3 >= v0 then goto L12c0a6;
  #L12c060.  call temp:= `readUtf8LineStrict`(v8) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12c066.  v4:= temp @kind object;
  #L12c068.  v5:= new `okio.Buffer`;
  #L12c06c.  call `<init>`(v5) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L12c072.  v6:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L12c076.  call temp:= `decodeBase64`(v6, v4) @signature `Lokio/ByteString$Companion;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L12c07c.  v4:= temp @kind object;
  #L12c07e.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L12c084.  call temp:= `write`(v5, v4) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L12c08a.  call temp:= `inputStream`(v5) @signature `Lokio/Buffer;.inputStream:()Ljava/io/InputStream;` @kind virtual;
  #L12c090.  v4:= temp @kind object;
  #L12c092.  call temp:= `generateCertificate`(v1, v4) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L12c098.  v4:= temp @kind object;
  #L12c09a.  call temp:= `add`(v2, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L12c0a0.  v3:= v3 + 1;
  #L12c0a4.  goto L12c05c;
  #L12c0a6.  return v2 @kind object;
  #L12c0a8.  v8:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L12c0aa.  v0:= new `java.io.IOException`;
  #L12c0ae.  call temp:= `getMessage`(v8) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L12c0b4.  v8:= temp @kind object;
  #L12c0b6.  call `<init>`(v0, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12c0bc.  throw v0;
  catch `java.security.cert.CertificateException` @[L12c044..L12c0a0] goto L12c0a8;
}
procedure `void` `e`(`okhttp3.Cache$Entry` v10 @kind this, `okio.BufferedSink` v11 @kind object, `java.util.List` v12 @kind object) @signature `Lokhttp3/Cache$Entry;.e:(Lokio/BufferedSink;Ljava/util/List;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L12c530.  call temp:= `size`(v12) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L12c536.  v0:= temp;
  #L12c538.  v0:= (`long`) v0 @kind i2l;
  #L12c53a.  call temp:= `writeDecimalLong`(v11, v0) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L12c540.  v0:= temp @kind object;
  #L12c542.  v1:= 10I;
  #L12c546.  call temp:= `writeByte`(v0, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c54c.  v0:= 0I;
  #L12c54e.  call temp:= `size`(v12) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L12c554.  v2:= temp;
  #L12c556.  if v0 >= v2 then goto L12c5a8;
  #L12c55a.  call temp:= `get`(v12, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L12c560.  v3:= temp @kind object;
  #L12c562.  v3:= (`java.security.cert.Certificate`) v3 @kind object;
  #L12c566.  call temp:= `getEncoded`(v3) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L12c56c.  v5:= temp @kind object;
  #L12c56e.  v4:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L12c572.  v3:= "bytes" @kind object;
  #L12c576.  call `checkNotNullExpressionValue`(v5, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12c57c.  v6:= 0I;
  #L12c57e.  v7:= 0I;
  #L12c580.  v8:= 3I;
  #L12c582.  v9:= 0I;
  #L12c584.  call temp:= `of$default`(v4, v5, v6, v7, v8, v9) @signature `Lokio/ByteString$Companion;.of$default:(Lokio/ByteString$Companion;[BIIILjava/lang/Object;)Lokio/ByteString;` @kind static;
  #L12c58a.  v3:= temp @kind object;
  #L12c58c.  call temp:= `base64`(v3) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L12c592.  v3:= temp @kind object;
  #L12c594.  call temp:= `writeUtf8`(v11, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c59a.  v3:= temp @kind object;
  #L12c59c.  call temp:= `writeByte`(v3, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c5a2.  v0:= v0 + 1;
  #L12c5a6.  goto L12c556;
  #L12c5a8.  return @kind void;
  #L12c5aa.  v11:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L12c5ac.  v12:= new `java.io.IOException`;
  #L12c5b0.  call temp:= `getMessage`(v11) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L12c5b6.  v11:= temp @kind object;
  #L12c5b8.  call `<init>`(v12, v11) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12c5be.  throw v12;
  catch `java.security.cert.CertificateEncodingException` @[L12c530..L12c5a2] goto L12c5aa;
}
procedure `boolean` `b`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object, `okhttp3.Response` v4 @kind object) @signature `Lokhttp3/Cache$Entry;.b:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12bfb0.  v0:= "request" @kind object;
  #L12bfb4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bfba.  v0:= "response" @kind object;
  #L12bfbe.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bfc4.  v0:= v2.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` @kind object;
  #L12bfc8.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L12bfce.  v1:= temp @kind object;
  #L12bfd0.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L12bfd6.  v1:= temp @kind object;
  #L12bfd8.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12bfde.  v0:= temp;
  #L12bfe0.  if v0 == 0 then goto L12c014;
  #L12bfe4.  v0:= v2.`okhttp3.Cache$Entry.c` @type ^`java.lang.String` @kind object;
  #L12bfe8.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L12bfee.  v1:= temp @kind object;
  #L12bff0.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12bff6.  v0:= temp;
  #L12bff8.  if v0 == 0 then goto L12c014;
  #L12bffc.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L12c000.  v1:= v2.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L12c004.  call temp:= `varyMatches`(v0, v4, v1, v3) @signature `Lokhttp3/Cache$Companion;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind virtual;
  #L12c00a.  v3:= temp;
  #L12c00c.  if v3 == 0 then goto L12c014;
  #L12c010.  v3:= 1I;
  #L12c012.  goto L12c016;
  #L12c014.  v3:= 0I;
  #L12c016.  return v3;
}
procedure `okhttp3.Response` `d`(`okhttp3.Cache$Entry` v5 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v6 @kind object) @signature `Lokhttp3/Cache$Entry;.d:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L12c0e0.  v0:= "snapshot" @kind object;
  #L12c0e4.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12c0ea.  v0:= v5.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L12c0ee.  v1:= "Content-Type" @kind object;
  #L12c0f2.  call temp:= `get`(v0, v1) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L12c0f8.  v0:= temp @kind object;
  #L12c0fa.  v1:= v5.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L12c0fe.  v2:= "Content-Length" @kind object;
  #L12c102.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L12c108.  v1:= temp @kind object;
  #L12c10a.  v2:= new `okhttp3.Request$Builder`;
  #L12c10e.  call `<init>`(v2) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L12c114.  v3:= v5.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` @kind object;
  #L12c118.  call temp:= `url`(v2, v3) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L12c11e.  v2:= temp @kind object;
  #L12c120.  v3:= v5.`okhttp3.Cache$Entry.c` @type ^`java.lang.String` @kind object;
  #L12c124.  v4:= 0I;
  #L12c126.  call temp:= `method`(v2, v3, v4) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L12c12c.  v2:= temp @kind object;
  #L12c12e.  v3:= v5.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L12c132.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L12c138.  v2:= temp @kind object;
  #L12c13a.  call temp:= `build`(v2) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L12c140.  v2:= temp @kind object;
  #L12c142.  v3:= new `okhttp3.Response$Builder`;
  #L12c146.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L12c14c.  call temp:= `request`(v3, v2) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L12c152.  v2:= temp @kind object;
  #L12c154.  v3:= v5.`okhttp3.Cache$Entry.d` @type ^`okhttp3.Protocol` @kind object;
  #L12c158.  call temp:= `protocol`(v2, v3) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L12c15e.  v2:= temp @kind object;
  #L12c160.  v3:= v5.`okhttp3.Cache$Entry.e` @type ^`int`;
  #L12c164.  call temp:= `code`(v2, v3) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L12c16a.  v2:= temp @kind object;
  #L12c16c.  v3:= v5.`okhttp3.Cache$Entry.f` @type ^`java.lang.String` @kind object;
  #L12c170.  call temp:= `message`(v2, v3) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L12c176.  v2:= temp @kind object;
  #L12c178.  v3:= v5.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L12c17c.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L12c182.  v2:= temp @kind object;
  #L12c184.  v3:= new `okhttp3.Cache$CacheResponseBody`;
  #L12c188.  call `<init>`(v3, v6, v0, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L12c18e.  call temp:= `body`(v2, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L12c194.  v6:= temp @kind object;
  #L12c196.  v0:= v5.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` @kind object;
  #L12c19a.  call temp:= `handshake`(v6, v0) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L12c1a0.  v6:= temp @kind object;
  #L12c1a2.  v0:= v5.`okhttp3.Cache$Entry.i` @type ^`long` @kind wide;
  #L12c1a6.  call temp:= `sentRequestAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L12c1ac.  v6:= temp @kind object;
  #L12c1ae.  v0:= v5.`okhttp3.Cache$Entry.j` @type ^`long` @kind wide;
  #L12c1b2.  call temp:= `receivedResponseAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L12c1b8.  v6:= temp @kind object;
  #L12c1ba.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L12c1c0.  v6:= temp @kind object;
  #L12c1c2.  return v6 @kind object;
}
procedure `void` `f`(`okhttp3.Cache$Entry` v7 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v8 @kind object) @signature `Lokhttp3/Cache$Entry;.f:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L12c5e0.  v0:= "editor" @kind object;
  #L12c5e4.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12c5ea.  v0:= 0I;
  #L12c5ec.  call temp:= `newSink`(v8, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L12c5f2.  v8:= temp @kind object;
  #L12c5f4.  call temp:= `buffer`(v8) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L12c5fa.  v8:= temp @kind object;
  #L12c5fc.  v1:= v7.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` @kind object;
  #L12c600.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c606.  v1:= temp @kind object;
  #L12c608.  v2:= 10I;
  #L12c60c.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c612.  v1:= v7.`okhttp3.Cache$Entry.c` @type ^`java.lang.String` @kind object;
  #L12c616.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c61c.  v1:= temp @kind object;
  #L12c61e.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c624.  v1:= v7.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L12c628.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L12c62e.  v1:= temp;
  #L12c630.  v3:= (`long`) v1 @kind i2l;
  #L12c632.  call temp:= `writeDecimalLong`(v8, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L12c638.  v1:= temp @kind object;
  #L12c63a.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c640.  v1:= v7.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L12c644.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L12c64a.  v1:= temp;
  #L12c64c.  v3:= 0I;
  #L12c64e.  v4:= ": " @kind object;
  #L12c652.  if v3 >= v1 then goto L12c692;
  #L12c656.  v5:= v7.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L12c65a.  call temp:= `name`(v5, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L12c660.  v5:= temp @kind object;
  #L12c662.  call temp:= `writeUtf8`(v8, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c668.  v5:= temp @kind object;
  #L12c66a.  call temp:= `writeUtf8`(v5, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c670.  v4:= temp @kind object;
  #L12c672.  v5:= v7.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L12c676.  call temp:= `value`(v5, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L12c67c.  v5:= temp @kind object;
  #L12c67e.  call temp:= `writeUtf8`(v4, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c684.  v4:= temp @kind object;
  #L12c686.  call temp:= `writeByte`(v4, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c68c.  v3:= v3 + 1;
  #L12c690.  goto L12c64e;
  #L12c692.  v1:= new `okhttp3.internal.http.StatusLine`;
  #L12c696.  v3:= v7.`okhttp3.Cache$Entry.d` @type ^`okhttp3.Protocol` @kind object;
  #L12c69a.  v5:= v7.`okhttp3.Cache$Entry.e` @type ^`int`;
  #L12c69e.  v6:= v7.`okhttp3.Cache$Entry.f` @type ^`java.lang.String` @kind object;
  #L12c6a2.  call `<init>`(v1, v3, v5, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L12c6a8.  call temp:= `toString`(v1) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L12c6ae.  v1:= temp @kind object;
  #L12c6b0.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c6b6.  v1:= temp @kind object;
  #L12c6b8.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c6be.  v1:= v7.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L12c6c2.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L12c6c8.  v1:= temp;
  #L12c6ca.  v1:= v1 + 2;
  #L12c6ce.  v5:= (`long`) v1 @kind i2l;
  #L12c6d0.  call temp:= `writeDecimalLong`(v8, v5) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L12c6d6.  v1:= temp @kind object;
  #L12c6d8.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c6de.  v1:= v7.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L12c6e2.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L12c6e8.  v1:= temp;
  #L12c6ea.  if v0 >= v1 then goto L12c72a;
  #L12c6ee.  v3:= v7.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L12c6f2.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L12c6f8.  v3:= temp @kind object;
  #L12c6fa.  call temp:= `writeUtf8`(v8, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c700.  v3:= temp @kind object;
  #L12c702.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c708.  v3:= temp @kind object;
  #L12c70a.  v5:= v7.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L12c70e.  call temp:= `value`(v5, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L12c714.  v5:= temp @kind object;
  #L12c716.  call temp:= `writeUtf8`(v3, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c71c.  v3:= temp @kind object;
  #L12c71e.  call temp:= `writeByte`(v3, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c724.  v0:= v0 + 1;
  #L12c728.  goto L12c6ea;
  #L12c72a.  v0:= `@@okhttp3.Cache$Entry.k` @type ^`java.lang.String` @kind object;
  #L12c72e.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c734.  v0:= temp @kind object;
  #L12c736.  call temp:= `writeUtf8`(v0, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c73c.  v0:= temp @kind object;
  #L12c73e.  v5:= v7.`okhttp3.Cache$Entry.i` @type ^`long` @kind wide;
  #L12c742.  call temp:= `writeDecimalLong`(v0, v5) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L12c748.  v0:= temp @kind object;
  #L12c74a.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c750.  v0:= `@@okhttp3.Cache$Entry.l` @type ^`java.lang.String` @kind object;
  #L12c754.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c75a.  v0:= temp @kind object;
  #L12c75c.  call temp:= `writeUtf8`(v0, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c762.  v0:= temp @kind object;
  #L12c764.  v3:= v7.`okhttp3.Cache$Entry.j` @type ^`long` @kind wide;
  #L12c768.  call temp:= `writeDecimalLong`(v0, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L12c76e.  v0:= temp @kind object;
  #L12c770.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c776.  call temp:= `a`(v7) @signature `Lokhttp3/Cache$Entry;.a:()Z` @kind direct;
  #L12c77c.  v0:= temp;
  #L12c77e.  if v0 == 0 then goto L12c7f6;
  #L12c782.  call temp:= `writeByte`(v8, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c788.  v0:= v7.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` @kind object;
  #L12c78c.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L12c792.  call temp:= `cipherSuite`(v0) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L12c798.  v0:= temp @kind object;
  #L12c79a.  call temp:= `javaName`(v0) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L12c7a0.  v0:= temp @kind object;
  #L12c7a2.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c7a8.  v0:= temp @kind object;
  #L12c7aa.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c7b0.  v0:= v7.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` @kind object;
  #L12c7b4.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L12c7ba.  v0:= temp @kind object;
  #L12c7bc.  call `e`(v7, v8, v0) @signature `Lokhttp3/Cache$Entry;.e:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L12c7c2.  v0:= v7.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` @kind object;
  #L12c7c6.  call temp:= `localCertificates`(v0) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L12c7cc.  v0:= temp @kind object;
  #L12c7ce.  call `e`(v7, v8, v0) @signature `Lokhttp3/Cache$Entry;.e:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L12c7d4.  v0:= v7.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` @kind object;
  #L12c7d8.  call temp:= `tlsVersion`(v0) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L12c7de.  v0:= temp @kind object;
  #L12c7e0.  call temp:= `javaName`(v0) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L12c7e6.  v0:= temp @kind object;
  #L12c7e8.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L12c7ee.  v0:= temp @kind object;
  #L12c7f0.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L12c7f6.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L12c7fa.  v0:= 0I;
  #L12c7fc.  call `closeFinally`(v8, v0) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L12c802.  return @kind void;
  #L12c804.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12c806.  throw v0;
  #L12c808.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12c80a.  call `closeFinally`(v8, v0) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L12c810.  throw v1;
  catch `java.lang.Throwable` @[L12c5fc..L12c64c] goto L12c804;
  catch `java.lang.Throwable` @[L12c656..L12c7fa] goto L12c804;
  catch `java.lang.Throwable` @[L12c806..L12c808] goto L12c808;
}
