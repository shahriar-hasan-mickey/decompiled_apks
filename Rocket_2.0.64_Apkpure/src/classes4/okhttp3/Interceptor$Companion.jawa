record `okhttp3.Interceptor$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okhttp3.Interceptor$Companion` `@@okhttp3.Interceptor$Companion.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/Interceptor$Companion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L137624.  v0:= new `okhttp3.Interceptor$Companion`;
  #L137628.  call `<init>`(v0) @signature `Lokhttp3/Interceptor$Companion;.<init>:()V` @kind direct;
  #L13762e.  `@@okhttp3.Interceptor$Companion.a` @type ^`okhttp3.Interceptor$Companion` := v0 @kind object;
  #L137632.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Interceptor$Companion` v0 @kind this) @signature `Lokhttp3/Interceptor$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L137644.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13764a.  return @kind void;
}
procedure `okhttp3.Interceptor` `invoke`(`okhttp3.Interceptor$Companion` v1 @kind this, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lokhttp3/Interceptor$Companion;.invoke:(Lkotlin/jvm/functions/Function1;)Lokhttp3/Interceptor;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1375fc.  v0:= "block" @kind object;
  #L137600.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137606.  v0:= new `okhttp3.Interceptor$Companion$invoke$1`;
  #L13760a.  call `<init>`(v0, v2) @signature `Lokhttp3/Interceptor$Companion$invoke$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L137610.  return v0 @kind object;
}
