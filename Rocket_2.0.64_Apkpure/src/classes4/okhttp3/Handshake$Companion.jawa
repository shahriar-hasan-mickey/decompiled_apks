record `okhttp3.Handshake$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Handshake$Companion` v0 @kind this) @signature `Lokhttp3/Handshake$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1330a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1330aa.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Handshake$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/Handshake$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1330bc.  call `<init>`(v0) @signature `Lokhttp3/Handshake$Companion;.<init>:()V` @kind direct;
  #L1330c2.  return @kind void;
}
procedure `java.util.List` `a`(`okhttp3.Handshake$Companion` v1 @kind this, `java.security.cert.Certificate`[] v2 @kind object) @signature `Lokhttp3/Handshake$Companion;.a:([Ljava/security/cert/Certificate;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L132e90.  if v2 == 0 then goto L132eac;
  #L132e94.  v0:= length @variable v2;
  #L132e96.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L132e9c.  v2:= temp @kind object;
  #L132e9e.  v2:= (`java.security.cert.Certificate`[]) v2 @kind object;
  #L132ea2.  call temp:= `immutableListOf`(v2) @signature `Lokhttp3/internal/Util;.immutableListOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L132ea8.  v2:= temp @kind object;
  #L132eaa.  goto L132eb4;
  #L132eac.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L132eb2.  v2:= temp @kind object;
  #L132eb4.  return v2 @kind object;
}
procedure `okhttp3.Handshake` `-deprecated_get`(`okhttp3.Handshake$Companion` v1 @kind this, `javax.net.ssl.SSLSession` v2 @kind object) @signature `Lokhttp3/Handshake$Companion;.-deprecated_get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L132ec8.  v0:= "sslSession" @kind object;
  #L132ecc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L132ed2.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Handshake$Companion;.get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @kind virtual;
  #L132ed8.  v2:= temp @kind object;
  #L132eda.  return v2 @kind object;
}
procedure `okhttp3.Handshake` `get`(`okhttp3.Handshake$Companion` v5 @kind this, `javax.net.ssl.SSLSession` v6 @kind object) @signature `Lokhttp3/Handshake$Companion;.get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L132eec.  v0:= "$this$handshake" @kind object;
  #L132ef0.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L132ef6.  call temp:= `getCipherSuite`(v6) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L132efc.  v0:= temp @kind object;
  #L132efe.  if v0 == 0 then goto L13300c;
  #L132f02.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L132f08.  v1:= temp;
  #L132f0a.  v2:= 1019404634I;
  #L132f10.  if v1 == v2 then goto L132f32;
  #L132f14.  v2:= 1208658923I;
  #L132f1a.  if v1 == v2 then goto L132f20;
  #L132f1e.  goto L132f42;
  #L132f20.  v1:= "SSL_NULL_WITH_NULL_NULL" @kind object;
  #L132f24.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L132f2a.  v1:= temp;
  #L132f2c.  if v1 != 0 then goto L132fde;
  #L132f30.  goto L132f42;
  #L132f32.  v1:= "TLS_NULL_WITH_NULL_NULL" @kind object;
  #L132f36.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L132f3c.  v1:= temp;
  #L132f3e.  if v1 != 0 then goto L132fde;
  #L132f42.  v1:= `@@okhttp3.CipherSuite.Companion` @type ^`okhttp3.CipherSuite$Companion` @kind object;
  #L132f46.  call temp:= `forJavaName`(v1, v0) @signature `Lokhttp3/CipherSuite$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind virtual;
  #L132f4c.  v0:= temp @kind object;
  #L132f4e.  call temp:= `getProtocol`(v6) @signature `Ljavax/net/ssl/SSLSession;.getProtocol:()Ljava/lang/String;` @kind interface;
  #L132f54.  v1:= temp @kind object;
  #L132f56.  if v1 == 0 then goto L132fc6;
  #L132f5a.  v2:= "NONE" @kind object;
  #L132f5e.  call temp:= `areEqual`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L132f64.  v2:= temp;
  #L132f66.  if v2 != 0 then goto L132fb6;
  #L132f6a.  v2:= `@@okhttp3.TlsVersion.Companion` @type ^`okhttp3.TlsVersion$Companion` @kind object;
  #L132f6e.  call temp:= `forJavaName`(v2, v1) @signature `Lokhttp3/TlsVersion$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind virtual;
  #L132f74.  v1:= temp @kind object;
  #L132f76.  call temp:= `getPeerCertificates`(v6) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L132f7c.  v2:= temp @kind object;
  #L132f7e.  call temp:= `a`(v5, v2) @signature `Lokhttp3/Handshake$Companion;.a:([Ljava/security/cert/Certificate;)Ljava/util/List;` @kind direct;
  #L132f84.  v2:= temp @kind object;
  #L132f86.  goto L132f90;
  #L132f88.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L132f8e.  v2:= temp @kind object;
  #L132f90.  v3:= new `okhttp3.Handshake`;
  #L132f94.  call temp:= `getLocalCertificates`(v6) @signature `Ljavax/net/ssl/SSLSession;.getLocalCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L132f9a.  v6:= temp @kind object;
  #L132f9c.  call temp:= `a`(v5, v6) @signature `Lokhttp3/Handshake$Companion;.a:([Ljava/security/cert/Certificate;)Ljava/util/List;` @kind direct;
  #L132fa2.  v6:= temp @kind object;
  #L132fa4.  v4:= new `okhttp3.Handshake$Companion$b`;
  #L132fa8.  call `<init>`(v4, v2) @signature `Lokhttp3/Handshake$Companion$b;.<init>:(Ljava/util/List;)V` @kind direct;
  #L132fae.  call `<init>`(v3, v1, v0, v6, v4) @signature `Lokhttp3/Handshake;.<init>:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L132fb4.  return v3 @kind object;
  #L132fb6.  v6:= new `java.io.IOException`;
  #L132fba.  v0:= "tlsVersion == NONE" @kind object;
  #L132fbe.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L132fc4.  throw v6;
  #L132fc6.  v6:= new `java.lang.IllegalStateException`;
  #L132fca.  v0:= "tlsVersion == null" @kind object;
  #L132fce.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L132fd4.  v0:= temp @kind object;
  #L132fd6.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L132fdc.  throw v6;
  #L132fde.  v6:= new `java.io.IOException`;
  #L132fe2.  v1:= new `java.lang.StringBuilder`;
  #L132fe6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L132fec.  v2:= "cipherSuite == " @kind object;
  #L132ff0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L132ff6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L132ffc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L133002.  v0:= temp @kind object;
  #L133004.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13300a.  throw v6;
  #L13300c.  v6:= new `java.lang.IllegalStateException`;
  #L133010.  v0:= "cipherSuite == null" @kind object;
  #L133014.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13301a.  v0:= temp @kind object;
  #L13301c.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L133022.  throw v6;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L132f76..L132f86] goto L132f88;
}
procedure `okhttp3.Handshake` `get`(`okhttp3.Handshake$Companion` v2 @kind this, `okhttp3.TlsVersion` v3 @kind object, `okhttp3.CipherSuite` v4 @kind object, `java.util.List` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lokhttp3/Handshake$Companion;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L133044.  v0:= "tlsVersion" @kind object;
  #L133048.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13304e.  v0:= "cipherSuite" @kind object;
  #L133052.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133058.  v0:= "peerCertificates" @kind object;
  #L13305c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133062.  v0:= "localCertificates" @kind object;
  #L133066.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13306c.  call temp:= `toImmutableList`(v5) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L133072.  v5:= temp @kind object;
  #L133074.  v0:= new `okhttp3.Handshake`;
  #L133078.  call temp:= `toImmutableList`(v6) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L13307e.  v6:= temp @kind object;
  #L133080.  v1:= new `okhttp3.Handshake$Companion$a`;
  #L133084.  call `<init>`(v1, v5) @signature `Lokhttp3/Handshake$Companion$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L13308a.  call `<init>`(v0, v3, v4, v6, v1) @signature `Lokhttp3/Handshake;.<init>:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L133090.  return v0 @kind object;
}
