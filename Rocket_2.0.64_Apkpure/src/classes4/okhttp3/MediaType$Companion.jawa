record `okhttp3.MediaType$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.MediaType$Companion` v0 @kind this) @signature `Lokhttp3/MediaType$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L13793c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L137942.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/MediaType$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L137954.  call `<init>`(v0) @signature `Lokhttp3/MediaType$Companion;.<init>:()V` @kind direct;
  #L13795a.  return @kind void;
}
procedure `okhttp3.MediaType` `-deprecated_get`(`okhttp3.MediaType$Companion` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MediaType$Companion;.-deprecated_get:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137678.  v0:= "mediaType" @kind object;
  #L13767c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137682.  call temp:= `get`(v1, v2) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L137688.  v2:= temp @kind object;
  #L13768a.  return v2 @kind object;
}
procedure `okhttp3.MediaType` `-deprecated_parse`(`okhttp3.MediaType$Companion` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MediaType$Companion;.-deprecated_parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13769c.  v0:= "mediaType" @kind object;
  #L1376a0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1376a6.  call temp:= `parse`(v1, v2) @signature `Lokhttp3/MediaType$Companion;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L1376ac.  v2:= temp @kind object;
  #L1376ae.  return v2 @kind object;
}
procedure `okhttp3.MediaType` `get`(`okhttp3.MediaType$Companion` v13 @kind this, `java.lang.String` v14 @kind object) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1376c0.  v0:= "$this$toMediaType" @kind object;
  #L1376c4.  call `checkNotNullParameter`(v14, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1376ca.  call temp:= `access$getTYPE_SUBTYPE$cp`() @signature `Lokhttp3/MediaType;.access$getTYPE_SUBTYPE$cp:()Ljava/util/regex/Pattern;` @kind static;
  #L1376d0.  v0:= temp @kind object;
  #L1376d2.  call temp:= `matcher`(v0, v14) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1376d8.  v0:= temp @kind object;
  #L1376da.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L1376e0.  v1:= temp;
  #L1376e2.  v2:= 34I;
  #L1376e6.  if v1 == 0 then goto L1378b6;
  #L1376ea.  v1:= 1I;
  #L1376ec.  call temp:= `group`(v0, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L1376f2.  v3:= temp @kind object;
  #L1376f4.  v4:= "typeSubtype.group(1)" @kind object;
  #L1376f8.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1376fe.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L137702.  v5:= "Locale.US" @kind object;
  #L137706.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13770c.  v6:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L137710.  call temp:= `requireNonNull`(v3, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L137716.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L13771c.  v9:= temp @kind object;
  #L13771e.  v3:= "(this as java.lang.String).toLowerCase(locale)" @kind object;
  #L137722.  call `checkNotNullExpressionValue`(v9, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137728.  v7:= 2I;
  #L13772a.  call temp:= `group`(v0, v7) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L137730.  v8:= temp @kind object;
  #L137732.  v10:= "typeSubtype.group(2)" @kind object;
  #L137736.  call `checkNotNullExpressionValue`(v8, v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13773c.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137742.  call temp:= `requireNonNull`(v8, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L137748.  call temp:= `toLowerCase`(v8, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L13774e.  v10:= temp @kind object;
  #L137750.  call `checkNotNullExpressionValue`(v10, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137756.  v3:= new `java.util.ArrayList`;
  #L13775a.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L137760.  call temp:= `access$getPARAMETER$cp`() @signature `Lokhttp3/MediaType;.access$getPARAMETER$cp:()Ljava/util/regex/Pattern;` @kind static;
  #L137766.  v4:= temp @kind object;
  #L137768.  call temp:= `matcher`(v4, v14) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L13776e.  v4:= temp @kind object;
  #L137770.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L137776.  v0:= temp;
  #L137778.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13777e.  v5:= temp;
  #L137780.  v6:= 0I;
  #L137782.  if v0 >= v5 then goto L137888;
  #L137786.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13778c.  v5:= temp;
  #L13778e.  call temp:= `region`(v4, v0, v5) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L137794.  call temp:= `lookingAt`(v4) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L13779a.  v5:= temp;
  #L13779c.  if v5 == 0 then goto L13782a;
  #L1377a0.  call temp:= `group`(v4, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L1377a6.  v0:= temp @kind object;
  #L1377a8.  if v0 != 0 then goto L1377b6;
  #L1377ac.  call temp:= `end`(v4) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L1377b2.  v0:= temp;
  #L1377b4.  goto L137778;
  #L1377b6.  call temp:= `group`(v4, v7) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L1377bc.  v5:= temp @kind object;
  #L1377be.  if v5 != 0 then goto L1377ce;
  #L1377c2.  v5:= 3I;
  #L1377c4.  call temp:= `group`(v4, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L1377ca.  v5:= temp @kind object;
  #L1377cc.  goto L137814;
  #L1377ce.  v8:= "'" @kind object;
  #L1377d2.  v11:= 0I;
  #L1377d4.  call temp:= `startsWith$default`(v5, v8, v6, v7, v11) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1377da.  v12:= temp;
  #L1377dc.  if v12 == 0 then goto L137814;
  #L1377e0.  call temp:= `endsWith$default`(v5, v8, v6, v7, v11) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1377e6.  v6:= temp;
  #L1377e8.  if v6 == 0 then goto L137814;
  #L1377ec.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1377f2.  v6:= temp;
  #L1377f4.  if v6 <= v7 then goto L137814;
  #L1377f8.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1377fe.  v6:= temp;
  #L137800.  v6:= v6 - v1 @kind int;
  #L137802.  call temp:= `substring`(v5, v1, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L137808.  v5:= temp @kind object;
  #L13780a.  v6:= "(this as java.lang.Strinâ€¦ing(startIndex, endIndex)" @kind object;
  #L13780e.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137814.  call temp:= `add`(v3, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13781a.  call temp:= `add`(v3, v5) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L137820.  call temp:= `end`(v4) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L137826.  v0:= temp;
  #L137828.  goto L137778;
  #L13782a.  v1:= new `java.lang.StringBuilder`;
  #L13782e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L137834.  v3:= "Parameter is not formatted correctly: \"" @kind object;
  #L137838.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13783e.  call temp:= `substring`(v14, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L137844.  v0:= temp @kind object;
  #L137846.  v3:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L13784a.  call `checkNotNullExpressionValue`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137850.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L137856.  v0:= "\" for: \"" @kind object;
  #L13785a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L137860.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L137866.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13786c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L137872.  v14:= temp @kind object;
  #L137874.  v0:= new `java.lang.IllegalArgumentException`;
  #L137878.  call temp:= `toString`(v14) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13787e.  v14:= temp @kind object;
  #L137880.  call `<init>`(v0, v14) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L137886.  throw v0;
  #L137888.  v0:= new `okhttp3.MediaType`;
  #L13788c.  v1:= new `java.lang.String`[v6];
  #L137890.  call temp:= `toArray`(v3, v1) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L137896.  v1:= temp @kind object;
  #L137898.  v2:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L13789c.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1378a2.  v11:= v1 @kind object;
  #L1378a4.  v11:= (`java.lang.String`[]) v11 @kind object;
  #L1378a8.  v12:= 0I;
  #L1378aa.  v7:= v0 @kind object;
  #L1378ac.  v8:= v14 @kind object;
  #L1378ae.  call `<init>`(v7, v8, v9, v10, v11, v12) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1378b4.  return v0 @kind object;
  #L1378b6.  v0:= new `java.lang.StringBuilder`;
  #L1378ba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1378c0.  v1:= "No subtype found for: \"" @kind object;
  #L1378c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1378ca.  call temp:= `append`(v0, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1378d0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1378d6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1378dc.  v14:= temp @kind object;
  #L1378de.  v0:= new `java.lang.IllegalArgumentException`;
  #L1378e2.  call temp:= `toString`(v14) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1378e8.  v14:= temp @kind object;
  #L1378ea.  call `<init>`(v0, v14) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1378f0.  throw v0;
}
procedure `okhttp3.MediaType` `parse`(`okhttp3.MediaType$Companion` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MediaType$Companion;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137904.  v0:= "$this$toMediaTypeOrNull" @kind object;
  #L137908.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13790e.  call temp:= `get`(v1, v2) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L137914.  v2:= temp @kind object;
  #L137916.  goto L13791a;
  #L137918.  v2:= 0I;
  #L13791a.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L13790e..L137916] goto L137918;
}
