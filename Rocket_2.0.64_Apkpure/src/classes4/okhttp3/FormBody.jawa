record `okhttp3.FormBody` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `java.util.List` `okhttp3.FormBody.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.FormBody.b` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.FormBody$Companion` `@@okhttp3.FormBody.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.FormBody.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/FormBody;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L132d48.  v0:= new `okhttp3.FormBody$Companion`;
  #L132d4c.  v1:= 0I;
  #L132d4e.  call `<init>`(v0, v1) @signature `Lokhttp3/FormBody$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L132d54.  `@@okhttp3.FormBody.Companion` @type ^`okhttp3.FormBody$Companion` := v0 @kind object;
  #L132d58.  v0:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L132d5c.  v1:= "application/x-www-form-urlencoded" @kind object;
  #L132d60.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L132d66.  v0:= temp @kind object;
  #L132d68.  `@@okhttp3.FormBody.c` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L132d6c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.FormBody` v1 @kind this, `java.util.List` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/FormBody;.<init>:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L132d80.  v0:= "encodedNames" @kind object;
  #L132d84.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L132d8a.  v0:= "encodedValues" @kind object;
  #L132d8e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L132d94.  call `<init>`(v1) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L132d9a.  call temp:= `toImmutableList`(v2) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L132da0.  v2:= temp @kind object;
  #L132da2.  v1.`okhttp3.FormBody.a` @type ^`java.util.List` := v2 @kind object;
  #L132da6.  call temp:= `toImmutableList`(v3) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L132dac.  v2:= temp @kind object;
  #L132dae.  v1.`okhttp3.FormBody.b` @type ^`java.util.List` := v2 @kind object;
  #L132db2.  return @kind void;
}
procedure `long` `a`(`okhttp3.FormBody` v3 @kind this, `okio.BufferedSink` v4 @kind object, `boolean` v5 ) @signature `Lokhttp3/FormBody;.a:(Lokio/BufferedSink;Z)J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L132c8c.  if v5 == 0 then goto L132c9c;
  #L132c90.  v4:= new `okio.Buffer`;
  #L132c94.  call `<init>`(v4) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L132c9a.  goto L132caa;
  #L132c9c.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L132ca2.  call temp:= `getBuffer`(v4) @signature `Lokio/BufferedSink;.getBuffer:()Lokio/Buffer;` @kind interface;
  #L132ca8.  v4:= temp @kind object;
  #L132caa.  v0:= 0I;
  #L132cac.  v1:= v3.`okhttp3.FormBody.a` @type ^`java.util.List` @kind object;
  #L132cb0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L132cb6.  v1:= temp;
  #L132cb8.  if v0 >= v1 then goto L132d06;
  #L132cbc.  if v0 <= 0 then goto L132cca;
  #L132cc0.  v2:= 38I;
  #L132cc4.  call temp:= `writeByte`(v4, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L132cca.  v2:= v3.`okhttp3.FormBody.a` @type ^`java.util.List` @kind object;
  #L132cce.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L132cd4.  v2:= temp @kind object;
  #L132cd6.  v2:= (`java.lang.String`) v2 @kind object;
  #L132cda.  call temp:= `writeUtf8`(v4, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L132ce0.  v2:= 61I;
  #L132ce4.  call temp:= `writeByte`(v4, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L132cea.  v2:= v3.`okhttp3.FormBody.b` @type ^`java.util.List` @kind object;
  #L132cee.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L132cf4.  v2:= temp @kind object;
  #L132cf6.  v2:= (`java.lang.String`) v2 @kind object;
  #L132cfa.  call temp:= `writeUtf8`(v4, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L132d00.  v0:= v0 + 1;
  #L132d04.  goto L132cb8;
  #L132d06.  if v5 == 0 then goto L132d1a;
  #L132d0a.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L132d10.  v0:= temp @kind wide;
  #L132d12.  call `clear`(v4) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L132d18.  goto L132d1e;
  #L132d1a.  v0:= 0L;
  #L132d1e.  return v0 @kind wide;
}
procedure `int` `-deprecated_size`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.-deprecated_size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L132b88.  call temp:= `size`(v1) @signature `Lokhttp3/FormBody;.size:()I` @kind virtual;
  #L132b8e.  v0:= temp;
  #L132b90.  return v0;
}
procedure `long` `contentLength`(`okhttp3.FormBody` v2 @kind this) @signature `Lokhttp3/FormBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L132c6c.  v0:= 0I;
  #L132c6e.  v1:= 1I;
  #L132c70.  call temp:= `a`(v2, v0, v1) @signature `Lokhttp3/FormBody;.a:(Lokio/BufferedSink;Z)J` @kind direct;
  #L132c76.  v0:= temp @kind wide;
  #L132c78.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L132d30.  v0:= `@@okhttp3.FormBody.c` @type ^`okhttp3.MediaType` @kind object;
  #L132d34.  return v0 @kind object;
}
procedure `java.lang.String` `encodedName`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.encodedName:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L132bc4.  v0:= v1.`okhttp3.FormBody.a` @type ^`java.util.List` @kind object;
  #L132bc8.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L132bce.  v2:= temp @kind object;
  #L132bd0.  v2:= (`java.lang.String`) v2 @kind object;
  #L132bd4.  return v2 @kind object;
}
procedure `java.lang.String` `encodedValue`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.encodedValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L132be8.  v0:= v1.`okhttp3.FormBody.b` @type ^`java.util.List` @kind object;
  #L132bec.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L132bf2.  v2:= temp @kind object;
  #L132bf4.  v2:= (`java.lang.String`) v2 @kind object;
  #L132bf8.  return v2 @kind object;
}
procedure `java.lang.String` `name`(`okhttp3.FormBody` v7 @kind this, `int` v8 ) @signature `Lokhttp3/FormBody;.name:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L132c0c.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L132c10.  call temp:= `encodedName`(v7, v8) @signature `Lokhttp3/FormBody;.encodedName:(I)Ljava/lang/String;` @kind virtual;
  #L132c16.  v1:= temp @kind object;
  #L132c18.  v2:= 0I;
  #L132c1a.  v3:= 0I;
  #L132c1c.  v4:= 1I;
  #L132c1e.  v5:= 3I;
  #L132c20.  v6:= 0I;
  #L132c22.  call temp:= `percentDecode$okhttp$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl$Companion;.percentDecode$okhttp$default:(Lokhttp3/HttpUrl$Companion;Ljava/lang/String;IIZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L132c28.  v8:= temp @kind object;
  #L132c2a.  return v8 @kind object;
}
procedure `int` `size`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L132ba4.  v0:= v1.`okhttp3.FormBody.a` @type ^`java.util.List` @kind object;
  #L132ba8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L132bae.  v0:= temp;
  #L132bb0.  return v0;
}
procedure `java.lang.String` `value`(`okhttp3.FormBody` v7 @kind this, `int` v8 ) @signature `Lokhttp3/FormBody;.value:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L132c3c.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L132c40.  call temp:= `encodedValue`(v7, v8) @signature `Lokhttp3/FormBody;.encodedValue:(I)Ljava/lang/String;` @kind virtual;
  #L132c46.  v1:= temp @kind object;
  #L132c48.  v2:= 0I;
  #L132c4a.  v3:= 0I;
  #L132c4c.  v4:= 1I;
  #L132c4e.  v5:= 3I;
  #L132c50.  v6:= 0I;
  #L132c52.  call temp:= `percentDecode$okhttp$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl$Companion;.percentDecode$okhttp$default:(Lokhttp3/HttpUrl$Companion;Ljava/lang/String;IIZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L132c58.  v8:= temp @kind object;
  #L132c5a.  return v8 @kind object;
}
procedure `void` `writeTo`(`okhttp3.FormBody` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lokhttp3/FormBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L132dc4.  v0:= "sink" @kind object;
  #L132dc8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L132dce.  v0:= 0I;
  #L132dd0.  call temp:= `a`(v1, v2, v0) @signature `Lokhttp3/FormBody;.a:(Lokio/BufferedSink;Z)J` @kind direct;
  #L132dd6.  return @kind void;
}
