record `okhttp3.CacheControl$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.CacheControl$Builder.a` @AccessFlag PRIVATE;
  `boolean` `okhttp3.CacheControl$Builder.b` @AccessFlag PRIVATE;
  `int` `okhttp3.CacheControl$Builder.c` @AccessFlag PRIVATE;
  `int` `okhttp3.CacheControl$Builder.d` @AccessFlag PRIVATE;
  `int` `okhttp3.CacheControl$Builder.e` @AccessFlag PRIVATE;
  `boolean` `okhttp3.CacheControl$Builder.f` @AccessFlag PRIVATE;
  `boolean` `okhttp3.CacheControl$Builder.g` @AccessFlag PRIVATE;
  `boolean` `okhttp3.CacheControl$Builder.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12cde4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12cdea.  v0:= -1I;
  #L12cdec.  v1.`okhttp3.CacheControl$Builder.c` @type ^`int` := v0;
  #L12cdf0.  v1.`okhttp3.CacheControl$Builder.d` @type ^`int` := v0;
  #L12cdf4.  v1.`okhttp3.CacheControl$Builder.e` @type ^`int` := v0;
  #L12cdf8.  return @kind void;
}
procedure `int` `a`(`okhttp3.CacheControl$Builder` v4 @kind this, `long` v5 ) @signature `Lokhttp3/CacheControl$Builder;.a:(J)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12cb8c.  v0:= 2147483647I;
  #L12cb92.  v1:= (`long`) v0 @kind i2l;
  #L12cb94.  v3:= lcmp(v5, v1);
  #L12cb98.  if v3 <= 0 then goto L12cb9e;
  #L12cb9c.  goto L12cba0;
  #L12cb9e.  v0:= (`int`) v5 @kind l2i;
  #L12cba0.  return v0;
}
procedure `okhttp3.CacheControl` `build`(`okhttp3.CacheControl$Builder` v17 @kind this) @signature `Lokhttp3/CacheControl$Builder;.build:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L12cbb4.  v0:= v17 @kind object;
  #L12cbb8.  v16:= new `okhttp3.CacheControl`;
  #L12cbbc.  v2:= v0.`okhttp3.CacheControl$Builder.a` @type ^`boolean` @kind boolean;
  #L12cbc0.  v3:= v0.`okhttp3.CacheControl$Builder.b` @type ^`boolean` @kind boolean;
  #L12cbc4.  v4:= v0.`okhttp3.CacheControl$Builder.c` @type ^`int`;
  #L12cbc8.  v9:= v0.`okhttp3.CacheControl$Builder.d` @type ^`int`;
  #L12cbcc.  v10:= v0.`okhttp3.CacheControl$Builder.e` @type ^`int`;
  #L12cbd0.  v11:= v0.`okhttp3.CacheControl$Builder.f` @type ^`boolean` @kind boolean;
  #L12cbd4.  v12:= v0.`okhttp3.CacheControl$Builder.g` @type ^`boolean` @kind boolean;
  #L12cbd8.  v13:= v0.`okhttp3.CacheControl$Builder.h` @type ^`boolean` @kind boolean;
  #L12cbdc.  v5:= -1I;
  #L12cbde.  v6:= 0I;
  #L12cbe0.  v7:= 0I;
  #L12cbe2.  v8:= 0I;
  #L12cbe4.  v14:= 0I;
  #L12cbe6.  v15:= 0I;
  #L12cbe8.  v1:= v16 @kind object;
  #L12cbec.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/CacheControl;.<init>:(ZZIIZZZIIZZZLjava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L12cbf2.  return v16 @kind object;
}
procedure `okhttp3.CacheControl$Builder` `immutable`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.immutable:()Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12cc04.  v0:= 1I;
  #L12cc06.  v1.`okhttp3.CacheControl$Builder.h` @type ^`boolean` := v0 @kind boolean;
  #L12cc0a.  return v1 @kind object;
}
procedure `okhttp3.CacheControl$Builder` `maxAge`(`okhttp3.CacheControl$Builder` v2 @kind this, `int` v3 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lokhttp3/CacheControl$Builder;.maxAge:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12cc1c.  v0:= "timeUnit" @kind object;
  #L12cc20.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12cc26.  if v3 < 0 then goto L12cc2e;
  #L12cc2a.  v0:= 1I;
  #L12cc2c.  goto L12cc30;
  #L12cc2e.  v0:= 0I;
  #L12cc30.  if v0 == 0 then goto L12cc4c;
  #L12cc34.  v0:= (`long`) v3 @kind i2l;
  #L12cc36.  call temp:= `toSeconds`(v4, v0) @signature `Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J` @kind virtual;
  #L12cc3c.  v3:= temp @kind wide;
  #L12cc3e.  call temp:= `a`(v2, v3) @signature `Lokhttp3/CacheControl$Builder;.a:(J)I` @kind direct;
  #L12cc44.  v3:= temp;
  #L12cc46.  v2.`okhttp3.CacheControl$Builder.c` @type ^`int` := v3;
  #L12cc4a.  return v2 @kind object;
  #L12cc4c.  v4:= new `java.lang.StringBuilder`;
  #L12cc50.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12cc56.  v0:= "maxAge < 0: " @kind object;
  #L12cc5a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12cc60.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L12cc66.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12cc6c.  v3:= temp @kind object;
  #L12cc6e.  v4:= new `java.lang.IllegalArgumentException`;
  #L12cc72.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L12cc78.  v3:= temp @kind object;
  #L12cc7a.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12cc80.  throw v4;
}
procedure `okhttp3.CacheControl$Builder` `maxStale`(`okhttp3.CacheControl$Builder` v2 @kind this, `int` v3 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lokhttp3/CacheControl$Builder;.maxStale:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12cc94.  v0:= "timeUnit" @kind object;
  #L12cc98.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12cc9e.  if v3 < 0 then goto L12cca6;
  #L12cca2.  v0:= 1I;
  #L12cca4.  goto L12cca8;
  #L12cca6.  v0:= 0I;
  #L12cca8.  if v0 == 0 then goto L12ccc4;
  #L12ccac.  v0:= (`long`) v3 @kind i2l;
  #L12ccae.  call temp:= `toSeconds`(v4, v0) @signature `Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J` @kind virtual;
  #L12ccb4.  v3:= temp @kind wide;
  #L12ccb6.  call temp:= `a`(v2, v3) @signature `Lokhttp3/CacheControl$Builder;.a:(J)I` @kind direct;
  #L12ccbc.  v3:= temp;
  #L12ccbe.  v2.`okhttp3.CacheControl$Builder.d` @type ^`int` := v3;
  #L12ccc2.  return v2 @kind object;
  #L12ccc4.  v4:= new `java.lang.StringBuilder`;
  #L12ccc8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12ccce.  v0:= "maxStale < 0: " @kind object;
  #L12ccd2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12ccd8.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L12ccde.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12cce4.  v3:= temp @kind object;
  #L12cce6.  v4:= new `java.lang.IllegalArgumentException`;
  #L12ccea.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L12ccf0.  v3:= temp @kind object;
  #L12ccf2.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12ccf8.  throw v4;
}
procedure `okhttp3.CacheControl$Builder` `minFresh`(`okhttp3.CacheControl$Builder` v2 @kind this, `int` v3 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lokhttp3/CacheControl$Builder;.minFresh:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12cd0c.  v0:= "timeUnit" @kind object;
  #L12cd10.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12cd16.  if v3 < 0 then goto L12cd1e;
  #L12cd1a.  v0:= 1I;
  #L12cd1c.  goto L12cd20;
  #L12cd1e.  v0:= 0I;
  #L12cd20.  if v0 == 0 then goto L12cd3c;
  #L12cd24.  v0:= (`long`) v3 @kind i2l;
  #L12cd26.  call temp:= `toSeconds`(v4, v0) @signature `Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J` @kind virtual;
  #L12cd2c.  v3:= temp @kind wide;
  #L12cd2e.  call temp:= `a`(v2, v3) @signature `Lokhttp3/CacheControl$Builder;.a:(J)I` @kind direct;
  #L12cd34.  v3:= temp;
  #L12cd36.  v2.`okhttp3.CacheControl$Builder.e` @type ^`int` := v3;
  #L12cd3a.  return v2 @kind object;
  #L12cd3c.  v4:= new `java.lang.StringBuilder`;
  #L12cd40.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12cd46.  v0:= "minFresh < 0: " @kind object;
  #L12cd4a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12cd50.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L12cd56.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12cd5c.  v3:= temp @kind object;
  #L12cd5e.  v4:= new `java.lang.IllegalArgumentException`;
  #L12cd62.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L12cd68.  v3:= temp @kind object;
  #L12cd6a.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12cd70.  throw v4;
}
procedure `okhttp3.CacheControl$Builder` `noCache`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.noCache:()Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12cd84.  v0:= 1I;
  #L12cd86.  v1.`okhttp3.CacheControl$Builder.a` @type ^`boolean` := v0 @kind boolean;
  #L12cd8a.  return v1 @kind object;
}
procedure `okhttp3.CacheControl$Builder` `noStore`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.noStore:()Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12cd9c.  v0:= 1I;
  #L12cd9e.  v1.`okhttp3.CacheControl$Builder.b` @type ^`boolean` := v0 @kind boolean;
  #L12cda2.  return v1 @kind object;
}
procedure `okhttp3.CacheControl$Builder` `noTransform`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.noTransform:()Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12cdb4.  v0:= 1I;
  #L12cdb6.  v1.`okhttp3.CacheControl$Builder.g` @type ^`boolean` := v0 @kind boolean;
  #L12cdba.  return v1 @kind object;
}
procedure `okhttp3.CacheControl$Builder` `onlyIfCached`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.onlyIfCached:()Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12cdcc.  v0:= 1I;
  #L12cdce.  v1.`okhttp3.CacheControl$Builder.f` @type ^`boolean` := v0 @kind boolean;
  #L12cdd2.  return v1 @kind object;
}
