record `okhttp3.Cache$urls$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Iterator` @kind interface, `kotlin.jvm.internal.markers.KMutableIterator` @kind interface {
  `java.util.Iterator` `okhttp3.Cache$urls$1.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$urls$1.b` @AccessFlag PRIVATE;
  `boolean` `okhttp3.Cache$urls$1.c` @AccessFlag PRIVATE;
  `okhttp3.Cache` `okhttp3.Cache$urls$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$urls$1` v0 @kind this, `okhttp3.Cache` v1 @kind object) @signature `Lokhttp3/Cache$urls$1;.<init>:(Lokhttp3/Cache;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L12cb20.  v0.`okhttp3.Cache$urls$1.d` @type ^`okhttp3.Cache` := v1 @kind object;
  #L12cb24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12cb2a.  call temp:= `getCache$okhttp`(v1) @signature `Lokhttp3/Cache;.getCache$okhttp:()Lokhttp3/internal/cache/DiskLruCache;` @kind virtual;
  #L12cb30.  v1:= temp @kind object;
  #L12cb32.  call temp:= `snapshots`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.snapshots:()Ljava/util/Iterator;` @kind virtual;
  #L12cb38.  v1:= temp @kind object;
  #L12cb3a.  v0.`okhttp3.Cache$urls$1.a` @type ^`java.util.Iterator` := v1 @kind object;
  #L12cb3e.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.Cache$urls$1` v5 @kind this) @signature `Lokhttp3/Cache$urls$1;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L12ca0c.  v0:= v5.`okhttp3.Cache$urls$1.b` @type ^`java.lang.String` @kind object;
  #L12ca10.  v1:= 1I;
  #L12ca12.  if v0 == 0 then goto L12ca18;
  #L12ca16.  return v1;
  #L12ca18.  v0:= 0I;
  #L12ca1a.  v5.`okhttp3.Cache$urls$1.c` @type ^`boolean` := v0 @kind boolean;
  #L12ca1e.  v2:= v5.`okhttp3.Cache$urls$1.a` @type ^`java.util.Iterator` @kind object;
  #L12ca22.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12ca28.  v2:= temp;
  #L12ca2a.  if v2 == 0 then goto L12ca7c;
  #L12ca2e.  v2:= v5.`okhttp3.Cache$urls$1.a` @type ^`java.util.Iterator` @kind object;
  #L12ca32.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12ca38.  v2:= temp @kind object;
  #L12ca3a.  v2:= (`java.io.Closeable`) v2 @kind object;
  #L12ca3e.  v3:= 0I;
  #L12ca40.  v4:= v2 @kind object;
  #L12ca42.  v4:= (`okhttp3.internal.cache.DiskLruCache$Snapshot`) v4 @kind object;
  #L12ca46.  call temp:= `getSource`(v4, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L12ca4c.  v4:= temp @kind object;
  #L12ca4e.  call temp:= `buffer`(v4) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L12ca54.  v4:= temp @kind object;
  #L12ca56.  call temp:= `readUtf8LineStrict`(v4) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L12ca5c.  v4:= temp @kind object;
  #L12ca5e.  v5.`okhttp3.Cache$urls$1.b` @type ^`java.lang.String` := v4 @kind object;
  #L12ca62.  call `closeFinally`(v2, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L12ca68.  return v1;
  #L12ca6a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12ca6c.  throw v3;
  #L12ca6e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12ca70.  call `closeFinally`(v2, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L12ca76.  throw v4;
  #L12ca78.  
  #L12ca7a.  goto L12ca1e;
  #L12ca7c.  return v0;
  catch `java.io.IOException` @[L12ca2e..L12ca3e] goto L12ca78;
  catch `java.lang.Throwable` @[L12ca40..L12ca62] goto L12ca6a;
  catch `java.io.IOException` @[L12ca62..L12ca68] goto L12ca78;
  catch `java.lang.Throwable` @[L12ca6c..L12ca6e] goto L12ca6e;
  catch `java.io.IOException` @[L12ca70..L12ca78] goto L12ca78;
}
procedure `java.lang.Object` `next`(`okhttp3.Cache$urls$1` v1 @kind this) @signature `Lokhttp3/Cache$urls$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L12cac4.  call temp:= `next`(v1) @signature `Lokhttp3/Cache$urls$1;.next:()Ljava/lang/String;` @kind virtual;
  #L12caca.  v0:= temp @kind object;
  #L12cacc.  return v0 @kind object;
}
procedure `java.lang.String` `next`(`okhttp3.Cache$urls$1` v2 @kind this) @signature `Lokhttp3/Cache$urls$1;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12cae0.  call temp:= `hasNext`(v2) @signature `Lokhttp3/Cache$urls$1;.hasNext:()Z` @kind virtual;
  #L12cae6.  v0:= temp;
  #L12cae8.  if v0 == 0 then goto L12cb04;
  #L12caec.  v0:= v2.`okhttp3.Cache$urls$1.b` @type ^`java.lang.String` @kind object;
  #L12caf0.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L12caf6.  v1:= 0I;
  #L12caf8.  v2.`okhttp3.Cache$urls$1.b` @type ^`java.lang.String` := v1 @kind object;
  #L12cafc.  v1:= 1I;
  #L12cafe.  v2.`okhttp3.Cache$urls$1.c` @type ^`boolean` := v1 @kind boolean;
  #L12cb02.  return v0 @kind object;
  #L12cb04.  v0:= new `java.util.NoSuchElementException`;
  #L12cb08.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L12cb0e.  throw v0;
}
procedure `void` `remove`(`okhttp3.Cache$urls$1` v2 @kind this) @signature `Lokhttp3/Cache$urls$1;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12cb50.  v0:= v2.`okhttp3.Cache$urls$1.c` @type ^`boolean` @kind boolean;
  #L12cb54.  if v0 == 0 then goto L12cb64;
  #L12cb58.  v0:= v2.`okhttp3.Cache$urls$1.a` @type ^`java.util.Iterator` @kind object;
  #L12cb5c.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L12cb62.  return @kind void;
  #L12cb64.  v0:= new `java.lang.IllegalStateException`;
  #L12cb68.  v1:= "remove() before next()" @kind object;
  #L12cb6c.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L12cb72.  v1:= temp @kind object;
  #L12cb74.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12cb7a.  throw v0;
}
