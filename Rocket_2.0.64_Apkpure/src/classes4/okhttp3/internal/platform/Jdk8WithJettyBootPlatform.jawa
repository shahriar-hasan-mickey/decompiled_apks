record `okhttp3.internal.platform.Jdk8WithJettyBootPlatform` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.g` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion` `@@okhttp3.internal.platform.Jdk8WithJettyBootPlatform.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1585dc.  v0:= new `okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion`;
  #L1585e0.  v1:= 0I;
  #L1585e2.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1585e8.  `@@okhttp3.internal.platform.Jdk8WithJettyBootPlatform.Companion` @type ^`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion` := v0 @kind object;
  #L1585ec.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v1 @kind this, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.reflect.Method` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L158600.  v0:= "putMethod" @kind object;
  #L158604.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15860a.  v0:= "getMethod" @kind object;
  #L15860e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L158614.  v0:= "removeMethod" @kind object;
  #L158618.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15861e.  v0:= "clientProviderClass" @kind object;
  #L158622.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L158628.  v0:= "serverProviderClass" @kind object;
  #L15862c.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L158632.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L158638.  v1.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.c` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L15863c.  v1.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.d` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L158640.  v1.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.e` @type ^`java.lang.reflect.Method` := v4 @kind object;
  #L158644.  v1.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.f` @type ^`java.lang.Class` := v5 @kind object;
  #L158648.  v1.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.g` @type ^`java.lang.Class` := v6 @kind object;
  #L15864c.  return @kind void;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L158660.  v0:= "failed to remove ALPN" @kind object;
  #L158664.  v1:= "sslSocket" @kind object;
  #L158668.  call `checkNotNullParameter`(v6, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15866e.  v1:= v5.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.e` @type ^`java.lang.reflect.Method` @kind object;
  #L158672.  v2:= 0I;
  #L158674.  v3:= 1I;
  #L158676.  v3:= new `java.lang.Object`[v3];
  #L15867a.  v4:= 0I;
  #L15867c.  v3[v4]:= v6 @kind object;
  #L158680.  call temp:= `invoke`(v1, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L158686.  return @kind void;
  #L158688.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L15868a.  v1:= new `java.lang.AssertionError`;
  #L15868e.  call `<init>`(v1, v0, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L158694.  throw v1;
  #L158696.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L158698.  v1:= new `java.lang.AssertionError`;
  #L15869c.  call `<init>`(v1, v0, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1586a2.  throw v1;
  catch `java.lang.IllegalAccessException` @[L15866e..L158686] goto L158696;
  catch `java.lang.reflect.InvocationTargetException` @[L15866e..L158686] goto L158688;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v6 @kind this, `javax.net.ssl.SSLSocket` v7 @kind object, `java.lang.String` v8 @kind object, `java.util.List` v9 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1586c4.  v8:= "failed to set ALPN" @kind object;
  #L1586c8.  v0:= "sslSocket" @kind object;
  #L1586cc.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1586d2.  v0:= "protocols" @kind object;
  #L1586d6.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1586dc.  v0:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1586e0.  call temp:= `alpnProtocolNames`(v0, v9) @signature `Lokhttp3/internal/platform/Platform$Companion;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L1586e6.  v9:= temp @kind object;
  #L1586e8.  v0:= constclass @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L1586ec.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1586f2.  v0:= temp @kind object;
  #L1586f4.  v1:= 2I;
  #L1586f6.  v2:= new `java.lang.Class`[v1];
  #L1586fa.  v3:= v6.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.f` @type ^`java.lang.Class` @kind object;
  #L1586fe.  v4:= 0I;
  #L158700.  v2[v4]:= v3 @kind object;
  #L158704.  v3:= v6.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.g` @type ^`java.lang.Class` @kind object;
  #L158708.  v5:= 1I;
  #L15870a.  v2[v5]:= v3 @kind object;
  #L15870e.  v3:= new `okhttp3.internal.platform.Jdk8WithJettyBootPlatform$a`;
  #L158712.  call `<init>`(v3, v9) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L158718.  call temp:= `newProxyInstance`(v0, v2, v3) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L15871e.  v9:= temp @kind object;
  #L158720.  v0:= v6.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.c` @type ^`java.lang.reflect.Method` @kind object;
  #L158724.  v2:= 0I;
  #L158726.  v1:= new `java.lang.Object`[v1];
  #L15872a.  v1[v4]:= v7 @kind object;
  #L15872e.  v1[v5]:= v9 @kind object;
  #L158732.  call temp:= `invoke`(v0, v2, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L158738.  return @kind void;
  #L15873a.  v7:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L15873c.  v9:= new `java.lang.AssertionError`;
  #L158740.  call `<init>`(v9, v8, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L158746.  throw v9;
  #L158748.  v7:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L15874a.  v9:= new `java.lang.AssertionError`;
  #L15874e.  call `<init>`(v9, v8, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L158754.  throw v9;
  catch `java.lang.reflect.InvocationTargetException` @[L1586e8..L158738] goto L158748;
  catch `java.lang.IllegalAccessException` @[L1586e8..L158738] goto L15873a;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v9 @kind this, `javax.net.ssl.SSLSocket` v10 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L158510.  v0:= "failed to get ALPN selected protocol" @kind object;
  #L158514.  v1:= "sslSocket" @kind object;
  #L158518.  call `checkNotNullParameter`(v10, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15851e.  v1:= v9.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.d` @type ^`java.lang.reflect.Method` @kind object;
  #L158522.  v2:= 1I;
  #L158524.  v2:= new `java.lang.Object`[v2];
  #L158528.  v3:= 0I;
  #L15852a.  v2[v3]:= v10 @kind object;
  #L15852e.  v10:= 0I;
  #L158530.  call temp:= `invoke`(v1, v10, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L158536.  v1:= temp @kind object;
  #L158538.  call temp:= `getInvocationHandler`(v1) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L15853e.  v1:= temp @kind object;
  #L158540.  if v1 == 0 then goto L15858e;
  #L158544.  v1:= (`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$a`) v1 @kind object;
  #L158548.  call temp:= `b`(v1) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$a;.b:()Z` @kind virtual;
  #L15854e.  v2:= temp;
  #L158550.  if v2 != 0 then goto L158576;
  #L158554.  call temp:= `a`(v1) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$a;.a:()Ljava/lang/String;` @kind virtual;
  #L15855a.  v2:= temp @kind object;
  #L15855c.  if v2 != 0 then goto L158576;
  #L158560.  v4:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L158564.  v5:= 0I;
  #L158566.  v6:= 0I;
  #L158568.  v7:= 6I;
  #L15856a.  v8:= 0I;
  #L15856c.  v3:= v9 @kind object;
  #L15856e.  call `log$default`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/platform/Platform;.log$default:(Lokhttp3/internal/platform/Platform;Ljava/lang/String;ILjava/lang/Throwable;ILjava/lang/Object;)V` @kind static;
  #L158574.  return v10 @kind object;
  #L158576.  call temp:= `b`(v1) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$a;.b:()Z` @kind virtual;
  #L15857c.  v2:= temp;
  #L15857e.  if v2 == 0 then goto L158584;
  #L158582.  goto L15858c;
  #L158584.  call temp:= `a`(v1) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$a;.a:()Ljava/lang/String;` @kind virtual;
  #L15858a.  v10:= temp @kind object;
  #L15858c.  return v10 @kind object;
  #L15858e.  v10:= new `java.lang.NullPointerException`;
  #L158592.  v1:= "null cannot be cast to non-null type okhttp3.internal.platform.Jdk8WithJettyBootPlatform.AlpnProvider" @kind object;
  #L158596.  call `<init>`(v10, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15859c.  throw v10;
  #L15859e.  v10:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1585a0.  v1:= new `java.lang.AssertionError`;
  #L1585a4.  call `<init>`(v1, v0, v10) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1585aa.  throw v1;
  #L1585ac.  v10:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1585ae.  v1:= new `java.lang.AssertionError`;
  #L1585b2.  call `<init>`(v1, v0, v10) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1585b8.  throw v1;
  catch `java.lang.reflect.InvocationTargetException` @[L15851e..L15859e] goto L1585ac;
  catch `java.lang.IllegalAccessException` @[L15851e..L15859e] goto L15859e;
}
