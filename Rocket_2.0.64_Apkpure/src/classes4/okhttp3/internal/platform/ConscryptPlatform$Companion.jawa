record `okhttp3.internal.platform.ConscryptPlatform$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v0 @kind this) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L157ddc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L157de2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L157df4.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.<init>:()V` @kind direct;
  #L157dfa.  return @kind void;
}
procedure `boolean` `atLeastVersion$default`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.atLeastVersion$default:(Lokhttp3/internal/platform/ConscryptPlatform$Companion;IIIILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L157cf8.  v6:= v5 ^& 2;
  #L157cfc.  v0:= 0I;
  #L157cfe.  if v6 == 0 then goto L157d04;
  #L157d02.  v3:= 0I;
  #L157d04.  v5:= v5 ^& 4;
  #L157d08.  if v5 == 0 then goto L157d0e;
  #L157d0c.  v4:= 0I;
  #L157d0e.  call temp:= `atLeastVersion`(v1, v2, v3, v4) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.atLeastVersion:(III)Z` @kind virtual;
  #L157d14.  v1:= temp;
  #L157d16.  return v1;
}
procedure `boolean` `atLeastVersion`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v4 @kind this, `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.atLeastVersion:(III)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L157d28.  call temp:= `version`() @signature `Lorg/conscrypt/Conscrypt;.version:()Lorg/conscrypt/Conscrypt$Version;` @kind static;
  #L157d2e.  v0:= temp @kind object;
  #L157d30.  call temp:= `major`(v0) @signature `Lorg/conscrypt/Conscrypt$Version;.major:()I` @kind virtual;
  #L157d36.  v1:= temp;
  #L157d38.  v2:= 1I;
  #L157d3a.  v3:= 0I;
  #L157d3c.  if v1 == v5 then goto L157d52;
  #L157d40.  call temp:= `major`(v0) @signature `Lorg/conscrypt/Conscrypt$Version;.major:()I` @kind virtual;
  #L157d46.  v6:= temp;
  #L157d48.  if v6 <= v5 then goto L157d4e;
  #L157d4c.  goto L157d50;
  #L157d4e.  v2:= 0I;
  #L157d50.  return v2;
  #L157d52.  call temp:= `minor`(v0) @signature `Lorg/conscrypt/Conscrypt$Version;.minor:()I` @kind virtual;
  #L157d58.  v5:= temp;
  #L157d5a.  if v5 == v6 then goto L157d70;
  #L157d5e.  call temp:= `minor`(v0) @signature `Lorg/conscrypt/Conscrypt$Version;.minor:()I` @kind virtual;
  #L157d64.  v5:= temp;
  #L157d66.  if v5 <= v6 then goto L157d6c;
  #L157d6a.  goto L157d6e;
  #L157d6c.  v2:= 0I;
  #L157d6e.  return v2;
  #L157d70.  call temp:= `patch`(v0) @signature `Lorg/conscrypt/Conscrypt$Version;.patch:()I` @kind virtual;
  #L157d76.  v5:= temp;
  #L157d78.  if v5 < v7 then goto L157d7e;
  #L157d7c.  goto L157d80;
  #L157d7e.  v2:= 0I;
  #L157d80.  return v2;
}
procedure `okhttp3.internal.platform.ConscryptPlatform` `buildIfSupported`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v2 @kind this) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.buildIfSupported:()Lokhttp3/internal/platform/ConscryptPlatform;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L157db0.  call temp:= `isSupported`(v2) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.isSupported:()Z` @kind virtual;
  #L157db6.  v0:= temp;
  #L157db8.  v1:= 0I;
  #L157dba.  if v0 == 0 then goto L157dca;
  #L157dbe.  v0:= new `okhttp3.internal.platform.ConscryptPlatform`;
  #L157dc2.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L157dc8.  v1:= v0 @kind object;
  #L157dca.  return v1 @kind object;
}
procedure `boolean` `isSupported`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v1 @kind this) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.isSupported:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L157d94.  call temp:= `access$isSupported$cp`() @signature `Lokhttp3/internal/platform/ConscryptPlatform;.access$isSupported$cp:()Z` @kind static;
  #L157d9a.  v0:= temp;
  #L157d9c.  return v0;
}
