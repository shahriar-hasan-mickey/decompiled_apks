record `okhttp3.internal.platform.android.AndroidLog` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okhttp3.internal.platform.android.AndroidLog` `@@okhttp3.internal.platform.android.AndroidLog.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.concurrent.CopyOnWriteArraySet` `@@okhttp3.internal.platform.android.AndroidLog.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@okhttp3.internal.platform.android.AndroidLog.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/android/AndroidLog;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L159b00.  v0:= new `okhttp3.internal.platform.android.AndroidLog`;
  #L159b04.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/android/AndroidLog;.<init>:()V` @kind direct;
  #L159b0a.  `@@okhttp3.internal.platform.android.AndroidLog.INSTANCE` @type ^`okhttp3.internal.platform.android.AndroidLog` := v0 @kind object;
  #L159b0e.  v0:= new `java.util.concurrent.CopyOnWriteArraySet`;
  #L159b12.  call `<init>`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArraySet;.<init>:()V` @kind direct;
  #L159b18.  `@@okhttp3.internal.platform.android.AndroidLog.a` @type ^`java.util.concurrent.CopyOnWriteArraySet` := v0 @kind object;
  #L159b1c.  v0:= new `java.util.LinkedHashMap`;
  #L159b20.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L159b26.  v1:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L159b2a.  call temp:= `getPackage`(v1) @signature `Ljava/lang/Class;.getPackage:()Ljava/lang/Package;` @kind virtual;
  #L159b30.  v1:= temp @kind object;
  #L159b32.  if v1 == 0 then goto L159b40;
  #L159b36.  call temp:= `getName`(v1) @signature `Ljava/lang/Package;.getName:()Ljava/lang/String;` @kind virtual;
  #L159b3c.  v1:= temp @kind object;
  #L159b3e.  goto L159b42;
  #L159b40.  v1:= 0I;
  #L159b42.  if v1 == 0 then goto L159b50;
  #L159b46.  v2:= "OkHttp" @kind object;
  #L159b4a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L159b50.  v1:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L159b54.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L159b5a.  v1:= temp @kind object;
  #L159b5c.  v2:= "OkHttpClient::class.java.name" @kind object;
  #L159b60.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159b66.  v2:= "okhttp.OkHttpClient" @kind object;
  #L159b6a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L159b70.  v1:= constclass @type ^`okhttp3.internal.http2.Http2` @kind object;
  #L159b74.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L159b7a.  v1:= temp @kind object;
  #L159b7c.  v2:= "Http2::class.java.name" @kind object;
  #L159b80.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159b86.  v2:= "okhttp.Http2" @kind object;
  #L159b8a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L159b90.  v1:= constclass @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L159b94.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L159b9a.  v1:= temp @kind object;
  #L159b9c.  v2:= "TaskRunner::class.java.name" @kind object;
  #L159ba0.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159ba6.  v2:= "okhttp.TaskRunner" @kind object;
  #L159baa.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L159bb0.  v1:= "okhttp3.mockwebserver.MockWebServer" @kind object;
  #L159bb4.  v2:= "okhttp.MockWebServer" @kind object;
  #L159bb8.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L159bbe.  call temp:= `toMap`(v0) @signature `Lkotlin/collections/MapsKt;.toMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L159bc4.  v0:= temp @kind object;
  #L159bc6.  `@@okhttp3.internal.platform.android.AndroidLog.b` @type ^`java.util.Map` := v0 @kind object;
  #L159bca.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.android.AndroidLog` v0 @kind this) @signature `Lokhttp3/internal/platform/android/AndroidLog;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L159bdc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L159be2.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.platform.android.AndroidLog` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/platform/android/AndroidLog;.a:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L159d24.  call temp:= `getLogger`(v2) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L159d2a.  v2:= temp @kind object;
  #L159d2c.  v0:= `@@okhttp3.internal.platform.android.AndroidLog.a` @type ^`java.util.concurrent.CopyOnWriteArraySet` @kind object;
  #L159d30.  call temp:= `add`(v0, v2) @signature `Ljava/util/concurrent/CopyOnWriteArraySet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L159d36.  v0:= temp;
  #L159d38.  if v0 == 0 then goto L159d8a;
  #L159d3c.  v0:= "logger" @kind object;
  #L159d40.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159d46.  v0:= 0I;
  #L159d48.  call `setUseParentHandlers`(v2, v0) @signature `Ljava/util/logging/Logger;.setUseParentHandlers:(Z)V` @kind virtual;
  #L159d4e.  v0:= 3I;
  #L159d50.  call temp:= `isLoggable`(v3, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L159d56.  v0:= temp;
  #L159d58.  if v0 == 0 then goto L159d62;
  #L159d5c.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L159d60.  goto L159d7a;
  #L159d62.  v0:= 4I;
  #L159d64.  call temp:= `isLoggable`(v3, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L159d6a.  v3:= temp;
  #L159d6c.  if v3 == 0 then goto L159d76;
  #L159d70.  v3:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L159d74.  goto L159d7a;
  #L159d76.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L159d7a.  call `setLevel`(v2, v3) @signature `Ljava/util/logging/Logger;.setLevel:(Ljava/util/logging/Level;)V` @kind virtual;
  #L159d80.  v3:= `@@okhttp3.internal.platform.android.AndroidLogHandler.INSTANCE` @type ^`okhttp3.internal.platform.android.AndroidLogHandler` @kind object;
  #L159d84.  call `addHandler`(v2, v3) @signature `Ljava/util/logging/Logger;.addHandler:(Ljava/util/logging/Handler;)V` @kind virtual;
  #L159d8a.  return @kind void;
}
procedure `java.lang.String` `b`(`okhttp3.internal.platform.android.AndroidLog` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/platform/android/AndroidLog;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L159acc.  v0:= `@@okhttp3.internal.platform.android.AndroidLog.b` @type ^`java.util.Map` @kind object;
  #L159ad0.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L159ad6.  v0:= temp @kind object;
  #L159ad8.  v0:= (`java.lang.String`) v0 @kind object;
  #L159adc.  if v0 == 0 then goto L159ae2;
  #L159ae0.  goto L159aee;
  #L159ae2.  v0:= 23I;
  #L159ae6.  call temp:= `take`(v2, v0) @signature `Lkotlin/text/StringsKt;.take:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L159aec.  v0:= temp @kind object;
  #L159aee.  return v0 @kind object;
}
procedure `void` `androidLog$okhttp`(`okhttp3.internal.platform.android.AndroidLog` v7 @kind this, `java.lang.String` v8 @kind object, `int` v9 , `java.lang.String` v10 @kind object, `java.lang.Throwable` v11 @kind object) @signature `Lokhttp3/internal/platform/android/AndroidLog;.androidLog$okhttp:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L159bf4.  v0:= "loggerName" @kind object;
  #L159bf8.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159bfe.  v0:= "message" @kind object;
  #L159c02.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159c08.  call temp:= `b`(v7, v8) @signature `Lokhttp3/internal/platform/android/AndroidLog;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L159c0e.  v8:= temp @kind object;
  #L159c10.  call temp:= `isLoggable`(v8, v9) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L159c16.  v0:= temp;
  #L159c18.  if v0 == 0 then goto L159cb0;
  #L159c1c.  if v11 == 0 then goto L159c50;
  #L159c20.  v0:= new `java.lang.StringBuilder`;
  #L159c24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159c2a.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159c30.  v10:= "\n" @kind object;
  #L159c34.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159c3a.  call temp:= `getStackTraceString`(v11) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L159c40.  v10:= temp @kind object;
  #L159c42.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159c48.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159c4e.  v10:= temp @kind object;
  #L159c50.  v11:= 0I;
  #L159c52.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L159c58.  v6:= temp;
  #L159c5a.  if v11 >= v6 then goto L159cb0;
  #L159c5e.  v1:= 10I;
  #L159c62.  v3:= 0I;
  #L159c64.  v4:= 4I;
  #L159c66.  v5:= 0I;
  #L159c68.  v0:= v10 @kind object;
  #L159c6a.  v2:= v11;
  #L159c6c.  call temp:= `indexOf$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L159c72.  v0:= temp;
  #L159c74.  v1:= -1I;
  #L159c76.  if v0 == v1 then goto L159c7c;
  #L159c7a.  goto L159c7e;
  #L159c7c.  v0:= v6;
  #L159c7e.  v1:= v11 + 4000;
  #L159c82.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L159c88.  v1:= temp;
  #L159c8a.  call temp:= `substring`(v10, v11, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L159c90.  v11:= temp @kind object;
  #L159c92.  v2:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L159c96.  call `checkNotNullExpressionValue`(v11, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159c9c.  call temp:= `println`(v9, v8, v11) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L159ca2.  if v1 < v0 then goto L159cac;
  #L159ca6.  v11:= v1 + 1;
  #L159caa.  goto L159c5a;
  #L159cac.  v11:= v1;
  #L159cae.  goto L159c7e;
  #L159cb0.  return @kind void;
}
procedure `void` `enable`(`okhttp3.internal.platform.android.AndroidLog` v3 @kind this) @signature `Lokhttp3/internal/platform/android/AndroidLog;.enable:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L159cc4.  v0:= `@@okhttp3.internal.platform.android.AndroidLog.b` @type ^`java.util.Map` @kind object;
  #L159cc8.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L159cce.  v0:= temp @kind object;
  #L159cd0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L159cd6.  v0:= temp @kind object;
  #L159cd8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L159cde.  v1:= temp;
  #L159ce0.  if v1 == 0 then goto L159d10;
  #L159ce4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L159cea.  v1:= temp @kind object;
  #L159cec.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L159cf0.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L159cf6.  v2:= temp @kind object;
  #L159cf8.  v2:= (`java.lang.String`) v2 @kind object;
  #L159cfc.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L159d02.  v1:= temp @kind object;
  #L159d04.  v1:= (`java.lang.String`) v1 @kind object;
  #L159d08.  call `a`(v3, v2, v1) @signature `Lokhttp3/internal/platform/android/AndroidLog;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L159d0e.  goto L159cd8;
  #L159d10.  return @kind void;
}
