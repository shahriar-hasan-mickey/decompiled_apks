record `okhttp3.internal.platform.BouncyCastlePlatform` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.platform.Platform` @kind class {
  `java.security.Provider` `okhttp3.internal.platform.BouncyCastlePlatform.c` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.platform.BouncyCastlePlatform$Companion` `@@okhttp3.internal.platform.BouncyCastlePlatform.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@okhttp3.internal.platform.BouncyCastlePlatform.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L157be0.  v0:= new `okhttp3.internal.platform.BouncyCastlePlatform$Companion`;
  #L157be4.  v1:= 0I;
  #L157be6.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L157bec.  `@@okhttp3.internal.platform.BouncyCastlePlatform.Companion` @type ^`okhttp3.internal.platform.BouncyCastlePlatform$Companion` := v0 @kind object;
  #L157bf0.  v1:= 0I;
  #L157bf2.  v2:= "org.bouncycastle.jsse.provider.BouncyCastleJsseProvider" @kind object;
  #L157bf6.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L157bfc.  v0:= temp @kind object;
  #L157bfe.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L157c04.  v0:= temp @kind object;
  #L157c06.  call temp:= `forName`(v2, v1, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L157c0c.  v1:= 1I;
  #L157c0e.  `@@okhttp3.internal.platform.BouncyCastlePlatform.d` @type ^`boolean` := v1 @kind boolean;
  #L157c12.  return @kind void;
  catch `java.lang.ClassNotFoundException` @[L157bf2..L157c0c] goto L157c0e;
}
procedure `void` `<init>`(`okhttp3.internal.platform.BouncyCastlePlatform` v1 @kind this) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L157c34.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L157c3a.  v0:= new `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider`;
  #L157c3e.  call `<init>`(v0) @signature `Lorg/bouncycastle/jsse/provider/BouncyCastleJsseProvider;.<init>:()V` @kind direct;
  #L157c44.  v0:= (`java.security.Provider`) v0 @kind object;
  #L157c48.  v1.`okhttp3.internal.platform.BouncyCastlePlatform.c` @type ^`java.security.Provider` := v0 @kind object;
  #L157c4c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.BouncyCastlePlatform` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L157c60.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.<init>:()V` @kind direct;
  #L157c66.  return @kind void;
}
procedure `boolean` `access$isSupported$cp`() @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.access$isSupported$cp:()Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L157a54.  v0:= `@@okhttp3.internal.platform.BouncyCastlePlatform.d` @type ^`boolean` @kind boolean;
  #L157a58.  return v0;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.BouncyCastlePlatform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `java.lang.String` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157c78.  v0:= "sslSocket" @kind object;
  #L157c7c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L157c82.  v0:= "protocols" @kind object;
  #L157c86.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L157c8c.  v0:= instanceof @variable v2 @type ^`org.bouncycastle.jsse.BCSSLSocket` @kind boolean;
  #L157c90.  if v0 == 0 then goto L157ce0;
  #L157c94.  v2:= (`org.bouncycastle.jsse.BCSSLSocket`) v2 @kind object;
  #L157c98.  call temp:= `getParameters`(v2) @signature `Lorg/bouncycastle/jsse/BCSSLSocket;.getParameters:()Lorg/bouncycastle/jsse/BCSSLParameters;` @kind interface;
  #L157c9e.  v3:= temp @kind object;
  #L157ca0.  v0:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L157ca4.  call temp:= `alpnProtocolNames`(v0, v4) @signature `Lokhttp3/internal/platform/Platform$Companion;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L157caa.  v4:= temp @kind object;
  #L157cac.  v0:= "sslParameters" @kind object;
  #L157cb0.  call `checkNotNullExpressionValue`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L157cb6.  v0:= 0I;
  #L157cb8.  v0:= new `java.lang.String`[v0];
  #L157cbc.  call temp:= `toArray`(v4, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L157cc2.  v4:= temp @kind object;
  #L157cc4.  v0:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L157cc8.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L157cce.  v4:= (`java.lang.String`[]) v4 @kind object;
  #L157cd2.  call `setApplicationProtocols`(v3, v4) @signature `Lorg/bouncycastle/jsse/BCSSLParameters;.setApplicationProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L157cd8.  call `setParameters`(v2, v3) @signature `Lorg/bouncycastle/jsse/BCSSLSocket;.setParameters:(Lorg/bouncycastle/jsse/BCSSLParameters;)V` @kind interface;
  #L157cde.  goto L157ce6;
  #L157ce0.  call `configureTlsExtensions`(v1, v2, v3, v4) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind super;
  #L157ce6.  return @kind void;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.BouncyCastlePlatform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157a6c.  v0:= "sslSocket" @kind object;
  #L157a70.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L157a76.  v0:= instanceof @variable v2 @type ^`org.bouncycastle.jsse.BCSSLSocket` @kind boolean;
  #L157a7a.  if v0 == 0 then goto L157ab2;
  #L157a7e.  v2:= (`org.bouncycastle.jsse.BCSSLSocket`) v2 @kind object;
  #L157a82.  call temp:= `getApplicationProtocol`(v2) @signature `Lorg/bouncycastle/jsse/BCSSLSocket;.getApplicationProtocol:()Ljava/lang/String;` @kind interface;
  #L157a88.  v2:= temp @kind object;
  #L157a8a.  if v2 != 0 then goto L157a90;
  #L157a8e.  goto L157aae;
  #L157a90.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L157a96.  v0:= temp;
  #L157a98.  if v0 == 0 then goto L157a9e;
  #L157a9c.  goto L157aba;
  #L157a9e.  v0:= "" @kind object;
  #L157aa2.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L157aa8.  v0:= temp;
  #L157aaa.  if v0 == 0 then goto L157aba;
  #L157aae.  v2:= 0I;
  #L157ab0.  goto L157aba;
  #L157ab2.  call temp:= `getSelectedProtocol`(v1, v2) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind super;
  #L157ab8.  v2:= temp @kind object;
  #L157aba.  return v2 @kind object;
}
procedure `javax.net.ssl.SSLContext` `newSSLContext`(`okhttp3.internal.platform.BouncyCastlePlatform` v2 @kind this) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.newSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L157acc.  v0:= v2.`okhttp3.internal.platform.BouncyCastlePlatform.c` @type ^`java.security.Provider` @kind object;
  #L157ad0.  v1:= "TLS" @kind object;
  #L157ad4.  call temp:= `getInstance`(v1, v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L157ada.  v0:= temp @kind object;
  #L157adc.  v1:= "SSLContext.getInstance(\"TLS\", provider)" @kind object;
  #L157ae0.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L157ae6.  return v0 @kind object;
}
procedure `javax.net.ssl.X509TrustManager` `platformTrustManager`(`okhttp3.internal.platform.BouncyCastlePlatform` v4 @kind this) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.platformTrustManager:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L157af8.  v0:= "PKIX" @kind object;
  #L157afc.  v1:= "BCJSSE" @kind object;
  #L157b00.  call temp:= `getInstance`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L157b06.  v0:= temp @kind object;
  #L157b08.  v1:= 0I;
  #L157b0a.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L157b10.  v1:= "factory" @kind object;
  #L157b14.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L157b1a.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L157b20.  v0:= temp @kind object;
  #L157b22.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L157b28.  v1:= length @variable v0;
  #L157b2a.  v2:= 1I;
  #L157b2c.  v3:= 0I;
  #L157b2e.  if v1 != v2 then goto L157b40;
  #L157b32.  v1:= v0[v3] @kind object;
  #L157b36.  v1:= instanceof @variable v1 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L157b3a.  if v1 == 0 then goto L157b40;
  #L157b3e.  goto L157b42;
  #L157b40.  v2:= 0I;
  #L157b42.  if v2 == 0 then goto L157b5a;
  #L157b46.  v0:= v0[v3] @kind object;
  #L157b4a.  v1:= "null cannot be cast to non-null type javax.net.ssl.X509TrustManager" @kind object;
  #L157b4e.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L157b54.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #L157b58.  return v0 @kind object;
  #L157b5a.  v1:= new `java.lang.StringBuilder`;
  #L157b5e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L157b64.  v2:= "Unexpected default trust managers: " @kind object;
  #L157b68.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L157b6e.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L157b74.  v0:= temp @kind object;
  #L157b76.  v2:= "java.util.Arrays.toString(this)" @kind object;
  #L157b7a.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L157b80.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L157b86.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L157b8c.  v0:= temp @kind object;
  #L157b8e.  v1:= new `java.lang.IllegalStateException`;
  #L157b92.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L157b98.  v0:= temp @kind object;
  #L157b9a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L157ba0.  throw v1;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.BouncyCastlePlatform` v1 @kind this, `javax.net.ssl.SSLSocketFactory` v2 @kind object) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157bb4.  v0:= "sslSocketFactory" @kind object;
  #L157bb8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L157bbe.  v2:= new `java.lang.UnsupportedOperationException`;
  #L157bc2.  v0:= "clientBuilder.sslSocketFactory(SSLSocketFactory) not supported with BouncyCastle" @kind object;
  #L157bc6.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L157bcc.  throw v2;
}
