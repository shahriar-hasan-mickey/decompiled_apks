record `okhttp3.internal.platform.Platform` @kind class @AccessFlag PUBLIC {
}
global `okhttp3.internal.platform.Platform$Companion` `@@okhttp3.internal.platform.Platform.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.platform.Platform.INFO` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.platform.Platform.WARN` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.platform.Platform` `@@okhttp3.internal.platform.Platform.a` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `java.util.logging.Logger` `@@okhttp3.internal.platform.Platform.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1593f8.  v0:= new `okhttp3.internal.platform.Platform$Companion`;
  #L1593fc.  v1:= 0I;
  #L1593fe.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/platform/Platform$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L159404.  `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` := v0 @kind object;
  #L159408.  call temp:= `access$findPlatform`(v0) @signature `Lokhttp3/internal/platform/Platform$Companion;.access$findPlatform:(Lokhttp3/internal/platform/Platform$Companion;)Lokhttp3/internal/platform/Platform;` @kind static;
  #L15940e.  v0:= temp @kind object;
  #L159410.  `@@okhttp3.internal.platform.Platform.a` @type ^`okhttp3.internal.platform.Platform` := v0 @kind object;
  #L159414.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L159418.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L15941e.  v0:= temp @kind object;
  #L159420.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L159426.  v0:= temp @kind object;
  #L159428.  `@@okhttp3.internal.platform.Platform.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L15942c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Platform` v0 @kind this) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L159440.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L159446.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `access$getPlatform$cp`() @signature `Lokhttp3/internal/platform/Platform;.access$getPlatform$cp:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L159348.  v0:= `@@okhttp3.internal.platform.Platform.a` @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L15934c.  return v0 @kind object;
}
procedure `void` `access$setPlatform$cp`(`okhttp3.internal.platform.Platform` v0 @kind object) @signature `Lokhttp3/internal/platform/Platform;.access$setPlatform$cp:(Lokhttp3/internal/platform/Platform;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L159458.  `@@okhttp3.internal.platform.Platform.a` @type ^`okhttp3.internal.platform.Platform` := v0 @kind object;
  #L15945c.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L159360.  v0:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L159364.  call temp:= `get`(v0) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L15936a.  v0:= temp @kind object;
  #L15936c.  return v0 @kind object;
}
procedure `void` `log$default`(`okhttp3.internal.platform.Platform` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Throwable` v4 @kind object, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lokhttp3/internal/platform/Platform;.log$default:(Lokhttp3/internal/platform/Platform;Ljava/lang/String;ILjava/lang/Throwable;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L1594e0.  if v6 != 0 then goto L159500;
  #L1594e4.  v6:= v5 ^& 2;
  #L1594e8.  v0:= 4I;
  #L1594ea.  if v6 == 0 then goto L1594f0;
  #L1594ee.  v3:= 4I;
  #L1594f0.  v5:= v5 ^& v0 @kind int;
  #L1594f2.  if v5 == 0 then goto L1594f8;
  #L1594f6.  v4:= 0I;
  #L1594f8.  call `log`(v1, v2, v3, v4) @signature `Lokhttp3/internal/platform/Platform;.log:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind virtual;
  #L1594fe.  return @kind void;
  #L159500.  v1:= new `java.lang.UnsupportedOperationException`;
  #L159504.  v2:= "Super calls with default arguments not supported in this target, function: log" @kind object;
  #L159508.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15950e.  throw v1;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159470.  v0:= "sslSocket" @kind object;
  #L159474.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15947a.  return @kind void;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159380.  v0:= "trustManager" @kind object;
  #L159384.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15938a.  v0:= new `okhttp3.internal.tls.BasicCertificateChainCleaner`;
  #L15938e.  call temp:= `buildTrustRootIndex`(v1, v2) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind virtual;
  #L159394.  v2:= temp @kind object;
  #L159396.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @kind direct;
  #L15939c.  return v0 @kind object;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.Platform` v2 @kind this, `javax.net.ssl.X509TrustManager` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1593b0.  v0:= "trustManager" @kind object;
  #L1593b4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1593ba.  v0:= new `okhttp3.internal.tls.BasicTrustRootIndex`;
  #L1593be.  call temp:= `getAcceptedIssuers`(v3) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L1593c4.  v3:= temp @kind object;
  #L1593c6.  v1:= "trustManager.acceptedIssuers" @kind object;
  #L1593ca.  call `checkNotNullExpressionValue`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1593d0.  v1:= length @variable v3;
  #L1593d2.  call temp:= `copyOf`(v3, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1593d8.  v3:= temp @kind object;
  #L1593da.  v3:= (`java.security.cert.X509Certificate`[]) v3 @kind object;
  #L1593de.  call `<init>`(v0, v3) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L1593e4.  return v0 @kind object;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L15948c.  v2:= "sslSocket" @kind object;
  #L159490.  call `checkNotNullParameter`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159496.  v1:= "protocols" @kind object;
  #L15949a.  call `checkNotNullParameter`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1594a0.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.net.Socket` v2 @kind object, `java.net.InetSocketAddress` v3 @kind object, `int` v4 ) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1594b4.  v0:= "socket" @kind object;
  #L1594b8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1594be.  v0:= "address" @kind object;
  #L1594c2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1594c8.  call `connect`(v2, v3, v4) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L1594ce.  return @kind void;
}
procedure `java.lang.String` `getPrefix`(`okhttp3.internal.platform.Platform` v1 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1590dc.  v0:= "OkHttp" @kind object;
  #L1590e0.  return v0 @kind object;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1590f4.  v0:= "sslSocket" @kind object;
  #L1590f8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1590fe.  v2:= 0I;
  #L159100.  return v2 @kind object;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.Platform` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15909c.  v0:= "closer" @kind object;
  #L1590a0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1590a6.  v0:= `@@okhttp3.internal.platform.Platform.b` @type ^`java.util.logging.Logger` @kind object;
  #L1590aa.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1590ae.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1590b4.  v0:= temp;
  #L1590b6.  if v0 == 0 then goto L1590c6;
  #L1590ba.  v0:= new `java.lang.Throwable`;
  #L1590be.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1590c4.  goto L1590c8;
  #L1590c6.  v0:= 0I;
  #L1590c8.  return v0 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15907c.  v0:= "hostname" @kind object;
  #L159080.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159086.  v2:= 1I;
  #L159088.  return v2;
}
procedure `void` `log`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Throwable` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.log:(Ljava/lang/String;ILjava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159520.  v0:= "message" @kind object;
  #L159524.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15952a.  v0:= 5I;
  #L15952c.  if v3 != v0 then goto L159536;
  #L159530.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L159534.  goto L15953a;
  #L159536.  v3:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L15953a.  v0:= `@@okhttp3.internal.platform.Platform.b` @type ^`java.util.logging.Logger` @kind object;
  #L15953e.  call `log`(v0, v3, v2, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L159544.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159558.  v0:= "message" @kind object;
  #L15955c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159562.  if v3 != 0 then goto L159588;
  #L159566.  v0:= new `java.lang.StringBuilder`;
  #L15956a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159570.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159576.  v2:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L15957a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159580.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159586.  v2:= temp @kind object;
  #L159588.  v0:= 5I;
  #L15958a.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L15958e.  call `log`(v1, v2, v0, v3) @signature `Lokhttp3/internal/platform/Platform;.log:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind virtual;
  #L159594.  return @kind void;
}
procedure `javax.net.ssl.SSLContext` `newSSLContext`(`okhttp3.internal.platform.Platform` v2 @kind this) @signature `Lokhttp3/internal/platform/Platform;.newSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L159140.  v0:= "TLS" @kind object;
  #L159144.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L15914a.  v0:= temp @kind object;
  #L15914c.  v1:= "SSLContext.getInstance(\"TLS\")" @kind object;
  #L159150.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159156.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `newSslSocketFactory`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.X509TrustManager` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.newSslSocketFactory:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L159168.  v0:= "trustManager" @kind object;
  #L15916c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159172.  call temp:= `newSSLContext`(v3) @signature `Lokhttp3/internal/platform/Platform;.newSSLContext:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L159178.  v0:= temp @kind object;
  #L15917a.  v1:= 1I;
  #L15917c.  v1:= new `javax.net.ssl.TrustManager`[v1];
  #L159180.  v2:= 0I;
  #L159182.  v1[v2]:= v4 @kind object;
  #L159186.  v4:= 0I;
  #L159188.  call `init`(v0, v4, v1, v4) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L15918e.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L159194.  v4:= temp @kind object;
  #L159196.  v0:= "newSSLContext().apply {\n…ll)\n      }.socketFactory" @kind object;
  #L15919a.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1591a0.  return v4 @kind object;
  #L1591a2.  v4:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L1591a4.  v0:= new `java.lang.AssertionError`;
  #L1591a8.  v1:= new `java.lang.StringBuilder`;
  #L1591ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1591b2.  v2:= "No System TLS: " @kind object;
  #L1591b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1591bc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1591c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1591c8.  v1:= temp @kind object;
  #L1591ca.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1591d0.  throw v0;
  catch `java.security.GeneralSecurityException` @[L159172..L1591a0] goto L1591a2;
}
procedure `javax.net.ssl.X509TrustManager` `platformTrustManager`(`okhttp3.internal.platform.Platform` v4 @kind this) @signature `Lokhttp3/internal/platform/Platform;.platformTrustManager:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1591f4.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L1591fa.  v0:= temp @kind object;
  #L1591fc.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L159202.  v0:= temp @kind object;
  #L159204.  v1:= 0I;
  #L159206.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L15920c.  v1:= "factory" @kind object;
  #L159210.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L159216.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L15921c.  v0:= temp @kind object;
  #L15921e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L159224.  v1:= length @variable v0;
  #L159226.  v2:= 1I;
  #L159228.  v3:= 0I;
  #L15922a.  if v1 != v2 then goto L15923c;
  #L15922e.  v1:= v0[v3] @kind object;
  #L159232.  v1:= instanceof @variable v1 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L159236.  if v1 == 0 then goto L15923c;
  #L15923a.  goto L15923e;
  #L15923c.  v2:= 0I;
  #L15923e.  if v2 == 0 then goto L159256;
  #L159242.  v0:= v0[v3] @kind object;
  #L159246.  v1:= "null cannot be cast to non-null type javax.net.ssl.X509TrustManager" @kind object;
  #L15924a.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L159250.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #L159254.  return v0 @kind object;
  #L159256.  v1:= new `java.lang.StringBuilder`;
  #L15925a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159260.  v2:= "Unexpected default trust managers: " @kind object;
  #L159264.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15926a.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L159270.  v0:= temp @kind object;
  #L159272.  v2:= "java.util.Arrays.toString(this)" @kind object;
  #L159276.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15927c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159282.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159288.  v0:= temp @kind object;
  #L15928a.  v1:= new `java.lang.IllegalStateException`;
  #L15928e.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L159294.  v0:= temp @kind object;
  #L159296.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15929c.  throw v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.platform.Platform` v2 @kind this) @signature `Lokhttp3/internal/platform/Platform;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L159114.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15911a.  v0:= temp @kind object;
  #L15911c.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L159122.  v0:= temp @kind object;
  #L159124.  v1:= "javaClass.simpleName" @kind object;
  #L159128.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15912e.  return v0 @kind object;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1592b0.  v0:= "sslSocketFactory" @kind object;
  #L1592b4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1592ba.  v0:= 0I;
  #L1592bc.  v1:= "sun.security.ssl.SSLContextImpl" @kind object;
  #L1592c0.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1592c6.  v1:= temp @kind object;
  #L1592c8.  v2:= "sslContextClass" @kind object;
  #L1592cc.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1592d2.  v2:= "context" @kind object;
  #L1592d6.  call temp:= `readFieldOrNull`(v4, v1, v2) @signature `Lokhttp3/internal/Util;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1592dc.  v4:= temp @kind object;
  #L1592de.  if v4 == 0 then goto L1592fa;
  #L1592e2.  v1:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L1592e6.  v2:= "trustManager" @kind object;
  #L1592ea.  call temp:= `readFieldOrNull`(v4, v1, v2) @signature `Lokhttp3/internal/Util;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1592f0.  v4:= temp @kind object;
  #L1592f2.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L1592f6.  v0:= v4 @kind object;
  #L1592f8.  goto L159326;
  #L1592fa.  return v0 @kind object;
  #L1592fc.  v4:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1592fe.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L159304.  v1:= temp @kind object;
  #L159306.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L15930c.  v1:= temp @kind object;
  #L15930e.  v2:= "java.lang.reflect.InaccessibleObjectException" @kind object;
  #L159312.  call temp:= `areEqual`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L159318.  v1:= temp;
  #L15931a.  v1:= v1 ^~ 1;
  #L15931e.  if v1 != 0 then goto L159324;
  #L159322.  goto L159326;
  #L159324.  throw v4;
  #L159326.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L1592bc..L1592f6] goto L159326;
  catch `java.lang.RuntimeException` @[L1592bc..L1592f6] goto L1592fc;
}
