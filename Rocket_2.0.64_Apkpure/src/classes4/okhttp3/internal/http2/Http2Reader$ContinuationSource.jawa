record `okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Source` @kind interface {
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @AccessFlag PRIVATE;
  `okio.BufferedSource` `okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this, `okio.BufferedSource` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.<init>:(Lokio/BufferedSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L152ba8.  v0:= "source" @kind object;
  #L152bac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L152bb2.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L152bb8.  v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` := v2 @kind object;
  #L152bbc.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v9 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L152be4.  v0:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int`;
  #L152be8.  v1:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L152bec.  call temp:= `readMedium`(v1) @signature `Lokhttp3/internal/Util;.readMedium:(Lokio/BufferedSource;)I` @kind static;
  #L152bf2.  v1:= temp;
  #L152bf4.  v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int` := v1;
  #L152bf8.  v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @type ^`int` := v1;
  #L152bfc.  v1:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L152c00.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L152c06.  v1:= temp;
  #L152c08.  v2:= 255I;
  #L152c0c.  call temp:= `and`(v1, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L152c12.  v1:= temp;
  #L152c14.  v3:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L152c18.  call temp:= `readByte`(v3) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L152c1e.  v3:= temp;
  #L152c20.  call temp:= `and`(v3, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L152c26.  v2:= temp;
  #L152c28.  v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`int` := v2;
  #L152c2c.  v2:= `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` @kind object;
  #L152c30.  call temp:= `getLogger`(v2) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.getLogger:()Ljava/util/logging/Logger;` @kind virtual;
  #L152c36.  v3:= temp @kind object;
  #L152c38.  v4:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L152c3c.  call temp:= `isLoggable`(v3, v4) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L152c42.  v3:= temp;
  #L152c44.  if v3 == 0 then goto L152c72;
  #L152c48.  call temp:= `getLogger`(v2) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.getLogger:()Ljava/util/logging/Logger;` @kind virtual;
  #L152c4e.  v2:= temp @kind object;
  #L152c50.  v3:= `@@okhttp3.internal.http2.Http2.INSTANCE` @type ^`okhttp3.internal.http2.Http2` @kind object;
  #L152c54.  v4:= 1I;
  #L152c56.  v5:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int`;
  #L152c5a.  v6:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @type ^`int`;
  #L152c5e.  v8:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`int`;
  #L152c62.  v7:= v1;
  #L152c64.  call temp:= `frameLog`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIII)Ljava/lang/String;` @kind virtual;
  #L152c6a.  v3:= temp @kind object;
  #L152c6c.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L152c72.  v2:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L152c76.  call temp:= `readInt`(v2) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L152c7c.  v2:= temp;
  #L152c7e.  v3:= 2147483647I;
  #L152c84.  v2:= v2 ^& v3 @kind int;
  #L152c86.  v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int` := v2;
  #L152c8a.  v3:= 9I;
  #L152c8e.  if v1 != v3 then goto L152ca8;
  #L152c92.  if v2 != v0 then goto L152c98;
  #L152c96.  return @kind void;
  #L152c98.  v0:= new `java.io.IOException`;
  #L152c9c.  v1:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L152ca0.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L152ca6.  throw v0;
  #L152ca8.  v0:= new `java.io.IOException`;
  #L152cac.  v2:= new `java.lang.StringBuilder`;
  #L152cb0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152cb6.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L152cbc.  v1:= " != TYPE_CONTINUATION" @kind object;
  #L152cc0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152cc6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152ccc.  v1:= temp @kind object;
  #L152cce.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L152cd4.  throw v0;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L152bd0.  return @kind void;
}
procedure `int` `getFlags`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getFlags:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L152a90.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`int`;
  #L152a94.  return v0;
}
procedure `int` `getLeft`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getLeft:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L152aa8.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int`;
  #L152aac.  return v0;
}
procedure `int` `getLength`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getLength:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L152ac0.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @type ^`int`;
  #L152ac4.  return v0;
}
procedure `int` `getPadding`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getPadding:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L152ad8.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @type ^`int`;
  #L152adc.  return v0;
}
procedure `int` `getStreamId`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getStreamId:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L152af0.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int`;
  #L152af4.  return v0;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v6 @kind this, `okio.Buffer` v7 @kind object, `long` v8 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L152b08.  v0:= "sink" @kind object;
  #L152b0c.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L152b12.  v0:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int`;
  #L152b16.  v1:= -1L;
  #L152b1a.  if v0 != 0 then goto L152b4a;
  #L152b1e.  v0:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L152b22.  v3:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @type ^`int`;
  #L152b26.  v3:= (`long`) v3 @kind i2l;
  #L152b28.  call `skip`(v0, v3) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L152b2e.  v0:= 0I;
  #L152b30.  v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @type ^`int` := v0;
  #L152b34.  v0:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`int`;
  #L152b38.  v0:= v0 ^& 4;
  #L152b3c.  if v0 == 0 then goto L152b42;
  #L152b40.  return v1 @kind wide;
  #L152b42.  call `a`(v6) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.a:()V` @kind direct;
  #L152b48.  goto L152b12;
  #L152b4a.  v3:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L152b4e.  v4:= (`long`) v0 @kind i2l;
  #L152b50.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L152b56.  v8:= temp @kind wide;
  #L152b58.  call temp:= `read`(v3, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L152b5e.  v7:= temp @kind wide;
  #L152b60.  v9:= lcmp(v7, v1);
  #L152b64.  if v9 != 0 then goto L152b6a;
  #L152b68.  return v1 @kind wide;
  #L152b6a.  v9:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int`;
  #L152b6e.  v0:= (`int`) v7 @kind l2i;
  #L152b70.  v9:= v9 - v0 @kind int;
  #L152b72.  v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int` := v9;
  #L152b76.  return v7 @kind wide;
}
procedure `void` `setFlags`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setFlags:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L152ce8.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`int` := v1;
  #L152cec.  return @kind void;
}
procedure `void` `setLeft`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setLeft:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L152d00.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int` := v1;
  #L152d04.  return @kind void;
}
procedure `void` `setLength`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setLength:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L152d18.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @type ^`int` := v1;
  #L152d1c.  return @kind void;
}
procedure `void` `setPadding`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setPadding:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L152d30.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @type ^`int` := v1;
  #L152d34.  return @kind void;
}
procedure `void` `setStreamId`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setStreamId:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L152d48.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int` := v1;
  #L152d4c.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L152b88.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L152b8c.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L152b92.  v0:= temp @kind object;
  #L152b94.  return v0 @kind object;
}
