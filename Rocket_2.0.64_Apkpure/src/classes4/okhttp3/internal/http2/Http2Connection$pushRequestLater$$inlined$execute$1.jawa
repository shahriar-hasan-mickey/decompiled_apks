record `okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.concurrent.Task` @kind class {
  `java.lang.String` `okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.e` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.f` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.g` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.h` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `java.lang.String` v3 @kind object, `boolean` v4 , `okhttp3.internal.http2.Http2Connection` v5 @kind object, `int` v6 , `java.util.List` v7 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILjava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L150eb8.  v0.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.e` @type ^`java.lang.String` := v1 @kind object;
  #L150ebc.  v0.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.f` @type ^`boolean` := v2 @kind boolean;
  #L150ec0.  v0.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.g` @type ^`okhttp3.internal.http2.Http2Connection` := v5 @kind object;
  #L150ec4.  v0.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.h` @type ^`int` := v6;
  #L150ec8.  v0.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.i` @type ^`java.util.List` := v7 @kind object;
  #L150ecc.  call `<init>`(v0, v3, v4) @signature `Lokhttp3/internal/concurrent/Task;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L150ed2.  return @kind void;
}
procedure `long` `runOnce`(`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1` v3 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$execute$1;.runOnce:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L150e18.  v0:= v3.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.g` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150e1c.  call temp:= `access$getPushObserver$p`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getPushObserver$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/http2/PushObserver;` @kind static;
  #L150e22.  v0:= temp @kind object;
  #L150e24.  v1:= v3.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.h` @type ^`int`;
  #L150e28.  v2:= v3.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.i` @type ^`java.util.List` @kind object;
  #L150e2c.  call temp:= `onRequest`(v0, v1, v2) @signature `Lokhttp3/internal/http2/PushObserver;.onRequest:(ILjava/util/List;)Z` @kind interface;
  #L150e32.  v0:= temp;
  #L150e34.  if v0 == 0 then goto L150e80;
  #L150e38.  v0:= v3.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.g` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150e3c.  call temp:= `getWriter`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriter:()Lokhttp3/internal/http2/Http2Writer;` @kind virtual;
  #L150e42.  v0:= temp @kind object;
  #L150e44.  v1:= v3.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.h` @type ^`int`;
  #L150e48.  v2:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L150e4c.  call `rstStream`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L150e52.  v0:= v3.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.g` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150e56.  @monitorenter v0
  #L150e58.  v1:= v3.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.g` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150e5c.  call temp:= `access$getCurrentPushRequests$p`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getCurrentPushRequests$p:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/Set;` @kind static;
  #L150e62.  v1:= temp @kind object;
  #L150e64.  v2:= v3.`okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1.h` @type ^`int`;
  #L150e68.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L150e6e.  v2:= temp @kind object;
  #L150e70.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L150e76.  @monitorexit v0
  #L150e78.  goto L150e80;
  #L150e7a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150e7c.  @monitorexit v0
  #L150e7e.  throw v1;
  #L150e80.  v0:= -1L;
  #L150e84.  return v0 @kind wide;
  catch `java.io.IOException` @[L150e38..L150e58] goto L150e80;
  catch `java.lang.Throwable` @[L150e58..L150e76] goto L150e7a;
  catch `java.io.IOException` @[L150e76..L150e80] goto L150e80;
}
