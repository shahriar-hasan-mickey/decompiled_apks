record `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.concurrent.Task` @kind class {
  `java.lang.String` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.e` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.f` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.Http2Connection$ReaderRunnable` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.g` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.h` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.i` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.Settings` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.j` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$LongRef` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.k` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.l` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `java.lang.String` v3 @kind object, `boolean` v4 , `okhttp3.internal.http2.Http2Connection$ReaderRunnable` v5 @kind object, `kotlin.jvm.internal.Ref$ObjectRef` v6 @kind object, `boolean` v7 , `okhttp3.internal.http2.Settings` v8 @kind object, `kotlin.jvm.internal.Ref$LongRef` v9 @kind object, `kotlin.jvm.internal.Ref$ObjectRef` v10 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lkotlin/jvm/internal/Ref$ObjectRef;ZLokhttp3/internal/http2/Settings;Lkotlin/jvm/internal/Ref$LongRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1500f8.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.e` @type ^`java.lang.String` := v1 @kind object;
  #L1500fc.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.f` @type ^`boolean` := v2 @kind boolean;
  #L150100.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.g` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` := v5 @kind object;
  #L150104.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.h` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v6 @kind object;
  #L150108.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.i` @type ^`boolean` := v7 @kind boolean;
  #L15010c.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.j` @type ^`okhttp3.internal.http2.Settings` := v8 @kind object;
  #L150110.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.k` @type ^`kotlin.jvm.internal.Ref$LongRef` := v9 @kind object;
  #L150114.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.l` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v10 @kind object;
  #L150118.  call `<init>`(v0, v3, v4) @signature `Lokhttp3/internal/concurrent/Task;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L15011e.  return @kind void;
}
procedure `long` `runOnce`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1` v3 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1;.runOnce:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1500b8.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.g` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L1500bc.  v0:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1500c0.  call temp:= `getListener$okhttp`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.getListener$okhttp:()Lokhttp3/internal/http2/Http2Connection$Listener;` @kind virtual;
  #L1500c6.  v0:= temp @kind object;
  #L1500c8.  v1:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.g` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L1500cc.  v1:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1500d0.  v2:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1.h` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L1500d4.  v2:= v2.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L1500d8.  v2:= (`okhttp3.internal.http2.Settings`) v2 @kind object;
  #L1500dc.  call `onSettings`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.onSettings:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L1500e2.  v0:= -1L;
  #L1500e6.  return v0 @kind wide;
}
