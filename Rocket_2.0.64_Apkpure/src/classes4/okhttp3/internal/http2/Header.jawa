record `okhttp3.internal.http2.Header` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http2.Header.hpackSize` @AccessFlag PUBLIC_FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.name` @AccessFlag PUBLIC_FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.value` @AccessFlag PUBLIC_FINAL;
}
global `okhttp3.internal.http2.Header$Companion` `@@okhttp3.internal.http2.Header.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_METHOD` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_METHOD_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_PATH` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_PATH_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_SCHEME_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Header;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L14e55c.  v0:= new `okhttp3.internal.http2.Header$Companion`;
  #L14e560.  v1:= 0I;
  #L14e562.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/Header$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L14e568.  `@@okhttp3.internal.http2.Header.Companion` @type ^`okhttp3.internal.http2.Header$Companion` := v0 @kind object;
  #L14e56c.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L14e570.  v1:= ":" @kind object;
  #L14e574.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L14e57a.  v1:= temp @kind object;
  #L14e57c.  `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @type ^`okio.ByteString` := v1 @kind object;
  #L14e580.  v1:= ":status" @kind object;
  #L14e584.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L14e58a.  v1:= temp @kind object;
  #L14e58c.  `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @type ^`okio.ByteString` := v1 @kind object;
  #L14e590.  v1:= ":method" @kind object;
  #L14e594.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L14e59a.  v1:= temp @kind object;
  #L14e59c.  `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` := v1 @kind object;
  #L14e5a0.  v1:= ":path" @kind object;
  #L14e5a4.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L14e5aa.  v1:= temp @kind object;
  #L14e5ac.  `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` := v1 @kind object;
  #L14e5b0.  v1:= ":scheme" @kind object;
  #L14e5b4.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L14e5ba.  v1:= temp @kind object;
  #L14e5bc.  `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` := v1 @kind object;
  #L14e5c0.  v1:= ":authority" @kind object;
  #L14e5c4.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L14e5ca.  v0:= temp @kind object;
  #L14e5cc.  `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` := v0 @kind object;
  #L14e5d0.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14e5e4.  v0:= "name" @kind object;
  #L14e5e8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14e5ee.  v0:= "value" @kind object;
  #L14e5f2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14e5f8.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L14e5fc.  call temp:= `encodeUtf8`(v0, v2) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L14e602.  v2:= temp @kind object;
  #L14e604.  call temp:= `encodeUtf8`(v0, v3) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L14e60a.  v3:= temp @kind object;
  #L14e60c.  call `<init>`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L14e612.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v1 @kind this, `okio.ByteString` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14e624.  v0:= "name" @kind object;
  #L14e628.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14e62e.  v0:= "value" @kind object;
  #L14e632.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14e638.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L14e63c.  call temp:= `encodeUtf8`(v0, v3) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L14e642.  v3:= temp @kind object;
  #L14e644.  call `<init>`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L14e64a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v1 @kind this, `okio.ByteString` v2 @kind object, `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14e65c.  v0:= "name" @kind object;
  #L14e660.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14e666.  v0:= "value" @kind object;
  #L14e66a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14e670.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14e676.  v1.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` := v2 @kind object;
  #L14e67a.  v1.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` := v3 @kind object;
  #L14e67e.  call temp:= `size`(v2) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L14e684.  v2:= temp;
  #L14e686.  v2:= v2 + 32;
  #L14e68a.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L14e690.  v3:= temp;
  #L14e692.  v2:= v2 + v3 @kind int;
  #L14e694.  v1.`okhttp3.internal.http2.Header.hpackSize` @type ^`int` := v2;
  #L14e698.  return @kind void;
}
procedure `okhttp3.internal.http2.Header` `copy$default`(`okhttp3.internal.http2.Header` v0 @kind object, `okio.ByteString` v1 @kind object, `okio.ByteString` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/http2/Header;.copy$default:(Lokhttp3/internal/http2/Header;Lokio/ByteString;Lokio/ByteString;ILjava/lang/Object;)Lokhttp3/internal/http2/Header;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L14e4c8.  v4:= v3 ^& 1;
  #L14e4cc.  if v4 == 0 then goto L14e4d4;
  #L14e4d0.  v1:= v0.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L14e4d4.  v3:= v3 ^& 2;
  #L14e4d8.  if v3 == 0 then goto L14e4e0;
  #L14e4dc.  v2:= v0.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L14e4e0.  call temp:= `copy`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Header;.copy:(Lokio/ByteString;Lokio/ByteString;)Lokhttp3/internal/http2/Header;` @kind virtual;
  #L14e4e6.  v0:= temp @kind object;
  #L14e4e8.  return v0 @kind object;
}
procedure `okio.ByteString` `component1`(`okhttp3.internal.http2.Header` v1 @kind this) @signature `Lokhttp3/internal/http2/Header;.component1:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14e52c.  v0:= v1.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L14e530.  return v0 @kind object;
}
procedure `okio.ByteString` `component2`(`okhttp3.internal.http2.Header` v1 @kind this) @signature `Lokhttp3/internal/http2/Header;.component2:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14e544.  v0:= v1.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L14e548.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Header` `copy`(`okhttp3.internal.http2.Header` v1 @kind this, `okio.ByteString` v2 @kind object, `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/http2/Header;.copy:(Lokio/ByteString;Lokio/ByteString;)Lokhttp3/internal/http2/Header;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14e4fc.  v0:= "name" @kind object;
  #L14e500.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14e506.  v0:= "value" @kind object;
  #L14e50a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14e510.  v0:= new `okhttp3.internal.http2.Header`;
  #L14e514.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L14e51a.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.internal.http2.Header` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/http2/Header;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14e3e0.  if v2 == v3 then goto L14e41e;
  #L14e3e4.  v0:= instanceof @variable v3 @type ^`okhttp3.internal.http2.Header` @kind boolean;
  #L14e3e8.  if v0 == 0 then goto L14e41a;
  #L14e3ec.  v3:= (`okhttp3.internal.http2.Header`) v3 @kind object;
  #L14e3f0.  v0:= v2.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L14e3f4.  v1:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L14e3f8.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14e3fe.  v0:= temp;
  #L14e400.  if v0 == 0 then goto L14e41a;
  #L14e404.  v0:= v2.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L14e408.  v3:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L14e40c.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14e412.  v3:= temp;
  #L14e414.  if v3 == 0 then goto L14e41a;
  #L14e418.  goto L14e41e;
  #L14e41a.  v3:= 0I;
  #L14e41c.  return v3;
  #L14e41e.  v3:= 1I;
  #L14e420.  return v3;
}
procedure `int` `hashCode`(`okhttp3.internal.http2.Header` v3 @kind this) @signature `Lokhttp3/internal/http2/Header;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14e434.  v0:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L14e438.  v1:= 0I;
  #L14e43a.  if v0 == 0 then goto L14e448;
  #L14e43e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L14e444.  v0:= temp;
  #L14e446.  goto L14e44a;
  #L14e448.  v0:= 0I;
  #L14e44a.  v0:= v0 * 31;
  #L14e44e.  v2:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L14e452.  if v2 == 0 then goto L14e45e;
  #L14e456.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L14e45c.  v1:= temp;
  #L14e45e.  v0:= v0 + v1 @kind int;
  #L14e460.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http2.Header` v2 @kind this) @signature `Lokhttp3/internal/http2/Header;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14e474.  v0:= new `java.lang.StringBuilder`;
  #L14e478.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14e47e.  v1:= v2.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L14e482.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L14e488.  v1:= temp @kind object;
  #L14e48a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14e490.  v1:= ": " @kind object;
  #L14e494.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14e49a.  v1:= v2.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L14e49e.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L14e4a4.  v1:= temp @kind object;
  #L14e4a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14e4ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14e4b2.  v0:= temp @kind object;
  #L14e4b4.  return v0 @kind object;
}
