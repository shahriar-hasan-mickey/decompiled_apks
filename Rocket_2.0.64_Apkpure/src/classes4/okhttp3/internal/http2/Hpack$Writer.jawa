record `okhttp3.internal.http2.Hpack$Writer` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http2.Hpack$Writer.a` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http2.Hpack$Writer.b` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Hpack$Writer.c` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http2.Hpack$Writer.d` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Header`[] `okhttp3.internal.http2.Hpack$Writer.dynamicTable` @AccessFlag PUBLIC;
  `int` `okhttp3.internal.http2.Hpack$Writer.dynamicTableByteCount` @AccessFlag PUBLIC;
  `okio.Buffer` `okhttp3.internal.http2.Hpack$Writer.e` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http2.Hpack$Writer.headerCount` @AccessFlag PUBLIC;
  `int` `okhttp3.internal.http2.Hpack$Writer.headerTableSizeSetting` @AccessFlag PUBLIC;
  `int` `okhttp3.internal.http2.Hpack$Writer.maxDynamicTableByteCount` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Hpack$Writer` v6 @kind this, `int` v7 , `okio.Buffer` v8 @kind object) @signature `Lokhttp3/internal/http2/Hpack$Writer;.<init>:(ILokio/Buffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L14ef2c.  v2:= 0I;
  #L14ef2e.  v4:= 2I;
  #L14ef30.  v5:= 0I;
  #L14ef32.  v0:= v6 @kind object;
  #L14ef34.  v1:= v7;
  #L14ef36.  v3:= v8 @kind object;
  #L14ef38.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/http2/Hpack$Writer;.<init>:(IZLokio/Buffer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L14ef3e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Hpack$Writer` v1 @kind this, `int` v2 , `boolean` v3 , `okio.Buffer` v4 @kind object) @signature `Lokhttp3/internal/http2/Hpack$Writer;.<init>:(IZLokio/Buffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14eea8.  v0:= "out" @kind object;
  #L14eeac.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14eeb2.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14eeb8.  v1.`okhttp3.internal.http2.Hpack$Writer.headerTableSizeSetting` @type ^`int` := v2;
  #L14eebc.  v1.`okhttp3.internal.http2.Hpack$Writer.d` @type ^`boolean` := v3 @kind boolean;
  #L14eec0.  v1.`okhttp3.internal.http2.Hpack$Writer.e` @type ^`okio.Buffer` := v4 @kind object;
  #L14eec4.  v3:= 2147483647I;
  #L14eeca.  v1.`okhttp3.internal.http2.Hpack$Writer.a` @type ^`int` := v3;
  #L14eece.  v1.`okhttp3.internal.http2.Hpack$Writer.maxDynamicTableByteCount` @type ^`int` := v2;
  #L14eed2.  v2:= 8I;
  #L14eed6.  v2:= new `okhttp3.internal.http2.Header`[v2];
  #L14eeda.  v1.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] := v2 @kind object;
  #L14eede.  v2:= length @variable v2;
  #L14eee0.  v2:= v2 + -1;
  #L14eee4.  v1.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int` := v2;
  #L14eee8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Hpack$Writer` v0 @kind this, `int` v1 , `boolean` v2 , `okio.Buffer` v3 @kind object, `int` v4 , `kotlin.jvm.internal.DefaultConstructorMarker` v5 @kind object) @signature `Lokhttp3/internal/http2/Hpack$Writer;.<init>:(IZLokio/Buffer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L14eefc.  v5:= v4 ^& 1;
  #L14ef00.  if v5 == 0 then goto L14ef08;
  #L14ef04.  v1:= 4096I;
  #L14ef08.  v4:= v4 ^& 2;
  #L14ef0c.  if v4 == 0 then goto L14ef12;
  #L14ef10.  v2:= 1I;
  #L14ef12.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/Hpack$Writer;.<init>:(IZLokio/Buffer;)V` @kind direct;
  #L14ef18.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Hpack$Writer` v6 @kind this, `okio.Buffer` v7 @kind object) @signature `Lokhttp3/internal/http2/Hpack$Writer;.<init>:(Lokio/Buffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L14ef50.  v1:= 0I;
  #L14ef52.  v2:= 0I;
  #L14ef54.  v4:= 3I;
  #L14ef56.  v5:= 0I;
  #L14ef58.  v0:= v6 @kind object;
  #L14ef5a.  v3:= v7 @kind object;
  #L14ef5c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/http2/Hpack$Writer;.<init>:(IZLokio/Buffer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L14ef62.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Hpack$Writer` v2 @kind this) @signature `Lokhttp3/internal/http2/Hpack$Writer;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L14ef74.  v0:= v2.`okhttp3.internal.http2.Hpack$Writer.maxDynamicTableByteCount` @type ^`int`;
  #L14ef78.  v1:= v2.`okhttp3.internal.http2.Hpack$Writer.dynamicTableByteCount` @type ^`int`;
  #L14ef7c.  if v0 >= v1 then goto L14ef94;
  #L14ef80.  if v0 != 0 then goto L14ef8c;
  #L14ef84.  call `b`(v2) @signature `Lokhttp3/internal/http2/Hpack$Writer;.b:()V` @kind direct;
  #L14ef8a.  goto L14ef94;
  #L14ef8c.  v1:= v1 - v0 @kind int;
  #L14ef8e.  call temp:= `c`(v2, v1) @signature `Lokhttp3/internal/http2/Hpack$Writer;.c:(I)I` @kind direct;
  #L14ef94.  return @kind void;
}
procedure `void` `b`(`okhttp3.internal.http2.Hpack$Writer` v6 @kind this) @signature `Lokhttp3/internal/http2/Hpack$Writer;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L14efa8.  v0:= v6.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14efac.  v1:= 0I;
  #L14efae.  v2:= 0I;
  #L14efb0.  v3:= 0I;
  #L14efb2.  v4:= 6I;
  #L14efb4.  v5:= 0I;
  #L14efb6.  call `fill$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/collections/ArraysKt;.fill$default:([Ljava/lang/Object;Ljava/lang/Object;IIILjava/lang/Object;)V` @kind static;
  #L14efbc.  v0:= v6.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14efc0.  v0:= length @variable v0;
  #L14efc2.  v0:= v0 + -1;
  #L14efc6.  v6.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int` := v0;
  #L14efca.  v0:= 0I;
  #L14efcc.  v6.`okhttp3.internal.http2.Hpack$Writer.headerCount` @type ^`int` := v0;
  #L14efd0.  v6.`okhttp3.internal.http2.Hpack$Writer.dynamicTableByteCount` @type ^`int` := v0;
  #L14efd4.  return @kind void;
}
procedure `int` `c`(`okhttp3.internal.http2.Hpack$Writer` v4 @kind this, `int` v5 ) @signature `Lokhttp3/internal/http2/Hpack$Writer;.c:(I)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14edf8.  v0:= 0I;
  #L14edfa.  if v5 <= 0 then goto L14ee96;
  #L14edfe.  v1:= v4.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14ee02.  v1:= length @variable v1;
  #L14ee04.  v1:= v1 + -1;
  #L14ee08.  v2:= v4.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int`;
  #L14ee0c.  if v1 < v2 then goto L14ee5a;
  #L14ee10.  if v5 <= 0 then goto L14ee5a;
  #L14ee14.  v2:= v4.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14ee18.  v2:= v2[v1] @kind object;
  #L14ee1c.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14ee22.  v2:= v2.`okhttp3.internal.http2.Header.hpackSize` @type ^`int`;
  #L14ee26.  v5:= v5 - v2 @kind int;
  #L14ee28.  v2:= v4.`okhttp3.internal.http2.Hpack$Writer.dynamicTableByteCount` @type ^`int`;
  #L14ee2c.  v3:= v4.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14ee30.  v3:= v3[v1] @kind object;
  #L14ee34.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14ee3a.  v3:= v3.`okhttp3.internal.http2.Header.hpackSize` @type ^`int`;
  #L14ee3e.  v2:= v2 - v3 @kind int;
  #L14ee40.  v4.`okhttp3.internal.http2.Hpack$Writer.dynamicTableByteCount` @type ^`int` := v2;
  #L14ee44.  v2:= v4.`okhttp3.internal.http2.Hpack$Writer.headerCount` @type ^`int`;
  #L14ee48.  v2:= v2 + -1;
  #L14ee4c.  v4.`okhttp3.internal.http2.Hpack$Writer.headerCount` @type ^`int` := v2;
  #L14ee50.  v0:= v0 + 1;
  #L14ee54.  v1:= v1 + -1;
  #L14ee58.  goto L14ee08;
  #L14ee5a.  v5:= v4.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14ee5e.  v1:= v2 + 1;
  #L14ee62.  v2:= v2 + 1;
  #L14ee66.  v2:= v2 + v0 @kind int;
  #L14ee68.  v3:= v4.`okhttp3.internal.http2.Hpack$Writer.headerCount` @type ^`int`;
  #L14ee6c.  call `arraycopy`(v5, v1, v5, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L14ee72.  v5:= v4.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14ee76.  v1:= v4.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int`;
  #L14ee7a.  v2:= v1 + 1;
  #L14ee7e.  v1:= v1 + 1;
  #L14ee82.  v1:= v1 + v0 @kind int;
  #L14ee84.  v3:= 0I;
  #L14ee86.  call `fill`(v5, v2, v1, v3) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L14ee8c.  v5:= v4.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int`;
  #L14ee90.  v5:= v5 + v0 @kind int;
  #L14ee92.  v4.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int` := v5;
  #L14ee96.  return v0;
}
procedure `void` `d`(`okhttp3.internal.http2.Hpack$Writer` v6 @kind this, `okhttp3.internal.http2.Header` v7 @kind object) @signature `Lokhttp3/internal/http2/Hpack$Writer;.d:(Lokhttp3/internal/http2/Header;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L14efe8.  v0:= v7.`okhttp3.internal.http2.Header.hpackSize` @type ^`int`;
  #L14efec.  v1:= v6.`okhttp3.internal.http2.Hpack$Writer.maxDynamicTableByteCount` @type ^`int`;
  #L14eff0.  if v0 <= v1 then goto L14effc;
  #L14eff4.  call `b`(v6) @signature `Lokhttp3/internal/http2/Hpack$Writer;.b:()V` @kind direct;
  #L14effa.  return @kind void;
  #L14effc.  v2:= v6.`okhttp3.internal.http2.Hpack$Writer.dynamicTableByteCount` @type ^`int`;
  #L14f000.  v2:= v2 + v0 @kind int;
  #L14f002.  v2:= v2 - v1 @kind int;
  #L14f004.  call temp:= `c`(v6, v2) @signature `Lokhttp3/internal/http2/Hpack$Writer;.c:(I)I` @kind direct;
  #L14f00a.  v1:= v6.`okhttp3.internal.http2.Hpack$Writer.headerCount` @type ^`int`;
  #L14f00e.  v1:= v1 + 1;
  #L14f012.  v2:= v6.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14f016.  v3:= length @variable v2;
  #L14f018.  if v1 <= v3 then goto L14f044;
  #L14f01c.  v1:= length @variable v2;
  #L14f01e.  v1:= v1 * 2;
  #L14f022.  v1:= new `okhttp3.internal.http2.Header`[v1];
  #L14f026.  v3:= 0I;
  #L14f028.  v4:= length @variable v2;
  #L14f02a.  v5:= length @variable v2;
  #L14f02c.  call `arraycopy`(v2, v3, v1, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L14f032.  v2:= v6.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14f036.  v2:= length @variable v2;
  #L14f038.  v2:= v2 + -1;
  #L14f03c.  v6.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int` := v2;
  #L14f040.  v6.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] := v1 @kind object;
  #L14f044.  v1:= v6.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int`;
  #L14f048.  v2:= v1 + -1;
  #L14f04c.  v6.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int` := v2;
  #L14f050.  v2:= v6.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14f054.  v2[v1]:= v7 @kind object;
  #L14f058.  v7:= v6.`okhttp3.internal.http2.Hpack$Writer.headerCount` @type ^`int`;
  #L14f05c.  v7:= v7 + 1;
  #L14f060.  v6.`okhttp3.internal.http2.Hpack$Writer.headerCount` @type ^`int` := v7;
  #L14f064.  v7:= v6.`okhttp3.internal.http2.Hpack$Writer.dynamicTableByteCount` @type ^`int`;
  #L14f068.  v7:= v7 + v0 @kind int;
  #L14f06a.  v6.`okhttp3.internal.http2.Hpack$Writer.dynamicTableByteCount` @type ^`int` := v7;
  #L14f06e.  return @kind void;
}
procedure `void` `resizeHeaderTable`(`okhttp3.internal.http2.Hpack$Writer` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/http2/Hpack$Writer;.resizeHeaderTable:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14f080.  v1.`okhttp3.internal.http2.Hpack$Writer.headerTableSizeSetting` @type ^`int` := v2;
  #L14f084.  v0:= 16384I;
  #L14f088.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L14f08e.  v2:= temp;
  #L14f090.  v0:= v1.`okhttp3.internal.http2.Hpack$Writer.maxDynamicTableByteCount` @type ^`int`;
  #L14f094.  if v0 != v2 then goto L14f09a;
  #L14f098.  return @kind void;
  #L14f09a.  if v2 >= v0 then goto L14f0ae;
  #L14f09e.  v0:= v1.`okhttp3.internal.http2.Hpack$Writer.a` @type ^`int`;
  #L14f0a2.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L14f0a8.  v0:= temp;
  #L14f0aa.  v1.`okhttp3.internal.http2.Hpack$Writer.a` @type ^`int` := v0;
  #L14f0ae.  v0:= 1I;
  #L14f0b0.  v1.`okhttp3.internal.http2.Hpack$Writer.b` @type ^`boolean` := v0 @kind boolean;
  #L14f0b4.  v1.`okhttp3.internal.http2.Hpack$Writer.maxDynamicTableByteCount` @type ^`int` := v2;
  #L14f0b8.  call `a`(v1) @signature `Lokhttp3/internal/http2/Hpack$Writer;.a:()V` @kind direct;
  #L14f0be.  return @kind void;
}
procedure `void` `writeByteString`(`okhttp3.internal.http2.Hpack$Writer` v4 @kind this, `okio.ByteString` v5 @kind object) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeByteString:(Lokio/ByteString;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14f0d0.  v0:= "data" @kind object;
  #L14f0d4.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14f0da.  v0:= v4.`okhttp3.internal.http2.Hpack$Writer.d` @type ^`boolean` @kind boolean;
  #L14f0de.  v1:= 127I;
  #L14f0e2.  if v0 == 0 then goto L14f134;
  #L14f0e6.  v0:= `@@okhttp3.internal.http2.Huffman.INSTANCE` @type ^`okhttp3.internal.http2.Huffman` @kind object;
  #L14f0ea.  call temp:= `encodedLength`(v0, v5) @signature `Lokhttp3/internal/http2/Huffman;.encodedLength:(Lokio/ByteString;)I` @kind virtual;
  #L14f0f0.  v2:= temp;
  #L14f0f2.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L14f0f8.  v3:= temp;
  #L14f0fa.  if v2 >= v3 then goto L14f134;
  #L14f0fe.  v2:= new `okio.Buffer`;
  #L14f102.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L14f108.  call `encode`(v0, v5, v2) @signature `Lokhttp3/internal/http2/Huffman;.encode:(Lokio/ByteString;Lokio/BufferedSink;)V` @kind virtual;
  #L14f10e.  call temp:= `readByteString`(v2) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L14f114.  v5:= temp @kind object;
  #L14f116.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L14f11c.  v0:= temp;
  #L14f11e.  v2:= 128I;
  #L14f122.  call `writeInt`(v4, v0, v1, v2) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeInt:(III)V` @kind virtual;
  #L14f128.  v0:= v4.`okhttp3.internal.http2.Hpack$Writer.e` @type ^`okio.Buffer` @kind object;
  #L14f12c.  call temp:= `write`(v0, v5) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L14f132.  goto L14f14e;
  #L14f134.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L14f13a.  v0:= temp;
  #L14f13c.  v2:= 0I;
  #L14f13e.  call `writeInt`(v4, v0, v1, v2) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeInt:(III)V` @kind virtual;
  #L14f144.  v0:= v4.`okhttp3.internal.http2.Hpack$Writer.e` @type ^`okio.Buffer` @kind object;
  #L14f148.  call temp:= `write`(v0, v5) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L14f14e.  return @kind void;
}
procedure `void` `writeHeaders`(`okhttp3.internal.http2.Hpack$Writer` v13 @kind this, `java.util.List` v14 @kind object) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeHeaders:(Ljava/util/List;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L14f160.  v0:= "headerBlock" @kind object;
  #L14f164.  call `checkNotNullParameter`(v14, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14f16a.  v0:= v13.`okhttp3.internal.http2.Hpack$Writer.b` @type ^`boolean` @kind boolean;
  #L14f16e.  v1:= 0I;
  #L14f170.  if v0 == 0 then goto L14f1a6;
  #L14f174.  v0:= v13.`okhttp3.internal.http2.Hpack$Writer.a` @type ^`int`;
  #L14f178.  v2:= v13.`okhttp3.internal.http2.Hpack$Writer.maxDynamicTableByteCount` @type ^`int`;
  #L14f17c.  v3:= 32I;
  #L14f180.  v4:= 31I;
  #L14f184.  if v0 >= v2 then goto L14f18e;
  #L14f188.  call `writeInt`(v13, v0, v4, v3) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeInt:(III)V` @kind virtual;
  #L14f18e.  v13.`okhttp3.internal.http2.Hpack$Writer.b` @type ^`boolean` := v1 @kind boolean;
  #L14f192.  v0:= 2147483647I;
  #L14f198.  v13.`okhttp3.internal.http2.Hpack$Writer.a` @type ^`int` := v0;
  #L14f19c.  v0:= v13.`okhttp3.internal.http2.Hpack$Writer.maxDynamicTableByteCount` @type ^`int`;
  #L14f1a0.  call `writeInt`(v13, v0, v4, v3) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeInt:(III)V` @kind virtual;
  #L14f1a6.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14f1ac.  v0:= temp;
  #L14f1ae.  v2:= 0I;
  #L14f1b0.  if v2 >= v0 then goto L14f376;
  #L14f1b4.  call temp:= `get`(v14, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14f1ba.  v3:= temp @kind object;
  #L14f1bc.  v3:= (`okhttp3.internal.http2.Header`) v3 @kind object;
  #L14f1c0.  v4:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L14f1c4.  call temp:= `toAsciiLowercase`(v4) @signature `Lokio/ByteString;.toAsciiLowercase:()Lokio/ByteString;` @kind virtual;
  #L14f1ca.  v4:= temp @kind object;
  #L14f1cc.  v5:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L14f1d0.  v6:= `@@okhttp3.internal.http2.Hpack.INSTANCE` @type ^`okhttp3.internal.http2.Hpack` @kind object;
  #L14f1d4.  call temp:= `getNAME_TO_FIRST_INDEX`(v6) @signature `Lokhttp3/internal/http2/Hpack;.getNAME_TO_FIRST_INDEX:()Ljava/util/Map;` @kind virtual;
  #L14f1da.  v7:= temp @kind object;
  #L14f1dc.  call temp:= `get`(v7, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14f1e2.  v7:= temp @kind object;
  #L14f1e4.  v7:= (`java.lang.Integer`) v7 @kind object;
  #L14f1e8.  v8:= -1I;
  #L14f1ea.  if v7 == 0 then goto L14f258;
  #L14f1ee.  call temp:= `intValue`(v7) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L14f1f4.  v7:= temp;
  #L14f1f6.  v7:= v7 + 1;
  #L14f1fa.  v9:= 7I;
  #L14f1fc.  v10:= 2I;
  #L14f1fe.  if v10 <= v7 then goto L14f204;
  #L14f202.  goto L14f254;
  #L14f204.  if v9 < v7 then goto L14f254;
  #L14f208.  call temp:= `getSTATIC_HEADER_TABLE`(v6) @signature `Lokhttp3/internal/http2/Hpack;.getSTATIC_HEADER_TABLE:()[Lokhttp3/internal/http2/Header;` @kind virtual;
  #L14f20e.  v9:= temp @kind object;
  #L14f210.  v10:= v7 + -1;
  #L14f214.  v9:= v9[v10] @kind object;
  #L14f218.  v9:= v9.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L14f21c.  call temp:= `areEqual`(v9, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14f222.  v9:= temp;
  #L14f224.  if v9 == 0 then goto L14f22c;
  #L14f228.  v6:= v7;
  #L14f22a.  goto L14f25c;
  #L14f22c.  call temp:= `getSTATIC_HEADER_TABLE`(v6) @signature `Lokhttp3/internal/http2/Hpack;.getSTATIC_HEADER_TABLE:()[Lokhttp3/internal/http2/Header;` @kind virtual;
  #L14f232.  v6:= temp @kind object;
  #L14f234.  v6:= v6[v7] @kind object;
  #L14f238.  v6:= v6.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L14f23c.  call temp:= `areEqual`(v6, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14f242.  v6:= temp;
  #L14f244.  if v6 == 0 then goto L14f254;
  #L14f248.  v6:= v7 + 1;
  #L14f24c.  v12:= v7;
  #L14f24e.  v7:= v6;
  #L14f250.  v6:= v12;
  #L14f252.  goto L14f25c;
  #L14f254.  v6:= v7;
  #L14f256.  goto L14f25a;
  #L14f258.  v6:= -1I;
  #L14f25a.  v7:= -1I;
  #L14f25c.  if v7 != v8 then goto L14f2e8;
  #L14f260.  v9:= v13.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int`;
  #L14f264.  v9:= v9 + 1;
  #L14f268.  v10:= v13.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14f26c.  v10:= length @variable v10;
  #L14f26e.  if v9 >= v10 then goto L14f2e8;
  #L14f272.  v11:= v13.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14f276.  v11:= v11[v9] @kind object;
  #L14f27a.  call `checkNotNull`(v11) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14f280.  v11:= v11.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L14f284.  call temp:= `areEqual`(v11, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14f28a.  v11:= temp;
  #L14f28c.  if v11 == 0 then goto L14f2e2;
  #L14f290.  v11:= v13.`okhttp3.internal.http2.Hpack$Writer.dynamicTable` @type ^`okhttp3.internal.http2.Header`[] @kind object;
  #L14f294.  v11:= v11[v9] @kind object;
  #L14f298.  call `checkNotNull`(v11) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14f29e.  v11:= v11.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L14f2a2.  call temp:= `areEqual`(v11, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14f2a8.  v11:= temp;
  #L14f2aa.  if v11 == 0 then goto L14f2c6;
  #L14f2ae.  v7:= v13.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int`;
  #L14f2b2.  v9:= v9 - v7 @kind int;
  #L14f2b4.  v7:= `@@okhttp3.internal.http2.Hpack.INSTANCE` @type ^`okhttp3.internal.http2.Hpack` @kind object;
  #L14f2b8.  call temp:= `getSTATIC_HEADER_TABLE`(v7) @signature `Lokhttp3/internal/http2/Hpack;.getSTATIC_HEADER_TABLE:()[Lokhttp3/internal/http2/Header;` @kind virtual;
  #L14f2be.  v7:= temp @kind object;
  #L14f2c0.  v7:= length @variable v7;
  #L14f2c2.  v7:= v7 + v9 @kind int;
  #L14f2c4.  goto L14f2e8;
  #L14f2c6.  if v6 != v8 then goto L14f2e2;
  #L14f2ca.  v6:= v13.`okhttp3.internal.http2.Hpack$Writer.c` @type ^`int`;
  #L14f2ce.  v6:= v9 - v6 @kind int;
  #L14f2d2.  v11:= `@@okhttp3.internal.http2.Hpack.INSTANCE` @type ^`okhttp3.internal.http2.Hpack` @kind object;
  #L14f2d6.  call temp:= `getSTATIC_HEADER_TABLE`(v11) @signature `Lokhttp3/internal/http2/Hpack;.getSTATIC_HEADER_TABLE:()[Lokhttp3/internal/http2/Header;` @kind virtual;
  #L14f2dc.  v11:= temp @kind object;
  #L14f2de.  v11:= length @variable v11;
  #L14f2e0.  v6:= v6 + v11 @kind int;
  #L14f2e2.  v9:= v9 + 1;
  #L14f2e6.  goto L14f26e;
  #L14f2e8.  if v7 == v8 then goto L14f2fc;
  #L14f2ec.  v3:= 127I;
  #L14f2f0.  v4:= 128I;
  #L14f2f4.  call `writeInt`(v13, v7, v3, v4) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeInt:(III)V` @kind virtual;
  #L14f2fa.  goto L14f36e;
  #L14f2fc.  v7:= 64I;
  #L14f300.  if v6 != v8 then goto L14f322;
  #L14f304.  v6:= v13.`okhttp3.internal.http2.Hpack$Writer.e` @type ^`okio.Buffer` @kind object;
  #L14f308.  call temp:= `writeByte`(v6, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L14f30e.  call `writeByteString`(v13, v4) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeByteString:(Lokio/ByteString;)V` @kind virtual;
  #L14f314.  call `writeByteString`(v13, v5) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeByteString:(Lokio/ByteString;)V` @kind virtual;
  #L14f31a.  call `d`(v13, v3) @signature `Lokhttp3/internal/http2/Hpack$Writer;.d:(Lokhttp3/internal/http2/Header;)V` @kind direct;
  #L14f320.  goto L14f36e;
  #L14f322.  v8:= `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @type ^`okio.ByteString` @kind object;
  #L14f326.  call temp:= `startsWith`(v4, v8) @signature `Lokio/ByteString;.startsWith:(Lokio/ByteString;)Z` @kind virtual;
  #L14f32c.  v8:= temp;
  #L14f32e.  if v8 == 0 then goto L14f358;
  #L14f332.  v8:= `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` @kind object;
  #L14f336.  call temp:= `areEqual`(v8, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14f33c.  v4:= temp;
  #L14f33e.  v4:= v4 ^~ 1;
  #L14f342.  if v4 == 0 then goto L14f358;
  #L14f346.  v3:= 15I;
  #L14f34a.  call `writeInt`(v13, v6, v3, v1) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeInt:(III)V` @kind virtual;
  #L14f350.  call `writeByteString`(v13, v5) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeByteString:(Lokio/ByteString;)V` @kind virtual;
  #L14f356.  goto L14f36e;
  #L14f358.  v4:= 63I;
  #L14f35c.  call `writeInt`(v13, v6, v4, v7) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeInt:(III)V` @kind virtual;
  #L14f362.  call `writeByteString`(v13, v5) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeByteString:(Lokio/ByteString;)V` @kind virtual;
  #L14f368.  call `d`(v13, v3) @signature `Lokhttp3/internal/http2/Hpack$Writer;.d:(Lokhttp3/internal/http2/Header;)V` @kind direct;
  #L14f36e.  v2:= v2 + 1;
  #L14f372.  goto L14f1b0;
  #L14f376.  return @kind void;
}
procedure `void` `writeInt`(`okhttp3.internal.http2.Hpack$Writer` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/http2/Hpack$Writer;.writeInt:(III)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14f388.  if v2 >= v3 then goto L14f39a;
  #L14f38c.  v3:= v1.`okhttp3.internal.http2.Hpack$Writer.e` @type ^`okio.Buffer` @kind object;
  #L14f390.  v2:= v2 ^| v4 @kind int;
  #L14f392.  call temp:= `writeByte`(v3, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L14f398.  return @kind void;
  #L14f39a.  v0:= v1.`okhttp3.internal.http2.Hpack$Writer.e` @type ^`okio.Buffer` @kind object;
  #L14f39e.  v4:= v4 ^| v3 @kind int;
  #L14f3a0.  call temp:= `writeByte`(v0, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L14f3a6.  v2:= v2 - v3 @kind int;
  #L14f3a8.  v3:= 128I;
  #L14f3ac.  if v2 < v3 then goto L14f3c6;
  #L14f3b0.  v4:= v2 ^& 127;
  #L14f3b4.  v0:= v1.`okhttp3.internal.http2.Hpack$Writer.e` @type ^`okio.Buffer` @kind object;
  #L14f3b8.  v3:= v3 ^| v4 @kind int;
  #L14f3ba.  call temp:= `writeByte`(v0, v3) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L14f3c0.  v2:= v2 ^>> 7;
  #L14f3c4.  goto L14f3a8;
  #L14f3c6.  v3:= v1.`okhttp3.internal.http2.Hpack$Writer.e` @type ^`okio.Buffer` @kind object;
  #L14f3ca.  call temp:= `writeByte`(v3, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L14f3d0.  return @kind void;
}
