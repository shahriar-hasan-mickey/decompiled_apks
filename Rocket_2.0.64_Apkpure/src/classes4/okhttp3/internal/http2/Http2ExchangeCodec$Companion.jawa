record `okhttp3.internal.http2.Http2ExchangeCodec$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2ExchangeCodec$Companion` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L152610.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L152616.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2ExchangeCodec$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L152628.  call `<init>`(v0) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;.<init>:()V` @kind direct;
  #L15262e.  return @kind void;
}
procedure `java.util.List` `http2HeadersList`(`okhttp3.internal.http2.Http2ExchangeCodec$Companion` v6 @kind this, `okhttp3.Request` v7 @kind object) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;.http2HeadersList:(Lokhttp3/Request;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1523b0.  v0:= "request" @kind object;
  #L1523b4.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1523ba.  call temp:= `headers`(v7) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1523c0.  v0:= temp @kind object;
  #L1523c2.  v1:= new `java.util.ArrayList`;
  #L1523c6.  call temp:= `size`(v0) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1523cc.  v2:= temp;
  #L1523ce.  v2:= v2 + 4;
  #L1523d2.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1523d8.  v2:= new `okhttp3.internal.http2.Header`;
  #L1523dc.  v3:= `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` @kind object;
  #L1523e0.  call temp:= `method`(v7) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L1523e6.  v4:= temp @kind object;
  #L1523e8.  call `<init>`(v2, v3, v4) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L1523ee.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1523f4.  v2:= new `okhttp3.internal.http2.Header`;
  #L1523f8.  v3:= `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` @kind object;
  #L1523fc.  v4:= `@@okhttp3.internal.http.RequestLine.INSTANCE` @type ^`okhttp3.internal.http.RequestLine` @kind object;
  #L152400.  call temp:= `url`(v7) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L152406.  v5:= temp @kind object;
  #L152408.  call temp:= `requestPath`(v4, v5) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L15240e.  v4:= temp @kind object;
  #L152410.  call `<init>`(v2, v3, v4) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L152416.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L15241c.  v2:= "Host" @kind object;
  #L152420.  call temp:= `header`(v7, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L152426.  v2:= temp @kind object;
  #L152428.  if v2 == 0 then goto L152440;
  #L15242c.  v3:= new `okhttp3.internal.http2.Header`;
  #L152430.  v4:= `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` @kind object;
  #L152434.  call `<init>`(v3, v4, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L15243a.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L152440.  v2:= new `okhttp3.internal.http2.Header`;
  #L152444.  v3:= `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` @kind object;
  #L152448.  call temp:= `url`(v7) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L15244e.  v7:= temp @kind object;
  #L152450.  call temp:= `scheme`(v7) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L152456.  v7:= temp @kind object;
  #L152458.  call `<init>`(v2, v3, v7) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L15245e.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L152464.  v7:= 0I;
  #L152466.  call temp:= `size`(v0) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L15246c.  v2:= temp;
  #L15246e.  if v7 >= v2 then goto L1524fe;
  #L152472.  call temp:= `name`(v0, v7) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L152478.  v3:= temp @kind object;
  #L15247a.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L15247e.  v5:= "Locale.US" @kind object;
  #L152482.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L152488.  v5:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L15248c.  call temp:= `requireNonNull`(v3, v5) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L152492.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L152498.  v3:= temp @kind object;
  #L15249a.  v4:= "(this as java.lang.String).toLowerCase(locale)" @kind object;
  #L15249e.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1524a4.  call temp:= `access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp`() @signature `Lokhttp3/internal/http2/Http2ExchangeCodec;.access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp:()Ljava/util/List;` @kind static;
  #L1524aa.  v4:= temp @kind object;
  #L1524ac.  call temp:= `contains`(v4, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1524b2.  v4:= temp;
  #L1524b4.  if v4 == 0 then goto L1524e0;
  #L1524b8.  v4:= "te" @kind object;
  #L1524bc.  call temp:= `areEqual`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1524c2.  v4:= temp;
  #L1524c4.  if v4 == 0 then goto L1524f8;
  #L1524c8.  call temp:= `value`(v0, v7) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1524ce.  v4:= temp @kind object;
  #L1524d0.  v5:= "trailers" @kind object;
  #L1524d4.  call temp:= `areEqual`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1524da.  v4:= temp;
  #L1524dc.  if v4 == 0 then goto L1524f8;
  #L1524e0.  v4:= new `okhttp3.internal.http2.Header`;
  #L1524e4.  call temp:= `value`(v0, v7) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1524ea.  v5:= temp @kind object;
  #L1524ec.  call `<init>`(v4, v3, v5) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L1524f2.  call temp:= `add`(v1, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1524f8.  v7:= v7 + 1;
  #L1524fc.  goto L15246e;
  #L1524fe.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `readHttp2HeadersList`(`okhttp3.internal.http2.Http2ExchangeCodec$Companion` v7 @kind this, `okhttp3.Headers` v8 @kind object, `okhttp3.Protocol` v9 @kind object) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;.readHttp2HeadersList:(Lokhttp3/Headers;Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L152510.  v0:= "headerBlock" @kind object;
  #L152514.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15251a.  v0:= "protocol" @kind object;
  #L15251e.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L152524.  v0:= new `okhttp3.Headers$Builder`;
  #L152528.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L15252e.  call temp:= `size`(v8) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L152534.  v1:= temp;
  #L152536.  v2:= 0I;
  #L152538.  v3:= 0I;
  #L15253a.  if v3 >= v1 then goto L1525ae;
  #L15253e.  call temp:= `name`(v8, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L152544.  v4:= temp @kind object;
  #L152546.  call temp:= `value`(v8, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L15254c.  v5:= temp @kind object;
  #L15254e.  v6:= ":status" @kind object;
  #L152552.  call temp:= `areEqual`(v4, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L152558.  v6:= temp;
  #L15255a.  if v6 == 0 then goto L15258e;
  #L15255e.  v2:= `@@okhttp3.internal.http.StatusLine.Companion` @type ^`okhttp3.internal.http.StatusLine$Companion` @kind object;
  #L152562.  v4:= new `java.lang.StringBuilder`;
  #L152566.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15256c.  v6:= "HTTP/1.1 " @kind object;
  #L152570.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152576.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15257c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152582.  v4:= temp @kind object;
  #L152584.  call temp:= `parse`(v2, v4) @signature `Lokhttp3/internal/http/StatusLine$Companion;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind virtual;
  #L15258a.  v2:= temp @kind object;
  #L15258c.  goto L1525a8;
  #L15258e.  call temp:= `access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp`() @signature `Lokhttp3/internal/http2/Http2ExchangeCodec;.access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp:()Ljava/util/List;` @kind static;
  #L152594.  v6:= temp @kind object;
  #L152596.  call temp:= `contains`(v6, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L15259c.  v6:= temp;
  #L15259e.  if v6 != 0 then goto L1525a8;
  #L1525a2.  call temp:= `addLenient$okhttp`(v0, v4, v5) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1525a8.  v3:= v3 + 1;
  #L1525ac.  goto L15253a;
  #L1525ae.  if v2 == 0 then goto L1525ee;
  #L1525b2.  v8:= new `okhttp3.Response$Builder`;
  #L1525b6.  call `<init>`(v8) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L1525bc.  call temp:= `protocol`(v8, v9) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1525c2.  v8:= temp @kind object;
  #L1525c4.  v9:= v2.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L1525c8.  call temp:= `code`(v8, v9) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L1525ce.  v8:= temp @kind object;
  #L1525d0.  v9:= v2.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L1525d4.  call temp:= `message`(v8, v9) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1525da.  v8:= temp @kind object;
  #L1525dc.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1525e2.  v9:= temp @kind object;
  #L1525e4.  call temp:= `headers`(v8, v9) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1525ea.  v8:= temp @kind object;
  #L1525ec.  return v8 @kind object;
  #L1525ee.  v8:= new `java.net.ProtocolException`;
  #L1525f2.  v9:= "Expected ':status' header not present" @kind object;
  #L1525f6.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1525fc.  throw v8;
}
