record `okhttp3.internal.http2.ErrorCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `okhttp3.internal.http2.ErrorCode.a` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CANCEL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode$Companion` `@@okhttp3.internal.http2.ErrorCode.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FRAME_SIZE_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.SETTINGS_TIMEOUT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.STREAM_CLOSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode`[] `@@okhttp3.internal.http2.ErrorCode.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/ErrorCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14e208.  v0:= 14I;
  #L14e20c.  v0:= new `okhttp3.internal.http2.ErrorCode`[v0];
  #L14e210.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e214.  v2:= "NO_ERROR" @kind object;
  #L14e218.  v3:= 0I;
  #L14e21a.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e220.  `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e224.  v0[v3]:= v1 @kind object;
  #L14e228.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e22c.  v2:= "PROTOCOL_ERROR" @kind object;
  #L14e230.  v3:= 1I;
  #L14e232.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e238.  `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e23c.  v0[v3]:= v1 @kind object;
  #L14e240.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e244.  v2:= "INTERNAL_ERROR" @kind object;
  #L14e248.  v3:= 2I;
  #L14e24a.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e250.  `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e254.  v0[v3]:= v1 @kind object;
  #L14e258.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e25c.  v2:= "FLOW_CONTROL_ERROR" @kind object;
  #L14e260.  v3:= 3I;
  #L14e262.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e268.  `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e26c.  v0[v3]:= v1 @kind object;
  #L14e270.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e274.  v2:= "SETTINGS_TIMEOUT" @kind object;
  #L14e278.  v3:= 4I;
  #L14e27a.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e280.  `@@okhttp3.internal.http2.ErrorCode.SETTINGS_TIMEOUT` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e284.  v0[v3]:= v1 @kind object;
  #L14e288.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e28c.  v2:= "STREAM_CLOSED" @kind object;
  #L14e290.  v3:= 5I;
  #L14e292.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e298.  `@@okhttp3.internal.http2.ErrorCode.STREAM_CLOSED` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e29c.  v0[v3]:= v1 @kind object;
  #L14e2a0.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e2a4.  v2:= "FRAME_SIZE_ERROR" @kind object;
  #L14e2a8.  v3:= 6I;
  #L14e2aa.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e2b0.  `@@okhttp3.internal.http2.ErrorCode.FRAME_SIZE_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e2b4.  v0[v3]:= v1 @kind object;
  #L14e2b8.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e2bc.  v2:= "REFUSED_STREAM" @kind object;
  #L14e2c0.  v3:= 7I;
  #L14e2c2.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e2c8.  `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e2cc.  v0[v3]:= v1 @kind object;
  #L14e2d0.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e2d4.  v2:= "CANCEL" @kind object;
  #L14e2d8.  v3:= 8I;
  #L14e2dc.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e2e2.  `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e2e6.  v0[v3]:= v1 @kind object;
  #L14e2ea.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e2ee.  v2:= "COMPRESSION_ERROR" @kind object;
  #L14e2f2.  v3:= 9I;
  #L14e2f6.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e2fc.  `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e300.  v0[v3]:= v1 @kind object;
  #L14e304.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e308.  v2:= "CONNECT_ERROR" @kind object;
  #L14e30c.  v3:= 10I;
  #L14e310.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e316.  `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e31a.  v0[v3]:= v1 @kind object;
  #L14e31e.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e322.  v2:= "ENHANCE_YOUR_CALM" @kind object;
  #L14e326.  v3:= 11I;
  #L14e32a.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e330.  `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e334.  v0[v3]:= v1 @kind object;
  #L14e338.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e33c.  v2:= "INADEQUATE_SECURITY" @kind object;
  #L14e340.  v3:= 12I;
  #L14e344.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e34a.  `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e34e.  v0[v3]:= v1 @kind object;
  #L14e352.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L14e356.  v2:= "HTTP_1_1_REQUIRED" @kind object;
  #L14e35a.  v3:= 13I;
  #L14e35e.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L14e364.  `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L14e368.  v0[v3]:= v1 @kind object;
  #L14e36c.  `@@okhttp3.internal.http2.ErrorCode.b` @type ^`okhttp3.internal.http2.ErrorCode`[] := v0 @kind object;
  #L14e370.  v0:= new `okhttp3.internal.http2.ErrorCode$Companion`;
  #L14e374.  v1:= 0I;
  #L14e376.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/ErrorCode$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L14e37c.  `@@okhttp3.internal.http2.ErrorCode.Companion` @type ^`okhttp3.internal.http2.ErrorCode$Companion` := v0 @kind object;
  #L14e380.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.ErrorCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L14e394.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L14e39a.  v0.`okhttp3.internal.http2.ErrorCode.a` @type ^`int` := v3;
  #L14e39e.  return @kind void;
}
procedure `okhttp3.internal.http2.ErrorCode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http2/ErrorCode;.valueOf:(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14e1c0.  v0:= constclass @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L14e1c4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L14e1ca.  v1:= temp @kind object;
  #L14e1cc.  v1:= (`okhttp3.internal.http2.ErrorCode`) v1 @kind object;
  #L14e1d0.  return v1 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode`[] `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14e1e4.  v0:= `@@okhttp3.internal.http2.ErrorCode.b` @type ^`okhttp3.internal.http2.ErrorCode`[] @kind object;
  #L14e1e8.  call temp:= `clone`(v0) @signature `[Lokhttp3/internal/http2/ErrorCode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L14e1ee.  v0:= temp @kind object;
  #L14e1f0.  v0:= (`okhttp3.internal.http2.ErrorCode`[]) v0 @kind object;
  #L14e1f4.  return v0 @kind object;
}
procedure `int` `getHttpCode`(`okhttp3.internal.http2.ErrorCode` v1 @kind this) @signature `Lokhttp3/internal/http2/ErrorCode;.getHttpCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14e1a8.  v0:= v1.`okhttp3.internal.http2.ErrorCode.a` @type ^`int`;
  #L14e1ac.  return v0;
}
