record `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.concurrent.Task` @kind class {
  `java.lang.String` `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.e` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.f` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.g` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.h` @AccessFlag FINAL_SYNTHETIC;
  `long` `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `java.lang.String` v3 @kind object, `boolean` v4 , `okhttp3.internal.http2.Http2Connection` v5 @kind object, `int` v6 , `long` v7 ) @signature `Lokhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;IJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L151088.  v0.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.e` @type ^`java.lang.String` := v1 @kind object;
  #L15108c.  v0.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.f` @type ^`boolean` := v2 @kind boolean;
  #L151090.  v0.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.g` @type ^`okhttp3.internal.http2.Http2Connection` := v5 @kind object;
  #L151094.  v0.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.h` @type ^`int` := v6;
  #L151098.  v0.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.i` @type ^`long` := v7 @kind wide;
  #L15109c.  call `<init>`(v0, v3, v4) @signature `Lokhttp3/internal/concurrent/Task;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L1510a2.  return @kind void;
}
procedure `long` `runOnce`(`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$1;.runOnce:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L151038.  v0:= v4.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.g` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L15103c.  call temp:= `getWriter`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriter:()Lokhttp3/internal/http2/Http2Writer;` @kind virtual;
  #L151042.  v0:= temp @kind object;
  #L151044.  v1:= v4.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.h` @type ^`int`;
  #L151048.  v2:= v4.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.i` @type ^`long` @kind wide;
  #L15104c.  call `windowUpdate`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Writer;.windowUpdate:(IJ)V` @kind virtual;
  #L151052.  goto L151060;
  #L151054.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L151056.  v1:= v4.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.g` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L15105a.  call `access$failConnection`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$failConnection:(Lokhttp3/internal/http2/Http2Connection;Ljava/io/IOException;)V` @kind static;
  #L151060.  v0:= -1L;
  #L151064.  return v0 @kind wide;
  catch `java.io.IOException` @[L151038..L151052] goto L151054;
}
