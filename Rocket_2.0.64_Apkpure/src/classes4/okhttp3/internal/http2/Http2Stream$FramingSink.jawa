record `okhttp3.internal.http2.Http2Stream$FramingSink` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Sink` @kind interface {
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSink.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.internal.http2.Http2Stream$FramingSink.b` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.c` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.d` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$FramingSink.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSink` v0 @kind this, `okhttp3.internal.http2.Http2Stream` v1 @kind object, `boolean` v2 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<init>:(Lokhttp3/internal/http2/Http2Stream;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L153868.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` := v1 @kind object;
  #L15386c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L153872.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.d` @type ^`boolean` := v2 @kind boolean;
  #L153876.  v1:= new `okio.Buffer`;
  #L15387a.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L153880.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`okio.Buffer` := v1 @kind object;
  #L153884.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSink` v0 @kind this, `okhttp3.internal.http2.Http2Stream` v1 @kind object, `boolean` v2 , `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<init>:(Lokhttp3/internal/http2/Http2Stream;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L153898.  v3:= v3 ^& 1;
  #L15389c.  if v3 == 0 then goto L1538a2;
  #L1538a0.  v2:= 0I;
  #L1538a2.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<init>:(Lokhttp3/internal/http2/Http2Stream;Z)V` @kind direct;
  #L1538a8.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Http2Stream$FramingSink` v11 @kind this, `boolean` v12 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.a:(Z)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L153aa8.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153aac.  @monitorenter v0
  #L153aae.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153ab2.  call temp:= `getWriteTimeout$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L153ab8.  v1:= temp @kind object;
  #L153aba.  call `enter`(v1) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L153ac0.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153ac4.  call temp:= `getWriteBytesTotal`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteBytesTotal:()J` @kind virtual;
  #L153aca.  v1:= temp @kind wide;
  #L153acc.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153ad0.  call temp:= `getWriteBytesMaximum`(v3) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteBytesMaximum:()J` @kind virtual;
  #L153ad6.  v3:= temp @kind wide;
  #L153ad8.  v5:= lcmp(v1, v3);
  #L153adc.  if v5 < 0 then goto L153b0c;
  #L153ae0.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.d` @type ^`boolean` @kind boolean;
  #L153ae4.  if v1 != 0 then goto L153b0c;
  #L153ae8.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`boolean` @kind boolean;
  #L153aec.  if v1 != 0 then goto L153b0c;
  #L153af0.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153af4.  call temp:= `getErrorCode$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getErrorCode$okhttp:()Lokhttp3/internal/http2/ErrorCode;` @kind virtual;
  #L153afa.  v1:= temp @kind object;
  #L153afc.  if v1 != 0 then goto L153b0c;
  #L153b00.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153b04.  call `waitForIo$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.waitForIo$okhttp:()V` @kind virtual;
  #L153b0a.  goto L153ac0;
  #L153b0c.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153b10.  call temp:= `getWriteTimeout$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L153b16.  v1:= temp @kind object;
  #L153b18.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L153b1e.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153b22.  call `checkOutNotClosed$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed$okhttp:()V` @kind virtual;
  #L153b28.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153b2c.  call temp:= `getWriteBytesMaximum`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteBytesMaximum:()J` @kind virtual;
  #L153b32.  v1:= temp @kind wide;
  #L153b34.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153b38.  call temp:= `getWriteBytesTotal`(v3) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteBytesTotal:()J` @kind virtual;
  #L153b3e.  v3:= temp @kind wide;
  #L153b40.  v1:= v1 - v3 @kind long;
  #L153b42.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`okio.Buffer` @kind object;
  #L153b46.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L153b4c.  v3:= temp @kind wide;
  #L153b4e.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L153b54.  v9:= temp @kind wide;
  #L153b56.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153b5a.  call temp:= `getWriteBytesTotal`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteBytesTotal:()J` @kind virtual;
  #L153b60.  v2:= temp @kind wide;
  #L153b62.  v2:= v2 + v9 @kind long;
  #L153b64.  call `setWriteBytesTotal$okhttp`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Stream;.setWriteBytesTotal$okhttp:(J)V` @kind virtual;
  #L153b6a.  if v12 == 0 then goto L153b88;
  #L153b6e.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`okio.Buffer` @kind object;
  #L153b72.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L153b78.  v1:= temp @kind wide;
  #L153b7a.  v12:= lcmp(v9, v1);
  #L153b7e.  if v12 != 0 then goto L153b88;
  #L153b82.  v12:= 1I;
  #L153b84.  v7:= 1I;
  #L153b86.  goto L153b8c;
  #L153b88.  v12:= 0I;
  #L153b8a.  v7:= 0I;
  #L153b8c.  v12:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L153b90.  @monitorexit v0
  #L153b92.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153b96.  call temp:= `getWriteTimeout$okhttp`(v12) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L153b9c.  v12:= temp @kind object;
  #L153b9e.  call `enter`(v12) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L153ba4.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153ba8.  call temp:= `getConnection`(v12) @signature `Lokhttp3/internal/http2/Http2Stream;.getConnection:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L153bae.  v5:= temp @kind object;
  #L153bb0.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153bb4.  call temp:= `getId`(v12) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L153bba.  v6:= temp;
  #L153bbc.  v8:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`okio.Buffer` @kind object;
  #L153bc0.  call `writeData`(v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L153bc6.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153bca.  call temp:= `getWriteTimeout$okhttp`(v12) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L153bd0.  v12:= temp @kind object;
  #L153bd2.  call `exitAndThrowIfTimedOut`(v12) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L153bd8.  return @kind void;
  #L153bda.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L153bdc.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153be0.  call temp:= `getWriteTimeout$okhttp`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L153be6.  v0:= temp @kind object;
  #L153be8.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L153bee.  throw v12;
  #L153bf0.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L153bf2.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153bf6.  call temp:= `getWriteTimeout$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L153bfc.  v1:= temp @kind object;
  #L153bfe.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L153c04.  throw v12;
  #L153c06.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L153c08.  @monitorexit v0
  #L153c0a.  throw v12;
  catch `java.lang.Throwable` @[L153aae..L153ac0] goto L153c06;
  catch `java.lang.Throwable` @[L153ac0..L153b0a] goto L153bf0;
  catch `java.lang.Throwable` @[L153b0c..L153b90] goto L153c06;
  catch `java.lang.Throwable` @[L153ba4..L153bc6] goto L153bda;
  catch `java.lang.Throwable` @[L153bf2..L153c06] goto L153c06;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Stream$FramingSink` v10 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1538bc.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L1538c0.  v1:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L1538c4.  if v1 == 0 then goto L15392e;
  #L1538c8.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1538ce.  v1:= temp;
  #L1538d0.  if v1 != 0 then goto L1538d6;
  #L1538d4.  goto L15392e;
  #L1538d6.  v1:= new `java.lang.AssertionError`;
  #L1538da.  v2:= new `java.lang.StringBuilder`;
  #L1538de.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1538e4.  v3:= "Thread " @kind object;
  #L1538e8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1538ee.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1538f4.  v3:= temp @kind object;
  #L1538f6.  v4:= "Thread.currentThread()" @kind object;
  #L1538fa.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L153900.  call temp:= `getName`(v3) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L153906.  v3:= temp @kind object;
  #L153908.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15390e.  v3:= " MUST NOT hold lock on " @kind object;
  #L153912.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153918.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15391e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153924.  v0:= temp @kind object;
  #L153926.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L15392c.  throw v1;
  #L15392e.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153932.  @monitorenter v0
  #L153934.  v1:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`boolean` @kind boolean;
  #L153938.  if v1 == 0 then goto L153940;
  #L15393c.  @monitorexit v0
  #L15393e.  return @kind void;
  #L153940.  v1:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153944.  call temp:= `getErrorCode$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getErrorCode$okhttp:()Lokhttp3/internal/http2/ErrorCode;` @kind virtual;
  #L15394a.  v1:= temp @kind object;
  #L15394c.  v2:= 0I;
  #L15394e.  v3:= 1I;
  #L153950.  if v1 != 0 then goto L153958;
  #L153954.  v1:= 1I;
  #L153956.  goto L15395a;
  #L153958.  v1:= 0I;
  #L15395a.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15395e.  @monitorexit v0
  #L153960.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153964.  call temp:= `getSink$okhttp`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getSink$okhttp:()Lokhttp3/internal/http2/Http2Stream$FramingSink;` @kind virtual;
  #L15396a.  v0:= temp @kind object;
  #L15396c.  v0:= v0.`okhttp3.internal.http2.Http2Stream$FramingSink.d` @type ^`boolean` @kind boolean;
  #L153970.  if v0 != 0 then goto L153a3c;
  #L153974.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`okio.Buffer` @kind object;
  #L153978.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L15397e.  v4:= temp @kind wide;
  #L153980.  v6:= 0L;
  #L153984.  v0:= lcmp(v4, v6);
  #L153988.  if v0 <= 0 then goto L153990;
  #L15398c.  v0:= 1I;
  #L15398e.  goto L153992;
  #L153990.  v0:= 0I;
  #L153992.  v4:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.b` @type ^`okhttp3.Headers` @kind object;
  #L153996.  if v4 == 0 then goto L15399e;
  #L15399a.  v4:= 1I;
  #L15399c.  goto L1539a0;
  #L15399e.  v4:= 0I;
  #L1539a0.  if v4 == 0 then goto L1539f2;
  #L1539a4.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`okio.Buffer` @kind object;
  #L1539a8.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1539ae.  v4:= temp @kind wide;
  #L1539b0.  v0:= lcmp(v4, v6);
  #L1539b4.  if v0 <= 0 then goto L1539c0;
  #L1539b8.  call `a`(v10, v2) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.a:(Z)V` @kind direct;
  #L1539be.  goto L1539a4;
  #L1539c0.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L1539c4.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getConnection:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L1539ca.  v0:= temp @kind object;
  #L1539cc.  v2:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L1539d0.  call temp:= `getId`(v2) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L1539d6.  v2:= temp;
  #L1539d8.  v4:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.b` @type ^`okhttp3.Headers` @kind object;
  #L1539dc.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1539e2.  call temp:= `toHeaderList`(v4) @signature `Lokhttp3/internal/Util;.toHeaderList:(Lokhttp3/Headers;)Ljava/util/List;` @kind static;
  #L1539e8.  v4:= temp @kind object;
  #L1539ea.  call `writeHeaders$okhttp`(v0, v2, v1, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.writeHeaders$okhttp:(IZLjava/util/List;)V` @kind virtual;
  #L1539f0.  goto L153a3c;
  #L1539f2.  if v0 == 0 then goto L153a12;
  #L1539f6.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`okio.Buffer` @kind object;
  #L1539fa.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L153a00.  v0:= temp @kind wide;
  #L153a02.  v2:= lcmp(v0, v6);
  #L153a06.  if v2 <= 0 then goto L153a3c;
  #L153a0a.  call `a`(v10, v3) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.a:(Z)V` @kind direct;
  #L153a10.  goto L1539f6;
  #L153a12.  if v1 == 0 then goto L153a3c;
  #L153a16.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153a1a.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getConnection:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L153a20.  v4:= temp @kind object;
  #L153a22.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153a26.  call temp:= `getId`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L153a2c.  v5:= temp;
  #L153a2e.  v6:= 1I;
  #L153a30.  v7:= 0I;
  #L153a32.  v8:= 0L;
  #L153a36.  call `writeData`(v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L153a3c.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153a40.  @monitorenter v0
  #L153a42.  v10.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`boolean` := v3 @kind boolean;
  #L153a46.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L153a4a.  @monitorexit v0
  #L153a4c.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153a50.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getConnection:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L153a56.  v0:= temp @kind object;
  #L153a58.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L153a5e.  v0:= v10.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153a62.  call `cancelStreamIfNecessary$okhttp`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.cancelStreamIfNecessary$okhttp:()V` @kind virtual;
  #L153a68.  return @kind void;
  #L153a6a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L153a6c.  @monitorexit v0
  #L153a6e.  throw v1;
  #L153a70.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L153a72.  @monitorexit v0
  #L153a74.  throw v1;
  catch `java.lang.Throwable` @[L153934..L153938] goto L153a70;
  catch `java.lang.Throwable` @[L153940..L15395e] goto L153a70;
  catch `java.lang.Throwable` @[L153a42..L153a4a] goto L153a6a;
}
procedure `void` `flush`(`okhttp3.internal.http2.Http2Stream$FramingSink` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L153c50.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153c54.  v1:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L153c58.  if v1 == 0 then goto L153cc2;
  #L153c5c.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L153c62.  v1:= temp;
  #L153c64.  if v1 != 0 then goto L153c6a;
  #L153c68.  goto L153cc2;
  #L153c6a.  v1:= new `java.lang.AssertionError`;
  #L153c6e.  v2:= new `java.lang.StringBuilder`;
  #L153c72.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153c78.  v3:= "Thread " @kind object;
  #L153c7c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153c82.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L153c88.  v3:= temp @kind object;
  #L153c8a.  v4:= "Thread.currentThread()" @kind object;
  #L153c8e.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L153c94.  call temp:= `getName`(v3) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L153c9a.  v3:= temp @kind object;
  #L153c9c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153ca2.  v3:= " MUST NOT hold lock on " @kind object;
  #L153ca6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153cac.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153cb2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153cb8.  v0:= temp @kind object;
  #L153cba.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L153cc0.  throw v1;
  #L153cc2.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153cc6.  @monitorenter v0
  #L153cc8.  v1:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153ccc.  call `checkOutNotClosed$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed$okhttp:()V` @kind virtual;
  #L153cd2.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L153cd6.  @monitorexit v0
  #L153cd8.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`okio.Buffer` @kind object;
  #L153cdc.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L153ce2.  v0:= temp @kind wide;
  #L153ce4.  v2:= 0L;
  #L153ce8.  v4:= lcmp(v0, v2);
  #L153cec.  if v4 <= 0 then goto L153d0c;
  #L153cf0.  v0:= 0I;
  #L153cf2.  call `a`(v5, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.a:(Z)V` @kind direct;
  #L153cf8.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153cfc.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getConnection:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L153d02.  v0:= temp @kind object;
  #L153d04.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L153d0a.  goto L153cd8;
  #L153d0c.  return @kind void;
  #L153d0e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L153d10.  @monitorexit v0
  #L153d12.  throw v1;
  catch `java.lang.Throwable` @[L153cc8..L153cd6] goto L153d0e;
}
procedure `boolean` `getClosed`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.getClosed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L153800.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`boolean` @kind boolean;
  #L153804.  return v0;
}
procedure `boolean` `getFinished`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.getFinished:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L153818.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.d` @type ^`boolean` @kind boolean;
  #L15381c.  return v0;
}
procedure `okhttp3.Headers` `getTrailers`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.getTrailers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L153830.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.b` @type ^`okhttp3.Headers` @kind object;
  #L153834.  return v0 @kind object;
}
procedure `void` `setClosed`(`okhttp3.internal.http2.Http2Stream$FramingSink` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.setClosed:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L153d30.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`boolean` := v1 @kind boolean;
  #L153d34.  return @kind void;
}
procedure `void` `setFinished`(`okhttp3.internal.http2.Http2Stream$FramingSink` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.setFinished:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L153d48.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.d` @type ^`boolean` := v1 @kind boolean;
  #L153d4c.  return @kind void;
}
procedure `void` `setTrailers`(`okhttp3.internal.http2.Http2Stream$FramingSink` v0 @kind this, `okhttp3.Headers` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.setTrailers:(Lokhttp3/Headers;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L153d60.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.b` @type ^`okhttp3.Headers` := v1 @kind object;
  #L153d64.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153848.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L15384c.  call temp:= `getWriteTimeout$okhttp`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L153852.  v0:= temp @kind object;
  #L153854.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http2.Http2Stream$FramingSink` v2 @kind this, `okio.Buffer` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L153d78.  v0:= "source" @kind object;
  #L153d7c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L153d82.  v0:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.e` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153d86.  v1:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L153d8a.  if v1 == 0 then goto L153df4;
  #L153d8e.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L153d94.  v1:= temp;
  #L153d96.  if v1 != 0 then goto L153d9c;
  #L153d9a.  goto L153df4;
  #L153d9c.  v3:= new `java.lang.AssertionError`;
  #L153da0.  v4:= new `java.lang.StringBuilder`;
  #L153da4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153daa.  v5:= "Thread " @kind object;
  #L153dae.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153db4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L153dba.  v5:= temp @kind object;
  #L153dbc.  v1:= "Thread.currentThread()" @kind object;
  #L153dc0.  call `checkNotNullExpressionValue`(v5, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L153dc6.  call temp:= `getName`(v5) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L153dcc.  v5:= temp @kind object;
  #L153dce.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153dd4.  v5:= " MUST NOT hold lock on " @kind object;
  #L153dd8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153dde.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153de4.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153dea.  v4:= temp @kind object;
  #L153dec.  call `<init>`(v3, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L153df2.  throw v3;
  #L153df4.  v0:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`okio.Buffer` @kind object;
  #L153df8.  call `write`(v0, v3, v4) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L153dfe.  v3:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`okio.Buffer` @kind object;
  #L153e02.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L153e08.  v3:= temp @kind wide;
  #L153e0a.  v0:= 16384L;
  #L153e0e.  v5:= lcmp(v3, v0);
  #L153e12.  if v5 < 0 then goto L153e20;
  #L153e16.  v3:= 0I;
  #L153e18.  call `a`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.a:(Z)V` @kind direct;
  #L153e1e.  goto L153dfe;
  #L153e20.  return @kind void;
}
