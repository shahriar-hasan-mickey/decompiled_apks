record `okhttp3.internal.http2.Http2` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okio.ByteString` `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.FLAG_ACK` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.FLAG_COMPRESSED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.FLAG_END_HEADERS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.FLAG_END_PUSH_PROMISE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.FLAG_END_STREAM` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.FLAG_NONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.FLAG_PADDED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.FLAG_PRIORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.INITIAL_MAX_FRAME_SIZE` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.http2.Http2` `@@okhttp3.internal.http2.Http2.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.TYPE_CONTINUATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.TYPE_DATA` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.TYPE_GOAWAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.TYPE_HEADERS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.TYPE_PING` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.TYPE_PRIORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.TYPE_PUSH_PROMISE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.TYPE_RST_STREAM` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.TYPE_SETTINGS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.TYPE_WINDOW_UPDATE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L155d98.  v0:= new `okhttp3.internal.http2.Http2`;
  #L155d9c.  call `<init>`(v0) @signature `Lokhttp3/internal/http2/Http2;.<init>:()V` @kind direct;
  #L155da2.  `@@okhttp3.internal.http2.Http2.INSTANCE` @type ^`okhttp3.internal.http2.Http2` := v0 @kind object;
  #L155da6.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L155daa.  v1:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L155dae.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L155db4.  v0:= temp @kind object;
  #L155db6.  `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` := v0 @kind object;
  #L155dba.  v1:= "DATA" @kind object;
  #L155dbe.  v2:= "HEADERS" @kind object;
  #L155dc2.  v3:= "PRIORITY" @kind object;
  #L155dc6.  v4:= "RST_STREAM" @kind object;
  #L155dca.  v5:= "SETTINGS" @kind object;
  #L155dce.  v6:= "PUSH_PROMISE" @kind object;
  #L155dd2.  v7:= "PING" @kind object;
  #L155dd6.  v8:= "GOAWAY" @kind object;
  #L155dda.  v9:= "WINDOW_UPDATE" @kind object;
  #L155dde.  v10:= "CONTINUATION" @kind object;
  #L155de2.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10];
  #L155de8.  v0:= temp @kind object;
  #L155dea.  `@@okhttp3.internal.http2.Http2.a` @type ^`java.lang.String`[] := v0 @kind object;
  #L155dee.  v0:= 64I;
  #L155df2.  v0:= new `java.lang.String`[v0];
  #L155df6.  `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L155dfa.  v0:= 256I;
  #L155dfe.  v1:= new `java.lang.String`[v0];
  #L155e02.  v2:= 0I;
  #L155e04.  v3:= 0I;
  #L155e06.  v4:= 1I;
  #L155e08.  if v3 >= v0 then goto L155e52;
  #L155e0c.  v4:= new `java.lang.Object`[v4];
  #L155e10.  call temp:= `toBinaryString`(v3) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L155e16.  v5:= temp @kind object;
  #L155e18.  v6:= "Integer.toBinaryString(it)" @kind object;
  #L155e1c.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L155e22.  v4[v2]:= v5 @kind object;
  #L155e26.  v5:= "%8s" @kind object;
  #L155e2a.  call temp:= `format`(v5, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L155e30.  v6:= temp @kind object;
  #L155e32.  v7:= 32I;
  #L155e36.  v8:= 48I;
  #L155e3a.  v9:= 0I;
  #L155e3c.  v10:= 4I;
  #L155e3e.  v11:= 0I;
  #L155e40.  call temp:= `replace$default`(v6, v7, v8, v9, v10, v11) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;CCZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L155e46.  v4:= temp @kind object;
  #L155e48.  v1[v3]:= v4 @kind object;
  #L155e4c.  v3:= v3 + 1;
  #L155e50.  goto L155e06;
  #L155e52.  `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] := v1 @kind object;
  #L155e56.  v0:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L155e5a.  v1:= "" @kind object;
  #L155e5e.  v0[v2]:= v1 @kind object;
  #L155e62.  v1:= "END_STREAM" @kind object;
  #L155e66.  v0[v4]:= v1 @kind object;
  #L155e6a.  v1:= new `int`[v4];
  #L155e6e.  v1[v2]:= v4;
  #L155e72.  v3:= "PADDED" @kind object;
  #L155e76.  v5:= 8I;
  #L155e7a.  v0[v5]:= v3 @kind object;
  #L155e7e.  v0:= 0I;
  #L155e80.  v3:= "|PADDED" @kind object;
  #L155e84.  if v0 >= v4 then goto L155eaa;
  #L155e88.  v6:= v1[v0];
  #L155e8c.  v7:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L155e90.  v8:= v6 ^| 8;
  #L155e94.  v6:= v7[v6] @kind object;
  #L155e98.  call temp:= `stringPlus`(v6, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L155e9e.  v3:= temp @kind object;
  #L155ea0.  v7[v8]:= v3 @kind object;
  #L155ea4.  v0:= v0 + 1;
  #L155ea8.  goto L155e80;
  #L155eaa.  v0:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L155eae.  v6:= 4I;
  #L155eb0.  v7:= "END_HEADERS" @kind object;
  #L155eb4.  v0[v6]:= v7 @kind object;
  #L155eb8.  v6:= 32I;
  #L155ebc.  v7:= "PRIORITY" @kind object;
  #L155ec0.  v0[v6]:= v7 @kind object;
  #L155ec4.  v6:= 36I;
  #L155ec8.  v7:= "END_HEADERS|PRIORITY" @kind object;
  #L155ecc.  v0[v6]:= v7 @kind object;
  #L155ed0.  v0:= 3I;
  #L155ed2.  v6:= new `int`[v0];
  #L155ed6.  goto L155f9c;
  #L155edc.  v7:= 0I;
  #L155ede.  if v7 >= v0 then goto L155f70;
  #L155ee2.  v8:= v6[v7];
  #L155ee6.  v9:= 0I;
  #L155ee8.  if v9 >= v4 then goto L155f6a;
  #L155eec.  v10:= v1[v9];
  #L155ef0.  v11:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L155ef4.  v12:= v10 ^| v8 @kind int;
  #L155ef8.  v13:= new `java.lang.StringBuilder`;
  #L155efc.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L155f02.  v14:= v11[v10] @kind object;
  #L155f06.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155f0c.  v14:= "|" @kind object;
  #L155f10.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155f16.  v15:= v11[v8] @kind object;
  #L155f1a.  call temp:= `append`(v13, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155f20.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L155f26.  v13:= temp @kind object;
  #L155f28.  v11[v12]:= v13 @kind object;
  #L155f2c.  v12:= v12 ^| v5 @kind int;
  #L155f2e.  v13:= new `java.lang.StringBuilder`;
  #L155f32.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L155f38.  v10:= v11[v10] @kind object;
  #L155f3c.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155f42.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155f48.  v10:= v11[v8] @kind object;
  #L155f4c.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155f52.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155f58.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L155f5e.  v10:= temp @kind object;
  #L155f60.  v11[v12]:= v10 @kind object;
  #L155f64.  v9:= v9 + 1;
  #L155f68.  goto L155ee8;
  #L155f6a.  v7:= v7 + 1;
  #L155f6e.  goto L155ede;
  #L155f70.  v0:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L155f74.  v0:= length @variable v0;
  #L155f76.  if v2 >= v0 then goto L155f98;
  #L155f7a.  v1:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L155f7e.  v3:= v1[v2] @kind object;
  #L155f82.  if v3 != 0 then goto L155f92;
  #L155f86.  v3:= `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] @kind object;
  #L155f8a.  v3:= v3[v2] @kind object;
  #L155f8e.  v1[v2]:= v3 @kind object;
  #L155f92.  v2:= v2 + 1;
  #L155f96.  goto L155f76;
  #L155f98.  return @kind void;
  #L155f9a.  
  #L155f9c.  v6:= (4I, 32I, 36I) @kind object;
  #L155faf.  goto L155edc;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L155fc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L155fc6.  return @kind void;
}
procedure `java.lang.String` `formatFlags`(`okhttp3.internal.http2.Http2` v7 @kind this, `int` v8 , `int` v9 ) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(II)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L155c18.  if v9 != 0 then goto L155c22;
  #L155c1c.  v8:= "" @kind object;
  #L155c20.  return v8 @kind object;
  #L155c22.  v0:= 2I;
  #L155c24.  if v8 == v0 then goto L155cc8;
  #L155c28.  v0:= 3I;
  #L155c2a.  if v8 == v0 then goto L155cc8;
  #L155c2e.  v0:= 4I;
  #L155c30.  if v8 == v0 then goto L155cb2;
  #L155c34.  v0:= 6I;
  #L155c36.  if v8 == v0 then goto L155cb2;
  #L155c3a.  v0:= 7I;
  #L155c3c.  if v8 == v0 then goto L155cc8;
  #L155c40.  v0:= 8I;
  #L155c44.  if v8 == v0 then goto L155cc8;
  #L155c48.  v0:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L155c4c.  v1:= length @variable v0;
  #L155c4e.  if v9 >= v1 then goto L155c5e;
  #L155c52.  v0:= v0[v9] @kind object;
  #L155c56.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L155c5c.  goto L155c66;
  #L155c5e.  v0:= `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] @kind object;
  #L155c62.  v0:= v0[v9] @kind object;
  #L155c66.  v1:= v0 @kind object;
  #L155c68.  v0:= 5I;
  #L155c6a.  if v8 != v0 then goto L155c8e;
  #L155c6e.  v0:= v9 ^& 4;
  #L155c72.  if v0 == 0 then goto L155c8e;
  #L155c76.  v4:= 0I;
  #L155c78.  v5:= 4I;
  #L155c7a.  v6:= 0I;
  #L155c7c.  v2:= "HEADERS" @kind object;
  #L155c80.  v3:= "PUSH_PROMISE" @kind object;
  #L155c84.  call temp:= `replace$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L155c8a.  v1:= temp @kind object;
  #L155c8c.  goto L155cb0;
  #L155c8e.  if v8 != 0 then goto L155cb0;
  #L155c92.  v8:= v9 ^& 32;
  #L155c96.  if v8 == 0 then goto L155cb0;
  #L155c9a.  v4:= 0I;
  #L155c9c.  v5:= 4I;
  #L155c9e.  v6:= 0I;
  #L155ca0.  v2:= "PRIORITY" @kind object;
  #L155ca4.  v3:= "COMPRESSED" @kind object;
  #L155ca8.  call temp:= `replace$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L155cae.  v1:= temp @kind object;
  #L155cb0.  return v1 @kind object;
  #L155cb2.  v8:= 1I;
  #L155cb4.  if v9 != v8 then goto L155cbe;
  #L155cb8.  v8:= "ACK" @kind object;
  #L155cbc.  goto L155cc6;
  #L155cbe.  v8:= `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] @kind object;
  #L155cc2.  v8:= v8[v9] @kind object;
  #L155cc6.  return v8 @kind object;
  #L155cc8.  v8:= `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] @kind object;
  #L155ccc.  v8:= v8[v9] @kind object;
  #L155cd0.  return v8 @kind object;
}
procedure `java.lang.String` `formattedType$okhttp`(`okhttp3.internal.http2.Http2` v2 @kind this, `int` v3 ) @signature `Lokhttp3/internal/http2/Http2;.formattedType$okhttp:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L155ce4.  v0:= `@@okhttp3.internal.http2.Http2.a` @type ^`java.lang.String`[] @kind object;
  #L155ce8.  v1:= length @variable v0;
  #L155cea.  if v3 >= v1 then goto L155cf4;
  #L155cee.  v3:= v0[v3] @kind object;
  #L155cf2.  goto L155d14;
  #L155cf4.  v0:= 1I;
  #L155cf6.  v0:= new `java.lang.Object`[v0];
  #L155cfa.  v1:= 0I;
  #L155cfc.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L155d02.  v3:= temp @kind object;
  #L155d04.  v0[v1]:= v3 @kind object;
  #L155d08.  v3:= "0x%02x" @kind object;
  #L155d0c.  call temp:= `format`(v3, v0) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L155d12.  v3:= temp @kind object;
  #L155d14.  return v3 @kind object;
}
procedure `java.lang.String` `frameLog`(`okhttp3.internal.http2.Http2` v2 @kind this, `boolean` v3 , `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIII)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L155d28.  call temp:= `formattedType$okhttp`(v2, v6) @signature `Lokhttp3/internal/http2/Http2;.formattedType$okhttp:(I)Ljava/lang/String;` @kind virtual;
  #L155d2e.  v0:= temp @kind object;
  #L155d30.  call temp:= `formatFlags`(v2, v6, v7) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(II)Ljava/lang/String;` @kind virtual;
  #L155d36.  v6:= temp @kind object;
  #L155d38.  if v3 == 0 then goto L155d42;
  #L155d3c.  v3:= "<<" @kind object;
  #L155d40.  goto L155d46;
  #L155d42.  v3:= ">>" @kind object;
  #L155d46.  v7:= 5I;
  #L155d48.  v7:= new `java.lang.Object`[v7];
  #L155d4c.  v1:= 0I;
  #L155d4e.  v7[v1]:= v3 @kind object;
  #L155d52.  v3:= 1I;
  #L155d54.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L155d5a.  v4:= temp @kind object;
  #L155d5c.  v7[v3]:= v4 @kind object;
  #L155d60.  v3:= 2I;
  #L155d62.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L155d68.  v4:= temp @kind object;
  #L155d6a.  v7[v3]:= v4 @kind object;
  #L155d6e.  v3:= 3I;
  #L155d70.  v7[v3]:= v0 @kind object;
  #L155d74.  v3:= 4I;
  #L155d76.  v7[v3]:= v6 @kind object;
  #L155d7a.  v3:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L155d7e.  call temp:= `format`(v3, v7) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L155d84.  v3:= temp @kind object;
  #L155d86.  return v3 @kind object;
}
