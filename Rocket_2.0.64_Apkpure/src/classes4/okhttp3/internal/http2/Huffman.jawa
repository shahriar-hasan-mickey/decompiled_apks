record `okhttp3.internal.http2.Huffman` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okhttp3.internal.http2.Huffman` `@@okhttp3.internal.http2.Huffman.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int`[] `@@okhttp3.internal.http2.Huffman.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.http2.Huffman.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.http2.Huffman$a` `@@okhttp3.internal.http2.Huffman.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Huffman;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1560e8.  v0:= new `okhttp3.internal.http2.Huffman`;
  #L1560ec.  call `<init>`(v0) @signature `Lokhttp3/internal/http2/Huffman;.<init>:()V` @kind direct;
  #L1560f2.  `@@okhttp3.internal.http2.Huffman.INSTANCE` @type ^`okhttp3.internal.http2.Huffman` := v0 @kind object;
  #L1560f6.  v1:= 256I;
  #L1560fa.  v2:= new `int`[v1];
  #L1560fe.  goto L15614c;
  #L156104.  `@@okhttp3.internal.http2.Huffman.a` @type ^`int`[] := v2 @kind object;
  #L156108.  v1:= new `byte`[v1];
  #L15610c.  goto L156554;
  #L156112.  `@@okhttp3.internal.http2.Huffman.b` @type ^`byte`[] := v1 @kind object;
  #L156116.  v2:= new `okhttp3.internal.http2.Huffman$a`;
  #L15611a.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Huffman$a;.<init>:()V` @kind direct;
  #L156120.  `@@okhttp3.internal.http2.Huffman.c` @type ^`okhttp3.internal.http2.Huffman$a` := v2 @kind object;
  #L156124.  v1:= length @variable v1;
  #L156126.  v2:= 0I;
  #L156128.  if v2 >= v1 then goto L156148;
  #L15612c.  v3:= `@@okhttp3.internal.http2.Huffman.a` @type ^`int`[] @kind object;
  #L156130.  v3:= v3[v2];
  #L156134.  v4:= `@@okhttp3.internal.http2.Huffman.b` @type ^`byte`[] @kind object;
  #L156138.  v4:= v4[v2] @kind byte;
  #L15613c.  call `a`(v0, v2, v3, v4) @signature `Lokhttp3/internal/http2/Huffman;.a:(III)V` @kind direct;
  #L156142.  v2:= v2 + 1;
  #L156146.  goto L156128;
  #L156148.  return @kind void;
  #L15614a.  
  #L15614c.  v2:= (8184I, 8388568I, 268435426I, 268435427I, 268435428I, 268435429I, 268435430I, 268435431I, 268435432I, 16777194I, 1073741820I, 268435433I, 268435434I, 1073741821I, 268435435I, 268435436I, 268435437I, 268435438I, 268435439I, 268435440I, 268435441I, 268435442I, 1073741822I, 268435443I, 268435444I, 268435445I, 268435446I, 268435447I, 268435448I, 268435449I, 268435450I, 268435451I, 20I, 1016I, 1017I, 4090I, 8185I, 21I, 248I, 2042I, 1018I, 1019I, 249I, 2043I, 250I, 22I, 23I, 24I, 0I, 1I, 2I, 25I, 26I, 27I, 28I, 29I, 30I, 31I, 92I, 251I, 32764I, 32I, 4091I, 1020I, 8186I, 33I, 93I, 94I, 95I, 96I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 252I, 115I, 253I, 8187I, 524272I, 8188I, 16380I, 34I, 32765I, 3I, 35I, 4I, 36I, 5I, 37I, 38I, 39I, 6I, 116I, 117I, 40I, 41I, 42I, 7I, 43I, 118I, 44I, 8I, 9I, 45I, 119I, 120I, 121I, 122I, 123I, 32766I, 2044I, 16381I, 8189I, 268435452I, 1048550I, 4194258I, 1048551I, 1048552I, 4194259I, 4194260I, 4194261I, 8388569I, 4194262I, 8388570I, 8388571I, 8388572I, 8388573I, 8388574I, 16777195I, 8388575I, 16777196I, 16777197I, 4194263I, 8388576I, 16777198I, 8388577I, 8388578I, 8388579I, 8388580I, 2097116I, 4194264I, 8388581I, 4194265I, 8388582I, 8388583I, 16777199I, 4194266I, 2097117I, 1048553I, 4194267I, 4194268I, 8388584I, 8388585I, 2097118I, 8388586I, 4194269I, 4194270I, 16777200I, 2097119I, 4194271I, 8388587I, 8388588I, 2097120I, 2097121I, 4194272I, 2097122I, 8388589I, 4194273I, 8388590I, 8388591I, 1048554I, 4194274I, 4194275I, 4194276I, 8388592I, 4194277I, 4194278I, 8388593I, 67108832I, 67108833I, 1048555I, 524273I, 4194279I, 8388594I, 4194280I, 33554412I, 67108834I, 67108835I, 67108836I, 134217694I, 134217695I, 67108837I, 16777201I, 33554413I, 524274I, 2097123I, 67108838I, 134217696I, 134217697I, 67108839I, 134217698I, 16777202I, 2097124I, 2097125I, 67108840I, 67108841I, 268435453I, 134217699I, 134217700I, 134217701I, 1048556I, 16777203I, 1048557I, 2097126I, 4194281I, 2097127I, 2097128I, 8388595I, 4194282I, 4194283I, 33554414I, 33554415I, 16777204I, 16777205I, 67108842I, 8388596I, 67108843I, 134217702I, 67108844I, 67108845I, 134217703I, 134217704I, 134217705I, 134217706I, 134217707I, 268435454I, 134217708I, 134217709I, 134217710I, 134217711I, 134217712I, 67108846I) @kind object;
  #L156553.  goto L156104;
  #L156554.  v1:= (13I, 23I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 24I, 30I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 6I, 10I, 10I, 12I, 13I, 6I, 8I, 11I, 10I, 10I, 8I, 11I, 8I, 6I, 6I, 6I, 5I, 5I, 5I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 7I, 8I, 15I, 6I, 12I, 10I, 13I, 6I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 8I, 7I, 8I, 13I, 19I, 13I, 14I, 6I, 15I, 5I, 6I, 5I, 6I, 5I, 6I, 6I, 6I, 5I, 7I, 7I, 6I, 6I, 6I, 5I, 6I, 7I, 6I, 5I, 5I, 6I, 7I, 7I, 7I, 7I, 7I, 15I, 11I, 14I, 13I, 28I, 20I, 22I, 20I, 20I, 22I, 22I, 22I, 23I, 22I, 23I, 23I, 23I, 23I, 23I, 24I, 23I, 24I, 24I, 22I, 23I, 24I, 23I, 23I, 23I, 23I, 21I, 22I, 23I, 22I, 23I, 23I, 24I, 22I, 21I, 20I, 22I, 22I, 23I, 23I, 21I, 23I, 22I, 22I, 24I, 21I, 22I, 23I, 23I, 21I, 21I, 22I, 21I, 23I, 22I, 23I, 23I, 20I, 22I, 22I, 22I, 23I, 22I, 22I, 23I, 26I, 26I, 20I, 19I, 22I, 23I, 22I, 25I, 26I, 26I, 26I, 27I, 27I, 26I, 24I, 25I, 19I, 21I, 26I, 27I, 27I, 26I, 27I, 24I, 21I, 21I, 26I, 26I, 28I, 27I, 27I, 27I, 20I, 24I, 20I, 21I, 22I, 21I, 21I, 23I, 22I, 22I, 25I, 25I, 24I, 24I, 26I, 23I, 26I, 27I, 26I, 26I, 27I, 27I, 27I, 27I, 27I, 28I, 27I, 27I, 27I, 27I, 27I, 26I) @kind object;
  #L15665b.  goto L156112;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Huffman` v0 @kind this) @signature `Lokhttp3/internal/http2/Huffman;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15666c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L156672.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Huffman` v3 @kind this, `int` v4 , `int` v5 , `int` v6 ) @signature `Lokhttp3/internal/http2/Huffman;.a:(III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L156684.  v0:= new `okhttp3.internal.http2.Huffman$a`;
  #L156688.  call `<init>`(v0, v4, v6) @signature `Lokhttp3/internal/http2/Huffman$a;.<init>:(II)V` @kind direct;
  #L15668e.  v4:= `@@okhttp3.internal.http2.Huffman.c` @type ^`okhttp3.internal.http2.Huffman$a` @kind object;
  #L156692.  v1:= 8I;
  #L156696.  if v6 <= v1 then goto L1566ce;
  #L15669a.  v6:= v6 + -8;
  #L15669e.  v1:= v5 ^>> v6 @kind int;
  #L1566a2.  v1:= v1 ^& 255;
  #L1566a6.  call temp:= `a`(v4) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L1566ac.  v4:= temp @kind object;
  #L1566ae.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1566b4.  v2:= v4[v1] @kind object;
  #L1566b8.  if v2 != 0 then goto L1566ca;
  #L1566bc.  v2:= new `okhttp3.internal.http2.Huffman$a`;
  #L1566c0.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Huffman$a;.<init>:()V` @kind direct;
  #L1566c6.  v4[v1]:= v2 @kind object;
  #L1566ca.  v4:= v2 @kind object;
  #L1566cc.  goto L156692;
  #L1566ce.  v1:= v1 - v6 @kind int;
  #L1566d0.  v5:= v5 ^< v1 @kind int;
  #L1566d2.  v5:= v5 ^& 255;
  #L1566d6.  v6:= 1I;
  #L1566d8.  v6:= v6 ^< v1 @kind int;
  #L1566da.  call temp:= `a`(v4) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L1566e0.  v4:= temp @kind object;
  #L1566e2.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1566e8.  v6:= v6 + v5 @kind int;
  #L1566ea.  call `fill`(v4, v0, v5, v6) @signature `Lkotlin/collections/ArraysKt;.fill:([Ljava/lang/Object;Ljava/lang/Object;II)V` @kind static;
  #L1566f0.  return @kind void;
}
procedure `void` `decode`(`okhttp3.internal.http2.Huffman` v8 @kind this, `okio.BufferedSource` v9 @kind object, `long` v10 , `okio.BufferedSink` v12 @kind object) @signature `Lokhttp3/internal/http2/Huffman;.decode:(Lokio/BufferedSource;JLokio/BufferedSink;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L156704.  v0:= "source" @kind object;
  #L156708.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15670e.  v0:= "sink" @kind object;
  #L156712.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L156718.  v0:= `@@okhttp3.internal.http2.Huffman.c` @type ^`okhttp3.internal.http2.Huffman$a` @kind object;
  #L15671c.  v1:= 0I;
  #L15671e.  v2:= 0L;
  #L156722.  v3:= v2 @kind wide;
  #L156724.  v2:= 0I;
  #L156726.  v5:= 255I;
  #L15672a.  v6:= lcmp(v3, v10);
  #L15672e.  if v6 >= 0 then goto L1567ac;
  #L156732.  call temp:= `readByte`(v9) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L156738.  v6:= temp;
  #L15673a.  call temp:= `and`(v6, v5) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L156740.  v6:= temp;
  #L156742.  v1:= v1 ^< 8;
  #L156746.  v1:= v1 ^| v6 @kind int;
  #L156748.  v2:= v2 + 8;
  #L15674c.  v6:= 8I;
  #L156750.  if v2 < v6 then goto L1567a4;
  #L156754.  v6:= v2 + -8;
  #L156758.  v7:= v1 ^>> v6 @kind int;
  #L15675c.  v7:= v7 ^& v5 @kind int;
  #L15675e.  call temp:= `a`(v0) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L156764.  v0:= temp @kind object;
  #L156766.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15676c.  v0:= v0[v7] @kind object;
  #L156770.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L156776.  call temp:= `a`(v0) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L15677c.  v7:= temp @kind object;
  #L15677e.  if v7 != 0 then goto L1567a0;
  #L156782.  call temp:= `b`(v0) @signature `Lokhttp3/internal/http2/Huffman$a;.b:()I` @kind virtual;
  #L156788.  v6:= temp;
  #L15678a.  call temp:= `writeByte`(v12, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L156790.  call temp:= `c`(v0) @signature `Lokhttp3/internal/http2/Huffman$a;.c:()I` @kind virtual;
  #L156796.  v0:= temp;
  #L156798.  v2:= v2 - v0 @kind int;
  #L15679a.  v0:= `@@okhttp3.internal.http2.Huffman.c` @type ^`okhttp3.internal.http2.Huffman$a` @kind object;
  #L15679e.  goto L15674c;
  #L1567a0.  v2:= v6;
  #L1567a2.  goto L15674c;
  #L1567a4.  v5:= 1L;
  #L1567a8.  v3:= v3 + v5 @kind long;
  #L1567aa.  goto L156726;
  #L1567ac.  if v2 <= 0 then goto L15680a;
  #L1567b0.  v9:= v2 - 8;
  #L1567b4.  v9:= v1 ^< v9 @kind int;
  #L1567b8.  v9:= v9 ^& v5 @kind int;
  #L1567ba.  call temp:= `a`(v0) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L1567c0.  v10:= temp @kind object;
  #L1567c2.  call `checkNotNull`(v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1567c8.  v9:= v10[v9] @kind object;
  #L1567cc.  call `checkNotNull`(v9) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1567d2.  call temp:= `a`(v9) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L1567d8.  v10:= temp @kind object;
  #L1567da.  if v10 != 0 then goto L15680a;
  #L1567de.  call temp:= `c`(v9) @signature `Lokhttp3/internal/http2/Huffman$a;.c:()I` @kind virtual;
  #L1567e4.  v10:= temp;
  #L1567e6.  if v10 <= v2 then goto L1567ec;
  #L1567ea.  goto L15680a;
  #L1567ec.  call temp:= `b`(v9) @signature `Lokhttp3/internal/http2/Huffman$a;.b:()I` @kind virtual;
  #L1567f2.  v10:= temp;
  #L1567f4.  call temp:= `writeByte`(v12, v10) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1567fa.  call temp:= `c`(v9) @signature `Lokhttp3/internal/http2/Huffman$a;.c:()I` @kind virtual;
  #L156800.  v9:= temp;
  #L156802.  v2:= v2 - v9 @kind int;
  #L156804.  v0:= `@@okhttp3.internal.http2.Huffman.c` @type ^`okhttp3.internal.http2.Huffman$a` @kind object;
  #L156808.  goto L1567ac;
  #L15680a.  return @kind void;
}
procedure `void` `encode`(`okhttp3.internal.http2.Huffman` v8 @kind this, `okio.ByteString` v9 @kind object, `okio.BufferedSink` v10 @kind object) @signature `Lokhttp3/internal/http2/Huffman;.encode:(Lokio/ByteString;Lokio/BufferedSink;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L15681c.  v0:= "source" @kind object;
  #L156820.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L156826.  v0:= "sink" @kind object;
  #L15682a.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L156830.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L156836.  v0:= temp;
  #L156838.  v1:= 0I;
  #L15683a.  v2:= 0L;
  #L15683e.  v3:= v2 @kind wide;
  #L156840.  v2:= 0I;
  #L156842.  if v1 >= v0 then goto L156892;
  #L156846.  call temp:= `getByte`(v9, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L15684c.  v5:= temp;
  #L15684e.  v6:= 255I;
  #L156852.  call temp:= `and`(v5, v6) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L156858.  v5:= temp;
  #L15685a.  v6:= `@@okhttp3.internal.http2.Huffman.a` @type ^`int`[] @kind object;
  #L15685e.  v6:= v6[v5];
  #L156862.  v7:= `@@okhttp3.internal.http2.Huffman.b` @type ^`byte`[] @kind object;
  #L156866.  v5:= v7[v5] @kind byte;
  #L15686a.  v3:= v3 ^< v5 @kind long;
  #L15686c.  v6:= (`long`) v6 @kind i2l;
  #L15686e.  v3:= v3 ^| v6 @kind long;
  #L156870.  v2:= v2 + v5 @kind int;
  #L156872.  v5:= 8I;
  #L156876.  if v2 < v5 then goto L15688c;
  #L15687a.  v2:= v2 + -8;
  #L15687e.  v5:= v3 ^> v2 @kind long;
  #L156882.  v6:= (`int`) v5 @kind l2i;
  #L156884.  call temp:= `writeByte`(v10, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L15688a.  goto L156872;
  #L15688c.  v1:= v1 + 1;
  #L156890.  goto L156842;
  #L156892.  if v2 <= 0 then goto L1568b0;
  #L156896.  v9:= v2 - 8;
  #L15689a.  v0:= v3 ^< v9 @kind long;
  #L15689e.  v3:= 255L;
  #L1568a2.  v2:= v3 ^>> v2 @kind long;
  #L1568a6.  v0:= v0 ^| v2 @kind long;
  #L1568a8.  v9:= (`int`) v0 @kind l2i;
  #L1568aa.  call temp:= `writeByte`(v10, v9) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1568b0.  return @kind void;
}
procedure `int` `encodedLength`(`okhttp3.internal.http2.Huffman` v6 @kind this, `okio.ByteString` v7 @kind object) @signature `Lokhttp3/internal/http2/Huffman;.encodedLength:(Lokio/ByteString;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L156084.  v0:= "bytes" @kind object;
  #L156088.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15608e.  call temp:= `size`(v7) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L156094.  v0:= temp;
  #L156096.  v1:= 0L;
  #L15609a.  v3:= 0I;
  #L15609c.  if v3 >= v0 then goto L1560c6;
  #L1560a0.  call temp:= `getByte`(v7, v3) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1560a6.  v4:= temp;
  #L1560a8.  v5:= 255I;
  #L1560ac.  call temp:= `and`(v4, v5) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1560b2.  v4:= temp;
  #L1560b4.  v5:= `@@okhttp3.internal.http2.Huffman.b` @type ^`byte`[] @kind object;
  #L1560b8.  v4:= v5[v4] @kind byte;
  #L1560bc.  v4:= (`long`) v4 @kind i2l;
  #L1560be.  v1:= v1 + v4 @kind long;
  #L1560c0.  v3:= v3 + 1;
  #L1560c4.  goto L15609c;
  #L1560c6.  v7:= 7I;
  #L1560c8.  v3:= (`long`) v7 @kind i2l;
  #L1560ca.  v1:= v1 + v3 @kind long;
  #L1560cc.  v7:= 3I;
  #L1560ce.  v0:= v1 ^> v7 @kind long;
  #L1560d2.  v7:= (`int`) v0 @kind l2i;
  #L1560d4.  return v7;
}
