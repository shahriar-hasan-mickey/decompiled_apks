record `okhttp3.internal.http2.Http2Stream$FramingSource` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Source` @kind interface {
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSource.a` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSource.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.internal.http2.Http2Stream$FramingSource.c` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSource.d` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Stream$FramingSource.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSource.f` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$FramingSource.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSource` v0 @kind this, `okhttp3.internal.http2.Http2Stream` v1 @kind object, `long` v2 , `boolean` v4 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.<init>:(Lokhttp3/internal/http2/Http2Stream;JZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15411c.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` := v1 @kind object;
  #L154120.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L154126.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.e` @type ^`long` := v2 @kind wide;
  #L15412a.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.f` @type ^`boolean` := v4 @kind boolean;
  #L15412e.  v1:= new `okio.Buffer`;
  #L154132.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L154138.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.a` @type ^`okio.Buffer` := v1 @kind object;
  #L15413c.  v1:= new `okio.Buffer`;
  #L154140.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L154146.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`okio.Buffer` := v1 @kind object;
  #L15414a.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Http2Stream$FramingSource` v3 @kind this, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.a:(J)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1543f8.  v0:= v3.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L1543fc.  v1:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L154400.  if v1 == 0 then goto L15446a;
  #L154404.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L15440a.  v1:= temp;
  #L15440c.  if v1 != 0 then goto L154412;
  #L154410.  goto L15446a;
  #L154412.  v4:= new `java.lang.AssertionError`;
  #L154416.  v5:= new `java.lang.StringBuilder`;
  #L15441a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L154420.  v1:= "Thread " @kind object;
  #L154424.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15442a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L154430.  v1:= temp @kind object;
  #L154432.  v2:= "Thread.currentThread()" @kind object;
  #L154436.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15443c.  call temp:= `getName`(v1) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L154442.  v1:= temp @kind object;
  #L154444.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15444a.  v1:= " MUST NOT hold lock on " @kind object;
  #L15444e.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154454.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15445a.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L154460.  v5:= temp @kind object;
  #L154462.  call `<init>`(v4, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L154468.  throw v4;
  #L15446a.  v0:= v3.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L15446e.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getConnection:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L154474.  v0:= temp @kind object;
  #L154476.  call `updateConnectionFlowControl$okhttp`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.updateConnectionFlowControl$okhttp:(J)V` @kind virtual;
  #L15447c.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Stream$FramingSource` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15415c.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L154160.  @monitorenter v0
  #L154162.  v1:= 1I;
  #L154164.  v5.`okhttp3.internal.http2.Http2Stream$FramingSource.d` @type ^`boolean` := v1 @kind boolean;
  #L154168.  v1:= v5.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`okio.Buffer` @kind object;
  #L15416c.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L154172.  v1:= temp @kind wide;
  #L154174.  v3:= v5.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`okio.Buffer` @kind object;
  #L154178.  call `clear`(v3) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L15417e.  v3:= v5.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L154182.  if v3 == 0 then goto L1541b0;
  #L154186.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L15418c.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L154190.  @monitorexit v0
  #L154192.  v3:= 0L;
  #L154196.  v0:= lcmp(v1, v3);
  #L15419a.  if v0 <= 0 then goto L1541a4;
  #L15419e.  call `a`(v5, v1) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.a:(J)V` @kind direct;
  #L1541a4.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L1541a8.  call `cancelStreamIfNecessary$okhttp`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.cancelStreamIfNecessary$okhttp:()V` @kind virtual;
  #L1541ae.  return @kind void;
  #L1541b0.  v1:= new `java.lang.NullPointerException`;
  #L1541b4.  v2:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L1541b8.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1541be.  throw v1;
  #L1541c0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1541c2.  @monitorexit v0
  #L1541c4.  throw v1;
  catch `java.lang.Throwable` @[L154164..L154190] goto L1541c0;
  catch `java.lang.Throwable` @[L1541b0..L1541c0] goto L1541c0;
}
procedure `boolean` `getClosed$okhttp`(`okhttp3.internal.http2.Http2Stream$FramingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.getClosed$okhttp:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L153e34.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.d` @type ^`boolean` @kind boolean;
  #L153e38.  return v0;
}
procedure `boolean` `getFinished$okhttp`(`okhttp3.internal.http2.Http2Stream$FramingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.getFinished$okhttp:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L153e4c.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.f` @type ^`boolean` @kind boolean;
  #L153e50.  return v0;
}
procedure `okio.Buffer` `getReadBuffer`(`okhttp3.internal.http2.Http2Stream$FramingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.getReadBuffer:()Lokio/Buffer;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1540cc.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`okio.Buffer` @kind object;
  #L1540d0.  return v0 @kind object;
}
procedure `okio.Buffer` `getReceiveBuffer`(`okhttp3.internal.http2.Http2Stream$FramingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.getReceiveBuffer:()Lokio/Buffer;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1540e4.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.a` @type ^`okio.Buffer` @kind object;
  #L1540e8.  return v0 @kind object;
}
procedure `okhttp3.Headers` `getTrailers`(`okhttp3.internal.http2.Http2Stream$FramingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.getTrailers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1540b4.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.Headers` @kind object;
  #L1540b8.  return v0 @kind object;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Stream$FramingSource` v17 @kind this, `okio.Buffer` v18 @kind object, `long` v19 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L153e64.  v1:= v17 @kind object;
  #L153e68.  v0:= v18 @kind object;
  #L153e6c.  v2:= v19 @kind wide;
  #L153e70.  v4:= "sink" @kind object;
  #L153e74.  call `checkNotNullParameter`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L153e7a.  v6:= 0L;
  #L153e7e.  v8:= lcmp(v2, v6);
  #L153e82.  if v8 < 0 then goto L153e8a;
  #L153e86.  v8:= 1I;
  #L153e88.  goto L153e8c;
  #L153e8a.  v8:= 0I;
  #L153e8c.  if v8 == 0 then goto L15403e;
  #L153e90.  v8:= 0I;
  #L153e92.  v9:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153e96.  @monitorenter v9
  #L153e98.  v10:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153e9c.  call temp:= `getReadTimeout$okhttp`(v10) @signature `Lokhttp3/internal/http2/Http2Stream;.getReadTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L153ea2.  v10:= temp @kind object;
  #L153ea4.  call `enter`(v10) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L153eaa.  v10:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153eae.  call temp:= `getErrorCode$okhttp`(v10) @signature `Lokhttp3/internal/http2/Http2Stream;.getErrorCode$okhttp:()Lokhttp3/internal/http2/ErrorCode;` @kind virtual;
  #L153eb4.  v10:= temp @kind object;
  #L153eb6.  if v10 == 0 then goto L153ee8;
  #L153eba.  v8:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153ebe.  call temp:= `getErrorException$okhttp`(v8) @signature `Lokhttp3/internal/http2/Http2Stream;.getErrorException$okhttp:()Ljava/io/IOException;` @kind virtual;
  #L153ec4.  v8:= temp @kind object;
  #L153ec6.  if v8 == 0 then goto L153ecc;
  #L153eca.  goto L153ee8;
  #L153ecc.  v8:= new `okhttp3.internal.http2.StreamResetException`;
  #L153ed0.  v10:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153ed4.  call temp:= `getErrorCode$okhttp`(v10) @signature `Lokhttp3/internal/http2/Http2Stream;.getErrorCode$okhttp:()Lokhttp3/internal/http2/ErrorCode;` @kind virtual;
  #L153eda.  v10:= temp @kind object;
  #L153edc.  call `checkNotNull`(v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L153ee2.  call `<init>`(v8, v10) @signature `Lokhttp3/internal/http2/StreamResetException;.<init>:(Lokhttp3/internal/http2/ErrorCode;)V` @kind direct;
  #L153ee8.  v10:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.d` @type ^`boolean` @kind boolean;
  #L153eec.  if v10 != 0 then goto L154012;
  #L153ef0.  v10:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`okio.Buffer` @kind object;
  #L153ef4.  call temp:= `size`(v10) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L153efa.  v10:= temp @kind wide;
  #L153efc.  v12:= -1L;
  #L153f00.  v14:= lcmp(v10, v6);
  #L153f04.  if v14 <= 0 then goto L153fb4;
  #L153f08.  v10:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`okio.Buffer` @kind object;
  #L153f0c.  call temp:= `size`(v10) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L153f12.  v14:= temp @kind wide;
  #L153f14.  call temp:= `min`(v2, v14) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L153f1a.  v14:= temp @kind wide;
  #L153f1c.  call temp:= `read`(v10, v0, v14) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L153f22.  v10:= temp @kind wide;
  #L153f24.  v14:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153f28.  call temp:= `getReadBytesTotal`(v14) @signature `Lokhttp3/internal/http2/Http2Stream;.getReadBytesTotal:()J` @kind virtual;
  #L153f2e.  v15:= temp @kind wide;
  #L153f30.  v4:= v15 + v10 @kind long;
  #L153f34.  call `setReadBytesTotal$okhttp`(v14, v4) @signature `Lokhttp3/internal/http2/Http2Stream;.setReadBytesTotal$okhttp:(J)V` @kind virtual;
  #L153f3a.  v4:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153f3e.  call temp:= `getReadBytesTotal`(v4) @signature `Lokhttp3/internal/http2/Http2Stream;.getReadBytesTotal:()J` @kind virtual;
  #L153f44.  v4:= temp @kind wide;
  #L153f46.  v14:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153f4a.  call temp:= `getReadBytesAcknowledged`(v14) @signature `Lokhttp3/internal/http2/Http2Stream;.getReadBytesAcknowledged:()J` @kind virtual;
  #L153f50.  v14:= temp @kind wide;
  #L153f52.  v4:= v4 - v14 @kind long;
  #L153f54.  if v8 != 0 then goto L153fd2;
  #L153f58.  v14:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153f5c.  call temp:= `getConnection`(v14) @signature `Lokhttp3/internal/http2/Http2Stream;.getConnection:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L153f62.  v14:= temp @kind object;
  #L153f64.  call temp:= `getOkHttpSettings`(v14) @signature `Lokhttp3/internal/http2/Http2Connection;.getOkHttpSettings:()Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L153f6a.  v14:= temp @kind object;
  #L153f6c.  call temp:= `getInitialWindowSize`(v14) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L153f72.  v14:= temp;
  #L153f74.  v14:= v14 / 2;
  #L153f78.  v14:= (`long`) v14 @kind i2l;
  #L153f7a.  v16:= lcmp(v4, v14);
  #L153f7e.  if v16 < 0 then goto L153fd2;
  #L153f82.  v14:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153f86.  call temp:= `getConnection`(v14) @signature `Lokhttp3/internal/http2/Http2Stream;.getConnection:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L153f8c.  v14:= temp @kind object;
  #L153f8e.  v15:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153f92.  call temp:= `getId`(v15) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L153f98.  v15:= temp;
  #L153f9a.  call `writeWindowUpdateLater$okhttp`(v14, v15, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.writeWindowUpdateLater$okhttp:(IJ)V` @kind virtual;
  #L153fa0.  v4:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153fa4.  call temp:= `getReadBytesTotal`(v4) @signature `Lokhttp3/internal/http2/Http2Stream;.getReadBytesTotal:()J` @kind virtual;
  #L153faa.  v14:= temp @kind wide;
  #L153fac.  call `setReadBytesAcknowledged$okhttp`(v4, v14) @signature `Lokhttp3/internal/http2/Http2Stream;.setReadBytesAcknowledged$okhttp:(J)V` @kind virtual;
  #L153fb2.  goto L153fd2;
  #L153fb4.  v4:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.f` @type ^`boolean` @kind boolean;
  #L153fb8.  if v4 != 0 then goto L153fd0;
  #L153fbc.  if v8 != 0 then goto L153fd0;
  #L153fc0.  v4:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153fc4.  call `waitForIo$okhttp`(v4) @signature `Lokhttp3/internal/http2/Http2Stream;.waitForIo$okhttp:()V` @kind virtual;
  #L153fca.  v10:= v12 @kind wide;
  #L153fcc.  v4:= 1I;
  #L153fce.  goto L153fd4;
  #L153fd0.  v10:= v12 @kind wide;
  #L153fd2.  v4:= 0I;
  #L153fd4.  v5:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L153fd8.  call temp:= `getReadTimeout$okhttp`(v5) @signature `Lokhttp3/internal/http2/Http2Stream;.getReadTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L153fde.  v5:= temp @kind object;
  #L153fe0.  call `exitAndThrowIfTimedOut`(v5) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L153fe6.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L153fea.  @monitorexit v9
  #L153fec.  if v4 == 0 then goto L153ff4;
  #L153ff0.  goto L153e90;
  #L153ff4.  v0:= lcmp(v10, v12);
  #L153ff8.  if v0 == 0 then goto L154004;
  #L153ffc.  call `a`(v1, v10) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.a:(J)V` @kind direct;
  #L154002.  return v10 @kind wide;
  #L154004.  if v8 != 0 then goto L15400a;
  #L154008.  return v12 @kind wide;
  #L15400a.  call `checkNotNull`(v8) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L154010.  throw v8;
  #L154012.  v0:= new `java.io.IOException`;
  #L154016.  v2:= "stream closed" @kind object;
  #L15401a.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L154020.  throw v0;
  #L154022.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L154024.  v2:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L154028.  call temp:= `getReadTimeout$okhttp`(v2) @signature `Lokhttp3/internal/http2/Http2Stream;.getReadTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L15402e.  v2:= temp @kind object;
  #L154030.  call `exitAndThrowIfTimedOut`(v2) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L154036.  throw v0;
  #L154038.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15403a.  @monitorexit v9
  #L15403c.  throw v0;
  #L15403e.  v0:= new `java.lang.StringBuilder`;
  #L154042.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L154048.  v4:= "byteCount < 0: " @kind object;
  #L15404c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154052.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L154058.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15405e.  v0:= temp @kind object;
  #L154060.  v2:= new `java.lang.IllegalArgumentException`;
  #L154064.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15406a.  v0:= temp @kind object;
  #L15406c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L154072.  throw v2;
  catch `java.lang.Throwable` @[L153e98..L153eaa] goto L154038;
  catch `java.lang.Throwable` @[L153eaa..L153fca] goto L154022;
  catch `java.lang.Throwable` @[L153fd4..L153fea] goto L154038;
  catch `java.lang.Throwable` @[L154012..L154022] goto L154022;
  catch `java.lang.Throwable` @[L154024..L154038] goto L154038;
}
procedure `void` `receive$okhttp`(`okhttp3.internal.http2.Http2Stream$FramingSource` v11 @kind this, `okio.BufferedSource` v12 @kind object, `long` v13 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.receive$okhttp:(Lokio/BufferedSource;J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1541ec.  v0:= "source" @kind object;
  #L1541f0.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1541f6.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L1541fa.  v1:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L1541fe.  if v1 == 0 then goto L154268;
  #L154202.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L154208.  v1:= temp;
  #L15420a.  if v1 != 0 then goto L154210;
  #L15420e.  goto L154268;
  #L154210.  v12:= new `java.lang.AssertionError`;
  #L154214.  v13:= new `java.lang.StringBuilder`;
  #L154218.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15421e.  v14:= "Thread " @kind object;
  #L154222.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154228.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L15422e.  v14:= temp @kind object;
  #L154230.  v1:= "Thread.currentThread()" @kind object;
  #L154234.  call `checkNotNullExpressionValue`(v14, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15423a.  call temp:= `getName`(v14) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L154240.  v14:= temp @kind object;
  #L154242.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154248.  v14:= " MUST NOT hold lock on " @kind object;
  #L15424c.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154252.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154258.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15425e.  v13:= temp @kind object;
  #L154260.  call `<init>`(v12, v13) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L154266.  throw v12;
  #L154268.  v0:= 0L;
  #L15426c.  v2:= lcmp(v13, v0);
  #L154270.  if v2 <= 0 then goto L154386;
  #L154274.  v2:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L154278.  @monitorenter v2
  #L15427a.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.f` @type ^`boolean` @kind boolean;
  #L15427e.  v4:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`okio.Buffer` @kind object;
  #L154282.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L154288.  v4:= temp @kind wide;
  #L15428a.  v4:= v4 + v13 @kind long;
  #L15428c.  v6:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.e` @type ^`long` @kind wide;
  #L154290.  v8:= 1I;
  #L154292.  v9:= 0I;
  #L154294.  v10:= lcmp(v4, v6);
  #L154298.  if v10 <= 0 then goto L1542a0;
  #L15429c.  v4:= 1I;
  #L15429e.  goto L1542a2;
  #L1542a0.  v4:= 0I;
  #L1542a2.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1542a6.  @monitorexit v2
  #L1542a8.  if v4 == 0 then goto L1542c2;
  #L1542ac.  call `skip`(v12, v13) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L1542b2.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L1542b6.  v13:= `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1542ba.  call `closeLater`(v12, v13) @signature `Lokhttp3/internal/http2/Http2Stream;.closeLater:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1542c0.  return @kind void;
  #L1542c2.  if v3 == 0 then goto L1542ce;
  #L1542c6.  call `skip`(v12, v13) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L1542cc.  return @kind void;
  #L1542ce.  v2:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.a` @type ^`okio.Buffer` @kind object;
  #L1542d2.  call temp:= `read`(v12, v2, v13) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1542d8.  v2:= temp @kind wide;
  #L1542da.  v4:= -1L;
  #L1542de.  v6:= lcmp(v2, v4);
  #L1542e2.  if v6 == 0 then goto L154374;
  #L1542e6.  v13:= v13 - v2 @kind long;
  #L1542e8.  v2:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L1542ec.  @monitorenter v2
  #L1542ee.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.d` @type ^`boolean` @kind boolean;
  #L1542f2.  if v3 == 0 then goto L15430e;
  #L1542f6.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.a` @type ^`okio.Buffer` @kind object;
  #L1542fa.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L154300.  v3:= temp @kind wide;
  #L154302.  v5:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.a` @type ^`okio.Buffer` @kind object;
  #L154306.  call `clear`(v5) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L15430c.  goto L15435a;
  #L15430e.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`okio.Buffer` @kind object;
  #L154312.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L154318.  v3:= temp @kind wide;
  #L15431a.  v5:= lcmp(v3, v0);
  #L15431e.  if v5 != 0 then goto L154324;
  #L154322.  goto L154326;
  #L154324.  v8:= 0I;
  #L154326.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`okio.Buffer` @kind object;
  #L15432a.  v4:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.a` @type ^`okio.Buffer` @kind object;
  #L15432e.  call temp:= `writeAll`(v3, v4) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L154334.  if v8 == 0 then goto L154358;
  #L154338.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L15433c.  if v3 == 0 then goto L154348;
  #L154340.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L154346.  goto L154358;
  #L154348.  v12:= new `java.lang.NullPointerException`;
  #L15434c.  v13:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L154350.  call `<init>`(v12, v13) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L154356.  throw v12;
  #L154358.  v3:= v0 @kind wide;
  #L15435a.  @monitorexit v2
  #L15435c.  v2:= lcmp(v3, v0);
  #L154360.  if v2 <= 0 then goto L154268;
  #L154364.  call `a`(v11, v3) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.a:(J)V` @kind direct;
  #L15436a.  goto L154268;
  #L15436e.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L154370.  @monitorexit v2
  #L154372.  throw v12;
  #L154374.  v12:= new `java.io.EOFException`;
  #L154378.  call `<init>`(v12) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L15437e.  throw v12;
  #L154380.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L154382.  @monitorexit v2
  #L154384.  throw v12;
  #L154386.  return @kind void;
  catch `java.lang.Throwable` @[L15427a..L1542a6] goto L154380;
  catch `java.lang.Throwable` @[L1542ee..L154358] goto L15436e;
}
procedure `void` `setClosed$okhttp`(`okhttp3.internal.http2.Http2Stream$FramingSource` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.setClosed$okhttp:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1543b0.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.d` @type ^`boolean` := v1 @kind boolean;
  #L1543b4.  return @kind void;
}
procedure `void` `setFinished$okhttp`(`okhttp3.internal.http2.Http2Stream$FramingSource` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.setFinished$okhttp:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1543c8.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.f` @type ^`boolean` := v1 @kind boolean;
  #L1543cc.  return @kind void;
}
procedure `void` `setTrailers`(`okhttp3.internal.http2.Http2Stream$FramingSource` v0 @kind this, `okhttp3.Headers` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.setTrailers:(Lokhttp3/Headers;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1543e0.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.Headers` := v1 @kind object;
  #L1543e4.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Stream$FramingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1540fc.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.g` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L154100.  call temp:= `getReadTimeout$okhttp`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getReadTimeout$okhttp:()Lokhttp3/internal/http2/Http2Stream$StreamTimeout;` @kind virtual;
  #L154106.  v0:= temp @kind object;
  #L154108.  return v0 @kind object;
}
