record `okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.http2.Http2Reader$Handler` @kind interface, `kotlin.jvm.functions.Function0` @kind interface {
  `okhttp3.internal.http2.Http2Reader` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this, `okhttp3.internal.http2.Http2Connection` v2 @kind object, `okhttp3.internal.http2.Http2Reader` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1502f0.  v0:= "reader" @kind object;
  #L1502f4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1502fa.  v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` := v2 @kind object;
  #L1502fe.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L150304.  v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` := v3 @kind object;
  #L150308.  return @kind void;
}
procedure `void` `ackSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ackSettings:()V` @AccessFlag PUBLIC {
    temp;

  #L15031c.  return @kind void;
}
procedure `void` `alternateService`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `okio.ByteString` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `long` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.alternateService:(ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V` @AccessFlag PUBLIC {
    temp;

  #L150330.  v1:= "origin" @kind object;
  #L150334.  call `checkNotNullParameter`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15033a.  v1:= "protocol" @kind object;
  #L15033e.  call `checkNotNullParameter`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150344.  v1:= "host" @kind object;
  #L150348.  call `checkNotNullParameter`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15034e.  return @kind void;
}
procedure `void` `applyAndAckSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v21 @kind this, `boolean` v22 , `okhttp3.internal.http2.Settings` v23 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.applyAndAckSettings:(ZLokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L150360.  v12:= v21 @kind object;
  #L150364.  v0:= v23 @kind object;
  #L150368.  v1:= "settings" @kind object;
  #L15036c.  call `checkNotNullParameter`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150372.  v13:= new `kotlin.jvm.internal.Ref$LongRef`;
  #L150376.  call `<init>`(v13) @signature `Lkotlin/jvm/internal/Ref$LongRef;.<init>:()V` @kind direct;
  #L15037c.  v14:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L150380.  call `<init>`(v14) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L150386.  v15:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L15038a.  call `<init>`(v15) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L150390.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150394.  call temp:= `getWriter`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriter:()Lokhttp3/internal/http2/Http2Writer;` @kind virtual;
  #L15039a.  v16:= temp @kind object;
  #L15039c.  @monitorenter v16
  #L15039e.  v11:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1503a2.  @monitorenter v11
  #L1503a4.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1503a8.  call temp:= `getPeerSettings`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getPeerSettings:()Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L1503ae.  v1:= temp @kind object;
  #L1503b0.  if v22 == 0 then goto L1503b8;
  #L1503b4.  v2:= v0 @kind object;
  #L1503b6.  goto L1503d2;
  #L1503b8.  v2:= new `okhttp3.internal.http2.Settings`;
  #L1503bc.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Settings;.<init>:()V` @kind direct;
  #L1503c2.  call `merge`(v2, v1) @signature `Lokhttp3/internal/http2/Settings;.merge:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L1503c8.  call `merge`(v2, v0) @signature `Lokhttp3/internal/http2/Settings;.merge:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L1503ce.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1503d2.  v15.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v2 @kind object;
  #L1503d6.  call temp:= `getInitialWindowSize`(v2) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L1503dc.  v2:= temp;
  #L1503de.  v2:= (`long`) v2 @kind i2l;
  #L1503e0.  call temp:= `getInitialWindowSize`(v1) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L1503e6.  v1:= temp;
  #L1503e8.  v4:= (`long`) v1 @kind i2l;
  #L1503ea.  v2:= v2 - v4 @kind long;
  #L1503ec.  v13.`kotlin.jvm.internal.Ref$LongRef.element` @type ^`long` := v2 @kind wide;
  #L1503f0.  v10:= 0I;
  #L1503f2.  v8:= 0L;
  #L1503f6.  v1:= lcmp(v2, v8);
  #L1503fa.  if v1 == 0 then goto L150452;
  #L1503fe.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150402.  call temp:= `getStreams$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getStreams$okhttp:()Ljava/util/Map;` @kind virtual;
  #L150408.  v1:= temp @kind object;
  #L15040a.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L150410.  v1:= temp;
  #L150412.  if v1 == 0 then goto L150418;
  #L150416.  goto L150452;
  #L150418.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L15041c.  call temp:= `getStreams$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getStreams$okhttp:()Ljava/util/Map;` @kind virtual;
  #L150422.  v1:= temp @kind object;
  #L150424.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L15042a.  v1:= temp @kind object;
  #L15042c.  v2:= new `okhttp3.internal.http2.Http2Stream`[v10];
  #L150430.  call temp:= `toArray`(v1, v2) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L150436.  v1:= temp @kind object;
  #L150438.  if v1 == 0 then goto L150442;
  #L15043c.  v1:= (`okhttp3.internal.http2.Http2Stream`[]) v1 @kind object;
  #L150440.  goto L150454;
  #L150442.  v0:= new `java.lang.NullPointerException`;
  #L150446.  v1:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L15044a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L150450.  throw v0;
  #L150452.  v1:= 0I;
  #L150454.  v14.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v1 @kind object;
  #L150458.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L15045c.  v2:= v15.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L150460.  v2:= (`okhttp3.internal.http2.Settings`) v2 @kind object;
  #L150464.  call `setPeerSettings`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.setPeerSettings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L15046a.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L15046e.  call temp:= `access$getSettingsListenerQueue$p`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getSettingsListenerQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;` @kind static;
  #L150474.  v7:= temp @kind object;
  #L150476.  v1:= new `java.lang.StringBuilder`;
  #L15047a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L150480.  v2:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150484.  call temp:= `getConnectionName$okhttp`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.getConnectionName$okhttp:()Ljava/lang/String;` @kind virtual;
  #L15048a.  v2:= temp @kind object;
  #L15048c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L150492.  v2:= " onSettings" @kind object;
  #L150496.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15049c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1504a2.  v4:= temp @kind object;
  #L1504a4.  v5:= 1I;
  #L1504a6.  v6:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1`;
  #L1504aa.  v1:= v6 @kind object;
  #L1504ac.  v2:= v4 @kind object;
  #L1504ae.  v3:= v5;
  #L1504b0.  v17:= v6 @kind object;
  #L1504b4.  v6:= v21 @kind object;
  #L1504b8.  v18:= v7 @kind object;
  #L1504bc.  v7:= v15 @kind object;
  #L1504be.  v8:= v22;
  #L1504c2.  v9:= v23 @kind object;
  #L1504c6.  v19:= 0I;
  #L1504ca.  v10:= v13 @kind object;
  #L1504cc.  v20:= v11 @kind object;
  #L1504d0.  v11:= v14 @kind object;
  #L1504d2.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lkotlin/jvm/internal/Ref$ObjectRef;ZLokhttp3/internal/http2/Settings;Lkotlin/jvm/internal/Ref$LongRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L1504d8.  v1:= v17 @kind object;
  #L1504dc.  v0:= v18 @kind object;
  #L1504e0.  v2:= 0L;
  #L1504e4.  call `schedule`(v0, v1, v2) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L1504ea.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1504ee.  @monitorexit v20
  #L1504f0.  v0:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1504f4.  call temp:= `getWriter`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriter:()Lokhttp3/internal/http2/Http2Writer;` @kind virtual;
  #L1504fa.  v0:= temp @kind object;
  #L1504fc.  v1:= v15.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L150500.  v1:= (`okhttp3.internal.http2.Settings`) v1 @kind object;
  #L150504.  call `applyAndAckSettings`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Writer;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L15050a.  goto L150518;
  #L15050c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L15050e.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150512.  call `access$failConnection`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$failConnection:(Lokhttp3/internal/http2/Http2Connection;Ljava/io/IOException;)V` @kind static;
  #L150518.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15051c.  @monitorexit v16
  #L15051e.  v0:= v14.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L150522.  v1:= v0 @kind object;
  #L150524.  v1:= (`okhttp3.internal.http2.Http2Stream`[]) v1 @kind object;
  #L150528.  if v1 == 0 then goto L150560;
  #L15052c.  v0:= (`okhttp3.internal.http2.Http2Stream`[]) v0 @kind object;
  #L150530.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L150536.  v1:= length @variable v0;
  #L150538.  v10:= 0I;
  #L15053a.  if v10 >= v1 then goto L150560;
  #L15053e.  v2:= v0[v10] @kind object;
  #L150542.  @monitorenter v2
  #L150544.  v3:= v13.`kotlin.jvm.internal.Ref$LongRef.element` @type ^`long` @kind wide;
  #L150548.  call `addBytesToWriteWindow`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L15054e.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L150552.  @monitorexit v2
  #L150554.  v10:= v10 + 1;
  #L150558.  goto L15053a;
  #L15055a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15055c.  @monitorexit v2
  #L15055e.  throw v0;
  #L150560.  return @kind void;
  #L150562.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150564.  goto L15056c;
  #L150566.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150568.  v20:= v11 @kind object;
  #L15056c.  @monitorexit v20
  #L15056e.  throw v0;
  #L150570.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150572.  @monitorexit v16
  #L150574.  throw v0;
  catch `java.lang.Throwable` @[L15039e..L1503a4] goto L150570;
  catch `java.lang.Throwable` @[L1503a4..L1504aa] goto L150566;
  catch `java.lang.Throwable` @[L1504d2..L1504ee] goto L150562;
  catch `java.lang.Throwable` @[L1504ee..L1504f0] goto L150570;
  catch `java.io.IOException` @[L1504f0..L15050a] goto L15050c;
  catch `java.lang.Throwable` @[L1504f0..L15050a] goto L150570;
  catch `java.lang.Throwable` @[L15050e..L15051c] goto L150570;
  catch `java.lang.Throwable` @[L150544..L150552] goto L15055a;
  catch `java.lang.Throwable` @[L15056c..L150570] goto L150570;
}
procedure `void` `data`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v2 @kind this, `boolean` v3 , `int` v4 , `okio.BufferedSource` v5 @kind object, `int` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.data:(ZILokio/BufferedSource;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1505dc.  v0:= "source" @kind object;
  #L1505e0.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1505e6.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1505ea.  call temp:= `pushedStream$okhttp`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream$okhttp:(I)Z` @kind virtual;
  #L1505f0.  v0:= temp;
  #L1505f2.  if v0 == 0 then goto L150602;
  #L1505f6.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1505fa.  call `pushDataLater$okhttp`(v0, v4, v5, v6, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushDataLater$okhttp:(ILokio/BufferedSource;IZ)V` @kind virtual;
  #L150600.  return @kind void;
  #L150602.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150606.  call temp:= `getStream`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L15060c.  v0:= temp @kind object;
  #L15060e.  if v0 != 0 then goto L150634;
  #L150612.  v3:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150616.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L15061a.  call `writeSynResetLater$okhttp`(v3, v4, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.writeSynResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L150620.  v3:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150624.  v0:= (`long`) v6 @kind i2l;
  #L150626.  call `updateConnectionFlowControl$okhttp`(v3, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.updateConnectionFlowControl$okhttp:(J)V` @kind virtual;
  #L15062c.  call `skip`(v5, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L150632.  return @kind void;
  #L150634.  call `receiveData`(v0, v5, v6) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveData:(Lokio/BufferedSource;I)V` @kind virtual;
  #L15063a.  if v3 == 0 then goto L15064a;
  #L15063e.  v3:= `@@okhttp3.internal.Util.EMPTY_HEADERS` @type ^`okhttp3.Headers` @kind object;
  #L150642.  v4:= 1I;
  #L150644.  call `receiveHeaders`(v0, v3, v4) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveHeaders:(Lokhttp3/Headers;Z)V` @kind virtual;
  #L15064a.  return @kind void;
}
procedure `okhttp3.internal.http2.Http2Reader` `getReader$okhttp`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.getReader$okhttp:()Lokhttp3/internal/http2/Http2Reader;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1502d8.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L1502dc.  return v0 @kind object;
}
procedure `void` `goAway`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `int` v4 , `okhttp3.internal.http2.ErrorCode` v5 @kind object, `okio.ByteString` v6 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.goAway:(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15065c.  v0:= "errorCode" @kind object;
  #L150660.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150666.  v5:= "debugData" @kind object;
  #L15066a.  call `checkNotNullParameter`(v6, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150670.  call temp:= `size`(v6) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L150676.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L15067a.  @monitorenter v5
  #L15067c.  v6:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150680.  call temp:= `getStreams$okhttp`(v6) @signature `Lokhttp3/internal/http2/Http2Connection;.getStreams$okhttp:()Ljava/util/Map;` @kind virtual;
  #L150686.  v6:= temp @kind object;
  #L150688.  call temp:= `values`(v6) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L15068e.  v6:= temp @kind object;
  #L150690.  v0:= 0I;
  #L150692.  v1:= new `okhttp3.internal.http2.Http2Stream`[v0];
  #L150696.  call temp:= `toArray`(v6, v1) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L15069c.  v6:= temp @kind object;
  #L15069e.  if v6 == 0 then goto L1506fe;
  #L1506a2.  v6:= (`okhttp3.internal.http2.Http2Stream`[]) v6 @kind object;
  #L1506a6.  v1:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1506aa.  v2:= 1I;
  #L1506ac.  call `access$setShutdown$p`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setShutdown$p:(Lokhttp3/internal/http2/Http2Connection;Z)V` @kind static;
  #L1506b2.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1506b6.  @monitorexit v5
  #L1506b8.  v5:= length @variable v6;
  #L1506ba.  if v0 >= v5 then goto L1506fc;
  #L1506be.  v1:= v6[v0] @kind object;
  #L1506c2.  call temp:= `getId`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L1506c8.  v2:= temp;
  #L1506ca.  if v2 <= v4 then goto L1506f6;
  #L1506ce.  call temp:= `isLocallyInitiated`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.isLocallyInitiated:()Z` @kind virtual;
  #L1506d4.  v2:= temp;
  #L1506d6.  if v2 == 0 then goto L1506f6;
  #L1506da.  v2:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1506de.  call `receiveRstStream`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1506e4.  v2:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1506e8.  call temp:= `getId`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L1506ee.  v1:= temp;
  #L1506f0.  call temp:= `removeStream$okhttp`(v2, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream$okhttp:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L1506f6.  v0:= v0 + 1;
  #L1506fa.  goto L1506ba;
  #L1506fc.  return @kind void;
  #L1506fe.  v4:= new `java.lang.NullPointerException`;
  #L150702.  v6:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L150706.  call `<init>`(v4, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15070c.  throw v4;
  #L15070e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150710.  @monitorexit v5
  #L150712.  throw v4;
  catch `java.lang.Throwable` @[L15067c..L1506b6] goto L15070e;
  catch `java.lang.Throwable` @[L1506fe..L15070e] goto L15070e;
}
procedure `void` `headers`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v16 @kind this, `boolean` v17 , `int` v18 , `int` v19 , `java.util.List` v20 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.headers:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L150738.  v12:= v16 @kind object;
  #L15073c.  v0:= v17;
  #L150740.  v9:= v18;
  #L150744.  v10:= v20 @kind object;
  #L150748.  v1:= "headerBlock" @kind object;
  #L15074c.  call `checkNotNullParameter`(v10, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150752.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150756.  call temp:= `pushedStream$okhttp`(v1, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream$okhttp:(I)Z` @kind virtual;
  #L15075c.  v1:= temp;
  #L15075e.  if v1 == 0 then goto L15076e;
  #L150762.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150766.  call `pushHeadersLater$okhttp`(v1, v9, v10, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.pushHeadersLater$okhttp:(ILjava/util/List;Z)V` @kind virtual;
  #L15076c.  return @kind void;
  #L15076e.  v13:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150772.  @monitorenter v13
  #L150774.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150778.  call temp:= `getStream`(v1, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L15077e.  v8:= temp @kind object;
  #L150780.  if v8 != 0 then goto L150898;
  #L150784.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150788.  call temp:= `access$isShutdown$p`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$isShutdown$p:(Lokhttp3/internal/http2/Http2Connection;)Z` @kind static;
  #L15078e.  v1:= temp;
  #L150790.  if v1 == 0 then goto L150798;
  #L150794.  @monitorexit v13
  #L150796.  return @kind void;
  #L150798.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L15079c.  call temp:= `getLastGoodStreamId$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getLastGoodStreamId$okhttp:()I` @kind virtual;
  #L1507a2.  v1:= temp;
  #L1507a4.  if v9 > v1 then goto L1507ac;
  #L1507a8.  @monitorexit v13
  #L1507aa.  return @kind void;
  #L1507ac.  v1:= v9 %% 2;
  #L1507b0.  v2:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1507b4.  call temp:= `getNextStreamId$okhttp`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.getNextStreamId$okhttp:()I` @kind virtual;
  #L1507ba.  v2:= temp;
  #L1507bc.  v2:= v2 %% 2;
  #L1507c0.  if v1 != v2 then goto L1507c8;
  #L1507c4.  @monitorexit v13
  #L1507c6.  return @kind void;
  #L1507c8.  call temp:= `toHeaders`(v20) @signature `Lokhttp3/internal/Util;.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;` @kind static;
  #L1507ce.  v6:= temp @kind object;
  #L1507d0.  v7:= new `okhttp3.internal.http2.Http2Stream`;
  #L1507d4.  v3:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1507d8.  v4:= 0I;
  #L1507da.  v1:= v7 @kind object;
  #L1507dc.  v2:= v18;
  #L1507e0.  v5:= v17;
  #L1507e4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Stream;.<init>:(ILokhttp3/internal/http2/Http2Connection;ZZLokhttp3/Headers;)V` @kind direct;
  #L1507ea.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1507ee.  call `setLastGoodStreamId$okhttp`(v1, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.setLastGoodStreamId$okhttp:(I)V` @kind virtual;
  #L1507f4.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1507f8.  call temp:= `getStreams$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getStreams$okhttp:()Ljava/util/Map;` @kind virtual;
  #L1507fe.  v1:= temp @kind object;
  #L150800.  call temp:= `valueOf`(v18) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L150806.  v2:= temp @kind object;
  #L150808.  call temp:= `put`(v1, v2, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15080e.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150812.  call temp:= `access$getTaskRunner$p`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getTaskRunner$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskRunner;` @kind static;
  #L150818.  v1:= temp @kind object;
  #L15081a.  call temp:= `newQueue`(v1) @signature `Lokhttp3/internal/concurrent/TaskRunner;.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;` @kind virtual;
  #L150820.  v14:= temp @kind object;
  #L150822.  v1:= new `java.lang.StringBuilder`;
  #L150826.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15082c.  v2:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150830.  call temp:= `getConnectionName$okhttp`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.getConnectionName$okhttp:()Ljava/lang/String;` @kind virtual;
  #L150836.  v2:= temp @kind object;
  #L150838.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15083e.  v2:= 91I;
  #L150842.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L150848.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15084e.  v2:= "] onStream" @kind object;
  #L150852.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L150858.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15085e.  v4:= temp @kind object;
  #L150860.  v5:= 0L;
  #L150864.  v11:= 1I;
  #L150866.  v15:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1`;
  #L15086a.  v1:= v15 @kind object;
  #L15086c.  v2:= v4 @kind object;
  #L15086e.  v3:= v11;
  #L150870.  v5:= v11;
  #L150872.  v6:= v7 @kind object;
  #L150874.  v7:= v16 @kind object;
  #L150878.  v9:= v18;
  #L15087c.  v10:= v20 @kind object;
  #L150880.  v11:= v17;
  #L150884.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Stream;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Http2Stream;ILjava/util/List;Z)V` @kind direct;
  #L15088a.  v0:= 0L;
  #L15088e.  call `schedule`(v14, v15, v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L150894.  @monitorexit v13
  #L150896.  return @kind void;
  #L150898.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15089c.  @monitorexit v13
  #L15089e.  call temp:= `toHeaders`(v20) @signature `Lokhttp3/internal/Util;.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;` @kind static;
  #L1508a4.  v1:= temp @kind object;
  #L1508a6.  call `receiveHeaders`(v8, v1, v0) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveHeaders:(Lokhttp3/Headers;Z)V` @kind virtual;
  #L1508ac.  return @kind void;
  #L1508ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1508b0.  @monitorexit v13
  #L1508b2.  throw v0;
  catch `java.lang.Throwable` @[L150774..L150790] goto L1508ae;
  catch `java.lang.Throwable` @[L150798..L1507a4] goto L1508ae;
  catch `java.lang.Throwable` @[L1507ac..L1507c0] goto L1508ae;
  catch `java.lang.Throwable` @[L1507c8..L150894] goto L1508ae;
  catch `java.lang.Throwable` @[L150898..L15089c] goto L1508ae;
}
procedure `java.lang.Object` `invoke`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.invoke:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1502bc.  call `invoke`(v1) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.invoke:()V` @kind virtual;
  #L1502c2.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1502c6.  return v0 @kind object;
}
procedure `void` `invoke`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.invoke:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1508f0.  v0:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1508f4.  v1:= 0I;
  #L1508f6.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L1508fa.  call `readConnectionPreface`(v2, v5) @signature `Lokhttp3/internal/http2/Http2Reader;.readConnectionPreface:(Lokhttp3/internal/http2/Http2Reader$Handler;)V` @kind virtual;
  #L150900.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L150904.  v3:= 0I;
  #L150906.  call temp:= `nextFrame`(v2, v3, v5) @signature `Lokhttp3/internal/http2/Http2Reader;.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z` @kind virtual;
  #L15090c.  v2:= temp;
  #L15090e.  if v2 == 0 then goto L150914;
  #L150912.  goto L150900;
  #L150914.  v2:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L150918.  v0:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L15091c.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150920.  call `close$okhttp`(v3, v2, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L150926.  goto L150944;
  #L150928.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L15092a.  goto L150936;
  #L15092c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15092e.  v2:= v0 @kind object;
  #L150930.  goto L150952;
  #L150932.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L150934.  v2:= v0 @kind object;
  #L150936.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L15093a.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L15093e.  call `close$okhttp`(v2, v0, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L150944.  v0:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L150948.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15094e.  return @kind void;
  #L150950.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150952.  v4:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150956.  call `close$okhttp`(v4, v2, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L15095c.  v0:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L150960.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L150966.  throw v3;
  catch `java.io.IOException` @[L1508f6..L150918] goto L150932;
  catch `java.lang.Throwable` @[L1508f6..L150918] goto L15092c;
  catch `java.io.IOException` @[L150918..L15091c] goto L150928;
  catch `java.lang.Throwable` @[L150918..L15091c] goto L150950;
  catch `java.lang.Throwable` @[L150936..L15093a] goto L150950;
}
procedure `void` `ping`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v11 @kind this, `boolean` v12 , `int` v13 , `int` v14 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ping:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1509a0.  if v12 == 0 then goto L150a2e;
  #L1509a4.  v12:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1509a8.  @monitorenter v12
  #L1509aa.  v14:= 1I;
  #L1509ac.  v0:= 1L;
  #L1509b0.  if v13 == v14 then goto L150a10;
  #L1509b4.  v14:= 2I;
  #L1509b6.  if v13 == v14 then goto L1509fa;
  #L1509ba.  v14:= 3I;
  #L1509bc.  if v13 == v14 then goto L1509c6;
  #L1509c0.  v13:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1509c4.  goto L150a24;
  #L1509c6.  v13:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1509ca.  call temp:= `access$getAwaitPongsReceived$p`(v13) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getAwaitPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L1509d0.  v2:= temp @kind wide;
  #L1509d2.  v2:= v2 + v0 @kind long;
  #L1509d4.  call `access$setAwaitPongsReceived$p`(v13, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setAwaitPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @kind static;
  #L1509da.  v13:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1509de.  if v13 == 0 then goto L1509ea;
  #L1509e2.  call `notifyAll`(v13) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1509e8.  goto L1509c0;
  #L1509ea.  v13:= new `java.lang.NullPointerException`;
  #L1509ee.  v14:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L1509f2.  call `<init>`(v13, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1509f8.  throw v13;
  #L1509fa.  v13:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1509fe.  call temp:= `access$getDegradedPongsReceived$p`(v13) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getDegradedPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L150a04.  v2:= temp @kind wide;
  #L150a06.  v2:= v2 + v0 @kind long;
  #L150a08.  call `access$setDegradedPongsReceived$p`(v13, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setDegradedPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @kind static;
  #L150a0e.  goto L150a24;
  #L150a10.  v13:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150a14.  call temp:= `access$getIntervalPongsReceived$p`(v13) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getIntervalPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L150a1a.  v2:= temp @kind wide;
  #L150a1c.  v2:= v2 + v0 @kind long;
  #L150a1e.  call `access$setIntervalPongsReceived$p`(v13, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setIntervalPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @kind static;
  #L150a24.  @monitorexit v12
  #L150a26.  goto L150a8a;
  #L150a28.  v13:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150a2a.  @monitorexit v12
  #L150a2c.  throw v13;
  #L150a2e.  v12:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150a32.  call temp:= `access$getWriterQueue$p`(v12) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getWriterQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;` @kind static;
  #L150a38.  v12:= temp @kind object;
  #L150a3a.  v0:= new `java.lang.StringBuilder`;
  #L150a3e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L150a44.  v1:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150a48.  call temp:= `getConnectionName$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getConnectionName$okhttp:()Ljava/lang/String;` @kind virtual;
  #L150a4e.  v1:= temp @kind object;
  #L150a50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L150a56.  v1:= " ping" @kind object;
  #L150a5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L150a60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L150a66.  v5:= temp @kind object;
  #L150a68.  v0:= 0L;
  #L150a6c.  v6:= 1I;
  #L150a6e.  v10:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1`;
  #L150a72.  v2:= v10 @kind object;
  #L150a74.  v3:= v5 @kind object;
  #L150a76.  v4:= v6;
  #L150a78.  v7:= v11 @kind object;
  #L150a7a.  v8:= v13;
  #L150a7c.  v9:= v14;
  #L150a7e.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$ping$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;II)V` @kind direct;
  #L150a84.  call `schedule`(v12, v10, v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L150a8a.  return @kind void;
  catch `java.lang.Throwable` @[L1509c0..L150a24] goto L150a28;
}
procedure `void` `priority`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.priority:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L150aa8.  return @kind void;
}
procedure `void` `pushPromise`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.pushPromise:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L150abc.  v1:= "requestHeaders" @kind object;
  #L150ac0.  call `checkNotNullParameter`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150ac6.  v1:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150aca.  call `pushRequestLater$okhttp`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushRequestLater$okhttp:(ILjava/util/List;)V` @kind virtual;
  #L150ad0.  return @kind void;
}
procedure `void` `rstStream`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this, `int` v2 , `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L150ae4.  v0:= "errorCode" @kind object;
  #L150ae8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150aee.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150af2.  call temp:= `pushedStream$okhttp`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream$okhttp:(I)Z` @kind virtual;
  #L150af8.  v0:= temp;
  #L150afa.  if v0 == 0 then goto L150b0a;
  #L150afe.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150b02.  call `pushResetLater$okhttp`(v0, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L150b08.  return @kind void;
  #L150b0a.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150b0e.  call temp:= `removeStream$okhttp`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream$okhttp:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L150b14.  v2:= temp @kind object;
  #L150b16.  if v2 == 0 then goto L150b20;
  #L150b1a.  call `receiveRstStream`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L150b20.  return @kind void;
}
procedure `void` `settings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v11 @kind this, `boolean` v12 , `okhttp3.internal.http2.Settings` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.settings:(ZLokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L150b34.  v0:= "settings" @kind object;
  #L150b38.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150b3e.  v0:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150b42.  call temp:= `access$getWriterQueue$p`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getWriterQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;` @kind static;
  #L150b48.  v0:= temp @kind object;
  #L150b4a.  v1:= new `java.lang.StringBuilder`;
  #L150b4e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L150b54.  v2:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150b58.  call temp:= `getConnectionName$okhttp`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.getConnectionName$okhttp:()Ljava/lang/String;` @kind virtual;
  #L150b5e.  v2:= temp @kind object;
  #L150b60.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L150b66.  v2:= " applyAndAckSettings" @kind object;
  #L150b6a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L150b70.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L150b76.  v6:= temp @kind object;
  #L150b78.  v1:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1`;
  #L150b7c.  v7:= 1I;
  #L150b7e.  v3:= v1 @kind object;
  #L150b80.  v4:= v6 @kind object;
  #L150b82.  v5:= v7;
  #L150b84.  v8:= v11 @kind object;
  #L150b86.  v9:= v12;
  #L150b88.  v10:= v13 @kind object;
  #L150b8a.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLokhttp3/internal/http2/Settings;)V` @kind direct;
  #L150b90.  v12:= 0L;
  #L150b94.  call `schedule`(v0, v1, v12) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L150b9a.  return @kind void;
}
procedure `void` `windowUpdate`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `int` v4 , `long` v5 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.windowUpdate:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L150bac.  if v4 != 0 then goto L150bf6;
  #L150bb0.  v4:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150bb4.  @monitorenter v4
  #L150bb6.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150bba.  call temp:= `getWriteBytesMaximum`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriteBytesMaximum:()J` @kind virtual;
  #L150bc0.  v1:= temp @kind wide;
  #L150bc2.  v1:= v1 + v5 @kind long;
  #L150bc4.  call `access$setWriteBytesMaximum$p`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setWriteBytesMaximum$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @kind static;
  #L150bca.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150bce.  if v5 == 0 then goto L150be0;
  #L150bd2.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L150bd8.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L150bdc.  @monitorexit v4
  #L150bde.  goto L150c1c;
  #L150be0.  v5:= new `java.lang.NullPointerException`;
  #L150be4.  v6:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L150be8.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L150bee.  throw v5;
  #L150bf0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150bf2.  @monitorexit v4
  #L150bf4.  throw v5;
  #L150bf6.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L150bfa.  call temp:= `getStream`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L150c00.  v4:= temp @kind object;
  #L150c02.  if v4 == 0 then goto L150c1c;
  #L150c06.  @monitorenter v4
  #L150c08.  call `addBytesToWriteWindow`(v4, v5) @signature `Lokhttp3/internal/http2/Http2Stream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L150c0e.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L150c12.  @monitorexit v4
  #L150c14.  goto L150c1c;
  #L150c16.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150c18.  @monitorexit v4
  #L150c1a.  throw v5;
  #L150c1c.  return @kind void;
  catch `java.lang.Throwable` @[L150bb6..L150bdc] goto L150bf0;
  catch `java.lang.Throwable` @[L150be0..L150bf0] goto L150bf0;
  catch `java.lang.Throwable` @[L150c08..L150c12] goto L150c16;
}
