record `okhttp3.internal.http2.Http2Connection` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.internal.http2.Http2Writer` `okhttp3.internal.http2.Http2Connection.A` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Connection$ReaderRunnable` `okhttp3.internal.http2.Http2Connection.B` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `okhttp3.internal.http2.Http2Connection.C` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http2.Http2Connection.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Connection$Listener` `okhttp3.internal.http2.Http2Connection.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `okhttp3.internal.http2.Http2Connection.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.internal.http2.Http2Connection.d` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http2.Http2Connection.e` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Http2Connection.f` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http2.Http2Connection.g` @AccessFlag PRIVATE;
  `okhttp3.internal.concurrent.TaskRunner` `okhttp3.internal.http2.Http2Connection.h` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.concurrent.TaskQueue` `okhttp3.internal.http2.Http2Connection.i` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.concurrent.TaskQueue` `okhttp3.internal.http2.Http2Connection.j` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.concurrent.TaskQueue` `okhttp3.internal.http2.Http2Connection.k` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.PushObserver` `okhttp3.internal.http2.Http2Connection.l` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.http2.Http2Connection.m` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Connection.n` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Connection.o` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Connection.p` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Connection.q` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Connection.r` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Connection.s` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.Settings` `okhttp3.internal.http2.Http2Connection.t` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Settings` `okhttp3.internal.http2.Http2Connection.u` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Connection.v` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Connection.w` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Connection.x` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http2.Http2Connection.y` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.http2.Http2Connection.z` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.http2.Http2Connection.AWAIT_PING` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.http2.Http2Connection$Companion` `@@okhttp3.internal.http2.Http2Connection.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.http2.Settings` `@@okhttp3.internal.http2.Http2Connection.D` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2Connection.DEGRADED_PING` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2Connection.DEGRADED_PONG_TIMEOUT_NS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2Connection.INTERVAL_PING` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2Connection.OKHTTP_CLIENT_WINDOW_SIZE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Connection;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L151644.  v0:= new `okhttp3.internal.http2.Http2Connection$Companion`;
  #L151648.  v1:= 0I;
  #L15164a.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L151650.  `@@okhttp3.internal.http2.Http2Connection.Companion` @type ^`okhttp3.internal.http2.Http2Connection$Companion` := v0 @kind object;
  #L151654.  v0:= new `okhttp3.internal.http2.Settings`;
  #L151658.  call `<init>`(v0) @signature `Lokhttp3/internal/http2/Settings;.<init>:()V` @kind direct;
  #L15165e.  v1:= 7I;
  #L151660.  v2:= 65535I;
  #L151666.  call temp:= `set`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Settings;.set:(II)Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L15166c.  v1:= 5I;
  #L15166e.  v2:= 16384I;
  #L151672.  call temp:= `set`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Settings;.set:(II)Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L151678.  `@@okhttp3.internal.http2.Http2Connection.D` @type ^`okhttp3.internal.http2.Settings` := v0 @kind object;
  #L15167c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection` v12 @kind this, `okhttp3.internal.http2.Http2Connection$Builder` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.<init>:(Lokhttp3/internal/http2/Http2Connection$Builder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L151690.  v0:= "builder" @kind object;
  #L151694.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15169a.  call `<init>`(v12) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1516a0.  call temp:= `getClient$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getClient$okhttp:()Z` @kind virtual;
  #L1516a6.  v0:= temp;
  #L1516a8.  v12.`okhttp3.internal.http2.Http2Connection.a` @type ^`boolean` := v0 @kind boolean;
  #L1516ac.  call temp:= `getListener$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getListener$okhttp:()Lokhttp3/internal/http2/Http2Connection$Listener;` @kind virtual;
  #L1516b2.  v1:= temp @kind object;
  #L1516b4.  v12.`okhttp3.internal.http2.Http2Connection.b` @type ^`okhttp3.internal.http2.Http2Connection$Listener` := v1 @kind object;
  #L1516b8.  v1:= new `java.util.LinkedHashMap`;
  #L1516bc.  call `<init>`(v1) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1516c2.  v12.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` := v1 @kind object;
  #L1516c6.  call temp:= `getConnectionName$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getConnectionName$okhttp:()Ljava/lang/String;` @kind virtual;
  #L1516cc.  v1:= temp @kind object;
  #L1516ce.  v12.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` := v1 @kind object;
  #L1516d2.  call temp:= `getClient$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getClient$okhttp:()Z` @kind virtual;
  #L1516d8.  v2:= temp;
  #L1516da.  if v2 == 0 then goto L1516e2;
  #L1516de.  v2:= 3I;
  #L1516e0.  goto L1516e4;
  #L1516e2.  v2:= 2I;
  #L1516e4.  v12.`okhttp3.internal.http2.Http2Connection.f` @type ^`int` := v2;
  #L1516e8.  call temp:= `getTaskRunner$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @kind virtual;
  #L1516ee.  v2:= temp @kind object;
  #L1516f0.  v12.`okhttp3.internal.http2.Http2Connection.h` @type ^`okhttp3.internal.concurrent.TaskRunner` := v2 @kind object;
  #L1516f4.  call temp:= `newQueue`(v2) @signature `Lokhttp3/internal/concurrent/TaskRunner;.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;` @kind virtual;
  #L1516fa.  v3:= temp @kind object;
  #L1516fc.  v12.`okhttp3.internal.http2.Http2Connection.i` @type ^`okhttp3.internal.concurrent.TaskQueue` := v3 @kind object;
  #L151700.  call temp:= `newQueue`(v2) @signature `Lokhttp3/internal/concurrent/TaskRunner;.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;` @kind virtual;
  #L151706.  v4:= temp @kind object;
  #L151708.  v12.`okhttp3.internal.http2.Http2Connection.j` @type ^`okhttp3.internal.concurrent.TaskQueue` := v4 @kind object;
  #L15170c.  call temp:= `newQueue`(v2) @signature `Lokhttp3/internal/concurrent/TaskRunner;.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;` @kind virtual;
  #L151712.  v2:= temp @kind object;
  #L151714.  v12.`okhttp3.internal.http2.Http2Connection.k` @type ^`okhttp3.internal.concurrent.TaskQueue` := v2 @kind object;
  #L151718.  call temp:= `getPushObserver$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getPushObserver$okhttp:()Lokhttp3/internal/http2/PushObserver;` @kind virtual;
  #L15171e.  v2:= temp @kind object;
  #L151720.  v12.`okhttp3.internal.http2.Http2Connection.l` @type ^`okhttp3.internal.http2.PushObserver` := v2 @kind object;
  #L151724.  v2:= new `okhttp3.internal.http2.Settings`;
  #L151728.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Settings;.<init>:()V` @kind direct;
  #L15172e.  call temp:= `getClient$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getClient$okhttp:()Z` @kind virtual;
  #L151734.  v4:= temp;
  #L151736.  if v4 == 0 then goto L151746;
  #L15173a.  v4:= 7I;
  #L15173c.  v5:= 16777216I;
  #L151740.  call temp:= `set`(v2, v4, v5) @signature `Lokhttp3/internal/http2/Settings;.set:(II)Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L151746.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15174a.  v12.`okhttp3.internal.http2.Http2Connection.t` @type ^`okhttp3.internal.http2.Settings` := v2 @kind object;
  #L15174e.  v2:= `@@okhttp3.internal.http2.Http2Connection.D` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L151752.  v12.`okhttp3.internal.http2.Http2Connection.u` @type ^`okhttp3.internal.http2.Settings` := v2 @kind object;
  #L151756.  call temp:= `getInitialWindowSize`(v2) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L15175c.  v2:= temp;
  #L15175e.  v4:= (`long`) v2 @kind i2l;
  #L151760.  v12.`okhttp3.internal.http2.Http2Connection.y` @type ^`long` := v4 @kind wide;
  #L151764.  call temp:= `getSocket$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getSocket$okhttp:()Ljava/net/Socket;` @kind virtual;
  #L15176a.  v2:= temp @kind object;
  #L15176c.  v12.`okhttp3.internal.http2.Http2Connection.z` @type ^`java.net.Socket` := v2 @kind object;
  #L151770.  v2:= new `okhttp3.internal.http2.Http2Writer`;
  #L151774.  call temp:= `getSink$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getSink$okhttp:()Lokio/BufferedSink;` @kind virtual;
  #L15177a.  v4:= temp @kind object;
  #L15177c.  call `<init>`(v2, v4, v0) @signature `Lokhttp3/internal/http2/Http2Writer;.<init>:(Lokio/BufferedSink;Z)V` @kind direct;
  #L151782.  v12.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` := v2 @kind object;
  #L151786.  v2:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable`;
  #L15178a.  v4:= new `okhttp3.internal.http2.Http2Reader`;
  #L15178e.  call temp:= `getSource$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getSource$okhttp:()Lokio/BufferedSource;` @kind virtual;
  #L151794.  v5:= temp @kind object;
  #L151796.  call `<init>`(v4, v5, v0) @signature `Lokhttp3/internal/http2/Http2Reader;.<init>:(Lokio/BufferedSource;Z)V` @kind direct;
  #L15179c.  call `<init>`(v2, v12, v4) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V` @kind direct;
  #L1517a2.  v12.`okhttp3.internal.http2.Http2Connection.B` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` := v2 @kind object;
  #L1517a6.  v0:= new `java.util.LinkedHashSet`;
  #L1517aa.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L1517b0.  v12.`okhttp3.internal.http2.Http2Connection.C` @type ^`java.util.Set` := v0 @kind object;
  #L1517b4.  call temp:= `getPingIntervalMillis$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getPingIntervalMillis$okhttp:()I` @kind virtual;
  #L1517ba.  v0:= temp;
  #L1517bc.  if v0 == 0 then goto L151810;
  #L1517c0.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1517c4.  call temp:= `getPingIntervalMillis$okhttp`(v13) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getPingIntervalMillis$okhttp:()I` @kind virtual;
  #L1517ca.  v13:= temp;
  #L1517cc.  v4:= (`long`) v13 @kind i2l;
  #L1517ce.  call temp:= `toNanos`(v0, v4) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L1517d4.  v4:= temp @kind wide;
  #L1517d6.  v13:= new `java.lang.StringBuilder`;
  #L1517da.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1517e0.  call temp:= `append`(v13, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1517e6.  v0:= " ping" @kind object;
  #L1517ea.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1517f0.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1517f6.  v8:= temp @kind object;
  #L1517f8.  v13:= new `okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1`;
  #L1517fc.  v6:= v13 @kind object;
  #L1517fe.  v7:= v8 @kind object;
  #L151800.  v9:= v12 @kind object;
  #L151802.  v10:= v4 @kind wide;
  #L151804.  call `<init>`(v6, v7, v8, v9, v10) @signature `Lokhttp3/internal/http2/Http2Connection$$special$$inlined$schedule$1;.<init>:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/internal/http2/Http2Connection;J)V` @kind direct;
  #L15180a.  call `schedule`(v3, v13, v4) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L151810.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `java.io.IOException` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.a:(Ljava/io/IOException;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L151ab8.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L151abc.  call `close$okhttp`(v1, v0, v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L151ac2.  return @kind void;
}
procedure `void` `access$failConnection`(`okhttp3.internal.http2.Http2Connection` v0 @kind object, `java.io.IOException` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$failConnection:(Lokhttp3/internal/http2/Http2Connection;Ljava/io/IOException;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L151824.  call `a`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.a:(Ljava/io/IOException;)V` @kind direct;
  #L15182a.  return @kind void;
}
procedure `long` `access$getAwaitPongsReceived$p`(`okhttp3.internal.http2.Http2Connection` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getAwaitPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L15122c.  v0:= v2.`okhttp3.internal.http2.Http2Connection.r` @type ^`long` @kind wide;
  #L151230.  return v0 @kind wide;
}
procedure `java.util.Set` `access$getCurrentPushRequests$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getCurrentPushRequests$p:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L151214.  v0:= v0.`okhttp3.internal.http2.Http2Connection.C` @type ^`java.util.Set` @kind object;
  #L151218.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Settings` `access$getDEFAULT_SETTINGS$cp`() @signature `Lokhttp3/internal/http2/Http2Connection;.access$getDEFAULT_SETTINGS$cp:()Lokhttp3/internal/http2/Settings;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1515fc.  v0:= `@@okhttp3.internal.http2.Http2Connection.D` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L151600.  return v0 @kind object;
}
procedure `long` `access$getDegradedPongsReceived$p`(`okhttp3.internal.http2.Http2Connection` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getDegradedPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L151244.  v0:= v2.`okhttp3.internal.http2.Http2Connection.p` @type ^`long` @kind wide;
  #L151248.  return v0 @kind wide;
}
procedure `long` `access$getIntervalPingsSent$p`(`okhttp3.internal.http2.Http2Connection` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getIntervalPingsSent$p:(Lokhttp3/internal/http2/Http2Connection;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L15125c.  v0:= v2.`okhttp3.internal.http2.Http2Connection.m` @type ^`long` @kind wide;
  #L151260.  return v0 @kind wide;
}
procedure `long` `access$getIntervalPongsReceived$p`(`okhttp3.internal.http2.Http2Connection` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getIntervalPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L151274.  v0:= v2.`okhttp3.internal.http2.Http2Connection.n` @type ^`long` @kind wide;
  #L151278.  return v0 @kind wide;
}
procedure `okhttp3.internal.http2.PushObserver` `access$getPushObserver$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getPushObserver$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/http2/PushObserver;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1515e4.  v0:= v0.`okhttp3.internal.http2.Http2Connection.l` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L1515e8.  return v0 @kind object;
}
procedure `okhttp3.internal.concurrent.TaskQueue` `access$getSettingsListenerQueue$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getSettingsListenerQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L151304.  v0:= v0.`okhttp3.internal.http2.Http2Connection.k` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L151308.  return v0 @kind object;
}
procedure `okhttp3.internal.concurrent.TaskRunner` `access$getTaskRunner$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getTaskRunner$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskRunner;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L151334.  v0:= v0.`okhttp3.internal.http2.Http2Connection.h` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L151338.  return v0 @kind object;
}
procedure `long` `access$getWriteBytesMaximum$p`(`okhttp3.internal.http2.Http2Connection` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getWriteBytesMaximum$p:(Lokhttp3/internal/http2/Http2Connection;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L15128c.  v0:= v2.`okhttp3.internal.http2.Http2Connection.y` @type ^`long` @kind wide;
  #L151290.  return v0 @kind wide;
}
procedure `okhttp3.internal.concurrent.TaskQueue` `access$getWriterQueue$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getWriterQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15131c.  v0:= v0.`okhttp3.internal.http2.Http2Connection.i` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L151320.  return v0 @kind object;
}
procedure `boolean` `access$isShutdown$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.access$isShutdown$p:(Lokhttp3/internal/http2/Http2Connection;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1510b4.  v0:= v0.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` @kind boolean;
  #L1510b8.  return v0;
}
procedure `void` `access$setAwaitPongsReceived$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object, `long` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setAwaitPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15183c.  v0.`okhttp3.internal.http2.Http2Connection.r` @type ^`long` := v1 @kind wide;
  #L151840.  return @kind void;
}
procedure `void` `access$setDegradedPongsReceived$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object, `long` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setDegradedPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L151854.  v0.`okhttp3.internal.http2.Http2Connection.p` @type ^`long` := v1 @kind wide;
  #L151858.  return @kind void;
}
procedure `void` `access$setIntervalPingsSent$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object, `long` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setIntervalPingsSent$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15186c.  v0.`okhttp3.internal.http2.Http2Connection.m` @type ^`long` := v1 @kind wide;
  #L151870.  return @kind void;
}
procedure `void` `access$setIntervalPongsReceived$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object, `long` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setIntervalPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L151884.  v0.`okhttp3.internal.http2.Http2Connection.n` @type ^`long` := v1 @kind wide;
  #L151888.  return @kind void;
}
procedure `void` `access$setShutdown$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object, `boolean` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setShutdown$p:(Lokhttp3/internal/http2/Http2Connection;Z)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15189c.  v0.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` := v1 @kind boolean;
  #L1518a0.  return @kind void;
}
procedure `void` `access$setWriteBytesMaximum$p`(`okhttp3.internal.http2.Http2Connection` v0 @kind object, `long` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setWriteBytesMaximum$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1518b4.  v0.`okhttp3.internal.http2.Http2Connection.y` @type ^`long` := v1 @kind wide;
  #L1518b8.  return @kind void;
}
procedure `okhttp3.internal.http2.Http2Stream` `b`(`okhttp3.internal.http2.Http2Connection` v10 @kind this, `int` v11 , `java.util.List` v12 @kind object, `boolean` v13 ) @signature `Lokhttp3/internal/http2/Http2Connection;.b:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1513bc.  v6:= v13 ^~ 1;
  #L1513c0.  v4:= 0I;
  #L1513c2.  v7:= v10.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L1513c6.  @monitorenter v7
  #L1513c8.  @monitorenter v10
  #L1513ca.  v0:= v10.`okhttp3.internal.http2.Http2Connection.f` @type ^`int`;
  #L1513ce.  v1:= 1073741823I;
  #L1513d4.  if v0 <= v1 then goto L1513e2;
  #L1513d8.  v0:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1513dc.  call `shutdown`(v10, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.shutdown:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1513e2.  v0:= v10.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` @kind boolean;
  #L1513e6.  if v0 != 0 then goto L1514b2;
  #L1513ea.  v8:= v10.`okhttp3.internal.http2.Http2Connection.f` @type ^`int`;
  #L1513ee.  v0:= v8 + 2;
  #L1513f2.  v10.`okhttp3.internal.http2.Http2Connection.f` @type ^`int` := v0;
  #L1513f6.  v9:= new `okhttp3.internal.http2.Http2Stream`;
  #L1513fa.  v5:= 0I;
  #L1513fc.  v0:= v9 @kind object;
  #L1513fe.  v1:= v8;
  #L151400.  v2:= v10 @kind object;
  #L151402.  v3:= v6;
  #L151404.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/http2/Http2Stream;.<init>:(ILokhttp3/internal/http2/Http2Connection;ZZLokhttp3/Headers;)V` @kind direct;
  #L15140a.  v0:= 1I;
  #L15140c.  if v13 == 0 then goto L15143e;
  #L151410.  v1:= v10.`okhttp3.internal.http2.Http2Connection.x` @type ^`long` @kind wide;
  #L151414.  v3:= v10.`okhttp3.internal.http2.Http2Connection.y` @type ^`long` @kind wide;
  #L151418.  v13:= lcmp(v1, v3);
  #L15141c.  if v13 >= 0 then goto L15143e;
  #L151420.  call temp:= `getWriteBytesTotal`(v9) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteBytesTotal:()J` @kind virtual;
  #L151426.  v1:= temp @kind wide;
  #L151428.  call temp:= `getWriteBytesMaximum`(v9) @signature `Lokhttp3/internal/http2/Http2Stream;.getWriteBytesMaximum:()J` @kind virtual;
  #L15142e.  v3:= temp @kind wide;
  #L151430.  v13:= lcmp(v1, v3);
  #L151434.  if v13 < 0 then goto L15143a;
  #L151438.  goto L15143e;
  #L15143a.  v13:= 0I;
  #L15143c.  goto L151440;
  #L15143e.  v13:= 1I;
  #L151440.  call temp:= `isOpen`(v9) @signature `Lokhttp3/internal/http2/Http2Stream;.isOpen:()Z` @kind virtual;
  #L151446.  v1:= temp;
  #L151448.  if v1 == 0 then goto L15145e;
  #L15144c.  v1:= v10.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L151450.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L151456.  v2:= temp @kind object;
  #L151458.  call temp:= `put`(v1, v2, v9) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15145e.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L151462.  @monitorexit v10
  #L151464.  if v11 != 0 then goto L151474;
  #L151468.  v11:= v10.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L15146c.  call `headers`(v11, v6, v8, v12) @signature `Lokhttp3/internal/http2/Http2Writer;.headers:(ZILjava/util/List;)V` @kind virtual;
  #L151472.  goto L151488;
  #L151474.  v1:= v10.`okhttp3.internal.http2.Http2Connection.a` @type ^`boolean` @kind boolean;
  #L151478.  v0:= v0 ^~ v1 @kind int;
  #L15147a.  if v0 == 0 then goto L15149a;
  #L15147e.  v0:= v10.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L151482.  call `pushPromise`(v0, v11, v8, v12) @signature `Lokhttp3/internal/http2/Http2Writer;.pushPromise:(IILjava/util/List;)V` @kind virtual;
  #L151488.  @monitorexit v7
  #L15148a.  if v13 == 0 then goto L151498;
  #L15148e.  v11:= v10.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L151492.  call `flush`(v11) @signature `Lokhttp3/internal/http2/Http2Writer;.flush:()V` @kind virtual;
  #L151498.  return v9 @kind object;
  #L15149a.  v11:= "client streams shouldn't have associated stream IDs" @kind object;
  #L15149e.  v12:= new `java.lang.IllegalArgumentException`;
  #L1514a2.  call temp:= `toString`(v11) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1514a8.  v11:= temp @kind object;
  #L1514aa.  call `<init>`(v12, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1514b0.  throw v12;
  #L1514b2.  v11:= new `okhttp3.internal.http2.ConnectionShutdownException`;
  #L1514b6.  call `<init>`(v11) @signature `Lokhttp3/internal/http2/ConnectionShutdownException;.<init>:()V` @kind direct;
  #L1514bc.  throw v11;
  #L1514be.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1514c0.  @monitorexit v10
  #L1514c2.  throw v11;
  #L1514c4.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1514c6.  @monitorexit v7
  #L1514c8.  throw v11;
  catch `java.lang.Throwable` @[L1513c8..L1513ca] goto L1514c4;
  catch `java.lang.Throwable` @[L1513ca..L151462] goto L1514be;
  catch `java.lang.Throwable` @[L151462..L151488] goto L1514c4;
  catch `java.lang.Throwable` @[L15149a..L1514b2] goto L1514c4;
  catch `java.lang.Throwable` @[L1514b2..L1514be] goto L1514be;
  catch `java.lang.Throwable` @[L1514c0..L1514c4] goto L1514c4;
}
procedure `void` `start$default`(`okhttp3.internal.http2.Http2Connection` v0 @kind object, `boolean` v1 , `okhttp3.internal.concurrent.TaskRunner` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.start$default:(Lokhttp3/internal/http2/Http2Connection;ZLokhttp3/internal/concurrent/TaskRunner;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L151f70.  v4:= v3 ^& 1;
  #L151f74.  if v4 == 0 then goto L151f7a;
  #L151f78.  v1:= 1I;
  #L151f7a.  v3:= v3 ^& 2;
  #L151f7e.  if v3 == 0 then goto L151f86;
  #L151f82.  v2:= `@@okhttp3.internal.concurrent.TaskRunner.INSTANCE` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L151f86.  call `start`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.start:(ZLokhttp3/internal/concurrent/TaskRunner;)V` @kind virtual;
  #L151f8c.  return @kind void;
}
procedure `void` `awaitPong`(`okhttp3.internal.http2.Http2Connection` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.awaitPong:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1518cc.  @monitorenter v5
  #L1518ce.  v0:= v5.`okhttp3.internal.http2.Http2Connection.r` @type ^`long` @kind wide;
  #L1518d2.  v2:= v5.`okhttp3.internal.http2.Http2Connection.q` @type ^`long` @kind wide;
  #L1518d6.  v4:= lcmp(v0, v2);
  #L1518da.  if v4 >= 0 then goto L1518e6;
  #L1518de.  call `wait`(v5) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L1518e4.  goto L1518ce;
  #L1518e6.  @monitorexit v5
  #L1518e8.  return @kind void;
  #L1518ea.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1518ec.  @monitorexit v5
  #L1518ee.  throw v0;
  catch `java.lang.Throwable` @[L1518ce..L1518e4] goto L1518ea;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Connection` v3 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L151a94.  v0:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L151a98.  v1:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L151a9c.  v2:= 0I;
  #L151a9e.  call `close$okhttp`(v3, v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L151aa4.  return @kind void;
}
procedure `void` `close$okhttp`(`okhttp3.internal.http2.Http2Connection` v3 @kind this, `okhttp3.internal.http2.ErrorCode` v4 @kind object, `okhttp3.internal.http2.ErrorCode` v5 @kind object, `java.io.IOException` v6 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15190c.  v0:= "connectionCode" @kind object;
  #L151910.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151916.  v0:= "streamCode" @kind object;
  #L15191a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151920.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L151924.  if v0 == 0 then goto L15198e;
  #L151928.  call temp:= `holdsLock`(v3) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L15192e.  v0:= temp;
  #L151930.  if v0 != 0 then goto L151936;
  #L151934.  goto L15198e;
  #L151936.  v4:= new `java.lang.AssertionError`;
  #L15193a.  v5:= new `java.lang.StringBuilder`;
  #L15193e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151944.  v6:= "Thread " @kind object;
  #L151948.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15194e.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L151954.  v6:= temp @kind object;
  #L151956.  v0:= "Thread.currentThread()" @kind object;
  #L15195a.  call `checkNotNullExpressionValue`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151960.  call temp:= `getName`(v6) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L151966.  v6:= temp @kind object;
  #L151968.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15196e.  v6:= " MUST NOT hold lock on " @kind object;
  #L151972.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151978.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15197e.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151984.  v5:= temp @kind object;
  #L151986.  call `<init>`(v4, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L15198c.  throw v4;
  #L15198e.  call `shutdown`(v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.shutdown:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L151994.  v4:= 0I;
  #L151996.  @monitorenter v3
  #L151998.  v0:= v3.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L15199c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L1519a2.  v0:= temp;
  #L1519a4.  v0:= v0 ^~ 1;
  #L1519a8.  v1:= 0I;
  #L1519aa.  if v0 == 0 then goto L1519ea;
  #L1519ae.  v4:= v3.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L1519b2.  call temp:= `values`(v4) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L1519b8.  v4:= temp @kind object;
  #L1519ba.  v0:= new `okhttp3.internal.http2.Http2Stream`[v1];
  #L1519be.  call temp:= `toArray`(v4, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1519c4.  v4:= temp @kind object;
  #L1519c6.  if v4 == 0 then goto L1519da;
  #L1519ca.  v4:= (`okhttp3.internal.http2.Http2Stream`[]) v4 @kind object;
  #L1519ce.  v0:= v3.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L1519d2.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L1519d8.  goto L1519ea;
  #L1519da.  v4:= new `java.lang.NullPointerException`;
  #L1519de.  v5:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L1519e2.  call `<init>`(v4, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1519e8.  throw v4;
  #L1519ea.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1519ee.  @monitorexit v3
  #L1519f0.  if v4 == 0 then goto L151a0a;
  #L1519f4.  v0:= length @variable v4;
  #L1519f6.  if v1 >= v0 then goto L151a0a;
  #L1519fa.  v2:= v4[v1] @kind object;
  #L1519fe.  call `close`(v2, v5, v6) @signature `Lokhttp3/internal/http2/Http2Stream;.close:(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L151a04.  v1:= v1 + 1;
  #L151a08.  goto L1519f6;
  #L151a0a.  v4:= v3.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L151a0e.  call `close`(v4) @signature `Lokhttp3/internal/http2/Http2Writer;.close:()V` @kind virtual;
  #L151a14.  v4:= v3.`okhttp3.internal.http2.Http2Connection.z` @type ^`java.net.Socket` @kind object;
  #L151a18.  call `close`(v4) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L151a1e.  v4:= v3.`okhttp3.internal.http2.Http2Connection.i` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L151a22.  call `shutdown`(v4) @signature `Lokhttp3/internal/concurrent/TaskQueue;.shutdown:()V` @kind virtual;
  #L151a28.  v4:= v3.`okhttp3.internal.http2.Http2Connection.j` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L151a2c.  call `shutdown`(v4) @signature `Lokhttp3/internal/concurrent/TaskQueue;.shutdown:()V` @kind virtual;
  #L151a32.  v4:= v3.`okhttp3.internal.http2.Http2Connection.k` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L151a36.  call `shutdown`(v4) @signature `Lokhttp3/internal/concurrent/TaskQueue;.shutdown:()V` @kind virtual;
  #L151a3c.  return @kind void;
  #L151a3e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L151a40.  @monitorexit v3
  #L151a42.  throw v4;
  catch `java.io.IOException` @[L15198e..L151994] goto L151994;
  catch `java.lang.Throwable` @[L151998..L1519ee] goto L151a3e;
  catch `java.io.IOException` @[L1519fe..L151a04] goto L151a04;
  catch `java.io.IOException` @[L151a0a..L151a14] goto L151a14;
  catch `java.io.IOException` @[L151a14..L151a1e] goto L151a1e;
}
procedure `void` `flush`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L151ad4.  v0:= v1.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L151ad8.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Writer;.flush:()V` @kind virtual;
  #L151ade.  return @kind void;
}
procedure `boolean` `getClient$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getClient$okhttp:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1510cc.  v0:= v1.`okhttp3.internal.http2.Http2Connection.a` @type ^`boolean` @kind boolean;
  #L1510d0.  return v0;
}
procedure `java.lang.String` `getConnectionName$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getConnectionName$okhttp:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1511cc.  v0:= v1.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L1511d0.  return v0 @kind object;
}
procedure `int` `getLastGoodStreamId$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getLastGoodStreamId$okhttp:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L151168.  v0:= v1.`okhttp3.internal.http2.Http2Connection.e` @type ^`int`;
  #L15116c.  return v0;
}
procedure `okhttp3.internal.http2.Http2Connection$Listener` `getListener$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getListener$okhttp:()Lokhttp3/internal/http2/Http2Connection$Listener;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15134c.  v0:= v1.`okhttp3.internal.http2.Http2Connection.b` @type ^`okhttp3.internal.http2.Http2Connection$Listener` @kind object;
  #L151350.  return v0 @kind object;
}
procedure `int` `getNextStreamId$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getNextStreamId$okhttp:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L151180.  v0:= v1.`okhttp3.internal.http2.Http2Connection.f` @type ^`int`;
  #L151184.  return v0;
}
procedure `okhttp3.internal.http2.Settings` `getOkHttpSettings`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getOkHttpSettings:()Lokhttp3/internal/http2/Settings;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L151614.  v0:= v1.`okhttp3.internal.http2.Http2Connection.t` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L151618.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Settings` `getPeerSettings`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getPeerSettings:()Lokhttp3/internal/http2/Settings;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15162c.  v0:= v1.`okhttp3.internal.http2.Http2Connection.u` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L151630.  return v0 @kind object;
}
procedure `long` `getReadBytesAcknowledged`(`okhttp3.internal.http2.Http2Connection` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getReadBytesAcknowledged:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1512a4.  v0:= v2.`okhttp3.internal.http2.Http2Connection.w` @type ^`long` @kind wide;
  #L1512a8.  return v0 @kind wide;
}
procedure `long` `getReadBytesTotal`(`okhttp3.internal.http2.Http2Connection` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getReadBytesTotal:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1512bc.  v0:= v2.`okhttp3.internal.http2.Http2Connection.v` @type ^`long` @kind wide;
  #L1512c0.  return v0 @kind wide;
}
procedure `okhttp3.internal.http2.Http2Connection$ReaderRunnable` `getReaderRunnable`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getReaderRunnable:()Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L151364.  v0:= v1.`okhttp3.internal.http2.Http2Connection.B` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L151368.  return v0 @kind object;
}
procedure `java.net.Socket` `getSocket$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getSocket$okhttp:()Ljava/net/Socket;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1511e4.  v0:= v1.`okhttp3.internal.http2.Http2Connection.z` @type ^`java.net.Socket` @kind object;
  #L1511e8.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Stream` `getStream`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15137c.  @monitorenter v1
  #L15137e.  v0:= v1.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L151382.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L151388.  v2:= temp @kind object;
  #L15138a.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L151390.  v2:= temp @kind object;
  #L151392.  v2:= (`okhttp3.internal.http2.Http2Stream`) v2 @kind object;
  #L151396.  @monitorexit v1
  #L151398.  return v2 @kind object;
  #L15139a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15139c.  @monitorexit v1
  #L15139e.  throw v2;
  catch `java.lang.Throwable` @[L15137e..L151396] goto L15139a;
}
procedure `java.util.Map` `getStreams$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getStreams$okhttp:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1511fc.  v0:= v1.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L151200.  return v0 @kind object;
}
procedure `long` `getWriteBytesMaximum`(`okhttp3.internal.http2.Http2Connection` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriteBytesMaximum:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1512d4.  v0:= v2.`okhttp3.internal.http2.Http2Connection.y` @type ^`long` @kind wide;
  #L1512d8.  return v0 @kind wide;
}
procedure `long` `getWriteBytesTotal`(`okhttp3.internal.http2.Http2Connection` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriteBytesTotal:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1512ec.  v0:= v2.`okhttp3.internal.http2.Http2Connection.x` @type ^`long` @kind wide;
  #L1512f0.  return v0 @kind wide;
}
procedure `okhttp3.internal.http2.Http2Writer` `getWriter`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriter:()Lokhttp3/internal/http2/Http2Writer;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1515cc.  v0:= v1.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L1515d0.  return v0 @kind object;
}
procedure `boolean` `isHealthy`(`okhttp3.internal.http2.Http2Connection` v6 @kind this, `long` v7 ) @signature `Lokhttp3/internal/http2/Http2Connection;.isHealthy:(J)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1510e4.  @monitorenter v6
  #L1510e6.  v0:= v6.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` @kind boolean;
  #L1510ea.  v1:= 0I;
  #L1510ec.  if v0 == 0 then goto L1510f4;
  #L1510f0.  @monitorexit v6
  #L1510f2.  return v1;
  #L1510f4.  v2:= v6.`okhttp3.internal.http2.Http2Connection.p` @type ^`long` @kind wide;
  #L1510f8.  v4:= v6.`okhttp3.internal.http2.Http2Connection.o` @type ^`long` @kind wide;
  #L1510fc.  v0:= lcmp(v2, v4);
  #L151100.  if v0 >= 0 then goto L151114;
  #L151104.  v2:= v6.`okhttp3.internal.http2.Http2Connection.s` @type ^`long` @kind wide;
  #L151108.  v0:= lcmp(v7, v2);
  #L15110c.  if v0 < 0 then goto L151114;
  #L151110.  @monitorexit v6
  #L151112.  return v1;
  #L151114.  v7:= 1I;
  #L151116.  @monitorexit v6
  #L151118.  return v7;
  #L15111a.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15111c.  @monitorexit v6
  #L15111e.  throw v7;
  catch `java.lang.Throwable` @[L1510e6..L1510ea] goto L15111a;
  catch `java.lang.Throwable` @[L1510f4..L151108] goto L15111a;
}
procedure `okhttp3.internal.http2.Http2Stream` `newStream`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `java.util.List` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/internal/http2/Http2Connection;.newStream:(Ljava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L151514.  v0:= "requestHeaders" @kind object;
  #L151518.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15151e.  v0:= 0I;
  #L151520.  call temp:= `b`(v1, v0, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.b:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @kind direct;
  #L151526.  v2:= temp @kind object;
  #L151528.  return v2 @kind object;
}
procedure `int` `openStreamCount`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.openStreamCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L151198.  @monitorenter v1
  #L15119a.  v0:= v1.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L15119e.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L1511a4.  v0:= temp;
  #L1511a6.  @monitorexit v1
  #L1511a8.  return v0;
  #L1511aa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1511ac.  @monitorexit v1
  #L1511ae.  throw v0;
  catch `java.lang.Throwable` @[L15119a..L1511a6] goto L1511aa;
}
procedure `void` `pushDataLater$okhttp`(`okhttp3.internal.http2.Http2Connection` v11 @kind this, `int` v12 , `okio.BufferedSource` v13 @kind object, `int` v14 , `boolean` v15 ) @signature `Lokhttp3/internal/http2/Http2Connection;.pushDataLater$okhttp:(ILokio/BufferedSource;IZ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L151af0.  v0:= "source" @kind object;
  #L151af4.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151afa.  v8:= new `okio.Buffer`;
  #L151afe.  call `<init>`(v8) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L151b04.  v0:= (`long`) v14 @kind i2l;
  #L151b06.  call `require`(v13, v0) @signature `Lokio/BufferedSource;.require:(J)V` @kind interface;
  #L151b0c.  call temp:= `read`(v13, v8, v0) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L151b12.  v13:= v11.`okhttp3.internal.http2.Http2Connection.j` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L151b16.  v0:= new `java.lang.StringBuilder`;
  #L151b1a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151b20.  v1:= v11.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L151b24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151b2a.  v1:= 91I;
  #L151b2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L151b34.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L151b3a.  v1:= "] onData" @kind object;
  #L151b3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151b44.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151b4a.  v4:= temp @kind object;
  #L151b4c.  v0:= new `okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1`;
  #L151b50.  v5:= 1I;
  #L151b52.  v1:= v0 @kind object;
  #L151b54.  v2:= v4 @kind object;
  #L151b56.  v3:= v5;
  #L151b58.  v6:= v11 @kind object;
  #L151b5a.  v7:= v12;
  #L151b5c.  v9:= v14;
  #L151b5e.  v10:= v15;
  #L151b60.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/internal/http2/Http2Connection$pushDataLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokio/Buffer;IZ)V` @kind direct;
  #L151b66.  v14:= 0L;
  #L151b6a.  call `schedule`(v13, v0, v14) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L151b70.  return @kind void;
}
procedure `void` `pushHeadersLater$okhttp`(`okhttp3.internal.http2.Http2Connection` v12 @kind this, `int` v13 , `java.util.List` v14 @kind object, `boolean` v15 ) @signature `Lokhttp3/internal/http2/Http2Connection;.pushHeadersLater$okhttp:(ILjava/util/List;Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L151b84.  v0:= "requestHeaders" @kind object;
  #L151b88.  call `checkNotNullParameter`(v14, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151b8e.  v0:= v12.`okhttp3.internal.http2.Http2Connection.j` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L151b92.  v1:= new `java.lang.StringBuilder`;
  #L151b96.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151b9c.  v2:= v12.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L151ba0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151ba6.  v2:= 91I;
  #L151baa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L151bb0.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L151bb6.  v2:= "] onHeaders" @kind object;
  #L151bba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151bc0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151bc6.  v6:= temp @kind object;
  #L151bc8.  v1:= new `okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1`;
  #L151bcc.  v7:= 1I;
  #L151bce.  v3:= v1 @kind object;
  #L151bd0.  v4:= v6 @kind object;
  #L151bd2.  v5:= v7;
  #L151bd4.  v8:= v12 @kind object;
  #L151bd6.  v9:= v13;
  #L151bd8.  v10:= v14 @kind object;
  #L151bda.  v11:= v15;
  #L151bdc.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILjava/util/List;Z)V` @kind direct;
  #L151be2.  v13:= 0L;
  #L151be6.  call `schedule`(v0, v1, v13) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L151bec.  return @kind void;
}
procedure `void` `pushRequestLater$okhttp`(`okhttp3.internal.http2.Http2Connection` v12 @kind this, `int` v13 , `java.util.List` v14 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.pushRequestLater$okhttp:(ILjava/util/List;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L151c00.  v0:= "requestHeaders" @kind object;
  #L151c04.  call `checkNotNullParameter`(v14, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151c0a.  @monitorenter v12
  #L151c0c.  v0:= v12.`okhttp3.internal.http2.Http2Connection.C` @type ^`java.util.Set` @kind object;
  #L151c10.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L151c16.  v1:= temp @kind object;
  #L151c18.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L151c1e.  v0:= temp;
  #L151c20.  if v0 == 0 then goto L151c32;
  #L151c24.  v14:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L151c28.  call `writeSynResetLater$okhttp`(v12, v13, v14) @signature `Lokhttp3/internal/http2/Http2Connection;.writeSynResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L151c2e.  @monitorexit v12
  #L151c30.  return @kind void;
  #L151c32.  v0:= v12.`okhttp3.internal.http2.Http2Connection.C` @type ^`java.util.Set` @kind object;
  #L151c36.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L151c3c.  v1:= temp @kind object;
  #L151c3e.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L151c44.  @monitorexit v12
  #L151c46.  v0:= v12.`okhttp3.internal.http2.Http2Connection.j` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L151c4a.  v1:= new `java.lang.StringBuilder`;
  #L151c4e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151c54.  v2:= v12.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L151c58.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151c5e.  v2:= 91I;
  #L151c62.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L151c68.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L151c6e.  v2:= "] onRequest" @kind object;
  #L151c72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151c78.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151c7e.  v6:= temp @kind object;
  #L151c80.  v1:= 0L;
  #L151c84.  v7:= 1I;
  #L151c86.  v11:= new `okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1`;
  #L151c8a.  v3:= v11 @kind object;
  #L151c8c.  v4:= v6 @kind object;
  #L151c8e.  v5:= v7;
  #L151c90.  v8:= v12 @kind object;
  #L151c92.  v9:= v13;
  #L151c94.  v10:= v14 @kind object;
  #L151c96.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/internal/http2/Http2Connection$pushRequestLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILjava/util/List;)V` @kind direct;
  #L151c9c.  call `schedule`(v0, v11, v1) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L151ca2.  return @kind void;
  #L151ca4.  v13:= Exception @type ^`java.lang.Throwable` @kind object;
  #L151ca6.  @monitorexit v12
  #L151ca8.  throw v13;
  catch `java.lang.Throwable` @[L151c0c..L151c2e] goto L151ca4;
  catch `java.lang.Throwable` @[L151c32..L151c44] goto L151ca4;
}
procedure `void` `pushResetLater$okhttp`(`okhttp3.internal.http2.Http2Connection` v11 @kind this, `int` v12 , `okhttp3.internal.http2.ErrorCode` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.pushResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L151cd0.  v0:= "errorCode" @kind object;
  #L151cd4.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151cda.  v0:= v11.`okhttp3.internal.http2.Http2Connection.j` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L151cde.  v1:= new `java.lang.StringBuilder`;
  #L151ce2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151ce8.  v2:= v11.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L151cec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151cf2.  v2:= 91I;
  #L151cf6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L151cfc.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L151d02.  v2:= "] onReset" @kind object;
  #L151d06.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151d0c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151d12.  v6:= temp @kind object;
  #L151d14.  v1:= new `okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1`;
  #L151d18.  v7:= 1I;
  #L151d1a.  v3:= v1 @kind object;
  #L151d1c.  v4:= v6 @kind object;
  #L151d1e.  v5:= v7;
  #L151d20.  v8:= v11 @kind object;
  #L151d22.  v9:= v12;
  #L151d24.  v10:= v13 @kind object;
  #L151d26.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/internal/http2/Http2Connection$pushResetLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V` @kind direct;
  #L151d2c.  v12:= 0L;
  #L151d30.  call `schedule`(v0, v1, v12) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L151d36.  return @kind void;
}
procedure `okhttp3.internal.http2.Http2Stream` `pushStream`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 , `java.util.List` v3 @kind object, `boolean` v4 ) @signature `Lokhttp3/internal/http2/Http2Connection;.pushStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15153c.  v0:= "requestHeaders" @kind object;
  #L151540.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151546.  v0:= v1.`okhttp3.internal.http2.Http2Connection.a` @type ^`boolean` @kind boolean;
  #L15154a.  v0:= v0 ^~ 1;
  #L15154e.  if v0 == 0 then goto L15155c;
  #L151552.  call temp:= `b`(v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.b:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @kind direct;
  #L151558.  v2:= temp @kind object;
  #L15155a.  return v2 @kind object;
  #L15155c.  v2:= new `java.lang.IllegalStateException`;
  #L151560.  v3:= "Client cannot push requests." @kind object;
  #L151564.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15156a.  v3:= temp @kind object;
  #L15156c.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L151572.  throw v2;
}
procedure `boolean` `pushedStream$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream$okhttp:(I)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L151144.  v0:= 1I;
  #L151146.  if v2 == 0 then goto L151152;
  #L15114a.  v2:= v2 ^& v0 @kind int;
  #L15114c.  if v2 != 0 then goto L151152;
  #L151150.  goto L151154;
  #L151152.  v0:= 0I;
  #L151154.  return v0;
}
procedure `okhttp3.internal.http2.Http2Stream` `removeStream$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream$okhttp:(I)Lokhttp3/internal/http2/Http2Stream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L151584.  @monitorenter v1
  #L151586.  v0:= v1.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L15158a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L151590.  v2:= temp @kind object;
  #L151592.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L151598.  v2:= temp @kind object;
  #L15159a.  v2:= (`okhttp3.internal.http2.Http2Stream`) v2 @kind object;
  #L15159e.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1515a4.  @monitorexit v1
  #L1515a6.  return v2 @kind object;
  #L1515a8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1515aa.  @monitorexit v1
  #L1515ac.  throw v2;
  catch `java.lang.Throwable` @[L151586..L1515a4] goto L1515a8;
}
procedure `void` `sendDegradedPingLater$okhttp`(`okhttp3.internal.http2.Http2Connection` v10 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.sendDegradedPingLater$okhttp:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L151d48.  @monitorenter v10
  #L151d4a.  v0:= v10.`okhttp3.internal.http2.Http2Connection.p` @type ^`long` @kind wide;
  #L151d4e.  v2:= v10.`okhttp3.internal.http2.Http2Connection.o` @type ^`long` @kind wide;
  #L151d52.  v4:= lcmp(v0, v2);
  #L151d56.  if v4 >= 0 then goto L151d5e;
  #L151d5a.  @monitorexit v10
  #L151d5c.  return @kind void;
  #L151d5e.  v0:= 1L;
  #L151d62.  v2:= v2 + v0 @kind long;
  #L151d64.  v10.`okhttp3.internal.http2.Http2Connection.o` @type ^`long` := v2 @kind wide;
  #L151d68.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L151d6e.  v0:= temp @kind wide;
  #L151d70.  v2:= 1000000000I;
  #L151d76.  v2:= (`long`) v2 @kind i2l;
  #L151d78.  v0:= v0 + v2 @kind long;
  #L151d7a.  v10.`okhttp3.internal.http2.Http2Connection.s` @type ^`long` := v0 @kind wide;
  #L151d7e.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L151d82.  @monitorexit v10
  #L151d84.  v0:= v10.`okhttp3.internal.http2.Http2Connection.i` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L151d88.  v1:= new `java.lang.StringBuilder`;
  #L151d8c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151d92.  v2:= v10.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L151d96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151d9c.  v2:= " ping" @kind object;
  #L151da0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151da6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151dac.  v6:= temp @kind object;
  #L151dae.  v1:= 0L;
  #L151db2.  v7:= 1I;
  #L151db4.  v9:= new `okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1`;
  #L151db8.  v3:= v9 @kind object;
  #L151dba.  v4:= v6 @kind object;
  #L151dbc.  v5:= v7;
  #L151dbe.  v8:= v10 @kind object;
  #L151dc0.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/http2/Http2Connection$sendDegradedPingLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;)V` @kind direct;
  #L151dc6.  call `schedule`(v0, v9, v1) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L151dcc.  return @kind void;
  #L151dce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L151dd0.  @monitorexit v10
  #L151dd2.  throw v0;
  catch `java.lang.Throwable` @[L151d4a..L151d52] goto L151dce;
  catch `java.lang.Throwable` @[L151d64..L151d82] goto L151dce;
}
procedure `void` `setLastGoodStreamId$okhttp`(`okhttp3.internal.http2.Http2Connection` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection;.setLastGoodStreamId$okhttp:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L151df8.  v0.`okhttp3.internal.http2.Http2Connection.e` @type ^`int` := v1;
  #L151dfc.  return @kind void;
}
procedure `void` `setNextStreamId$okhttp`(`okhttp3.internal.http2.Http2Connection` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection;.setNextStreamId$okhttp:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L151e10.  v0.`okhttp3.internal.http2.Http2Connection.f` @type ^`int` := v1;
  #L151e14.  return @kind void;
}
procedure `void` `setPeerSettings`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `okhttp3.internal.http2.Settings` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.setPeerSettings:(Lokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L151e28.  v0:= "<set-?>" @kind object;
  #L151e2c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151e32.  v1.`okhttp3.internal.http2.Http2Connection.u` @type ^`okhttp3.internal.http2.Settings` := v2 @kind object;
  #L151e36.  return @kind void;
}
procedure `void` `setSettings`(`okhttp3.internal.http2.Http2Connection` v2 @kind this, `okhttp3.internal.http2.Settings` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.setSettings:(Lokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L151e48.  v0:= "settings" @kind object;
  #L151e4c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151e52.  v0:= v2.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L151e56.  @monitorenter v0
  #L151e58.  @monitorenter v2
  #L151e5a.  v1:= v2.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` @kind boolean;
  #L151e5e.  if v1 != 0 then goto L151e80;
  #L151e62.  v1:= v2.`okhttp3.internal.http2.Http2Connection.t` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L151e66.  call `merge`(v1, v3) @signature `Lokhttp3/internal/http2/Settings;.merge:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L151e6c.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L151e70.  @monitorexit v2
  #L151e72.  v1:= v2.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L151e76.  call `settings`(v1, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.settings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L151e7c.  @monitorexit v0
  #L151e7e.  return @kind void;
  #L151e80.  v3:= new `okhttp3.internal.http2.ConnectionShutdownException`;
  #L151e84.  call `<init>`(v3) @signature `Lokhttp3/internal/http2/ConnectionShutdownException;.<init>:()V` @kind direct;
  #L151e8a.  throw v3;
  #L151e8c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L151e8e.  @monitorexit v2
  #L151e90.  throw v3;
  #L151e92.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L151e94.  @monitorexit v0
  #L151e96.  throw v3;
  catch `java.lang.Throwable` @[L151e58..L151e5a] goto L151e92;
  catch `java.lang.Throwable` @[L151e5a..L151e70] goto L151e8c;
  catch `java.lang.Throwable` @[L151e70..L151e7c] goto L151e92;
  catch `java.lang.Throwable` @[L151e80..L151e8c] goto L151e8c;
  catch `java.lang.Throwable` @[L151e8e..L151e92] goto L151e92;
}
procedure `void` `shutdown`(`okhttp3.internal.http2.Http2Connection` v4 @kind this, `okhttp3.internal.http2.ErrorCode` v5 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.shutdown:(Lokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L151ed8.  v0:= "statusCode" @kind object;
  #L151edc.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151ee2.  v0:= v4.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L151ee6.  @monitorenter v0
  #L151ee8.  @monitorenter v4
  #L151eea.  v1:= v4.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` @kind boolean;
  #L151eee.  if v1 == 0 then goto L151ef8;
  #L151ef2.  @monitorexit v4
  #L151ef4.  @monitorexit v0
  #L151ef6.  return @kind void;
  #L151ef8.  v1:= 1I;
  #L151efa.  v4.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` := v1 @kind boolean;
  #L151efe.  v1:= v4.`okhttp3.internal.http2.Http2Connection.e` @type ^`int`;
  #L151f02.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L151f06.  @monitorexit v4
  #L151f08.  v2:= v4.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L151f0c.  v3:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L151f10.  call `goAway`(v2, v1, v5, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.goAway:(ILokhttp3/internal/http2/ErrorCode;[B)V` @kind virtual;
  #L151f16.  @monitorexit v0
  #L151f18.  return @kind void;
  #L151f1a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L151f1c.  @monitorexit v4
  #L151f1e.  throw v5;
  #L151f20.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L151f22.  @monitorexit v0
  #L151f24.  throw v5;
  catch `java.lang.Throwable` @[L151ee8..L151eea] goto L151f20;
  catch `java.lang.Throwable` @[L151eea..L151eee] goto L151f1a;
  catch `java.lang.Throwable` @[L151ef2..L151ef4] goto L151f20;
  catch `java.lang.Throwable` @[L151efa..L151f06] goto L151f1a;
  catch `java.lang.Throwable` @[L151f06..L151f16] goto L151f20;
  catch `java.lang.Throwable` @[L151f1c..L151f20] goto L151f20;
}
procedure `void` `start`(`okhttp3.internal.http2.Http2Connection` v3 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.start:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L151fa0.  v0:= 0I;
  #L151fa2.  v1:= 0I;
  #L151fa4.  v2:= 3I;
  #L151fa6.  call `start$default`(v3, v0, v1, v2, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.start$default:(Lokhttp3/internal/http2/Http2Connection;ZLokhttp3/internal/concurrent/TaskRunner;ILjava/lang/Object;)V` @kind static;
  #L151fac.  return @kind void;
}
procedure `void` `start`(`okhttp3.internal.http2.Http2Connection` v2 @kind this, `boolean` v3 ) @signature `Lokhttp3/internal/http2/Http2Connection;.start:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L151fc0.  v0:= 0I;
  #L151fc2.  v1:= 2I;
  #L151fc4.  call `start$default`(v2, v3, v0, v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.start$default:(Lokhttp3/internal/http2/Http2Connection;ZLokhttp3/internal/concurrent/TaskRunner;ILjava/lang/Object;)V` @kind static;
  #L151fca.  return @kind void;
}
procedure `void` `start`(`okhttp3.internal.http2.Http2Connection` v8 @kind this, `boolean` v9 , `okhttp3.internal.concurrent.TaskRunner` v10 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.start:(ZLokhttp3/internal/concurrent/TaskRunner;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L151fdc.  v0:= "taskRunner" @kind object;
  #L151fe0.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151fe6.  if v9 == 0 then goto L152028;
  #L151fea.  v9:= v8.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L151fee.  call `connectionPreface`(v9) @signature `Lokhttp3/internal/http2/Http2Writer;.connectionPreface:()V` @kind virtual;
  #L151ff4.  v9:= v8.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L151ff8.  v0:= v8.`okhttp3.internal.http2.Http2Connection.t` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L151ffc.  call `settings`(v9, v0) @signature `Lokhttp3/internal/http2/Http2Writer;.settings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L152002.  v9:= v8.`okhttp3.internal.http2.Http2Connection.t` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L152006.  call temp:= `getInitialWindowSize`(v9) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L15200c.  v9:= temp;
  #L15200e.  v0:= 65535I;
  #L152014.  if v9 == v0 then goto L152028;
  #L152018.  v1:= v8.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L15201c.  v2:= 0I;
  #L15201e.  v9:= v9 - v0 @kind int;
  #L152020.  v3:= (`long`) v9 @kind i2l;
  #L152022.  call `windowUpdate`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.windowUpdate:(IJ)V` @kind virtual;
  #L152028.  call temp:= `newQueue`(v10) @signature `Lokhttp3/internal/concurrent/TaskRunner;.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;` @kind virtual;
  #L15202e.  v9:= temp @kind object;
  #L152030.  v4:= v8.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L152034.  v1:= v8.`okhttp3.internal.http2.Http2Connection.B` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L152038.  v6:= 0L;
  #L15203c.  v5:= 1I;
  #L15203e.  v10:= new `okhttp3.internal.concurrent.TaskQueue$execute$1`;
  #L152042.  v0:= v10 @kind object;
  #L152044.  v2:= v4 @kind object;
  #L152046.  v3:= v5;
  #L152048.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/concurrent/TaskQueue$execute$1;.<init>:(Lkotlin/jvm/functions/Function0;Ljava/lang/String;ZLjava/lang/String;Z)V` @kind direct;
  #L15204e.  call `schedule`(v9, v10, v6) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L152054.  return @kind void;
}
procedure `void` `updateConnectionFlowControl$okhttp`(`okhttp3.internal.http2.Http2Connection` v3 @kind this, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Connection;.updateConnectionFlowControl$okhttp:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L152068.  @monitorenter v3
  #L15206a.  v0:= v3.`okhttp3.internal.http2.Http2Connection.v` @type ^`long` @kind wide;
  #L15206e.  v0:= v0 + v4 @kind long;
  #L152070.  v3.`okhttp3.internal.http2.Http2Connection.v` @type ^`long` := v0 @kind wide;
  #L152074.  v4:= v3.`okhttp3.internal.http2.Http2Connection.w` @type ^`long` @kind wide;
  #L152078.  v0:= v0 - v4 @kind long;
  #L15207a.  v4:= v3.`okhttp3.internal.http2.Http2Connection.t` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L15207e.  call temp:= `getInitialWindowSize`(v4) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L152084.  v4:= temp;
  #L152086.  v4:= v4 / 2;
  #L15208a.  v4:= (`long`) v4 @kind i2l;
  #L15208c.  v2:= lcmp(v0, v4);
  #L152090.  if v2 < 0 then goto L1520a6;
  #L152094.  v4:= 0I;
  #L152096.  call `writeWindowUpdateLater$okhttp`(v3, v4, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.writeWindowUpdateLater$okhttp:(IJ)V` @kind virtual;
  #L15209c.  v4:= v3.`okhttp3.internal.http2.Http2Connection.w` @type ^`long` @kind wide;
  #L1520a0.  v4:= v4 + v0 @kind long;
  #L1520a2.  v3.`okhttp3.internal.http2.Http2Connection.w` @type ^`long` := v4 @kind wide;
  #L1520a6.  @monitorexit v3
  #L1520a8.  return @kind void;
  #L1520aa.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1520ac.  @monitorexit v3
  #L1520ae.  throw v4;
  catch `java.lang.Throwable` @[L15206a..L1520a6] goto L1520aa;
}
procedure `void` `writeData`(`okhttp3.internal.http2.Http2Connection` v8 @kind this, `int` v9 , `boolean` v10 , `okio.Buffer` v11 @kind object, `long` v12 ) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1520cc.  v0:= 0I;
  #L1520ce.  v1:= 0L;
  #L1520d2.  v3:= lcmp(v12, v1);
  #L1520d6.  if v3 != 0 then goto L1520e6;
  #L1520da.  v12:= v8.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L1520de.  call `data`(v12, v10, v9, v11, v0) @signature `Lokhttp3/internal/http2/Http2Writer;.data:(ZILokio/Buffer;I)V` @kind virtual;
  #L1520e4.  return @kind void;
  #L1520e6.  v3:= lcmp(v12, v1);
  #L1520ea.  if v3 <= 0 then goto L1521a4;
  #L1520ee.  @monitorenter v8
  #L1520f0.  v3:= v8.`okhttp3.internal.http2.Http2Connection.x` @type ^`long` @kind wide;
  #L1520f4.  v5:= v8.`okhttp3.internal.http2.Http2Connection.y` @type ^`long` @kind wide;
  #L1520f8.  v7:= lcmp(v3, v5);
  #L1520fc.  if v7 < 0 then goto L152130;
  #L152100.  v3:= v8.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L152104.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15210a.  v4:= temp @kind object;
  #L15210c.  call temp:= `containsKey`(v3, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L152112.  v3:= temp;
  #L152114.  if v3 == 0 then goto L152120;
  #L152118.  call `wait`(v8) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L15211e.  goto L1520f0;
  #L152120.  v9:= new `java.io.IOException`;
  #L152124.  v10:= "stream closed" @kind object;
  #L152128.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15212e.  throw v9;
  #L152130.  v5:= v5 - v3 @kind long;
  #L152132.  call temp:= `min`(v12, v5) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L152138.  v3:= temp @kind wide;
  #L15213a.  v4:= (`int`) v3 @kind l2i;
  #L15213c.  v3:= v8.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L152140.  call temp:= `maxDataLength`(v3) @signature `Lokhttp3/internal/http2/Http2Writer;.maxDataLength:()I` @kind virtual;
  #L152146.  v3:= temp;
  #L152148.  call temp:= `min`(v4, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L15214e.  v3:= temp;
  #L152150.  v4:= v8.`okhttp3.internal.http2.Http2Connection.x` @type ^`long` @kind wide;
  #L152154.  v6:= (`long`) v3 @kind i2l;
  #L152156.  v4:= v4 + v6 @kind long;
  #L152158.  v8.`okhttp3.internal.http2.Http2Connection.x` @type ^`long` := v4 @kind wide;
  #L15215c.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L152160.  @monitorexit v8
  #L152162.  v12:= v12 - v6 @kind long;
  #L152164.  v4:= v8.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L152168.  if v10 == 0 then goto L152178;
  #L15216c.  v5:= lcmp(v12, v1);
  #L152170.  if v5 != 0 then goto L152178;
  #L152174.  v5:= 1I;
  #L152176.  goto L15217a;
  #L152178.  v5:= 0I;
  #L15217a.  call `data`(v4, v5, v9, v11, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.data:(ZILokio/Buffer;I)V` @kind virtual;
  #L152180.  goto L1520e6;
  #L152182.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L152184.  goto L1521a0;
  #L152186.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L15218c.  v9:= temp @kind object;
  #L15218e.  call `interrupt`(v9) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L152194.  v9:= new `java.io.InterruptedIOException`;
  #L152198.  call `<init>`(v9) @signature `Ljava/io/InterruptedIOException;.<init>:()V` @kind direct;
  #L15219e.  throw v9;
  #L1521a0.  @monitorexit v8
  #L1521a2.  throw v9;
  #L1521a4.  return @kind void;
  catch `java.lang.InterruptedException` @[L1520f0..L152130] goto L152186;
  catch `java.lang.Throwable` @[L1520f0..L152130] goto L152182;
  catch `java.lang.Throwable` @[L152132..L152160] goto L152182;
  catch `java.lang.Throwable` @[L152186..L1521a0] goto L152182;
}
procedure `void` `writeHeaders$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 , `boolean` v3 , `java.util.List` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.writeHeaders$okhttp:(IZLjava/util/List;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1521d8.  v0:= "alternating" @kind object;
  #L1521dc.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1521e2.  v0:= v1.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L1521e6.  call `headers`(v0, v3, v2, v4) @signature `Lokhttp3/internal/http2/Http2Writer;.headers:(ZILjava/util/List;)V` @kind virtual;
  #L1521ec.  return @kind void;
}
procedure `void` `writePing`(`okhttp3.internal.http2.Http2Connection` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.writePing:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L152200.  @monitorenter v4
  #L152202.  v0:= v4.`okhttp3.internal.http2.Http2Connection.q` @type ^`long` @kind wide;
  #L152206.  v2:= 1L;
  #L15220a.  v0:= v0 + v2 @kind long;
  #L15220c.  v4.`okhttp3.internal.http2.Http2Connection.q` @type ^`long` := v0 @kind wide;
  #L152210.  @monitorexit v4
  #L152212.  v0:= 0I;
  #L152214.  v1:= 3I;
  #L152216.  v2:= 1330343787I;
  #L15221c.  call `writePing`(v4, v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.writePing:(ZII)V` @kind virtual;
  #L152222.  return @kind void;
  #L152224.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L152226.  @monitorexit v4
  #L152228.  throw v0;
  catch `java.lang.Throwable` @[L152202..L152210] goto L152224;
}
procedure `void` `writePing`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `boolean` v2 , `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/http2/Http2Connection;.writePing:(ZII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L152248.  v0:= v1.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L15224c.  call `ping`(v0, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Writer;.ping:(ZII)V` @kind virtual;
  #L152252.  goto L15225c;
  #L152254.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L152256.  call `a`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.a:(Ljava/io/IOException;)V` @kind direct;
  #L15225c.  return @kind void;
  catch `java.io.IOException` @[L152248..L152252] goto L152254;
}
procedure `void` `writePingAndAwaitPong`(`okhttp3.internal.http2.Http2Connection` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.writePingAndAwaitPong:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L152280.  call `writePing`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.writePing:()V` @kind virtual;
  #L152286.  call `awaitPong`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.awaitPong:()V` @kind virtual;
  #L15228c.  return @kind void;
}
procedure `void` `writeSynReset$okhttp`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 , `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.writeSynReset$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1522a0.  v0:= "statusCode" @kind object;
  #L1522a4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1522aa.  v0:= v1.`okhttp3.internal.http2.Http2Connection.A` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L1522ae.  call `rstStream`(v0, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1522b4.  return @kind void;
}
procedure `void` `writeSynResetLater$okhttp`(`okhttp3.internal.http2.Http2Connection` v11 @kind this, `int` v12 , `okhttp3.internal.http2.ErrorCode` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.writeSynResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1522c8.  v0:= "errorCode" @kind object;
  #L1522cc.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1522d2.  v0:= v11.`okhttp3.internal.http2.Http2Connection.i` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L1522d6.  v1:= new `java.lang.StringBuilder`;
  #L1522da.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1522e0.  v2:= v11.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L1522e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1522ea.  v2:= 91I;
  #L1522ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1522f4.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1522fa.  v2:= "] writeSynReset" @kind object;
  #L1522fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152304.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15230a.  v6:= temp @kind object;
  #L15230c.  v1:= new `okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1`;
  #L152310.  v7:= 1I;
  #L152312.  v3:= v1 @kind object;
  #L152314.  v4:= v6 @kind object;
  #L152316.  v5:= v7;
  #L152318.  v8:= v11 @kind object;
  #L15231a.  v9:= v12;
  #L15231c.  v10:= v13 @kind object;
  #L15231e.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V` @kind direct;
  #L152324.  v12:= 0L;
  #L152328.  call `schedule`(v0, v1, v12) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L15232e.  return @kind void;
}
procedure `void` `writeWindowUpdateLater$okhttp`(`okhttp3.internal.http2.Http2Connection` v12 @kind this, `int` v13 , `long` v14 ) @signature `Lokhttp3/internal/http2/Http2Connection;.writeWindowUpdateLater$okhttp:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L152340.  v0:= v12.`okhttp3.internal.http2.Http2Connection.i` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L152344.  v1:= new `java.lang.StringBuilder`;
  #L152348.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15234e.  v2:= v12.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L152352.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152358.  v2:= 91I;
  #L15235c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L152362.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L152368.  v2:= "] windowUpdate" @kind object;
  #L15236c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152372.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152378.  v6:= temp @kind object;
  #L15237a.  v1:= new `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1`;
  #L15237e.  v7:= 1I;
  #L152380.  v3:= v1 @kind object;
  #L152382.  v4:= v6 @kind object;
  #L152384.  v5:= v7;
  #L152386.  v8:= v12 @kind object;
  #L152388.  v9:= v13;
  #L15238a.  v10:= v14 @kind wide;
  #L15238c.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;IJ)V` @kind direct;
  #L152392.  v13:= 0L;
  #L152396.  call `schedule`(v0, v1, v13) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L15239c.  return @kind void;
}
