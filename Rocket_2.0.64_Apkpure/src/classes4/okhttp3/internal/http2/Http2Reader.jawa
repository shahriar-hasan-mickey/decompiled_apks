record `okhttp3.internal.http2.Http2Reader` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.internal.http2.Http2Reader$ContinuationSource` `okhttp3.internal.http2.Http2Reader.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Hpack$Reader` `okhttp3.internal.http2.Http2Reader.b` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSource` `okhttp3.internal.http2.Http2Reader.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http2.Http2Reader.d` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.http2.Http2Reader$Companion` `@@okhttp3.internal.http2.Http2Reader.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.http2.Http2Reader.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Reader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L152f9c.  v0:= new `okhttp3.internal.http2.Http2Reader$Companion`;
  #L152fa0.  v1:= 0I;
  #L152fa2.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L152fa8.  `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` := v0 @kind object;
  #L152fac.  v0:= constclass @type ^`okhttp3.internal.http2.Http2` @kind object;
  #L152fb0.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L152fb6.  v0:= temp @kind object;
  #L152fb8.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L152fbe.  v0:= temp @kind object;
  #L152fc0.  v1:= "Logger.getLogger(Http2::class.java.name)" @kind object;
  #L152fc4.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L152fca.  `@@okhttp3.internal.http2.Http2Reader.e` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L152fce.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Reader` v7 @kind this, `okio.BufferedSource` v8 @kind object, `boolean` v9 ) @signature `Lokhttp3/internal/http2/Http2Reader;.<init>:(Lokio/BufferedSource;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L152fe0.  v0:= "source" @kind object;
  #L152fe4.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L152fea.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L152ff0.  v7.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` := v8 @kind object;
  #L152ff4.  v7.`okhttp3.internal.http2.Http2Reader.d` @type ^`boolean` := v9 @kind boolean;
  #L152ff8.  v2:= new `okhttp3.internal.http2.Http2Reader$ContinuationSource`;
  #L152ffc.  call `<init>`(v2, v8) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.<init>:(Lokio/BufferedSource;)V` @kind direct;
  #L153002.  v7.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` := v2 @kind object;
  #L153006.  v8:= new `okhttp3.internal.http2.Hpack$Reader`;
  #L15300a.  v3:= 4096I;
  #L15300e.  v4:= 0I;
  #L153010.  v5:= 4I;
  #L153012.  v6:= 0I;
  #L153014.  v1:= v8 @kind object;
  #L153016.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Hpack$Reader;.<init>:(Lokio/Source;IIILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L15301c.  v7.`okhttp3.internal.http2.Http2Reader.b` @type ^`okhttp3.internal.http2.Hpack$Reader` := v8 @kind object;
  #L153020.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Http2Reader` v4 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v5 @kind object, `int` v6 , `int` v7 , `int` v8 ) @signature `Lokhttp3/internal/http2/Http2Reader;.a:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L153144.  if v8 == 0 then goto L1531be;
  #L153148.  v0:= v7 ^& 1;
  #L15314c.  v1:= 0I;
  #L15314e.  v2:= 1I;
  #L153150.  if v0 == 0 then goto L153158;
  #L153154.  v0:= 1I;
  #L153156.  goto L15315a;
  #L153158.  v0:= 0I;
  #L15315a.  v3:= v7 ^& 32;
  #L15315e.  if v3 == 0 then goto L153164;
  #L153162.  goto L153166;
  #L153164.  v2:= 0I;
  #L153166.  if v2 != 0 then goto L1531ae;
  #L15316a.  v2:= v7 ^& 8;
  #L15316e.  if v2 == 0 then goto L15318a;
  #L153172.  v1:= v4.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L153176.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L15317c.  v1:= temp;
  #L15317e.  v2:= 255I;
  #L153182.  call temp:= `and`(v1, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L153188.  v1:= temp;
  #L15318a.  v2:= `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` @kind object;
  #L15318e.  call temp:= `lengthWithoutPadding`(v2, v6, v7, v1) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.lengthWithoutPadding:(III)I` @kind virtual;
  #L153194.  v6:= temp;
  #L153196.  v7:= v4.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L15319a.  call `data`(v5, v0, v8, v7, v6) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.data:(ZILokio/BufferedSource;I)V` @kind interface;
  #L1531a0.  v5:= v4.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1531a4.  v6:= (`long`) v1 @kind i2l;
  #L1531a6.  call `skip`(v5, v6) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L1531ac.  return @kind void;
  #L1531ae.  v5:= new `java.io.IOException`;
  #L1531b2.  v6:= "PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA" @kind object;
  #L1531b6.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1531bc.  throw v5;
  #L1531be.  v5:= new `java.io.IOException`;
  #L1531c2.  v6:= "PROTOCOL_ERROR: TYPE_DATA streamId == 0" @kind object;
  #L1531c6.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1531cc.  throw v5;
}
procedure `java.util.logging.Logger` `access$getLogger$cp`() @signature `Lokhttp3/internal/http2/Http2Reader;.access$getLogger$cp:()Ljava/util/logging/Logger;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L152f84.  v0:= `@@okhttp3.internal.http2.Http2Reader.e` @type ^`java.util.logging.Logger` @kind object;
  #L152f88.  return v0 @kind object;
}
procedure `void` `b`(`okhttp3.internal.http2.Http2Reader` v3 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/http2/Http2Reader;.b:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1531e0.  v6:= 8I;
  #L1531e4.  if v5 < v6 then goto L153272;
  #L1531e8.  if v7 != 0 then goto L153262;
  #L1531ec.  v7:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1531f0.  call temp:= `readInt`(v7) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1531f6.  v7:= temp;
  #L1531f8.  v0:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1531fc.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L153202.  v0:= temp;
  #L153204.  v5:= v5 - v6 @kind int;
  #L153206.  v6:= `@@okhttp3.internal.http2.ErrorCode.Companion` @type ^`okhttp3.internal.http2.ErrorCode$Companion` @kind object;
  #L15320a.  call temp:= `fromHttp2`(v6, v0) @signature `Lokhttp3/internal/http2/ErrorCode$Companion;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @kind virtual;
  #L153210.  v6:= temp @kind object;
  #L153212.  if v6 == 0 then goto L153234;
  #L153216.  v0:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L15321a.  if v5 <= 0 then goto L15322c;
  #L15321e.  v0:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L153222.  v1:= (`long`) v5 @kind i2l;
  #L153224.  call temp:= `readByteString`(v0, v1) @signature `Lokio/BufferedSource;.readByteString:(J)Lokio/ByteString;` @kind interface;
  #L15322a.  v0:= temp @kind object;
  #L15322c.  call `goAway`(v4, v7, v6, v0) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.goAway:(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V` @kind interface;
  #L153232.  return @kind void;
  #L153234.  v4:= new `java.io.IOException`;
  #L153238.  v5:= new `java.lang.StringBuilder`;
  #L15323c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153242.  v6:= "TYPE_GOAWAY unexpected error code: " @kind object;
  #L153246.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15324c.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L153252.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153258.  v5:= temp @kind object;
  #L15325a.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L153260.  throw v4;
  #L153262.  v4:= new `java.io.IOException`;
  #L153266.  v5:= "TYPE_GOAWAY streamId != 0" @kind object;
  #L15326a.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L153270.  throw v4;
  #L153272.  v4:= new `java.io.IOException`;
  #L153276.  v6:= new `java.lang.StringBuilder`;
  #L15327a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153280.  v7:= "TYPE_GOAWAY length < 8: " @kind object;
  #L153284.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15328a.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L153290.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153296.  v5:= temp @kind object;
  #L153298.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15329e.  throw v4;
}
procedure `java.util.List` `c`(`okhttp3.internal.http2.Http2Reader` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lokhttp3/internal/http2/Http2Reader;.c:(IIII)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L152f20.  v0:= v1.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind object;
  #L152f24.  call `setLeft`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setLeft:(I)V` @kind virtual;
  #L152f2a.  v2:= v1.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind object;
  #L152f2e.  call temp:= `getLeft`(v2) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getLeft:()I` @kind virtual;
  #L152f34.  v0:= temp;
  #L152f36.  call `setLength`(v2, v0) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setLength:(I)V` @kind virtual;
  #L152f3c.  v2:= v1.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind object;
  #L152f40.  call `setPadding`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setPadding:(I)V` @kind virtual;
  #L152f46.  v2:= v1.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind object;
  #L152f4a.  call `setFlags`(v2, v4) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setFlags:(I)V` @kind virtual;
  #L152f50.  v2:= v1.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind object;
  #L152f54.  call `setStreamId`(v2, v5) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setStreamId:(I)V` @kind virtual;
  #L152f5a.  v2:= v1.`okhttp3.internal.http2.Http2Reader.b` @type ^`okhttp3.internal.http2.Hpack$Reader` @kind object;
  #L152f5e.  call `readHeaders`(v2) @signature `Lokhttp3/internal/http2/Hpack$Reader;.readHeaders:()V` @kind virtual;
  #L152f64.  v2:= v1.`okhttp3.internal.http2.Http2Reader.b` @type ^`okhttp3.internal.http2.Hpack$Reader` @kind object;
  #L152f68.  call temp:= `getAndResetHeaderList`(v2) @signature `Lokhttp3/internal/http2/Hpack$Reader;.getAndResetHeaderList:()Ljava/util/List;` @kind virtual;
  #L152f6e.  v2:= temp @kind object;
  #L152f70.  return v2 @kind object;
}
procedure `void` `d`(`okhttp3.internal.http2.Http2Reader` v3 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/http2/Http2Reader;.d:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1532b0.  if v7 == 0 then goto L153314;
  #L1532b4.  v0:= v6 ^& 1;
  #L1532b8.  v1:= 0I;
  #L1532ba.  if v0 == 0 then goto L1532c2;
  #L1532be.  v0:= 1I;
  #L1532c0.  goto L1532c4;
  #L1532c2.  v0:= 0I;
  #L1532c4.  v2:= v6 ^& 8;
  #L1532c8.  if v2 == 0 then goto L1532e4;
  #L1532cc.  v1:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1532d0.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1532d6.  v1:= temp;
  #L1532d8.  v2:= 255I;
  #L1532dc.  call temp:= `and`(v1, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1532e2.  v1:= temp;
  #L1532e4.  v2:= v6 ^& 32;
  #L1532e8.  if v2 == 0 then goto L1532f6;
  #L1532ec.  call `f`(v3, v4, v7) @signature `Lokhttp3/internal/http2/Http2Reader;.f:(Lokhttp3/internal/http2/Http2Reader$Handler;I)V` @kind direct;
  #L1532f2.  v5:= v5 + -5;
  #L1532f6.  v2:= `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` @kind object;
  #L1532fa.  call temp:= `lengthWithoutPadding`(v2, v5, v6, v1) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.lengthWithoutPadding:(III)I` @kind virtual;
  #L153300.  v5:= temp;
  #L153302.  call temp:= `c`(v3, v5, v1, v6, v7) @signature `Lokhttp3/internal/http2/Http2Reader;.c:(IIII)Ljava/util/List;` @kind direct;
  #L153308.  v5:= temp @kind object;
  #L15330a.  v6:= -1I;
  #L15330c.  call `headers`(v4, v0, v7, v6, v5) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.headers:(ZIILjava/util/List;)V` @kind interface;
  #L153312.  return @kind void;
  #L153314.  v4:= new `java.io.IOException`;
  #L153318.  v5:= "PROTOCOL_ERROR: TYPE_HEADERS streamId == 0" @kind object;
  #L15331c.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L153322.  throw v4;
}
procedure `void` `e`(`okhttp3.internal.http2.Http2Reader` v1 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lokhttp3/internal/http2/Http2Reader;.e:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L153334.  v0:= 8I;
  #L153338.  if v3 != v0 then goto L15337c;
  #L15333c.  if v5 != 0 then goto L15336c;
  #L153340.  v3:= v1.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L153344.  call temp:= `readInt`(v3) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L15334a.  v3:= temp;
  #L15334c.  v5:= v1.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L153350.  call temp:= `readInt`(v5) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L153356.  v5:= temp;
  #L153358.  v0:= 1I;
  #L15335a.  v4:= v4 ^& v0 @kind int;
  #L15335c.  if v4 == 0 then goto L153362;
  #L153360.  goto L153364;
  #L153362.  v0:= 0I;
  #L153364.  call `ping`(v2, v0, v3, v5) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.ping:(ZII)V` @kind interface;
  #L15336a.  return @kind void;
  #L15336c.  v2:= new `java.io.IOException`;
  #L153370.  v3:= "TYPE_PING streamId != 0" @kind object;
  #L153374.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15337a.  throw v2;
  #L15337c.  v2:= new `java.io.IOException`;
  #L153380.  v4:= new `java.lang.StringBuilder`;
  #L153384.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15338a.  v5:= "TYPE_PING length != 8: " @kind object;
  #L15338e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153394.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15339a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1533a0.  v3:= temp @kind object;
  #L1533a2.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1533a8.  throw v2;
}
procedure `void` `f`(`okhttp3.internal.http2.Http2Reader` v5 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v6 @kind object, `int` v7 ) @signature `Lokhttp3/internal/http2/Http2Reader;.f:(Lokhttp3/internal/http2/Http2Reader$Handler;I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1533bc.  v0:= v5.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1533c0.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1533c6.  v0:= temp;
  #L1533c8.  v1:= 2147483648L;
  #L1533d2.  v2:= (`int`) v1 @kind l2i;
  #L1533d4.  v1:= v0 ^& v2 @kind int;
  #L1533d8.  v2:= 1I;
  #L1533da.  if v1 == 0 then goto L1533e2;
  #L1533de.  v1:= 1I;
  #L1533e0.  goto L1533e4;
  #L1533e2.  v1:= 0I;
  #L1533e4.  v3:= 2147483647I;
  #L1533ea.  v0:= v0 ^& v3 @kind int;
  #L1533ec.  v3:= v5.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1533f0.  call temp:= `readByte`(v3) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1533f6.  v3:= temp;
  #L1533f8.  v4:= 255I;
  #L1533fc.  call temp:= `and`(v3, v4) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L153402.  v3:= temp;
  #L153404.  v3:= v3 + v2 @kind int;
  #L153406.  call `priority`(v6, v7, v0, v3, v1) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.priority:(IIIZ)V` @kind interface;
  #L15340c.  return @kind void;
}
procedure `void` `g`(`okhttp3.internal.http2.Http2Reader` v0 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/http2/Http2Reader;.g:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L153420.  v3:= 5I;
  #L153422.  if v2 != v3 then goto L153442;
  #L153426.  if v4 == 0 then goto L153432;
  #L15342a.  call `f`(v0, v1, v4) @signature `Lokhttp3/internal/http2/Http2Reader;.f:(Lokhttp3/internal/http2/Http2Reader$Handler;I)V` @kind direct;
  #L153430.  return @kind void;
  #L153432.  v1:= new `java.io.IOException`;
  #L153436.  v2:= "TYPE_PRIORITY streamId == 0" @kind object;
  #L15343a.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L153440.  throw v1;
  #L153442.  v1:= new `java.io.IOException`;
  #L153446.  v3:= new `java.lang.StringBuilder`;
  #L15344a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153450.  v4:= "TYPE_PRIORITY length: " @kind object;
  #L153454.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15345a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L153460.  v2:= " != 5" @kind object;
  #L153464.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15346a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153470.  v2:= temp @kind object;
  #L153472.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L153478.  throw v1;
}
procedure `void` `h`(`okhttp3.internal.http2.Http2Reader` v3 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/http2/Http2Reader;.h:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15348c.  if v7 == 0 then goto L1534e8;
  #L153490.  v0:= v6 ^& 8;
  #L153494.  if v0 == 0 then goto L1534b2;
  #L153498.  v0:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L15349c.  call temp:= `readByte`(v0) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1534a2.  v0:= temp;
  #L1534a4.  v1:= 255I;
  #L1534a8.  call temp:= `and`(v0, v1) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1534ae.  v0:= temp;
  #L1534b0.  goto L1534b4;
  #L1534b2.  v0:= 0I;
  #L1534b4.  v1:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1534b8.  call temp:= `readInt`(v1) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1534be.  v1:= temp;
  #L1534c0.  v2:= 2147483647I;
  #L1534c6.  v1:= v1 ^& v2 @kind int;
  #L1534c8.  v2:= `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` @kind object;
  #L1534cc.  v5:= v5 + -4;
  #L1534d0.  call temp:= `lengthWithoutPadding`(v2, v5, v6, v0) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.lengthWithoutPadding:(III)I` @kind virtual;
  #L1534d6.  v5:= temp;
  #L1534d8.  call temp:= `c`(v3, v5, v0, v6, v7) @signature `Lokhttp3/internal/http2/Http2Reader;.c:(IIII)Ljava/util/List;` @kind direct;
  #L1534de.  v5:= temp @kind object;
  #L1534e0.  call `pushPromise`(v4, v7, v1, v5) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.pushPromise:(IILjava/util/List;)V` @kind interface;
  #L1534e6.  return @kind void;
  #L1534e8.  v4:= new `java.io.IOException`;
  #L1534ec.  v5:= "PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0" @kind object;
  #L1534f0.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1534f6.  throw v4;
}
procedure `void` `i`(`okhttp3.internal.http2.Http2Reader` v0 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/http2/Http2Reader;.i:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L153508.  v3:= 4I;
  #L15350a.  if v2 != v3 then goto L153574;
  #L15350e.  if v4 == 0 then goto L153564;
  #L153512.  v2:= v0.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L153516.  call temp:= `readInt`(v2) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L15351c.  v2:= temp;
  #L15351e.  v3:= `@@okhttp3.internal.http2.ErrorCode.Companion` @type ^`okhttp3.internal.http2.ErrorCode$Companion` @kind object;
  #L153522.  call temp:= `fromHttp2`(v3, v2) @signature `Lokhttp3/internal/http2/ErrorCode$Companion;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @kind virtual;
  #L153528.  v3:= temp @kind object;
  #L15352a.  if v3 == 0 then goto L153536;
  #L15352e.  call `rstStream`(v1, v4, v3) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind interface;
  #L153534.  return @kind void;
  #L153536.  v1:= new `java.io.IOException`;
  #L15353a.  v3:= new `java.lang.StringBuilder`;
  #L15353e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153544.  v4:= "TYPE_RST_STREAM unexpected error code: " @kind object;
  #L153548.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15354e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L153554.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15355a.  v2:= temp @kind object;
  #L15355c.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L153562.  throw v1;
  #L153564.  v1:= new `java.io.IOException`;
  #L153568.  v2:= "TYPE_RST_STREAM streamId == 0" @kind object;
  #L15356c.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L153572.  throw v1;
  #L153574.  v1:= new `java.io.IOException`;
  #L153578.  v3:= new `java.lang.StringBuilder`;
  #L15357c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153582.  v4:= "TYPE_RST_STREAM length: " @kind object;
  #L153586.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15358c.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L153592.  v2:= " != 4" @kind object;
  #L153596.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15359c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1535a2.  v2:= temp @kind object;
  #L1535a4.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1535aa.  throw v1;
}
procedure `void` `j`(`okhttp3.internal.http2.Http2Reader` v7 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v8 @kind object, `int` v9 , `int` v10 , `int` v11 ) @signature `Lokhttp3/internal/http2/Http2Reader;.j:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1535bc.  if v11 != 0 then goto L15372c;
  #L1535c0.  v11:= 1I;
  #L1535c2.  v10:= v10 ^& v11 @kind int;
  #L1535c4.  if v10 == 0 then goto L1535e4;
  #L1535c8.  if v9 != 0 then goto L1535d4;
  #L1535cc.  call `ackSettings`(v8) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.ackSettings:()V` @kind interface;
  #L1535d2.  return @kind void;
  #L1535d4.  v8:= new `java.io.IOException`;
  #L1535d8.  v9:= "FRAME_SIZE_ERROR ack frame should be empty!" @kind object;
  #L1535dc.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1535e2.  throw v8;
  #L1535e4.  v10:= v9 %% 6;
  #L1535e8.  if v10 != 0 then goto L1536fe;
  #L1535ec.  v10:= new `okhttp3.internal.http2.Settings`;
  #L1535f0.  call `<init>`(v10) @signature `Lokhttp3/internal/http2/Settings;.<init>:()V` @kind direct;
  #L1535f6.  v0:= 0I;
  #L1535f8.  call temp:= `until`(v0, v9) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L1535fe.  v9:= temp @kind object;
  #L153600.  v1:= 6I;
  #L153602.  call temp:= `step`(v9, v1) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L153608.  v9:= temp @kind object;
  #L15360a.  call temp:= `getFirst`(v9) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L153610.  v1:= temp;
  #L153612.  call temp:= `getLast`(v9) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L153618.  v2:= temp;
  #L15361a.  call temp:= `getStep`(v9) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L153620.  v9:= temp;
  #L153622.  if v9 < 0 then goto L15362c;
  #L153626.  if v1 > v2 then goto L1536f6;
  #L15362a.  goto L153630;
  #L15362c.  if v1 < v2 then goto L1536f6;
  #L153630.  v3:= v7.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L153634.  call temp:= `readShort`(v3) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L15363a.  v3:= temp;
  #L15363c.  v4:= 65535I;
  #L153642.  call temp:= `and`(v3, v4) @signature `Lokhttp3/internal/Util;.and:(SI)I` @kind static;
  #L153648.  v3:= temp;
  #L15364a.  v4:= v7.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L15364e.  call temp:= `readInt`(v4) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L153654.  v4:= temp;
  #L153656.  v5:= 2I;
  #L153658.  v6:= 4I;
  #L15365a.  if v3 == v5 then goto L1536ce;
  #L15365e.  v5:= 3I;
  #L153660.  if v3 == v5 then goto L1536ca;
  #L153664.  if v3 == v6 then goto L1536b2;
  #L153668.  v5:= 5I;
  #L15366a.  if v3 == v5 then goto L153670;
  #L15366e.  goto L1536e8;
  #L153670.  v5:= 16384I;
  #L153674.  if v4 < v5 then goto L153684;
  #L153678.  v5:= 16777215I;
  #L15367e.  if v4 > v5 then goto L153684;
  #L153682.  goto L1536e8;
  #L153684.  v8:= new `java.io.IOException`;
  #L153688.  v9:= new `java.lang.StringBuilder`;
  #L15368c.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153692.  v10:= "PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: " @kind object;
  #L153696.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15369c.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1536a2.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1536a8.  v9:= temp @kind object;
  #L1536aa.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1536b0.  throw v8;
  #L1536b2.  v3:= 7I;
  #L1536b4.  if v4 < 0 then goto L1536ba;
  #L1536b8.  goto L1536e8;
  #L1536ba.  v8:= new `java.io.IOException`;
  #L1536be.  v9:= "PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1" @kind object;
  #L1536c2.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1536c8.  throw v8;
  #L1536ca.  v3:= 4I;
  #L1536cc.  goto L1536e8;
  #L1536ce.  if v4 == 0 then goto L1536e8;
  #L1536d2.  if v4 != v11 then goto L1536d8;
  #L1536d6.  goto L1536e8;
  #L1536d8.  v8:= new `java.io.IOException`;
  #L1536dc.  v9:= "PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1" @kind object;
  #L1536e0.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1536e6.  throw v8;
  #L1536e8.  call temp:= `set`(v10, v3, v4) @signature `Lokhttp3/internal/http2/Settings;.set:(II)Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L1536ee.  if v1 == v2 then goto L1536f6;
  #L1536f2.  v1:= v1 + v9 @kind int;
  #L1536f4.  goto L153630;
  #L1536f6.  call `settings`(v8, v0, v10) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.settings:(ZLokhttp3/internal/http2/Settings;)V` @kind interface;
  #L1536fc.  return @kind void;
  #L1536fe.  v8:= new `java.io.IOException`;
  #L153702.  v10:= new `java.lang.StringBuilder`;
  #L153706.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15370c.  v11:= "TYPE_SETTINGS length % 6 != 0: " @kind object;
  #L153710.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153716.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15371c.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153722.  v9:= temp @kind object;
  #L153724.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15372a.  throw v8;
  #L15372c.  v8:= new `java.io.IOException`;
  #L153730.  v9:= "TYPE_SETTINGS streamId != 0" @kind object;
  #L153734.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15373a.  throw v8;
}
procedure `void` `k`(`okhttp3.internal.http2.Http2Reader` v3 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/http2/Http2Reader;.k:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15374c.  v6:= 4I;
  #L15374e.  if v5 != v6 then goto L153790;
  #L153752.  v5:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L153756.  call temp:= `readInt`(v5) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L15375c.  v5:= temp;
  #L15375e.  v0:= 2147483647L;
  #L153764.  call temp:= `and`(v5, v0) @signature `Lokhttp3/internal/Util;.and:(IJ)J` @kind static;
  #L15376a.  v5:= temp @kind wide;
  #L15376c.  v0:= 0L;
  #L153770.  v2:= lcmp(v5, v0);
  #L153774.  if v2 == 0 then goto L153780;
  #L153778.  call `windowUpdate`(v4, v7, v5) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.windowUpdate:(IJ)V` @kind interface;
  #L15377e.  return @kind void;
  #L153780.  v4:= new `java.io.IOException`;
  #L153784.  v5:= "windowSizeIncrement was 0" @kind object;
  #L153788.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15378e.  throw v4;
  #L153790.  v4:= new `java.io.IOException`;
  #L153794.  v6:= new `java.lang.StringBuilder`;
  #L153798.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15379e.  v7:= "TYPE_WINDOW_UPDATE length !=4: " @kind object;
  #L1537a2.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1537a8.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1537ae.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1537b4.  v5:= temp @kind object;
  #L1537b6.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1537bc.  throw v4;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Reader` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153034.  v0:= v1.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L153038.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L15303e.  return @kind void;
}
procedure `boolean` `nextFrame`(`okhttp3.internal.http2.Http2Reader` v11 @kind this, `boolean` v12 , `okhttp3.internal.http2.Http2Reader$Handler` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Reader;.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L152d60.  v0:= "handler" @kind object;
  #L152d64.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L152d6a.  v0:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L152d6e.  v1:= 9L;
  #L152d72.  call `require`(v0, v1) @signature `Lokio/BufferedSource;.require:(J)V` @kind interface;
  #L152d78.  v0:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L152d7c.  call temp:= `readMedium`(v0) @signature `Lokhttp3/internal/Util;.readMedium:(Lokio/BufferedSource;)I` @kind static;
  #L152d82.  v0:= temp;
  #L152d84.  v1:= 16384I;
  #L152d88.  if v0 > v1 then goto L152ea2;
  #L152d8c.  v1:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L152d90.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L152d96.  v1:= temp;
  #L152d98.  v2:= 255I;
  #L152d9c.  call temp:= `and`(v1, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L152da2.  v7:= temp;
  #L152da4.  v1:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L152da8.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L152dae.  v1:= temp;
  #L152db0.  call temp:= `and`(v1, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L152db6.  v8:= temp;
  #L152db8.  v1:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L152dbc.  call temp:= `readInt`(v1) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L152dc2.  v1:= temp;
  #L152dc4.  v2:= 2147483647I;
  #L152dca.  v9:= v1 ^& v2 @kind int;
  #L152dce.  v10:= `@@okhttp3.internal.http2.Http2Reader.e` @type ^`java.util.logging.Logger` @kind object;
  #L152dd2.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L152dd6.  call temp:= `isLoggable`(v10, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L152ddc.  v1:= temp;
  #L152dde.  if v1 == 0 then goto L152dfe;
  #L152de2.  v1:= `@@okhttp3.internal.http2.Http2.INSTANCE` @type ^`okhttp3.internal.http2.Http2` @kind object;
  #L152de6.  v2:= 1I;
  #L152de8.  v3:= v9;
  #L152dea.  v4:= v0;
  #L152dec.  v5:= v7;
  #L152dee.  v6:= v8;
  #L152df0.  call temp:= `frameLog`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIII)Ljava/lang/String;` @kind virtual;
  #L152df6.  v1:= temp @kind object;
  #L152df8.  call `fine`(v10, v1) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L152dfe.  if v12 == 0 then goto L152e44;
  #L152e02.  v12:= 4I;
  #L152e04.  if v7 != v12 then goto L152e0a;
  #L152e08.  goto L152e44;
  #L152e0a.  v12:= new `java.io.IOException`;
  #L152e0e.  v13:= new `java.lang.StringBuilder`;
  #L152e12.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152e18.  v0:= "Expected a SETTINGS frame but was " @kind object;
  #L152e1c.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152e22.  v0:= `@@okhttp3.internal.http2.Http2.INSTANCE` @type ^`okhttp3.internal.http2.Http2` @kind object;
  #L152e26.  call temp:= `formattedType$okhttp`(v0, v7) @signature `Lokhttp3/internal/http2/Http2;.formattedType$okhttp:(I)Ljava/lang/String;` @kind virtual;
  #L152e2c.  v0:= temp @kind object;
  #L152e2e.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152e34.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152e3a.  v13:= temp @kind object;
  #L152e3c.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L152e42.  throw v12;
  #L152e44.  goto L152ed4;
  #L152e4a.  v12:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L152e4e.  v0:= (`long`) v0 @kind i2l;
  #L152e50.  call `skip`(v12, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L152e56.  goto L152e9e;
  #L152e58.  call `k`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.k:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L152e5e.  goto L152e9e;
  #L152e60.  call `b`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.b:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L152e66.  goto L152e9e;
  #L152e68.  call `e`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.e:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L152e6e.  goto L152e9e;
  #L152e70.  call `h`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.h:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L152e76.  goto L152e9e;
  #L152e78.  call `j`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.j:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L152e7e.  goto L152e9e;
  #L152e80.  call `i`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.i:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L152e86.  goto L152e9e;
  #L152e88.  call `g`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.g:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L152e8e.  goto L152e9e;
  #L152e90.  call `d`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.d:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L152e96.  goto L152e9e;
  #L152e98.  call `a`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.a:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L152e9e.  v12:= 1I;
  #L152ea0.  return v12;
  #L152ea2.  v12:= new `java.io.IOException`;
  #L152ea6.  v13:= new `java.lang.StringBuilder`;
  #L152eaa.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152eb0.  v1:= "FRAME_SIZE_ERROR: " @kind object;
  #L152eb4.  call temp:= `append`(v13, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152eba.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L152ec0.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152ec6.  v13:= temp @kind object;
  #L152ec8.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L152ece.  throw v12;
  #L152ed0.  v12:= 0I;
  #L152ed2.  return v12;
  #L152ed4.  switch v7
                  | 0 => goto L152e98
                  | 1 => goto L152e90
                  | 2 => goto L152e88
                  | 3 => goto L152e80
                  | 4 => goto L152e78
                  | 5 => goto L152e70
                  | 6 => goto L152e68
                  | 7 => goto L152e60
                  | 8 => goto L152e58
                  | else => goto L152e4a;
  catch `java.io.EOFException` @[L152d6a..L152d78] goto L152ed0;
}
procedure `void` `readConnectionPreface`(`okhttp3.internal.http2.Http2Reader` v5 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v6 @kind object) @signature `Lokhttp3/internal/http2/Http2Reader;.readConnectionPreface:(Lokhttp3/internal/http2/Http2Reader$Handler;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L153050.  v0:= "handler" @kind object;
  #L153054.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15305a.  v0:= v5.`okhttp3.internal.http2.Http2Reader.d` @type ^`boolean` @kind boolean;
  #L15305e.  v1:= 1I;
  #L153060.  if v0 == 0 then goto L153082;
  #L153064.  call temp:= `nextFrame`(v5, v1, v6) @signature `Lokhttp3/internal/http2/Http2Reader;.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z` @kind virtual;
  #L15306a.  v6:= temp;
  #L15306c.  if v6 == 0 then goto L153072;
  #L153070.  goto L1530fc;
  #L153072.  v6:= new `java.io.IOException`;
  #L153076.  v0:= "Required SETTINGS preface not received" @kind object;
  #L15307a.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L153080.  throw v6;
  #L153082.  v6:= v5.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L153086.  v0:= `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` @kind object;
  #L15308a.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L153090.  v2:= temp;
  #L153092.  v2:= (`long`) v2 @kind i2l;
  #L153094.  call temp:= `readByteString`(v6, v2) @signature `Lokio/BufferedSource;.readByteString:(J)Lokio/ByteString;` @kind interface;
  #L15309a.  v6:= temp @kind object;
  #L15309c.  v2:= `@@okhttp3.internal.http2.Http2Reader.e` @type ^`java.util.logging.Logger` @kind object;
  #L1530a0.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1530a4.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1530aa.  v3:= temp;
  #L1530ac.  if v3 == 0 then goto L1530ee;
  #L1530b0.  v3:= new `java.lang.StringBuilder`;
  #L1530b4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1530ba.  v4:= "<< CONNECTION " @kind object;
  #L1530be.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1530c4.  call temp:= `hex`(v6) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L1530ca.  v4:= temp @kind object;
  #L1530cc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1530d2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1530d8.  v3:= temp @kind object;
  #L1530da.  v4:= 0I;
  #L1530dc.  v4:= new `java.lang.Object`[v4];
  #L1530e0.  call temp:= `format`(v3, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1530e6.  v3:= temp @kind object;
  #L1530e8.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L1530ee.  call temp:= `areEqual`(v0, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1530f4.  v0:= temp;
  #L1530f6.  v0:= v0 ^~ v1 @kind int;
  #L1530f8.  if v0 != 0 then goto L1530fe;
  #L1530fc.  return @kind void;
  #L1530fe.  v0:= new `java.io.IOException`;
  #L153102.  v1:= new `java.lang.StringBuilder`;
  #L153106.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15310c.  v2:= "Expected a connection header but was " @kind object;
  #L153110.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153116.  call temp:= `utf8`(v6) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L15311c.  v6:= temp @kind object;
  #L15311e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153124.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15312a.  v6:= temp @kind object;
  #L15312c.  call `<init>`(v0, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L153132.  throw v0;
}
