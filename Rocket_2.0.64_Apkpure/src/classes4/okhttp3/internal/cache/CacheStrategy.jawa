record `okhttp3.internal.cache.CacheStrategy` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Request` `okhttp3.internal.cache.CacheStrategy.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.internal.cache.CacheStrategy.b` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.cache.CacheStrategy$Companion` `@@okhttp3.internal.cache.CacheStrategy.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/cache/CacheStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L140cb8.  v0:= new `okhttp3.internal.cache.CacheStrategy$Companion`;
  #L140cbc.  v1:= 0I;
  #L140cbe.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/cache/CacheStrategy$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L140cc4.  `@@okhttp3.internal.cache.CacheStrategy.Companion` @type ^`okhttp3.internal.cache.CacheStrategy$Companion` := v0 @kind object;
  #L140cc8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheStrategy` v0 @kind this, `okhttp3.Request` v1 @kind object, `okhttp3.Response` v2 @kind object) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L140cdc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L140ce2.  v0.`okhttp3.internal.cache.CacheStrategy.a` @type ^`okhttp3.Request` := v1 @kind object;
  #L140ce6.  v0.`okhttp3.internal.cache.CacheStrategy.b` @type ^`okhttp3.Response` := v2 @kind object;
  #L140cea.  return @kind void;
}
procedure `okhttp3.Response` `getCacheResponse`(`okhttp3.internal.cache.CacheStrategy` v1 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy;.getCacheResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L140ca0.  v0:= v1.`okhttp3.internal.cache.CacheStrategy.b` @type ^`okhttp3.Response` @kind object;
  #L140ca4.  return v0 @kind object;
}
procedure `okhttp3.Request` `getNetworkRequest`(`okhttp3.internal.cache.CacheStrategy` v1 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy;.getNetworkRequest:()Lokhttp3/Request;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L140c88.  v0:= v1.`okhttp3.internal.cache.CacheStrategy.a` @type ^`okhttp3.Request` @kind object;
  #L140c8c.  return v0 @kind object;
}
