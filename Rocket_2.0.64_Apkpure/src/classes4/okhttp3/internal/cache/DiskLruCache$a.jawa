record `okhttp3.internal.cache.DiskLruCache$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$a` v0 @kind this, `okhttp3.internal.cache.DiskLruCache` v1 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$a;.<init>:(Lokhttp3/internal/cache/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L141968.  v0.`okhttp3.internal.cache.DiskLruCache$a.a` @type ^`okhttp3.internal.cache.DiskLruCache` := v1 @kind object;
  #L14196c.  v1:= 1I;
  #L14196e.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L141974.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.cache.DiskLruCache$a` v4 @kind this, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$a;.a:(Ljava/io/IOException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L141988.  v0:= "it" @kind object;
  #L14198c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L141992.  v5:= v4.`okhttp3.internal.cache.DiskLruCache$a.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L141996.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L14199a.  if v0 == 0 then goto L141a04;
  #L14199e.  call temp:= `holdsLock`(v5) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1419a4.  v0:= temp;
  #L1419a6.  if v0 == 0 then goto L1419ac;
  #L1419aa.  goto L141a04;
  #L1419ac.  v0:= new `java.lang.AssertionError`;
  #L1419b0.  v1:= new `java.lang.StringBuilder`;
  #L1419b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1419ba.  v2:= "Thread " @kind object;
  #L1419be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1419c4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1419ca.  v2:= temp @kind object;
  #L1419cc.  v3:= "Thread.currentThread()" @kind object;
  #L1419d0.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1419d6.  call temp:= `getName`(v2) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1419dc.  v2:= temp @kind object;
  #L1419de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1419e4.  v2:= " MUST hold lock on " @kind object;
  #L1419e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1419ee.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1419f4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1419fa.  v5:= temp @kind object;
  #L1419fc.  call `<init>`(v0, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L141a02.  throw v0;
  #L141a04.  v5:= v4.`okhttp3.internal.cache.DiskLruCache$a.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L141a08.  v0:= 1I;
  #L141a0a.  call `access$setHasJournalErrors$p`(v5, v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.access$setHasJournalErrors$p:(Lokhttp3/internal/cache/DiskLruCache;Z)V` @kind static;
  #L141a10.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`okhttp3.internal.cache.DiskLruCache$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$a;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L141948.  v1:= (`java.io.IOException`) v1 @kind object;
  #L14194c.  call `a`(v0, v1) @signature `Lokhttp3/internal/cache/DiskLruCache$a;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L141952.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L141956.  return v1 @kind object;
}
