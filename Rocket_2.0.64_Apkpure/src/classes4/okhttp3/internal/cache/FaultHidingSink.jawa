record `okhttp3.internal.cache.FaultHidingSink` @kind class @AccessFlag PUBLIC extends `okio.ForwardingSink` @kind class {
  `boolean` `okhttp3.internal.cache.FaultHidingSink.b` @AccessFlag PRIVATE;
  `kotlin.jvm.functions.Function1` `okhttp3.internal.cache.FaultHidingSink.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.FaultHidingSink` v1 @kind this, `okio.Sink` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lokhttp3/internal/cache/FaultHidingSink;.<init>:(Lokio/Sink;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1433d4.  v0:= "delegate" @kind object;
  #L1433d8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1433de.  v0:= "onException" @kind object;
  #L1433e2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1433e8.  call `<init>`(v1, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L1433ee.  v1.`okhttp3.internal.cache.FaultHidingSink.c` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L1433f2.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.cache.FaultHidingSink` v2 @kind this) @signature `Lokhttp3/internal/cache/FaultHidingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L143404.  v0:= v2.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`boolean` @kind boolean;
  #L143408.  if v0 == 0 then goto L14340e;
  #L14340c.  return @kind void;
  #L14340e.  call `close`(v2) @signature `Lokio/ForwardingSink;.close:()V` @kind super;
  #L143414.  goto L143428;
  #L143416.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L143418.  v1:= 1I;
  #L14341a.  v2.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`boolean` := v1 @kind boolean;
  #L14341e.  v1:= v2.`okhttp3.internal.cache.FaultHidingSink.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L143422.  call temp:= `invoke`(v1, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L143428.  return @kind void;
  catch `java.io.IOException` @[L14340e..L143414] goto L143416;
}
procedure `void` `flush`(`okhttp3.internal.cache.FaultHidingSink` v2 @kind this) @signature `Lokhttp3/internal/cache/FaultHidingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14344c.  v0:= v2.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`boolean` @kind boolean;
  #L143450.  if v0 == 0 then goto L143456;
  #L143454.  return @kind void;
  #L143456.  call `flush`(v2) @signature `Lokio/ForwardingSink;.flush:()V` @kind super;
  #L14345c.  goto L143470;
  #L14345e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L143460.  v1:= 1I;
  #L143462.  v2.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`boolean` := v1 @kind boolean;
  #L143466.  v1:= v2.`okhttp3.internal.cache.FaultHidingSink.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L14346a.  call temp:= `invoke`(v1, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L143470.  return @kind void;
  catch `java.io.IOException` @[L143456..L14345c] goto L14345e;
}
procedure `kotlin.jvm.functions.Function1` `getOnException`(`okhttp3.internal.cache.FaultHidingSink` v1 @kind this) @signature `Lokhttp3/internal/cache/FaultHidingSink;.getOnException:()Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1433bc.  v0:= v1.`okhttp3.internal.cache.FaultHidingSink.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1433c0.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.cache.FaultHidingSink` v1 @kind this, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokhttp3/internal/cache/FaultHidingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L143494.  v0:= "source" @kind object;
  #L143498.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14349e.  v0:= v1.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`boolean` @kind boolean;
  #L1434a2.  if v0 == 0 then goto L1434ae;
  #L1434a6.  call `skip`(v2, v3) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L1434ac.  return @kind void;
  #L1434ae.  call `write`(v1, v2, v3) @signature `Lokio/ForwardingSink;.write:(Lokio/Buffer;J)V` @kind super;
  #L1434b4.  goto L1434c8;
  #L1434b6.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L1434b8.  v3:= 1I;
  #L1434ba.  v1.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`boolean` := v3 @kind boolean;
  #L1434be.  v3:= v1.`okhttp3.internal.cache.FaultHidingSink.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1434c2.  call temp:= `invoke`(v3, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1434c8.  return @kind void;
  catch `java.io.IOException` @[L1434ae..L1434b4] goto L1434b6;
}
