record `okhttp3.internal.cache.CacheInterceptor$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor$Companion` v0 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L13ffec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13fff2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L140004.  call `<init>`(v0) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.<init>:()V` @kind direct;
  #L14000a.  return @kind void;
}
procedure `okhttp3.Headers` `a`(`okhttp3.internal.cache.CacheInterceptor$Companion` v9 @kind this, `okhttp3.Headers` v10 @kind object, `okhttp3.Headers` v11 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.a:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L13feb4.  v0:= new `okhttp3.Headers$Builder`;
  #L13feb8.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L13febe.  call temp:= `size`(v10) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L13fec4.  v1:= temp;
  #L13fec6.  v2:= 0I;
  #L13fec8.  v3:= 0I;
  #L13feca.  if v3 >= v1 then goto L13ff36;
  #L13fece.  call temp:= `name`(v10, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L13fed4.  v4:= temp @kind object;
  #L13fed6.  call temp:= `value`(v10, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L13fedc.  v5:= temp @kind object;
  #L13fede.  v6:= "Warning" @kind object;
  #L13fee2.  v7:= 1I;
  #L13fee4.  call temp:= `equals`(v6, v4, v7) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13feea.  v6:= temp;
  #L13feec.  if v6 == 0 then goto L13ff06;
  #L13fef0.  v6:= 2I;
  #L13fef2.  v7:= 0I;
  #L13fef4.  v8:= "1" @kind object;
  #L13fef8.  call temp:= `startsWith$default`(v5, v8, v2, v6, v7) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L13fefe.  v6:= temp;
  #L13ff00.  if v6 == 0 then goto L13ff06;
  #L13ff04.  goto L13ff30;
  #L13ff06.  call temp:= `b`(v9, v4) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.b:(Ljava/lang/String;)Z` @kind direct;
  #L13ff0c.  v6:= temp;
  #L13ff0e.  if v6 != 0 then goto L13ff2a;
  #L13ff12.  call temp:= `c`(v9, v4) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.c:(Ljava/lang/String;)Z` @kind direct;
  #L13ff18.  v6:= temp;
  #L13ff1a.  if v6 == 0 then goto L13ff2a;
  #L13ff1e.  call temp:= `get`(v11, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L13ff24.  v6:= temp @kind object;
  #L13ff26.  if v6 != 0 then goto L13ff30;
  #L13ff2a.  call temp:= `addLenient$okhttp`(v0, v4, v5) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L13ff30.  v3:= v3 + 1;
  #L13ff34.  goto L13feca;
  #L13ff36.  call temp:= `size`(v11) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L13ff3c.  v10:= temp;
  #L13ff3e.  if v2 >= v10 then goto L13ff76;
  #L13ff42.  call temp:= `name`(v11, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L13ff48.  v1:= temp @kind object;
  #L13ff4a.  call temp:= `b`(v9, v1) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.b:(Ljava/lang/String;)Z` @kind direct;
  #L13ff50.  v3:= temp;
  #L13ff52.  if v3 != 0 then goto L13ff70;
  #L13ff56.  call temp:= `c`(v9, v1) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.c:(Ljava/lang/String;)Z` @kind direct;
  #L13ff5c.  v3:= temp;
  #L13ff5e.  if v3 == 0 then goto L13ff70;
  #L13ff62.  call temp:= `value`(v11, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L13ff68.  v3:= temp @kind object;
  #L13ff6a.  call temp:= `addLenient$okhttp`(v0, v1, v3) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L13ff70.  v2:= v2 + 1;
  #L13ff74.  goto L13ff3e;
  #L13ff76.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L13ff7c.  v10:= temp @kind object;
  #L13ff7e.  return v10 @kind object;
}
procedure `okhttp3.Headers` `access$combine`(`okhttp3.internal.cache.CacheInterceptor$Companion` v0 @kind object, `okhttp3.Headers` v1 @kind object, `okhttp3.Headers` v2 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.access$combine:(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L13fe98.  call temp:= `a`(v0, v1, v2) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.a:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind direct;
  #L13fe9e.  v0:= temp @kind object;
  #L13fea0.  return v0 @kind object;
}
procedure `okhttp3.Response` `access$stripBody`(`okhttp3.internal.cache.CacheInterceptor$Companion` v0 @kind object, `okhttp3.Response` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.access$stripBody:(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L13ff90.  call temp:= `d`(v0, v1) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.d:(Lokhttp3/Response;)Lokhttp3/Response;` @kind direct;
  #L13ff96.  v0:= temp @kind object;
  #L13ff98.  return v0 @kind object;
}
procedure `boolean` `b`(`okhttp3.internal.cache.CacheInterceptor$Companion` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L13fdb8.  v0:= "Content-Length" @kind object;
  #L13fdbc.  v1:= 1I;
  #L13fdbe.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fdc4.  v0:= temp;
  #L13fdc6.  if v0 != 0 then goto L13fdee;
  #L13fdca.  v0:= "Content-Encoding" @kind object;
  #L13fdce.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fdd4.  v0:= temp;
  #L13fdd6.  if v0 != 0 then goto L13fdee;
  #L13fdda.  v0:= "Content-Type" @kind object;
  #L13fdde.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fde4.  v3:= temp;
  #L13fde6.  if v3 == 0 then goto L13fdec;
  #L13fdea.  goto L13fdee;
  #L13fdec.  v1:= 0I;
  #L13fdee.  return v1;
}
procedure `boolean` `c`(`okhttp3.internal.cache.CacheInterceptor$Companion` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.c:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L13fe00.  v0:= "Connection" @kind object;
  #L13fe04.  v1:= 1I;
  #L13fe06.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fe0c.  v0:= temp;
  #L13fe0e.  if v0 != 0 then goto L13fe84;
  #L13fe12.  v0:= "Keep-Alive" @kind object;
  #L13fe16.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fe1c.  v0:= temp;
  #L13fe1e.  if v0 != 0 then goto L13fe84;
  #L13fe22.  v0:= "Proxy-Authenticate" @kind object;
  #L13fe26.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fe2c.  v0:= temp;
  #L13fe2e.  if v0 != 0 then goto L13fe84;
  #L13fe32.  v0:= "Proxy-Authorization" @kind object;
  #L13fe36.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fe3c.  v0:= temp;
  #L13fe3e.  if v0 != 0 then goto L13fe84;
  #L13fe42.  v0:= "TE" @kind object;
  #L13fe46.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fe4c.  v0:= temp;
  #L13fe4e.  if v0 != 0 then goto L13fe84;
  #L13fe52.  v0:= "Trailers" @kind object;
  #L13fe56.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fe5c.  v0:= temp;
  #L13fe5e.  if v0 != 0 then goto L13fe84;
  #L13fe62.  v0:= "Transfer-Encoding" @kind object;
  #L13fe66.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fe6c.  v0:= temp;
  #L13fe6e.  if v0 != 0 then goto L13fe84;
  #L13fe72.  v0:= "Upgrade" @kind object;
  #L13fe76.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13fe7c.  v3:= temp;
  #L13fe7e.  if v3 != 0 then goto L13fe84;
  #L13fe82.  goto L13fe86;
  #L13fe84.  v1:= 0I;
  #L13fe86.  return v1;
}
procedure `okhttp3.Response` `d`(`okhttp3.internal.cache.CacheInterceptor$Companion` v2 @kind this, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.d:(Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L13ffac.  v0:= 0I;
  #L13ffae.  if v3 == 0 then goto L13ffbc;
  #L13ffb2.  call temp:= `body`(v3) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L13ffb8.  v1:= temp @kind object;
  #L13ffba.  goto L13ffbe;
  #L13ffbc.  v1:= v0 @kind object;
  #L13ffbe.  if v1 == 0 then goto L13ffda;
  #L13ffc2.  call temp:= `newBuilder`(v3) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L13ffc8.  v3:= temp @kind object;
  #L13ffca.  call temp:= `body`(v3, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L13ffd0.  v3:= temp @kind object;
  #L13ffd2.  call temp:= `build`(v3) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L13ffd8.  v3:= temp @kind object;
  #L13ffda.  return v3 @kind object;
}
