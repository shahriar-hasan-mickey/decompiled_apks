record `okhttp3.internal.cache.DiskLruCache$Entry$newSource$1` @kind class @AccessFlag PUBLIC_FINAL extends `okio.ForwardingSource` @kind class {
  `boolean` `okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @AccessFlag PRIVATE;
  `okhttp3.internal.cache.DiskLruCache$Entry` `okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.c` @AccessFlag FINAL_SYNTHETIC;
  `okio.Source` `okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1` v0 @kind this, `okhttp3.internal.cache.DiskLruCache$Entry` v1 @kind object, `okio.Source` v2 @kind object, `okio.Source` v3 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry$newSource$1;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Entry;Lokio/Source;Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L141170.  v0.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` := v1 @kind object;
  #L141174.  v0.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.d` @type ^`okio.Source` := v2 @kind object;
  #L141178.  call `<init>`(v0, v3) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L14117e.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry$newSource$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L141190.  call `close`(v3) @signature `Lokio/ForwardingSource;.close:()V` @kind super;
  #L141196.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @type ^`boolean` @kind boolean;
  #L14119a.  if v0 != 0 then goto L141200;
  #L14119e.  v0:= 1I;
  #L1411a0.  v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @type ^`boolean` := v0 @kind boolean;
  #L1411a4.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1411a8.  v0:= v0.`okhttp3.internal.cache.DiskLruCache$Entry.j` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1411ac.  @monitorenter v0
  #L1411ae.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1411b2.  call temp:= `getLockingSourceCount$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getLockingSourceCount$okhttp:()I` @kind virtual;
  #L1411b8.  v2:= temp;
  #L1411ba.  v2:= v2 + -1;
  #L1411be.  call `setLockingSourceCount$okhttp`(v1, v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.setLockingSourceCount$okhttp:(I)V` @kind virtual;
  #L1411c4.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1411c8.  call temp:= `getLockingSourceCount$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getLockingSourceCount$okhttp:()I` @kind virtual;
  #L1411ce.  v1:= temp;
  #L1411d0.  if v1 != 0 then goto L1411f2;
  #L1411d4.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1411d8.  call temp:= `getZombie$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getZombie$okhttp:()Z` @kind virtual;
  #L1411de.  v1:= temp;
  #L1411e0.  if v1 == 0 then goto L1411f2;
  #L1411e4.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1411e8.  v2:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.j` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1411ec.  call temp:= `removeEntry$okhttp`(v2, v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.removeEntry$okhttp:(Lokhttp3/internal/cache/DiskLruCache$Entry;)Z` @kind virtual;
  #L1411f2.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1411f6.  @monitorexit v0
  #L1411f8.  goto L141200;
  #L1411fa.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1411fc.  @monitorexit v0
  #L1411fe.  throw v1;
  #L141200.  return @kind void;
  catch `java.lang.Throwable` @[L1411ae..L1411f6] goto L1411fa;
}
