record `okhttp3.internal.cache.CacheStrategy$Factory` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.a` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.b` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.c` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.d` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.e` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.f` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.g` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.h` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.cache.CacheStrategy$Factory.i` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.j` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Request` `okhttp3.internal.cache.CacheStrategy$Factory.k` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.internal.cache.CacheStrategy$Factory.l` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheStrategy$Factory` v4 @kind this, `long` v5 , `okhttp3.Request` v7 @kind object, `okhttp3.Response` v8 @kind object) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L140b74.  v0:= "request" @kind object;
  #L140b78.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L140b7e.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L140b84.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.j` @type ^`long` := v5 @kind wide;
  #L140b88.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` := v7 @kind object;
  #L140b8c.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` := v8 @kind object;
  #L140b90.  v5:= -1I;
  #L140b92.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.i` @type ^`int` := v5;
  #L140b96.  if v8 == 0 then goto L140c74;
  #L140b9a.  call temp:= `sentRequestAtMillis`(v8) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L140ba0.  v6:= temp @kind wide;
  #L140ba2.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.f` @type ^`long` := v6 @kind wide;
  #L140ba6.  call temp:= `receivedResponseAtMillis`(v8) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L140bac.  v6:= temp @kind wide;
  #L140bae.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.g` @type ^`long` := v6 @kind wide;
  #L140bb2.  call temp:= `headers`(v8) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L140bb8.  v6:= temp @kind object;
  #L140bba.  v7:= 0I;
  #L140bbc.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L140bc2.  v8:= temp;
  #L140bc4.  if v7 >= v8 then goto L140c74;
  #L140bc8.  call temp:= `name`(v6, v7) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L140bce.  v0:= temp @kind object;
  #L140bd0.  call temp:= `value`(v6, v7) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L140bd6.  v1:= temp @kind object;
  #L140bd8.  v2:= "Date" @kind object;
  #L140bdc.  v3:= 1I;
  #L140bde.  call temp:= `equals`(v0, v2, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L140be4.  v2:= temp;
  #L140be6.  if v2 == 0 then goto L140bfc;
  #L140bea.  call temp:= `toHttpDateOrNull`(v1) @signature `Lokhttp3/internal/http/DatesKt;.toHttpDateOrNull:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L140bf0.  v0:= temp @kind object;
  #L140bf2.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.a` @type ^`java.util.Date` := v0 @kind object;
  #L140bf6.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.b` @type ^`java.lang.String` := v1 @kind object;
  #L140bfa.  goto L140c6e;
  #L140bfc.  v2:= "Expires" @kind object;
  #L140c00.  call temp:= `equals`(v0, v2, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L140c06.  v2:= temp;
  #L140c08.  if v2 == 0 then goto L140c1a;
  #L140c0c.  call temp:= `toHttpDateOrNull`(v1) @signature `Lokhttp3/internal/http/DatesKt;.toHttpDateOrNull:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L140c12.  v0:= temp @kind object;
  #L140c14.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.e` @type ^`java.util.Date` := v0 @kind object;
  #L140c18.  goto L140c6e;
  #L140c1a.  v2:= "Last-Modified" @kind object;
  #L140c1e.  call temp:= `equals`(v0, v2, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L140c24.  v2:= temp;
  #L140c26.  if v2 == 0 then goto L140c3c;
  #L140c2a.  call temp:= `toHttpDateOrNull`(v1) @signature `Lokhttp3/internal/http/DatesKt;.toHttpDateOrNull:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L140c30.  v0:= temp @kind object;
  #L140c32.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.c` @type ^`java.util.Date` := v0 @kind object;
  #L140c36.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.d` @type ^`java.lang.String` := v1 @kind object;
  #L140c3a.  goto L140c6e;
  #L140c3c.  v2:= "ETag" @kind object;
  #L140c40.  call temp:= `equals`(v0, v2, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L140c46.  v2:= temp;
  #L140c48.  if v2 == 0 then goto L140c52;
  #L140c4c.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.h` @type ^`java.lang.String` := v1 @kind object;
  #L140c50.  goto L140c6e;
  #L140c52.  v2:= "Age" @kind object;
  #L140c56.  call temp:= `equals`(v0, v2, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L140c5c.  v0:= temp;
  #L140c5e.  if v0 == 0 then goto L140c6e;
  #L140c62.  call temp:= `toNonNegativeInt`(v1, v5) @signature `Lokhttp3/internal/Util;.toNonNegativeInt:(Ljava/lang/String;I)I` @kind static;
  #L140c68.  v0:= temp;
  #L140c6a.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.i` @type ^`int` := v0;
  #L140c6e.  v7:= v7 + 1;
  #L140c72.  goto L140bc4;
  #L140c74.  return @kind void;
}
procedure `long` `a`(`okhttp3.internal.cache.CacheStrategy$Factory` v9 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.a:()J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L14075c.  v0:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.a` @type ^`java.util.Date` @kind object;
  #L140760.  v1:= 0L;
  #L140764.  if v0 == 0 then goto L14077e;
  #L140768.  v3:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.g` @type ^`long` @kind wide;
  #L14076c.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L140772.  v5:= temp @kind wide;
  #L140774.  v3:= v3 - v5 @kind long;
  #L140776.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L14077c.  v1:= temp @kind wide;
  #L14077e.  v0:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.i` @type ^`int`;
  #L140782.  v3:= -1I;
  #L140784.  if v0 == v3 then goto L14079e;
  #L140788.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14078c.  v4:= (`long`) v0 @kind i2l;
  #L14078e.  call temp:= `toMillis`(v3, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L140794.  v3:= temp @kind wide;
  #L140796.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L14079c.  v1:= temp @kind wide;
  #L14079e.  v3:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.g` @type ^`long` @kind wide;
  #L1407a2.  v5:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.f` @type ^`long` @kind wide;
  #L1407a6.  v5:= v3 - v5 @kind long;
  #L1407aa.  v7:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.j` @type ^`long` @kind wide;
  #L1407ae.  v7:= v7 - v3 @kind long;
  #L1407b0.  v1:= v1 + v5 @kind long;
  #L1407b2.  v1:= v1 + v7 @kind long;
  #L1407b4.  return v1 @kind wide;
}
procedure `okhttp3.internal.cache.CacheStrategy` `b`(`okhttp3.internal.cache.CacheStrategy$Factory` v13 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.b:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L140914.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L140918.  v1:= 0I;
  #L14091a.  if v0 != 0 then goto L14092e;
  #L14091e.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L140922.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L140926.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L14092c.  return v0 @kind object;
  #L14092e.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L140932.  call temp:= `isHttps`(v0) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L140938.  v0:= temp;
  #L14093a.  if v0 == 0 then goto L14095e;
  #L14093e.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L140942.  call temp:= `handshake`(v0) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L140948.  v0:= temp @kind object;
  #L14094a.  if v0 != 0 then goto L14095e;
  #L14094e.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L140952.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L140956.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L14095c.  return v0 @kind object;
  #L14095e.  v0:= `@@okhttp3.internal.cache.CacheStrategy.Companion` @type ^`okhttp3.internal.cache.CacheStrategy$Companion` @kind object;
  #L140962.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L140966.  v3:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L14096a.  call temp:= `isCacheable`(v0, v2, v3) @signature `Lokhttp3/internal/cache/CacheStrategy$Companion;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind virtual;
  #L140970.  v0:= temp;
  #L140972.  if v0 != 0 then goto L140986;
  #L140976.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L14097a.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L14097e.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L140984.  return v0 @kind object;
  #L140986.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L14098a.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L140990.  v0:= temp @kind object;
  #L140992.  call temp:= `noCache`(v0) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L140998.  v2:= temp;
  #L14099a.  if v2 != 0 then goto L140b54;
  #L14099e.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1409a2.  call temp:= `d`(v13, v2) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.d:(Lokhttp3/Request;)Z` @kind direct;
  #L1409a8.  v2:= temp;
  #L1409aa.  if v2 == 0 then goto L1409b2;
  #L1409ae.  goto L140b54;
  #L1409b2.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1409b6.  call temp:= `cacheControl`(v2) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1409bc.  v2:= temp @kind object;
  #L1409be.  call temp:= `a`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.a:()J` @kind direct;
  #L1409c4.  v3:= temp @kind wide;
  #L1409c6.  call temp:= `c`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.c:()J` @kind direct;
  #L1409cc.  v5:= temp @kind wide;
  #L1409ce.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1409d4.  v7:= temp;
  #L1409d6.  v8:= -1I;
  #L1409d8.  if v7 == v8 then goto L1409fa;
  #L1409dc.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1409e0.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1409e6.  v9:= temp;
  #L1409e8.  v9:= (`long`) v9 @kind i2l;
  #L1409ea.  call temp:= `toMillis`(v7, v9) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1409f0.  v9:= temp @kind wide;
  #L1409f2.  call temp:= `min`(v5, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1409f8.  v5:= temp @kind wide;
  #L1409fa.  call temp:= `minFreshSeconds`(v0) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L140a00.  v7:= temp;
  #L140a02.  v9:= 0L;
  #L140a06.  if v7 == v8 then goto L140a22;
  #L140a0a.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L140a0e.  call temp:= `minFreshSeconds`(v0) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L140a14.  v11:= temp;
  #L140a16.  v11:= (`long`) v11 @kind i2l;
  #L140a18.  call temp:= `toMillis`(v7, v11) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L140a1e.  v11:= temp @kind wide;
  #L140a20.  goto L140a24;
  #L140a22.  v11:= v9 @kind wide;
  #L140a24.  call temp:= `mustRevalidate`(v2) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @kind virtual;
  #L140a2a.  v7:= temp;
  #L140a2c.  if v7 != 0 then goto L140a52;
  #L140a30.  call temp:= `maxStaleSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L140a36.  v7:= temp;
  #L140a38.  if v7 == v8 then goto L140a52;
  #L140a3c.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L140a40.  call temp:= `maxStaleSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L140a46.  v0:= temp;
  #L140a48.  v8:= (`long`) v0 @kind i2l;
  #L140a4a.  call temp:= `toMillis`(v7, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L140a50.  v9:= temp @kind wide;
  #L140a52.  call temp:= `noCache`(v2) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L140a58.  v0:= temp;
  #L140a5a.  if v0 != 0 then goto L140ac4;
  #L140a5e.  v11:= v11 + v3 @kind long;
  #L140a60.  v9:= v9 + v5 @kind long;
  #L140a62.  v0:= lcmp(v11, v9);
  #L140a66.  if v0 >= 0 then goto L140ac4;
  #L140a6a.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L140a6e.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L140a74.  v0:= temp @kind object;
  #L140a76.  v2:= "Warning" @kind object;
  #L140a7a.  v7:= lcmp(v11, v5);
  #L140a7e.  if v7 < 0 then goto L140a8c;
  #L140a82.  v5:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L140a86.  call temp:= `addHeader`(v0, v2, v5) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L140a8c.  v5:= 86400000L;
  #L140a92.  v7:= lcmp(v3, v5);
  #L140a96.  if v7 <= 0 then goto L140ab0;
  #L140a9a.  call temp:= `e`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.e:()Z` @kind direct;
  #L140aa0.  v3:= temp;
  #L140aa2.  if v3 == 0 then goto L140ab0;
  #L140aa6.  v3:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L140aaa.  call temp:= `addHeader`(v0, v2, v3) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L140ab0.  v2:= new `okhttp3.internal.cache.CacheStrategy`;
  #L140ab4.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L140aba.  v0:= temp @kind object;
  #L140abc.  call `<init>`(v2, v1, v0) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L140ac2.  return v2 @kind object;
  #L140ac4.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.h` @type ^`java.lang.String` @kind object;
  #L140ac8.  v2:= "If-Modified-Since" @kind object;
  #L140acc.  if v0 == 0 then goto L140ad6;
  #L140ad0.  v2:= "If-None-Match" @kind object;
  #L140ad4.  goto L140af0;
  #L140ad6.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.c` @type ^`java.util.Date` @kind object;
  #L140ada.  if v0 == 0 then goto L140ae4;
  #L140ade.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.d` @type ^`java.lang.String` @kind object;
  #L140ae2.  goto L140af0;
  #L140ae4.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.a` @type ^`java.util.Date` @kind object;
  #L140ae8.  if v0 == 0 then goto L140b44;
  #L140aec.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.b` @type ^`java.lang.String` @kind object;
  #L140af0.  v1:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L140af4.  call temp:= `headers`(v1) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L140afa.  v1:= temp @kind object;
  #L140afc.  call temp:= `newBuilder`(v1) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L140b02.  v1:= temp @kind object;
  #L140b04.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L140b0a.  call temp:= `addLenient$okhttp`(v1, v2, v0) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L140b10.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L140b14.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L140b1a.  v0:= temp @kind object;
  #L140b1c.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L140b22.  v1:= temp @kind object;
  #L140b24.  call temp:= `headers`(v0, v1) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L140b2a.  v0:= temp @kind object;
  #L140b2c.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L140b32.  v0:= temp @kind object;
  #L140b34.  v1:= new `okhttp3.internal.cache.CacheStrategy`;
  #L140b38.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L140b3c.  call `<init>`(v1, v0, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L140b42.  return v1 @kind object;
  #L140b44.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L140b48.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L140b4c.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L140b52.  return v0 @kind object;
  #L140b54.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L140b58.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L140b5c.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L140b62.  return v0 @kind object;
}
procedure `long` `c`(`okhttp3.internal.cache.CacheStrategy$Factory` v7 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.c:()J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1407c8.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1407cc.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1407d2.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1407d8.  v0:= temp @kind object;
  #L1407da.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1407e0.  v1:= temp;
  #L1407e2.  v2:= -1I;
  #L1407e4.  if v1 == v2 then goto L140800;
  #L1407e8.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1407ec.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1407f2.  v0:= temp;
  #L1407f4.  v2:= (`long`) v0 @kind i2l;
  #L1407f6.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1407fc.  v0:= temp @kind wide;
  #L1407fe.  return v0 @kind wide;
  #L140800.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.e` @type ^`java.util.Date` @kind object;
  #L140804.  v1:= 0L;
  #L140808.  if v0 == 0 then goto L140838;
  #L14080c.  v3:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.a` @type ^`java.util.Date` @kind object;
  #L140810.  if v3 == 0 then goto L14081e;
  #L140814.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L14081a.  v3:= temp @kind wide;
  #L14081c.  goto L140822;
  #L14081e.  v3:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.g` @type ^`long` @kind wide;
  #L140822.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L140828.  v5:= temp @kind wide;
  #L14082a.  v5:= v5 - v3 @kind long;
  #L14082c.  v0:= lcmp(v5, v1);
  #L140830.  if v0 <= 0 then goto L140836;
  #L140834.  v1:= v5 @kind wide;
  #L140836.  return v1 @kind wide;
  #L140838.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.c` @type ^`java.util.Date` @kind object;
  #L14083c.  if v0 == 0 then goto L14089c;
  #L140840.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L140844.  call temp:= `request`(v0) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14084a.  v0:= temp @kind object;
  #L14084c.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L140852.  v0:= temp @kind object;
  #L140854.  call temp:= `query`(v0) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L14085a.  v0:= temp @kind object;
  #L14085c.  if v0 != 0 then goto L14089c;
  #L140860.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.a` @type ^`java.util.Date` @kind object;
  #L140864.  if v0 == 0 then goto L140872;
  #L140868.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L14086e.  v3:= temp @kind wide;
  #L140870.  goto L140876;
  #L140872.  v3:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.f` @type ^`long` @kind wide;
  #L140876.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.c` @type ^`java.util.Date` @kind object;
  #L14087a.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L140880.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L140886.  v5:= temp @kind wide;
  #L140888.  v3:= v3 - v5 @kind long;
  #L14088a.  v0:= lcmp(v3, v1);
  #L14088e.  if v0 <= 0 then goto L14089c;
  #L140892.  v0:= 10I;
  #L140896.  v0:= (`long`) v0 @kind i2l;
  #L140898.  v1:= v3 / v0 @kind long;
  #L14089c.  return v1 @kind wide;
}
procedure `boolean` `d`(`okhttp3.internal.cache.CacheStrategy$Factory` v1 @kind this, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.d:(Lokhttp3/Request;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1406e0.  v0:= "If-Modified-Since" @kind object;
  #L1406e4.  call temp:= `header`(v2, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1406ea.  v0:= temp @kind object;
  #L1406ec.  if v0 != 0 then goto L140706;
  #L1406f0.  v0:= "If-None-Match" @kind object;
  #L1406f4.  call temp:= `header`(v2, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1406fa.  v2:= temp @kind object;
  #L1406fc.  if v2 == 0 then goto L140702;
  #L140700.  goto L140706;
  #L140702.  v2:= 0I;
  #L140704.  goto L140708;
  #L140706.  v2:= 1I;
  #L140708.  return v2;
}
procedure `boolean` `e`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.e:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L14071c.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L140720.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L140726.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L14072c.  v0:= temp @kind object;
  #L14072e.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L140734.  v0:= temp;
  #L140736.  v1:= -1I;
  #L140738.  if v0 != v1 then goto L140748;
  #L14073c.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.e` @type ^`java.util.Date` @kind object;
  #L140740.  if v0 != 0 then goto L140748;
  #L140744.  v0:= 1I;
  #L140746.  goto L14074a;
  #L140748.  v0:= 0I;
  #L14074a.  return v0;
}
procedure `okhttp3.internal.cache.CacheStrategy` `compute`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.compute:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1408c8.  call temp:= `b`(v2) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.b:()Lokhttp3/internal/cache/CacheStrategy;` @kind direct;
  #L1408ce.  v0:= temp @kind object;
  #L1408d0.  call temp:= `getNetworkRequest`(v0) @signature `Lokhttp3/internal/cache/CacheStrategy;.getNetworkRequest:()Lokhttp3/Request;` @kind virtual;
  #L1408d6.  v1:= temp @kind object;
  #L1408d8.  if v1 == 0 then goto L140900;
  #L1408dc.  v1:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1408e0.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1408e6.  v1:= temp @kind object;
  #L1408e8.  call temp:= `onlyIfCached`(v1) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @kind virtual;
  #L1408ee.  v1:= temp;
  #L1408f0.  if v1 == 0 then goto L140900;
  #L1408f4.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1408f8.  v1:= 0I;
  #L1408fa.  call `<init>`(v0, v1, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L140900.  return v0 @kind object;
}
procedure `okhttp3.Request` `getRequest$okhttp`(`okhttp3.internal.cache.CacheStrategy$Factory` v1 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getRequest$okhttp:()Lokhttp3/Request;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1408b0.  v0:= v1.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1408b4.  return v0 @kind object;
}
