record `okhttp3.internal.cache.CacheInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.Cache` `okhttp3.internal.cache.CacheInterceptor.a` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.cache.CacheInterceptor$Companion` `@@okhttp3.internal.cache.CacheInterceptor.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/cache/CacheInterceptor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L140554.  v0:= new `okhttp3.internal.cache.CacheInterceptor$Companion`;
  #L140558.  v1:= 0I;
  #L14055a.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L140560.  `@@okhttp3.internal.cache.CacheInterceptor.Companion` @type ^`okhttp3.internal.cache.CacheInterceptor$Companion` := v0 @kind object;
  #L140564.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor` v0 @kind this, `okhttp3.Cache` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.<init>:(Lokhttp3/Cache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L140578.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14057e.  v0.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.Cache` := v1 @kind object;
  #L140582.  return @kind void;
}
procedure `okhttp3.Response` `a`(`okhttp3.internal.cache.CacheInterceptor` v4 @kind this, `okhttp3.internal.cache.CacheRequest` v5 @kind object, `okhttp3.Response` v6 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.a:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L140164.  if v5 != 0 then goto L14016a;
  #L140168.  return v6 @kind object;
  #L14016a.  call temp:= `body`(v5) @signature `Lokhttp3/internal/cache/CacheRequest;.body:()Lokio/Sink;` @kind interface;
  #L140170.  v0:= temp @kind object;
  #L140172.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L140178.  v1:= temp @kind object;
  #L14017a.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L140180.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L140186.  v1:= temp @kind object;
  #L140188.  call temp:= `buffer`(v0) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L14018e.  v0:= temp @kind object;
  #L140190.  v2:= new `okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1`;
  #L140194.  call `<init>`(v2, v1, v5, v0) @signature `Lokhttp3/internal/cache/CacheInterceptor$cacheWritingResponse$cacheWritingSource$1;.<init>:(Lokio/BufferedSource;Lokhttp3/internal/cache/CacheRequest;Lokio/BufferedSink;)V` @kind direct;
  #L14019a.  v5:= 2I;
  #L14019c.  v0:= "Content-Type" @kind object;
  #L1401a0.  v1:= 0I;
  #L1401a2.  call temp:= `header$default`(v6, v0, v1, v5, v1) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1401a8.  v5:= temp @kind object;
  #L1401aa.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L1401b0.  v0:= temp @kind object;
  #L1401b2.  call temp:= `contentLength`(v0) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L1401b8.  v0:= temp @kind wide;
  #L1401ba.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L1401c0.  v6:= temp @kind object;
  #L1401c2.  v3:= new `okhttp3.internal.http.RealResponseBody`;
  #L1401c6.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L1401cc.  v2:= temp @kind object;
  #L1401ce.  call `<init>`(v3, v5, v0, v2) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L1401d4.  call temp:= `body`(v6, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1401da.  v5:= temp @kind object;
  #L1401dc.  call temp:= `build`(v5) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1401e2.  v5:= temp @kind object;
  #L1401e4.  return v5 @kind object;
}
procedure `okhttp3.Cache` `getCache$okhttp`(`okhttp3.internal.cache.CacheInterceptor` v1 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor;.getCache$okhttp:()Lokhttp3/Cache;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14014c.  v0:= v1.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.Cache` @kind object;
  #L140150.  return v0 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.cache.CacheInterceptor` v8 @kind this, `okhttp3.Interceptor$Chain` v9 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1401f8.  v0:= "chain" @kind object;
  #L1401fc.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L140202.  call temp:= `call`(v9) @signature `Lokhttp3/Interceptor$Chain;.call:()Lokhttp3/Call;` @kind interface;
  #L140208.  v0:= temp @kind object;
  #L14020a.  v1:= v8.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.Cache` @kind object;
  #L14020e.  v2:= 0I;
  #L140210.  if v1 == 0 then goto L140226;
  #L140214.  call temp:= `request`(v9) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L14021a.  v3:= temp @kind object;
  #L14021c.  call temp:= `get$okhttp`(v1, v3) @signature `Lokhttp3/Cache;.get$okhttp:(Lokhttp3/Request;)Lokhttp3/Response;` @kind virtual;
  #L140222.  v1:= temp @kind object;
  #L140224.  goto L140228;
  #L140226.  v1:= v2 @kind object;
  #L140228.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L14022e.  v3:= temp @kind wide;
  #L140230.  v5:= new `okhttp3.internal.cache.CacheStrategy$Factory`;
  #L140234.  call temp:= `request`(v9) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L14023a.  v6:= temp @kind object;
  #L14023c.  call `<init>`(v5, v3, v6, v1) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L140242.  call temp:= `compute`(v5) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.compute:()Lokhttp3/internal/cache/CacheStrategy;` @kind virtual;
  #L140248.  v3:= temp @kind object;
  #L14024a.  call temp:= `getNetworkRequest`(v3) @signature `Lokhttp3/internal/cache/CacheStrategy;.getNetworkRequest:()Lokhttp3/Request;` @kind virtual;
  #L140250.  v4:= temp @kind object;
  #L140252.  call temp:= `getCacheResponse`(v3) @signature `Lokhttp3/internal/cache/CacheStrategy;.getCacheResponse:()Lokhttp3/Response;` @kind virtual;
  #L140258.  v5:= temp @kind object;
  #L14025a.  v6:= v8.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.Cache` @kind object;
  #L14025e.  if v6 == 0 then goto L140268;
  #L140262.  call `trackResponse$okhttp`(v6, v3) @signature `Lokhttp3/Cache;.trackResponse$okhttp:(Lokhttp3/internal/cache/CacheStrategy;)V` @kind virtual;
  #L140268.  v3:= instanceof @variable v0 @type ^`okhttp3.internal.connection.RealCall` @kind boolean;
  #L14026c.  if v3 != 0 then goto L140272;
  #L140270.  goto L140274;
  #L140272.  v2:= v0 @kind object;
  #L140274.  v2:= (`okhttp3.internal.connection.RealCall`) v2 @kind object;
  #L140278.  if v2 == 0 then goto L14028a;
  #L14027c.  call temp:= `getEventListener$okhttp`(v2) @signature `Lokhttp3/internal/connection/RealCall;.getEventListener$okhttp:()Lokhttp3/EventListener;` @kind virtual;
  #L140282.  v2:= temp @kind object;
  #L140284.  if v2 == 0 then goto L14028a;
  #L140288.  goto L14028e;
  #L14028a.  v2:= `@@okhttp3.EventListener.NONE` @type ^`okhttp3.EventListener` @kind object;
  #L14028e.  if v1 == 0 then goto L1402a8;
  #L140292.  if v5 != 0 then goto L1402a8;
  #L140296.  call temp:= `body`(v1) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L14029c.  v3:= temp @kind object;
  #L14029e.  if v3 == 0 then goto L1402a8;
  #L1402a2.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1402a8.  if v4 != 0 then goto L140326;
  #L1402ac.  if v5 != 0 then goto L140326;
  #L1402b0.  v1:= new `okhttp3.Response$Builder`;
  #L1402b4.  call `<init>`(v1) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L1402ba.  call temp:= `request`(v9) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L1402c0.  v9:= temp @kind object;
  #L1402c2.  call temp:= `request`(v1, v9) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1402c8.  v9:= temp @kind object;
  #L1402ca.  v1:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L1402ce.  call temp:= `protocol`(v9, v1) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1402d4.  v9:= temp @kind object;
  #L1402d6.  v1:= 504I;
  #L1402da.  call temp:= `code`(v9, v1) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L1402e0.  v9:= temp @kind object;
  #L1402e2.  v1:= "Unsatisfiable Request (only-if-cached)" @kind object;
  #L1402e6.  call temp:= `message`(v9, v1) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1402ec.  v9:= temp @kind object;
  #L1402ee.  v1:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L1402f2.  call temp:= `body`(v9, v1) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1402f8.  v9:= temp @kind object;
  #L1402fa.  v3:= -1L;
  #L1402fe.  call temp:= `sentRequestAtMillis`(v9, v3) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L140304.  v9:= temp @kind object;
  #L140306.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L14030c.  v3:= temp @kind wide;
  #L14030e.  call temp:= `receivedResponseAtMillis`(v9, v3) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L140314.  v9:= temp @kind object;
  #L140316.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L14031c.  v9:= temp @kind object;
  #L14031e.  call `satisfactionFailure`(v2, v0, v9) @signature `Lokhttp3/EventListener;.satisfactionFailure:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind virtual;
  #L140324.  return v9 @kind object;
  #L140326.  if v4 != 0 then goto L14035c;
  #L14032a.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L140330.  call temp:= `newBuilder`(v5) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L140336.  v9:= temp @kind object;
  #L140338.  v1:= `@@okhttp3.internal.cache.CacheInterceptor.Companion` @type ^`okhttp3.internal.cache.CacheInterceptor$Companion` @kind object;
  #L14033c.  call temp:= `access$stripBody`(v1, v5) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.access$stripBody:(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L140342.  v1:= temp @kind object;
  #L140344.  call temp:= `cacheResponse`(v9, v1) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14034a.  v9:= temp @kind object;
  #L14034c.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L140352.  v9:= temp @kind object;
  #L140354.  call `cacheHit`(v2, v0, v9) @signature `Lokhttp3/EventListener;.cacheHit:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind virtual;
  #L14035a.  return v9 @kind object;
  #L14035c.  if v5 == 0 then goto L140368;
  #L140360.  call `cacheConditionalHit`(v2, v0, v5) @signature `Lokhttp3/EventListener;.cacheConditionalHit:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind virtual;
  #L140366.  goto L140376;
  #L140368.  v3:= v8.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.Cache` @kind object;
  #L14036c.  if v3 == 0 then goto L140376;
  #L140370.  call `cacheMiss`(v2, v0) @signature `Lokhttp3/EventListener;.cacheMiss:(Lokhttp3/Call;)V` @kind virtual;
  #L140376.  call temp:= `proceed`(v9, v4) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L14037c.  v9:= temp @kind object;
  #L14037e.  if v9 != 0 then goto L140398;
  #L140382.  if v1 == 0 then goto L140398;
  #L140386.  call temp:= `body`(v1) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L14038c.  v1:= temp @kind object;
  #L14038e.  if v1 == 0 then goto L140398;
  #L140392.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L140398.  if v5 == 0 then goto L14046c;
  #L14039c.  if v9 == 0 then goto L14045a;
  #L1403a0.  call temp:= `code`(v9) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1403a6.  v1:= temp;
  #L1403a8.  v3:= 304I;
  #L1403ac.  if v1 != v3 then goto L14045a;
  #L1403b0.  call temp:= `newBuilder`(v5) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L1403b6.  v1:= temp @kind object;
  #L1403b8.  v3:= `@@okhttp3.internal.cache.CacheInterceptor.Companion` @type ^`okhttp3.internal.cache.CacheInterceptor$Companion` @kind object;
  #L1403bc.  call temp:= `headers`(v5) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1403c2.  v4:= temp @kind object;
  #L1403c4.  call temp:= `headers`(v9) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1403ca.  v6:= temp @kind object;
  #L1403cc.  call temp:= `access$combine`(v3, v4, v6) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.access$combine:(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind static;
  #L1403d2.  v4:= temp @kind object;
  #L1403d4.  call temp:= `headers`(v1, v4) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1403da.  v1:= temp @kind object;
  #L1403dc.  call temp:= `sentRequestAtMillis`(v9) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L1403e2.  v6:= temp @kind wide;
  #L1403e4.  call temp:= `sentRequestAtMillis`(v1, v6) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L1403ea.  v1:= temp @kind object;
  #L1403ec.  call temp:= `receivedResponseAtMillis`(v9) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L1403f2.  v6:= temp @kind wide;
  #L1403f4.  call temp:= `receivedResponseAtMillis`(v1, v6) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L1403fa.  v1:= temp @kind object;
  #L1403fc.  call temp:= `access$stripBody`(v3, v5) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.access$stripBody:(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L140402.  v4:= temp @kind object;
  #L140404.  call temp:= `cacheResponse`(v1, v4) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14040a.  v1:= temp @kind object;
  #L14040c.  call temp:= `access$stripBody`(v3, v9) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.access$stripBody:(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L140412.  v3:= temp @kind object;
  #L140414.  call temp:= `networkResponse`(v1, v3) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14041a.  v1:= temp @kind object;
  #L14041c.  call temp:= `build`(v1) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L140422.  v1:= temp @kind object;
  #L140424.  call temp:= `body`(v9) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L14042a.  v9:= temp @kind object;
  #L14042c.  call `checkNotNull`(v9) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L140432.  call `close`(v9) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L140438.  v9:= v8.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.Cache` @kind object;
  #L14043c.  call `checkNotNull`(v9) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L140442.  call `trackConditionalCacheHit$okhttp`(v9) @signature `Lokhttp3/Cache;.trackConditionalCacheHit$okhttp:()V` @kind virtual;
  #L140448.  v9:= v8.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.Cache` @kind object;
  #L14044c.  call `update$okhttp`(v9, v5, v1) @signature `Lokhttp3/Cache;.update$okhttp:(Lokhttp3/Response;Lokhttp3/Response;)V` @kind virtual;
  #L140452.  call `cacheHit`(v2, v0, v1) @signature `Lokhttp3/EventListener;.cacheHit:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind virtual;
  #L140458.  return v1 @kind object;
  #L14045a.  call temp:= `body`(v5) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L140460.  v1:= temp @kind object;
  #L140462.  if v1 == 0 then goto L14046c;
  #L140466.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L14046c.  call `checkNotNull`(v9) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L140472.  call temp:= `newBuilder`(v9) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L140478.  v1:= temp @kind object;
  #L14047a.  v3:= `@@okhttp3.internal.cache.CacheInterceptor.Companion` @type ^`okhttp3.internal.cache.CacheInterceptor$Companion` @kind object;
  #L14047e.  call temp:= `access$stripBody`(v3, v5) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.access$stripBody:(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L140484.  v6:= temp @kind object;
  #L140486.  call temp:= `cacheResponse`(v1, v6) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14048c.  v1:= temp @kind object;
  #L14048e.  call temp:= `access$stripBody`(v3, v9) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.access$stripBody:(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L140494.  v9:= temp @kind object;
  #L140496.  call temp:= `networkResponse`(v1, v9) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14049c.  v9:= temp @kind object;
  #L14049e.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1404a4.  v9:= temp @kind object;
  #L1404a6.  v1:= v8.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.Cache` @kind object;
  #L1404aa.  if v1 == 0 then goto L14050c;
  #L1404ae.  call temp:= `promisesBody`(v9) @signature `Lokhttp3/internal/http/HttpHeaders;.promisesBody:(Lokhttp3/Response;)Z` @kind static;
  #L1404b4.  v1:= temp;
  #L1404b6.  if v1 == 0 then goto L1404ea;
  #L1404ba.  v1:= `@@okhttp3.internal.cache.CacheStrategy.Companion` @type ^`okhttp3.internal.cache.CacheStrategy$Companion` @kind object;
  #L1404be.  call temp:= `isCacheable`(v1, v9, v4) @signature `Lokhttp3/internal/cache/CacheStrategy$Companion;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind virtual;
  #L1404c4.  v1:= temp;
  #L1404c6.  if v1 == 0 then goto L1404ea;
  #L1404ca.  v1:= v8.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.Cache` @kind object;
  #L1404ce.  call temp:= `put$okhttp`(v1, v9) @signature `Lokhttp3/Cache;.put$okhttp:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;` @kind virtual;
  #L1404d4.  v1:= temp @kind object;
  #L1404d6.  call temp:= `a`(v8, v1, v9) @signature `Lokhttp3/internal/cache/CacheInterceptor;.a:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @kind direct;
  #L1404dc.  v9:= temp @kind object;
  #L1404de.  if v5 == 0 then goto L1404e8;
  #L1404e2.  call `cacheMiss`(v2, v0) @signature `Lokhttp3/EventListener;.cacheMiss:(Lokhttp3/Call;)V` @kind virtual;
  #L1404e8.  return v9 @kind object;
  #L1404ea.  v0:= `@@okhttp3.internal.http.HttpMethod.INSTANCE` @type ^`okhttp3.internal.http.HttpMethod` @kind object;
  #L1404ee.  call temp:= `method`(v4) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L1404f4.  v1:= temp @kind object;
  #L1404f6.  call temp:= `invalidatesCache`(v0, v1) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @kind virtual;
  #L1404fc.  v0:= temp;
  #L1404fe.  if v0 == 0 then goto L14050c;
  #L140502.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.Cache` @kind object;
  #L140506.  call `remove$okhttp`(v0, v4) @signature `Lokhttp3/Cache;.remove$okhttp:(Lokhttp3/Request;)V` @kind virtual;
  #L14050c.  return v9 @kind object;
  #L14050e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L140510.  if v1 == 0 then goto L140526;
  #L140514.  call temp:= `body`(v1) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L14051a.  v0:= temp @kind object;
  #L14051c.  if v0 == 0 then goto L140526;
  #L140520.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L140526.  throw v9;
  catch `java.lang.Throwable` @[L140376..L14037e] goto L14050e;
  catch `java.io.IOException` @[L140502..L14050c] goto L14050c;
}
