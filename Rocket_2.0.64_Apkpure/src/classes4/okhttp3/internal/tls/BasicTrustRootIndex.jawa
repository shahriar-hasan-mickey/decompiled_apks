record `okhttp3.internal.tls.BasicTrustRootIndex` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.tls.TrustRootIndex` @kind interface {
  `java.util.Map` `okhttp3.internal.tls.BasicTrustRootIndex.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.tls.BasicTrustRootIndex` v6 @kind this, `java.security.cert.X509Certificate`[] v7 @kind object) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.<init>:([Ljava/security/cert/X509Certificate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15b870.  v0:= "caCerts" @kind object;
  #L15b874.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b87a.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b880.  v0:= new `java.util.LinkedHashMap`;
  #L15b884.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L15b88a.  v1:= length @variable v7;
  #L15b88c.  v2:= 0I;
  #L15b88e.  if v2 >= v1 then goto L15b8d4;
  #L15b892.  v3:= v7[v2] @kind object;
  #L15b896.  call temp:= `getSubjectX500Principal`(v3) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L15b89c.  v4:= temp @kind object;
  #L15b89e.  v5:= "caCert.subjectX500Principal" @kind object;
  #L15b8a2.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b8a8.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15b8ae.  v5:= temp @kind object;
  #L15b8b0.  if v5 != 0 then goto L15b8c4;
  #L15b8b4.  v5:= new `java.util.LinkedHashSet`;
  #L15b8b8.  call `<init>`(v5) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L15b8be.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15b8c4.  v5:= (`java.util.Set`) v5 @kind object;
  #L15b8c8.  call temp:= `add`(v5, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15b8ce.  v2:= v2 + 1;
  #L15b8d2.  goto L15b88e;
  #L15b8d4.  v6.`okhttp3.internal.tls.BasicTrustRootIndex.a` @type ^`java.util.Map` := v0 @kind object;
  #L15b8d8.  return @kind void;
}
procedure `boolean` `equals`(`okhttp3.internal.tls.BasicTrustRootIndex` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b784.  if v2 == v1 then goto L15b7ae;
  #L15b788.  v0:= instanceof @variable v2 @type ^`okhttp3.internal.tls.BasicTrustRootIndex` @kind boolean;
  #L15b78c.  if v0 == 0 then goto L15b7aa;
  #L15b790.  v2:= (`okhttp3.internal.tls.BasicTrustRootIndex`) v2 @kind object;
  #L15b794.  v2:= v2.`okhttp3.internal.tls.BasicTrustRootIndex.a` @type ^`java.util.Map` @kind object;
  #L15b798.  v0:= v1.`okhttp3.internal.tls.BasicTrustRootIndex.a` @type ^`java.util.Map` @kind object;
  #L15b79c.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15b7a2.  v2:= temp;
  #L15b7a4.  if v2 == 0 then goto L15b7aa;
  #L15b7a8.  goto L15b7ae;
  #L15b7aa.  v2:= 0I;
  #L15b7ac.  goto L15b7b0;
  #L15b7ae.  v2:= 1I;
  #L15b7b0.  return v2;
}
procedure `java.security.cert.X509Certificate` `findByIssuerAndSignature`(`okhttp3.internal.tls.BasicTrustRootIndex` v4 @kind this, `java.security.cert.X509Certificate` v5 @kind object) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.findByIssuerAndSignature:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15b7e4.  v0:= "cert" @kind object;
  #L15b7e8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b7ee.  call temp:= `getIssuerX500Principal`(v5) @signature `Ljava/security/cert/X509Certificate;.getIssuerX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L15b7f4.  v0:= temp @kind object;
  #L15b7f6.  v1:= v4.`okhttp3.internal.tls.BasicTrustRootIndex.a` @type ^`java.util.Map` @kind object;
  #L15b7fa.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15b800.  v0:= temp @kind object;
  #L15b802.  v0:= (`java.util.Set`) v0 @kind object;
  #L15b806.  v1:= 0I;
  #L15b808.  if v0 == 0 then goto L15b84c;
  #L15b80c.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15b812.  v0:= temp @kind object;
  #L15b814.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15b81a.  v2:= temp;
  #L15b81c.  if v2 == 0 then goto L15b848;
  #L15b820.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15b826.  v2:= temp @kind object;
  #L15b828.  v3:= v2 @kind object;
  #L15b82a.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L15b82e.  call temp:= `getPublicKey`(v3) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L15b834.  v3:= temp @kind object;
  #L15b836.  call `verify`(v5, v3) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L15b83c.  v3:= 1I;
  #L15b83e.  goto L15b842;
  #L15b840.  v3:= 0I;
  #L15b842.  if v3 == 0 then goto L15b814;
  #L15b846.  v1:= v2 @kind object;
  #L15b848.  v1:= (`java.security.cert.X509Certificate`) v1 @kind object;
  #L15b84c.  return v1 @kind object;
  catch `java.lang.Exception` @[L15b82e..L15b83c] goto L15b840;
}
procedure `int` `hashCode`(`okhttp3.internal.tls.BasicTrustRootIndex` v1 @kind this) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b7c4.  v0:= v1.`okhttp3.internal.tls.BasicTrustRootIndex.a` @type ^`java.util.Map` @kind object;
  #L15b7c8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L15b7ce.  v0:= temp;
  #L15b7d0.  return v0;
}
