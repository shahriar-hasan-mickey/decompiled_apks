record `okhttp3.internal.tls.OkHostnameVerifier` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `okhttp3.internal.tls.OkHostnameVerifier` `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L15be84.  v0:= new `okhttp3.internal.tls.OkHostnameVerifier`;
  #L15be88.  call `<init>`(v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @kind direct;
  #L15be8e.  `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` := v0 @kind object;
  #L15be92.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.tls.OkHostnameVerifier` v0 @kind this) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15bea4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15beaa.  return @kind void;
}
procedure `java.lang.String` `a`(`okhttp3.internal.tls.OkHostnameVerifier` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15bd48.  call temp:= `c`(v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.c:(Ljava/lang/String;)Z` @kind direct;
  #L15bd4e.  v0:= temp;
  #L15bd50.  if v0 == 0 then goto L15bd7e;
  #L15bd54.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L15bd58.  v1:= "Locale.US" @kind object;
  #L15bd5c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15bd62.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L15bd66.  call temp:= `requireNonNull`(v3, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L15bd6c.  call temp:= `toLowerCase`(v3, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L15bd72.  v3:= temp @kind object;
  #L15bd74.  v0:= "(this as java.lang.String).toLowerCase(locale)" @kind object;
  #L15bd78.  call `checkNotNullExpressionValue`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15bd7e.  return v3 @kind object;
}
procedure `java.util.List` `b`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.security.cert.X509Certificate` v5 @kind object, `int` v6 ) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15bdc8.  call temp:= `getSubjectAlternativeNames`(v5) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L15bdce.  v5:= temp @kind object;
  #L15bdd0.  if v5 == 0 then goto L15be50;
  #L15bdd4.  v0:= new `java.util.ArrayList`;
  #L15bdd8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L15bdde.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15bde4.  v5:= temp @kind object;
  #L15bde6.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15bdec.  v1:= temp;
  #L15bdee.  if v1 == 0 then goto L15be4e;
  #L15bdf2.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15bdf8.  v1:= temp @kind object;
  #L15bdfa.  v1:= (`java.util.List`) v1 @kind object;
  #L15bdfe.  if v1 == 0 then goto L15bde6;
  #L15be02.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15be08.  v2:= temp;
  #L15be0a.  v3:= 2I;
  #L15be0c.  if v2 >= v3 then goto L15be12;
  #L15be10.  goto L15bde6;
  #L15be12.  v2:= 0I;
  #L15be14.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L15be1a.  v2:= temp @kind object;
  #L15be1c.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15be22.  v3:= temp @kind object;
  #L15be24.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15be2a.  v2:= temp;
  #L15be2c.  v3:= 1I;
  #L15be2e.  v2:= v2 ^~ v3 @kind int;
  #L15be30.  if v2 == 0 then goto L15be36;
  #L15be34.  goto L15bde6;
  #L15be36.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L15be3c.  v1:= temp @kind object;
  #L15be3e.  if v1 == 0 then goto L15bde6;
  #L15be42.  v1:= (`java.lang.String`) v1 @kind object;
  #L15be46.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15be4c.  goto L15bde6;
  #L15be4e.  return v0 @kind object;
  #L15be50.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L15be56.  v5:= temp @kind object;
  #L15be58.  return v5 @kind object;
  #L15be5a.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L15be60.  v5:= temp @kind object;
  #L15be62.  return v5 @kind object;
  catch `java.security.cert.CertificateParsingException` @[L15bdc8..L15be58] goto L15be5a;
}
procedure `boolean` `c`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.c:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15b9c8.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15b9ce.  v0:= temp;
  #L15b9d0.  v1:= 0I;
  #L15b9d2.  v2:= 3I;
  #L15b9d4.  v3:= 0I;
  #L15b9d6.  call temp:= `size$default`(v5, v1, v1, v2, v3) @signature `Lokio/Utf8;.size$default:(Ljava/lang/String;IIILjava/lang/Object;)J` @kind static;
  #L15b9dc.  v2:= temp @kind wide;
  #L15b9de.  v5:= (`int`) v2 @kind l2i;
  #L15b9e0.  if v0 != v5 then goto L15b9e6;
  #L15b9e4.  v1:= 1I;
  #L15b9e6.  return v1;
}
procedure `boolean` `d`(`okhttp3.internal.tls.OkHostnameVerifier` v12 @kind this, `java.lang.String` v13 @kind object, `java.lang.String` v14 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L15bab4.  v0:= 1I;
  #L15bab6.  v1:= 0I;
  #L15bab8.  if v13 == 0 then goto L15bace;
  #L15babc.  call temp:= `length`(v13) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L15bac2.  v2:= temp;
  #L15bac4.  if v2 != 0 then goto L15baca;
  #L15bac8.  goto L15bace;
  #L15baca.  v2:= 0I;
  #L15bacc.  goto L15bad0;
  #L15bace.  v2:= 1I;
  #L15bad0.  if v2 != 0 then goto L15bc52;
  #L15bad4.  v2:= "." @kind object;
  #L15bad8.  v3:= 2I;
  #L15bada.  v4:= 0I;
  #L15badc.  call temp:= `startsWith$default`(v13, v2, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L15bae2.  v5:= temp;
  #L15bae4.  if v5 != 0 then goto L15bc52;
  #L15bae8.  v5:= ".." @kind object;
  #L15baec.  call temp:= `endsWith$default`(v13, v5, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L15baf2.  v6:= temp;
  #L15baf4.  if v6 == 0 then goto L15bafc;
  #L15baf8.  goto L15bc52;
  #L15bafc.  if v14 == 0 then goto L15bb12;
  #L15bb00.  call temp:= `length`(v14) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L15bb06.  v6:= temp;
  #L15bb08.  if v6 != 0 then goto L15bb0e;
  #L15bb0c.  goto L15bb12;
  #L15bb0e.  v6:= 0I;
  #L15bb10.  goto L15bb14;
  #L15bb12.  v6:= 1I;
  #L15bb14.  if v6 != 0 then goto L15bc52;
  #L15bb18.  call temp:= `startsWith$default`(v14, v2, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L15bb1e.  v6:= temp;
  #L15bb20.  if v6 != 0 then goto L15bc52;
  #L15bb24.  call temp:= `endsWith$default`(v14, v5, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L15bb2a.  v5:= temp;
  #L15bb2c.  if v5 == 0 then goto L15bb34;
  #L15bb30.  goto L15bc52;
  #L15bb34.  call temp:= `endsWith$default`(v13, v2, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L15bb3a.  v5:= temp;
  #L15bb3c.  if v5 != 0 then goto L15bb5e;
  #L15bb40.  v5:= new `java.lang.StringBuilder`;
  #L15bb44.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15bb4a.  call temp:= `append`(v5, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bb50.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bb56.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15bb5c.  v13:= temp @kind object;
  #L15bb5e.  v5:= v13 @kind object;
  #L15bb60.  call temp:= `endsWith$default`(v14, v2, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L15bb66.  v13:= temp;
  #L15bb68.  if v13 != 0 then goto L15bb8a;
  #L15bb6c.  v13:= new `java.lang.StringBuilder`;
  #L15bb70.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15bb76.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bb7c.  call temp:= `append`(v13, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bb82.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15bb88.  v14:= temp @kind object;
  #L15bb8a.  call temp:= `a`(v12, v14) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L15bb90.  v13:= temp @kind object;
  #L15bb92.  v14:= "*" @kind object;
  #L15bb96.  call temp:= `contains$default`(v13, v14, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;ZILjava/lang/Object;)Z` @kind static;
  #L15bb9c.  v14:= temp;
  #L15bb9e.  if v14 != 0 then goto L15bbac;
  #L15bba2.  call temp:= `areEqual`(v5, v13) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15bba8.  v13:= temp;
  #L15bbaa.  return v13;
  #L15bbac.  v14:= "*." @kind object;
  #L15bbb0.  call temp:= `startsWith$default`(v13, v14, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L15bbb6.  v2:= temp;
  #L15bbb8.  if v2 == 0 then goto L15bc52;
  #L15bbbc.  v7:= 42I;
  #L15bbc0.  v8:= 1I;
  #L15bbc2.  v9:= 0I;
  #L15bbc4.  v10:= 4I;
  #L15bbc6.  v11:= 0I;
  #L15bbc8.  v6:= v13 @kind object;
  #L15bbca.  call temp:= `indexOf$default`(v6, v7, v8, v9, v10, v11) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L15bbd0.  v2:= temp;
  #L15bbd2.  v11:= -1I;
  #L15bbd4.  if v2 == v11 then goto L15bbda;
  #L15bbd8.  goto L15bc52;
  #L15bbda.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15bbe0.  v2:= temp;
  #L15bbe2.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15bbe8.  v6:= temp;
  #L15bbea.  if v2 >= v6 then goto L15bbf0;
  #L15bbee.  return v1;
  #L15bbf0.  call temp:= `areEqual`(v14, v13) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15bbf6.  v14:= temp;
  #L15bbf8.  if v14 == 0 then goto L15bbfe;
  #L15bbfc.  return v1;
  #L15bbfe.  call temp:= `substring`(v13, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L15bc04.  v13:= temp @kind object;
  #L15bc06.  v14:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L15bc0a.  call `checkNotNullExpressionValue`(v13, v14) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15bc10.  call temp:= `endsWith$default`(v5, v13, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L15bc16.  v14:= temp;
  #L15bc18.  if v14 != 0 then goto L15bc1e;
  #L15bc1c.  return v1;
  #L15bc1e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15bc24.  v14:= temp;
  #L15bc26.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15bc2c.  v13:= temp;
  #L15bc2e.  v14:= v14 - v13 @kind int;
  #L15bc30.  if v14 <= 0 then goto L15bc50;
  #L15bc34.  v6:= 46I;
  #L15bc38.  v7:= v14 + -1;
  #L15bc3c.  v8:= 0I;
  #L15bc3e.  v9:= 4I;
  #L15bc40.  v10:= 0I;
  #L15bc42.  call temp:= `lastIndexOf$default`(v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.lastIndexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L15bc48.  v13:= temp;
  #L15bc4a.  if v13 == v11 then goto L15bc50;
  #L15bc4e.  return v1;
  #L15bc50.  return v0;
  #L15bc52.  return v1;
}
procedure `boolean` `e`(`okhttp3.internal.tls.OkHostnameVerifier` v3 @kind this, `java.lang.String` v4 @kind object, `java.security.cert.X509Certificate` v5 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.e:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15bc64.  call temp:= `a`(v3, v4) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L15bc6a.  v4:= temp @kind object;
  #L15bc6c.  v0:= 2I;
  #L15bc6e.  call temp:= `b`(v3, v5, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind direct;
  #L15bc74.  v5:= temp @kind object;
  #L15bc76.  v0:= instanceof @variable v5 @type ^`java.util.Collection` @kind boolean;
  #L15bc7a.  v1:= 0I;
  #L15bc7c.  if v0 == 0 then goto L15bc8e;
  #L15bc80.  call temp:= `isEmpty`(v5) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L15bc86.  v0:= temp;
  #L15bc88.  if v0 == 0 then goto L15bc8e;
  #L15bc8c.  goto L15bcc0;
  #L15bc8e.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15bc94.  v5:= temp @kind object;
  #L15bc96.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15bc9c.  v0:= temp;
  #L15bc9e.  if v0 == 0 then goto L15bcc0;
  #L15bca2.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15bca8.  v0:= temp @kind object;
  #L15bcaa.  v0:= (`java.lang.String`) v0 @kind object;
  #L15bcae.  v2:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L15bcb2.  call temp:= `d`(v2, v4, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L15bcb8.  v0:= temp;
  #L15bcba.  if v0 == 0 then goto L15bc96;
  #L15bcbe.  v1:= 1I;
  #L15bcc0.  return v1;
}
procedure `boolean` `f`(`okhttp3.internal.tls.OkHostnameVerifier` v2 @kind this, `java.lang.String` v3 @kind object, `java.security.cert.X509Certificate` v4 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.f:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15bcd4.  call temp:= `toCanonicalHost`(v3) @signature `Lokhttp3/internal/HostnamesKt;.toCanonicalHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15bcda.  v3:= temp @kind object;
  #L15bcdc.  v0:= 7I;
  #L15bcde.  call temp:= `b`(v2, v4, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind direct;
  #L15bce4.  v4:= temp @kind object;
  #L15bce6.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L15bcea.  v1:= 0I;
  #L15bcec.  if v0 == 0 then goto L15bcfe;
  #L15bcf0.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L15bcf6.  v0:= temp;
  #L15bcf8.  if v0 == 0 then goto L15bcfe;
  #L15bcfc.  goto L15bd34;
  #L15bcfe.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15bd04.  v4:= temp @kind object;
  #L15bd06.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15bd0c.  v0:= temp;
  #L15bd0e.  if v0 == 0 then goto L15bd34;
  #L15bd12.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15bd18.  v0:= temp @kind object;
  #L15bd1a.  v0:= (`java.lang.String`) v0 @kind object;
  #L15bd1e.  call temp:= `toCanonicalHost`(v0) @signature `Lokhttp3/internal/HostnamesKt;.toCanonicalHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15bd24.  v0:= temp @kind object;
  #L15bd26.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15bd2c.  v0:= temp;
  #L15bd2e.  if v0 == 0 then goto L15bd06;
  #L15bd32.  v1:= 1I;
  #L15bd34.  return v1;
}
procedure `java.util.List` `allSubjectAltNames`(`okhttp3.internal.tls.OkHostnameVerifier` v2 @kind this, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15bd90.  v0:= "certificate" @kind object;
  #L15bd94.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15bd9a.  v0:= 7I;
  #L15bd9c.  call temp:= `b`(v2, v3, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind direct;
  #L15bda2.  v0:= temp @kind object;
  #L15bda4.  v1:= 2I;
  #L15bda6.  call temp:= `b`(v2, v3, v1) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind direct;
  #L15bdac.  v3:= temp @kind object;
  #L15bdae.  call temp:= `plus`(v0, v3) @signature `Lkotlin/collections/CollectionsKt;.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L15bdb4.  v3:= temp @kind object;
  #L15bdb6.  return v3 @kind object;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15b9f8.  v0:= "host" @kind object;
  #L15b9fc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15ba02.  v0:= "certificate" @kind object;
  #L15ba06.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15ba0c.  call temp:= `canParseAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.canParseAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L15ba12.  v0:= temp;
  #L15ba14.  if v0 == 0 then goto L15ba22;
  #L15ba18.  call temp:= `f`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.f:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L15ba1e.  v2:= temp;
  #L15ba20.  goto L15ba2a;
  #L15ba22.  call temp:= `e`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.e:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L15ba28.  v2:= temp;
  #L15ba2a.  return v2;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v2 @kind this, `java.lang.String` v3 @kind object, `javax.net.ssl.SSLSession` v4 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ba3c.  v0:= "host" @kind object;
  #L15ba40.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15ba46.  v0:= "session" @kind object;
  #L15ba4a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15ba50.  call temp:= `c`(v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.c:(Ljava/lang/String;)Z` @kind direct;
  #L15ba56.  v0:= temp;
  #L15ba58.  v1:= 0I;
  #L15ba5a.  if v0 != 0 then goto L15ba60;
  #L15ba5e.  goto L15ba90;
  #L15ba60.  call temp:= `getPeerCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L15ba66.  v4:= temp @kind object;
  #L15ba68.  v4:= v4[v1] @kind object;
  #L15ba6c.  if v4 == 0 then goto L15ba80;
  #L15ba70.  v4:= (`java.security.cert.X509Certificate`) v4 @kind object;
  #L15ba74.  call temp:= `verify`(v2, v3, v4) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L15ba7a.  v3:= temp;
  #L15ba7c.  v1:= v3;
  #L15ba7e.  goto L15ba90;
  #L15ba80.  v3:= new `java.lang.NullPointerException`;
  #L15ba84.  v4:= "null cannot be cast to non-null type java.security.cert.X509Certificate" @kind object;
  #L15ba88.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15ba8e.  throw v3;
  #L15ba90.  return v1;
  catch `javax.net.ssl.SSLException` @[L15ba60..L15ba90] goto L15ba90;
}
