record `okhttp3.internal.tls.BasicCertificateChainCleaner` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.tls.CertificateChainCleaner` @kind class {
  `okhttp3.internal.tls.TrustRootIndex` `okhttp3.internal.tls.BasicCertificateChainCleaner.a` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.tls.BasicCertificateChainCleaner$Companion` `@@okhttp3.internal.tls.BasicCertificateChainCleaner.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15b738.  v0:= new `okhttp3.internal.tls.BasicCertificateChainCleaner$Companion`;
  #L15b73c.  v1:= 0I;
  #L15b73e.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L15b744.  `@@okhttp3.internal.tls.BasicCertificateChainCleaner.Companion` @type ^`okhttp3.internal.tls.BasicCertificateChainCleaner$Companion` := v0 @kind object;
  #L15b748.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v1 @kind this, `okhttp3.internal.tls.TrustRootIndex` v2 @kind object) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15b75c.  v0:= "trustRootIndex" @kind object;
  #L15b760.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b766.  call `<init>`(v1) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.<init>:()V` @kind direct;
  #L15b76c.  v1.`okhttp3.internal.tls.BasicCertificateChainCleaner.a` @type ^`okhttp3.internal.tls.TrustRootIndex` := v2 @kind object;
  #L15b770.  return @kind void;
}
procedure `boolean` `a`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v3 @kind this, `java.security.cert.X509Certificate` v4 @kind object, `java.security.cert.X509Certificate` v5 @kind object) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15b550.  call temp:= `getIssuerDN`(v4) @signature `Ljava/security/cert/X509Certificate;.getIssuerDN:()Ljava/security/Principal;` @kind virtual;
  #L15b556.  v0:= temp @kind object;
  #L15b558.  call temp:= `getSubjectDN`(v5) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L15b55e.  v1:= temp @kind object;
  #L15b560.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15b566.  v0:= temp;
  #L15b568.  v1:= 1I;
  #L15b56a.  v0:= v0 ^~ v1 @kind int;
  #L15b56c.  v2:= 0I;
  #L15b56e.  if v0 == 0 then goto L15b574;
  #L15b572.  return v2;
  #L15b574.  call temp:= `getPublicKey`(v5) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L15b57a.  v5:= temp @kind object;
  #L15b57c.  call `verify`(v4, v5) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L15b582.  goto L15b586;
  #L15b584.  v1:= 0I;
  #L15b586.  return v1;
  catch `java.security.GeneralSecurityException` @[L15b574..L15b582] goto L15b584;
}
procedure `java.util.List` `clean`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v7 @kind this, `java.util.List` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.clean:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15b5c8.  v0:= "chain" @kind object;
  #L15b5cc.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b5d2.  v0:= "hostname" @kind object;
  #L15b5d6.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b5dc.  v9:= new `java.util.ArrayDeque`;
  #L15b5e0.  call `<init>`(v9, v8) @signature `Ljava/util/ArrayDeque;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L15b5e6.  v8:= new `java.util.ArrayList`;
  #L15b5ea.  call `<init>`(v8) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L15b5f0.  call temp:= `removeFirst`(v9) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L15b5f6.  v0:= temp @kind object;
  #L15b5f8.  v1:= "queue.removeFirst()" @kind object;
  #L15b5fc.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b602.  call temp:= `add`(v8, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15b608.  v0:= 0I;
  #L15b60a.  v1:= 0I;
  #L15b60c.  v2:= 9I;
  #L15b610.  if v0 >= v2 then goto L15b6fa;
  #L15b614.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15b61a.  v2:= temp;
  #L15b61c.  v3:= 1I;
  #L15b61e.  v2:= v2 - v3 @kind int;
  #L15b620.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L15b626.  v2:= temp @kind object;
  #L15b628.  v4:= "null cannot be cast to non-null type java.security.cert.X509Certificate" @kind object;
  #L15b62c.  call temp:= `requireNonNull`(v2, v4) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L15b632.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L15b636.  v5:= v7.`okhttp3.internal.tls.BasicCertificateChainCleaner.a` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L15b63a.  call temp:= `findByIssuerAndSignature`(v5, v2) @signature `Lokhttp3/internal/tls/TrustRootIndex;.findByIssuerAndSignature:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @kind interface;
  #L15b640.  v5:= temp @kind object;
  #L15b642.  if v5 == 0 then goto L15b678;
  #L15b646.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15b64c.  v1:= temp;
  #L15b64e.  if v1 > v3 then goto L15b660;
  #L15b652.  call temp:= `areEqual`(v2, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15b658.  v1:= temp;
  #L15b65a.  v1:= v1 ^~ v3 @kind int;
  #L15b65c.  if v1 == 0 then goto L15b666;
  #L15b660.  call temp:= `add`(v8, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15b666.  call temp:= `a`(v7, v5, v5) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L15b66c.  v1:= temp;
  #L15b66e.  if v1 == 0 then goto L15b674;
  #L15b672.  return v8 @kind object;
  #L15b674.  v1:= 1I;
  #L15b676.  goto L15b6c0;
  #L15b678.  call temp:= `iterator`(v9) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15b67e.  v3:= temp @kind object;
  #L15b680.  v5:= "queue.iterator()" @kind object;
  #L15b684.  call `checkNotNullExpressionValue`(v3, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b68a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15b690.  v5:= temp;
  #L15b692.  if v5 == 0 then goto L15b6c6;
  #L15b696.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15b69c.  v5:= temp @kind object;
  #L15b69e.  call temp:= `requireNonNull`(v5, v4) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L15b6a4.  v5:= (`java.security.cert.X509Certificate`) v5 @kind object;
  #L15b6a8.  call temp:= `a`(v7, v2, v5) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L15b6ae.  v6:= temp;
  #L15b6b0.  if v6 == 0 then goto L15b68a;
  #L15b6b4.  call `remove`(v3) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L15b6ba.  call temp:= `add`(v8, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15b6c0.  v0:= v0 + 1;
  #L15b6c4.  goto L15b60c;
  #L15b6c6.  if v1 == 0 then goto L15b6cc;
  #L15b6ca.  return v8 @kind object;
  #L15b6cc.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L15b6d0.  v9:= new `java.lang.StringBuilder`;
  #L15b6d4.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b6da.  v0:= "Failed to find a trusted cert that signed " @kind object;
  #L15b6de.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b6e4.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b6ea.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b6f0.  v9:= temp @kind object;
  #L15b6f2.  call `<init>`(v8, v9) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b6f8.  throw v8;
  #L15b6fa.  v9:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L15b6fe.  v0:= new `java.lang.StringBuilder`;
  #L15b702.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b708.  v1:= "Certificate chain too long: " @kind object;
  #L15b70c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b712.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b718.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b71e.  v8:= temp @kind object;
  #L15b720.  call `<init>`(v9, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b726.  throw v9;
}
procedure `boolean` `equals`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b510.  v0:= 1I;
  #L15b512.  if v3 != v2 then goto L15b518;
  #L15b516.  goto L15b53c;
  #L15b518.  v1:= instanceof @variable v3 @type ^`okhttp3.internal.tls.BasicCertificateChainCleaner` @kind boolean;
  #L15b51c.  if v1 == 0 then goto L15b53a;
  #L15b520.  v3:= (`okhttp3.internal.tls.BasicCertificateChainCleaner`) v3 @kind object;
  #L15b524.  v3:= v3.`okhttp3.internal.tls.BasicCertificateChainCleaner.a` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L15b528.  v1:= v2.`okhttp3.internal.tls.BasicCertificateChainCleaner.a` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L15b52c.  call temp:= `areEqual`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15b532.  v3:= temp;
  #L15b534.  if v3 == 0 then goto L15b53a;
  #L15b538.  goto L15b53c;
  #L15b53a.  v0:= 0I;
  #L15b53c.  return v0;
}
procedure `int` `hashCode`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v1 @kind this) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b5a8.  v0:= v1.`okhttp3.internal.tls.BasicCertificateChainCleaner.a` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L15b5ac.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L15b5b2.  v0:= temp;
  #L15b5b4.  return v0;
}
