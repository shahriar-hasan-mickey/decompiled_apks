record `okhttp3.internal.concurrent.TaskRunner$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.concurrent.TaskRunner$Companion` v0 @kind this) @signature `Lokhttp3/internal/concurrent/TaskRunner$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L144e1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L144e22.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.concurrent.TaskRunner$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/concurrent/TaskRunner$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L144e34.  call `<init>`(v0) @signature `Lokhttp3/internal/concurrent/TaskRunner$Companion;.<init>:()V` @kind direct;
  #L144e3a.  return @kind void;
}
procedure `java.util.logging.Logger` `getLogger`(`okhttp3.internal.concurrent.TaskRunner$Companion` v1 @kind this) @signature `Lokhttp3/internal/concurrent/TaskRunner$Companion;.getLogger:()Ljava/util/logging/Logger;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L144e00.  call temp:= `access$getLogger$cp`() @signature `Lokhttp3/internal/concurrent/TaskRunner;.access$getLogger$cp:()Ljava/util/logging/Logger;` @kind static;
  #L144e06.  v0:= temp @kind object;
  #L144e08.  return v0 @kind object;
}
