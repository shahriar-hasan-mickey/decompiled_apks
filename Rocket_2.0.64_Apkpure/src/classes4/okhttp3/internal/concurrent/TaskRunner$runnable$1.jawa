record `okhttp3.internal.concurrent.TaskRunner$runnable$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Runnable` @kind interface {
  `okhttp3.internal.concurrent.TaskRunner` `okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.concurrent.TaskRunner$runnable$1` v0 @kind this, `okhttp3.internal.concurrent.TaskRunner` v1 @kind object) @signature `Lokhttp3/internal/concurrent/TaskRunner$runnable$1;.<init>:(Lokhttp3/internal/concurrent/TaskRunner;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L144f88.  v0.`okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @type ^`okhttp3.internal.concurrent.TaskRunner` := v1 @kind object;
  #L144f8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L144f92.  return @kind void;
}
procedure `void` `run`(`okhttp3.internal.concurrent.TaskRunner$runnable$1` v8 @kind this) @signature `Lokhttp3/internal/concurrent/TaskRunner$runnable$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L144fa4.  v0:= v8.`okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L144fa8.  @monitorenter v0
  #L144faa.  v1:= v8.`okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L144fae.  call temp:= `awaitTaskToRun`(v1) @signature `Lokhttp3/internal/concurrent/TaskRunner;.awaitTaskToRun:()Lokhttp3/internal/concurrent/Task;` @kind virtual;
  #L144fb4.  v1:= temp @kind object;
  #L144fb6.  @monitorexit v0
  #L144fb8.  if v1 == 0 then goto L1450d2;
  #L144fbc.  call temp:= `getQueue$okhttp`(v1) @signature `Lokhttp3/internal/concurrent/Task;.getQueue$okhttp:()Lokhttp3/internal/concurrent/TaskQueue;` @kind virtual;
  #L144fc2.  v0:= temp @kind object;
  #L144fc4.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L144fca.  v2:= -1L;
  #L144fce.  v4:= `@@okhttp3.internal.concurrent.TaskRunner.Companion` @type ^`okhttp3.internal.concurrent.TaskRunner$Companion` @kind object;
  #L144fd2.  call temp:= `getLogger`(v4) @signature `Lokhttp3/internal/concurrent/TaskRunner$Companion;.getLogger:()Ljava/util/logging/Logger;` @kind virtual;
  #L144fd8.  v4:= temp @kind object;
  #L144fda.  v5:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L144fde.  call temp:= `isLoggable`(v4, v5) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L144fe4.  v4:= temp;
  #L144fe6.  if v4 == 0 then goto L14500c;
  #L144fea.  call temp:= `getTaskRunner$okhttp`(v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @kind virtual;
  #L144ff0.  v2:= temp @kind object;
  #L144ff2.  call temp:= `getBackend`(v2) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L144ff8.  v2:= temp @kind object;
  #L144ffa.  call temp:= `nanoTime`(v2) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.nanoTime:()J` @kind interface;
  #L145000.  v2:= temp @kind wide;
  #L145002.  v5:= "starting" @kind object;
  #L145006.  call `access$log`(v1, v0, v5) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L14500c.  v5:= v8.`okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L145010.  call `access$runTask`(v5, v1) @signature `Lokhttp3/internal/concurrent/TaskRunner;.access$runTask:(Lokhttp3/internal/concurrent/TaskRunner;Lokhttp3/internal/concurrent/Task;)V` @kind static;
  #L145016.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L14501a.  if v4 == 0 then goto L144fa4;
  #L14501e.  call temp:= `getTaskRunner$okhttp`(v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @kind virtual;
  #L145024.  v4:= temp @kind object;
  #L145026.  call temp:= `getBackend`(v4) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L14502c.  v4:= temp @kind object;
  #L14502e.  call temp:= `nanoTime`(v4) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.nanoTime:()J` @kind interface;
  #L145034.  v4:= temp @kind wide;
  #L145036.  v4:= v4 - v2 @kind long;
  #L145038.  v2:= new `java.lang.StringBuilder`;
  #L14503c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L145042.  v3:= "finished run in " @kind object;
  #L145046.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14504c.  call temp:= `formatDuration`(v4) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.formatDuration:(J)Ljava/lang/String;` @kind static;
  #L145052.  v3:= temp @kind object;
  #L145054.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14505a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L145060.  v2:= temp @kind object;
  #L145062.  call `access$log`(v1, v0, v2) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L145068.  goto L144fa4;
  #L14506a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14506c.  v6:= v8.`okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L145070.  call temp:= `getBackend`(v6) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L145076.  v6:= temp @kind object;
  #L145078.  call `execute`(v6, v8) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L14507e.  throw v5;
  #L145080.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L145082.  if v4 == 0 then goto L1450d0;
  #L145086.  call temp:= `getTaskRunner$okhttp`(v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @kind virtual;
  #L14508c.  v4:= temp @kind object;
  #L14508e.  call temp:= `getBackend`(v4) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L145094.  v4:= temp @kind object;
  #L145096.  call temp:= `nanoTime`(v4) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.nanoTime:()J` @kind interface;
  #L14509c.  v6:= temp @kind wide;
  #L14509e.  v6:= v6 - v2 @kind long;
  #L1450a0.  v2:= new `java.lang.StringBuilder`;
  #L1450a4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1450aa.  v3:= "failed a run in " @kind object;
  #L1450ae.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1450b4.  call temp:= `formatDuration`(v6) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.formatDuration:(J)Ljava/lang/String;` @kind static;
  #L1450ba.  v3:= temp @kind object;
  #L1450bc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1450c2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1450c8.  v2:= temp @kind object;
  #L1450ca.  call `access$log`(v1, v0, v2) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L1450d0.  throw v5;
  #L1450d2.  return @kind void;
  #L1450d4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1450d6.  @monitorexit v0
  #L1450d8.  throw v1;
  catch `java.lang.Throwable` @[L144faa..L144fb6] goto L1450d4;
  catch `java.lang.Throwable` @[L14500c..L145016] goto L14506a;
  catch `java.lang.Throwable` @[L145016..L14501a] goto L145080;
  catch `java.lang.Throwable` @[L14506c..L145080] goto L145080;
}
