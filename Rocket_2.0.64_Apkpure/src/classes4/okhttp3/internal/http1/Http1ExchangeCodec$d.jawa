record `okhttp3.internal.http1.Http1ExchangeCodec$d` @kind class @AccessFlag FINAL extends `okhttp3.internal.http1.Http1ExchangeCodec$a` @kind class {
  `long` `okhttp3.internal.http1.Http1ExchangeCodec$d.d` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1ExchangeCodec` `okhttp3.internal.http1.Http1ExchangeCodec$d.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1ExchangeCodec$d` v2 @kind this, `okhttp3.internal.http1.Http1ExchangeCodec` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$d;.<init>:(Lokhttp3/internal/http1/Http1ExchangeCodec;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L14d514.  v2.`okhttp3.internal.http1.Http1ExchangeCodec$d.e` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` := v3 @kind object;
  #L14d518.  call `<init>`(v2, v3) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$a;.<init>:(Lokhttp3/internal/http1/Http1ExchangeCodec;)V` @kind direct;
  #L14d51e.  v2.`okhttp3.internal.http1.Http1ExchangeCodec$d.d` @type ^`long` := v4 @kind wide;
  #L14d522.  v0:= 0L;
  #L14d526.  v3:= lcmp(v4, v0);
  #L14d52a.  if v3 != 0 then goto L14d534;
  #L14d52e.  call `b`(v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$a;.b:()V` @kind virtual;
  #L14d534.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1ExchangeCodec$d` v5 @kind this) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$d;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L14d548.  call temp:= `a`(v5) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$a;.a:()Z` @kind virtual;
  #L14d54e.  v0:= temp;
  #L14d550.  if v0 == 0 then goto L14d556;
  #L14d554.  return @kind void;
  #L14d556.  v0:= v5.`okhttp3.internal.http1.Http1ExchangeCodec$d.d` @type ^`long` @kind wide;
  #L14d55a.  v2:= 0L;
  #L14d55e.  v4:= lcmp(v0, v2);
  #L14d562.  if v4 == 0 then goto L14d592;
  #L14d566.  v0:= 100I;
  #L14d56a.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14d56e.  call temp:= `discard`(v5, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L14d574.  v0:= temp;
  #L14d576.  if v0 != 0 then goto L14d592;
  #L14d57a.  v0:= v5.`okhttp3.internal.http1.Http1ExchangeCodec$d.e` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L14d57e.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L14d584.  v0:= temp @kind object;
  #L14d586.  call `noNewExchanges$okhttp`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges$okhttp:()V` @kind virtual;
  #L14d58c.  call `b`(v5) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$a;.b:()V` @kind virtual;
  #L14d592.  v0:= 1I;
  #L14d594.  call `c`(v5, v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$a;.c:(Z)V` @kind virtual;
  #L14d59a.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1ExchangeCodec$d` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$d;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L14d418.  v0:= "sink" @kind object;
  #L14d41c.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14d422.  v0:= 1I;
  #L14d424.  v1:= 0L;
  #L14d428.  v3:= lcmp(v9, v1);
  #L14d42c.  if v3 < 0 then goto L14d434;
  #L14d430.  v3:= 1I;
  #L14d432.  goto L14d436;
  #L14d434.  v3:= 0I;
  #L14d436.  if v3 == 0 then goto L14d4cc;
  #L14d43a.  call temp:= `a`(v7) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$a;.a:()Z` @kind virtual;
  #L14d440.  v3:= temp;
  #L14d442.  v0:= v0 ^~ v3 @kind int;
  #L14d444.  if v0 == 0 then goto L14d4b4;
  #L14d448.  v3:= v7.`okhttp3.internal.http1.Http1ExchangeCodec$d.d` @type ^`long` @kind wide;
  #L14d44c.  v5:= -1L;
  #L14d450.  v0:= lcmp(v3, v1);
  #L14d454.  if v0 != 0 then goto L14d45a;
  #L14d458.  return v5 @kind wide;
  #L14d45a.  call temp:= `min`(v3, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L14d460.  v9:= temp @kind wide;
  #L14d462.  call temp:= `read`(v7, v8, v9) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$a;.read:(Lokio/Buffer;J)J` @kind super;
  #L14d468.  v8:= temp @kind wide;
  #L14d46a.  v10:= lcmp(v8, v5);
  #L14d46e.  if v10 == 0 then goto L14d48c;
  #L14d472.  v3:= v7.`okhttp3.internal.http1.Http1ExchangeCodec$d.d` @type ^`long` @kind wide;
  #L14d476.  v3:= v3 - v8 @kind long;
  #L14d478.  v7.`okhttp3.internal.http1.Http1ExchangeCodec$d.d` @type ^`long` := v3 @kind wide;
  #L14d47c.  v10:= lcmp(v3, v1);
  #L14d480.  if v10 != 0 then goto L14d48a;
  #L14d484.  call `b`(v7) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$a;.b:()V` @kind virtual;
  #L14d48a.  return v8 @kind wide;
  #L14d48c.  v8:= v7.`okhttp3.internal.http1.Http1ExchangeCodec$d.e` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L14d490.  call temp:= `getConnection`(v8) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L14d496.  v8:= temp @kind object;
  #L14d498.  call `noNewExchanges$okhttp`(v8) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges$okhttp:()V` @kind virtual;
  #L14d49e.  v8:= new `java.net.ProtocolException`;
  #L14d4a2.  v9:= "unexpected end of stream" @kind object;
  #L14d4a6.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14d4ac.  call `b`(v7) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$a;.b:()V` @kind virtual;
  #L14d4b2.  throw v8;
  #L14d4b4.  v8:= new `java.lang.IllegalStateException`;
  #L14d4b8.  v9:= "closed" @kind object;
  #L14d4bc.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d4c2.  v9:= temp @kind object;
  #L14d4c4.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14d4ca.  throw v8;
  #L14d4cc.  v8:= new `java.lang.StringBuilder`;
  #L14d4d0.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d4d6.  v0:= "byteCount < 0: " @kind object;
  #L14d4da.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d4e0.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d4e6.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d4ec.  v8:= temp @kind object;
  #L14d4ee.  v9:= new `java.lang.IllegalArgumentException`;
  #L14d4f2.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d4f8.  v8:= temp @kind object;
  #L14d4fa.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14d500.  throw v9;
}
