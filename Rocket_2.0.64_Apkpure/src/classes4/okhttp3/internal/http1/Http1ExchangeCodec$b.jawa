record `okhttp3.internal.http1.Http1ExchangeCodec$b` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `okio.ForwardingTimeout` `okhttp3.internal.http1.Http1ExchangeCodec$b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http1.Http1ExchangeCodec$b.b` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1ExchangeCodec` `okhttp3.internal.http1.Http1ExchangeCodec$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1ExchangeCodec$b` v1 @kind this, `okhttp3.internal.http1.Http1ExchangeCodec` v2 @kind object) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$b;.<init>:(Lokhttp3/internal/http1/Http1ExchangeCodec;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14cf08.  v1.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` := v2 @kind object;
  #L14cf0c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14cf12.  v0:= new `okio.ForwardingTimeout`;
  #L14cf16.  call temp:= `access$getSink$p`(v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L14cf1c.  v2:= temp @kind object;
  #L14cf1e.  call temp:= `timeout`(v2) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L14cf24.  v2:= temp @kind object;
  #L14cf26.  call `<init>`(v0, v2) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L14cf2c.  v1.`okhttp3.internal.http1.Http1ExchangeCodec$b.a` @type ^`okio.ForwardingTimeout` := v0 @kind object;
  #L14cf30.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1ExchangeCodec$b` v2 @kind this) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14cf44.  @monitorenter v2
  #L14cf46.  v0:= v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.b` @type ^`boolean` @kind boolean;
  #L14cf4a.  if v0 == 0 then goto L14cf52;
  #L14cf4e.  @monitorexit v2
  #L14cf50.  return @kind void;
  #L14cf52.  v0:= 1I;
  #L14cf54.  v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.b` @type ^`boolean` := v0 @kind boolean;
  #L14cf58.  v0:= v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L14cf5c.  call temp:= `access$getSink$p`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L14cf62.  v0:= temp @kind object;
  #L14cf64.  v1:= "0\r\n\r\n" @kind object;
  #L14cf68.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L14cf6e.  v0:= v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L14cf72.  v1:= v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.a` @type ^`okio.ForwardingTimeout` @kind object;
  #L14cf76.  call `access$detachTimeout`(v0, v1) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$detachTimeout:(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokio/ForwardingTimeout;)V` @kind static;
  #L14cf7c.  v0:= v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L14cf80.  v1:= 3I;
  #L14cf82.  call `access$setState$p`(v0, v1) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$setState$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;I)V` @kind static;
  #L14cf88.  @monitorexit v2
  #L14cf8a.  return @kind void;
  #L14cf8c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14cf8e.  @monitorexit v2
  #L14cf90.  throw v0;
  catch `java.lang.Throwable` @[L14cf46..L14cf4a] goto L14cf8c;
  catch `java.lang.Throwable` @[L14cf54..L14cf88] goto L14cf8c;
}
procedure `void` `flush`(`okhttp3.internal.http1.Http1ExchangeCodec$b` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$b;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14cfb8.  @monitorenter v1
  #L14cfba.  v0:= v1.`okhttp3.internal.http1.Http1ExchangeCodec$b.b` @type ^`boolean` @kind boolean;
  #L14cfbe.  if v0 == 0 then goto L14cfc6;
  #L14cfc2.  @monitorexit v1
  #L14cfc4.  return @kind void;
  #L14cfc6.  v0:= v1.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L14cfca.  call temp:= `access$getSink$p`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L14cfd0.  v0:= temp @kind object;
  #L14cfd2.  call `flush`(v0) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L14cfd8.  @monitorexit v1
  #L14cfda.  return @kind void;
  #L14cfdc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14cfde.  @monitorexit v1
  #L14cfe0.  throw v0;
  catch `java.lang.Throwable` @[L14cfba..L14cfbe] goto L14cfdc;
  catch `java.lang.Throwable` @[L14cfc6..L14cfd8] goto L14cfdc;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http1.Http1ExchangeCodec$b` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$b;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14cef0.  v0:= v1.`okhttp3.internal.http1.Http1ExchangeCodec$b.a` @type ^`okio.ForwardingTimeout` @kind object;
  #L14cef4.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http1.Http1ExchangeCodec$b` v3 @kind this, `okio.Buffer` v4 @kind object, `long` v5 ) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$b;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14d008.  v0:= "source" @kind object;
  #L14d00c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14d012.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$b.b` @type ^`boolean` @kind boolean;
  #L14d016.  v0:= v0 ^~ 1;
  #L14d01a.  if v0 == 0 then goto L14d07a;
  #L14d01e.  v0:= 0L;
  #L14d022.  v2:= lcmp(v5, v0);
  #L14d026.  if v2 != 0 then goto L14d02c;
  #L14d02a.  return @kind void;
  #L14d02c.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L14d030.  call temp:= `access$getSink$p`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L14d036.  v0:= temp @kind object;
  #L14d038.  call temp:= `writeHexadecimalUnsignedLong`(v0, v5) @signature `Lokio/BufferedSink;.writeHexadecimalUnsignedLong:(J)Lokio/BufferedSink;` @kind interface;
  #L14d03e.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L14d042.  call temp:= `access$getSink$p`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L14d048.  v0:= temp @kind object;
  #L14d04a.  v1:= "\r\n" @kind object;
  #L14d04e.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L14d054.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L14d058.  call temp:= `access$getSink$p`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L14d05e.  v0:= temp @kind object;
  #L14d060.  call `write`(v0, v4, v5) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L14d066.  v4:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L14d06a.  call temp:= `access$getSink$p`(v4) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L14d070.  v4:= temp @kind object;
  #L14d072.  call temp:= `writeUtf8`(v4, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L14d078.  return @kind void;
  #L14d07a.  v4:= new `java.lang.IllegalStateException`;
  #L14d07e.  v5:= "closed" @kind object;
  #L14d082.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d088.  v5:= temp @kind object;
  #L14d08a.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14d090.  throw v4;
}
