record `okhttp3.internal.http1.HeadersReader` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `okhttp3.internal.http1.HeadersReader.a` @AccessFlag PRIVATE;
  `okio.BufferedSource` `okhttp3.internal.http1.HeadersReader.b` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.http1.HeadersReader$Companion` `@@okhttp3.internal.http1.HeadersReader.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http1/HeadersReader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L14cd30.  v0:= new `okhttp3.internal.http1.HeadersReader$Companion`;
  #L14cd34.  v1:= 0I;
  #L14cd36.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http1/HeadersReader$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L14cd3c.  `@@okhttp3.internal.http1.HeadersReader.Companion` @type ^`okhttp3.internal.http1.HeadersReader$Companion` := v0 @kind object;
  #L14cd40.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http1.HeadersReader` v2 @kind this, `okio.BufferedSource` v3 @kind object) @signature `Lokhttp3/internal/http1/HeadersReader;.<init>:(Lokio/BufferedSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L14cd54.  v0:= "source" @kind object;
  #L14cd58.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14cd5e.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14cd64.  v2.`okhttp3.internal.http1.HeadersReader.b` @type ^`okio.BufferedSource` := v3 @kind object;
  #L14cd68.  v3:= 262144I;
  #L14cd6c.  v0:= (`long`) v3 @kind i2l;
  #L14cd6e.  v2.`okhttp3.internal.http1.HeadersReader.a` @type ^`long` := v0 @kind wide;
  #L14cd72.  return @kind void;
}
procedure `okio.BufferedSource` `getSource`(`okhttp3.internal.http1.HeadersReader` v1 @kind this) @signature `Lokhttp3/internal/http1/HeadersReader;.getSource:()Lokio/BufferedSource;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14cd18.  v0:= v1.`okhttp3.internal.http1.HeadersReader.b` @type ^`okio.BufferedSource` @kind object;
  #L14cd1c.  return v0 @kind object;
}
procedure `okhttp3.Headers` `readHeaders`(`okhttp3.internal.http1.HeadersReader` v3 @kind this) @signature `Lokhttp3/internal/http1/HeadersReader;.readHeaders:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L14cccc.  v0:= new `okhttp3.Headers$Builder`;
  #L14ccd0.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L14ccd6.  call temp:= `readLine`(v3) @signature `Lokhttp3/internal/http1/HeadersReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L14ccdc.  v1:= temp @kind object;
  #L14ccde.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L14cce4.  v2:= temp;
  #L14cce6.  if v2 != 0 then goto L14ccee;
  #L14ccea.  v2:= 1I;
  #L14ccec.  goto L14ccf0;
  #L14ccee.  v2:= 0I;
  #L14ccf0.  if v2 == 0 then goto L14ccfe;
  #L14ccf4.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L14ccfa.  v0:= temp @kind object;
  #L14ccfc.  return v0 @kind object;
  #L14ccfe.  call temp:= `addLenient$okhttp`(v0, v1) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L14cd04.  goto L14ccd6;
}
procedure `java.lang.String` `readLine`(`okhttp3.internal.http1.HeadersReader` v5 @kind this) @signature `Lokhttp3/internal/http1/HeadersReader;.readLine:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L14cc94.  v0:= v5.`okhttp3.internal.http1.HeadersReader.b` @type ^`okio.BufferedSource` @kind object;
  #L14cc98.  v1:= v5.`okhttp3.internal.http1.HeadersReader.a` @type ^`long` @kind wide;
  #L14cc9c.  call temp:= `readUtf8LineStrict`(v0, v1) @signature `Lokio/BufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @kind interface;
  #L14cca2.  v0:= temp @kind object;
  #L14cca4.  v1:= v5.`okhttp3.internal.http1.HeadersReader.a` @type ^`long` @kind wide;
  #L14cca8.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14ccae.  v3:= temp;
  #L14ccb0.  v3:= (`long`) v3 @kind i2l;
  #L14ccb2.  v1:= v1 - v3 @kind long;
  #L14ccb4.  v5.`okhttp3.internal.http1.HeadersReader.a` @type ^`long` := v1 @kind wide;
  #L14ccb8.  return v0 @kind object;
}
