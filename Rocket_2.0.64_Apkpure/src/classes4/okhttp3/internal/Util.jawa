record `okhttp3.internal.Util` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.Headers` `@@okhttp3.internal.Util.EMPTY_HEADERS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.RequestBody` `@@okhttp3.internal.Util.EMPTY_REQUEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ResponseBody` `@@okhttp3.internal.Util.EMPTY_RESPONSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@okhttp3.internal.Util.UTC` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.Options` `@@okhttp3.internal.Util.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@okhttp3.internal.Util.assertionsEnabled` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlin.text.Regex` `@@okhttp3.internal.Util.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.Util.okHttpName` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.Util.userAgent` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L13f5c8.  v0:= 0I;
  #L13f5ca.  v2:= new `byte`[v0];
  #L13f5ce.  `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] := v2 @kind object;
  #L13f5d2.  v1:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L13f5d6.  v3:= new `java.lang.String`[v0];
  #L13f5da.  call temp:= `of`(v1, v3) @signature `Lokhttp3/Headers$Companion;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind virtual;
  #L13f5e0.  v1:= temp @kind object;
  #L13f5e2.  `@@okhttp3.internal.Util.EMPTY_HEADERS` @type ^`okhttp3.Headers` := v1 @kind object;
  #L13f5e6.  v1:= `@@okhttp3.ResponseBody.Companion` @type ^`okhttp3.ResponseBody$Companion` @kind object;
  #L13f5ea.  v3:= 0I;
  #L13f5ec.  v8:= 1I;
  #L13f5ee.  call temp:= `create$default`(v1, v2, v3, v8, v3) @signature `Lokhttp3/ResponseBody$Companion;.create$default:(Lokhttp3/ResponseBody$Companion;[BLokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/ResponseBody;` @kind static;
  #L13f5f4.  v1:= temp @kind object;
  #L13f5f6.  `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` := v1 @kind object;
  #L13f5fa.  v1:= `@@okhttp3.RequestBody.Companion` @type ^`okhttp3.RequestBody$Companion` @kind object;
  #L13f5fe.  v4:= 0I;
  #L13f600.  v5:= 0I;
  #L13f602.  v6:= 7I;
  #L13f604.  v7:= 0I;
  #L13f606.  call temp:= `create$default`(v1, v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L13f60c.  v1:= temp @kind object;
  #L13f60e.  `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` := v1 @kind object;
  #L13f612.  v1:= `@@okio.Options.Companion` @type ^`okio.Options$Companion` @kind object;
  #L13f616.  v2:= 5I;
  #L13f618.  v2:= new `okio.ByteString`[v2];
  #L13f61c.  v3:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L13f620.  v4:= "efbbbf" @kind object;
  #L13f624.  call temp:= `decodeHex`(v3, v4) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L13f62a.  v4:= temp @kind object;
  #L13f62c.  v2[v0]:= v4 @kind object;
  #L13f630.  v4:= "feff" @kind object;
  #L13f634.  call temp:= `decodeHex`(v3, v4) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L13f63a.  v4:= temp @kind object;
  #L13f63c.  v2[v8]:= v4 @kind object;
  #L13f640.  v4:= "fffe" @kind object;
  #L13f644.  call temp:= `decodeHex`(v3, v4) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L13f64a.  v4:= temp @kind object;
  #L13f64c.  v5:= 2I;
  #L13f64e.  v2[v5]:= v4 @kind object;
  #L13f652.  v4:= "0000ffff" @kind object;
  #L13f656.  call temp:= `decodeHex`(v3, v4) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L13f65c.  v4:= temp @kind object;
  #L13f65e.  v5:= 3I;
  #L13f660.  v2[v5]:= v4 @kind object;
  #L13f664.  v4:= "ffff0000" @kind object;
  #L13f668.  call temp:= `decodeHex`(v3, v4) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L13f66e.  v3:= temp @kind object;
  #L13f670.  v4:= 4I;
  #L13f672.  v2[v4]:= v3 @kind object;
  #L13f676.  call temp:= `of`(v1, v2) @signature `Lokio/Options$Companion;.of:([Lokio/ByteString;)Lokio/Options;` @kind virtual;
  #L13f67c.  v1:= temp @kind object;
  #L13f67e.  `@@okhttp3.internal.Util.a` @type ^`okio.Options` := v1 @kind object;
  #L13f682.  v1:= "GMT" @kind object;
  #L13f686.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L13f68c.  v1:= temp @kind object;
  #L13f68e.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L13f694.  `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` := v1 @kind object;
  #L13f698.  v1:= new `kotlin.text.Regex`;
  #L13f69c.  v2:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L13f6a0.  call `<init>`(v1, v2) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13f6a6.  `@@okhttp3.internal.Util.b` @type ^`kotlin.text.Regex` := v1 @kind object;
  #L13f6aa.  v1:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L13f6ae.  `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` := v0 @kind boolean;
  #L13f6b2.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L13f6b6.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L13f6bc.  v0:= temp @kind object;
  #L13f6be.  v1:= "OkHttpClient::class.java.name" @kind object;
  #L13f6c2.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f6c8.  v1:= "okhttp3." @kind object;
  #L13f6cc.  call temp:= `removePrefix`(v0, v1) @signature `Lkotlin/text/StringsKt;.removePrefix:(Ljava/lang/String;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L13f6d2.  v0:= temp @kind object;
  #L13f6d4.  v1:= "Client" @kind object;
  #L13f6d8.  call temp:= `removeSuffix`(v0, v1) @signature `Lkotlin/text/StringsKt;.removeSuffix:(Ljava/lang/String;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L13f6de.  v0:= temp @kind object;
  #L13f6e0.  `@@okhttp3.internal.Util.okHttpName` @type ^`java.lang.String` := v0 @kind object;
  #L13f6e4.  return @kind void;
}
procedure `void` `addIfAbsent`(`java.util.List` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/internal/Util;.addIfAbsent:(Ljava/util/List;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f6f8.  v0:= "$this$addIfAbsent" @kind object;
  #L13f6fc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f702.  call temp:= `contains`(v1, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L13f708.  v0:= temp;
  #L13f70a.  if v0 != 0 then goto L13f714;
  #L13f70e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13f714.  return @kind void;
}
procedure `int` `and`(`byte` v0 , `int` v1 ) @signature `Lokhttp3/internal/Util;.and:(BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L13e78c.  v0:= v0 ^& v1 @kind int;
  #L13e78e.  return v0;
}
procedure `int` `and`(`short` v0 , `int` v1 ) @signature `Lokhttp3/internal/Util;.and:(SI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L13e7a0.  v0:= v0 ^& v1 @kind int;
  #L13e7a2.  return v0;
}
procedure `long` `and`(`int` v2 , `long` v3 ) @signature `Lokhttp3/internal/Util;.and:(IJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13f49c.  v0:= (`long`) v2 @kind i2l;
  #L13f49e.  v2:= v0 ^& v3 @kind long;
  #L13f4a2.  return v2 @kind wide;
}
procedure `okhttp3.EventListener$Factory` `asFactory`(`okhttp3.EventListener` v1 @kind object) @signature `Lokhttp3/internal/Util;.asFactory:(Lokhttp3/EventListener;)Lokhttp3/EventListener$Factory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f528.  v0:= "$this$asFactory" @kind object;
  #L13f52c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f532.  v0:= new `okhttp3.internal.Util$a`;
  #L13f536.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/Util$a;.<init>:(Lokhttp3/EventListener;)V` @kind direct;
  #L13f53c.  return v0 @kind object;
}
procedure `void` `assertThreadDoesntHoldLock`(`java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/Util;.assertThreadDoesntHoldLock:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13f728.  v0:= "$this$assertThreadDoesntHoldLock" @kind object;
  #L13f72c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f732.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L13f736.  if v0 == 0 then goto L13f7a0;
  #L13f73a.  call temp:= `holdsLock`(v4) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L13f740.  v0:= temp;
  #L13f742.  if v0 != 0 then goto L13f748;
  #L13f746.  goto L13f7a0;
  #L13f748.  v0:= new `java.lang.AssertionError`;
  #L13f74c.  v1:= new `java.lang.StringBuilder`;
  #L13f750.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13f756.  v2:= "Thread " @kind object;
  #L13f75a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13f760.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L13f766.  v2:= temp @kind object;
  #L13f768.  v3:= "Thread.currentThread()" @kind object;
  #L13f76c.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f772.  call temp:= `getName`(v2) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L13f778.  v2:= temp @kind object;
  #L13f77a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13f780.  v2:= " MUST NOT hold lock on " @kind object;
  #L13f784.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13f78a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13f790.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13f796.  v4:= temp @kind object;
  #L13f798.  call `<init>`(v0, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L13f79e.  throw v0;
  #L13f7a0.  return @kind void;
}
procedure `void` `assertThreadHoldsLock`(`java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/Util;.assertThreadHoldsLock:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13f7b4.  v0:= "$this$assertThreadHoldsLock" @kind object;
  #L13f7b8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f7be.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L13f7c2.  if v0 == 0 then goto L13f82c;
  #L13f7c6.  call temp:= `holdsLock`(v4) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L13f7cc.  v0:= temp;
  #L13f7ce.  if v0 == 0 then goto L13f7d4;
  #L13f7d2.  goto L13f82c;
  #L13f7d4.  v0:= new `java.lang.AssertionError`;
  #L13f7d8.  v1:= new `java.lang.StringBuilder`;
  #L13f7dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13f7e2.  v2:= "Thread " @kind object;
  #L13f7e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13f7ec.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L13f7f2.  v2:= temp @kind object;
  #L13f7f4.  v3:= "Thread.currentThread()" @kind object;
  #L13f7f8.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f7fe.  call temp:= `getName`(v2) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L13f804.  v2:= temp @kind object;
  #L13f806.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13f80c.  v2:= " MUST hold lock on " @kind object;
  #L13f810.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13f816.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13f81c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13f822.  v4:= temp @kind object;
  #L13f824.  call `<init>`(v0, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L13f82a.  throw v0;
  #L13f82c.  return @kind void;
}
procedure `boolean` `canParseAsIpAddress`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/Util;.canParseAsIpAddress:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13e398.  v0:= "$this$canParseAsIpAddress" @kind object;
  #L13e39c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e3a2.  v0:= `@@okhttp3.internal.Util.b` @type ^`kotlin.text.Regex` @kind object;
  #L13e3a6.  call temp:= `matches`(v0, v1) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L13e3ac.  v1:= temp;
  #L13e3ae.  return v1;
}
procedure `boolean` `canReuseConnectionFor`(`okhttp3.HttpUrl` v2 @kind object, `okhttp3.HttpUrl` v3 @kind object) @signature `Lokhttp3/internal/Util;.canReuseConnectionFor:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13e3c0.  v0:= "$this$canReuseConnectionFor" @kind object;
  #L13e3c4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e3ca.  v0:= "other" @kind object;
  #L13e3ce.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e3d4.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L13e3da.  v0:= temp @kind object;
  #L13e3dc.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L13e3e2.  v1:= temp @kind object;
  #L13e3e4.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13e3ea.  v0:= temp;
  #L13e3ec.  if v0 == 0 then goto L13e424;
  #L13e3f0.  call temp:= `port`(v2) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L13e3f6.  v0:= temp;
  #L13e3f8.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L13e3fe.  v1:= temp;
  #L13e400.  if v0 != v1 then goto L13e424;
  #L13e404.  call temp:= `scheme`(v2) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L13e40a.  v2:= temp @kind object;
  #L13e40c.  call temp:= `scheme`(v3) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L13e412.  v3:= temp @kind object;
  #L13e414.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13e41a.  v2:= temp;
  #L13e41c.  if v2 == 0 then goto L13e424;
  #L13e420.  v2:= 1I;
  #L13e422.  goto L13e426;
  #L13e424.  v2:= 0I;
  #L13e426.  return v2;
}
procedure `int` `checkDuration`(`java.lang.String` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13e7b4.  v0:= "name" @kind object;
  #L13e7b8.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e7be.  v0:= 0L;
  #L13e7c2.  v2:= 1I;
  #L13e7c4.  v3:= 0I;
  #L13e7c6.  v4:= lcmp(v8, v0);
  #L13e7ca.  if v4 < 0 then goto L13e7d2;
  #L13e7ce.  v5:= 1I;
  #L13e7d0.  goto L13e7d4;
  #L13e7d2.  v5:= 0I;
  #L13e7d4.  if v5 == 0 then goto L13e8a4;
  #L13e7d8.  if v10 == 0 then goto L13e7e0;
  #L13e7dc.  v5:= 1I;
  #L13e7de.  goto L13e7e2;
  #L13e7e0.  v5:= 0I;
  #L13e7e2.  if v5 == 0 then goto L13e88c;
  #L13e7e6.  call temp:= `toMillis`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L13e7ec.  v8:= temp @kind wide;
  #L13e7ee.  v10:= 2147483647I;
  #L13e7f4.  v5:= (`long`) v10 @kind i2l;
  #L13e7f6.  v10:= lcmp(v8, v5);
  #L13e7fa.  if v10 > 0 then goto L13e802;
  #L13e7fe.  v10:= 1I;
  #L13e800.  goto L13e804;
  #L13e802.  v10:= 0I;
  #L13e804.  if v10 == 0 then goto L13e856;
  #L13e808.  v10:= lcmp(v8, v0);
  #L13e80c.  if v10 != 0 then goto L13e818;
  #L13e810.  if v4 > 0 then goto L13e816;
  #L13e814.  goto L13e818;
  #L13e816.  v2:= 0I;
  #L13e818.  if v2 == 0 then goto L13e820;
  #L13e81c.  v7:= (`int`) v8 @kind l2i;
  #L13e81e.  return v7;
  #L13e820.  v8:= new `java.lang.StringBuilder`;
  #L13e824.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13e82a.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e830.  v7:= " too small." @kind object;
  #L13e834.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e83a.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e840.  v7:= temp @kind object;
  #L13e842.  v8:= new `java.lang.IllegalArgumentException`;
  #L13e846.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e84c.  v7:= temp @kind object;
  #L13e84e.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e854.  throw v8;
  #L13e856.  v8:= new `java.lang.StringBuilder`;
  #L13e85a.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13e860.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e866.  v7:= " too large." @kind object;
  #L13e86a.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e870.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e876.  v7:= temp @kind object;
  #L13e878.  v8:= new `java.lang.IllegalArgumentException`;
  #L13e87c.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e882.  v7:= temp @kind object;
  #L13e884.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e88a.  throw v8;
  #L13e88c.  v7:= new `java.lang.IllegalStateException`;
  #L13e890.  v8:= "unit == null" @kind object;
  #L13e894.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e89a.  v8:= temp @kind object;
  #L13e89c.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e8a2.  throw v7;
  #L13e8a4.  v8:= new `java.lang.StringBuilder`;
  #L13e8a8.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13e8ae.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e8b4.  v7:= " < 0" @kind object;
  #L13e8b8.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e8be.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e8c4.  v7:= temp @kind object;
  #L13e8c6.  v8:= new `java.lang.IllegalStateException`;
  #L13e8ca.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e8d0.  v7:= temp @kind object;
  #L13e8d2.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e8d8.  throw v8;
}
procedure `void` `checkOffsetAndCount`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L13f840.  v0:= v7 ^| v9 @kind long;
  #L13f844.  v2:= 0L;
  #L13f848.  v4:= lcmp(v0, v2);
  #L13f84c.  if v4 < 0 then goto L13f864;
  #L13f850.  v0:= lcmp(v7, v5);
  #L13f854.  if v0 > 0 then goto L13f864;
  #L13f858.  v5:= v5 - v7 @kind long;
  #L13f85a.  v7:= lcmp(v5, v9);
  #L13f85e.  if v7 < 0 then goto L13f864;
  #L13f862.  return @kind void;
  #L13f864.  v5:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L13f868.  call `<init>`(v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L13f86e.  throw v5;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v1 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f880.  v0:= "$this$closeQuietly" @kind object;
  #L13f884.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f88a.  call `close`(v1) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L13f890.  return @kind void;
  #L13f892.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L13f894.  throw v1;
  catch `java.lang.RuntimeException` @[L13f88a..L13f890] goto L13f892;
  catch `java.lang.Exception` @[L13f88a..L13f890] goto L13f890;
}
procedure `void` `closeQuietly`(`java.net.ServerSocket` v1 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/ServerSocket;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f8b8.  v0:= "$this$closeQuietly" @kind object;
  #L13f8bc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f8c2.  call `close`(v1) @signature `Ljava/net/ServerSocket;.close:()V` @kind virtual;
  #L13f8c8.  return @kind void;
  #L13f8ca.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L13f8cc.  throw v1;
  catch `java.lang.RuntimeException` @[L13f8c2..L13f8c8] goto L13f8ca;
  catch `java.lang.Exception` @[L13f8c2..L13f8c8] goto L13f8c8;
}
procedure `void` `closeQuietly`(`java.net.Socket` v2 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13f8f0.  v0:= "$this$closeQuietly" @kind object;
  #L13f8f4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f8fa.  call `close`(v2) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L13f900.  return @kind void;
  #L13f902.  v2:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L13f904.  call temp:= `getMessage`(v2) @signature `Ljava/lang/RuntimeException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L13f90a.  v0:= temp @kind object;
  #L13f90c.  v1:= "bio == null" @kind object;
  #L13f910.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13f916.  v0:= temp;
  #L13f918.  if v0 == 0 then goto L13f91e;
  #L13f91c.  return @kind void;
  #L13f91e.  throw v2;
  #L13f920.  v2:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L13f922.  throw v2;
  catch `java.lang.AssertionError` @[L13f8fa..L13f900] goto L13f920;
  catch `java.lang.RuntimeException` @[L13f8fa..L13f900] goto L13f902;
  catch `java.lang.Exception` @[L13f8fa..L13f900] goto L13f900;
}
procedure `java.lang.String`[] `concat`(`java.lang.String`[] v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/Util;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f09c.  v0:= "$this$concat" @kind object;
  #L13f0a0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f0a6.  v0:= "value" @kind object;
  #L13f0aa.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f0b0.  v0:= length @variable v1;
  #L13f0b2.  v0:= v0 + 1;
  #L13f0b6.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L13f0bc.  v1:= temp @kind object;
  #L13f0be.  v0:= "java.util.Arrays.copyOf(this, newSize)" @kind object;
  #L13f0c2.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f0c8.  v1:= (`java.lang.String`[]) v1 @kind object;
  #L13f0cc.  call temp:= `getLastIndex`(v1) @signature `Lkotlin/collections/ArraysKt;.getLastIndex:([Ljava/lang/Object;)I` @kind static;
  #L13f0d2.  v0:= temp;
  #L13f0d4.  v1[v0]:= v2 @kind object;
  #L13f0d8.  return v1 @kind object;
}
procedure `int` `delimiterOffset`(`java.lang.String` v1 @kind object, `char` v2 , `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;CII)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13e954.  v0:= "$this$delimiterOffset" @kind object;
  #L13e958.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e95e.  if v3 >= v4 then goto L13e976;
  #L13e962.  call temp:= `charAt`(v1, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L13e968.  v0:= temp;
  #L13e96a.  if v0 != v2 then goto L13e970;
  #L13e96e.  return v3;
  #L13e970.  v3:= v3 + 1;
  #L13e974.  goto L13e95e;
  #L13e976.  return v4;
}
procedure `int` `delimiterOffset`(`java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13e988.  v0:= "$this$delimiterOffset" @kind object;
  #L13e98c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e992.  v0:= "delimiters" @kind object;
  #L13e996.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e99c.  if v6 >= v7 then goto L13e9c2;
  #L13e9a0.  call temp:= `charAt`(v4, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L13e9a6.  v0:= temp;
  #L13e9a8.  v1:= 0I;
  #L13e9aa.  v2:= 2I;
  #L13e9ac.  v3:= 0I;
  #L13e9ae.  call temp:= `contains$default`(v5, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;CZILjava/lang/Object;)Z` @kind static;
  #L13e9b4.  v0:= temp;
  #L13e9b6.  if v0 == 0 then goto L13e9bc;
  #L13e9ba.  return v6;
  #L13e9bc.  v6:= v6 + 1;
  #L13e9c0.  goto L13e99c;
  #L13e9c2.  return v7;
}
procedure `int` `delimiterOffset$default`(`java.lang.String` v0 @kind object, `char` v1 , `int` v2 , `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lokhttp3/internal/Util;.delimiterOffset$default:(Ljava/lang/String;CIIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13e8ec.  v5:= v4 ^& 2;
  #L13e8f0.  if v5 == 0 then goto L13e8f6;
  #L13e8f4.  v2:= 0I;
  #L13e8f6.  v4:= v4 ^& 4;
  #L13e8fa.  if v4 == 0 then goto L13e906;
  #L13e8fe.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13e904.  v3:= temp;
  #L13e906.  call temp:= `delimiterOffset`(v0, v1, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;CII)I` @kind static;
  #L13e90c.  v0:= temp;
  #L13e90e.  return v0;
}
procedure `int` `delimiterOffset$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lokhttp3/internal/Util;.delimiterOffset$default:(Ljava/lang/String;Ljava/lang/String;IIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13e920.  v5:= v4 ^& 2;
  #L13e924.  if v5 == 0 then goto L13e92a;
  #L13e928.  v2:= 0I;
  #L13e92a.  v4:= v4 ^& 4;
  #L13e92e.  if v4 == 0 then goto L13e93a;
  #L13e932.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13e938.  v3:= temp;
  #L13e93a.  call temp:= `delimiterOffset`(v0, v1, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;Ljava/lang/String;II)I` @kind static;
  #L13e940.  v0:= temp;
  #L13e942.  return v0;
}
procedure `boolean` `discard`(`okio.Source` v1 @kind object, `int` v2 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13e438.  v0:= "$this$discard" @kind object;
  #L13e43c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e442.  v0:= "timeUnit" @kind object;
  #L13e446.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e44c.  call temp:= `skipAll`(v1, v2, v3) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L13e452.  v1:= temp;
  #L13e454.  goto L13e458;
  #L13e456.  v1:= 0I;
  #L13e458.  return v1;
  catch `java.io.IOException` @[L13e44c..L13e454] goto L13e456;
}
procedure `java.util.List` `filterList`(`java.lang.Iterable` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lokhttp3/internal/Util;.filterList:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13f290.  v0:= "$this$filterList" @kind object;
  #L13f294.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f29a.  v0:= "predicate" @kind object;
  #L13f29e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f2a4.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L13f2aa.  v0:= temp @kind object;
  #L13f2ac.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13f2b2.  v3:= temp @kind object;
  #L13f2b4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13f2ba.  v1:= temp;
  #L13f2bc.  if v1 == 0 then goto L13f306;
  #L13f2c0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13f2c6.  v1:= temp @kind object;
  #L13f2c8.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13f2ce.  v2:= temp @kind object;
  #L13f2d0.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L13f2d4.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L13f2da.  v2:= temp;
  #L13f2dc.  if v2 == 0 then goto L13f2b4;
  #L13f2e0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L13f2e6.  v2:= temp;
  #L13f2e8.  if v2 == 0 then goto L13f2f6;
  #L13f2ec.  v0:= new `java.util.ArrayList`;
  #L13f2f0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L13f2f6.  call temp:= `asMutableList`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L13f2fc.  v2:= temp @kind object;
  #L13f2fe.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13f304.  goto L13f2b4;
  #L13f306.  return v0 @kind object;
}
procedure `java.lang.String` `format`(`java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13ee50.  v0:= "format" @kind object;
  #L13ee54.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ee5a.  v0:= "args" @kind object;
  #L13ee5e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ee64.  v0:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L13ee68.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L13ee6c.  v1:= length @variable v3;
  #L13ee6e.  call temp:= `copyOf`(v3, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L13ee74.  v3:= temp @kind object;
  #L13ee76.  v1:= length @variable v3;
  #L13ee78.  call temp:= `copyOf`(v3, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L13ee7e.  v3:= temp @kind object;
  #L13ee80.  call temp:= `format`(v0, v2, v3) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L13ee86.  v2:= temp @kind object;
  #L13ee88.  v3:= "java.lang.String.format(locale, format, *args)" @kind object;
  #L13ee8c.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ee92.  return v2 @kind object;
}
procedure `boolean` `hasIntersection`(`java.lang.String`[] v8 @kind object, `java.lang.String`[] v9 @kind object, `java.util.Comparator` v10 @kind object) @signature `Lokhttp3/internal/Util;.hasIntersection:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L13e47c.  v0:= "$this$hasIntersection" @kind object;
  #L13e480.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e486.  v0:= "comparator" @kind object;
  #L13e48a.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e490.  v0:= length @variable v8;
  #L13e492.  v1:= 1I;
  #L13e494.  v2:= 0I;
  #L13e496.  if v0 != 0 then goto L13e49e;
  #L13e49a.  v0:= 1I;
  #L13e49c.  goto L13e4a0;
  #L13e49e.  v0:= 0I;
  #L13e4a0.  if v0 != 0 then goto L13e4ec;
  #L13e4a4.  if v9 == 0 then goto L13e4ec;
  #L13e4a8.  v0:= length @variable v9;
  #L13e4aa.  if v0 != 0 then goto L13e4b2;
  #L13e4ae.  v0:= 1I;
  #L13e4b0.  goto L13e4b4;
  #L13e4b2.  v0:= 0I;
  #L13e4b4.  if v0 == 0 then goto L13e4ba;
  #L13e4b8.  goto L13e4ec;
  #L13e4ba.  v0:= length @variable v8;
  #L13e4bc.  v3:= 0I;
  #L13e4be.  if v3 >= v0 then goto L13e4ec;
  #L13e4c2.  v4:= v8[v3] @kind object;
  #L13e4c6.  v5:= length @variable v9;
  #L13e4c8.  v6:= 0I;
  #L13e4ca.  if v6 >= v5 then goto L13e4e6;
  #L13e4ce.  v7:= v9[v6] @kind object;
  #L13e4d2.  call temp:= `compare`(v10, v4, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L13e4d8.  v7:= temp;
  #L13e4da.  if v7 != 0 then goto L13e4e0;
  #L13e4de.  return v1;
  #L13e4e0.  v6:= v6 + 1;
  #L13e4e4.  goto L13e4ca;
  #L13e4e6.  v3:= v3 + 1;
  #L13e4ea.  goto L13e4be;
  #L13e4ec.  return v2;
}
procedure `long` `headersContentLength`(`okhttp3.Response` v2 @kind object) @signature `Lokhttp3/internal/Util;.headersContentLength:(Lokhttp3/Response;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13f4b4.  v0:= "$this$headersContentLength" @kind object;
  #L13f4b8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f4be.  call temp:= `headers`(v2) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L13f4c4.  v2:= temp @kind object;
  #L13f4c6.  v0:= "Content-Length" @kind object;
  #L13f4ca.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L13f4d0.  v2:= temp @kind object;
  #L13f4d2.  v0:= -1L;
  #L13f4d6.  if v2 == 0 then goto L13f4e2;
  #L13f4da.  call temp:= `toLongOrDefault`(v2, v0) @signature `Lokhttp3/internal/Util;.toLongOrDefault:(Ljava/lang/String;J)J` @kind static;
  #L13f4e0.  v0:= temp @kind wide;
  #L13f4e2.  return v0 @kind wide;
}
procedure `void` `ignoreIoExceptions`(`kotlin.jvm.functions.Function0` v1 @kind object) @signature `Lokhttp3/internal/Util;.ignoreIoExceptions:(Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f948.  v0:= "block" @kind object;
  #L13f94c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f952.  call temp:= `invoke`(v1) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L13f958.  return @kind void;
  catch `java.io.IOException` @[L13f952..L13f958] goto L13f958;
}
procedure `java.util.List` `immutableListOf`(`java.lang.Object`[] v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableListOf:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f318.  v0:= "elements" @kind object;
  #L13f31c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f322.  call temp:= `clone`(v1) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L13f328.  v1:= temp @kind object;
  #L13f32a.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L13f32e.  v0:= length @variable v1;
  #L13f330.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L13f336.  v1:= temp @kind object;
  #L13f338.  call temp:= `listOf`(v1) @signature `Lkotlin/collections/CollectionsKt;.listOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L13f33e.  v1:= temp @kind object;
  #L13f340.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L13f346.  v1:= temp @kind object;
  #L13f348.  v0:= "Collections.unmodifiable…istOf(*elements.clone()))" @kind object;
  #L13f34c.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f352.  return v1 @kind object;
}
procedure `int` `indexOf`(`java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object, `java.util.Comparator` v6 @kind object) @signature `Lokhttp3/internal/Util;.indexOf:([Ljava/lang/String;Ljava/lang/String;Ljava/util/Comparator;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13e9d4.  v0:= "$this$indexOf" @kind object;
  #L13e9d8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e9de.  v0:= "value" @kind object;
  #L13e9e2.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e9e8.  v0:= "comparator" @kind object;
  #L13e9ec.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e9f2.  v0:= length @variable v4;
  #L13e9f4.  v1:= 0I;
  #L13e9f6.  v2:= 0I;
  #L13e9f8.  if v2 >= v0 then goto L13ea1e;
  #L13e9fc.  v3:= v4[v2] @kind object;
  #L13ea00.  call temp:= `compare`(v6, v3, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L13ea06.  v3:= temp;
  #L13ea08.  if v3 != 0 then goto L13ea10;
  #L13ea0c.  v3:= 1I;
  #L13ea0e.  goto L13ea12;
  #L13ea10.  v3:= 0I;
  #L13ea12.  if v3 == 0 then goto L13ea18;
  #L13ea16.  goto L13ea20;
  #L13ea18.  v2:= v2 + 1;
  #L13ea1c.  goto L13e9f8;
  #L13ea1e.  v2:= -1I;
  #L13ea20.  return v2;
}
procedure `int` `indexOfControlOrNonAscii`(`java.lang.String` v4 @kind object) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13ea34.  v0:= "$this$indexOfControlOrNonAscii" @kind object;
  #L13ea38.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ea3e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13ea44.  v0:= temp;
  #L13ea46.  v1:= 0I;
  #L13ea48.  if v1 >= v0 then goto L13ea7e;
  #L13ea4c.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L13ea52.  v2:= temp;
  #L13ea54.  v3:= 31I;
  #L13ea58.  call temp:= `compare`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L13ea5e.  v3:= temp;
  #L13ea60.  if v3 <= 0 then goto L13ea7c;
  #L13ea64.  v3:= 127I;
  #L13ea68.  call temp:= `compare`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L13ea6e.  v2:= temp;
  #L13ea70.  if v2 < 0 then goto L13ea76;
  #L13ea74.  goto L13ea7c;
  #L13ea76.  v1:= v1 + 1;
  #L13ea7a.  goto L13ea48;
  #L13ea7c.  return v1;
  #L13ea7e.  v4:= -1I;
  #L13ea80.  return v4;
}
procedure `int` `indexOfFirstNonAsciiWhitespace`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/Util;.indexOfFirstNonAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13eac8.  v0:= "$this$indexOfFirstNonAsciiWhitespace" @kind object;
  #L13eacc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ead2.  if v3 >= v4 then goto L13eb0e;
  #L13ead6.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L13eadc.  v0:= temp;
  #L13eade.  v1:= 9I;
  #L13eae2.  if v0 == v1 then goto L13eb08;
  #L13eae6.  v1:= 10I;
  #L13eaea.  if v0 == v1 then goto L13eb08;
  #L13eaee.  v1:= 12I;
  #L13eaf2.  if v0 == v1 then goto L13eb08;
  #L13eaf6.  v1:= 13I;
  #L13eafa.  if v0 == v1 then goto L13eb08;
  #L13eafe.  v1:= 32I;
  #L13eb02.  if v0 == v1 then goto L13eb08;
  #L13eb06.  return v3;
  #L13eb08.  v3:= v3 + 1;
  #L13eb0c.  goto L13ead2;
  #L13eb0e.  return v4;
}
procedure `int` `indexOfFirstNonAsciiWhitespace$default`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/Util;.indexOfFirstNonAsciiWhitespace$default:(Ljava/lang/String;IIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13ea94.  v4:= v3 ^& 1;
  #L13ea98.  if v4 == 0 then goto L13ea9e;
  #L13ea9c.  v1:= 0I;
  #L13ea9e.  v3:= v3 ^& 2;
  #L13eaa2.  if v3 == 0 then goto L13eaae;
  #L13eaa6.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13eaac.  v2:= temp;
  #L13eaae.  call temp:= `indexOfFirstNonAsciiWhitespace`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.indexOfFirstNonAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L13eab4.  v0:= temp;
  #L13eab6.  return v0;
}
procedure `int` `indexOfLastNonAsciiWhitespace`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/Util;.indexOfLastNonAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13eb54.  v0:= "$this$indexOfLastNonAsciiWhitespace" @kind object;
  #L13eb58.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13eb5e.  v4:= v4 + -1;
  #L13eb62.  if v4 < v3 then goto L13eba6;
  #L13eb66.  call temp:= `charAt`(v2, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L13eb6c.  v0:= temp;
  #L13eb6e.  v1:= 9I;
  #L13eb72.  if v0 == v1 then goto L13eb9c;
  #L13eb76.  v1:= 10I;
  #L13eb7a.  if v0 == v1 then goto L13eb9c;
  #L13eb7e.  v1:= 12I;
  #L13eb82.  if v0 == v1 then goto L13eb9c;
  #L13eb86.  v1:= 13I;
  #L13eb8a.  if v0 == v1 then goto L13eb9c;
  #L13eb8e.  v1:= 32I;
  #L13eb92.  if v0 == v1 then goto L13eb9c;
  #L13eb96.  v4:= v4 + 1;
  #L13eb9a.  return v4;
  #L13eb9c.  if v4 == v3 then goto L13eba6;
  #L13eba0.  v4:= v4 + -1;
  #L13eba4.  goto L13eb66;
  #L13eba6.  return v3;
}
procedure `int` `indexOfLastNonAsciiWhitespace$default`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/Util;.indexOfLastNonAsciiWhitespace$default:(Ljava/lang/String;IIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13eb20.  v4:= v3 ^& 1;
  #L13eb24.  if v4 == 0 then goto L13eb2a;
  #L13eb28.  v1:= 0I;
  #L13eb2a.  v3:= v3 ^& 2;
  #L13eb2e.  if v3 == 0 then goto L13eb3a;
  #L13eb32.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13eb38.  v2:= temp;
  #L13eb3a.  call temp:= `indexOfLastNonAsciiWhitespace`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.indexOfLastNonAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L13eb40.  v0:= temp;
  #L13eb42.  return v0;
}
procedure `int` `indexOfNonWhitespace`(`java.lang.String` v3 @kind object, `int` v4 ) @signature `Lokhttp3/internal/Util;.indexOfNonWhitespace:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13ebdc.  v0:= "$this$indexOfNonWhitespace" @kind object;
  #L13ebe0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ebe6.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13ebec.  v0:= temp;
  #L13ebee.  if v4 >= v0 then goto L13ec12;
  #L13ebf2.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L13ebf8.  v1:= temp;
  #L13ebfa.  v2:= 32I;
  #L13ebfe.  if v1 == v2 then goto L13ec0c;
  #L13ec02.  v2:= 9I;
  #L13ec06.  if v1 == v2 then goto L13ec0c;
  #L13ec0a.  return v4;
  #L13ec0c.  v4:= v4 + 1;
  #L13ec10.  goto L13ebee;
  #L13ec12.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13ec18.  v3:= temp;
  #L13ec1a.  return v3;
}
procedure `int` `indexOfNonWhitespace$default`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/Util;.indexOfNonWhitespace$default:(Ljava/lang/String;IILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13ebb8.  v2:= v2 ^& 1;
  #L13ebbc.  if v2 == 0 then goto L13ebc2;
  #L13ebc0.  v1:= 0I;
  #L13ebc2.  call temp:= `indexOfNonWhitespace`(v0, v1) @signature `Lokhttp3/internal/Util;.indexOfNonWhitespace:(Ljava/lang/String;I)I` @kind static;
  #L13ebc8.  v0:= temp;
  #L13ebca.  return v0;
}
procedure `java.lang.String`[] `intersect`(`java.lang.String`[] v8 @kind object, `java.lang.String`[] v9 @kind object, `java.util.Comparator` v10 @kind object) @signature `Lokhttp3/internal/Util;.intersect:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L13f0ec.  v0:= "$this$intersect" @kind object;
  #L13f0f0.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f0f6.  v0:= "other" @kind object;
  #L13f0fa.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f100.  v0:= "comparator" @kind object;
  #L13f104.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f10a.  v0:= new `java.util.ArrayList`;
  #L13f10e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L13f114.  v1:= length @variable v8;
  #L13f116.  v2:= 0I;
  #L13f118.  v3:= 0I;
  #L13f11a.  if v3 >= v1 then goto L13f14e;
  #L13f11e.  v4:= v8[v3] @kind object;
  #L13f122.  v5:= length @variable v9;
  #L13f124.  v6:= 0I;
  #L13f126.  if v6 >= v5 then goto L13f148;
  #L13f12a.  v7:= v9[v6] @kind object;
  #L13f12e.  call temp:= `compare`(v10, v4, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L13f134.  v7:= temp;
  #L13f136.  if v7 != 0 then goto L13f142;
  #L13f13a.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13f140.  goto L13f148;
  #L13f142.  v6:= v6 + 1;
  #L13f146.  goto L13f126;
  #L13f148.  v3:= v3 + 1;
  #L13f14c.  goto L13f11a;
  #L13f14e.  v8:= new `java.lang.String`[v2];
  #L13f152.  call temp:= `toArray`(v0, v8) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L13f158.  v8:= temp @kind object;
  #L13f15a.  v9:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L13f15e.  call temp:= `requireNonNull`(v8, v9) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13f164.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L13f168.  return v8 @kind object;
}
procedure `boolean` `isCivilized`(`okhttp3.internal.io.FileSystem` v3 @kind object, `java.io.File` v4 @kind object) @signature `Lokhttp3/internal/Util;.isCivilized:(Lokhttp3/internal/io/FileSystem;Ljava/io/File;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13e500.  v0:= "$this$isCivilized" @kind object;
  #L13e504.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e50a.  v0:= "file" @kind object;
  #L13e50e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e514.  call temp:= `sink`(v3, v4) @signature `Lokhttp3/internal/io/FileSystem;.sink:(Ljava/io/File;)Lokio/Sink;` @kind interface;
  #L13e51a.  v0:= temp @kind object;
  #L13e51c.  v1:= 0I;
  #L13e51e.  call `delete`(v3, v4) @signature `Lokhttp3/internal/io/FileSystem;.delete:(Ljava/io/File;)V` @kind interface;
  #L13e524.  v3:= 1I;
  #L13e526.  call `closeFinally`(v0, v1) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L13e52c.  return v3;
  #L13e52e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13e530.  goto L13e546;
  #L13e532.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13e536.  call `closeFinally`(v0, v1) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L13e53c.  call `delete`(v3, v4) @signature `Lokhttp3/internal/io/FileSystem;.delete:(Ljava/io/File;)V` @kind interface;
  #L13e542.  v3:= 0I;
  #L13e544.  return v3;
  #L13e546.  throw v3;
  #L13e548.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13e54a.  call `closeFinally`(v0, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L13e550.  throw v4;
  catch `java.io.IOException` @[L13e51e..L13e524] goto L13e532;
  catch `java.lang.Throwable` @[L13e51e..L13e524] goto L13e52e;
  catch `java.lang.Throwable` @[L13e532..L13e536] goto L13e52e;
  catch `java.lang.Throwable` @[L13e546..L13e548] goto L13e548;
}
procedure `boolean` `isHealthy`(`java.net.Socket` v2 @kind object, `okio.BufferedSource` v3 @kind object) @signature `Lokhttp3/internal/Util;.isHealthy:(Ljava/net/Socket;Lokio/BufferedSource;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13e588.  v0:= "$this$isHealthy" @kind object;
  #L13e58c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e592.  v0:= "source" @kind object;
  #L13e596.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e59c.  v0:= 1I;
  #L13e59e.  call temp:= `getSoTimeout`(v2) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #L13e5a4.  v1:= temp;
  #L13e5a6.  call `setSoTimeout`(v2, v0) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L13e5ac.  call temp:= `exhausted`(v3) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L13e5b2.  v3:= temp;
  #L13e5b4.  v3:= v3 ^~ v0 @kind int;
  #L13e5b6.  call `setSoTimeout`(v2, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L13e5bc.  v0:= v3;
  #L13e5be.  goto L13e5cc;
  #L13e5c0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13e5c2.  call `setSoTimeout`(v2, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L13e5c8.  throw v3;
  #L13e5ca.  v0:= 0I;
  #L13e5cc.  return v0;
  catch `java.net.SocketTimeoutException` @[L13e59e..L13e5a6] goto L13e5cc;
  catch `java.io.IOException` @[L13e59e..L13e5a6] goto L13e5ca;
  catch `java.lang.Throwable` @[L13e5a6..L13e5b4] goto L13e5c0;
  catch `java.net.SocketTimeoutException` @[L13e5b6..L13e5ca] goto L13e5cc;
  catch `java.io.IOException` @[L13e5b6..L13e5ca] goto L13e5ca;
}
procedure `boolean` `isSensitiveHeader`(`java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/Util;.isSensitiveHeader:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13e604.  v0:= "name" @kind object;
  #L13e608.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e60e.  v0:= "Authorization" @kind object;
  #L13e612.  v1:= 1I;
  #L13e614.  call temp:= `equals`(v2, v0, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13e61a.  v0:= temp;
  #L13e61c.  if v0 != 0 then goto L13e654;
  #L13e620.  v0:= "Cookie" @kind object;
  #L13e624.  call temp:= `equals`(v2, v0, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13e62a.  v0:= temp;
  #L13e62c.  if v0 != 0 then goto L13e654;
  #L13e630.  v0:= "Proxy-Authorization" @kind object;
  #L13e634.  call temp:= `equals`(v2, v0, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13e63a.  v0:= temp;
  #L13e63c.  if v0 != 0 then goto L13e654;
  #L13e640.  v0:= "Set-Cookie" @kind object;
  #L13e644.  call temp:= `equals`(v2, v0, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13e64a.  v2:= temp;
  #L13e64c.  if v2 == 0 then goto L13e652;
  #L13e650.  goto L13e654;
  #L13e652.  v1:= 0I;
  #L13e654.  return v1;
}
procedure `void` `notify`(`java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/Util;.notify:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f97c.  v0:= "$this$notify" @kind object;
  #L13f980.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f986.  call `notify`(v1) @signature `Ljava/lang/Object;.notify:()V` @kind virtual;
  #L13f98c.  return @kind void;
}
procedure `void` `notifyAll`(`java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/Util;.notifyAll:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f9a0.  v0:= "$this$notifyAll" @kind object;
  #L13f9a4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f9aa.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L13f9b0.  return @kind void;
}
procedure `int` `parseHexDigit`(`char` v2 ) @signature `Lokhttp3/internal/Util;.parseHexDigit:(C)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13ec2c.  v0:= 48I;
  #L13ec30.  if v0 <= v2 then goto L13ec36;
  #L13ec34.  goto L13ec42;
  #L13ec36.  v1:= 57I;
  #L13ec3a.  if v1 < v2 then goto L13ec42;
  #L13ec3e.  v2:= v2 - v0 @kind int;
  #L13ec40.  goto L13ec72;
  #L13ec42.  v0:= 102I;
  #L13ec46.  v1:= 97I;
  #L13ec4a.  if v1 <= v2 then goto L13ec50;
  #L13ec4e.  goto L13ec5c;
  #L13ec50.  if v0 < v2 then goto L13ec5c;
  #L13ec54.  v2:= v2 - v1 @kind int;
  #L13ec56.  v2:= v2 + 10;
  #L13ec5a.  goto L13ec72;
  #L13ec5c.  v0:= 70I;
  #L13ec60.  v1:= 65I;
  #L13ec64.  if v1 <= v2 then goto L13ec6a;
  #L13ec68.  goto L13ec70;
  #L13ec6a.  if v0 < v2 then goto L13ec70;
  #L13ec6e.  goto L13ec54;
  #L13ec70.  v2:= -1I;
  #L13ec72.  return v2;
}
procedure `java.lang.String` `peerName`(`java.net.Socket` v1 @kind object) @signature `Lokhttp3/internal/Util;.peerName:(Ljava/net/Socket;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13eea4.  v0:= "$this$peerName" @kind object;
  #L13eea8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13eeae.  call temp:= `getRemoteSocketAddress`(v1) @signature `Ljava/net/Socket;.getRemoteSocketAddress:()Ljava/net/SocketAddress;` @kind virtual;
  #L13eeb4.  v1:= temp @kind object;
  #L13eeb6.  v0:= instanceof @variable v1 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L13eeba.  if v0 == 0 then goto L13eed6;
  #L13eebe.  v1:= (`java.net.InetSocketAddress`) v1 @kind object;
  #L13eec2.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L13eec8.  v1:= temp @kind object;
  #L13eeca.  v0:= "address.hostName" @kind object;
  #L13eece.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13eed4.  goto L13eede;
  #L13eed6.  call temp:= `toString`(v1) @signature `Ljava/net/SocketAddress;.toString:()Ljava/lang/String;` @kind virtual;
  #L13eedc.  v1:= temp @kind object;
  #L13eede.  return v1 @kind object;
}
procedure `java.nio.charset.Charset` `readBomAsCharset`(`okio.BufferedSource` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lokhttp3/internal/Util;.readBomAsCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f1e4.  v0:= "$this$readBomAsCharset" @kind object;
  #L13f1e8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f1ee.  v0:= "default" @kind object;
  #L13f1f2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f1f8.  v0:= `@@okhttp3.internal.Util.a` @type ^`okio.Options` @kind object;
  #L13f1fc.  call temp:= `select`(v1, v0) @signature `Lokio/BufferedSource;.select:(Lokio/Options;)I` @kind interface;
  #L13f202.  v1:= temp;
  #L13f204.  v0:= -1I;
  #L13f206.  if v1 == v0 then goto L13f27c;
  #L13f20a.  if v1 == 0 then goto L13f26e;
  #L13f20e.  v2:= 1I;
  #L13f210.  if v1 == v2 then goto L13f25e;
  #L13f214.  v2:= 2I;
  #L13f216.  if v1 == v2 then goto L13f24e;
  #L13f21a.  v2:= 3I;
  #L13f21c.  if v1 == v2 then goto L13f240;
  #L13f220.  v2:= 4I;
  #L13f222.  if v1 != v2 then goto L13f234;
  #L13f226.  v1:= `@@kotlin.text.Charsets.INSTANCE` @type ^`kotlin.text.Charsets` @kind object;
  #L13f22a.  call temp:= `UTF32_LE`(v1) @signature `Lkotlin/text/Charsets;.UTF32_LE:()Ljava/nio/charset/Charset;` @kind virtual;
  #L13f230.  v2:= temp @kind object;
  #L13f232.  goto L13f27c;
  #L13f234.  v1:= new `java.lang.AssertionError`;
  #L13f238.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L13f23e.  throw v1;
  #L13f240.  v1:= `@@kotlin.text.Charsets.INSTANCE` @type ^`kotlin.text.Charsets` @kind object;
  #L13f244.  call temp:= `UTF32_BE`(v1) @signature `Lkotlin/text/Charsets;.UTF32_BE:()Ljava/nio/charset/Charset;` @kind virtual;
  #L13f24a.  v2:= temp @kind object;
  #L13f24c.  goto L13f27c;
  #L13f24e.  v2:= `@@java.nio.charset.StandardCharsets.UTF_16LE` @type ^`java.nio.charset.Charset` @kind object;
  #L13f252.  v1:= "UTF_16LE" @kind object;
  #L13f256.  call `checkNotNullExpressionValue`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f25c.  goto L13f27c;
  #L13f25e.  v2:= `@@java.nio.charset.StandardCharsets.UTF_16BE` @type ^`java.nio.charset.Charset` @kind object;
  #L13f262.  v1:= "UTF_16BE" @kind object;
  #L13f266.  call `checkNotNullExpressionValue`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f26c.  goto L13f27c;
  #L13f26e.  v2:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L13f272.  v1:= "UTF_8" @kind object;
  #L13f276.  call `checkNotNullExpressionValue`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f27c.  return v2 @kind object;
}
procedure `java.lang.Object` `readFieldOrNull`(`java.lang.Object` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/Util;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L13ed7c.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L13ed80.  v1:= "instance" @kind object;
  #L13ed84.  call `checkNotNullParameter`(v6, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ed8a.  v1:= "fieldType" @kind object;
  #L13ed8e.  call `checkNotNullParameter`(v7, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ed94.  v1:= "fieldName" @kind object;
  #L13ed98.  call `checkNotNullParameter`(v8, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ed9e.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L13eda4.  v1:= temp @kind object;
  #L13eda6.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13edac.  v2:= temp;
  #L13edae.  v3:= 1I;
  #L13edb0.  v2:= v2 ^~ v3 @kind int;
  #L13edb2.  v4:= 0I;
  #L13edb4.  if v2 == 0 then goto L13ee04;
  #L13edb8.  call temp:= `getDeclaredField`(v1, v8) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L13edbe.  v2:= temp @kind object;
  #L13edc0.  v5:= "field" @kind object;
  #L13edc4.  call `checkNotNullExpressionValue`(v2, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13edca.  call `setAccessible`(v2, v3) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L13edd0.  call temp:= `get`(v2, v6) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13edd6.  v2:= temp @kind object;
  #L13edd8.  call temp:= `isInstance`(v7, v2) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L13edde.  v3:= temp;
  #L13ede0.  if v3 != 0 then goto L13ede6;
  #L13ede4.  goto L13edee;
  #L13ede6.  call temp:= `cast`(v7, v2) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13edec.  v4:= temp @kind object;
  #L13edee.  return v4 @kind object;
  #L13edf0.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L13edf6.  v1:= temp @kind object;
  #L13edf8.  v2:= "c.superclass" @kind object;
  #L13edfc.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ee02.  goto L13eda6;
  #L13ee04.  v1:= "delegate" @kind object;
  #L13ee08.  call temp:= `areEqual`(v8, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13ee0e.  v2:= temp;
  #L13ee10.  v2:= v2 ^~ v3 @kind int;
  #L13ee12.  if v2 == 0 then goto L13ee2c;
  #L13ee16.  call temp:= `readFieldOrNull`(v6, v0, v1) @signature `Lokhttp3/internal/Util;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13ee1c.  v6:= temp @kind object;
  #L13ee1e.  if v6 == 0 then goto L13ee2c;
  #L13ee22.  call temp:= `readFieldOrNull`(v6, v7, v8) @signature `Lokhttp3/internal/Util;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13ee28.  v6:= temp @kind object;
  #L13ee2a.  return v6 @kind object;
  #L13ee2c.  return v4 @kind object;
  catch `java.lang.NoSuchFieldException` @[L13edb8..L13edee] goto L13edf0;
}
procedure `int` `readMedium`(`okio.BufferedSource` v3 @kind object) @signature `Lokhttp3/internal/Util;.readMedium:(Lokio/BufferedSource;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13ec84.  v0:= "$this$readMedium" @kind object;
  #L13ec88.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ec8e.  call temp:= `readByte`(v3) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L13ec94.  v0:= temp;
  #L13ec96.  v1:= 255I;
  #L13ec9a.  call temp:= `and`(v0, v1) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L13eca0.  v0:= temp;
  #L13eca2.  v0:= v0 ^< 16;
  #L13eca6.  call temp:= `readByte`(v3) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L13ecac.  v2:= temp;
  #L13ecae.  call temp:= `and`(v2, v1) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L13ecb4.  v2:= temp;
  #L13ecb6.  v2:= v2 ^< 8;
  #L13ecba.  v0:= v0 ^| v2 @kind int;
  #L13ecbc.  call temp:= `readByte`(v3) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L13ecc2.  v3:= temp;
  #L13ecc4.  call temp:= `and`(v3, v1) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L13ecca.  v3:= temp;
  #L13eccc.  v3:= v3 ^| v0 @kind int;
  #L13ecce.  return v3;
}
procedure `int` `skipAll`(`okio.Buffer` v3 @kind object, `byte` v4 ) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Buffer;B)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13ece0.  v0:= "$this$skipAll" @kind object;
  #L13ece4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ecea.  v0:= 0I;
  #L13ecec.  call temp:= `exhausted`(v3) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L13ecf2.  v1:= temp;
  #L13ecf4.  if v1 != 0 then goto L13ed14;
  #L13ecf8.  v1:= 0L;
  #L13ecfc.  call temp:= `getByte`(v3, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L13ed02.  v1:= temp;
  #L13ed04.  if v1 != v4 then goto L13ed14;
  #L13ed08.  v0:= v0 + 1;
  #L13ed0c.  call temp:= `readByte`(v3) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L13ed12.  goto L13ecec;
  #L13ed14.  return v0;
}
procedure `boolean` `skipAll`(`okio.Source` v11 @kind object, `int` v12 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L13e668.  v0:= "$this$skipAll" @kind object;
  #L13e66c.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e672.  v0:= "timeUnit" @kind object;
  #L13e676.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e67c.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L13e682.  v0:= temp @kind wide;
  #L13e684.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L13e68a.  v2:= temp @kind object;
  #L13e68c.  call temp:= `hasDeadline`(v2) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L13e692.  v2:= temp;
  #L13e694.  v3:= 9223372036854775807L;
  #L13e69e.  if v2 == 0 then goto L13e6b6;
  #L13e6a2.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L13e6a8.  v2:= temp @kind object;
  #L13e6aa.  call temp:= `deadlineNanoTime`(v2) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L13e6b0.  v5:= temp @kind wide;
  #L13e6b2.  v5:= v5 - v0 @kind long;
  #L13e6b4.  goto L13e6b8;
  #L13e6b6.  v5:= v3 @kind wide;
  #L13e6b8.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L13e6be.  v2:= temp @kind object;
  #L13e6c0.  v7:= (`long`) v12 @kind i2l;
  #L13e6c2.  call temp:= `toNanos`(v13, v7) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L13e6c8.  v12:= temp @kind wide;
  #L13e6ca.  call temp:= `min`(v5, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L13e6d0.  v12:= temp @kind wide;
  #L13e6d2.  v12:= v12 + v0 @kind long;
  #L13e6d4.  call temp:= `deadlineNanoTime`(v2, v12) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L13e6da.  v12:= new `okio.Buffer`;
  #L13e6de.  call `<init>`(v12) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L13e6e4.  v7:= 8192L;
  #L13e6e8.  call temp:= `read`(v11, v12, v7) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L13e6ee.  v7:= temp @kind wide;
  #L13e6f0.  v9:= -1L;
  #L13e6f4.  v13:= lcmp(v7, v9);
  #L13e6f8.  if v13 == 0 then goto L13e704;
  #L13e6fc.  call `clear`(v12) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L13e702.  goto L13e6e4;
  #L13e704.  v12:= 1I;
  #L13e706.  v13:= lcmp(v5, v3);
  #L13e70a.  if v13 != 0 then goto L13e71e;
  #L13e70e.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L13e714.  v11:= temp @kind object;
  #L13e716.  call temp:= `clearDeadline`(v11) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L13e71c.  goto L13e76a;
  #L13e71e.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L13e724.  v11:= temp @kind object;
  #L13e726.  v0:= v0 + v5 @kind long;
  #L13e728.  call temp:= `deadlineNanoTime`(v11, v0) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L13e72e.  goto L13e76a;
  #L13e730.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13e732.  v13:= lcmp(v5, v3);
  #L13e736.  if v13 != 0 then goto L13e74a;
  #L13e73a.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L13e740.  v11:= temp @kind object;
  #L13e742.  call temp:= `clearDeadline`(v11) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L13e748.  goto L13e75a;
  #L13e74a.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L13e750.  v11:= temp @kind object;
  #L13e752.  v0:= v0 + v5 @kind long;
  #L13e754.  call temp:= `deadlineNanoTime`(v11, v0) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L13e75a.  throw v12;
  #L13e75c.  
  #L13e75e.  v12:= 0I;
  #L13e760.  v13:= lcmp(v5, v3);
  #L13e764.  if v13 != 0 then goto L13e71e;
  #L13e768.  goto L13e70e;
  #L13e76a.  return v12;
  catch `java.io.InterruptedIOException` @[L13e6da..L13e702] goto L13e75c;
  catch `java.lang.Throwable` @[L13e6da..L13e702] goto L13e730;
}
procedure `java.util.concurrent.ThreadFactory` `threadFactory`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f474.  v0:= "name" @kind object;
  #L13f478.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f47e.  v0:= new `okhttp3.internal.Util$b`;
  #L13f482.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/Util$b;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L13f488.  return v0 @kind object;
}
procedure `void` `threadName`(`java.lang.String` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lokhttp3/internal/Util;.threadName:(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13f9c4.  v0:= "name" @kind object;
  #L13f9c8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f9ce.  v0:= "block" @kind object;
  #L13f9d2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f9d8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L13f9de.  v0:= temp @kind object;
  #L13f9e0.  v1:= "currentThread" @kind object;
  #L13f9e4.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f9ea.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L13f9f0.  v1:= temp @kind object;
  #L13f9f2.  call `setName`(v0, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L13f9f8.  v2:= 1I;
  #L13f9fa.  call temp:= `invoke`(v3) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L13fa00.  call `finallyStart`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L13fa06.  call `setName`(v0, v1) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L13fa0c.  call `finallyEnd`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L13fa12.  return @kind void;
  #L13fa14.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13fa16.  call `finallyStart`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L13fa1c.  call `setName`(v0, v1) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L13fa22.  call `finallyEnd`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L13fa28.  throw v3;
  catch `java.lang.Throwable` @[L13f9fa..L13fa00] goto L13fa14;
}
procedure `java.util.List` `toHeaderList`(`okhttp3.Headers` v5 @kind object) @signature `Lokhttp3/internal/Util;.toHeaderList:(Lokhttp3/Headers;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L13f364.  v0:= "$this$toHeaderList" @kind object;
  #L13f368.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f36e.  call temp:= `size`(v5) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L13f374.  v0:= temp;
  #L13f376.  v1:= 0I;
  #L13f378.  call temp:= `until`(v1, v0) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L13f37e.  v0:= temp @kind object;
  #L13f380.  v1:= new `java.util.ArrayList`;
  #L13f384.  v2:= 10I;
  #L13f388.  call temp:= `collectionSizeOrDefault`(v0, v2) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L13f38e.  v2:= temp;
  #L13f390.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L13f396.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13f39c.  v0:= temp @kind object;
  #L13f39e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13f3a4.  v2:= temp;
  #L13f3a6.  if v2 == 0 then goto L13f3da;
  #L13f3aa.  v2:= v0 @kind object;
  #L13f3ac.  v2:= (`kotlin.collections.IntIterator`) v2 @kind object;
  #L13f3b0.  call temp:= `nextInt`(v2) @signature `Lkotlin/collections/IntIterator;.nextInt:()I` @kind virtual;
  #L13f3b6.  v2:= temp;
  #L13f3b8.  v3:= new `okhttp3.internal.http2.Header`;
  #L13f3bc.  call temp:= `name`(v5, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L13f3c2.  v4:= temp @kind object;
  #L13f3c4.  call temp:= `value`(v5, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L13f3ca.  v2:= temp @kind object;
  #L13f3cc.  call `<init>`(v3, v4, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L13f3d2.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13f3d8.  goto L13f39e;
  #L13f3da.  return v1 @kind object;
}
procedure `okhttp3.Headers` `toHeaders`(`java.util.List` v3 @kind object) @signature `Lokhttp3/internal/Util;.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13f550.  v0:= "$this$toHeaders" @kind object;
  #L13f554.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f55a.  v0:= new `okhttp3.Headers$Builder`;
  #L13f55e.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L13f564.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13f56a.  v3:= temp @kind object;
  #L13f56c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13f572.  v1:= temp;
  #L13f574.  if v1 == 0 then goto L13f5ac;
  #L13f578.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13f57e.  v1:= temp @kind object;
  #L13f580.  v1:= (`okhttp3.internal.http2.Header`) v1 @kind object;
  #L13f584.  call temp:= `component1`(v1) @signature `Lokhttp3/internal/http2/Header;.component1:()Lokio/ByteString;` @kind virtual;
  #L13f58a.  v2:= temp @kind object;
  #L13f58c.  call temp:= `component2`(v1) @signature `Lokhttp3/internal/http2/Header;.component2:()Lokio/ByteString;` @kind virtual;
  #L13f592.  v1:= temp @kind object;
  #L13f594.  call temp:= `utf8`(v2) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L13f59a.  v2:= temp @kind object;
  #L13f59c.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L13f5a2.  v1:= temp @kind object;
  #L13f5a4.  call temp:= `addLenient$okhttp`(v0, v2, v1) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L13f5aa.  goto L13f56c;
  #L13f5ac.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L13f5b2.  v3:= temp @kind object;
  #L13f5b4.  return v3 @kind object;
}
procedure `java.lang.String` `toHexString`(`int` v1 ) @signature `Lokhttp3/internal/Util;.toHexString:(I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13eef0.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L13eef6.  v1:= temp @kind object;
  #L13eef8.  v0:= "Integer.toHexString(this)" @kind object;
  #L13eefc.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ef02.  return v1 @kind object;
}
procedure `java.lang.String` `toHexString`(`long` v0 ) @signature `Lokhttp3/internal/Util;.toHexString:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L13ef14.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L13ef1a.  v0:= temp @kind object;
  #L13ef1c.  v1:= "java.lang.Long.toHexString(this)" @kind object;
  #L13ef20.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ef26.  return v0 @kind object;
}
procedure `java.lang.String` `toHostHeader`(`okhttp3.HttpUrl` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/internal/Util;.toHostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L13ef5c.  v0:= "$this$toHostHeader" @kind object;
  #L13ef60.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ef66.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L13ef6c.  v0:= temp @kind object;
  #L13ef6e.  v1:= ":" @kind object;
  #L13ef72.  v2:= 0I;
  #L13ef74.  v3:= 2I;
  #L13ef76.  v4:= 0I;
  #L13ef78.  call temp:= `contains$default`(v0, v1, v2, v3, v4) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;ZILjava/lang/Object;)Z` @kind static;
  #L13ef7e.  v0:= temp;
  #L13ef80.  if v0 == 0 then goto L13efba;
  #L13ef84.  v0:= new `java.lang.StringBuilder`;
  #L13ef88.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13ef8e.  v1:= 91I;
  #L13ef92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ef98.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L13ef9e.  v1:= temp @kind object;
  #L13efa0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13efa6.  v1:= 93I;
  #L13efaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13efb0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13efb6.  v0:= temp @kind object;
  #L13efb8.  goto L13efc2;
  #L13efba.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L13efc0.  v0:= temp @kind object;
  #L13efc2.  if v6 != 0 then goto L13efe6;
  #L13efc6.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L13efcc.  v6:= temp;
  #L13efce.  v1:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L13efd2.  call temp:= `scheme`(v5) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L13efd8.  v2:= temp @kind object;
  #L13efda.  call temp:= `defaultPort`(v1, v2) @signature `Lokhttp3/HttpUrl$Companion;.defaultPort:(Ljava/lang/String;)I` @kind virtual;
  #L13efe0.  v1:= temp;
  #L13efe2.  if v6 == v1 then goto L13f016;
  #L13efe6.  v6:= new `java.lang.StringBuilder`;
  #L13efea.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13eff0.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13eff6.  v0:= 58I;
  #L13effa.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13f000.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L13f006.  v5:= temp;
  #L13f008.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L13f00e.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13f014.  v0:= temp @kind object;
  #L13f016.  return v0 @kind object;
}
procedure `java.lang.String` `toHostHeader$default`(`okhttp3.HttpUrl` v0 @kind object, `boolean` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/Util;.toHostHeader$default:(Lokhttp3/HttpUrl;ZILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13ef38.  v2:= v2 ^& 1;
  #L13ef3c.  if v2 == 0 then goto L13ef42;
  #L13ef40.  v1:= 0I;
  #L13ef42.  call temp:= `toHostHeader`(v0, v1) @signature `Lokhttp3/internal/Util;.toHostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L13ef48.  v0:= temp @kind object;
  #L13ef4a.  return v0 @kind object;
}
procedure `java.util.List` `toImmutableList`(`java.util.List` v1 @kind object) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f3ec.  v0:= "$this$toImmutableList" @kind object;
  #L13f3f0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f3f6.  call temp:= `toMutableList`(v1) @signature `Lkotlin/collections/CollectionsKt;.toMutableList:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L13f3fc.  v1:= temp @kind object;
  #L13f3fe.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L13f404.  v1:= temp @kind object;
  #L13f406.  v0:= "Collections.unmodifiableList(toMutableList())" @kind object;
  #L13f40a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f410.  return v1 @kind object;
}
procedure `java.util.Map` `toImmutableMap`(`java.util.Map` v1 @kind object) @signature `Lokhttp3/internal/Util;.toImmutableMap:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f424.  v0:= "$this$toImmutableMap" @kind object;
  #L13f428.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f42e.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L13f434.  v0:= temp;
  #L13f436.  if v0 == 0 then goto L13f444;
  #L13f43a.  call temp:= `emptyMap`() @signature `Lkotlin/collections/MapsKt;.emptyMap:()Ljava/util/Map;` @kind static;
  #L13f440.  v1:= temp @kind object;
  #L13f442.  goto L13f460;
  #L13f444.  v0:= new `java.util.LinkedHashMap`;
  #L13f448.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L13f44e.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L13f454.  v1:= temp @kind object;
  #L13f456.  v0:= "Collections.unmodifiableMap(LinkedHashMap(this))" @kind object;
  #L13f45a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f460.  return v1 @kind object;
}
procedure `long` `toLongOrDefault`(`java.lang.String` v1 @kind object, `long` v2 ) @signature `Lokhttp3/internal/Util;.toLongOrDefault:(Ljava/lang/String;J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f4f4.  v0:= "$this$toLongOrDefault" @kind object;
  #L13f4f8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f4fe.  call temp:= `parseLong`(v1) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L13f504.  v2:= temp @kind wide;
  #L13f506.  return v2 @kind wide;
  catch `java.lang.NumberFormatException` @[L13f4fe..L13f506] goto L13f506;
}
procedure `int` `toNonNegativeInt`(`java.lang.String` v4 @kind object, `int` v5 ) @signature `Lokhttp3/internal/Util;.toNonNegativeInt:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13ed28.  if v4 == 0 then goto L13ed5a;
  #L13ed2c.  call temp:= `parseLong`(v4) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L13ed32.  v4:= temp @kind wide;
  #L13ed34.  v0:= 2147483647I;
  #L13ed3a.  v1:= (`long`) v0 @kind i2l;
  #L13ed3c.  v3:= lcmp(v4, v1);
  #L13ed40.  if v3 <= 0 then goto L13ed46;
  #L13ed44.  goto L13ed58;
  #L13ed46.  v0:= 0L;
  #L13ed4a.  v2:= lcmp(v4, v0);
  #L13ed4e.  if v2 >= 0 then goto L13ed56;
  #L13ed52.  v0:= 0I;
  #L13ed54.  goto L13ed58;
  #L13ed56.  v0:= (`int`) v4 @kind l2i;
  #L13ed58.  return v0;
  #L13ed5a.  return v5;
  catch `java.lang.NumberFormatException` @[L13ed2c..L13ed34] goto L13ed5a;
}
procedure `java.lang.String` `trimSubstring`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13f05c.  v0:= "$this$trimSubstring" @kind object;
  #L13f060.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f066.  call temp:= `indexOfFirstNonAsciiWhitespace`(v1, v2, v3) @signature `Lokhttp3/internal/Util;.indexOfFirstNonAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L13f06c.  v2:= temp;
  #L13f06e.  call temp:= `indexOfLastNonAsciiWhitespace`(v1, v2, v3) @signature `Lokhttp3/internal/Util;.indexOfLastNonAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L13f074.  v3:= temp;
  #L13f076.  call temp:= `substring`(v1, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L13f07c.  v1:= temp @kind object;
  #L13f07e.  v2:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L13f082.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f088.  return v1 @kind object;
}
procedure `java.lang.String` `trimSubstring$default`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/Util;.trimSubstring$default:(Ljava/lang/String;IIILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13f028.  v4:= v3 ^& 1;
  #L13f02c.  if v4 == 0 then goto L13f032;
  #L13f030.  v1:= 0I;
  #L13f032.  v3:= v3 ^& 2;
  #L13f036.  if v3 == 0 then goto L13f042;
  #L13f03a.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13f040.  v2:= temp;
  #L13f042.  call temp:= `trimSubstring`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L13f048.  v0:= temp @kind object;
  #L13f04a.  return v0 @kind object;
}
procedure `void` `wait`(`java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/Util;.wait:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13fa48.  v0:= "$this$wait" @kind object;
  #L13fa4c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13fa52.  call `wait`(v1) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L13fa58.  return @kind void;
}
procedure `java.lang.Throwable` `withSuppressed`(`java.lang.Exception` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/Util;.withSuppressed:(Ljava/lang/Exception;Ljava/util/List;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13f17c.  v0:= "$this$withSuppressed" @kind object;
  #L13f180.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f186.  v0:= "suppressed" @kind object;
  #L13f18a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13f190.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L13f196.  v0:= temp;
  #L13f198.  v1:= 1I;
  #L13f19a.  if v0 <= v1 then goto L13f1a8;
  #L13f19e.  v0:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L13f1a2.  call `println`(v0, v3) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/Object;)V` @kind virtual;
  #L13f1a8.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13f1ae.  v3:= temp @kind object;
  #L13f1b0.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13f1b6.  v0:= temp;
  #L13f1b8.  if v0 == 0 then goto L13f1d0;
  #L13f1bc.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13f1c2.  v0:= temp @kind object;
  #L13f1c4.  v0:= (`java.lang.Exception`) v0 @kind object;
  #L13f1c8.  call `addSuppressed`(v2, v0) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L13f1ce.  goto L13f1b0;
  #L13f1d0.  return v2 @kind object;
}
procedure `void` `writeMedium`(`okio.BufferedSink` v1 @kind object, `int` v2 ) @signature `Lokhttp3/internal/Util;.writeMedium:(Lokio/BufferedSink;I)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13fa6c.  v0:= "$this$writeMedium" @kind object;
  #L13fa70.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13fa76.  v0:= v2 ^>> 16;
  #L13fa7a.  v0:= v0 ^& 255;
  #L13fa7e.  call temp:= `writeByte`(v1, v0) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L13fa84.  v0:= v2 ^>> 8;
  #L13fa88.  v0:= v0 ^& 255;
  #L13fa8c.  call temp:= `writeByte`(v1, v0) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L13fa92.  v2:= v2 ^& 255;
  #L13fa96.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L13fa9c.  return @kind void;
}
