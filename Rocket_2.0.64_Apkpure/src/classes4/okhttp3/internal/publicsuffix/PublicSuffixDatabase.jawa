record `okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.CountDownLatch` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @AccessFlag PRIVATE;
}
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PUBLIC_SUFFIX_RESOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L15b28c.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion`;
  #L15b290.  v1:= 0I;
  #L15b292.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L15b298.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.Companion` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion` := v0 @kind object;
  #L15b29c.  v0:= 1I;
  #L15b29e.  v0:= new `byte`[v0];
  #L15b2a2.  v1:= 42I;
  #L15b2a6.  v1:= (`byte`) v1 @kind i2b;
  #L15b2a8.  v2:= 0I;
  #L15b2aa.  v0[v2]:= v1 @kind byte;
  #L15b2ae.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @type ^`byte`[] := v0 @kind object;
  #L15b2b2.  v0:= "*" @kind object;
  #L15b2b6.  call temp:= `listOf`(v0) @signature `Lkotlin/collections/CollectionsKt;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L15b2bc.  v0:= temp @kind object;
  #L15b2be.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.util.List` := v0 @kind object;
  #L15b2c2.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase`;
  #L15b2c6.  call `<init>`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @kind direct;
  #L15b2cc.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` := v0 @kind object;
  #L15b2d0.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15b2e4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b2ea.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L15b2ee.  v1:= 0I;
  #L15b2f0.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L15b2f6.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L15b2fa.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L15b2fe.  v1:= 1I;
  #L15b300.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L15b306.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L15b30a.  return @kind void;
}
procedure `java.util.List` `a`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v17 @kind this, `java.util.List` v18 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L15afb0.  v0:= v17 @kind object;
  #L15afb4.  v1:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L15afb8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L15afbe.  v1:= temp;
  #L15afc0.  v2:= 0I;
  #L15afc2.  v3:= 1I;
  #L15afc4.  if v1 != 0 then goto L15afe0;
  #L15afc8.  v1:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L15afcc.  call temp:= `compareAndSet`(v1, v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L15afd2.  v1:= temp;
  #L15afd4.  if v1 == 0 then goto L15afe0;
  #L15afd8.  call `c`(v17) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.c:()V` @kind direct;
  #L15afde.  goto L15affa;
  #L15afe0.  v1:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L15afe4.  call `await`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L15afea.  goto L15affa;
  #L15afec.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L15aff2.  v1:= temp @kind object;
  #L15aff4.  call `interrupt`(v1) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L15affa.  v1:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L15affe.  if v1 == 0 then goto L15b006;
  #L15b002.  v1:= 1I;
  #L15b004.  goto L15b008;
  #L15b006.  v1:= 0I;
  #L15b008.  if v1 == 0 then goto L15b1e2;
  #L15b00c.  call temp:= `size`(v18) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15b012.  v1:= temp;
  #L15b014.  v4:= new `byte`[][v1];
  #L15b018.  v5:= 0I;
  #L15b01a.  if v5 >= v1 then goto L15b062;
  #L15b01e.  v6:= v18 @kind object;
  #L15b022.  call temp:= `get`(v6, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L15b028.  v7:= temp @kind object;
  #L15b02a.  v7:= (`java.lang.String`) v7 @kind object;
  #L15b02e.  v8:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L15b032.  v9:= "UTF_8" @kind object;
  #L15b036.  call `checkNotNullExpressionValue`(v8, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b03c.  v9:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L15b040.  call temp:= `requireNonNull`(v7, v9) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L15b046.  call temp:= `getBytes`(v7, v8) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L15b04c.  v7:= temp @kind object;
  #L15b04e.  v8:= "(this as java.lang.String).getBytes(charset)" @kind object;
  #L15b052.  call `checkNotNullExpressionValue`(v7, v8) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b058.  v4[v5]:= v7 @kind object;
  #L15b05c.  v5:= v5 + 1;
  #L15b060.  goto L15b01a;
  #L15b062.  v5:= 0I;
  #L15b064.  v6:= "publicSuffixListBytes" @kind object;
  #L15b068.  v7:= 0I;
  #L15b06a.  if v5 >= v1 then goto L15b094;
  #L15b06e.  v8:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.Companion` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion` @kind object;
  #L15b072.  v9:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L15b076.  if v9 != 0 then goto L15b080;
  #L15b07a.  call `throwUninitializedPropertyAccessException`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L15b080.  call temp:= `access$binarySearch`(v8, v9, v4, v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;.access$binarySearch:(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;[B[[BI)Ljava/lang/String;` @kind static;
  #L15b086.  v8:= temp @kind object;
  #L15b088.  if v8 == 0 then goto L15b08e;
  #L15b08c.  goto L15b096;
  #L15b08e.  v5:= v5 + 1;
  #L15b092.  goto L15b064;
  #L15b094.  v8:= v7 @kind object;
  #L15b096.  if v1 <= v3 then goto L15b0e0;
  #L15b09a.  call temp:= `clone`(v4) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L15b0a0.  v5:= temp @kind object;
  #L15b0a2.  v5:= (`byte`[][]) v5 @kind object;
  #L15b0a6.  v9:= length @variable v5;
  #L15b0a8.  v9:= v9 - v3 @kind int;
  #L15b0aa.  v10:= 0I;
  #L15b0ac.  if v10 >= v9 then goto L15b0e0;
  #L15b0b0.  v11:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @type ^`byte`[] @kind object;
  #L15b0b4.  v5[v10]:= v11 @kind object;
  #L15b0b8.  v11:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.Companion` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion` @kind object;
  #L15b0bc.  v12:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L15b0c0.  if v12 != 0 then goto L15b0ca;
  #L15b0c4.  call `throwUninitializedPropertyAccessException`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L15b0ca.  call temp:= `access$binarySearch`(v11, v12, v5, v10) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;.access$binarySearch:(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;[B[[BI)Ljava/lang/String;` @kind static;
  #L15b0d0.  v11:= temp @kind object;
  #L15b0d2.  if v11 == 0 then goto L15b0da;
  #L15b0d6.  v5:= v11 @kind object;
  #L15b0d8.  goto L15b0e2;
  #L15b0da.  v10:= v10 + 1;
  #L15b0de.  goto L15b0ac;
  #L15b0e0.  v5:= v7 @kind object;
  #L15b0e2.  if v5 == 0 then goto L15b11a;
  #L15b0e6.  v1:= v1 - v3 @kind int;
  #L15b0e8.  v6:= 0I;
  #L15b0ea.  if v6 >= v1 then goto L15b11a;
  #L15b0ee.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.Companion` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion` @kind object;
  #L15b0f2.  v10:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @type ^`byte`[] @kind object;
  #L15b0f6.  if v10 != 0 then goto L15b104;
  #L15b0fa.  v11:= "publicSuffixExceptionListBytes" @kind object;
  #L15b0fe.  call `throwUninitializedPropertyAccessException`(v11) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L15b104.  call temp:= `access$binarySearch`(v9, v10, v4, v6) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;.access$binarySearch:(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;[B[[BI)Ljava/lang/String;` @kind static;
  #L15b10a.  v9:= temp @kind object;
  #L15b10c.  if v9 == 0 then goto L15b114;
  #L15b110.  v7:= v9 @kind object;
  #L15b112.  goto L15b11a;
  #L15b114.  v6:= v6 + 1;
  #L15b118.  goto L15b0ea;
  #L15b11a.  v1:= 46I;
  #L15b11e.  if v7 == 0 then goto L15b15e;
  #L15b122.  v4:= new `java.lang.StringBuilder`;
  #L15b126.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b12c.  v5:= 33I;
  #L15b130.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b136.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b13c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b142.  v8:= temp @kind object;
  #L15b144.  v9:= new `char`[v3];
  #L15b148.  v9[v2]:= v1 @kind char;
  #L15b14c.  v10:= 0I;
  #L15b14e.  v11:= 0I;
  #L15b150.  v12:= 6I;
  #L15b152.  v13:= 0I;
  #L15b154.  call temp:= `split$default`(v8, v9, v10, v11, v12, v13) @signature `Lkotlin/text/StringsKt;.split$default:(Ljava/lang/CharSequence;[CZIILjava/lang/Object;)Ljava/util/List;` @kind static;
  #L15b15a.  v1:= temp @kind object;
  #L15b15c.  return v1 @kind object;
  #L15b15e.  if v8 != 0 then goto L15b16c;
  #L15b162.  if v5 != 0 then goto L15b16c;
  #L15b166.  v1:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.util.List` @kind object;
  #L15b16a.  return v1 @kind object;
  #L15b16c.  if v8 == 0 then goto L15b192;
  #L15b170.  v7:= new `char`[v3];
  #L15b174.  v7[v2]:= v1 @kind char;
  #L15b178.  v4:= 0I;
  #L15b17a.  v9:= 0I;
  #L15b17c.  v10:= 6I;
  #L15b17e.  v11:= 0I;
  #L15b180.  v6:= v8 @kind object;
  #L15b182.  v8:= v4;
  #L15b184.  call temp:= `split$default`(v6, v7, v8, v9, v10, v11) @signature `Lkotlin/text/StringsKt;.split$default:(Ljava/lang/CharSequence;[CZIILjava/lang/Object;)Ljava/util/List;` @kind static;
  #L15b18a.  v4:= temp @kind object;
  #L15b18c.  if v4 == 0 then goto L15b192;
  #L15b190.  goto L15b19a;
  #L15b192.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L15b198.  v4:= temp @kind object;
  #L15b19a.  if v5 == 0 then goto L15b1c0;
  #L15b19e.  v12:= new `char`[v3];
  #L15b1a2.  v12[v2]:= v1 @kind char;
  #L15b1a6.  v13:= 0I;
  #L15b1a8.  v14:= 0I;
  #L15b1aa.  v15:= 6I;
  #L15b1ac.  v16:= 0I;
  #L15b1b0.  v11:= v5 @kind object;
  #L15b1b2.  call temp:= `split$default`(v11, v12, v13, v14, v15, v16) @signature `Lkotlin/text/StringsKt;.split$default:(Ljava/lang/CharSequence;[CZIILjava/lang/Object;)Ljava/util/List;` @kind static;
  #L15b1b8.  v1:= temp @kind object;
  #L15b1ba.  if v1 == 0 then goto L15b1c0;
  #L15b1be.  goto L15b1c8;
  #L15b1c0.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L15b1c6.  v1:= temp @kind object;
  #L15b1c8.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15b1ce.  v2:= temp;
  #L15b1d0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15b1d6.  v3:= temp;
  #L15b1d8.  if v2 <= v3 then goto L15b1de;
  #L15b1dc.  goto L15b1e0;
  #L15b1de.  v4:= v1 @kind object;
  #L15b1e0.  return v4 @kind object;
  #L15b1e2.  v1:= new `java.lang.IllegalStateException`;
  #L15b1e6.  v2:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L15b1ea.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b1f0.  v2:= temp @kind object;
  #L15b1f2.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b1f8.  throw v1;
  catch `java.lang.InterruptedException` @[L15afe0..L15afea] goto L15afec;
}
procedure `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `access$getInstance$cp`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.access$getInstance$cp:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L15b274.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L15b278.  return v0 @kind object;
}
procedure `byte`[] `access$getPublicSuffixListBytes$p`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v1 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.access$getPublicSuffixListBytes$p:(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;)[B` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L15aea4.  v1:= v1.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L15aea8.  if v1 != 0 then goto L15aeb6;
  #L15aeac.  v0:= "publicSuffixListBytes" @kind object;
  #L15aeb0.  call `throwUninitializedPropertyAccessException`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L15aeb6.  return v1 @kind object;
}
procedure `void` `access$setPublicSuffixListBytes$p`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v0 @kind object, `byte`[] v1 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.access$setPublicSuffixListBytes$p:(Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;[B)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15b31c.  v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] := v1 @kind object;
  #L15b320.  return @kind void;
}
procedure `void` `b`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15b334.  v0:= constclass @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L15b338.  v1:= "publicsuffixes.gz" @kind object;
  #L15b33c.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L15b342.  v0:= temp @kind object;
  #L15b344.  if v0 == 0 then goto L15b3ca;
  #L15b348.  v1:= new `okio.GzipSource`;
  #L15b34c.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L15b352.  v0:= temp @kind object;
  #L15b354.  call `<init>`(v1, v0) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L15b35a.  call temp:= `buffer`(v1) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L15b360.  v0:= temp @kind object;
  #L15b362.  v1:= 0I;
  #L15b364.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L15b36a.  v2:= temp;
  #L15b36c.  v2:= (`long`) v2 @kind i2l;
  #L15b36e.  call temp:= `readByteArray`(v0, v2) @signature `Lokio/BufferedSource;.readByteArray:(J)[B` @kind interface;
  #L15b374.  v2:= temp @kind object;
  #L15b376.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L15b37c.  v3:= temp;
  #L15b37e.  v3:= (`long`) v3 @kind i2l;
  #L15b380.  call temp:= `readByteArray`(v0, v3) @signature `Lokio/BufferedSource;.readByteArray:(J)[B` @kind interface;
  #L15b386.  v3:= temp @kind object;
  #L15b388.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15b38c.  call `closeFinally`(v0, v1) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L15b392.  @monitorenter v5
  #L15b394.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15b39a.  v5.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] := v2 @kind object;
  #L15b39e.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15b3a4.  v5.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @type ^`byte`[] := v3 @kind object;
  #L15b3a8.  @monitorexit v5
  #L15b3aa.  v0:= v5.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L15b3ae.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L15b3b4.  return @kind void;
  #L15b3b6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15b3b8.  @monitorexit v5
  #L15b3ba.  throw v0;
  #L15b3bc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15b3be.  throw v1;
  #L15b3c0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15b3c2.  call `closeFinally`(v0, v1) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L15b3c8.  throw v2;
  #L15b3ca.  return @kind void;
  catch `java.lang.Throwable` @[L15b364..L15b38c] goto L15b3bc;
  catch `java.lang.Throwable` @[L15b394..L15b3a8] goto L15b3b6;
  catch `java.lang.Throwable` @[L15b3be..L15b3c0] goto L15b3c0;
}
procedure `void` `c`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.c:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15b3fc.  v0:= 0I;
  #L15b3fe.  call `b`(v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.b:()V` @kind direct;
  #L15b404.  if v0 == 0 then goto L15b416;
  #L15b408.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L15b40e.  v0:= temp @kind object;
  #L15b410.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L15b416.  return @kind void;
  #L15b418.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15b41a.  goto L15b454;
  #L15b41c.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L15b41e.  v2:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L15b422.  call temp:= `get`(v2) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L15b428.  v2:= temp @kind object;
  #L15b42a.  v3:= "Failed to read public suffix list" @kind object;
  #L15b42e.  v4:= 5I;
  #L15b430.  call `log`(v2, v3, v4, v1) @signature `Lokhttp3/internal/platform/Platform;.log:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind virtual;
  #L15b436.  if v0 == 0 then goto L15b448;
  #L15b43a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L15b440.  v0:= temp @kind object;
  #L15b442.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L15b448.  return @kind void;
  #L15b44a.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L15b450.  v0:= 1I;
  #L15b452.  goto L15b3fe;
  #L15b454.  if v0 == 0 then goto L15b466;
  #L15b458.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L15b45e.  v0:= temp @kind object;
  #L15b460.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L15b466.  throw v1;
  catch `java.io.InterruptedIOException` @[L15b3fe..L15b404] goto L15b44a;
  catch `java.io.IOException` @[L15b3fe..L15b404] goto L15b41c;
  catch `java.lang.Throwable` @[L15b3fe..L15b404] goto L15b418;
  catch `java.lang.Throwable` @[L15b41e..L15b436] goto L15b418;
  catch `java.lang.Throwable` @[L15b44a..L15b450] goto L15b418;
}
procedure `java.util.List` `d`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.d:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15b21c.  v0:= 1I;
  #L15b21e.  v2:= new `char`[v0];
  #L15b222.  v1:= 0I;
  #L15b224.  v3:= 46I;
  #L15b228.  v2[v1]:= v3 @kind char;
  #L15b22c.  v3:= 0I;
  #L15b22e.  v4:= 0I;
  #L15b230.  v5:= 6I;
  #L15b232.  v6:= 0I;
  #L15b234.  v1:= v8 @kind object;
  #L15b236.  call temp:= `split$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.split$default:(Ljava/lang/CharSequence;[CZIILjava/lang/Object;)Ljava/util/List;` @kind static;
  #L15b23c.  v8:= temp @kind object;
  #L15b23e.  call temp:= `last`(v8) @signature `Lkotlin/collections/CollectionsKt;.last:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L15b244.  v1:= temp @kind object;
  #L15b246.  v1:= (`java.lang.String`) v1 @kind object;
  #L15b24a.  v2:= "" @kind object;
  #L15b24e.  call temp:= `areEqual`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15b254.  v1:= temp;
  #L15b256.  if v1 == 0 then goto L15b262;
  #L15b25a.  call temp:= `dropLast`(v8, v0) @signature `Lkotlin/collections/CollectionsKt;.dropLast:(Ljava/util/List;I)Ljava/util/List;` @kind static;
  #L15b260.  v8:= temp @kind object;
  #L15b262.  return v8 @kind object;
}
procedure `java.lang.String` `getEffectiveTldPlusOne`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v10 @kind this, `java.lang.String` v11 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L15aec8.  v0:= "domain" @kind object;
  #L15aecc.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15aed2.  call temp:= `toUnicode`(v11) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15aed8.  v0:= temp @kind object;
  #L15aeda.  v1:= "unicodeDomain" @kind object;
  #L15aede.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15aee4.  call temp:= `d`(v10, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.d:(Ljava/lang/String;)Ljava/util/List;` @kind direct;
  #L15aeea.  v0:= temp @kind object;
  #L15aeec.  call temp:= `a`(v10, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:(Ljava/util/List;)Ljava/util/List;` @kind direct;
  #L15aef2.  v1:= temp @kind object;
  #L15aef4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15aefa.  v2:= temp;
  #L15aefc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15af02.  v3:= temp;
  #L15af04.  v4:= 33I;
  #L15af08.  v5:= 0I;
  #L15af0a.  if v2 != v3 then goto L15af2a;
  #L15af0e.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L15af14.  v2:= temp @kind object;
  #L15af16.  v2:= (`java.lang.String`) v2 @kind object;
  #L15af1a.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L15af20.  v2:= temp;
  #L15af22.  if v2 == v4 then goto L15af2a;
  #L15af26.  v11:= 0I;
  #L15af28.  return v11 @kind object;
  #L15af2a.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L15af30.  v2:= temp @kind object;
  #L15af32.  v2:= (`java.lang.String`) v2 @kind object;
  #L15af36.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L15af3c.  v2:= temp;
  #L15af3e.  if v2 != v4 then goto L15af54;
  #L15af42.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15af48.  v0:= temp;
  #L15af4a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15af50.  v1:= temp;
  #L15af52.  goto L15af68;
  #L15af54.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15af5a.  v0:= temp;
  #L15af5c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15af62.  v1:= temp;
  #L15af64.  v1:= v1 + 1;
  #L15af68.  v0:= v0 - v1 @kind int;
  #L15af6a.  call temp:= `d`(v10, v11) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.d:(Ljava/lang/String;)Ljava/util/List;` @kind direct;
  #L15af70.  v11:= temp @kind object;
  #L15af72.  call temp:= `asSequence`(v11) @signature `Lkotlin/collections/CollectionsKt;.asSequence:(Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;` @kind static;
  #L15af78.  v11:= temp @kind object;
  #L15af7a.  call temp:= `drop`(v11, v0) @signature `Lkotlin/sequences/SequencesKt;.drop:(Lkotlin/sequences/Sequence;I)Lkotlin/sequences/Sequence;` @kind static;
  #L15af80.  v1:= temp @kind object;
  #L15af82.  v3:= 0I;
  #L15af84.  v4:= 0I;
  #L15af86.  v5:= 0I;
  #L15af88.  v6:= 0I;
  #L15af8a.  v7:= 0I;
  #L15af8c.  v8:= 62I;
  #L15af90.  v9:= 0I;
  #L15af92.  v2:= "." @kind object;
  #L15af96.  call temp:= `joinToString$default`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lkotlin/sequences/SequencesKt;.joinToString$default:(Lkotlin/sequences/Sequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15af9c.  v11:= temp @kind object;
  #L15af9e.  return v11 @kind object;
}
procedure `void` `setListBytes`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.setListBytes:([B[B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15b49c.  v0:= "publicSuffixListBytes" @kind object;
  #L15b4a0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b4a6.  v0:= "publicSuffixExceptionListBytes" @kind object;
  #L15b4aa.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15b4b0.  v1.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] := v2 @kind object;
  #L15b4b4.  v1.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @type ^`byte`[] := v3 @kind object;
  #L15b4b8.  v2:= v1.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L15b4bc.  v3:= 1I;
  #L15b4be.  call `set`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L15b4c4.  v2:= v1.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L15b4c8.  call `countDown`(v2) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L15b4ce.  return @kind void;
}
