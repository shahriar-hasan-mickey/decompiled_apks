record `okhttp3.internal.connection.ExchangeFinder` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.internal.connection.RouteSelector$Selection` `okhttp3.internal.connection.ExchangeFinder.a` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RouteSelector` `okhttp3.internal.connection.ExchangeFinder.b` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.ExchangeFinder.c` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.ExchangeFinder.d` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.ExchangeFinder.e` @AccessFlag PRIVATE;
  `okhttp3.Route` `okhttp3.internal.connection.ExchangeFinder.f` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RealConnectionPool` `okhttp3.internal.connection.ExchangeFinder.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Address` `okhttp3.internal.connection.ExchangeFinder.h` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.RealCall` `okhttp3.internal.connection.ExchangeFinder.i` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.ExchangeFinder.j` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.ExchangeFinder` v1 @kind this, `okhttp3.internal.connection.RealConnectionPool` v2 @kind object, `okhttp3.Address` v3 @kind object, `okhttp3.internal.connection.RealCall` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/ExchangeFinder;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1466d0.  v0:= "connectionPool" @kind object;
  #L1466d4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1466da.  v0:= "address" @kind object;
  #L1466de.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1466e4.  v0:= "call" @kind object;
  #L1466e8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1466ee.  v0:= "eventListener" @kind object;
  #L1466f2.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1466f8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1466fe.  v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` := v2 @kind object;
  #L146702.  v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` := v3 @kind object;
  #L146706.  v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` := v4 @kind object;
  #L14670a.  v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` := v5 @kind object;
  #L14670e.  return @kind void;
}
procedure `okhttp3.internal.connection.RealConnection` `a`(`okhttp3.internal.connection.ExchangeFinder` v14 @kind this, `int` v15 , `int` v16 , `int` v17 , `int` v18 , `boolean` v19 ) @signature `Lokhttp3/internal/connection/ExchangeFinder;.a:(IIIIZ)Lokhttp3/internal/connection/RealConnection;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L14626c.  v1:= v14 @kind object;
  #L14626e.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146272.  call temp:= `isCanceled`(v0) @signature `Lokhttp3/internal/connection/RealCall;.isCanceled:()Z` @kind virtual;
  #L146278.  v0:= temp;
  #L14627a.  if v0 != 0 then goto L14655c;
  #L14627e.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146282.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L146288.  v2:= temp @kind object;
  #L14628a.  v0:= 1I;
  #L14628c.  v3:= 0I;
  #L14628e.  v4:= 0I;
  #L146290.  if v2 == 0 then goto L146334;
  #L146294.  @monitorenter v2
  #L146296.  call temp:= `getNoNewExchanges`(v2) @signature `Lokhttp3/internal/connection/RealConnection;.getNoNewExchanges:()Z` @kind virtual;
  #L14629c.  v5:= temp;
  #L14629e.  if v5 != 0 then goto L1462cc;
  #L1462a2.  call temp:= `route`(v2) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L1462a8.  v5:= temp @kind object;
  #L1462aa.  call temp:= `address`(v5) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1462b0.  v5:= temp @kind object;
  #L1462b2.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1462b8.  v5:= temp @kind object;
  #L1462ba.  call temp:= `sameHostAndPort`(v14, v5) @signature `Lokhttp3/internal/connection/ExchangeFinder;.sameHostAndPort:(Lokhttp3/HttpUrl;)Z` @kind virtual;
  #L1462c0.  v5:= temp;
  #L1462c2.  if v5 != 0 then goto L1462c8;
  #L1462c6.  goto L1462cc;
  #L1462c8.  v5:= v4 @kind object;
  #L1462ca.  goto L1462d8;
  #L1462cc.  v5:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1462d0.  call temp:= `releaseConnectionNoEvents$okhttp`(v5) @signature `Lokhttp3/internal/connection/RealCall;.releaseConnectionNoEvents$okhttp:()Ljava/net/Socket;` @kind virtual;
  #L1462d6.  v5:= temp @kind object;
  #L1462d8.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1462dc.  @monitorexit v2
  #L1462de.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1462e2.  call temp:= `getConnection`(v6) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1462e8.  v6:= temp @kind object;
  #L1462ea.  if v6 == 0 then goto L146314;
  #L1462ee.  if v5 != 0 then goto L1462f4;
  #L1462f2.  goto L1462f6;
  #L1462f4.  v0:= 0I;
  #L1462f6.  if v0 == 0 then goto L1462fc;
  #L1462fa.  return v2 @kind object;
  #L1462fc.  v0:= "Check failed." @kind object;
  #L146300.  v2:= new `java.lang.IllegalStateException`;
  #L146304.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L14630a.  v0:= temp @kind object;
  #L14630c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L146312.  throw v2;
  #L146314.  if v5 == 0 then goto L14631e;
  #L146318.  call `closeQuietly`(v5) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L14631e.  v5:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L146322.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146326.  call `connectionReleased`(v5, v6, v2) @signature `Lokhttp3/EventListener;.connectionReleased:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L14632c.  goto L146334;
  #L14632e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L146330.  @monitorexit v2
  #L146332.  throw v0;
  #L146334.  v1.`okhttp3.internal.connection.ExchangeFinder.c` @type ^`int` := v3;
  #L146338.  v1.`okhttp3.internal.connection.ExchangeFinder.d` @type ^`int` := v3;
  #L14633c.  v1.`okhttp3.internal.connection.ExchangeFinder.e` @type ^`int` := v3;
  #L146340.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L146344.  v5:= v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L146348.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L14634c.  call temp:= `callAcquirePooledConnection`(v2, v5, v6, v4, v3) @signature `Lokhttp3/internal/connection/RealConnectionPool;.callAcquirePooledConnection:(Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Ljava/util/List;Z)Z` @kind virtual;
  #L146352.  v2:= temp;
  #L146354.  if v2 == 0 then goto L14637a;
  #L146358.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L14635c.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L146362.  v0:= temp @kind object;
  #L146364.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14636a.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L14636e.  v3:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146372.  call `connectionAcquired`(v2, v3, v0) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L146378.  return v0 @kind object;
  #L14637a.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` @kind object;
  #L14637e.  if v2 == 0 then goto L146390;
  #L146382.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L146388.  v1.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` := v4 @kind object;
  #L14638c.  v5:= v4 @kind object;
  #L14638e.  goto L14645a;
  #L146390.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.a` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L146394.  if v2 == 0 then goto L1463be;
  #L146398.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14639e.  call temp:= `hasNext`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L1463a4.  v2:= temp;
  #L1463a6.  if v2 == 0 then goto L1463be;
  #L1463aa.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.a` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L1463ae.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1463b4.  call temp:= `next`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.next:()Lokhttp3/Route;` @kind virtual;
  #L1463ba.  v2:= temp @kind object;
  #L1463bc.  goto L14638c;
  #L1463be.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.b` @type ^`okhttp3.internal.connection.RouteSelector` @kind object;
  #L1463c2.  if v2 != 0 then goto L1463f4;
  #L1463c6.  v2:= new `okhttp3.internal.connection.RouteSelector`;
  #L1463ca.  v5:= v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L1463ce.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1463d2.  call temp:= `getClient`(v6) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1463d8.  v6:= temp @kind object;
  #L1463da.  call temp:= `getRouteDatabase`(v6) @signature `Lokhttp3/OkHttpClient;.getRouteDatabase:()Lokhttp3/internal/connection/RouteDatabase;` @kind virtual;
  #L1463e0.  v6:= temp @kind object;
  #L1463e2.  v7:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1463e6.  v8:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L1463ea.  call `<init>`(v2, v5, v6, v7, v8) @signature `Lokhttp3/internal/connection/RouteSelector;.<init>:(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L1463f0.  v1.`okhttp3.internal.connection.ExchangeFinder.b` @type ^`okhttp3.internal.connection.RouteSelector` := v2 @kind object;
  #L1463f4.  call temp:= `next`(v2) @signature `Lokhttp3/internal/connection/RouteSelector;.next:()Lokhttp3/internal/connection/RouteSelector$Selection;` @kind virtual;
  #L1463fa.  v2:= temp @kind object;
  #L1463fc.  v1.`okhttp3.internal.connection.ExchangeFinder.a` @type ^`okhttp3.internal.connection.RouteSelector$Selection` := v2 @kind object;
  #L146400.  call temp:= `getRoutes`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.getRoutes:()Ljava/util/List;` @kind virtual;
  #L146406.  v5:= temp @kind object;
  #L146408.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L14640c.  call temp:= `isCanceled`(v6) @signature `Lokhttp3/internal/connection/RealCall;.isCanceled:()Z` @kind virtual;
  #L146412.  v6:= temp;
  #L146414.  if v6 != 0 then goto L14654c;
  #L146418.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L14641c.  v7:= v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L146420.  v8:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146424.  call temp:= `callAcquirePooledConnection`(v6, v7, v8, v5, v3) @signature `Lokhttp3/internal/connection/RealConnectionPool;.callAcquirePooledConnection:(Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Ljava/util/List;Z)Z` @kind virtual;
  #L14642a.  v3:= temp;
  #L14642c.  if v3 == 0 then goto L146452;
  #L146430.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146434.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L14643a.  v0:= temp @kind object;
  #L14643c.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L146442.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L146446.  v3:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L14644a.  call `connectionAcquired`(v2, v3, v0) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L146450.  return v0 @kind object;
  #L146452.  call temp:= `next`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.next:()Lokhttp3/Route;` @kind virtual;
  #L146458.  v2:= temp @kind object;
  #L14645a.  v3:= new `okhttp3.internal.connection.RealConnection`;
  #L14645e.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L146462.  call `<init>`(v3, v6, v2) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;)V` @kind direct;
  #L146468.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L14646c.  call `setConnectionToCancel`(v6, v3) @signature `Lokhttp3/internal/connection/RealCall;.setConnectionToCancel:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L146472.  v12:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146476.  v13:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L14647a.  v6:= v3 @kind object;
  #L14647c.  v7:= v15;
  #L14647e.  v8:= v16;
  #L146482.  v9:= v17;
  #L146486.  v10:= v18;
  #L14648a.  v11:= v19;
  #L14648e.  call `connect`(v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lokhttp3/internal/connection/RealConnection;.connect:(IIIIZLokhttp3/Call;Lokhttp3/EventListener;)V` @kind virtual;
  #L146494.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146498.  call `setConnectionToCancel`(v6, v4) @signature `Lokhttp3/internal/connection/RealCall;.setConnectionToCancel:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L14649e.  v4:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1464a2.  call temp:= `getClient`(v4) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1464a8.  v4:= temp @kind object;
  #L1464aa.  call temp:= `getRouteDatabase`(v4) @signature `Lokhttp3/OkHttpClient;.getRouteDatabase:()Lokhttp3/internal/connection/RouteDatabase;` @kind virtual;
  #L1464b0.  v4:= temp @kind object;
  #L1464b2.  call temp:= `route`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L1464b8.  v6:= temp @kind object;
  #L1464ba.  call `connected`(v4, v6) @signature `Lokhttp3/internal/connection/RouteDatabase;.connected:(Lokhttp3/Route;)V` @kind virtual;
  #L1464c0.  v4:= v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L1464c4.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L1464c8.  v7:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1464cc.  call temp:= `callAcquirePooledConnection`(v4, v6, v7, v5, v0) @signature `Lokhttp3/internal/connection/RealConnectionPool;.callAcquirePooledConnection:(Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Ljava/util/List;Z)Z` @kind virtual;
  #L1464d2.  v0:= temp;
  #L1464d4.  if v0 == 0 then goto L14650c;
  #L1464d8.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1464dc.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1464e2.  v0:= temp @kind object;
  #L1464e4.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1464ea.  v1.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` := v2 @kind object;
  #L1464ee.  call temp:= `socket`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @kind virtual;
  #L1464f4.  v2:= temp @kind object;
  #L1464f6.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1464fc.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L146500.  v3:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146504.  call `connectionAcquired`(v2, v3, v0) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L14650a.  return v0 @kind object;
  #L14650c.  @monitorenter v3
  #L14650e.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L146512.  call `put`(v0, v3) @signature `Lokhttp3/internal/connection/RealConnectionPool;.put:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L146518.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L14651c.  call `acquireConnectionNoEvents`(v0, v3) @signature `Lokhttp3/internal/connection/RealCall;.acquireConnectionNoEvents:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L146522.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L146526.  @monitorexit v3
  #L146528.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L14652c.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146530.  call `connectionAcquired`(v0, v2, v3) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L146536.  return v3 @kind object;
  #L146538.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14653a.  @monitorexit v3
  #L14653c.  throw v0;
  #L14653e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L146540.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L146544.  call `setConnectionToCancel`(v2, v4) @signature `Lokhttp3/internal/connection/RealCall;.setConnectionToCancel:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L14654a.  throw v0;
  #L14654c.  v0:= new `java.io.IOException`;
  #L146550.  v2:= "Canceled" @kind object;
  #L146554.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14655a.  throw v0;
  #L14655c.  v0:= new `java.io.IOException`;
  #L146560.  v2:= "Canceled" @kind object;
  #L146564.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14656a.  throw v0;
  catch `java.lang.Throwable` @[L146296..L1462dc] goto L14632e;
  catch `java.lang.Throwable` @[L146472..L146494] goto L14653e;
  catch `java.lang.Throwable` @[L14650e..L146526] goto L146538;
}
procedure `okhttp3.internal.connection.RealConnection` `b`(`okhttp3.internal.connection.ExchangeFinder` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 , `boolean` v7 , `boolean` v8 ) @signature `Lokhttp3/internal/connection/ExchangeFinder;.b:(IIIIZZ)Lokhttp3/internal/connection/RealConnection;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1465a0.  call temp:= `a`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/connection/ExchangeFinder;.a:(IIIIZ)Lokhttp3/internal/connection/RealConnection;` @kind direct;
  #L1465a6.  v0:= temp @kind object;
  #L1465a8.  call temp:= `isHealthy`(v0, v8) @signature `Lokhttp3/internal/connection/RealConnection;.isHealthy:(Z)Z` @kind virtual;
  #L1465ae.  v1:= temp;
  #L1465b0.  if v1 == 0 then goto L1465b6;
  #L1465b4.  return v0 @kind object;
  #L1465b6.  call `noNewExchanges$okhttp`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges$okhttp:()V` @kind virtual;
  #L1465bc.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` @kind object;
  #L1465c0.  if v0 == 0 then goto L1465c6;
  #L1465c4.  goto L1465a0;
  #L1465c6.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.a` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L1465ca.  v1:= 1I;
  #L1465cc.  if v0 == 0 then goto L1465da;
  #L1465d0.  call temp:= `hasNext`(v0) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L1465d6.  v0:= temp;
  #L1465d8.  goto L1465dc;
  #L1465da.  v0:= 1I;
  #L1465dc.  if v0 == 0 then goto L1465e2;
  #L1465e0.  goto L1465a0;
  #L1465e2.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.b` @type ^`okhttp3.internal.connection.RouteSelector` @kind object;
  #L1465e6.  if v0 == 0 then goto L1465f2;
  #L1465ea.  call temp:= `hasNext`(v0) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L1465f0.  v1:= temp;
  #L1465f2.  if v1 == 0 then goto L1465f8;
  #L1465f6.  goto L1465a0;
  #L1465f8.  v3:= new `java.io.IOException`;
  #L1465fc.  v4:= "exhausted all routes" @kind object;
  #L146600.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L146606.  throw v3;
}
procedure `okhttp3.Route` `c`(`okhttp3.internal.connection.ExchangeFinder` v4 @kind this) @signature `Lokhttp3/internal/connection/ExchangeFinder;.c:()Lokhttp3/Route;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1461b8.  v0:= v4.`okhttp3.internal.connection.ExchangeFinder.c` @type ^`int`;
  #L1461bc.  v1:= 1I;
  #L1461be.  v2:= 0I;
  #L1461c0.  if v0 > v1 then goto L14623e;
  #L1461c4.  v0:= v4.`okhttp3.internal.connection.ExchangeFinder.d` @type ^`int`;
  #L1461c8.  if v0 > v1 then goto L14623e;
  #L1461cc.  v0:= v4.`okhttp3.internal.connection.ExchangeFinder.e` @type ^`int`;
  #L1461d0.  if v0 <= 0 then goto L1461d6;
  #L1461d4.  goto L14623e;
  #L1461d6.  v0:= v4.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1461da.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1461e0.  v0:= temp @kind object;
  #L1461e2.  if v0 == 0 then goto L14623e;
  #L1461e6.  @monitorenter v0
  #L1461e8.  call temp:= `getRouteFailureCount$okhttp`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.getRouteFailureCount$okhttp:()I` @kind virtual;
  #L1461ee.  v1:= temp;
  #L1461f0.  if v1 == 0 then goto L1461f8;
  #L1461f4.  @monitorexit v0
  #L1461f6.  return v2 @kind object;
  #L1461f8.  call temp:= `route`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L1461fe.  v1:= temp @kind object;
  #L146200.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L146206.  v1:= temp @kind object;
  #L146208.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14620e.  v1:= temp @kind object;
  #L146210.  v3:= v4.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L146214.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14621a.  v3:= temp @kind object;
  #L14621c.  call temp:= `canReuseConnectionFor`(v1, v3) @signature `Lokhttp3/internal/Util;.canReuseConnectionFor:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z` @kind static;
  #L146222.  v1:= temp;
  #L146224.  if v1 != 0 then goto L14622c;
  #L146228.  @monitorexit v0
  #L14622a.  return v2 @kind object;
  #L14622c.  call temp:= `route`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L146232.  v1:= temp @kind object;
  #L146234.  @monitorexit v0
  #L146236.  return v1 @kind object;
  #L146238.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14623a.  @monitorexit v0
  #L14623c.  throw v1;
  #L14623e.  return v2 @kind object;
  catch `java.lang.Throwable` @[L1461e8..L1461f0] goto L146238;
  catch `java.lang.Throwable` @[L1461f8..L146224] goto L146238;
  catch `java.lang.Throwable` @[L14622c..L146234] goto L146238;
}
procedure `okhttp3.internal.http.ExchangeCodec` `find`(`okhttp3.internal.connection.ExchangeFinder` v8 @kind this, `okhttp3.OkHttpClient` v9 @kind object, `okhttp3.internal.http.RealInterceptorChain` v10 @kind object) @signature `Lokhttp3/internal/connection/ExchangeFinder;.find:(Lokhttp3/OkHttpClient;Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/http/ExchangeCodec;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L146618.  v0:= "client" @kind object;
  #L14661c.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L146622.  v0:= "chain" @kind object;
  #L146626.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14662c.  call temp:= `getConnectTimeoutMillis$okhttp`(v10) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getConnectTimeoutMillis$okhttp:()I` @kind virtual;
  #L146632.  v2:= temp;
  #L146634.  call temp:= `getReadTimeoutMillis$okhttp`(v10) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getReadTimeoutMillis$okhttp:()I` @kind virtual;
  #L14663a.  v3:= temp;
  #L14663c.  call temp:= `getWriteTimeoutMillis$okhttp`(v10) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getWriteTimeoutMillis$okhttp:()I` @kind virtual;
  #L146642.  v4:= temp;
  #L146644.  call temp:= `pingIntervalMillis`(v9) @signature `Lokhttp3/OkHttpClient;.pingIntervalMillis:()I` @kind virtual;
  #L14664a.  v5:= temp;
  #L14664c.  call temp:= `retryOnConnectionFailure`(v9) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L146652.  v6:= temp;
  #L146654.  call temp:= `getRequest$okhttp`(v10) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getRequest$okhttp:()Lokhttp3/Request;` @kind virtual;
  #L14665a.  v0:= temp @kind object;
  #L14665c.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L146662.  v0:= temp @kind object;
  #L146664.  v1:= "GET" @kind object;
  #L146668.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14666e.  v0:= temp;
  #L146670.  v7:= v0 ^~ 1;
  #L146674.  v1:= v8 @kind object;
  #L146676.  call temp:= `b`(v1, v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/connection/ExchangeFinder;.b:(IIIIZZ)Lokhttp3/internal/connection/RealConnection;` @kind direct;
  #L14667c.  v0:= temp @kind object;
  #L14667e.  call temp:= `newCodec$okhttp`(v0, v9, v10) @signature `Lokhttp3/internal/connection/RealConnection;.newCodec$okhttp:(Lokhttp3/OkHttpClient;Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/http/ExchangeCodec;` @kind virtual;
  #L146684.  v9:= temp @kind object;
  #L146686.  return v9 @kind object;
  #L146688.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L14668a.  call `trackFailure`(v8, v9) @signature `Lokhttp3/internal/connection/ExchangeFinder;.trackFailure:(Ljava/io/IOException;)V` @kind virtual;
  #L146690.  v10:= new `okhttp3.internal.connection.RouteException`;
  #L146694.  call `<init>`(v10, v9) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L14669a.  throw v10;
  #L14669c.  v9:= Exception @type ^`okhttp3.internal.connection.RouteException` @kind object;
  #L14669e.  call temp:= `getLastConnectException`(v9) @signature `Lokhttp3/internal/connection/RouteException;.getLastConnectException:()Ljava/io/IOException;` @kind virtual;
  #L1466a4.  v10:= temp @kind object;
  #L1466a6.  call `trackFailure`(v8, v10) @signature `Lokhttp3/internal/connection/ExchangeFinder;.trackFailure:(Ljava/io/IOException;)V` @kind virtual;
  #L1466ac.  throw v9;
  catch `okhttp3.internal.connection.RouteException` @[L14662c..L146686] goto L14669c;
  catch `java.io.IOException` @[L14662c..L146686] goto L146688;
}
procedure `okhttp3.Address` `getAddress$okhttp`(`okhttp3.internal.connection.ExchangeFinder` v1 @kind this) @signature `Lokhttp3/internal/connection/ExchangeFinder;.getAddress$okhttp:()Lokhttp3/Address;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1461a0.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L1461a4.  return v0 @kind object;
}
procedure `boolean` `retryAfterFailure`(`okhttp3.internal.connection.ExchangeFinder` v2 @kind this) @signature `Lokhttp3/internal/connection/ExchangeFinder;.retryAfterFailure:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1460cc.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.c` @type ^`int`;
  #L1460d0.  if v0 != 0 then goto L1460e8;
  #L1460d4.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.d` @type ^`int`;
  #L1460d8.  if v0 != 0 then goto L1460e8;
  #L1460dc.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.e` @type ^`int`;
  #L1460e0.  if v0 != 0 then goto L1460e8;
  #L1460e4.  v0:= 0I;
  #L1460e6.  return v0;
  #L1460e8.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` @kind object;
  #L1460ec.  v1:= 1I;
  #L1460ee.  if v0 == 0 then goto L1460f4;
  #L1460f2.  return v1;
  #L1460f4.  call temp:= `c`(v2) @signature `Lokhttp3/internal/connection/ExchangeFinder;.c:()Lokhttp3/Route;` @kind direct;
  #L1460fa.  v0:= temp @kind object;
  #L1460fc.  if v0 == 0 then goto L146106;
  #L146100.  v2.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` := v0 @kind object;
  #L146104.  return v1;
  #L146106.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.a` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L14610a.  if v0 == 0 then goto L14611c;
  #L14610e.  call temp:= `hasNext`(v0) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L146114.  v0:= temp;
  #L146116.  if v0 != v1 then goto L14611c;
  #L14611a.  return v1;
  #L14611c.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.b` @type ^`okhttp3.internal.connection.RouteSelector` @kind object;
  #L146120.  if v0 == 0 then goto L14612e;
  #L146124.  call temp:= `hasNext`(v0) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L14612a.  v0:= temp;
  #L14612c.  return v0;
  #L14612e.  return v1;
}
procedure `boolean` `sameHostAndPort`(`okhttp3.internal.connection.ExchangeFinder` v3 @kind this, `okhttp3.HttpUrl` v4 @kind object) @signature `Lokhttp3/internal/connection/ExchangeFinder;.sameHostAndPort:(Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L146140.  v0:= "url" @kind object;
  #L146144.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14614a.  v0:= v3.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L14614e.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L146154.  v0:= temp @kind object;
  #L146156.  call temp:= `port`(v4) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L14615c.  v1:= temp;
  #L14615e.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L146164.  v2:= temp;
  #L146166.  if v1 != v2 then goto L14618a;
  #L14616a.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L146170.  v4:= temp @kind object;
  #L146172.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L146178.  v0:= temp @kind object;
  #L14617a.  call temp:= `areEqual`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L146180.  v4:= temp;
  #L146182.  if v4 == 0 then goto L14618a;
  #L146186.  v4:= 1I;
  #L146188.  goto L14618c;
  #L14618a.  v4:= 0I;
  #L14618c.  return v4;
}
procedure `void` `trackFailure`(`okhttp3.internal.connection.ExchangeFinder` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/connection/ExchangeFinder;.trackFailure:(Ljava/io/IOException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L146720.  v0:= "e" @kind object;
  #L146724.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14672a.  v0:= 0I;
  #L14672c.  v2.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` := v0 @kind object;
  #L146730.  v0:= instanceof @variable v3 @type ^`okhttp3.internal.http2.StreamResetException` @kind boolean;
  #L146734.  if v0 == 0 then goto L146758;
  #L146738.  v0:= v3 @kind object;
  #L14673a.  v0:= (`okhttp3.internal.http2.StreamResetException`) v0 @kind object;
  #L14673e.  v0:= v0.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L146742.  v1:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L146746.  if v0 != v1 then goto L146758;
  #L14674a.  v3:= v2.`okhttp3.internal.connection.ExchangeFinder.c` @type ^`int`;
  #L14674e.  v3:= v3 + 1;
  #L146752.  v2.`okhttp3.internal.connection.ExchangeFinder.c` @type ^`int` := v3;
  #L146756.  goto L14677a;
  #L146758.  v3:= instanceof @variable v3 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L14675c.  if v3 == 0 then goto L14676e;
  #L146760.  v3:= v2.`okhttp3.internal.connection.ExchangeFinder.d` @type ^`int`;
  #L146764.  v3:= v3 + 1;
  #L146768.  v2.`okhttp3.internal.connection.ExchangeFinder.d` @type ^`int` := v3;
  #L14676c.  goto L14677a;
  #L14676e.  v3:= v2.`okhttp3.internal.connection.ExchangeFinder.e` @type ^`int`;
  #L146772.  v3:= v3 + 1;
  #L146776.  v2.`okhttp3.internal.connection.ExchangeFinder.e` @type ^`int` := v3;
  #L14677a.  return @kind void;
}
