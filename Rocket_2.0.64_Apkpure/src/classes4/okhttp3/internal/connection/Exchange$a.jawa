record `okhttp3.internal.connection.Exchange$a` @kind class @AccessFlag FINAL extends `okio.ForwardingSink` @kind class {
  `boolean` `okhttp3.internal.connection.Exchange$a.b` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.connection.Exchange$a.c` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.Exchange$a.d` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.connection.Exchange$a.e` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.Exchange` `okhttp3.internal.connection.Exchange$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.Exchange$a` v1 @kind this, `okhttp3.internal.connection.Exchange` v2 @kind object, `okio.Sink` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/connection/Exchange$a;.<init>:(Lokhttp3/internal/connection/Exchange;Lokio/Sink;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L145d04.  v0:= "delegate" @kind object;
  #L145d08.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145d0e.  v1.`okhttp3.internal.connection.Exchange$a.f` @type ^`okhttp3.internal.connection.Exchange` := v2 @kind object;
  #L145d12.  call `<init>`(v1, v3) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L145d18.  v1.`okhttp3.internal.connection.Exchange$a.e` @type ^`long` := v4 @kind wide;
  #L145d1c.  return @kind void;
}
procedure `java.io.IOException` `a`(`okhttp3.internal.connection.Exchange$a` v7 @kind this, `java.io.IOException` v8 @kind object) @signature `Lokhttp3/internal/connection/Exchange$a;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L145ccc.  v0:= v7.`okhttp3.internal.connection.Exchange$a.b` @type ^`boolean` @kind boolean;
  #L145cd0.  if v0 == 0 then goto L145cd6;
  #L145cd4.  return v8 @kind object;
  #L145cd6.  v0:= 1I;
  #L145cd8.  v7.`okhttp3.internal.connection.Exchange$a.b` @type ^`boolean` := v0 @kind boolean;
  #L145cdc.  v1:= v7.`okhttp3.internal.connection.Exchange$a.f` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L145ce0.  v2:= v7.`okhttp3.internal.connection.Exchange$a.c` @type ^`long` @kind wide;
  #L145ce4.  v4:= 0I;
  #L145ce6.  v5:= 1I;
  #L145ce8.  v6:= v8 @kind object;
  #L145cea.  call temp:= `bodyComplete`(v1, v2, v4, v5, v6) @signature `Lokhttp3/internal/connection/Exchange;.bodyComplete:(JZZLjava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L145cf0.  v8:= temp @kind object;
  #L145cf2.  return v8 @kind object;
}
procedure `void` `close`(`okhttp3.internal.connection.Exchange$a` v5 @kind this) @signature `Lokhttp3/internal/connection/Exchange$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L145d30.  v0:= v5.`okhttp3.internal.connection.Exchange$a.d` @type ^`boolean` @kind boolean;
  #L145d34.  if v0 == 0 then goto L145d3a;
  #L145d38.  return @kind void;
  #L145d3a.  v0:= 1I;
  #L145d3c.  v5.`okhttp3.internal.connection.Exchange$a.d` @type ^`boolean` := v0 @kind boolean;
  #L145d40.  v0:= v5.`okhttp3.internal.connection.Exchange$a.e` @type ^`long` @kind wide;
  #L145d44.  v2:= -1L;
  #L145d48.  v4:= lcmp(v0, v2);
  #L145d4c.  if v4 == 0 then goto L145d6e;
  #L145d50.  v2:= v5.`okhttp3.internal.connection.Exchange$a.c` @type ^`long` @kind wide;
  #L145d54.  v4:= lcmp(v2, v0);
  #L145d58.  if v4 != 0 then goto L145d5e;
  #L145d5c.  goto L145d6e;
  #L145d5e.  v0:= new `java.net.ProtocolException`;
  #L145d62.  v1:= "unexpected end of stream" @kind object;
  #L145d66.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L145d6c.  throw v0;
  #L145d6e.  call `close`(v5) @signature `Lokio/ForwardingSink;.close:()V` @kind super;
  #L145d74.  v0:= 0I;
  #L145d76.  call temp:= `a`(v5, v0) @signature `Lokhttp3/internal/connection/Exchange$a;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind direct;
  #L145d7c.  return @kind void;
  #L145d7e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L145d80.  call temp:= `a`(v5, v0) @signature `Lokhttp3/internal/connection/Exchange$a;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind direct;
  #L145d86.  v0:= temp @kind object;
  #L145d88.  throw v0;
  catch `java.io.IOException` @[L145d6e..L145d7c] goto L145d7e;
}
procedure `void` `flush`(`okhttp3.internal.connection.Exchange$a` v1 @kind this) @signature `Lokhttp3/internal/connection/Exchange$a;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L145dac.  call `flush`(v1) @signature `Lokio/ForwardingSink;.flush:()V` @kind super;
  #L145db2.  return @kind void;
  #L145db4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L145db6.  call temp:= `a`(v1, v0) @signature `Lokhttp3/internal/connection/Exchange$a;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind direct;
  #L145dbc.  v0:= temp @kind object;
  #L145dbe.  throw v0;
  catch `java.io.IOException` @[L145dac..L145db2] goto L145db4;
}
procedure `void` `write`(`okhttp3.internal.connection.Exchange$a` v5 @kind this, `okio.Buffer` v6 @kind object, `long` v7 ) @signature `Lokhttp3/internal/connection/Exchange$a;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L145de0.  v0:= "source" @kind object;
  #L145de4.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145dea.  v0:= v5.`okhttp3.internal.connection.Exchange$a.d` @type ^`boolean` @kind boolean;
  #L145dee.  v0:= v0 ^~ 1;
  #L145df2.  if v0 == 0 then goto L145e7c;
  #L145df6.  v0:= v5.`okhttp3.internal.connection.Exchange$a.e` @type ^`long` @kind wide;
  #L145dfa.  v2:= -1L;
  #L145dfe.  v4:= lcmp(v0, v2);
  #L145e02.  if v4 == 0 then goto L145e5e;
  #L145e06.  v2:= v5.`okhttp3.internal.connection.Exchange$a.c` @type ^`long` @kind wide;
  #L145e0a.  v2:= v2 + v7 @kind long;
  #L145e0c.  v4:= lcmp(v2, v0);
  #L145e10.  if v4 > 0 then goto L145e16;
  #L145e14.  goto L145e5e;
  #L145e16.  v6:= new `java.net.ProtocolException`;
  #L145e1a.  v0:= new `java.lang.StringBuilder`;
  #L145e1e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L145e24.  v1:= "expected " @kind object;
  #L145e28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L145e2e.  v1:= v5.`okhttp3.internal.connection.Exchange$a.e` @type ^`long` @kind wide;
  #L145e32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L145e38.  v1:= " bytes but received " @kind object;
  #L145e3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L145e42.  v1:= v5.`okhttp3.internal.connection.Exchange$a.c` @type ^`long` @kind wide;
  #L145e46.  v1:= v1 + v7 @kind long;
  #L145e48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L145e4e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L145e54.  v7:= temp @kind object;
  #L145e56.  call `<init>`(v6, v7) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L145e5c.  throw v6;
  #L145e5e.  call `write`(v5, v6, v7) @signature `Lokio/ForwardingSink;.write:(Lokio/Buffer;J)V` @kind super;
  #L145e64.  v0:= v5.`okhttp3.internal.connection.Exchange$a.c` @type ^`long` @kind wide;
  #L145e68.  v0:= v0 + v7 @kind long;
  #L145e6a.  v5.`okhttp3.internal.connection.Exchange$a.c` @type ^`long` := v0 @kind wide;
  #L145e6e.  return @kind void;
  #L145e70.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L145e72.  call temp:= `a`(v5, v6) @signature `Lokhttp3/internal/connection/Exchange$a;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind direct;
  #L145e78.  v6:= temp @kind object;
  #L145e7a.  throw v6;
  #L145e7c.  v6:= new `java.lang.IllegalStateException`;
  #L145e80.  v7:= "closed" @kind object;
  #L145e84.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L145e8a.  v7:= temp @kind object;
  #L145e8c.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L145e92.  throw v6;
  catch `java.io.IOException` @[L145e5e..L145e6e] goto L145e70;
}
