record `okhttp3.internal.connection.RealConnectionPool` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `okhttp3.internal.connection.RealConnectionPool.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.concurrent.TaskQueue` `okhttp3.internal.connection.RealConnectionPool.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.RealConnectionPool$cleanupTask$1` `okhttp3.internal.connection.RealConnectionPool.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentLinkedQueue` `okhttp3.internal.connection.RealConnectionPool.d` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.connection.RealConnectionPool.e` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.connection.RealConnectionPool$Companion` `@@okhttp3.internal.connection.RealConnectionPool.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/RealConnectionPool;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1487d4.  v0:= new `okhttp3.internal.connection.RealConnectionPool$Companion`;
  #L1487d8.  v1:= 0I;
  #L1487da.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RealConnectionPool$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1487e0.  `@@okhttp3.internal.connection.RealConnectionPool.Companion` @type ^`okhttp3.internal.connection.RealConnectionPool$Companion` := v0 @kind object;
  #L1487e4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnectionPool` v2 @kind this, `okhttp3.internal.concurrent.TaskRunner` v3 @kind object, `int` v4 , `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object) @signature `Lokhttp3/internal/connection/RealConnectionPool;.<init>:(Lokhttp3/internal/concurrent/TaskRunner;IJLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1487f8.  v0:= "taskRunner" @kind object;
  #L1487fc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L148802.  v0:= "timeUnit" @kind object;
  #L148806.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14880c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L148812.  v2.`okhttp3.internal.connection.RealConnectionPool.e` @type ^`int` := v4;
  #L148816.  call temp:= `toNanos`(v7, v5) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L14881c.  v0:= temp @kind wide;
  #L14881e.  v2.`okhttp3.internal.connection.RealConnectionPool.a` @type ^`long` := v0 @kind wide;
  #L148822.  call temp:= `newQueue`(v3) @signature `Lokhttp3/internal/concurrent/TaskRunner;.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;` @kind virtual;
  #L148828.  v3:= temp @kind object;
  #L14882a.  v2.`okhttp3.internal.connection.RealConnectionPool.b` @type ^`okhttp3.internal.concurrent.TaskQueue` := v3 @kind object;
  #L14882e.  v3:= new `okhttp3.internal.connection.RealConnectionPool$cleanupTask$1`;
  #L148832.  v4:= new `java.lang.StringBuilder`;
  #L148836.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14883c.  v7:= `@@okhttp3.internal.Util.okHttpName` @type ^`java.lang.String` @kind object;
  #L148840.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148846.  v7:= " ConnectionPool" @kind object;
  #L14884a.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148850.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148856.  v4:= temp @kind object;
  #L148858.  call `<init>`(v3, v2, v4) @signature `Lokhttp3/internal/connection/RealConnectionPool$cleanupTask$1;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;Ljava/lang/String;)V` @kind direct;
  #L14885e.  v2.`okhttp3.internal.connection.RealConnectionPool.c` @type ^`okhttp3.internal.connection.RealConnectionPool$cleanupTask$1` := v3 @kind object;
  #L148862.  v3:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L148866.  call `<init>`(v3) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L14886c.  v2.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` := v3 @kind object;
  #L148870.  v3:= 0L;
  #L148874.  v7:= lcmp(v5, v3);
  #L148878.  if v7 <= 0 then goto L148880;
  #L14887c.  v3:= 1I;
  #L14887e.  goto L148882;
  #L148880.  v3:= 0I;
  #L148882.  if v3 == 0 then goto L148888;
  #L148886.  return @kind void;
  #L148888.  v3:= new `java.lang.StringBuilder`;
  #L14888c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L148892.  v4:= "keepAliveDuration <= 0: " @kind object;
  #L148896.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14889c.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1488a2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1488a8.  v3:= temp @kind object;
  #L1488aa.  v4:= new `java.lang.IllegalArgumentException`;
  #L1488ae.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1488b4.  v3:= temp @kind object;
  #L1488b6.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1488bc.  throw v4;
}
procedure `int` `a`(`okhttp3.internal.connection.RealConnectionPool` v6 @kind this, `okhttp3.internal.connection.RealConnection` v7 @kind object, `long` v8 ) @signature `Lokhttp3/internal/connection/RealConnectionPool;.a:(Lokhttp3/internal/connection/RealConnection;J)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L14851c.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L148520.  if v0 == 0 then goto L14858a;
  #L148524.  call temp:= `holdsLock`(v7) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L14852a.  v0:= temp;
  #L14852c.  if v0 == 0 then goto L148532;
  #L148530.  goto L14858a;
  #L148532.  v8:= new `java.lang.AssertionError`;
  #L148536.  v9:= new `java.lang.StringBuilder`;
  #L14853a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L148540.  v0:= "Thread " @kind object;
  #L148544.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14854a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L148550.  v0:= temp @kind object;
  #L148552.  v1:= "Thread.currentThread()" @kind object;
  #L148556.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14855c.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L148562.  v0:= temp @kind object;
  #L148564.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14856a.  v0:= " MUST hold lock on " @kind object;
  #L14856e.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148574.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14857a.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148580.  v7:= temp @kind object;
  #L148582.  call `<init>`(v8, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L148588.  throw v8;
  #L14858a.  call temp:= `getCalls`(v7) @signature `Lokhttp3/internal/connection/RealConnection;.getCalls:()Ljava/util/List;` @kind virtual;
  #L148590.  v0:= temp @kind object;
  #L148592.  v1:= 0I;
  #L148594.  v2:= 0I;
  #L148596.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14859c.  v3:= temp;
  #L14859e.  if v2 >= v3 then goto L148654;
  #L1485a2.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1485a8.  v3:= temp @kind object;
  #L1485aa.  v3:= (`java.lang.ref.Reference`) v3 @kind object;
  #L1485ae.  call temp:= `get`(v3) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1485b4.  v4:= temp @kind object;
  #L1485b6.  if v4 == 0 then goto L1485c0;
  #L1485ba.  v2:= v2 + 1;
  #L1485be.  goto L148596;
  #L1485c0.  v3:= (`okhttp3.internal.connection.RealCall$CallReference`) v3 @kind object;
  #L1485c4.  v4:= new `java.lang.StringBuilder`;
  #L1485c8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1485ce.  v5:= "A connection to " @kind object;
  #L1485d2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1485d8.  call temp:= `route`(v7) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L1485de.  v5:= temp @kind object;
  #L1485e0.  call temp:= `address`(v5) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1485e6.  v5:= temp @kind object;
  #L1485e8.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1485ee.  v5:= temp @kind object;
  #L1485f0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1485f6.  v5:= " was leaked. " @kind object;
  #L1485fa.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148600.  v5:= "Did you forget to close a response body?" @kind object;
  #L148604.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14860a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148610.  v4:= temp @kind object;
  #L148612.  v5:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L148616.  call temp:= `get`(v5) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L14861c.  v5:= temp @kind object;
  #L14861e.  call temp:= `getCallStackTrace`(v3) @signature `Lokhttp3/internal/connection/RealCall$CallReference;.getCallStackTrace:()Ljava/lang/Object;` @kind virtual;
  #L148624.  v3:= temp @kind object;
  #L148626.  call `logCloseableLeak`(v5, v4, v3) @signature `Lokhttp3/internal/platform/Platform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L14862c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L148632.  v3:= 1I;
  #L148634.  call `setNoNewExchanges`(v7, v3) @signature `Lokhttp3/internal/connection/RealConnection;.setNoNewExchanges:(Z)V` @kind virtual;
  #L14863a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L148640.  v3:= temp;
  #L148642.  if v3 == 0 then goto L148596;
  #L148646.  v2:= v6.`okhttp3.internal.connection.RealConnectionPool.a` @type ^`long` @kind wide;
  #L14864a.  v8:= v8 - v2 @kind long;
  #L14864c.  call `setIdleAtNs$okhttp`(v7, v8) @signature `Lokhttp3/internal/connection/RealConnection;.setIdleAtNs$okhttp:(J)V` @kind virtual;
  #L148652.  return v1;
  #L148654.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14865a.  v7:= temp;
  #L14865c.  return v7;
}
procedure `boolean` `callAcquirePooledConnection`(`okhttp3.internal.connection.RealConnectionPool` v3 @kind this, `okhttp3.Address` v4 @kind object, `okhttp3.internal.connection.RealCall` v5 @kind object, `java.util.List` v6 @kind object, `boolean` v7 ) @signature `Lokhttp3/internal/connection/RealConnectionPool;.callAcquirePooledConnection:(Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Ljava/util/List;Z)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1482dc.  v0:= "address" @kind object;
  #L1482e0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1482e6.  v0:= "call" @kind object;
  #L1482ea.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1482f0.  v0:= v3.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L1482f4.  call temp:= `iterator`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1482fa.  v0:= temp @kind object;
  #L1482fc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L148302.  v1:= temp;
  #L148304.  if v1 == 0 then goto L148358;
  #L148308.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L14830e.  v1:= temp @kind object;
  #L148310.  v1:= (`okhttp3.internal.connection.RealConnection`) v1 @kind object;
  #L148314.  v2:= "connection" @kind object;
  #L148318.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14831e.  @monitorenter v1
  #L148320.  if v7 == 0 then goto L148332;
  #L148324.  call temp:= `isMultiplexed$okhttp`(v1) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed$okhttp:()Z` @kind virtual;
  #L14832a.  v2:= temp;
  #L14832c.  if v2 != 0 then goto L148332;
  #L148330.  goto L14833e;
  #L148332.  call temp:= `isEligible$okhttp`(v1, v4, v6) @signature `Lokhttp3/internal/connection/RealConnection;.isEligible$okhttp:(Lokhttp3/Address;Ljava/util/List;)Z` @kind virtual;
  #L148338.  v2:= temp;
  #L14833a.  if v2 != 0 then goto L148346;
  #L14833e.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L148342.  @monitorexit v1
  #L148344.  goto L1482fc;
  #L148346.  call `acquireConnectionNoEvents`(v5, v1) @signature `Lokhttp3/internal/connection/RealCall;.acquireConnectionNoEvents:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L14834c.  v4:= 1I;
  #L14834e.  @monitorexit v1
  #L148350.  return v4;
  #L148352.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L148354.  @monitorexit v1
  #L148356.  throw v4;
  #L148358.  v4:= 0I;
  #L14835a.  return v4;
  catch `java.lang.Throwable` @[L148324..L148342] goto L148352;
  catch `java.lang.Throwable` @[L148346..L14834c] goto L148352;
}
procedure `long` `cleanup`(`okhttp3.internal.connection.RealConnectionPool` v10 @kind this, `long` v11 ) @signature `Lokhttp3/internal/connection/RealConnectionPool;.cleanup:(J)J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L148670.  v0:= v10.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L148674.  call temp:= `iterator`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L14867a.  v0:= temp @kind object;
  #L14867c.  v1:= 0I;
  #L14867e.  v2:= 0I;
  #L148680.  v3:= -9223372036854775808L;
  #L148684.  v4:= v3 @kind wide;
  #L148686.  v3:= v2 @kind object;
  #L148688.  v2:= 0I;
  #L14868a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L148690.  v6:= temp;
  #L148692.  if v6 == 0 then goto L1486f0;
  #L148696.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L14869c.  v6:= temp @kind object;
  #L14869e.  v6:= (`okhttp3.internal.connection.RealConnection`) v6 @kind object;
  #L1486a2.  v7:= "connection" @kind object;
  #L1486a6.  call `checkNotNullExpressionValue`(v6, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1486ac.  @monitorenter v6
  #L1486ae.  call temp:= `a`(v10, v6, v11) @signature `Lokhttp3/internal/connection/RealConnectionPool;.a:(Lokhttp3/internal/connection/RealConnection;J)I` @kind direct;
  #L1486b4.  v7:= temp;
  #L1486b6.  if v7 <= 0 then goto L1486c0;
  #L1486ba.  v2:= v2 + 1;
  #L1486be.  goto L1486e6;
  #L1486c0.  v1:= v1 + 1;
  #L1486c4.  call temp:= `getIdleAtNs$okhttp`(v6) @signature `Lokhttp3/internal/connection/RealConnection;.getIdleAtNs$okhttp:()J` @kind virtual;
  #L1486ca.  v7:= temp @kind wide;
  #L1486cc.  v7:= v11 - v7 @kind long;
  #L1486d0.  v9:= lcmp(v7, v4);
  #L1486d4.  if v9 <= 0 then goto L1486e2;
  #L1486d8.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1486dc.  v3:= v6 @kind object;
  #L1486de.  v4:= v7 @kind wide;
  #L1486e0.  goto L1486e6;
  #L1486e2.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1486e6.  @monitorexit v6
  #L1486e8.  goto L14868a;
  #L1486ea.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1486ec.  @monitorexit v6
  #L1486ee.  throw v11;
  #L1486f0.  v6:= v10.`okhttp3.internal.connection.RealConnectionPool.a` @type ^`long` @kind wide;
  #L1486f4.  v0:= lcmp(v4, v6);
  #L1486f8.  if v0 >= 0 then goto L14871a;
  #L1486fc.  v0:= v10.`okhttp3.internal.connection.RealConnectionPool.e` @type ^`int`;
  #L148700.  if v1 <= v0 then goto L148706;
  #L148704.  goto L14871a;
  #L148706.  if v1 <= 0 then goto L14870e;
  #L14870a.  v6:= v6 - v4 @kind long;
  #L14870c.  return v6 @kind wide;
  #L14870e.  if v2 <= 0 then goto L148714;
  #L148712.  return v6 @kind wide;
  #L148714.  v11:= -1L;
  #L148718.  return v11 @kind wide;
  #L14871a.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L148720.  @monitorenter v3
  #L148722.  call temp:= `getCalls`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.getCalls:()Ljava/util/List;` @kind virtual;
  #L148728.  v0:= temp @kind object;
  #L14872a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L148730.  v0:= temp;
  #L148732.  v1:= 1I;
  #L148734.  v0:= v0 ^~ v1 @kind int;
  #L148736.  v6:= 0L;
  #L14873a.  if v0 == 0 then goto L148742;
  #L14873e.  @monitorexit v3
  #L148740.  return v6 @kind wide;
  #L148742.  call temp:= `getIdleAtNs$okhttp`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.getIdleAtNs$okhttp:()J` @kind virtual;
  #L148748.  v8:= temp @kind wide;
  #L14874a.  v8:= v8 + v4 @kind long;
  #L14874c.  v0:= lcmp(v8, v11);
  #L148750.  if v0 == 0 then goto L148758;
  #L148754.  @monitorexit v3
  #L148756.  return v6 @kind wide;
  #L148758.  call `setNoNewExchanges`(v3, v1) @signature `Lokhttp3/internal/connection/RealConnection;.setNoNewExchanges:(Z)V` @kind virtual;
  #L14875e.  v11:= v10.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L148762.  call temp:= `remove`(v11, v3) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L148768.  @monitorexit v3
  #L14876a.  call temp:= `socket`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @kind virtual;
  #L148770.  v11:= temp @kind object;
  #L148772.  call `closeQuietly`(v11) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L148778.  v11:= v10.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L14877c.  call temp:= `isEmpty`(v11) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L148782.  v11:= temp;
  #L148784.  if v11 == 0 then goto L148792;
  #L148788.  v11:= v10.`okhttp3.internal.connection.RealConnectionPool.b` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L14878c.  call `cancelAll`(v11) @signature `Lokhttp3/internal/concurrent/TaskQueue;.cancelAll:()V` @kind virtual;
  #L148792.  return v6 @kind wide;
  #L148794.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L148796.  @monitorexit v3
  #L148798.  throw v11;
  catch `java.lang.Throwable` @[L1486ae..L1486e6] goto L1486ea;
  catch `java.lang.Throwable` @[L148722..L148732] goto L148794;
  catch `java.lang.Throwable` @[L148742..L14874a] goto L148794;
  catch `java.lang.Throwable` @[L148758..L148768] goto L148794;
}
procedure `boolean` `connectionBecameIdle`(`okhttp3.internal.connection.RealConnectionPool` v8 @kind this, `okhttp3.internal.connection.RealConnection` v9 @kind object) @signature `Lokhttp3/internal/connection/RealConnectionPool;.connectionBecameIdle:(Lokhttp3/internal/connection/RealConnection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L148380.  v0:= "connection" @kind object;
  #L148384.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14838a.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L14838e.  if v0 == 0 then goto L1483f8;
  #L148392.  call temp:= `holdsLock`(v9) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L148398.  v0:= temp;
  #L14839a.  if v0 == 0 then goto L1483a0;
  #L14839e.  goto L1483f8;
  #L1483a0.  v0:= new `java.lang.AssertionError`;
  #L1483a4.  v1:= new `java.lang.StringBuilder`;
  #L1483a8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1483ae.  v2:= "Thread " @kind object;
  #L1483b2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1483b8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1483be.  v2:= temp @kind object;
  #L1483c0.  v3:= "Thread.currentThread()" @kind object;
  #L1483c4.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1483ca.  call temp:= `getName`(v2) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1483d0.  v2:= temp @kind object;
  #L1483d2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1483d8.  v2:= " MUST hold lock on " @kind object;
  #L1483dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1483e2.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1483e8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1483ee.  v9:= temp @kind object;
  #L1483f0.  call `<init>`(v0, v9) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1483f6.  throw v0;
  #L1483f8.  call temp:= `getNoNewExchanges`(v9) @signature `Lokhttp3/internal/connection/RealConnection;.getNoNewExchanges:()Z` @kind virtual;
  #L1483fe.  v0:= temp;
  #L148400.  v1:= 1I;
  #L148402.  if v0 != 0 then goto L14842a;
  #L148406.  v0:= v8.`okhttp3.internal.connection.RealConnectionPool.e` @type ^`int`;
  #L14840a.  if v0 != 0 then goto L148410;
  #L14840e.  goto L14842a;
  #L148410.  v2:= v8.`okhttp3.internal.connection.RealConnectionPool.b` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L148414.  v3:= v8.`okhttp3.internal.connection.RealConnectionPool.c` @type ^`okhttp3.internal.connection.RealConnectionPool$cleanupTask$1` @kind object;
  #L148418.  v4:= 0L;
  #L14841c.  v6:= 2I;
  #L14841e.  v7:= 0I;
  #L148420.  call `schedule$default`(v2, v3, v4, v6, v7) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule$default:(Lokhttp3/internal/concurrent/TaskQueue;Lokhttp3/internal/concurrent/Task;JILjava/lang/Object;)V` @kind static;
  #L148426.  v1:= 0I;
  #L148428.  goto L148454;
  #L14842a.  call `setNoNewExchanges`(v9, v1) @signature `Lokhttp3/internal/connection/RealConnection;.setNoNewExchanges:(Z)V` @kind virtual;
  #L148430.  v0:= v8.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L148434.  call temp:= `remove`(v0, v9) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L14843a.  v9:= v8.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L14843e.  call temp:= `isEmpty`(v9) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L148444.  v9:= temp;
  #L148446.  if v9 == 0 then goto L148454;
  #L14844a.  v9:= v8.`okhttp3.internal.connection.RealConnectionPool.b` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L14844e.  call `cancelAll`(v9) @signature `Lokhttp3/internal/concurrent/TaskQueue;.cancelAll:()V` @kind virtual;
  #L148454.  return v1;
}
procedure `int` `connectionCount`(`okhttp3.internal.connection.RealConnectionPool` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnectionPool;.connectionCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L148468.  v0:= v1.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L14846c.  call temp:= `size`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.size:()I` @kind virtual;
  #L148472.  v0:= temp;
  #L148474.  return v0;
}
procedure `void` `evictAll`(`okhttp3.internal.connection.RealConnectionPool` v3 @kind this) @signature `Lokhttp3/internal/connection/RealConnectionPool;.evictAll:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1488d0.  v0:= v3.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L1488d4.  call temp:= `iterator`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1488da.  v0:= temp @kind object;
  #L1488dc.  v1:= "connections.iterator()" @kind object;
  #L1488e0.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1488e6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1488ec.  v1:= temp;
  #L1488ee.  if v1 == 0 then goto L14894c;
  #L1488f2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1488f8.  v1:= temp @kind object;
  #L1488fa.  v1:= (`okhttp3.internal.connection.RealConnection`) v1 @kind object;
  #L1488fe.  v2:= "connection" @kind object;
  #L148902.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L148908.  @monitorenter v1
  #L14890a.  call temp:= `getCalls`(v1) @signature `Lokhttp3/internal/connection/RealConnection;.getCalls:()Ljava/util/List;` @kind virtual;
  #L148910.  v2:= temp @kind object;
  #L148912.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L148918.  v2:= temp;
  #L14891a.  if v2 == 0 then goto L148936;
  #L14891e.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L148924.  v2:= 1I;
  #L148926.  call `setNoNewExchanges`(v1, v2) @signature `Lokhttp3/internal/connection/RealConnection;.setNoNewExchanges:(Z)V` @kind virtual;
  #L14892c.  call temp:= `socket`(v1) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @kind virtual;
  #L148932.  v2:= temp @kind object;
  #L148934.  goto L148938;
  #L148936.  v2:= 0I;
  #L148938.  @monitorexit v1
  #L14893a.  if v2 == 0 then goto L1488e6;
  #L14893e.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L148944.  goto L1488e6;
  #L148946.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L148948.  @monitorexit v1
  #L14894a.  throw v0;
  #L14894c.  v0:= v3.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L148950.  call temp:= `isEmpty`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L148956.  v0:= temp;
  #L148958.  if v0 == 0 then goto L148966;
  #L14895c.  v0:= v3.`okhttp3.internal.connection.RealConnectionPool.b` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L148960.  call `cancelAll`(v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.cancelAll:()V` @kind virtual;
  #L148966.  return @kind void;
  catch `java.lang.Throwable` @[L14890a..L148934] goto L148946;
}
procedure `int` `idleConnectionCount`(`okhttp3.internal.connection.RealConnectionPool` v4 @kind this) @signature `Lokhttp3/internal/connection/RealConnectionPool;.idleConnectionCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L148488.  v0:= v4.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L14848c.  v1:= instanceof @variable v0 @type ^`java.util.Collection` @kind boolean;
  #L148490.  v2:= 0I;
  #L148492.  if v1 == 0 then goto L1484a4;
  #L148496.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L14849c.  v1:= temp;
  #L14849e.  if v1 == 0 then goto L1484a4;
  #L1484a2.  goto L1484fc;
  #L1484a4.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1484aa.  v0:= temp @kind object;
  #L1484ac.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1484b2.  v1:= temp;
  #L1484b4.  if v1 == 0 then goto L1484fc;
  #L1484b8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1484be.  v1:= temp @kind object;
  #L1484c0.  v1:= (`okhttp3.internal.connection.RealConnection`) v1 @kind object;
  #L1484c4.  v3:= "it" @kind object;
  #L1484c8.  call `checkNotNullExpressionValue`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1484ce.  @monitorenter v1
  #L1484d0.  call temp:= `getCalls`(v1) @signature `Lokhttp3/internal/connection/RealConnection;.getCalls:()Ljava/util/List;` @kind virtual;
  #L1484d6.  v3:= temp @kind object;
  #L1484d8.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1484de.  v3:= temp;
  #L1484e0.  @monitorexit v1
  #L1484e2.  if v3 == 0 then goto L1484ac;
  #L1484e6.  v2:= v2 + 1;
  #L1484ea.  if v2 >= 0 then goto L1484ac;
  #L1484ee.  call `throwCountOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwCountOverflow:()V` @kind static;
  #L1484f4.  goto L1484ac;
  #L1484f6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1484f8.  @monitorexit v1
  #L1484fa.  throw v0;
  #L1484fc.  return v2;
  catch `java.lang.Throwable` @[L1484d0..L1484e0] goto L1484f6;
}
procedure `void` `put`(`okhttp3.internal.connection.RealConnectionPool` v7 @kind this, `okhttp3.internal.connection.RealConnection` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnectionPool;.put:(Lokhttp3/internal/connection/RealConnection;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L148984.  v0:= "connection" @kind object;
  #L148988.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14898e.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L148992.  if v0 == 0 then goto L1489fc;
  #L148996.  call temp:= `holdsLock`(v8) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L14899c.  v0:= temp;
  #L14899e.  if v0 == 0 then goto L1489a4;
  #L1489a2.  goto L1489fc;
  #L1489a4.  v0:= new `java.lang.AssertionError`;
  #L1489a8.  v1:= new `java.lang.StringBuilder`;
  #L1489ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1489b2.  v2:= "Thread " @kind object;
  #L1489b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1489bc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1489c2.  v2:= temp @kind object;
  #L1489c4.  v3:= "Thread.currentThread()" @kind object;
  #L1489c8.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1489ce.  call temp:= `getName`(v2) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1489d4.  v2:= temp @kind object;
  #L1489d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1489dc.  v2:= " MUST hold lock on " @kind object;
  #L1489e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1489e6.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1489ec.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1489f2.  v8:= temp @kind object;
  #L1489f4.  call `<init>`(v0, v8) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1489fa.  throw v0;
  #L1489fc.  v0:= v7.`okhttp3.internal.connection.RealConnectionPool.d` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L148a00.  call temp:= `add`(v0, v8) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L148a06.  v1:= v7.`okhttp3.internal.connection.RealConnectionPool.b` @type ^`okhttp3.internal.concurrent.TaskQueue` @kind object;
  #L148a0a.  v2:= v7.`okhttp3.internal.connection.RealConnectionPool.c` @type ^`okhttp3.internal.connection.RealConnectionPool$cleanupTask$1` @kind object;
  #L148a0e.  v3:= 0L;
  #L148a12.  v5:= 2I;
  #L148a14.  v6:= 0I;
  #L148a16.  call `schedule$default`(v1, v2, v3, v5, v6) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule$default:(Lokhttp3/internal/concurrent/TaskQueue;Lokhttp3/internal/concurrent/Task;JILjava/lang/Object;)V` @kind static;
  #L148a1c.  return @kind void;
}
