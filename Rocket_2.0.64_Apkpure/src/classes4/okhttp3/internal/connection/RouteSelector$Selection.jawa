record `okhttp3.internal.connection.RouteSelector$Selection` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.connection.RouteSelector$Selection.a` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector$Selection.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector$Selection` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14a468.  v0:= "routes" @kind object;
  #L14a46c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14a472.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14a478.  v1.`okhttp3.internal.connection.RouteSelector$Selection.b` @type ^`java.util.List` := v2 @kind object;
  #L14a47c.  return @kind void;
}
procedure `java.util.List` `getRoutes`(`okhttp3.internal.connection.RouteSelector$Selection` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.getRoutes:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14a408.  v0:= v1.`okhttp3.internal.connection.RouteSelector$Selection.b` @type ^`java.util.List` @kind object;
  #L14a40c.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector$Selection` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L14a3dc.  v0:= v2.`okhttp3.internal.connection.RouteSelector$Selection.a` @type ^`int`;
  #L14a3e0.  v1:= v2.`okhttp3.internal.connection.RouteSelector$Selection.b` @type ^`java.util.List` @kind object;
  #L14a3e4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14a3ea.  v1:= temp;
  #L14a3ec.  if v0 >= v1 then goto L14a3f4;
  #L14a3f0.  v0:= 1I;
  #L14a3f2.  goto L14a3f6;
  #L14a3f4.  v0:= 0I;
  #L14a3f6.  return v0;
}
procedure `okhttp3.Route` `next`(`okhttp3.internal.connection.RouteSelector$Selection` v3 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.next:()Lokhttp3/Route;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L14a420.  call temp:= `hasNext`(v3) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L14a426.  v0:= temp;
  #L14a428.  if v0 == 0 then goto L14a44a;
  #L14a42c.  v0:= v3.`okhttp3.internal.connection.RouteSelector$Selection.b` @type ^`java.util.List` @kind object;
  #L14a430.  v1:= v3.`okhttp3.internal.connection.RouteSelector$Selection.a` @type ^`int`;
  #L14a434.  v2:= v1 + 1;
  #L14a438.  v3.`okhttp3.internal.connection.RouteSelector$Selection.a` @type ^`int` := v2;
  #L14a43c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14a442.  v0:= temp @kind object;
  #L14a444.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L14a448.  return v0 @kind object;
  #L14a44a.  v0:= new `java.util.NoSuchElementException`;
  #L14a44e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L14a454.  throw v0;
}
