record `okhttp3.internal.connection.RealConnectionPool$cleanupTask$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.concurrent.Task` @kind class {
  `okhttp3.internal.connection.RealConnectionPool` `okhttp3.internal.connection.RealConnectionPool$cleanupTask$1.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnectionPool$cleanupTask$1` v2 @kind this, `okhttp3.internal.connection.RealConnectionPool` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokhttp3/internal/connection/RealConnectionPool$cleanupTask$1;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1482b8.  v2.`okhttp3.internal.connection.RealConnectionPool$cleanupTask$1.e` @type ^`okhttp3.internal.connection.RealConnectionPool` := v3 @kind object;
  #L1482bc.  v3:= 0I;
  #L1482be.  v0:= 2I;
  #L1482c0.  v1:= 0I;
  #L1482c2.  call `<init>`(v2, v4, v3, v0, v1) @signature `Lokhttp3/internal/concurrent/Task;.<init>:(Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1482c8.  return @kind void;
}
procedure `long` `runOnce`(`okhttp3.internal.connection.RealConnectionPool$cleanupTask$1` v3 @kind this) @signature `Lokhttp3/internal/connection/RealConnectionPool$cleanupTask$1;.runOnce:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L148290.  v0:= v3.`okhttp3.internal.connection.RealConnectionPool$cleanupTask$1.e` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L148294.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L14829a.  v1:= temp @kind wide;
  #L14829c.  call temp:= `cleanup`(v0, v1) @signature `Lokhttp3/internal/connection/RealConnectionPool;.cleanup:(J)J` @kind virtual;
  #L1482a2.  v0:= temp @kind wide;
  #L1482a4.  return v0 @kind wide;
}
