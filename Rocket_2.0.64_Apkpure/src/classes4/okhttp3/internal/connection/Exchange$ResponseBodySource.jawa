record `okhttp3.internal.connection.Exchange$ResponseBodySource` @kind class @AccessFlag PUBLIC_FINAL extends `okio.ForwardingSource` @kind class {
  `long` `okhttp3.internal.connection.Exchange$ResponseBodySource.b` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.Exchange$ResponseBodySource.c` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.Exchange$ResponseBodySource.d` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.Exchange$ResponseBodySource.e` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.connection.Exchange$ResponseBodySource.f` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.Exchange` `okhttp3.internal.connection.Exchange$ResponseBodySource.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.Exchange$ResponseBodySource` v1 @kind this, `okhttp3.internal.connection.Exchange` v2 @kind object, `okio.Source` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.<init>:(Lokhttp3/internal/connection/Exchange;Lokio/Source;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14603c.  v0:= "delegate" @kind object;
  #L146040.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L146046.  v1.`okhttp3.internal.connection.Exchange$ResponseBodySource.g` @type ^`okhttp3.internal.connection.Exchange` := v2 @kind object;
  #L14604a.  call `<init>`(v1, v3) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L146050.  v1.`okhttp3.internal.connection.Exchange$ResponseBodySource.f` @type ^`long` := v4 @kind wide;
  #L146054.  v2:= 1I;
  #L146056.  v1.`okhttp3.internal.connection.Exchange$ResponseBodySource.c` @type ^`boolean` := v2 @kind boolean;
  #L14605a.  v2:= 0L;
  #L14605e.  v0:= lcmp(v4, v2);
  #L146062.  if v0 != 0 then goto L14606e;
  #L146066.  v2:= 0I;
  #L146068.  call temp:= `complete`(v1, v2) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L14606e.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.connection.Exchange$ResponseBodySource` v1 @kind this) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L146080.  v0:= v1.`okhttp3.internal.connection.Exchange$ResponseBodySource.e` @type ^`boolean` @kind boolean;
  #L146084.  if v0 == 0 then goto L14608a;
  #L146088.  return @kind void;
  #L14608a.  v0:= 1I;
  #L14608c.  v1.`okhttp3.internal.connection.Exchange$ResponseBodySource.e` @type ^`boolean` := v0 @kind boolean;
  #L146090.  call `close`(v1) @signature `Lokio/ForwardingSource;.close:()V` @kind super;
  #L146096.  v0:= 0I;
  #L146098.  call temp:= `complete`(v1, v0) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L14609e.  return @kind void;
  #L1460a0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1460a2.  call temp:= `complete`(v1, v0) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1460a8.  v0:= temp @kind object;
  #L1460aa.  throw v0;
  catch `java.io.IOException` @[L146090..L14609e] goto L1460a0;
}
procedure `java.io.IOException` `complete`(`okhttp3.internal.connection.Exchange$ResponseBodySource` v8 @kind this, `java.io.IOException` v9 @kind object) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L145eb4.  v0:= v8.`okhttp3.internal.connection.Exchange$ResponseBodySource.d` @type ^`boolean` @kind boolean;
  #L145eb8.  if v0 == 0 then goto L145ebe;
  #L145ebc.  return v9 @kind object;
  #L145ebe.  v0:= 1I;
  #L145ec0.  v8.`okhttp3.internal.connection.Exchange$ResponseBodySource.d` @type ^`boolean` := v0 @kind boolean;
  #L145ec4.  if v9 != 0 then goto L145ef4;
  #L145ec8.  v0:= v8.`okhttp3.internal.connection.Exchange$ResponseBodySource.c` @type ^`boolean` @kind boolean;
  #L145ecc.  if v0 == 0 then goto L145ef4;
  #L145ed0.  v0:= 0I;
  #L145ed2.  v8.`okhttp3.internal.connection.Exchange$ResponseBodySource.c` @type ^`boolean` := v0 @kind boolean;
  #L145ed6.  v0:= v8.`okhttp3.internal.connection.Exchange$ResponseBodySource.g` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L145eda.  call temp:= `getEventListener$okhttp`(v0) @signature `Lokhttp3/internal/connection/Exchange;.getEventListener$okhttp:()Lokhttp3/EventListener;` @kind virtual;
  #L145ee0.  v0:= temp @kind object;
  #L145ee2.  v1:= v8.`okhttp3.internal.connection.Exchange$ResponseBodySource.g` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L145ee6.  call temp:= `getCall$okhttp`(v1) @signature `Lokhttp3/internal/connection/Exchange;.getCall$okhttp:()Lokhttp3/internal/connection/RealCall;` @kind virtual;
  #L145eec.  v1:= temp @kind object;
  #L145eee.  call `responseBodyStart`(v0, v1) @signature `Lokhttp3/EventListener;.responseBodyStart:(Lokhttp3/Call;)V` @kind virtual;
  #L145ef4.  v2:= v8.`okhttp3.internal.connection.Exchange$ResponseBodySource.g` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L145ef8.  v3:= v8.`okhttp3.internal.connection.Exchange$ResponseBodySource.b` @type ^`long` @kind wide;
  #L145efc.  v5:= 1I;
  #L145efe.  v6:= 0I;
  #L145f00.  v7:= v9 @kind object;
  #L145f02.  call temp:= `bodyComplete`(v2, v3, v5, v6, v7) @signature `Lokhttp3/internal/connection/Exchange;.bodyComplete:(JZZLjava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L145f08.  v9:= temp @kind object;
  #L145f0a.  return v9 @kind object;
}
procedure `long` `read`(`okhttp3.internal.connection.Exchange$ResponseBodySource` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L145f1c.  v0:= "sink" @kind object;
  #L145f20.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145f26.  v0:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.e` @type ^`boolean` @kind boolean;
  #L145f2a.  v0:= v0 ^~ 1;
  #L145f2e.  if v0 == 0 then goto L146002;
  #L145f32.  call temp:= `delegate`(v7) @signature `Lokio/ForwardingSource;.delegate:()Lokio/Source;` @kind virtual;
  #L145f38.  v0:= temp @kind object;
  #L145f3a.  call temp:= `read`(v0, v8, v9) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L145f40.  v8:= temp @kind wide;
  #L145f42.  v10:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.c` @type ^`boolean` @kind boolean;
  #L145f46.  if v10 == 0 then goto L145f6e;
  #L145f4a.  v10:= 0I;
  #L145f4c.  v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.c` @type ^`boolean` := v10 @kind boolean;
  #L145f50.  v10:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.g` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L145f54.  call temp:= `getEventListener$okhttp`(v10) @signature `Lokhttp3/internal/connection/Exchange;.getEventListener$okhttp:()Lokhttp3/EventListener;` @kind virtual;
  #L145f5a.  v10:= temp @kind object;
  #L145f5c.  v0:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.g` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L145f60.  call temp:= `getCall$okhttp`(v0) @signature `Lokhttp3/internal/connection/Exchange;.getCall$okhttp:()Lokhttp3/internal/connection/RealCall;` @kind virtual;
  #L145f66.  v0:= temp @kind object;
  #L145f68.  call `responseBodyStart`(v10, v0) @signature `Lokhttp3/EventListener;.responseBodyStart:(Lokhttp3/Call;)V` @kind virtual;
  #L145f6e.  v10:= 0I;
  #L145f70.  v0:= -1L;
  #L145f74.  v2:= lcmp(v8, v0);
  #L145f78.  if v2 != 0 then goto L145f84;
  #L145f7c.  call temp:= `complete`(v7, v10) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L145f82.  return v0 @kind wide;
  #L145f84.  v2:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.b` @type ^`long` @kind wide;
  #L145f88.  v2:= v2 + v8 @kind long;
  #L145f8a.  v4:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.f` @type ^`long` @kind wide;
  #L145f8e.  v6:= lcmp(v4, v0);
  #L145f92.  if v6 == 0 then goto L145fe2;
  #L145f96.  v0:= lcmp(v2, v4);
  #L145f9a.  if v0 > 0 then goto L145fa0;
  #L145f9e.  goto L145fe2;
  #L145fa0.  v8:= new `java.net.ProtocolException`;
  #L145fa4.  v9:= new `java.lang.StringBuilder`;
  #L145fa8.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L145fae.  v10:= "expected " @kind object;
  #L145fb2.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L145fb8.  v0:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.f` @type ^`long` @kind wide;
  #L145fbc.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L145fc2.  v10:= " bytes but received " @kind object;
  #L145fc6.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L145fcc.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L145fd2.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L145fd8.  v9:= temp @kind object;
  #L145fda.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L145fe0.  throw v8;
  #L145fe2.  v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.b` @type ^`long` := v2 @kind wide;
  #L145fe6.  v0:= lcmp(v2, v4);
  #L145fea.  if v0 != 0 then goto L145ff4;
  #L145fee.  call temp:= `complete`(v7, v10) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L145ff4.  return v8 @kind wide;
  #L145ff6.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L145ff8.  call temp:= `complete`(v7, v8) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L145ffe.  v8:= temp @kind object;
  #L146000.  throw v8;
  #L146002.  v8:= new `java.lang.IllegalStateException`;
  #L146006.  v9:= "closed" @kind object;
  #L14600a.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L146010.  v9:= temp @kind object;
  #L146012.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L146018.  throw v8;
  catch `java.io.IOException` @[L145f32..L145ff4] goto L145ff6;
}
