record `okhttp3.internal.connection.ConnectInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
}
global `okhttp3.internal.connection.ConnectInterceptor` `@@okhttp3.internal.connection.ConnectInterceptor.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/ConnectInterceptor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L145aac.  v0:= new `okhttp3.internal.connection.ConnectInterceptor`;
  #L145ab0.  call `<init>`(v0) @signature `Lokhttp3/internal/connection/ConnectInterceptor;.<init>:()V` @kind direct;
  #L145ab6.  `@@okhttp3.internal.connection.ConnectInterceptor.INSTANCE` @type ^`okhttp3.internal.connection.ConnectInterceptor` := v0 @kind object;
  #L145aba.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.ConnectInterceptor` v0 @kind this) @signature `Lokhttp3/internal/connection/ConnectInterceptor;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L145acc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L145ad2.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.connection.ConnectInterceptor` v10 @kind this, `okhttp3.Interceptor$Chain` v11 @kind object) @signature `Lokhttp3/internal/connection/ConnectInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L145a50.  v0:= "chain" @kind object;
  #L145a54.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145a5a.  v11:= (`okhttp3.internal.http.RealInterceptorChain`) v11 @kind object;
  #L145a5e.  call temp:= `getCall$okhttp`(v11) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getCall$okhttp:()Lokhttp3/internal/connection/RealCall;` @kind virtual;
  #L145a64.  v0:= temp @kind object;
  #L145a66.  call temp:= `initExchange$okhttp`(v0, v11) @signature `Lokhttp3/internal/connection/RealCall;.initExchange$okhttp:(Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/connection/Exchange;` @kind virtual;
  #L145a6c.  v3:= temp @kind object;
  #L145a6e.  v2:= 0I;
  #L145a70.  v4:= 0I;
  #L145a72.  v5:= 0I;
  #L145a74.  v6:= 0I;
  #L145a76.  v7:= 0I;
  #L145a78.  v8:= 61I;
  #L145a7c.  v9:= 0I;
  #L145a7e.  v1:= v11 @kind object;
  #L145a80.  call temp:= `copy$okhttp$default`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/http/RealInterceptorChain;.copy$okhttp$default:(Lokhttp3/internal/http/RealInterceptorChain;ILokhttp3/internal/connection/Exchange;Lokhttp3/Request;IIIILjava/lang/Object;)Lokhttp3/internal/http/RealInterceptorChain;` @kind static;
  #L145a86.  v0:= temp @kind object;
  #L145a88.  call temp:= `getRequest$okhttp`(v11) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getRequest$okhttp:()Lokhttp3/Request;` @kind virtual;
  #L145a8e.  v11:= temp @kind object;
  #L145a90.  call temp:= `proceed`(v0, v11) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind virtual;
  #L145a96.  v11:= temp @kind object;
  #L145a98.  return v11 @kind object;
}
