record `okhttp3.internal.connection.RealConnection` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.http2.Http2Connection$Listener` @kind class, `okhttp3.Connection` @kind interface {
  `java.net.Socket` `okhttp3.internal.connection.RealConnection.a` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.connection.RealConnection.b` @AccessFlag PRIVATE;
  `okhttp3.Handshake` `okhttp3.internal.connection.RealConnection.c` @AccessFlag PRIVATE;
  `okhttp3.Protocol` `okhttp3.internal.connection.RealConnection.d` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.connection.RealConnection.e` @AccessFlag PRIVATE;
  `okio.BufferedSource` `okhttp3.internal.connection.RealConnection.f` @AccessFlag PRIVATE;
  `okio.BufferedSink` `okhttp3.internal.connection.RealConnection.g` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.RealConnection.h` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.RealConnection.i` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.j` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.k` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.l` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.m` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RealConnection.n` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.connection.RealConnection.o` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RealConnectionPool` `okhttp3.internal.connection.RealConnection.p` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Route` `okhttp3.internal.connection.RealConnection.q` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.connection.RealConnection$Companion` `@@okhttp3.internal.connection.RealConnection.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okhttp3.internal.connection.RealConnection.IDLE_CONNECTION_HEALTHY_NS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/RealConnection;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1494f4.  v0:= new `okhttp3.internal.connection.RealConnection$Companion`;
  #L1494f8.  v1:= 0I;
  #L1494fa.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RealConnection$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L149500.  `@@okhttp3.internal.connection.RealConnection.Companion` @type ^`okhttp3.internal.connection.RealConnection$Companion` := v0 @kind object;
  #L149504.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.connection.RealConnectionPool` v2 @kind object, `okhttp3.Route` v3 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L149518.  v0:= "connectionPool" @kind object;
  #L14951c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L149522.  v0:= "route" @kind object;
  #L149526.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14952c.  call `<init>`(v1) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.<init>:()V` @kind direct;
  #L149532.  v1.`okhttp3.internal.connection.RealConnection.p` @type ^`okhttp3.internal.connection.RealConnectionPool` := v2 @kind object;
  #L149536.  v1.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` := v3 @kind object;
  #L14953a.  v2:= 1I;
  #L14953c.  v1.`okhttp3.internal.connection.RealConnection.m` @type ^`int` := v2;
  #L149540.  v2:= new `java.util.ArrayList`;
  #L149544.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L14954a.  v1.`okhttp3.internal.connection.RealConnection.n` @type ^`java.util.List` := v2 @kind object;
  #L14954e.  v2:= 9223372036854775807L;
  #L149558.  v1.`okhttp3.internal.connection.RealConnection.o` @type ^`long` := v2 @kind wide;
  #L14955c.  return @kind void;
}
procedure `boolean` `a`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.HttpUrl` v5 @kind object, `okhttp3.Handshake` v6 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.a:(Lokhttp3/HttpUrl;Lokhttp3/Handshake;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L148a30.  call temp:= `peerCertificates`(v6) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L148a36.  v6:= temp @kind object;
  #L148a38.  call temp:= `isEmpty`(v6) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L148a3e.  v0:= temp;
  #L148a40.  v1:= 1I;
  #L148a42.  v0:= v0 ^~ v1 @kind int;
  #L148a44.  v2:= 0I;
  #L148a46.  if v0 == 0 then goto L148a7a;
  #L148a4a.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L148a4e.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L148a54.  v5:= temp @kind object;
  #L148a56.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L148a5c.  v6:= temp @kind object;
  #L148a5e.  v3:= "null cannot be cast to non-null type java.security.cert.X509Certificate" @kind object;
  #L148a62.  call temp:= `requireNonNull`(v6, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L148a68.  v6:= (`java.security.cert.X509Certificate`) v6 @kind object;
  #L148a6c.  call temp:= `verify`(v0, v5, v6) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L148a72.  v5:= temp;
  #L148a74.  if v5 == 0 then goto L148a7a;
  #L148a78.  goto L148a7c;
  #L148a7a.  v1:= 0I;
  #L148a7c.  return v1;
}
procedure `okhttp3.Handshake` `access$getHandshake$p`(`okhttp3.internal.connection.RealConnection` v0 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.access$getHandshake$p:(Lokhttp3/internal/connection/RealConnection;)Lokhttp3/Handshake;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1490a8.  v0:= v0.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` @kind object;
  #L1490ac.  return v0 @kind object;
}
procedure `java.net.Socket` `access$getSocket$p`(`okhttp3.internal.connection.RealConnection` v0 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.access$getSocket$p:(Lokhttp3/internal/connection/RealConnection;)Ljava/net/Socket;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L149044.  v0:= v0.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L149048.  return v0 @kind object;
}
procedure `void` `access$setHandshake$p`(`okhttp3.internal.connection.RealConnection` v0 @kind object, `okhttp3.Handshake` v1 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.access$setHandshake$p:(Lokhttp3/internal/connection/RealConnection;Lokhttp3/Handshake;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L149570.  v0.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` := v1 @kind object;
  #L149574.  return @kind void;
}
procedure `void` `access$setSocket$p`(`okhttp3.internal.connection.RealConnection` v0 @kind object, `java.net.Socket` v1 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.access$setSocket$p:(Lokhttp3/internal/connection/RealConnection;Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L149588.  v0.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` := v1 @kind object;
  #L14958c.  return @kind void;
}
procedure `void` `b`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `int` v5 , `int` v6 , `okhttp3.Call` v7 @kind object, `okhttp3.EventListener` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.b:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L149950.  v0:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149954.  call temp:= `proxy`(v0) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L14995a.  v0:= temp @kind object;
  #L14995c.  v1:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149960.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L149966.  v1:= temp @kind object;
  #L149968.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L14996e.  v2:= temp @kind object;
  #L149970.  if v2 != 0 then goto L149976;
  #L149974.  goto L149992;
  #L149976.  v3:= `@@okhttp3.internal.connection.RealConnection$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L14997a.  call temp:= `ordinal`(v2) @signature `Ljava/net/Proxy$Type;.ordinal:()I` @kind virtual;
  #L149980.  v2:= temp;
  #L149982.  v2:= v3[v2];
  #L149986.  v3:= 1I;
  #L149988.  if v2 == v3 then goto L14999e;
  #L14998c.  v3:= 2I;
  #L14998e.  if v2 == v3 then goto L14999e;
  #L149992.  v1:= new `java.net.Socket`;
  #L149996.  call `<init>`(v1, v0) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L14999c.  goto L1499b4;
  #L14999e.  call temp:= `socketFactory`(v1) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L1499a4.  v1:= temp @kind object;
  #L1499a6.  call temp:= `createSocket`(v1) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L1499ac.  v1:= temp @kind object;
  #L1499ae.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1499b4.  v4.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` := v1 @kind object;
  #L1499b8.  v2:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1499bc.  call temp:= `socketAddress`(v2) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1499c2.  v2:= temp @kind object;
  #L1499c4.  call `connectStart`(v8, v7, v2, v0) @signature `Lokhttp3/EventListener;.connectStart:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V` @kind virtual;
  #L1499ca.  call `setSoTimeout`(v1, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L1499d0.  v6:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1499d4.  call temp:= `get`(v6) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1499da.  v6:= temp @kind object;
  #L1499dc.  v7:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1499e0.  call temp:= `socketAddress`(v7) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1499e6.  v7:= temp @kind object;
  #L1499e8.  call `connectSocket`(v6, v1, v7, v5) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #L1499ee.  call temp:= `source`(v1) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @kind static;
  #L1499f4.  v5:= temp @kind object;
  #L1499f6.  call temp:= `buffer`(v5) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L1499fc.  v5:= temp @kind object;
  #L1499fe.  v4.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` := v5 @kind object;
  #L149a02.  call temp:= `sink`(v1) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @kind static;
  #L149a08.  v5:= temp @kind object;
  #L149a0a.  call temp:= `buffer`(v5) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L149a10.  v5:= temp @kind object;
  #L149a12.  v4.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` := v5 @kind object;
  #L149a16.  goto L149a32;
  #L149a18.  v5:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L149a1a.  call temp:= `getMessage`(v5) @signature `Ljava/lang/NullPointerException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L149a20.  v6:= temp @kind object;
  #L149a22.  v7:= "throw with null exception" @kind object;
  #L149a26.  call temp:= `areEqual`(v6, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L149a2c.  v6:= temp;
  #L149a2e.  if v6 != 0 then goto L149a34;
  #L149a32.  return @kind void;
  #L149a34.  v6:= new `java.io.IOException`;
  #L149a38.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149a3e.  throw v6;
  #L149a40.  v5:= Exception @type ^`java.net.ConnectException` @kind object;
  #L149a42.  v6:= new `java.net.ConnectException`;
  #L149a46.  v7:= new `java.lang.StringBuilder`;
  #L149a4a.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149a50.  v8:= "Failed to connect to " @kind object;
  #L149a54.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149a5a.  v8:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149a5e.  call temp:= `socketAddress`(v8) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L149a64.  v8:= temp @kind object;
  #L149a66.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149a6c.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149a72.  v7:= temp @kind object;
  #L149a74.  call `<init>`(v6, v7) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149a7a.  call temp:= `initCause`(v6, v5) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L149a80.  throw v6;
  catch `java.net.ConnectException` @[L1499d0..L1499ee] goto L149a40;
  catch `java.lang.NullPointerException` @[L1499ee..L149a16] goto L149a18;
}
procedure `void` `c`(`okhttp3.internal.connection.RealConnection` v10 @kind this, `okhttp3.internal.connection.ConnectionSpecSelector` v11 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.c:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L149ab0.  v0:= v10.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149ab4.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L149aba.  v0:= temp @kind object;
  #L149abc.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L149ac2.  v1:= temp @kind object;
  #L149ac4.  v2:= 0I;
  #L149ac6.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L149acc.  v3:= v10.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L149ad0.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L149ad6.  v4:= temp @kind object;
  #L149ad8.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L149ade.  v4:= temp @kind object;
  #L149ae0.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L149ae6.  v5:= temp @kind object;
  #L149ae8.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L149aee.  v5:= temp;
  #L149af0.  v6:= 1I;
  #L149af2.  call temp:= `createSocket`(v1, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L149af8.  v1:= temp @kind object;
  #L149afa.  if v1 == 0 then goto L149d9e;
  #L149afe.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L149b02.  call temp:= `configureSecureSocket`(v11, v1) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.configureSecureSocket:(Ljavax/net/ssl/SSLSocket;)Lokhttp3/ConnectionSpec;` @kind virtual;
  #L149b08.  v11:= temp @kind object;
  #L149b0a.  call temp:= `supportsTlsExtensions`(v11) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @kind virtual;
  #L149b10.  v3:= temp;
  #L149b12.  if v3 == 0 then goto L149b40;
  #L149b16.  v3:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L149b1a.  call temp:= `get`(v3) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L149b20.  v3:= temp @kind object;
  #L149b22.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L149b28.  v4:= temp @kind object;
  #L149b2a.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L149b30.  v4:= temp @kind object;
  #L149b32.  call temp:= `protocols`(v0) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L149b38.  v5:= temp @kind object;
  #L149b3a.  call `configureTlsExtensions`(v3, v1, v4, v5) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L149b40.  call `startHandshake`(v1) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L149b46.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L149b4c.  v3:= temp @kind object;
  #L149b4e.  v4:= `@@okhttp3.Handshake.Companion` @type ^`okhttp3.Handshake$Companion` @kind object;
  #L149b52.  v5:= "sslSocketSession" @kind object;
  #L149b56.  call `checkNotNullExpressionValue`(v3, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L149b5c.  call temp:= `get`(v4, v3) @signature `Lokhttp3/Handshake$Companion;.get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @kind virtual;
  #L149b62.  v4:= temp @kind object;
  #L149b64.  call temp:= `hostnameVerifier`(v0) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L149b6a.  v5:= temp @kind object;
  #L149b6c.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L149b72.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L149b78.  v7:= temp @kind object;
  #L149b7a.  call temp:= `host`(v7) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L149b80.  v7:= temp @kind object;
  #L149b82.  call temp:= `verify`(v5, v7, v3) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L149b88.  v3:= temp;
  #L149b8a.  if v3 != 0 then goto L149cc0;
  #L149b8e.  call temp:= `peerCertificates`(v4) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L149b94.  v11:= temp @kind object;
  #L149b96.  call temp:= `isEmpty`(v11) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L149b9c.  v3:= temp;
  #L149b9e.  v3:= v3 ^~ v6 @kind int;
  #L149ba0.  if v3 == 0 then goto L149c78;
  #L149ba4.  v3:= 0I;
  #L149ba6.  call temp:= `get`(v11, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L149bac.  v11:= temp @kind object;
  #L149bae.  if v11 != 0 then goto L149bc2;
  #L149bb2.  v11:= new `java.lang.NullPointerException`;
  #L149bb6.  v0:= "null cannot be cast to non-null type java.security.cert.X509Certificate" @kind object;
  #L149bba.  call `<init>`(v11, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149bc0.  throw v11;
  #L149bc2.  v11:= (`java.security.cert.X509Certificate`) v11 @kind object;
  #L149bc6.  v3:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L149bca.  v4:= new `java.lang.StringBuilder`;
  #L149bce.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149bd4.  v5:= "\n              |Hostname " @kind object;
  #L149bd8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149bde.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L149be4.  v0:= temp @kind object;
  #L149be6.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L149bec.  v0:= temp @kind object;
  #L149bee.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149bf4.  v0:= " not verified:\n              |    certificate: " @kind object;
  #L149bf8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149bfe.  v0:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L149c02.  call temp:= `pin`(v0, v11) @signature `Lokhttp3/CertificatePinner$Companion;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind virtual;
  #L149c08.  v0:= temp @kind object;
  #L149c0a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149c10.  v0:= "\n              |    DN: " @kind object;
  #L149c14.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149c1a.  call temp:= `getSubjectDN`(v11) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L149c20.  v0:= temp @kind object;
  #L149c22.  v5:= "cert.subjectDN" @kind object;
  #L149c26.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L149c2c.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L149c32.  v0:= temp @kind object;
  #L149c34.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149c3a.  v0:= "\n              |    subjectAltNames: " @kind object;
  #L149c3e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149c44.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L149c48.  call temp:= `allSubjectAltNames`(v0, v11) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind virtual;
  #L149c4e.  v11:= temp @kind object;
  #L149c50.  call temp:= `append`(v4, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149c56.  v11:= "\n              " @kind object;
  #L149c5a.  call temp:= `append`(v4, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149c60.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149c66.  v11:= temp @kind object;
  #L149c68.  call temp:= `trimMargin$default`(v11, v2, v6, v2) @signature `Lkotlin/text/StringsKt;.trimMargin$default:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L149c6e.  v11:= temp @kind object;
  #L149c70.  call `<init>`(v3, v11) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149c76.  throw v3;
  #L149c78.  v11:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L149c7c.  v2:= new `java.lang.StringBuilder`;
  #L149c80.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149c86.  v3:= "Hostname " @kind object;
  #L149c8a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149c90.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L149c96.  v0:= temp @kind object;
  #L149c98.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L149c9e.  v0:= temp @kind object;
  #L149ca0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149ca6.  v0:= " not verified (no certificates)" @kind object;
  #L149caa.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149cb0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149cb6.  v0:= temp @kind object;
  #L149cb8.  call `<init>`(v11, v0) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149cbe.  throw v11;
  #L149cc0.  call temp:= `certificatePinner`(v0) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L149cc6.  v3:= temp @kind object;
  #L149cc8.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L149cce.  v5:= new `okhttp3.Handshake`;
  #L149cd2.  call temp:= `tlsVersion`(v4) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L149cd8.  v6:= temp @kind object;
  #L149cda.  call temp:= `cipherSuite`(v4) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L149ce0.  v7:= temp @kind object;
  #L149ce2.  call temp:= `localCertificates`(v4) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L149ce8.  v8:= temp @kind object;
  #L149cea.  v9:= new `okhttp3.internal.connection.RealConnection$a`;
  #L149cee.  call `<init>`(v9, v3, v4, v0) @signature `Lokhttp3/internal/connection/RealConnection$a;.<init>:(Lokhttp3/CertificatePinner;Lokhttp3/Handshake;Lokhttp3/Address;)V` @kind direct;
  #L149cf4.  call `<init>`(v5, v6, v7, v8, v9) @signature `Lokhttp3/Handshake;.<init>:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L149cfa.  v10.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` := v5 @kind object;
  #L149cfe.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L149d04.  v0:= temp @kind object;
  #L149d06.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L149d0c.  v0:= temp @kind object;
  #L149d0e.  v4:= new `okhttp3.internal.connection.RealConnection$b`;
  #L149d12.  call `<init>`(v4, v10) @signature `Lokhttp3/internal/connection/RealConnection$b;.<init>:(Lokhttp3/internal/connection/RealConnection;)V` @kind direct;
  #L149d18.  call `check$okhttp`(v3, v0, v4) @signature `Lokhttp3/CertificatePinner;.check$okhttp:(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V` @kind virtual;
  #L149d1e.  call temp:= `supportsTlsExtensions`(v11) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @kind virtual;
  #L149d24.  v11:= temp;
  #L149d26.  if v11 == 0 then goto L149d3e;
  #L149d2a.  v11:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L149d2e.  call temp:= `get`(v11) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L149d34.  v11:= temp @kind object;
  #L149d36.  call temp:= `getSelectedProtocol`(v11, v1) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L149d3c.  v2:= temp @kind object;
  #L149d3e.  v10.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` := v1 @kind object;
  #L149d42.  call temp:= `source`(v1) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @kind static;
  #L149d48.  v11:= temp @kind object;
  #L149d4a.  call temp:= `buffer`(v11) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L149d50.  v11:= temp @kind object;
  #L149d52.  v10.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` := v11 @kind object;
  #L149d56.  call temp:= `sink`(v1) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @kind static;
  #L149d5c.  v11:= temp @kind object;
  #L149d5e.  call temp:= `buffer`(v11) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L149d64.  v11:= temp @kind object;
  #L149d66.  v10.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` := v11 @kind object;
  #L149d6a.  if v2 == 0 then goto L149d7c;
  #L149d6e.  v11:= `@@okhttp3.Protocol.Companion` @type ^`okhttp3.Protocol$Companion` @kind object;
  #L149d72.  call temp:= `get`(v11, v2) @signature `Lokhttp3/Protocol$Companion;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @kind virtual;
  #L149d78.  v11:= temp @kind object;
  #L149d7a.  goto L149d80;
  #L149d7c.  v11:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L149d80.  v10.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` := v11 @kind object;
  #L149d84.  v11:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L149d88.  call temp:= `get`(v11) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L149d8e.  v11:= temp @kind object;
  #L149d90.  call `afterHandshake`(v11, v1) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L149d96.  return @kind void;
  #L149d98.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L149d9a.  v2:= v1 @kind object;
  #L149d9c.  goto L149db0;
  #L149d9e.  v11:= new `java.lang.NullPointerException`;
  #L149da2.  v0:= "null cannot be cast to non-null type javax.net.ssl.SSLSocket" @kind object;
  #L149da6.  call `<init>`(v11, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149dac.  throw v11;
  #L149dae.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L149db0.  if v2 == 0 then goto L149dc6;
  #L149db4.  v0:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L149db8.  call temp:= `get`(v0) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L149dbe.  v0:= temp @kind object;
  #L149dc0.  call `afterHandshake`(v0, v2) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L149dc6.  if v2 == 0 then goto L149dd0;
  #L149dca.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L149dd0.  throw v11;
  catch `java.lang.Throwable` @[L149ac6..L149b02] goto L149dae;
  catch `java.lang.Throwable` @[L149b02..L149d84] goto L149d98;
  catch `java.lang.Throwable` @[L149d9e..L149dae] goto L149dae;
}
procedure `void` `d`(`okhttp3.internal.connection.RealConnection` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `okhttp3.Call` v10 @kind object, `okhttp3.EventListener` v11 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.d:(IIILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L149e04.  call temp:= `f`(v6) @signature `Lokhttp3/internal/connection/RealConnection;.f:()Lokhttp3/Request;` @kind direct;
  #L149e0a.  v0:= temp @kind object;
  #L149e0c.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L149e12.  v1:= temp @kind object;
  #L149e14.  v2:= 0I;
  #L149e16.  v3:= 21I;
  #L149e1a.  if v2 >= v3 then goto L149e70;
  #L149e1e.  call `b`(v6, v7, v8, v10, v11) @signature `Lokhttp3/internal/connection/RealConnection;.b:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L149e24.  call temp:= `e`(v6, v8, v9, v0, v1) @signature `Lokhttp3/internal/connection/RealConnection;.e:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;` @kind direct;
  #L149e2a.  v0:= temp @kind object;
  #L149e2c.  if v0 == 0 then goto L149e70;
  #L149e30.  v3:= v6.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L149e34.  if v3 == 0 then goto L149e3e;
  #L149e38.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L149e3e.  v3:= 0I;
  #L149e40.  v6.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` := v3 @kind object;
  #L149e44.  v6.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` := v3 @kind object;
  #L149e48.  v6.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` := v3 @kind object;
  #L149e4c.  v4:= v6.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149e50.  call temp:= `socketAddress`(v4) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L149e56.  v4:= temp @kind object;
  #L149e58.  v5:= v6.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149e5c.  call temp:= `proxy`(v5) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L149e62.  v5:= temp @kind object;
  #L149e64.  call `connectEnd`(v11, v10, v4, v5, v3) @signature `Lokhttp3/EventListener;.connectEnd:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L149e6a.  v2:= v2 + 1;
  #L149e6e.  goto L149e16;
  #L149e70.  return @kind void;
}
procedure `okhttp3.Request` `e`(`okhttp3.internal.connection.RealConnection` v9 @kind this, `int` v10 , `int` v11 , `okhttp3.Request` v12 @kind object, `okhttp3.HttpUrl` v13 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.e:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1490f4.  v0:= new `java.lang.StringBuilder`;
  #L1490f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1490fe.  v1:= "CONNECT " @kind object;
  #L149102.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149108.  v1:= 1I;
  #L14910a.  call temp:= `toHostHeader`(v13, v1) @signature `Lokhttp3/internal/Util;.toHostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L149110.  v13:= temp @kind object;
  #L149112.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149118.  v13:= " HTTP/1.1" @kind object;
  #L14911c.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149122.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149128.  v13:= temp @kind object;
  #L14912a.  v0:= v9.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` @kind object;
  #L14912e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L149134.  v2:= v9.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` @kind object;
  #L149138.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14913e.  v3:= new `okhttp3.internal.http1.Http1ExchangeCodec`;
  #L149142.  v4:= 0I;
  #L149144.  call `<init>`(v3, v4, v9, v0, v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokio/BufferedSource;Lokio/BufferedSink;)V` @kind direct;
  #L14914a.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L149150.  v5:= temp @kind object;
  #L149152.  v6:= (`long`) v10 @kind i2l;
  #L149154.  v8:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L149158.  call temp:= `timeout`(v5, v6, v8) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L14915e.  call temp:= `timeout`(v2) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L149164.  v5:= temp @kind object;
  #L149166.  v6:= (`long`) v11 @kind i2l;
  #L149168.  call temp:= `timeout`(v5, v6, v8) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L14916e.  call temp:= `headers`(v12) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L149174.  v5:= temp @kind object;
  #L149176.  call `writeRequest`(v3, v5, v13) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.writeRequest:(Lokhttp3/Headers;Ljava/lang/String;)V` @kind virtual;
  #L14917c.  call `finishRequest`(v3) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.finishRequest:()V` @kind virtual;
  #L149182.  v5:= 0I;
  #L149184.  call temp:= `readResponseHeaders`(v3, v5) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind virtual;
  #L14918a.  v5:= temp @kind object;
  #L14918c.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L149192.  call temp:= `request`(v5, v12) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L149198.  v12:= temp @kind object;
  #L14919a.  call temp:= `build`(v12) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1491a0.  v12:= temp @kind object;
  #L1491a2.  call `skipConnectBody`(v3, v12) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.skipConnectBody:(Lokhttp3/Response;)V` @kind virtual;
  #L1491a8.  call temp:= `code`(v12) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1491ae.  v3:= temp;
  #L1491b0.  v5:= 200I;
  #L1491b4.  if v3 == v5 then goto L14924e;
  #L1491b8.  v0:= 407I;
  #L1491bc.  if v3 != v0 then goto L149218;
  #L1491c0.  v0:= v9.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1491c4.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1491ca.  v0:= temp @kind object;
  #L1491cc.  call temp:= `proxyAuthenticator`(v0) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L1491d2.  v0:= temp @kind object;
  #L1491d4.  v2:= v9.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1491d8.  call temp:= `authenticate`(v0, v2, v12) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L1491de.  v0:= temp @kind object;
  #L1491e0.  if v0 == 0 then goto L149208;
  #L1491e4.  v2:= 2I;
  #L1491e6.  v3:= "Connection" @kind object;
  #L1491ea.  call temp:= `header$default`(v12, v3, v4, v2, v4) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1491f0.  v12:= temp @kind object;
  #L1491f2.  v2:= "close" @kind object;
  #L1491f6.  call temp:= `equals`(v2, v12, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1491fc.  v12:= temp;
  #L1491fe.  if v12 == 0 then goto L149204;
  #L149202.  return v0 @kind object;
  #L149204.  v12:= v0 @kind object;
  #L149206.  goto L14912a;
  #L149208.  v10:= new `java.io.IOException`;
  #L14920c.  v11:= "Failed to authenticate with proxy" @kind object;
  #L149210.  call `<init>`(v10, v11) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149216.  throw v10;
  #L149218.  v10:= new `java.io.IOException`;
  #L14921c.  v11:= new `java.lang.StringBuilder`;
  #L149220.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149226.  v13:= "Unexpected response code for CONNECT: " @kind object;
  #L14922a.  call temp:= `append`(v11, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149230.  call temp:= `code`(v12) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L149236.  v12:= temp;
  #L149238.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L14923e.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149244.  v11:= temp @kind object;
  #L149246.  call `<init>`(v10, v11) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14924c.  throw v10;
  #L14924e.  call temp:= `getBuffer`(v0) @signature `Lokio/BufferedSource;.getBuffer:()Lokio/Buffer;` @kind interface;
  #L149254.  v10:= temp @kind object;
  #L149256.  call temp:= `exhausted`(v10) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L14925c.  v10:= temp;
  #L14925e.  if v10 == 0 then goto L149278;
  #L149262.  call temp:= `getBuffer`(v2) @signature `Lokio/BufferedSink;.getBuffer:()Lokio/Buffer;` @kind interface;
  #L149268.  v10:= temp @kind object;
  #L14926a.  call temp:= `exhausted`(v10) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L149270.  v10:= temp;
  #L149272.  if v10 == 0 then goto L149278;
  #L149276.  return v4 @kind object;
  #L149278.  v10:= new `java.io.IOException`;
  #L14927c.  v11:= "TLS tunnel buffered too many bytes!" @kind object;
  #L149280.  call `<init>`(v10, v11) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149286.  throw v10;
}
procedure `okhttp3.Request` `f`(`okhttp3.internal.connection.RealConnection` v4 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.f:()Lokhttp3/Request;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L149298.  v0:= new `okhttp3.Request$Builder`;
  #L14929c.  call `<init>`(v0) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L1492a2.  v1:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1492a6.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1492ac.  v1:= temp @kind object;
  #L1492ae.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1492b4.  v1:= temp @kind object;
  #L1492b6.  call temp:= `url`(v0, v1) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1492bc.  v0:= temp @kind object;
  #L1492be.  v1:= "CONNECT" @kind object;
  #L1492c2.  v2:= 0I;
  #L1492c4.  call temp:= `method`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1492ca.  v0:= temp @kind object;
  #L1492cc.  v1:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1492d0.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1492d6.  v1:= temp @kind object;
  #L1492d8.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1492de.  v1:= temp @kind object;
  #L1492e0.  v2:= 1I;
  #L1492e2.  call temp:= `toHostHeader`(v1, v2) @signature `Lokhttp3/internal/Util;.toHostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L1492e8.  v1:= temp @kind object;
  #L1492ea.  v2:= "Host" @kind object;
  #L1492ee.  call temp:= `header`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1492f4.  v0:= temp @kind object;
  #L1492f6.  v1:= "Proxy-Connection" @kind object;
  #L1492fa.  v2:= "Keep-Alive" @kind object;
  #L1492fe.  call temp:= `header`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L149304.  v0:= temp @kind object;
  #L149306.  v1:= "User-Agent" @kind object;
  #L14930a.  v2:= "okhttp/4.9.3" @kind object;
  #L14930e.  call temp:= `header`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L149314.  v0:= temp @kind object;
  #L149316.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L14931c.  v0:= temp @kind object;
  #L14931e.  v1:= new `okhttp3.Response$Builder`;
  #L149322.  call `<init>`(v1) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L149328.  call temp:= `request`(v1, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14932e.  v1:= temp @kind object;
  #L149330.  v2:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L149334.  call temp:= `protocol`(v1, v2) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14933a.  v1:= temp @kind object;
  #L14933c.  v2:= 407I;
  #L149340.  call temp:= `code`(v1, v2) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L149346.  v1:= temp @kind object;
  #L149348.  v2:= "Preemptive Authenticate" @kind object;
  #L14934c.  call temp:= `message`(v1, v2) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L149352.  v1:= temp @kind object;
  #L149354.  v2:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L149358.  call temp:= `body`(v1, v2) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14935e.  v1:= temp @kind object;
  #L149360.  v2:= -1L;
  #L149364.  call temp:= `sentRequestAtMillis`(v1, v2) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L14936a.  v1:= temp @kind object;
  #L14936c.  call temp:= `receivedResponseAtMillis`(v1, v2) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L149372.  v1:= temp @kind object;
  #L149374.  v2:= "Proxy-Authenticate" @kind object;
  #L149378.  v3:= "OkHttp-Preemptive" @kind object;
  #L14937c.  call temp:= `header`(v1, v2, v3) @signature `Lokhttp3/Response$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L149382.  v1:= temp @kind object;
  #L149384.  call temp:= `build`(v1) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L14938a.  v1:= temp @kind object;
  #L14938c.  v2:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149390.  call temp:= `address`(v2) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L149396.  v2:= temp @kind object;
  #L149398.  call temp:= `proxyAuthenticator`(v2) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L14939e.  v2:= temp @kind object;
  #L1493a0.  v3:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1493a4.  call temp:= `authenticate`(v2, v3, v1) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L1493aa.  v1:= temp @kind object;
  #L1493ac.  if v1 == 0 then goto L1493b2;
  #L1493b0.  v0:= v1 @kind object;
  #L1493b2.  return v0 @kind object;
}
procedure `void` `g`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.connection.ConnectionSpecSelector` v2 @kind object, `int` v3 , `okhttp3.Call` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.g:(Lokhttp3/internal/connection/ConnectionSpecSelector;ILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L149e84.  v0:= v1.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149e88.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L149e8e.  v0:= temp @kind object;
  #L149e90.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L149e96.  v0:= temp @kind object;
  #L149e98.  if v0 != 0 then goto L149ee6;
  #L149e9c.  v2:= v1.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149ea0.  call temp:= `address`(v2) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L149ea6.  v2:= temp @kind object;
  #L149ea8.  call temp:= `protocols`(v2) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L149eae.  v2:= temp @kind object;
  #L149eb0.  v4:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L149eb4.  call temp:= `contains`(v2, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L149eba.  v2:= temp;
  #L149ebc.  if v2 == 0 then goto L149ed4;
  #L149ec0.  v2:= v1.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L149ec4.  v1.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` := v2 @kind object;
  #L149ec8.  v1.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` := v4 @kind object;
  #L149ecc.  call `i`(v1, v3) @signature `Lokhttp3/internal/connection/RealConnection;.i:(I)V` @kind direct;
  #L149ed2.  return @kind void;
  #L149ed4.  v2:= v1.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L149ed8.  v1.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` := v2 @kind object;
  #L149edc.  v2:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L149ee0.  v1.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L149ee4.  return @kind void;
  #L149ee6.  call `secureConnectStart`(v5, v4) @signature `Lokhttp3/EventListener;.secureConnectStart:(Lokhttp3/Call;)V` @kind virtual;
  #L149eec.  call `c`(v1, v2) @signature `Lokhttp3/internal/connection/RealConnection;.c:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V` @kind direct;
  #L149ef2.  v2:= v1.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` @kind object;
  #L149ef6.  call `secureConnectEnd`(v5, v4, v2) @signature `Lokhttp3/EventListener;.secureConnectEnd:(Lokhttp3/Call;Lokhttp3/Handshake;)V` @kind virtual;
  #L149efc.  v2:= v1.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` @kind object;
  #L149f00.  v4:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L149f04.  if v2 != v4 then goto L149f0e;
  #L149f08.  call `i`(v1, v3) @signature `Lokhttp3/internal/connection/RealConnection;.i:(I)V` @kind direct;
  #L149f0e.  return @kind void;
}
procedure `boolean` `h`(`okhttp3.internal.connection.RealConnection` v5 @kind this, `java.util.List` v6 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.h:(Ljava/util/List;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L148d88.  v0:= instanceof @variable v6 @type ^`java.util.Collection` @kind boolean;
  #L148d8c.  v1:= 1I;
  #L148d8e.  v2:= 0I;
  #L148d90.  if v0 == 0 then goto L148da4;
  #L148d94.  call temp:= `isEmpty`(v6) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L148d9a.  v0:= temp;
  #L148d9c.  if v0 == 0 then goto L148da4;
  #L148da0.  v1:= 0I;
  #L148da2.  goto L148e22;
  #L148da4.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L148daa.  v6:= temp @kind object;
  #L148dac.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L148db2.  v0:= temp;
  #L148db4.  if v0 == 0 then goto L148da0;
  #L148db8.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L148dbe.  v0:= temp @kind object;
  #L148dc0.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L148dc4.  call temp:= `proxy`(v0) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L148dca.  v3:= temp @kind object;
  #L148dcc.  call temp:= `type`(v3) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L148dd2.  v3:= temp @kind object;
  #L148dd4.  v4:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L148dd8.  if v3 != v4 then goto L148e1c;
  #L148ddc.  v3:= v5.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L148de0.  call temp:= `proxy`(v3) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L148de6.  v3:= temp @kind object;
  #L148de8.  call temp:= `type`(v3) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L148dee.  v3:= temp @kind object;
  #L148df0.  v4:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L148df4.  if v3 != v4 then goto L148e1c;
  #L148df8.  v3:= v5.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L148dfc.  call temp:= `socketAddress`(v3) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L148e02.  v3:= temp @kind object;
  #L148e04.  call temp:= `socketAddress`(v0) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L148e0a.  v0:= temp @kind object;
  #L148e0c.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L148e12.  v0:= temp;
  #L148e14.  if v0 == 0 then goto L148e1c;
  #L148e18.  v0:= 1I;
  #L148e1a.  goto L148e1e;
  #L148e1c.  v0:= 0I;
  #L148e1e.  if v0 == 0 then goto L148dac;
  #L148e22.  return v1;
}
procedure `void` `i`(`okhttp3.internal.connection.RealConnection` v7 @kind this, `int` v8 ) @signature `Lokhttp3/internal/connection/RealConnection;.i:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L14a06c.  v0:= v7.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L14a070.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14a076.  v1:= v7.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` @kind object;
  #L14a07a.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14a080.  v2:= v7.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` @kind object;
  #L14a084.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14a08a.  v3:= 0I;
  #L14a08c.  call `setSoTimeout`(v0, v3) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L14a092.  v4:= new `okhttp3.internal.http2.Http2Connection$Builder`;
  #L14a096.  v5:= `@@okhttp3.internal.concurrent.TaskRunner.INSTANCE` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L14a09a.  v6:= 1I;
  #L14a09c.  call `<init>`(v4, v6, v5) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.<init>:(ZLokhttp3/internal/concurrent/TaskRunner;)V` @kind direct;
  #L14a0a2.  v5:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L14a0a6.  call temp:= `address`(v5) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L14a0ac.  v5:= temp @kind object;
  #L14a0ae.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14a0b4.  v5:= temp @kind object;
  #L14a0b6.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L14a0bc.  v5:= temp @kind object;
  #L14a0be.  call temp:= `socket`(v4, v0, v5, v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L14a0c4.  v0:= temp @kind object;
  #L14a0c6.  call temp:= `listener`(v0, v7) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.listener:(Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L14a0cc.  v0:= temp @kind object;
  #L14a0ce.  call temp:= `pingIntervalMillis`(v0, v8) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.pingIntervalMillis:(I)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L14a0d4.  v8:= temp @kind object;
  #L14a0d6.  call temp:= `build`(v8) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.build:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L14a0dc.  v8:= temp @kind object;
  #L14a0de.  v7.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` := v8 @kind object;
  #L14a0e2.  v0:= `@@okhttp3.internal.http2.Http2Connection.Companion` @type ^`okhttp3.internal.http2.Http2Connection$Companion` @kind object;
  #L14a0e6.  call temp:= `getDEFAULT_SETTINGS`(v0) @signature `Lokhttp3/internal/http2/Http2Connection$Companion;.getDEFAULT_SETTINGS:()Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L14a0ec.  v0:= temp @kind object;
  #L14a0ee.  call temp:= `getMaxConcurrentStreams`(v0) @signature `Lokhttp3/internal/http2/Settings;.getMaxConcurrentStreams:()I` @kind virtual;
  #L14a0f4.  v0:= temp;
  #L14a0f6.  v7.`okhttp3.internal.connection.RealConnection.m` @type ^`int` := v0;
  #L14a0fa.  v0:= 0I;
  #L14a0fc.  v1:= 3I;
  #L14a0fe.  call `start$default`(v8, v3, v0, v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.start$default:(Lokhttp3/internal/http2/Http2Connection;ZLokhttp3/internal/concurrent/TaskRunner;ILjava/lang/Object;)V` @kind static;
  #L14a104.  return @kind void;
}
procedure `boolean` `j`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.HttpUrl` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.j:(Lokhttp3/HttpUrl;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L148e34.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L148e38.  if v0 == 0 then goto L148ea2;
  #L148e3c.  call temp:= `holdsLock`(v4) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L148e42.  v0:= temp;
  #L148e44.  if v0 == 0 then goto L148e4a;
  #L148e48.  goto L148ea2;
  #L148e4a.  v5:= new `java.lang.AssertionError`;
  #L148e4e.  v0:= new `java.lang.StringBuilder`;
  #L148e52.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L148e58.  v1:= "Thread " @kind object;
  #L148e5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148e62.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L148e68.  v1:= temp @kind object;
  #L148e6a.  v2:= "Thread.currentThread()" @kind object;
  #L148e6e.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L148e74.  call temp:= `getName`(v1) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L148e7a.  v1:= temp @kind object;
  #L148e7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148e82.  v1:= " MUST hold lock on " @kind object;
  #L148e86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148e8c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148e92.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148e98.  v0:= temp @kind object;
  #L148e9a.  call `<init>`(v5, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L148ea0.  throw v5;
  #L148ea2.  v0:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L148ea6.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L148eac.  v0:= temp @kind object;
  #L148eae.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L148eb4.  v0:= temp @kind object;
  #L148eb6.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L148ebc.  v1:= temp;
  #L148ebe.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L148ec4.  v2:= temp;
  #L148ec6.  v3:= 0I;
  #L148ec8.  if v1 == v2 then goto L148ece;
  #L148ecc.  return v3;
  #L148ece.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L148ed4.  v1:= temp @kind object;
  #L148ed6.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L148edc.  v0:= temp @kind object;
  #L148ede.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L148ee4.  v0:= temp;
  #L148ee6.  v1:= 1I;
  #L148ee8.  if v0 == 0 then goto L148eee;
  #L148eec.  return v1;
  #L148eee.  v0:= v4.`okhttp3.internal.connection.RealConnection.i` @type ^`boolean` @kind boolean;
  #L148ef2.  if v0 != 0 then goto L148f12;
  #L148ef6.  v0:= v4.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` @kind object;
  #L148efa.  if v0 == 0 then goto L148f12;
  #L148efe.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L148f04.  call temp:= `a`(v4, v5, v0) @signature `Lokhttp3/internal/connection/RealConnection;.a:(Lokhttp3/HttpUrl;Lokhttp3/Handshake;)Z` @kind direct;
  #L148f0a.  v5:= temp;
  #L148f0c.  if v5 == 0 then goto L148f12;
  #L148f10.  v3:= 1I;
  #L148f12.  return v3;
}
procedure `void` `cancel`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.cancel:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1495a0.  v0:= v1.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1495a4.  if v0 == 0 then goto L1495ae;
  #L1495a8.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1495ae.  return @kind void;
}
procedure `void` `connect`(`okhttp3.internal.connection.RealConnection` v16 @kind this, `int` v17 , `int` v18 , `int` v19 , `int` v20 , `boolean` v21 , `okhttp3.Call` v22 @kind object, `okhttp3.EventListener` v23 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connect:(IIIIZLokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L1495c0.  v7:= v16 @kind object;
  #L1495c4.  v8:= v22 @kind object;
  #L1495c8.  v9:= v23 @kind object;
  #L1495cc.  v0:= "call" @kind object;
  #L1495d0.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1495d6.  v0:= "eventListener" @kind object;
  #L1495da.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1495e0.  v0:= v7.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` @kind object;
  #L1495e4.  v10:= 1I;
  #L1495e6.  if v0 != 0 then goto L1495ee;
  #L1495ea.  v0:= 1I;
  #L1495ec.  goto L1495f0;
  #L1495ee.  v0:= 0I;
  #L1495f0.  if v0 == 0 then goto L149874;
  #L1495f4.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1495f8.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1495fe.  v0:= temp @kind object;
  #L149600.  call temp:= `connectionSpecs`(v0) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @kind virtual;
  #L149606.  v0:= temp @kind object;
  #L149608.  v11:= new `okhttp3.internal.connection.ConnectionSpecSelector`;
  #L14960c.  call `<init>`(v11, v0) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.<init>:(Ljava/util/List;)V` @kind direct;
  #L149612.  v1:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149616.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L14961c.  v1:= temp @kind object;
  #L14961e.  call temp:= `sslSocketFactory`(v1) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L149624.  v1:= temp @kind object;
  #L149626.  if v1 != 0 then goto L1496cc;
  #L14962a.  v1:= `@@okhttp3.ConnectionSpec.CLEARTEXT` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L14962e.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L149634.  v0:= temp;
  #L149636.  if v0 == 0 then goto L1496b2;
  #L14963a.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L14963e.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L149644.  v0:= temp @kind object;
  #L149646.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14964c.  v0:= temp @kind object;
  #L14964e.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L149654.  v0:= temp @kind object;
  #L149656.  v1:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L14965a.  call temp:= `get`(v1) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L149660.  v1:= temp @kind object;
  #L149662.  call temp:= `isCleartextTrafficPermitted`(v1, v0) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind virtual;
  #L149668.  v1:= temp;
  #L14966a.  if v1 == 0 then goto L149670;
  #L14966e.  goto L1496f0;
  #L149670.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L149674.  v2:= new `java.net.UnknownServiceException`;
  #L149678.  v3:= new `java.lang.StringBuilder`;
  #L14967c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149682.  v4:= "CLEARTEXT communication to " @kind object;
  #L149686.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14968c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149692.  v0:= " not permitted by network security policy" @kind object;
  #L149696.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14969c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1496a2.  v0:= temp @kind object;
  #L1496a4.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1496aa.  call `<init>`(v1, v2) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1496b0.  throw v1;
  #L1496b2.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L1496b6.  v1:= new `java.net.UnknownServiceException`;
  #L1496ba.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L1496be.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1496c4.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1496ca.  throw v0;
  #L1496cc.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1496d0.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1496d6.  v0:= temp @kind object;
  #L1496d8.  call temp:= `protocols`(v0) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L1496de.  v0:= temp @kind object;
  #L1496e0.  v1:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L1496e4.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1496ea.  v0:= temp;
  #L1496ec.  if v0 != 0 then goto L14985a;
  #L1496f0.  v12:= 0I;
  #L1496f2.  v13:= v12 @kind object;
  #L1496f4.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1496f8.  call temp:= `requiresTunnel`(v0) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @kind virtual;
  #L1496fe.  v0:= temp;
  #L149700.  if v0 == 0 then goto L149736;
  #L149704.  v1:= v16 @kind object;
  #L149708.  v2:= v17;
  #L14970c.  v3:= v18;
  #L149710.  v4:= v19;
  #L149714.  v5:= v22 @kind object;
  #L149718.  v6:= v23 @kind object;
  #L14971c.  call `d`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/connection/RealConnection;.d:(IIILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L149722.  v0:= v7.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L149726.  if v0 != 0 then goto L14972c;
  #L14972a.  goto L149770;
  #L14972c.  v14:= v17;
  #L149730.  v15:= v18;
  #L149734.  goto L149744;
  #L149736.  v14:= v17;
  #L14973a.  v15:= v18;
  #L14973e.  call `b`(v7, v14, v15, v8, v9) @signature `Lokhttp3/internal/connection/RealConnection;.b:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L149744.  v6:= v20;
  #L149748.  call `g`(v7, v11, v6, v8, v9) @signature `Lokhttp3/internal/connection/RealConnection;.g:(Lokhttp3/internal/connection/ConnectionSpecSelector;ILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L14974e.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149752.  call temp:= `socketAddress`(v0) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L149758.  v0:= temp @kind object;
  #L14975a.  v1:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L14975e.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L149764.  v1:= temp @kind object;
  #L149766.  v2:= v7.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` @kind object;
  #L14976a.  call `connectEnd`(v9, v8, v0, v1, v2) @signature `Lokhttp3/EventListener;.connectEnd:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L149770.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149774.  call temp:= `requiresTunnel`(v0) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @kind virtual;
  #L14977a.  v0:= temp;
  #L14977c.  if v0 == 0 then goto L1497a4;
  #L149780.  v0:= v7.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L149784.  if v0 == 0 then goto L14978a;
  #L149788.  goto L1497a4;
  #L14978a.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L14978e.  v1:= new `java.net.ProtocolException`;
  #L149792.  v2:= "Too many tunnel connections attempted: 21" @kind object;
  #L149796.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14979c.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1497a2.  throw v0;
  #L1497a4.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L1497aa.  v0:= temp @kind wide;
  #L1497ac.  v7.`okhttp3.internal.connection.RealConnection.o` @type ^`long` := v0 @kind wide;
  #L1497b0.  return @kind void;
  #L1497b2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1497b4.  goto L1497c8;
  #L1497b6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1497b8.  goto L1497c4;
  #L1497ba.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1497bc.  v14:= v17;
  #L1497c0.  v15:= v18;
  #L1497c4.  v6:= v20;
  #L1497c8.  v1:= v7.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L1497cc.  if v1 == 0 then goto L1497d6;
  #L1497d0.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1497d6.  v1:= v7.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1497da.  if v1 == 0 then goto L1497e4;
  #L1497de.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1497e4.  v7.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` := v12 @kind object;
  #L1497e8.  v7.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` := v12 @kind object;
  #L1497ec.  v7.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` := v12 @kind object;
  #L1497f0.  v7.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` := v12 @kind object;
  #L1497f4.  v7.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` := v12 @kind object;
  #L1497f8.  v7.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` := v12 @kind object;
  #L1497fc.  v7.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` := v12 @kind object;
  #L149800.  v7.`okhttp3.internal.connection.RealConnection.m` @type ^`int` := v10;
  #L149804.  v1:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149808.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L14980e.  v3:= temp @kind object;
  #L149810.  v1:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L149814.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L14981a.  v4:= temp @kind object;
  #L14981c.  v5:= 0I;
  #L14981e.  v1:= v23 @kind object;
  #L149822.  v2:= v22 @kind object;
  #L149826.  v6:= v0 @kind object;
  #L149828.  call `connectFailed`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/EventListener;.connectFailed:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;Ljava/io/IOException;)V` @kind virtual;
  #L14982e.  if v13 != 0 then goto L14983e;
  #L149832.  v13:= new `okhttp3.internal.connection.RouteException`;
  #L149836.  call `<init>`(v13, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L14983c.  goto L149844;
  #L14983e.  call `addConnectException`(v13, v0) @signature `Lokhttp3/internal/connection/RouteException;.addConnectException:(Ljava/io/IOException;)V` @kind virtual;
  #L149844.  if v21 == 0 then goto L149858;
  #L149848.  call temp:= `connectionFailed`(v11, v0) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.connectionFailed:(Ljava/io/IOException;)Z` @kind virtual;
  #L14984e.  v0:= temp;
  #L149850.  if v0 == 0 then goto L149858;
  #L149854.  goto L1496f4;
  #L149858.  throw v13;
  #L14985a.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L14985e.  v1:= new `java.net.UnknownServiceException`;
  #L149862.  v2:= "H2_PRIOR_KNOWLEDGE cannot be used with HTTPS" @kind object;
  #L149866.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14986c.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L149872.  throw v0;
  #L149874.  v0:= new `java.lang.IllegalStateException`;
  #L149878.  v1:= "already connected" @kind object;
  #L14987c.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L149882.  v1:= temp @kind object;
  #L149884.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14988a.  throw v0;
  catch `java.io.IOException` @[L1496f4..L149726] goto L1497ba;
  catch `java.io.IOException` @[L14973e..L149744] goto L1497b6;
  catch `java.io.IOException` @[L149748..L149770] goto L1497b2;
}
procedure `void` `connectFailed$okhttp`(`okhttp3.internal.connection.RealConnection` v3 @kind this, `okhttp3.OkHttpClient` v4 @kind object, `okhttp3.Route` v5 @kind object, `java.io.IOException` v6 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectFailed$okhttp:(Lokhttp3/OkHttpClient;Lokhttp3/Route;Ljava/io/IOException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1498c4.  v0:= "client" @kind object;
  #L1498c8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1498ce.  v0:= "failedRoute" @kind object;
  #L1498d2.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1498d8.  v0:= "failure" @kind object;
  #L1498dc.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1498e2.  call temp:= `proxy`(v5) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1498e8.  v0:= temp @kind object;
  #L1498ea.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1498f0.  v0:= temp @kind object;
  #L1498f2.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1498f6.  if v0 == v1 then goto L149930;
  #L1498fa.  call temp:= `address`(v5) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L149900.  v0:= temp @kind object;
  #L149902.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L149908.  v1:= temp @kind object;
  #L14990a.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L149910.  v0:= temp @kind object;
  #L149912.  call temp:= `uri`(v0) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L149918.  v0:= temp @kind object;
  #L14991a.  call temp:= `proxy`(v5) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L149920.  v2:= temp @kind object;
  #L149922.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L149928.  v2:= temp @kind object;
  #L14992a.  call `connectFailed`(v1, v0, v2, v6) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L149930.  call temp:= `getRouteDatabase`(v4) @signature `Lokhttp3/OkHttpClient;.getRouteDatabase:()Lokhttp3/internal/connection/RouteDatabase;` @kind virtual;
  #L149936.  v4:= temp @kind object;
  #L149938.  call `failed`(v4, v5) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @kind virtual;
  #L14993e.  return @kind void;
}
procedure `java.util.List` `getCalls`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.getCalls:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L149078.  v0:= v1.`okhttp3.internal.connection.RealConnection.n` @type ^`java.util.List` @kind object;
  #L14907c.  return v0 @kind object;
}
procedure `okhttp3.internal.connection.RealConnectionPool` `getConnectionPool`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.getConnectionPool:()Lokhttp3/internal/connection/RealConnectionPool;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1493dc.  v0:= v1.`okhttp3.internal.connection.RealConnection.p` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L1493e0.  return v0 @kind object;
}
procedure `long` `getIdleAtNs$okhttp`(`okhttp3.internal.connection.RealConnection` v2 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.getIdleAtNs$okhttp:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L149090.  v0:= v2.`okhttp3.internal.connection.RealConnection.o` @type ^`long` @kind wide;
  #L149094.  return v0 @kind wide;
}
procedure `boolean` `getNoNewExchanges`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.getNoNewExchanges:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L148a90.  v0:= v1.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` @kind boolean;
  #L148a94.  return v0;
}
procedure `int` `getRouteFailureCount$okhttp`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.getRouteFailureCount$okhttp:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L148f24.  v0:= v1.`okhttp3.internal.connection.RealConnection.j` @type ^`int`;
  #L148f28.  return v0;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1490c0.  v0:= v1.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` @kind object;
  #L1490c4.  return v0 @kind object;
}
procedure `void` `incrementSuccessCount$okhttp`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.incrementSuccessCount$okhttp:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L149f20.  @monitorenter v1
  #L149f22.  v0:= v1.`okhttp3.internal.connection.RealConnection.k` @type ^`int`;
  #L149f26.  v0:= v0 + 1;
  #L149f2a.  v1.`okhttp3.internal.connection.RealConnection.k` @type ^`int` := v0;
  #L149f2e.  @monitorexit v1
  #L149f30.  return @kind void;
  #L149f32.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L149f34.  @monitorexit v1
  #L149f36.  throw v0;
  catch `java.lang.Throwable` @[L149f22..L149f2e] goto L149f32;
}
procedure `boolean` `isEligible$okhttp`(`okhttp3.internal.connection.RealConnection` v3 @kind this, `okhttp3.Address` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.isEligible$okhttp:(Lokhttp3/Address;Ljava/util/List;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L148aa8.  v0:= "address" @kind object;
  #L148aac.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L148ab2.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L148ab6.  if v0 == 0 then goto L148b20;
  #L148aba.  call temp:= `holdsLock`(v3) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L148ac0.  v0:= temp;
  #L148ac2.  if v0 == 0 then goto L148ac8;
  #L148ac6.  goto L148b20;
  #L148ac8.  v4:= new `java.lang.AssertionError`;
  #L148acc.  v5:= new `java.lang.StringBuilder`;
  #L148ad0.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L148ad6.  v0:= "Thread " @kind object;
  #L148ada.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148ae0.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L148ae6.  v0:= temp @kind object;
  #L148ae8.  v1:= "Thread.currentThread()" @kind object;
  #L148aec.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L148af2.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L148af8.  v0:= temp @kind object;
  #L148afa.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148b00.  v0:= " MUST hold lock on " @kind object;
  #L148b04.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148b0a.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148b10.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148b16.  v5:= temp @kind object;
  #L148b18.  call `<init>`(v4, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L148b1e.  throw v4;
  #L148b20.  v0:= v3.`okhttp3.internal.connection.RealConnection.n` @type ^`java.util.List` @kind object;
  #L148b24.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L148b2a.  v0:= temp;
  #L148b2c.  v1:= v3.`okhttp3.internal.connection.RealConnection.m` @type ^`int`;
  #L148b30.  v2:= 0I;
  #L148b32.  if v0 >= v1 then goto L148c1a;
  #L148b36.  v0:= v3.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` @kind boolean;
  #L148b3a.  if v0 == 0 then goto L148b40;
  #L148b3e.  goto L148c1a;
  #L148b40.  v0:= v3.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L148b44.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L148b4a.  v0:= temp @kind object;
  #L148b4c.  call temp:= `equalsNonHost$okhttp`(v0, v4) @signature `Lokhttp3/Address;.equalsNonHost$okhttp:(Lokhttp3/Address;)Z` @kind virtual;
  #L148b52.  v0:= temp;
  #L148b54.  if v0 != 0 then goto L148b5a;
  #L148b58.  return v2;
  #L148b5a.  call temp:= `url`(v4) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L148b60.  v0:= temp @kind object;
  #L148b62.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L148b68.  v0:= temp @kind object;
  #L148b6a.  call temp:= `route`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L148b70.  v1:= temp @kind object;
  #L148b72.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L148b78.  v1:= temp @kind object;
  #L148b7a.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L148b80.  v1:= temp @kind object;
  #L148b82.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L148b88.  v1:= temp @kind object;
  #L148b8a.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L148b90.  v0:= temp;
  #L148b92.  v1:= 1I;
  #L148b94.  if v0 == 0 then goto L148b9a;
  #L148b98.  return v1;
  #L148b9a.  v0:= v3.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L148b9e.  if v0 != 0 then goto L148ba4;
  #L148ba2.  return v2;
  #L148ba4.  if v5 == 0 then goto L148c1a;
  #L148ba8.  call temp:= `h`(v3, v5) @signature `Lokhttp3/internal/connection/RealConnection;.h:(Ljava/util/List;)Z` @kind direct;
  #L148bae.  v5:= temp;
  #L148bb0.  if v5 != 0 then goto L148bb6;
  #L148bb4.  goto L148c1a;
  #L148bb6.  call temp:= `hostnameVerifier`(v4) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L148bbc.  v5:= temp @kind object;
  #L148bbe.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L148bc2.  if v5 == v0 then goto L148bc8;
  #L148bc6.  return v2;
  #L148bc8.  call temp:= `url`(v4) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L148bce.  v5:= temp @kind object;
  #L148bd0.  call temp:= `j`(v3, v5) @signature `Lokhttp3/internal/connection/RealConnection;.j:(Lokhttp3/HttpUrl;)Z` @kind direct;
  #L148bd6.  v5:= temp;
  #L148bd8.  if v5 != 0 then goto L148bde;
  #L148bdc.  return v2;
  #L148bde.  call temp:= `certificatePinner`(v4) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L148be4.  v5:= temp @kind object;
  #L148be6.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L148bec.  call temp:= `url`(v4) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L148bf2.  v4:= temp @kind object;
  #L148bf4.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L148bfa.  v4:= temp @kind object;
  #L148bfc.  call temp:= `handshake`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L148c02.  v0:= temp @kind object;
  #L148c04.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L148c0a.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L148c10.  v0:= temp @kind object;
  #L148c12.  call `check`(v5, v4, v0) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L148c18.  return v1;
  #L148c1a.  return v2;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L148bde..L148c18] goto L148c1a;
}
procedure `boolean` `isHealthy`(`okhttp3.internal.connection.RealConnection` v7 @kind this, `boolean` v8 ) @signature `Lokhttp3/internal/connection/RealConnection;.isHealthy:(Z)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L148c3c.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L148c40.  if v0 == 0 then goto L148caa;
  #L148c44.  call temp:= `holdsLock`(v7) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L148c4a.  v0:= temp;
  #L148c4c.  if v0 != 0 then goto L148c52;
  #L148c50.  goto L148caa;
  #L148c52.  v8:= new `java.lang.AssertionError`;
  #L148c56.  v0:= new `java.lang.StringBuilder`;
  #L148c5a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L148c60.  v1:= "Thread " @kind object;
  #L148c64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148c6a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L148c70.  v1:= temp @kind object;
  #L148c72.  v2:= "Thread.currentThread()" @kind object;
  #L148c76.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L148c7c.  call temp:= `getName`(v1) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L148c82.  v1:= temp @kind object;
  #L148c84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148c8a.  v1:= " MUST NOT hold lock on " @kind object;
  #L148c8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148c94.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148c9a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148ca0.  v0:= temp @kind object;
  #L148ca2.  call `<init>`(v8, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L148ca8.  throw v8;
  #L148caa.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L148cb0.  v0:= temp @kind wide;
  #L148cb2.  v2:= v7.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L148cb6.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L148cbc.  v3:= v7.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L148cc0.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L148cc6.  v4:= v7.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` @kind object;
  #L148cca.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L148cd0.  call temp:= `isClosed`(v2) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L148cd6.  v2:= temp;
  #L148cd8.  if v2 != 0 then goto L148d48;
  #L148cdc.  call temp:= `isClosed`(v3) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L148ce2.  v2:= temp;
  #L148ce4.  if v2 != 0 then goto L148d48;
  #L148ce8.  call temp:= `isInputShutdown`(v3) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L148cee.  v2:= temp;
  #L148cf0.  if v2 != 0 then goto L148d48;
  #L148cf4.  call temp:= `isOutputShutdown`(v3) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L148cfa.  v2:= temp;
  #L148cfc.  if v2 == 0 then goto L148d02;
  #L148d00.  goto L148d48;
  #L148d02.  v2:= v7.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L148d06.  if v2 == 0 then goto L148d14;
  #L148d0a.  call temp:= `isHealthy`(v2, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.isHealthy:(J)Z` @kind virtual;
  #L148d10.  v8:= temp;
  #L148d12.  return v8;
  #L148d14.  @monitorenter v7
  #L148d16.  v5:= v7.`okhttp3.internal.connection.RealConnection.o` @type ^`long` @kind wide;
  #L148d1a.  v0:= v0 - v5 @kind long;
  #L148d1c.  @monitorexit v7
  #L148d1e.  v5:= 10000000000L;
  #L148d28.  v2:= lcmp(v0, v5);
  #L148d2c.  if v2 < 0 then goto L148d3e;
  #L148d30.  if v8 == 0 then goto L148d3e;
  #L148d34.  call temp:= `isHealthy`(v3, v4) @signature `Lokhttp3/internal/Util;.isHealthy:(Ljava/net/Socket;Lokio/BufferedSource;)Z` @kind static;
  #L148d3a.  v8:= temp;
  #L148d3c.  return v8;
  #L148d3e.  v8:= 1I;
  #L148d40.  return v8;
  #L148d42.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L148d44.  @monitorexit v7
  #L148d46.  throw v8;
  #L148d48.  v8:= 0I;
  #L148d4a.  return v8;
  catch `java.lang.Throwable` @[L148d16..L148d1a] goto L148d42;
}
procedure `boolean` `isMultiplexed$okhttp`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed$okhttp:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L148d68.  v0:= v1.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L148d6c.  if v0 == 0 then goto L148d74;
  #L148d70.  v0:= 1I;
  #L148d72.  goto L148d76;
  #L148d74.  v0:= 0I;
  #L148d76.  return v0;
}
procedure `okhttp3.internal.http.ExchangeCodec` `newCodec$okhttp`(`okhttp3.internal.connection.RealConnection` v6 @kind this, `okhttp3.OkHttpClient` v7 @kind object, `okhttp3.internal.http.RealInterceptorChain` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.newCodec$okhttp:(Lokhttp3/OkHttpClient;Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/http/ExchangeCodec;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1493f4.  v0:= "client" @kind object;
  #L1493f8.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1493fe.  v0:= "chain" @kind object;
  #L149402.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L149408.  v0:= v6.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L14940c.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L149412.  v1:= v6.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` @kind object;
  #L149416.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14941c.  v2:= v6.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` @kind object;
  #L149420.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L149426.  v3:= v6.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L14942a.  if v3 == 0 then goto L14943a;
  #L14942e.  v0:= new `okhttp3.internal.http2.Http2ExchangeCodec`;
  #L149432.  call `<init>`(v0, v7, v6, v8, v3) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokhttp3/internal/http/RealInterceptorChain;Lokhttp3/internal/http2/Http2Connection;)V` @kind direct;
  #L149438.  goto L149486;
  #L14943a.  call temp:= `readTimeoutMillis`(v8) @signature `Lokhttp3/internal/http/RealInterceptorChain;.readTimeoutMillis:()I` @kind virtual;
  #L149440.  v3:= temp;
  #L149442.  call `setSoTimeout`(v0, v3) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L149448.  call temp:= `timeout`(v1) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L14944e.  v0:= temp @kind object;
  #L149450.  call temp:= `getReadTimeoutMillis$okhttp`(v8) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getReadTimeoutMillis$okhttp:()I` @kind virtual;
  #L149456.  v3:= temp;
  #L149458.  v3:= (`long`) v3 @kind i2l;
  #L14945a.  v5:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14945e.  call temp:= `timeout`(v0, v3, v5) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L149464.  call temp:= `timeout`(v2) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L14946a.  v0:= temp @kind object;
  #L14946c.  call temp:= `getWriteTimeoutMillis$okhttp`(v8) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getWriteTimeoutMillis$okhttp:()I` @kind virtual;
  #L149472.  v8:= temp;
  #L149474.  v3:= (`long`) v8 @kind i2l;
  #L149476.  call temp:= `timeout`(v0, v3, v5) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L14947c.  v0:= new `okhttp3.internal.http1.Http1ExchangeCodec`;
  #L149480.  call `<init>`(v0, v7, v6, v1, v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokio/BufferedSource;Lokio/BufferedSink;)V` @kind direct;
  #L149486.  return v0 @kind object;
}
procedure `okhttp3.internal.ws.RealWebSocket$Streams` `newWebSocketStreams$okhttp`(`okhttp3.internal.connection.RealConnection` v8 @kind this, `okhttp3.internal.connection.Exchange` v9 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.newWebSocketStreams$okhttp:(Lokhttp3/internal/connection/Exchange;)Lokhttp3/internal/ws/RealWebSocket$Streams;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L149498.  v0:= "exchange" @kind object;
  #L14949c.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1494a2.  v0:= v8.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L1494a6.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1494ac.  v6:= v8.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` @kind object;
  #L1494b0.  call `checkNotNull`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1494b6.  v7:= v8.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` @kind object;
  #L1494ba.  call `checkNotNull`(v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1494c0.  v1:= 0I;
  #L1494c2.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L1494c8.  call `noNewExchanges$okhttp`(v8) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges$okhttp:()V` @kind virtual;
  #L1494ce.  v0:= new `okhttp3.internal.connection.RealConnection$newWebSocketStreams$1`;
  #L1494d2.  v5:= 1I;
  #L1494d4.  v1:= v0 @kind object;
  #L1494d6.  v2:= v9 @kind object;
  #L1494d8.  v3:= v6 @kind object;
  #L1494da.  v4:= v7 @kind object;
  #L1494dc.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/connection/RealConnection$newWebSocketStreams$1;.<init>:(Lokhttp3/internal/connection/Exchange;Lokio/BufferedSource;Lokio/BufferedSink;ZLokio/BufferedSource;Lokio/BufferedSink;)V` @kind direct;
  #L1494e2.  return v0 @kind object;
}
procedure `void` `noCoalescedConnections$okhttp`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.noCoalescedConnections$okhttp:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L149f54.  @monitorenter v1
  #L149f56.  v0:= 1I;
  #L149f58.  v1.`okhttp3.internal.connection.RealConnection.i` @type ^`boolean` := v0 @kind boolean;
  #L149f5c.  @monitorexit v1
  #L149f5e.  return @kind void;
  #L149f60.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L149f62.  @monitorexit v1
  #L149f64.  throw v0;
  catch `java.lang.Throwable` @[L149f58..L149f5c] goto L149f60;
}
procedure `void` `noNewExchanges$okhttp`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges$okhttp:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L149f84.  @monitorenter v1
  #L149f86.  v0:= 1I;
  #L149f88.  v1.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` := v0 @kind boolean;
  #L149f8c.  @monitorexit v1
  #L149f8e.  return @kind void;
  #L149f90.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L149f92.  @monitorexit v1
  #L149f94.  throw v0;
  catch `java.lang.Throwable` @[L149f88..L149f8c] goto L149f90;
}
procedure `void` `onSettings`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.http2.Http2Connection` v2 @kind object, `okhttp3.internal.http2.Settings` v3 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.onSettings:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149fb4.  @monitorenter v1
  #L149fb6.  v0:= "connection" @kind object;
  #L149fba.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L149fc0.  v2:= "settings" @kind object;
  #L149fc4.  call `checkNotNullParameter`(v3, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L149fca.  call temp:= `getMaxConcurrentStreams`(v3) @signature `Lokhttp3/internal/http2/Settings;.getMaxConcurrentStreams:()I` @kind virtual;
  #L149fd0.  v2:= temp;
  #L149fd2.  v1.`okhttp3.internal.connection.RealConnection.m` @type ^`int` := v2;
  #L149fd6.  @monitorexit v1
  #L149fd8.  return @kind void;
  #L149fda.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L149fdc.  @monitorexit v1
  #L149fde.  throw v2;
  catch `java.lang.Throwable` @[L149fb6..L149fd6] goto L149fda;
}
procedure `void` `onStream`(`okhttp3.internal.connection.RealConnection` v2 @kind this, `okhttp3.internal.http2.Http2Stream` v3 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.onStream:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L149ffc.  v0:= "stream" @kind object;
  #L14a000.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14a006.  v0:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L14a00a.  v1:= 0I;
  #L14a00c.  call `close`(v3, v0, v1) @signature `Lokhttp3/internal/http2/Http2Stream;.close:(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L14a012.  return @kind void;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1490d8.  v0:= v1.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` @kind object;
  #L1490dc.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1490e2.  return v0 @kind object;
}
procedure `okhttp3.Route` `route`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1493c4.  v0:= v1.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1493c8.  return v0 @kind object;
}
procedure `void` `setIdleAtNs$okhttp`(`okhttp3.internal.connection.RealConnection` v0 @kind this, `long` v1 ) @signature `Lokhttp3/internal/connection/RealConnection;.setIdleAtNs$okhttp:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L14a024.  v0.`okhttp3.internal.connection.RealConnection.o` @type ^`long` := v1 @kind wide;
  #L14a028.  return @kind void;
}
procedure `void` `setNoNewExchanges`(`okhttp3.internal.connection.RealConnection` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/connection/RealConnection;.setNoNewExchanges:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L14a03c.  v0.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` := v1 @kind boolean;
  #L14a040.  return @kind void;
}
procedure `void` `setRouteFailureCount$okhttp`(`okhttp3.internal.connection.RealConnection` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/connection/RealConnection;.setRouteFailureCount$okhttp:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L14a054.  v0.`okhttp3.internal.connection.RealConnection.j` @type ^`int` := v1;
  #L14a058.  return @kind void;
}
procedure `java.net.Socket` `socket`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14905c.  v0:= v1.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L149060.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L149066.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.connection.RealConnection` v2 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148f3c.  v0:= new `java.lang.StringBuilder`;
  #L148f40.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L148f46.  v1:= "Connection{" @kind object;
  #L148f4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148f50.  v1:= v2.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L148f54.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L148f5a.  v1:= temp @kind object;
  #L148f5c.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L148f62.  v1:= temp @kind object;
  #L148f64.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L148f6a.  v1:= temp @kind object;
  #L148f6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148f72.  v1:= 58I;
  #L148f76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L148f7c.  v1:= v2.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L148f80.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L148f86.  v1:= temp @kind object;
  #L148f88.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L148f8e.  v1:= temp @kind object;
  #L148f90.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L148f96.  v1:= temp;
  #L148f98.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L148f9e.  v1:= 44I;
  #L148fa2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L148fa8.  v1:= " proxy=" @kind object;
  #L148fac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148fb2.  v1:= v2.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L148fb6.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L148fbc.  v1:= temp @kind object;
  #L148fbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148fc4.  v1:= " hostAddress=" @kind object;
  #L148fc8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148fce.  v1:= v2.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L148fd2.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L148fd8.  v1:= temp @kind object;
  #L148fda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148fe0.  v1:= " cipherSuite=" @kind object;
  #L148fe4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148fea.  v1:= v2.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` @kind object;
  #L148fee.  if v1 == 0 then goto L149000;
  #L148ff2.  call temp:= `cipherSuite`(v1) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L148ff8.  v1:= temp @kind object;
  #L148ffa.  if v1 == 0 then goto L149000;
  #L148ffe.  goto L149004;
  #L149000.  v1:= "none" @kind object;
  #L149004.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14900a.  v1:= " protocol=" @kind object;
  #L14900e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149014.  v1:= v2.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` @kind object;
  #L149018.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14901e.  v1:= 125I;
  #L149022.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L149028.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14902e.  v0:= temp @kind object;
  #L149030.  return v0 @kind object;
}
procedure `void` `trackFailure$okhttp`(`okhttp3.internal.connection.RealConnection` v3 @kind this, `okhttp3.internal.connection.RealCall` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.trackFailure$okhttp:(Lokhttp3/internal/connection/RealCall;Ljava/io/IOException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L14a118.  @monitorenter v3
  #L14a11a.  v0:= "call" @kind object;
  #L14a11e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14a124.  v0:= instanceof @variable v5 @type ^`okhttp3.internal.http2.StreamResetException` @kind boolean;
  #L14a128.  v1:= 1I;
  #L14a12a.  if v0 == 0 then goto L14a18c;
  #L14a12e.  v0:= v5 @kind object;
  #L14a130.  v0:= (`okhttp3.internal.http2.StreamResetException`) v0 @kind object;
  #L14a134.  v0:= v0.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L14a138.  v2:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L14a13c.  if v0 != v2 then goto L14a15e;
  #L14a140.  v4:= v3.`okhttp3.internal.connection.RealConnection.l` @type ^`int`;
  #L14a144.  v4:= v4 + v1 @kind int;
  #L14a146.  v3.`okhttp3.internal.connection.RealConnection.l` @type ^`int` := v4;
  #L14a14a.  if v4 <= v1 then goto L14a1cc;
  #L14a14e.  v3.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` := v1 @kind boolean;
  #L14a152.  v4:= v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int`;
  #L14a156.  v4:= v4 + v1 @kind int;
  #L14a158.  v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int` := v4;
  #L14a15c.  goto L14a1cc;
  #L14a15e.  v5:= (`okhttp3.internal.http2.StreamResetException`) v5 @kind object;
  #L14a162.  v5:= v5.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L14a166.  v0:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L14a16a.  if v5 != v0 then goto L14a17c;
  #L14a16e.  call temp:= `isCanceled`(v4) @signature `Lokhttp3/internal/connection/RealCall;.isCanceled:()Z` @kind virtual;
  #L14a174.  v4:= temp;
  #L14a176.  if v4 == 0 then goto L14a17c;
  #L14a17a.  goto L14a1cc;
  #L14a17c.  v3.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` := v1 @kind boolean;
  #L14a180.  v4:= v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int`;
  #L14a184.  v4:= v4 + v1 @kind int;
  #L14a186.  v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int` := v4;
  #L14a18a.  goto L14a1cc;
  #L14a18c.  call temp:= `isMultiplexed$okhttp`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed$okhttp:()Z` @kind virtual;
  #L14a192.  v0:= temp;
  #L14a194.  if v0 == 0 then goto L14a1a0;
  #L14a198.  v0:= instanceof @variable v5 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L14a19c.  if v0 == 0 then goto L14a1cc;
  #L14a1a0.  v3.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` := v1 @kind boolean;
  #L14a1a4.  v0:= v3.`okhttp3.internal.connection.RealConnection.k` @type ^`int`;
  #L14a1a8.  if v0 != 0 then goto L14a1cc;
  #L14a1ac.  if v5 == 0 then goto L14a1c2;
  #L14a1b0.  call temp:= `getClient`(v4) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L14a1b6.  v4:= temp @kind object;
  #L14a1b8.  v0:= v3.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L14a1bc.  call `connectFailed$okhttp`(v3, v4, v0, v5) @signature `Lokhttp3/internal/connection/RealConnection;.connectFailed$okhttp:(Lokhttp3/OkHttpClient;Lokhttp3/Route;Ljava/io/IOException;)V` @kind virtual;
  #L14a1c2.  v4:= v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int`;
  #L14a1c6.  v4:= v4 + v1 @kind int;
  #L14a1c8.  v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int` := v4;
  #L14a1cc.  @monitorexit v3
  #L14a1ce.  return @kind void;
  #L14a1d0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14a1d2.  @monitorexit v3
  #L14a1d4.  throw v4;
  catch `java.lang.Throwable` @[L14a11a..L14a1cc] goto L14a1d0;
}
