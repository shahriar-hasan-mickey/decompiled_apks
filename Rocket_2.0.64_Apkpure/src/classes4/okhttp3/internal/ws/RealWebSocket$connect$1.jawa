record `okhttp3.internal.ws.RealWebSocket$connect$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Callback` @kind interface {
  `okhttp3.internal.ws.RealWebSocket` `okhttp3.internal.ws.RealWebSocket$connect$1.a` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.Request` `okhttp3.internal.ws.RealWebSocket$connect$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.ws.RealWebSocket$connect$1` v0 @kind this, `okhttp3.internal.ws.RealWebSocket` v1 @kind object, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/internal/ws/RealWebSocket$connect$1;.<init>:(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/Request;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L15c3dc.  v0.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` := v1 @kind object;
  #L15c3e0.  v0.`okhttp3.internal.ws.RealWebSocket$connect$1.b` @type ^`okhttp3.Request` := v2 @kind object;
  #L15c3e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15c3ea.  return @kind void;
}
procedure `void` `onFailure`(`okhttp3.internal.ws.RealWebSocket$connect$1` v1 @kind this, `okhttp3.Call` v2 @kind object, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/ws/RealWebSocket$connect$1;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c3fc.  v0:= "call" @kind object;
  #L15c400.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15c406.  v2:= "e" @kind object;
  #L15c40a.  call `checkNotNullParameter`(v3, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15c410.  v2:= v1.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c414.  v0:= 0I;
  #L15c416.  call `failWebSocket`(v2, v3, v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L15c41c.  return @kind void;
}
procedure `void` `onResponse`(`okhttp3.internal.ws.RealWebSocket$connect$1` v4 @kind this, `okhttp3.Call` v5 @kind object, `okhttp3.Response` v6 @kind object) @signature `Lokhttp3/internal/ws/RealWebSocket$connect$1;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15c430.  v0:= "call" @kind object;
  #L15c434.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15c43a.  v5:= "response" @kind object;
  #L15c43e.  call `checkNotNullParameter`(v6, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15c444.  call temp:= `exchange`(v6) @signature `Lokhttp3/Response;.exchange:()Lokhttp3/internal/connection/Exchange;` @kind virtual;
  #L15c44a.  v5:= temp @kind object;
  #L15c44c.  v0:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c450.  call `checkUpgradeSuccess$okhttp`(v0, v6, v5) @signature `Lokhttp3/internal/ws/RealWebSocket;.checkUpgradeSuccess$okhttp:(Lokhttp3/Response;Lokhttp3/internal/connection/Exchange;)V` @kind virtual;
  #L15c456.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15c45c.  call temp:= `newWebSocketStreams`(v5) @signature `Lokhttp3/internal/connection/Exchange;.newWebSocketStreams:()Lokhttp3/internal/ws/RealWebSocket$Streams;` @kind virtual;
  #L15c462.  v5:= temp @kind object;
  #L15c464.  v0:= `@@okhttp3.internal.ws.WebSocketExtensions.Companion` @type ^`okhttp3.internal.ws.WebSocketExtensions$Companion` @kind object;
  #L15c468.  call temp:= `headers`(v6) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L15c46e.  v1:= temp @kind object;
  #L15c470.  call temp:= `parse`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketExtensions$Companion;.parse:(Lokhttp3/Headers;)Lokhttp3/internal/ws/WebSocketExtensions;` @kind virtual;
  #L15c476.  v0:= temp @kind object;
  #L15c478.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c47c.  call `access$setExtensions$p`(v1, v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.access$setExtensions$p:(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/internal/ws/WebSocketExtensions;)V` @kind static;
  #L15c482.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c486.  call temp:= `access$isValid`(v1, v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.access$isValid:(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/internal/ws/WebSocketExtensions;)Z` @kind static;
  #L15c48c.  v0:= temp;
  #L15c48e.  if v0 != 0 then goto L15c4c6;
  #L15c492.  v0:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c496.  @monitorenter v0
  #L15c498.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c49c.  call temp:= `access$getMessageAndCloseQueue$p`(v1) @signature `Lokhttp3/internal/ws/RealWebSocket;.access$getMessageAndCloseQueue$p:(Lokhttp3/internal/ws/RealWebSocket;)Ljava/util/ArrayDeque;` @kind static;
  #L15c4a2.  v1:= temp @kind object;
  #L15c4a4.  call `clear`(v1) @signature `Ljava/util/ArrayDeque;.clear:()V` @kind virtual;
  #L15c4aa.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c4ae.  v2:= 1010I;
  #L15c4b2.  v3:= "unexpected Sec-WebSocket-Extensions in response header" @kind object;
  #L15c4b6.  call temp:= `close`(v1, v2, v3) @signature `Lokhttp3/internal/ws/RealWebSocket;.close:(ILjava/lang/String;)Z` @kind virtual;
  #L15c4bc.  @monitorexit v0
  #L15c4be.  goto L15c4c6;
  #L15c4c0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15c4c2.  @monitorexit v0
  #L15c4c4.  throw v5;
  #L15c4c6.  v0:= new `java.lang.StringBuilder`;
  #L15c4ca.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c4d0.  v1:= `@@okhttp3.internal.Util.okHttpName` @type ^`java.lang.String` @kind object;
  #L15c4d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c4da.  v1:= " WebSocket " @kind object;
  #L15c4de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c4e4.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.b` @type ^`okhttp3.Request` @kind object;
  #L15c4e8.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L15c4ee.  v1:= temp @kind object;
  #L15c4f0.  call temp:= `redact`(v1) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @kind virtual;
  #L15c4f6.  v1:= temp @kind object;
  #L15c4f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c4fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c504.  v0:= temp @kind object;
  #L15c506.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c50a.  call `initReaderAndWriter`(v1, v0, v5) @signature `Lokhttp3/internal/ws/RealWebSocket;.initReaderAndWriter:(Ljava/lang/String;Lokhttp3/internal/ws/RealWebSocket$Streams;)V` @kind virtual;
  #L15c510.  v5:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c514.  call temp:= `getListener$okhttp`(v5) @signature `Lokhttp3/internal/ws/RealWebSocket;.getListener$okhttp:()Lokhttp3/WebSocketListener;` @kind virtual;
  #L15c51a.  v5:= temp @kind object;
  #L15c51c.  v0:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c520.  call `onOpen`(v5, v0, v6) @signature `Lokhttp3/WebSocketListener;.onOpen:(Lokhttp3/WebSocket;Lokhttp3/Response;)V` @kind virtual;
  #L15c526.  v5:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c52a.  call `loopReader`(v5) @signature `Lokhttp3/internal/ws/RealWebSocket;.loopReader:()V` @kind virtual;
  #L15c530.  goto L15c540;
  #L15c532.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L15c534.  v6:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c538.  v0:= 0I;
  #L15c53a.  call `failWebSocket`(v6, v5, v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L15c540.  return @kind void;
  #L15c542.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L15c544.  if v5 == 0 then goto L15c54e;
  #L15c548.  call `webSocketUpgradeFailed`(v5) @signature `Lokhttp3/internal/connection/Exchange;.webSocketUpgradeFailed:()V` @kind virtual;
  #L15c54e.  v5:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L15c552.  call `failWebSocket`(v5, v0, v6) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L15c558.  call `closeQuietly`(v6) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15c55e.  return @kind void;
  catch `java.io.IOException` @[L15c44c..L15c464] goto L15c542;
  catch `java.lang.Throwable` @[L15c498..L15c4bc] goto L15c4c0;
  catch `java.lang.Exception` @[L15c4c6..L15c530] goto L15c532;
}
