record `okhttp3.internal.ws.WebSocketProtocol` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@okhttp3.internal.ws.WebSocketProtocol.ACCEPT_MAGIC` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_FIN` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV1` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV2` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV3` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_MASK_OPCODE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B1_FLAG_MASK` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B1_MASK_LENGTH` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_CLIENT_GOING_AWAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_MESSAGE_MAX` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_NO_STATUS_CODE` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.ws.WebSocketProtocol` `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_BINARY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTINUATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_CLOSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_PING` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_PONG` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_FLAG_CONTROL` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_TEXT` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_BYTE_MAX` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_LONG` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_SHORT` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_SHORT_MAX` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/ws/WebSocketProtocol;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L15e094.  v0:= new `okhttp3.internal.ws.WebSocketProtocol`;
  #L15e098.  call `<init>`(v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.<init>:()V` @kind direct;
  #L15e09e.  `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` := v0 @kind object;
  #L15e0a2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketProtocol` v0 @kind this) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15e0b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e0ba.  return @kind void;
}
procedure `java.lang.String` `acceptHeader`(`okhttp3.internal.ws.WebSocketProtocol` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.acceptHeader:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15df9c.  v0:= "key" @kind object;
  #L15dfa0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15dfa6.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L15dfaa.  v1:= new `java.lang.StringBuilder`;
  #L15dfae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15dfb4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15dfba.  v3:= "258EAFA5-E914-47DA-95CA-C5AB0DC85B11" @kind object;
  #L15dfbe.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15dfc4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15dfca.  v3:= temp @kind object;
  #L15dfcc.  call temp:= `encodeUtf8`(v0, v3) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L15dfd2.  v3:= temp @kind object;
  #L15dfd4.  call temp:= `sha1`(v3) @signature `Lokio/ByteString;.sha1:()Lokio/ByteString;` @kind virtual;
  #L15dfda.  v3:= temp @kind object;
  #L15dfdc.  call temp:= `base64`(v3) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L15dfe2.  v3:= temp @kind object;
  #L15dfe4.  return v3 @kind object;
}
procedure `java.lang.String` `closeCodeExceptionMessage`(`okhttp3.internal.ws.WebSocketProtocol` v2 @kind this, `int` v3 ) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15dff8.  v0:= 1000I;
  #L15dffc.  if v3 < v0 then goto L15e05e;
  #L15e000.  v0:= 5000I;
  #L15e004.  if v3 < v0 then goto L15e00a;
  #L15e008.  goto L15e05e;
  #L15e00a.  v0:= 1006I;
  #L15e00e.  v1:= 1004I;
  #L15e012.  if v1 > v3 then goto L15e01a;
  #L15e016.  if v0 >= v3 then goto L15e02c;
  #L15e01a.  v0:= 2999I;
  #L15e01e.  v1:= 1015I;
  #L15e022.  if v1 <= v3 then goto L15e028;
  #L15e026.  goto L15e05a;
  #L15e028.  if v0 < v3 then goto L15e05a;
  #L15e02c.  v0:= new `java.lang.StringBuilder`;
  #L15e030.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15e036.  v1:= "Code " @kind object;
  #L15e03a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e040.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e046.  v3:= " is reserved and may not be used." @kind object;
  #L15e04a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e050.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e056.  v3:= temp @kind object;
  #L15e058.  goto L15e080;
  #L15e05a.  v3:= 0I;
  #L15e05c.  goto L15e080;
  #L15e05e.  v0:= new `java.lang.StringBuilder`;
  #L15e062.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15e068.  v1:= "Code must be in range [1000,5000): " @kind object;
  #L15e06c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e072.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e078.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e07e.  v3:= temp @kind object;
  #L15e080.  return v3 @kind object;
}
procedure `void` `toggleMask`(`okhttp3.internal.ws.WebSocketProtocol` v7 @kind this, `okio.Buffer$UnsafeCursor` v8 @kind object, `byte`[] v9 @kind object) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15e0cc.  v0:= "cursor" @kind object;
  #L15e0d0.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15e0d6.  v0:= "key" @kind object;
  #L15e0da.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15e0e0.  v0:= length @variable v9;
  #L15e0e2.  v1:= 0I;
  #L15e0e4.  v2:= v8.`okio.Buffer$UnsafeCursor.data` @type ^`byte`[] @kind object;
  #L15e0e8.  v3:= v8.`okio.Buffer$UnsafeCursor.start` @type ^`int`;
  #L15e0ec.  v4:= v8.`okio.Buffer$UnsafeCursor.end` @type ^`int`;
  #L15e0f0.  if v2 == 0 then goto L15e114;
  #L15e0f4.  if v3 >= v4 then goto L15e114;
  #L15e0f8.  v1:= v1 %% v0 @kind int;
  #L15e0fa.  v5:= v2[v3] @kind byte;
  #L15e0fe.  v6:= v9[v1] @kind byte;
  #L15e102.  v5:= v5 ^~ v6 @kind int;
  #L15e104.  v5:= (`byte`) v5 @kind i2b;
  #L15e106.  v2[v3]:= v5 @kind byte;
  #L15e10a.  v3:= v3 + 1;
  #L15e10e.  v1:= v1 + 1;
  #L15e112.  goto L15e0f4;
  #L15e114.  call temp:= `next`(v8) @signature `Lokio/Buffer$UnsafeCursor;.next:()I` @kind virtual;
  #L15e11a.  v2:= temp;
  #L15e11c.  v3:= -1I;
  #L15e11e.  if v2 != v3 then goto L15e0e4;
  #L15e122.  return @kind void;
}
procedure `void` `validateCloseCode`(`okhttp3.internal.ws.WebSocketProtocol` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15e134.  call temp:= `closeCodeExceptionMessage`(v1, v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind virtual;
  #L15e13a.  v2:= temp @kind object;
  #L15e13c.  if v2 != 0 then goto L15e144;
  #L15e140.  v0:= 1I;
  #L15e142.  goto L15e146;
  #L15e144.  v0:= 0I;
  #L15e146.  if v0 == 0 then goto L15e14c;
  #L15e14a.  return @kind void;
  #L15e14c.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15e152.  v0:= new `java.lang.IllegalArgumentException`;
  #L15e156.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e15c.  v2:= temp @kind object;
  #L15e15e.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e164.  throw v0;
}
