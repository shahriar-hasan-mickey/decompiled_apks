record `okhttp3.internal.ws.RealWebSocket$Message` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.ws.RealWebSocket$Message.a` @AccessFlag PRIVATE_FINAL;
  `okio.ByteString` `okhttp3.internal.ws.RealWebSocket$Message.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.RealWebSocket$Message` v1 @kind this, `int` v2 , `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/ws/RealWebSocket$Message;.<init>:(ILokio/ByteString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15c298.  v0:= "data" @kind object;
  #L15c29c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15c2a2.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15c2a8.  v1.`okhttp3.internal.ws.RealWebSocket$Message.a` @type ^`int` := v2;
  #L15c2ac.  v1.`okhttp3.internal.ws.RealWebSocket$Message.b` @type ^`okio.ByteString` := v3 @kind object;
  #L15c2b0.  return @kind void;
}
procedure `okio.ByteString` `getData`(`okhttp3.internal.ws.RealWebSocket$Message` v1 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket$Message;.getData:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15c280.  v0:= v1.`okhttp3.internal.ws.RealWebSocket$Message.b` @type ^`okio.ByteString` @kind object;
  #L15c284.  return v0 @kind object;
}
procedure `int` `getFormatOpcode`(`okhttp3.internal.ws.RealWebSocket$Message` v1 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket$Message;.getFormatOpcode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15c268.  v0:= v1.`okhttp3.internal.ws.RealWebSocket$Message.a` @type ^`int`;
  #L15c26c.  return v0;
}
