record `okhttp3.internal.ws.WebSocketReader` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `boolean` `okhttp3.internal.ws.WebSocketReader.a` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.ws.WebSocketReader.b` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.ws.WebSocketReader.c` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.ws.WebSocketReader.d` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.ws.WebSocketReader.e` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.ws.WebSocketReader.f` @AccessFlag PRIVATE;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.g` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.h` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.MessageInflater` `okhttp3.internal.ws.WebSocketReader.i` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.j` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketReader.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.l` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSource` `okhttp3.internal.ws.WebSocketReader.m` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.WebSocketReader$FrameCallback` `okhttp3.internal.ws.WebSocketReader.n` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.o` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.p` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this, `boolean` v2 , `okio.BufferedSource` v3 @kind object, `okhttp3.internal.ws.WebSocketReader$FrameCallback` v4 @kind object, `boolean` v5 , `boolean` v6 ) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15e190.  v0:= "source" @kind object;
  #L15e194.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15e19a.  v0:= "frameCallback" @kind object;
  #L15e19e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15e1a4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e1aa.  v1.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` := v2 @kind boolean;
  #L15e1ae.  v1.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` := v3 @kind object;
  #L15e1b2.  v1.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` := v4 @kind object;
  #L15e1b6.  v1.`okhttp3.internal.ws.WebSocketReader.o` @type ^`boolean` := v5 @kind boolean;
  #L15e1ba.  v1.`okhttp3.internal.ws.WebSocketReader.p` @type ^`boolean` := v6 @kind boolean;
  #L15e1be.  v3:= new `okio.Buffer`;
  #L15e1c2.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L15e1c8.  v1.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` := v3 @kind object;
  #L15e1cc.  v3:= new `okio.Buffer`;
  #L15e1d0.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L15e1d6.  v1.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` := v3 @kind object;
  #L15e1da.  v3:= 0I;
  #L15e1dc.  if v2 == 0 then goto L15e1e4;
  #L15e1e0.  v4:= v3 @kind object;
  #L15e1e2.  goto L15e1ea;
  #L15e1e4.  v4:= 4I;
  #L15e1e6.  v4:= new `byte`[v4];
  #L15e1ea.  v1.`okhttp3.internal.ws.WebSocketReader.j` @type ^`byte`[] := v4 @kind object;
  #L15e1ee.  if v2 == 0 then goto L15e1f4;
  #L15e1f2.  goto L15e1fe;
  #L15e1f4.  v3:= new `okio.Buffer$UnsafeCursor`;
  #L15e1f8.  call `<init>`(v3) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L15e1fe.  v1.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` := v3 @kind object;
  #L15e202.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.ws.WebSocketReader` v8 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L15e264.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` @kind wide;
  #L15e268.  v2:= 0L;
  #L15e26c.  v4:= lcmp(v0, v2);
  #L15e270.  if v4 <= 0 then goto L15e2ca;
  #L15e274.  v4:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e278.  v5:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L15e27c.  call `readFully`(v4, v5, v0) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L15e282.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` @kind boolean;
  #L15e286.  if v0 != 0 then goto L15e2ca;
  #L15e28a.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L15e28e.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15e292.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15e298.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L15e29e.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15e2a2.  call temp:= `seek`(v0, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L15e2a8.  v0:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L15e2ac.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15e2b0.  v4:= v8.`okhttp3.internal.ws.WebSocketReader.j` @type ^`byte`[] @kind object;
  #L15e2b4.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15e2ba.  call `toggleMask`(v0, v1, v4) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind virtual;
  #L15e2c0.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15e2c4.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L15e2ca.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L15e2ce.  goto L15e3c0;
  #L15e2d4.  v0:= new `java.net.ProtocolException`;
  #L15e2d8.  v1:= new `java.lang.StringBuilder`;
  #L15e2dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15e2e2.  v2:= "Unknown control opcode: " @kind object;
  #L15e2e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e2ec.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L15e2f0.  call temp:= `toHexString`(v2) @signature `Lokhttp3/internal/Util;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L15e2f6.  v2:= temp @kind object;
  #L15e2f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e2fe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e304.  v1:= temp @kind object;
  #L15e306.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e30c.  throw v0;
  #L15e30e.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L15e312.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L15e316.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L15e31c.  v1:= temp @kind object;
  #L15e31e.  call `onReadPong`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPong:(Lokio/ByteString;)V` @kind interface;
  #L15e324.  goto L15e3ac;
  #L15e326.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L15e32a.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L15e32e.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L15e334.  v1:= temp @kind object;
  #L15e336.  call `onReadPing`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPing:(Lokio/ByteString;)V` @kind interface;
  #L15e33c.  goto L15e3ac;
  #L15e33e.  v0:= 1005I;
  #L15e342.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L15e346.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L15e34c.  v4:= temp @kind wide;
  #L15e34e.  v6:= 1L;
  #L15e352.  v1:= lcmp(v4, v6);
  #L15e356.  if v1 == 0 then goto L15e3ae;
  #L15e35a.  v1:= lcmp(v4, v2);
  #L15e35e.  if v1 == 0 then goto L15e398;
  #L15e362.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L15e366.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L15e36c.  v0:= temp;
  #L15e36e.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L15e372.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L15e378.  v1:= temp @kind object;
  #L15e37a.  v2:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L15e37e.  call temp:= `closeCodeExceptionMessage`(v2, v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind virtual;
  #L15e384.  v2:= temp @kind object;
  #L15e386.  if v2 != 0 then goto L15e38c;
  #L15e38a.  goto L15e39c;
  #L15e38c.  v0:= new `java.net.ProtocolException`;
  #L15e390.  call `<init>`(v0, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e396.  throw v0;
  #L15e398.  v1:= "" @kind object;
  #L15e39c.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L15e3a0.  call `onReadClose`(v2, v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadClose:(ILjava/lang/String;)V` @kind interface;
  #L15e3a6.  v0:= 1I;
  #L15e3a8.  v8.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` := v0 @kind boolean;
  #L15e3ac.  return @kind void;
  #L15e3ae.  v0:= new `java.net.ProtocolException`;
  #L15e3b2.  v1:= "Malformed close payload length of 1." @kind object;
  #L15e3b6.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e3bc.  throw v0;
  #L15e3be.  
  #L15e3c0.  switch v0
                  | 8 => goto L15e33e
                  | 9 => goto L15e326
                  | 10 => goto L15e30e
                  | else => goto L15e2d4;
}
procedure `void` `b`(`okhttp3.internal.ws.WebSocketReader` v8 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L15e3e4.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` @kind boolean;
  #L15e3e8.  if v0 != 0 then goto L15e668;
  #L15e3ec.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e3f0.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L15e3f6.  v0:= temp @kind object;
  #L15e3f8.  call temp:= `timeoutNanos`(v0) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L15e3fe.  v0:= temp @kind wide;
  #L15e400.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e404.  call temp:= `timeout`(v2) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L15e40a.  v2:= temp @kind object;
  #L15e40c.  call temp:= `clearTimeout`(v2) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #L15e412.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e416.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L15e41c.  v2:= temp;
  #L15e41e.  v3:= 255I;
  #L15e422.  call temp:= `and`(v2, v3) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L15e428.  v2:= temp;
  #L15e42a.  v4:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e42e.  call temp:= `timeout`(v4) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L15e434.  v4:= temp @kind object;
  #L15e436.  v5:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L15e43a.  call temp:= `timeout`(v4, v0, v5) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L15e440.  v0:= v2 ^& 15;
  #L15e444.  v8.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int` := v0;
  #L15e448.  v1:= v2 ^& 128;
  #L15e44c.  v4:= 0I;
  #L15e44e.  v5:= 1I;
  #L15e450.  if v1 == 0 then goto L15e458;
  #L15e454.  v1:= 1I;
  #L15e456.  goto L15e45a;
  #L15e458.  v1:= 0I;
  #L15e45a.  v8.`okhttp3.internal.ws.WebSocketReader.d` @type ^`boolean` := v1 @kind boolean;
  #L15e45e.  v6:= v2 ^& 8;
  #L15e462.  if v6 == 0 then goto L15e46a;
  #L15e466.  v6:= 1I;
  #L15e468.  goto L15e46c;
  #L15e46a.  v6:= 0I;
  #L15e46c.  v8.`okhttp3.internal.ws.WebSocketReader.e` @type ^`boolean` := v6 @kind boolean;
  #L15e470.  if v6 == 0 then goto L15e48a;
  #L15e474.  if v1 == 0 then goto L15e47a;
  #L15e478.  goto L15e48a;
  #L15e47a.  v0:= new `java.net.ProtocolException`;
  #L15e47e.  v1:= "Control frames must be final." @kind object;
  #L15e482.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e488.  throw v0;
  #L15e48a.  v1:= v2 ^& 64;
  #L15e48e.  if v1 == 0 then goto L15e496;
  #L15e492.  v1:= 1I;
  #L15e494.  goto L15e498;
  #L15e496.  v1:= 0I;
  #L15e498.  v6:= "Unexpected rsv1 flag" @kind object;
  #L15e49c.  if v0 == v5 then goto L15e4b8;
  #L15e4a0.  v7:= 2I;
  #L15e4a2.  if v0 == v7 then goto L15e4b8;
  #L15e4a6.  if v1 != 0 then goto L15e4ac;
  #L15e4aa.  goto L15e4da;
  #L15e4ac.  v0:= new `java.net.ProtocolException`;
  #L15e4b0.  call `<init>`(v0, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e4b6.  throw v0;
  #L15e4b8.  if v1 == 0 then goto L15e4d4;
  #L15e4bc.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.o` @type ^`boolean` @kind boolean;
  #L15e4c0.  if v0 == 0 then goto L15e4c8;
  #L15e4c4.  v0:= 1I;
  #L15e4c6.  goto L15e4d6;
  #L15e4c8.  v0:= new `java.net.ProtocolException`;
  #L15e4cc.  call `<init>`(v0, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e4d2.  throw v0;
  #L15e4d4.  v0:= 0I;
  #L15e4d6.  v8.`okhttp3.internal.ws.WebSocketReader.f` @type ^`boolean` := v0 @kind boolean;
  #L15e4da.  v0:= v2 ^& 32;
  #L15e4de.  if v0 == 0 then goto L15e4e6;
  #L15e4e2.  v0:= 1I;
  #L15e4e4.  goto L15e4e8;
  #L15e4e6.  v0:= 0I;
  #L15e4e8.  if v0 != 0 then goto L15e63e;
  #L15e4ec.  v0:= v2 ^& 16;
  #L15e4f0.  if v0 == 0 then goto L15e4f8;
  #L15e4f4.  v0:= 1I;
  #L15e4f6.  goto L15e4fa;
  #L15e4f8.  v0:= 0I;
  #L15e4fa.  if v0 != 0 then goto L15e62e;
  #L15e4fe.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e502.  call temp:= `readByte`(v0) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L15e508.  v0:= temp;
  #L15e50a.  call temp:= `and`(v0, v3) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L15e510.  v0:= temp;
  #L15e512.  v1:= v0 ^& 128;
  #L15e516.  if v1 == 0 then goto L15e51c;
  #L15e51a.  v4:= 1I;
  #L15e51c.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` @kind boolean;
  #L15e520.  if v4 != v1 then goto L15e542;
  #L15e524.  v0:= new `java.net.ProtocolException`;
  #L15e528.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` @kind boolean;
  #L15e52c.  if v1 == 0 then goto L15e536;
  #L15e530.  v1:= "Server-sent frames must not be masked." @kind object;
  #L15e534.  goto L15e53a;
  #L15e536.  v1:= "Client-sent frames must be masked." @kind object;
  #L15e53a.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e540.  throw v0;
  #L15e542.  v1:= 127I;
  #L15e546.  v0:= v0 ^& v1 @kind int;
  #L15e548.  v2:= (`long`) v0 @kind i2l;
  #L15e54a.  v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` := v2 @kind wide;
  #L15e54e.  v0:= 126I;
  #L15e552.  v5:= (`long`) v0 @kind i2l;
  #L15e554.  v0:= lcmp(v2, v5);
  #L15e558.  if v0 != 0 then goto L15e57e;
  #L15e55c.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e560.  call temp:= `readShort`(v0) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L15e566.  v0:= temp;
  #L15e568.  v1:= 65535I;
  #L15e56e.  call temp:= `and`(v0, v1) @signature `Lokhttp3/internal/Util;.and:(SI)I` @kind static;
  #L15e574.  v0:= temp;
  #L15e576.  v0:= (`long`) v0 @kind i2l;
  #L15e578.  v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` := v0 @kind wide;
  #L15e57c.  goto L15e5ea;
  #L15e57e.  v0:= (`long`) v1 @kind i2l;
  #L15e580.  v5:= lcmp(v2, v0);
  #L15e584.  if v5 != 0 then goto L15e5ea;
  #L15e588.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e58c.  call temp:= `readLong`(v0) @signature `Lokio/BufferedSource;.readLong:()J` @kind interface;
  #L15e592.  v0:= temp @kind wide;
  #L15e594.  v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` := v0 @kind wide;
  #L15e598.  v2:= 0L;
  #L15e59c.  v5:= lcmp(v0, v2);
  #L15e5a0.  if v5 < 0 then goto L15e5a6;
  #L15e5a4.  goto L15e5ea;
  #L15e5a6.  v0:= new `java.net.ProtocolException`;
  #L15e5aa.  v1:= new `java.lang.StringBuilder`;
  #L15e5ae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15e5b4.  v2:= "Frame length 0x" @kind object;
  #L15e5b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e5be.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` @kind wide;
  #L15e5c2.  call temp:= `toHexString`(v2) @signature `Lokhttp3/internal/Util;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L15e5c8.  v2:= temp @kind object;
  #L15e5ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e5d0.  v2:= " > 0x7FFFFFFFFFFFFFFF" @kind object;
  #L15e5d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e5da.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e5e0.  v1:= temp @kind object;
  #L15e5e2.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e5e8.  throw v0;
  #L15e5ea.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.e` @type ^`boolean` @kind boolean;
  #L15e5ee.  if v0 == 0 then goto L15e614;
  #L15e5f2.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` @kind wide;
  #L15e5f6.  v2:= 125L;
  #L15e5fa.  v5:= lcmp(v0, v2);
  #L15e5fe.  if v5 > 0 then goto L15e604;
  #L15e602.  goto L15e614;
  #L15e604.  v0:= new `java.net.ProtocolException`;
  #L15e608.  v1:= "Control frame must be less than 125B." @kind object;
  #L15e60c.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e612.  throw v0;
  #L15e614.  if v4 == 0 then goto L15e62c;
  #L15e618.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e61c.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.j` @type ^`byte`[] @kind object;
  #L15e620.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15e626.  call `readFully`(v0, v1) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L15e62c.  return @kind void;
  #L15e62e.  v0:= new `java.net.ProtocolException`;
  #L15e632.  v1:= "Unexpected rsv3 flag" @kind object;
  #L15e636.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e63c.  throw v0;
  #L15e63e.  v0:= new `java.net.ProtocolException`;
  #L15e642.  v1:= "Unexpected rsv2 flag" @kind object;
  #L15e646.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e64c.  throw v0;
  #L15e64e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15e650.  v3:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e654.  call temp:= `timeout`(v3) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L15e65a.  v3:= temp @kind object;
  #L15e65c.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L15e660.  call temp:= `timeout`(v3, v0, v4) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L15e666.  throw v2;
  #L15e668.  v0:= new `java.io.IOException`;
  #L15e66c.  v1:= "closed" @kind object;
  #L15e670.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e676.  throw v0;
  catch `java.lang.Throwable` @[L15e412..L15e42a] goto L15e64e;
}
procedure `void` `c`(`okhttp3.internal.ws.WebSocketReader` v5 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.c:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15e694.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` @kind boolean;
  #L15e698.  if v0 != 0 then goto L15e768;
  #L15e69c.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` @kind wide;
  #L15e6a0.  v2:= 0L;
  #L15e6a4.  v4:= lcmp(v0, v2);
  #L15e6a8.  if v4 <= 0 then goto L15e714;
  #L15e6ac.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e6b0.  v3:= v5.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L15e6b4.  call `readFully`(v2, v3, v0) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L15e6ba.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` @kind boolean;
  #L15e6be.  if v0 != 0 then goto L15e714;
  #L15e6c2.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L15e6c6.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15e6ca.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15e6d0.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L15e6d6.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15e6da.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L15e6de.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L15e6e4.  v1:= temp @kind wide;
  #L15e6e6.  v3:= v5.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` @kind wide;
  #L15e6ea.  v1:= v1 - v3 @kind long;
  #L15e6ec.  call temp:= `seek`(v0, v1) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L15e6f2.  v0:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L15e6f6.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15e6fa.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.j` @type ^`byte`[] @kind object;
  #L15e6fe.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15e704.  call `toggleMask`(v0, v1, v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind virtual;
  #L15e70a.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15e70e.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L15e714.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.d` @type ^`boolean` @kind boolean;
  #L15e718.  if v0 == 0 then goto L15e71e;
  #L15e71c.  return @kind void;
  #L15e71e.  call `e`(v5) @signature `Lokhttp3/internal/ws/WebSocketReader;.e:()V` @kind direct;
  #L15e724.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L15e728.  if v0 != 0 then goto L15e72e;
  #L15e72c.  goto L15e694;
  #L15e72e.  v0:= new `java.net.ProtocolException`;
  #L15e732.  v1:= new `java.lang.StringBuilder`;
  #L15e736.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15e73c.  v2:= "Expected continuation opcode. Got: " @kind object;
  #L15e740.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e746.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L15e74a.  call temp:= `toHexString`(v2) @signature `Lokhttp3/internal/Util;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L15e750.  v2:= temp @kind object;
  #L15e752.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e758.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e75e.  v1:= temp @kind object;
  #L15e760.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e766.  throw v0;
  #L15e768.  v0:= new `java.io.IOException`;
  #L15e76c.  v1:= "closed" @kind object;
  #L15e770.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e776.  throw v0;
}
procedure `void` `d`(`okhttp3.internal.ws.WebSocketReader` v4 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.d:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15e788.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L15e78c.  v1:= 1I;
  #L15e78e.  if v0 == v1 then goto L15e7d0;
  #L15e792.  v2:= 2I;
  #L15e794.  if v0 != v2 then goto L15e79a;
  #L15e798.  goto L15e7d0;
  #L15e79a.  v1:= new `java.net.ProtocolException`;
  #L15e79e.  v2:= new `java.lang.StringBuilder`;
  #L15e7a2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15e7a8.  v3:= "Unknown opcode: " @kind object;
  #L15e7ac.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e7b2.  call temp:= `toHexString`(v0) @signature `Lokhttp3/internal/Util;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L15e7b8.  v0:= temp @kind object;
  #L15e7ba.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e7c0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e7c6.  v0:= temp @kind object;
  #L15e7c8.  call `<init>`(v1, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e7ce.  throw v1;
  #L15e7d0.  call `c`(v4) @signature `Lokhttp3/internal/ws/WebSocketReader;.c:()V` @kind direct;
  #L15e7d6.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.f` @type ^`boolean` @kind boolean;
  #L15e7da.  if v2 == 0 then goto L15e804;
  #L15e7de.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.i` @type ^`okhttp3.internal.ws.MessageInflater` @kind object;
  #L15e7e2.  if v2 == 0 then goto L15e7e8;
  #L15e7e6.  goto L15e7fa;
  #L15e7e8.  v2:= new `okhttp3.internal.ws.MessageInflater`;
  #L15e7ec.  v3:= v4.`okhttp3.internal.ws.WebSocketReader.p` @type ^`boolean` @kind boolean;
  #L15e7f0.  call `<init>`(v2, v3) @signature `Lokhttp3/internal/ws/MessageInflater;.<init>:(Z)V` @kind direct;
  #L15e7f6.  v4.`okhttp3.internal.ws.WebSocketReader.i` @type ^`okhttp3.internal.ws.MessageInflater` := v2 @kind object;
  #L15e7fa.  v3:= v4.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L15e7fe.  call `inflate`(v2, v3) @signature `Lokhttp3/internal/ws/MessageInflater;.inflate:(Lokio/Buffer;)V` @kind virtual;
  #L15e804.  if v0 != v1 then goto L15e820;
  #L15e808.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L15e80c.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L15e810.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L15e816.  v1:= temp @kind object;
  #L15e818.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Ljava/lang/String;)V` @kind interface;
  #L15e81e.  goto L15e836;
  #L15e820.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L15e824.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L15e828.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L15e82e.  v1:= temp @kind object;
  #L15e830.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Lokio/ByteString;)V` @kind interface;
  #L15e836.  return @kind void;
}
procedure `void` `e`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.e:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L15e848.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` @kind boolean;
  #L15e84c.  if v0 != 0 then goto L15e868;
  #L15e850.  call `b`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.b:()V` @kind direct;
  #L15e856.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.e` @type ^`boolean` @kind boolean;
  #L15e85a.  if v0 != 0 then goto L15e860;
  #L15e85e.  goto L15e868;
  #L15e860.  call `a`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.a:()V` @kind direct;
  #L15e866.  goto L15e848;
  #L15e868.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15e214.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.i` @type ^`okhttp3.internal.ws.MessageInflater` @kind object;
  #L15e218.  if v0 == 0 then goto L15e222;
  #L15e21c.  call `close`(v0) @signature `Lokhttp3/internal/ws/MessageInflater;.close:()V` @kind virtual;
  #L15e222.  return @kind void;
}
procedure `okio.BufferedSource` `getSource`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.getSource:()Lokio/BufferedSource;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15e178.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L15e17c.  return v0 @kind object;
}
procedure `void` `processNextFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15e234.  call `b`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.b:()V` @kind direct;
  #L15e23a.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.e` @type ^`boolean` @kind boolean;
  #L15e23e.  if v0 == 0 then goto L15e24a;
  #L15e242.  call `a`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.a:()V` @kind direct;
  #L15e248.  goto L15e250;
  #L15e24a.  call `d`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.d:()V` @kind direct;
  #L15e250.  return @kind void;
}
