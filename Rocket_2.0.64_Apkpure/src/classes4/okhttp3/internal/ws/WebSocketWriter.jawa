record `okhttp3.internal.ws.WebSocketWriter` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.a` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.c` @AccessFlag PRIVATE;
  `okhttp3.internal.ws.MessageDeflater` `okhttp3.internal.ws.WebSocketWriter.d` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.ws.WebSocketWriter.e` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketWriter.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.g` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSink` `okhttp3.internal.ws.WebSocketWriter.h` @AccessFlag PRIVATE_FINAL;
  `java.util.Random` `okhttp3.internal.ws.WebSocketWriter.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.j` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.k` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.ws.WebSocketWriter.l` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `boolean` v2 , `okio.BufferedSink` v3 @kind object, `java.util.Random` v4 @kind object, `boolean` v5 , `boolean` v6 , `long` v7 ) @signature `Lokhttp3/internal/ws/WebSocketWriter;.<init>:(ZLokio/BufferedSink;Ljava/util/Random;ZZJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15e8ac.  v0:= "sink" @kind object;
  #L15e8b0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15e8b6.  v0:= "random" @kind object;
  #L15e8ba.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15e8c0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e8c6.  v1.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`boolean` := v2 @kind boolean;
  #L15e8ca.  v1.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`okio.BufferedSink` := v3 @kind object;
  #L15e8ce.  v1.`okhttp3.internal.ws.WebSocketWriter.i` @type ^`java.util.Random` := v4 @kind object;
  #L15e8d2.  v1.`okhttp3.internal.ws.WebSocketWriter.j` @type ^`boolean` := v5 @kind boolean;
  #L15e8d6.  v1.`okhttp3.internal.ws.WebSocketWriter.k` @type ^`boolean` := v6 @kind boolean;
  #L15e8da.  v1.`okhttp3.internal.ws.WebSocketWriter.l` @type ^`long` := v7 @kind wide;
  #L15e8de.  v4:= new `okio.Buffer`;
  #L15e8e2.  call `<init>`(v4) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L15e8e8.  v1.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` := v4 @kind object;
  #L15e8ec.  call temp:= `getBuffer`(v3) @signature `Lokio/BufferedSink;.getBuffer:()Lokio/Buffer;` @kind interface;
  #L15e8f2.  v3:= temp @kind object;
  #L15e8f4.  v1.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` := v3 @kind object;
  #L15e8f8.  v3:= 0I;
  #L15e8fa.  if v2 == 0 then goto L15e906;
  #L15e8fe.  v4:= 4I;
  #L15e900.  v4:= new `byte`[v4];
  #L15e904.  goto L15e908;
  #L15e906.  v4:= v3 @kind object;
  #L15e908.  v1.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] := v4 @kind object;
  #L15e90c.  if v2 == 0 then goto L15e91a;
  #L15e910.  v3:= new `okio.Buffer$UnsafeCursor`;
  #L15e914.  call `<init>`(v3) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L15e91a.  v1.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` := v3 @kind object;
  #L15e91e.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.ws.WebSocketWriter` v6 @kind this, `int` v7 , `okio.ByteString` v8 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.a:(ILokio/ByteString;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15e9c4.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`boolean` @kind boolean;
  #L15e9c8.  if v0 != 0 then goto L15eac0;
  #L15e9cc.  call temp:= `size`(v8) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L15e9d2.  v0:= temp;
  #L15e9d4.  v1:= (`long`) v0 @kind i2l;
  #L15e9d6.  v3:= 125L;
  #L15e9da.  v5:= lcmp(v1, v3);
  #L15e9de.  if v5 > 0 then goto L15e9e6;
  #L15e9e2.  v1:= 1I;
  #L15e9e4.  goto L15e9e8;
  #L15e9e6.  v1:= 0I;
  #L15e9e8.  if v1 == 0 then goto L15eaa8;
  #L15e9ec.  v7:= v7 ^| 128;
  #L15e9f0.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15e9f4.  call temp:= `writeByte`(v1, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L15e9fa.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`boolean` @kind boolean;
  #L15e9fe.  if v7 == 0 then goto L15ea88;
  #L15ea02.  v7:= v0 ^| 128;
  #L15ea06.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ea0a.  call temp:= `writeByte`(v1, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L15ea10.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.i` @type ^`java.util.Random` @kind object;
  #L15ea14.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L15ea18.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15ea1e.  call `nextBytes`(v7, v1) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L15ea24.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ea28.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L15ea2c.  call temp:= `write`(v7, v1) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L15ea32.  if v0 <= 0 then goto L15ea9c;
  #L15ea36.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ea3a.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L15ea40.  v0:= temp @kind wide;
  #L15ea42.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ea46.  call temp:= `write`(v7, v8) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L15ea4c.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ea50.  v8:= v6.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15ea54.  call `checkNotNull`(v8) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15ea5a.  call temp:= `readAndWriteUnsafe`(v7, v8) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L15ea60.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15ea64.  call temp:= `seek`(v7, v0) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L15ea6a.  v7:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L15ea6e.  v8:= v6.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15ea72.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L15ea76.  call `toggleMask`(v7, v8, v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind virtual;
  #L15ea7c.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15ea80.  call `close`(v7) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L15ea86.  goto L15ea9c;
  #L15ea88.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ea8c.  call temp:= `writeByte`(v7, v0) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L15ea92.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ea96.  call temp:= `write`(v7, v8) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L15ea9c.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`okio.BufferedSink` @kind object;
  #L15eaa0.  call `flush`(v7) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L15eaa6.  return @kind void;
  #L15eaa8.  v7:= new `java.lang.IllegalArgumentException`;
  #L15eaac.  v8:= "Payload size must be less than or equal to 125" @kind object;
  #L15eab0.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15eab6.  v8:= temp @kind object;
  #L15eab8.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15eabe.  throw v7;
  #L15eac0.  v7:= new `java.io.IOException`;
  #L15eac4.  v8:= "closed" @kind object;
  #L15eac8.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15eace.  throw v7;
}
procedure `void` `close`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15e930.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okhttp3.internal.ws.MessageDeflater` @kind object;
  #L15e934.  if v0 == 0 then goto L15e93e;
  #L15e938.  call `close`(v0) @signature `Lokhttp3/internal/ws/MessageDeflater;.close:()V` @kind virtual;
  #L15e93e.  return @kind void;
}
procedure `java.util.Random` `getRandom`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter;.getRandom:()Ljava/util/Random;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15e87c.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.i` @type ^`java.util.Random` @kind object;
  #L15e880.  return v0 @kind object;
}
procedure `okio.BufferedSink` `getSink`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter;.getSink:()Lokio/BufferedSink;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15e894.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`okio.BufferedSink` @kind object;
  #L15e898.  return v0 @kind object;
}
procedure `void` `writeClose`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `int` v2 , `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeClose:(ILokio/ByteString;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15e950.  v0:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L15e954.  if v2 != 0 then goto L15e95c;
  #L15e958.  if v3 == 0 then goto L15e98c;
  #L15e95c.  if v2 == 0 then goto L15e96a;
  #L15e960.  v0:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L15e964.  call `validateCloseCode`(v0, v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @kind virtual;
  #L15e96a.  v0:= new `okio.Buffer`;
  #L15e96e.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L15e974.  call temp:= `writeShort`(v0, v2) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L15e97a.  if v3 == 0 then goto L15e984;
  #L15e97e.  call temp:= `write`(v0, v3) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L15e984.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L15e98a.  v0:= temp @kind object;
  #L15e98c.  v2:= 8I;
  #L15e990.  v3:= 1I;
  #L15e992.  call `a`(v1, v2, v0) @signature `Lokhttp3/internal/ws/WebSocketWriter;.a:(ILokio/ByteString;)V` @kind direct;
  #L15e998.  v1.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`boolean` := v3 @kind boolean;
  #L15e99c.  return @kind void;
  #L15e99e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15e9a0.  v1.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`boolean` := v3 @kind boolean;
  #L15e9a4.  throw v2;
  catch `java.lang.Throwable` @[L15e992..L15e998] goto L15e99e;
}
procedure `void` `writeMessageFrame`(`okhttp3.internal.ws.WebSocketWriter` v5 @kind this, `int` v6 , `okio.ByteString` v7 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(ILokio/ByteString;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15eae0.  v0:= "data" @kind object;
  #L15eae4.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15eaea.  v0:= v5.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`boolean` @kind boolean;
  #L15eaee.  if v0 != 0 then goto L15ec56;
  #L15eaf2.  v0:= v5.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` @kind object;
  #L15eaf6.  call temp:= `write`(v0, v7) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L15eafc.  v0:= 128I;
  #L15eb00.  v6:= v6 ^| v0 @kind int;
  #L15eb02.  v1:= v5.`okhttp3.internal.ws.WebSocketWriter.j` @type ^`boolean` @kind boolean;
  #L15eb06.  if v1 == 0 then goto L15eb4a;
  #L15eb0a.  call temp:= `size`(v7) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L15eb10.  v7:= temp;
  #L15eb12.  v1:= (`long`) v7 @kind i2l;
  #L15eb14.  v3:= v5.`okhttp3.internal.ws.WebSocketWriter.l` @type ^`long` @kind wide;
  #L15eb18.  v7:= lcmp(v1, v3);
  #L15eb1c.  if v7 < 0 then goto L15eb4a;
  #L15eb20.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okhttp3.internal.ws.MessageDeflater` @kind object;
  #L15eb24.  if v7 == 0 then goto L15eb2a;
  #L15eb28.  goto L15eb3c;
  #L15eb2a.  v7:= new `okhttp3.internal.ws.MessageDeflater`;
  #L15eb2e.  v1:= v5.`okhttp3.internal.ws.WebSocketWriter.k` @type ^`boolean` @kind boolean;
  #L15eb32.  call `<init>`(v7, v1) @signature `Lokhttp3/internal/ws/MessageDeflater;.<init>:(Z)V` @kind direct;
  #L15eb38.  v5.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okhttp3.internal.ws.MessageDeflater` := v7 @kind object;
  #L15eb3c.  v1:= v5.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` @kind object;
  #L15eb40.  call `deflate`(v7, v1) @signature `Lokhttp3/internal/ws/MessageDeflater;.deflate:(Lokio/Buffer;)V` @kind virtual;
  #L15eb46.  v6:= v6 ^| 64;
  #L15eb4a.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` @kind object;
  #L15eb4e.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L15eb54.  v1:= temp @kind wide;
  #L15eb56.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15eb5a.  call temp:= `writeByte`(v7, v6) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L15eb60.  v6:= 0I;
  #L15eb62.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`boolean` @kind boolean;
  #L15eb66.  if v7 == 0 then goto L15eb6c;
  #L15eb6a.  goto L15eb6e;
  #L15eb6c.  v0:= 0I;
  #L15eb6e.  v6:= 125L;
  #L15eb72.  v3:= lcmp(v1, v6);
  #L15eb76.  if v3 > 0 then goto L15eb8a;
  #L15eb7a.  v6:= (`int`) v1 @kind l2i;
  #L15eb7c.  v6:= v6 ^| v0 @kind int;
  #L15eb7e.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15eb82.  call temp:= `writeByte`(v7, v6) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L15eb88.  goto L15ebcc;
  #L15eb8a.  v6:= 65535L;
  #L15eb90.  v3:= lcmp(v1, v6);
  #L15eb94.  if v3 > 0 then goto L15ebb4;
  #L15eb98.  v6:= v0 ^| 126;
  #L15eb9c.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15eba0.  call temp:= `writeByte`(v7, v6) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L15eba6.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ebaa.  v7:= (`int`) v1 @kind l2i;
  #L15ebac.  call temp:= `writeShort`(v6, v7) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L15ebb2.  goto L15ebcc;
  #L15ebb4.  v6:= v0 ^| 127;
  #L15ebb8.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ebbc.  call temp:= `writeByte`(v7, v6) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L15ebc2.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ebc6.  call temp:= `writeLong`(v6, v1) @signature `Lokio/Buffer;.writeLong:(J)Lokio/Buffer;` @kind virtual;
  #L15ebcc.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`boolean` @kind boolean;
  #L15ebd0.  if v6 == 0 then goto L15ec3c;
  #L15ebd4.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.i` @type ^`java.util.Random` @kind object;
  #L15ebd8.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L15ebdc.  call `checkNotNull`(v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15ebe2.  call `nextBytes`(v6, v7) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L15ebe8.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ebec.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L15ebf0.  call temp:= `write`(v6, v7) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L15ebf6.  v6:= 0L;
  #L15ebfa.  v0:= lcmp(v1, v6);
  #L15ebfe.  if v0 <= 0 then goto L15ec3c;
  #L15ec02.  v0:= v5.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` @kind object;
  #L15ec06.  v3:= v5.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15ec0a.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15ec10.  call temp:= `readAndWriteUnsafe`(v0, v3) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L15ec16.  v0:= v5.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15ec1a.  call temp:= `seek`(v0, v6) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L15ec20.  v6:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L15ec24.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15ec28.  v0:= v5.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L15ec2c.  call `toggleMask`(v6, v7, v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind virtual;
  #L15ec32.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L15ec36.  call `close`(v6) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L15ec3c.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L15ec40.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` @kind object;
  #L15ec44.  call `write`(v6, v7, v1) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L15ec4a.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`okio.BufferedSink` @kind object;
  #L15ec4e.  call temp:= `emit`(v6) @signature `Lokio/BufferedSink;.emit:()Lokio/BufferedSink;` @kind interface;
  #L15ec54.  return @kind void;
  #L15ec56.  v6:= new `java.io.IOException`;
  #L15ec5a.  v7:= "closed" @kind object;
  #L15ec5e.  call `<init>`(v6, v7) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15ec64.  throw v6;
}
procedure `void` `writePing`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePing:(Lokio/ByteString;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15ec78.  v0:= "payload" @kind object;
  #L15ec7c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15ec82.  v0:= 9I;
  #L15ec86.  call `a`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.a:(ILokio/ByteString;)V` @kind direct;
  #L15ec8c.  return @kind void;
}
procedure `void` `writePong`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePong:(Lokio/ByteString;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15eca0.  v0:= "payload" @kind object;
  #L15eca4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15ecaa.  v0:= 10I;
  #L15ecae.  call `a`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.a:(ILokio/ByteString;)V` @kind direct;
  #L15ecb4.  return @kind void;
}
