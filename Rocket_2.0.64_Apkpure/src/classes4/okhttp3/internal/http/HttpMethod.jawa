record `okhttp3.internal.http.HttpMethod` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okhttp3.internal.http.HttpMethod` `@@okhttp3.internal.http.HttpMethod.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http/HttpMethod;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L14b9b0.  v0:= new `okhttp3.internal.http.HttpMethod`;
  #L14b9b4.  call `<init>`(v0) @signature `Lokhttp3/internal/http/HttpMethod;.<init>:()V` @kind direct;
  #L14b9ba.  `@@okhttp3.internal.http.HttpMethod.INSTANCE` @type ^`okhttp3.internal.http.HttpMethod` := v0 @kind object;
  #L14b9be.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.HttpMethod` v0 @kind this) @signature `Lokhttp3/internal/http/HttpMethod;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L14b9d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14b9d6.  return @kind void;
}
procedure `boolean` `permitsRequestBody`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14b8a4.  v0:= "method" @kind object;
  #L14b8a8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14b8ae.  v0:= "GET" @kind object;
  #L14b8b2.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b8b8.  v0:= temp;
  #L14b8ba.  if v0 != 0 then goto L14b8d2;
  #L14b8be.  v0:= "HEAD" @kind object;
  #L14b8c2.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b8c8.  v1:= temp;
  #L14b8ca.  if v1 != 0 then goto L14b8d2;
  #L14b8ce.  v1:= 1I;
  #L14b8d0.  goto L14b8d4;
  #L14b8d2.  v1:= 0I;
  #L14b8d4.  return v1;
}
procedure `boolean` `requiresRequestBody`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14b93c.  v0:= "method" @kind object;
  #L14b940.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14b946.  v0:= "POST" @kind object;
  #L14b94a.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b950.  v0:= temp;
  #L14b952.  if v0 != 0 then goto L14b99c;
  #L14b956.  v0:= "PUT" @kind object;
  #L14b95a.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b960.  v0:= temp;
  #L14b962.  if v0 != 0 then goto L14b99c;
  #L14b966.  v0:= "PATCH" @kind object;
  #L14b96a.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b970.  v0:= temp;
  #L14b972.  if v0 != 0 then goto L14b99c;
  #L14b976.  v0:= "PROPPATCH" @kind object;
  #L14b97a.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b980.  v0:= temp;
  #L14b982.  if v0 != 0 then goto L14b99c;
  #L14b986.  v0:= "REPORT" @kind object;
  #L14b98a.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b990.  v1:= temp;
  #L14b992.  if v1 == 0 then goto L14b998;
  #L14b996.  goto L14b99c;
  #L14b998.  v1:= 0I;
  #L14b99a.  goto L14b99e;
  #L14b99c.  v1:= 1I;
  #L14b99e.  return v1;
}
procedure `boolean` `invalidatesCache`(`okhttp3.internal.http.HttpMethod` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14b830.  v0:= "method" @kind object;
  #L14b834.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14b83a.  v0:= "POST" @kind object;
  #L14b83e.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b844.  v0:= temp;
  #L14b846.  if v0 != 0 then goto L14b890;
  #L14b84a.  v0:= "PATCH" @kind object;
  #L14b84e.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b854.  v0:= temp;
  #L14b856.  if v0 != 0 then goto L14b890;
  #L14b85a.  v0:= "PUT" @kind object;
  #L14b85e.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b864.  v0:= temp;
  #L14b866.  if v0 != 0 then goto L14b890;
  #L14b86a.  v0:= "DELETE" @kind object;
  #L14b86e.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b874.  v0:= temp;
  #L14b876.  if v0 != 0 then goto L14b890;
  #L14b87a.  v0:= "MOVE" @kind object;
  #L14b87e.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b884.  v2:= temp;
  #L14b886.  if v2 == 0 then goto L14b88c;
  #L14b88a.  goto L14b890;
  #L14b88c.  v2:= 0I;
  #L14b88e.  goto L14b892;
  #L14b890.  v2:= 1I;
  #L14b892.  return v2;
}
procedure `boolean` `redirectsToGet`(`okhttp3.internal.http.HttpMethod` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsToGet:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14b8e8.  v0:= "method" @kind object;
  #L14b8ec.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14b8f2.  v0:= "PROPFIND" @kind object;
  #L14b8f6.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b8fc.  v2:= temp;
  #L14b8fe.  v2:= v2 ^~ 1;
  #L14b902.  return v2;
}
procedure `boolean` `redirectsWithBody`(`okhttp3.internal.http.HttpMethod` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsWithBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14b914.  v0:= "method" @kind object;
  #L14b918.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14b91e.  v0:= "PROPFIND" @kind object;
  #L14b922.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14b928.  v2:= temp;
  #L14b92a.  return v2;
}
