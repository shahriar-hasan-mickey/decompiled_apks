record `okhttp3.internal.http.RequestLine` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okhttp3.internal.http.RequestLine` `@@okhttp3.internal.http.RequestLine.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http/RequestLine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L14c1a0.  v0:= new `okhttp3.internal.http.RequestLine`;
  #L14c1a4.  call `<init>`(v0) @signature `Lokhttp3/internal/http/RequestLine;.<init>:()V` @kind direct;
  #L14c1aa.  `@@okhttp3.internal.http.RequestLine.INSTANCE` @type ^`okhttp3.internal.http.RequestLine` := v0 @kind object;
  #L14c1ae.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.RequestLine` v0 @kind this) @signature `Lokhttp3/internal/http/RequestLine;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L14c1c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14c1c6.  return @kind void;
}
procedure `boolean` `a`(`okhttp3.internal.http.RequestLine` v0 @kind this, `okhttp3.Request` v1 @kind object, `java.net.Proxy$Type` v2 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.a:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_FINAL {
    temp;

  #L14c080.  call temp:= `isHttps`(v1) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L14c086.  v1:= temp;
  #L14c088.  if v1 != 0 then goto L14c098;
  #L14c08c.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L14c090.  if v2 != v1 then goto L14c098;
  #L14c094.  v1:= 1I;
  #L14c096.  goto L14c09a;
  #L14c098.  v1:= 0I;
  #L14c09a.  return v1;
}
procedure `java.lang.String` `get`(`okhttp3.internal.http.RequestLine` v2 @kind this, `okhttp3.Request` v3 @kind object, `java.net.Proxy$Type` v4 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.get:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L14c0ac.  v0:= "request" @kind object;
  #L14c0b0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14c0b6.  v0:= "proxyType" @kind object;
  #L14c0ba.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14c0c0.  v0:= new `java.lang.StringBuilder`;
  #L14c0c4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14c0ca.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L14c0d0.  v1:= temp @kind object;
  #L14c0d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c0d8.  v1:= 32I;
  #L14c0dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c0e2.  v1:= `@@okhttp3.internal.http.RequestLine.INSTANCE` @type ^`okhttp3.internal.http.RequestLine` @kind object;
  #L14c0e6.  call temp:= `a`(v1, v3, v4) @signature `Lokhttp3/internal/http/RequestLine;.a:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Z` @kind direct;
  #L14c0ec.  v4:= temp;
  #L14c0ee.  if v4 == 0 then goto L14c102;
  #L14c0f2.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14c0f8.  v3:= temp @kind object;
  #L14c0fa.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c100.  goto L14c118;
  #L14c102.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14c108.  v3:= temp @kind object;
  #L14c10a.  call temp:= `requestPath`(v1, v3) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L14c110.  v3:= temp @kind object;
  #L14c112.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c118.  v3:= " HTTP/1.1" @kind object;
  #L14c11c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c122.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14c128.  v3:= temp @kind object;
  #L14c12a.  v4:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L14c12e.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14c134.  return v3 @kind object;
}
procedure `java.lang.String` `requestPath`(`okhttp3.internal.http.RequestLine` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L14c148.  v0:= "url" @kind object;
  #L14c14c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14c152.  call temp:= `encodedPath`(v3) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L14c158.  v0:= temp @kind object;
  #L14c15a.  call temp:= `encodedQuery`(v3) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L14c160.  v3:= temp @kind object;
  #L14c162.  if v3 == 0 then goto L14c18e;
  #L14c166.  v1:= new `java.lang.StringBuilder`;
  #L14c16a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14c170.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c176.  v0:= 63I;
  #L14c17a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c180.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c186.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14c18c.  v0:= temp @kind object;
  #L14c18e.  return v0 @kind object;
}
