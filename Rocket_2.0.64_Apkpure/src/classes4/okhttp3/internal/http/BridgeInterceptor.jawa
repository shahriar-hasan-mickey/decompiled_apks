record `okhttp3.internal.http.BridgeInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.CookieJar` `okhttp3.internal.http.BridgeInterceptor.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.BridgeInterceptor` v1 @kind this, `okhttp3.CookieJar` v2 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.<init>:(Lokhttp3/CookieJar;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14ad28.  v0:= "cookieJar" @kind object;
  #L14ad2c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14ad32.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14ad38.  v1.`okhttp3.internal.http.BridgeInterceptor.a` @type ^`okhttp3.CookieJar` := v2 @kind object;
  #L14ad3c.  return @kind void;
}
procedure `java.lang.String` `a`(`okhttp3.internal.http.BridgeInterceptor` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.a:(Ljava/util/List;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14aa60.  v0:= new `java.lang.StringBuilder`;
  #L14aa64.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14aa6a.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L14aa70.  v5:= temp @kind object;
  #L14aa72.  v1:= 0I;
  #L14aa74.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L14aa7a.  v2:= temp;
  #L14aa7c.  if v2 == 0 then goto L14aad2;
  #L14aa80.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L14aa86.  v2:= temp @kind object;
  #L14aa88.  v3:= v1 + 1;
  #L14aa8c.  if v1 >= 0 then goto L14aa96;
  #L14aa90.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L14aa96.  v2:= (`okhttp3.Cookie`) v2 @kind object;
  #L14aa9a.  if v1 <= 0 then goto L14aaa8;
  #L14aa9e.  v1:= "; " @kind object;
  #L14aaa2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14aaa8.  call temp:= `name`(v2) @signature `Lokhttp3/Cookie;.name:()Ljava/lang/String;` @kind virtual;
  #L14aaae.  v1:= temp @kind object;
  #L14aab0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14aab6.  v1:= 61I;
  #L14aaba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14aac0.  call temp:= `value`(v2) @signature `Lokhttp3/Cookie;.value:()Ljava/lang/String;` @kind virtual;
  #L14aac6.  v1:= temp @kind object;
  #L14aac8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14aace.  v1:= v3;
  #L14aad0.  goto L14aa74;
  #L14aad2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14aad8.  v5:= temp @kind object;
  #L14aada.  v0:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L14aade.  call `checkNotNullExpressionValue`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14aae4.  return v5 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.BridgeInterceptor` v12 @kind this, `okhttp3.Interceptor$Chain` v13 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L14aaf8.  v0:= "chain" @kind object;
  #L14aafc.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14ab02.  call temp:= `request`(v13) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L14ab08.  v0:= temp @kind object;
  #L14ab0a.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L14ab10.  v1:= temp @kind object;
  #L14ab12.  call temp:= `body`(v0) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L14ab18.  v2:= temp @kind object;
  #L14ab1a.  v3:= "Content-Type" @kind object;
  #L14ab1e.  v4:= -1L;
  #L14ab22.  v6:= "Content-Length" @kind object;
  #L14ab26.  if v2 == 0 then goto L14ab7e;
  #L14ab2a.  call temp:= `contentType`(v2) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L14ab30.  v7:= temp @kind object;
  #L14ab32.  if v7 == 0 then goto L14ab44;
  #L14ab36.  call temp:= `toString`(v7) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L14ab3c.  v7:= temp @kind object;
  #L14ab3e.  call temp:= `header`(v1, v3, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14ab44.  call temp:= `contentLength`(v2) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L14ab4a.  v7:= temp @kind wide;
  #L14ab4c.  v2:= "Transfer-Encoding" @kind object;
  #L14ab50.  v9:= lcmp(v7, v4);
  #L14ab54.  if v9 == 0 then goto L14ab6e;
  #L14ab58.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(J)Ljava/lang/String;` @kind static;
  #L14ab5e.  v7:= temp @kind object;
  #L14ab60.  call temp:= `header`(v1, v6, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14ab66.  call temp:= `removeHeader`(v1, v2) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14ab6c.  goto L14ab7e;
  #L14ab6e.  v7:= "chunked" @kind object;
  #L14ab72.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14ab78.  call temp:= `removeHeader`(v1, v6) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14ab7e.  v2:= "Host" @kind object;
  #L14ab82.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L14ab88.  v7:= temp @kind object;
  #L14ab8a.  v8:= 0I;
  #L14ab8c.  v9:= 1I;
  #L14ab8e.  v10:= 0I;
  #L14ab90.  if v7 != 0 then goto L14abaa;
  #L14ab94.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14ab9a.  v7:= temp @kind object;
  #L14ab9c.  call temp:= `toHostHeader$default`(v7, v8, v9, v10) @signature `Lokhttp3/internal/Util;.toHostHeader$default:(Lokhttp3/HttpUrl;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L14aba2.  v7:= temp @kind object;
  #L14aba4.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14abaa.  v2:= "Connection" @kind object;
  #L14abae.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L14abb4.  v7:= temp @kind object;
  #L14abb6.  if v7 != 0 then goto L14abc4;
  #L14abba.  v7:= "Keep-Alive" @kind object;
  #L14abbe.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14abc4.  v2:= "Accept-Encoding" @kind object;
  #L14abc8.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L14abce.  v7:= temp @kind object;
  #L14abd0.  v11:= "gzip" @kind object;
  #L14abd4.  if v7 != 0 then goto L14abf0;
  #L14abd8.  v7:= "Range" @kind object;
  #L14abdc.  call temp:= `header`(v0, v7) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L14abe2.  v7:= temp @kind object;
  #L14abe4.  if v7 != 0 then goto L14abf0;
  #L14abe8.  call temp:= `header`(v1, v2, v11) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14abee.  v8:= 1I;
  #L14abf0.  v2:= v12.`okhttp3.internal.http.BridgeInterceptor.a` @type ^`okhttp3.CookieJar` @kind object;
  #L14abf4.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14abfa.  v7:= temp @kind object;
  #L14abfc.  call temp:= `loadForRequest`(v2, v7) @signature `Lokhttp3/CookieJar;.loadForRequest:(Lokhttp3/HttpUrl;)Ljava/util/List;` @kind interface;
  #L14ac02.  v2:= temp @kind object;
  #L14ac04.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L14ac0a.  v7:= temp;
  #L14ac0c.  v7:= v7 ^~ v9 @kind int;
  #L14ac0e.  if v7 == 0 then goto L14ac24;
  #L14ac12.  call temp:= `a`(v12, v2) @signature `Lokhttp3/internal/http/BridgeInterceptor;.a:(Ljava/util/List;)Ljava/lang/String;` @kind direct;
  #L14ac18.  v2:= temp @kind object;
  #L14ac1a.  v7:= "Cookie" @kind object;
  #L14ac1e.  call temp:= `header`(v1, v7, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14ac24.  v2:= "User-Agent" @kind object;
  #L14ac28.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L14ac2e.  v7:= temp @kind object;
  #L14ac30.  if v7 != 0 then goto L14ac3e;
  #L14ac34.  v7:= "okhttp/4.9.3" @kind object;
  #L14ac38.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14ac3e.  call temp:= `build`(v1) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L14ac44.  v1:= temp @kind object;
  #L14ac46.  call temp:= `proceed`(v13, v1) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L14ac4c.  v13:= temp @kind object;
  #L14ac4e.  v1:= v12.`okhttp3.internal.http.BridgeInterceptor.a` @type ^`okhttp3.CookieJar` @kind object;
  #L14ac52.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14ac58.  v2:= temp @kind object;
  #L14ac5a.  call temp:= `headers`(v13) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L14ac60.  v7:= temp @kind object;
  #L14ac62.  call `receiveHeaders`(v1, v2, v7) @signature `Lokhttp3/internal/http/HttpHeaders;.receiveHeaders:(Lokhttp3/CookieJar;Lokhttp3/HttpUrl;Lokhttp3/Headers;)V` @kind static;
  #L14ac68.  call temp:= `newBuilder`(v13) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L14ac6e.  v1:= temp @kind object;
  #L14ac70.  call temp:= `request`(v1, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14ac76.  v0:= temp @kind object;
  #L14ac78.  if v8 == 0 then goto L14ad0e;
  #L14ac7c.  v1:= "Content-Encoding" @kind object;
  #L14ac80.  v2:= 2I;
  #L14ac82.  call temp:= `header$default`(v13, v1, v10, v2, v10) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L14ac88.  v7:= temp @kind object;
  #L14ac8a.  call temp:= `equals`(v11, v7, v9) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L14ac90.  v7:= temp;
  #L14ac92.  if v7 == 0 then goto L14ad0e;
  #L14ac96.  call temp:= `promisesBody`(v13) @signature `Lokhttp3/internal/http/HttpHeaders;.promisesBody:(Lokhttp3/Response;)Z` @kind static;
  #L14ac9c.  v7:= temp;
  #L14ac9e.  if v7 == 0 then goto L14ad0e;
  #L14aca2.  call temp:= `body`(v13) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L14aca8.  v7:= temp @kind object;
  #L14acaa.  if v7 == 0 then goto L14ad0e;
  #L14acae.  v8:= new `okio.GzipSource`;
  #L14acb2.  call temp:= `source`(v7) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L14acb8.  v7:= temp @kind object;
  #L14acba.  call `<init>`(v8, v7) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L14acc0.  call temp:= `headers`(v13) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L14acc6.  v7:= temp @kind object;
  #L14acc8.  call temp:= `newBuilder`(v7) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L14acce.  v7:= temp @kind object;
  #L14acd0.  call temp:= `removeAll`(v7, v1) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L14acd6.  v1:= temp @kind object;
  #L14acd8.  call temp:= `removeAll`(v1, v6) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L14acde.  v1:= temp @kind object;
  #L14ace0.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L14ace6.  v1:= temp @kind object;
  #L14ace8.  call temp:= `headers`(v0, v1) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14acee.  call temp:= `header$default`(v13, v3, v10, v2, v10) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L14acf4.  v13:= temp @kind object;
  #L14acf6.  v1:= new `okhttp3.internal.http.RealResponseBody`;
  #L14acfa.  call temp:= `buffer`(v8) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L14ad00.  v2:= temp @kind object;
  #L14ad02.  call `<init>`(v1, v13, v4, v2) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L14ad08.  call temp:= `body`(v0, v1) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14ad0e.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L14ad14.  v13:= temp @kind object;
  #L14ad16.  return v13 @kind object;
}
