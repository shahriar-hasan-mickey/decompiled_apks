record `okhttp3.internal.http.RetryAndFollowUpInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.OkHttpClient` `okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion` `@@okhttp3.internal.http.RetryAndFollowUpInterceptor.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L14c8d0.  v0:= new `okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion`;
  #L14c8d4.  v1:= 0I;
  #L14c8d6.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L14c8dc.  `@@okhttp3.internal.http.RetryAndFollowUpInterceptor.Companion` @type ^`okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion` := v0 @kind object;
  #L14c8e0.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v1 @kind this, `okhttp3.OkHttpClient` v2 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.<init>:(Lokhttp3/OkHttpClient;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14c8f4.  v0:= "client" @kind object;
  #L14c8f8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14c8fe.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14c904.  v1.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` := v2 @kind object;
  #L14c908.  return @kind void;
}
procedure `okhttp3.Request` `a`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v8 @kind this, `okhttp3.Response` v9 @kind object, `java.lang.String` v10 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.a:(Lokhttp3/Response;Ljava/lang/String;)Lokhttp3/Request;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L14c358.  v0:= v8.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L14c35c.  call temp:= `followRedirects`(v0) @signature `Lokhttp3/OkHttpClient;.followRedirects:()Z` @kind virtual;
  #L14c362.  v0:= temp;
  #L14c364.  v1:= 0I;
  #L14c366.  if v0 != 0 then goto L14c36c;
  #L14c36a.  return v1 @kind object;
  #L14c36c.  v0:= 2I;
  #L14c36e.  v2:= "Location" @kind object;
  #L14c372.  call temp:= `header$default`(v9, v2, v1, v0, v1) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L14c378.  v0:= temp @kind object;
  #L14c37a.  if v0 == 0 then goto L14c4b8;
  #L14c37e.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c384.  v2:= temp @kind object;
  #L14c386.  call temp:= `url`(v2) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14c38c.  v2:= temp @kind object;
  #L14c38e.  call temp:= `resolve`(v2, v0) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L14c394.  v0:= temp @kind object;
  #L14c396.  if v0 == 0 then goto L14c4b8;
  #L14c39a.  call temp:= `scheme`(v0) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L14c3a0.  v2:= temp @kind object;
  #L14c3a2.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c3a8.  v3:= temp @kind object;
  #L14c3aa.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14c3b0.  v3:= temp @kind object;
  #L14c3b2.  call temp:= `scheme`(v3) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L14c3b8.  v3:= temp @kind object;
  #L14c3ba.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14c3c0.  v2:= temp;
  #L14c3c2.  if v2 != 0 then goto L14c3d8;
  #L14c3c6.  v2:= v8.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L14c3ca.  call temp:= `followSslRedirects`(v2) @signature `Lokhttp3/OkHttpClient;.followSslRedirects:()Z` @kind virtual;
  #L14c3d0.  v2:= temp;
  #L14c3d2.  if v2 != 0 then goto L14c3d8;
  #L14c3d6.  return v1 @kind object;
  #L14c3d8.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c3de.  v2:= temp @kind object;
  #L14c3e0.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L14c3e6.  v2:= temp @kind object;
  #L14c3e8.  call temp:= `permitsRequestBody`(v10) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L14c3ee.  v3:= temp;
  #L14c3f0.  if v3 == 0 then goto L14c480;
  #L14c3f4.  call temp:= `code`(v9) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L14c3fa.  v3:= temp;
  #L14c3fc.  v4:= `@@okhttp3.internal.http.HttpMethod.INSTANCE` @type ^`okhttp3.internal.http.HttpMethod` @kind object;
  #L14c400.  call temp:= `redirectsWithBody`(v4, v10) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsWithBody:(Ljava/lang/String;)Z` @kind virtual;
  #L14c406.  v5:= temp;
  #L14c408.  v6:= 307I;
  #L14c40c.  v7:= 308I;
  #L14c410.  if v5 != 0 then goto L14c422;
  #L14c414.  if v3 == v7 then goto L14c422;
  #L14c418.  if v3 != v6 then goto L14c41e;
  #L14c41c.  goto L14c422;
  #L14c41e.  v5:= 0I;
  #L14c420.  goto L14c424;
  #L14c422.  v5:= 1I;
  #L14c424.  call temp:= `redirectsToGet`(v4, v10) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsToGet:(Ljava/lang/String;)Z` @kind virtual;
  #L14c42a.  v4:= temp;
  #L14c42c.  if v4 == 0 then goto L14c444;
  #L14c430.  if v3 == v7 then goto L14c444;
  #L14c434.  if v3 == v6 then goto L14c444;
  #L14c438.  v10:= "GET" @kind object;
  #L14c43c.  call temp:= `method`(v2, v10, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14c442.  goto L14c45e;
  #L14c444.  if v5 == 0 then goto L14c458;
  #L14c448.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c44e.  v1:= temp @kind object;
  #L14c450.  call temp:= `body`(v1) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L14c456.  v1:= temp @kind object;
  #L14c458.  call temp:= `method`(v2, v10, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14c45e.  if v5 != 0 then goto L14c480;
  #L14c462.  v10:= "Transfer-Encoding" @kind object;
  #L14c466.  call temp:= `removeHeader`(v2, v10) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14c46c.  v10:= "Content-Length" @kind object;
  #L14c470.  call temp:= `removeHeader`(v2, v10) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14c476.  v10:= "Content-Type" @kind object;
  #L14c47a.  call temp:= `removeHeader`(v2, v10) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14c480.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c486.  v9:= temp @kind object;
  #L14c488.  call temp:= `url`(v9) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L14c48e.  v9:= temp @kind object;
  #L14c490.  call temp:= `canReuseConnectionFor`(v9, v0) @signature `Lokhttp3/internal/Util;.canReuseConnectionFor:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z` @kind static;
  #L14c496.  v9:= temp;
  #L14c498.  if v9 != 0 then goto L14c4a6;
  #L14c49c.  v9:= "Authorization" @kind object;
  #L14c4a0.  call temp:= `removeHeader`(v2, v9) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14c4a6.  call temp:= `url`(v2, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L14c4ac.  v9:= temp @kind object;
  #L14c4ae.  call temp:= `build`(v9) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L14c4b4.  v9:= temp @kind object;
  #L14c4b6.  return v9 @kind object;
  #L14c4b8.  return v1 @kind object;
}
procedure `okhttp3.Request` `b`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v5 @kind this, `okhttp3.Response` v6 @kind object, `okhttp3.internal.connection.Exchange` v7 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.b:(Lokhttp3/Response;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Request;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L14c4cc.  v0:= 0I;
  #L14c4ce.  if v7 == 0 then goto L14c4e8;
  #L14c4d2.  call temp:= `getConnection$okhttp`(v7) @signature `Lokhttp3/internal/connection/Exchange;.getConnection$okhttp:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L14c4d8.  v1:= temp @kind object;
  #L14c4da.  if v1 == 0 then goto L14c4e8;
  #L14c4de.  call temp:= `route`(v1) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L14c4e4.  v1:= temp @kind object;
  #L14c4e6.  goto L14c4ea;
  #L14c4e8.  v1:= v0 @kind object;
  #L14c4ea.  call temp:= `code`(v6) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L14c4f0.  v2:= temp;
  #L14c4f2.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c4f8.  v3:= temp @kind object;
  #L14c4fa.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L14c500.  v3:= temp @kind object;
  #L14c502.  v4:= 307I;
  #L14c506.  if v2 == v4 then goto L14c68a;
  #L14c50a.  v4:= 308I;
  #L14c50e.  if v2 == v4 then goto L14c68a;
  #L14c512.  v4:= 401I;
  #L14c516.  if v2 == v4 then goto L14c674;
  #L14c51a.  v4:= 421I;
  #L14c51e.  if v2 == v4 then goto L14c626;
  #L14c522.  v7:= 503I;
  #L14c526.  if v2 == v7 then goto L14c5ee;
  #L14c52a.  v7:= 407I;
  #L14c52e.  if v2 == v7 then goto L14c5aa;
  #L14c532.  v7:= 408I;
  #L14c536.  if v2 == v7 then goto L14c542;
  #L14c53a.  goto L14c694;
  #L14c540.  return v0 @kind object;
  #L14c542.  v1:= v5.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L14c546.  call temp:= `retryOnConnectionFailure`(v1) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L14c54c.  v1:= temp;
  #L14c54e.  if v1 != 0 then goto L14c554;
  #L14c552.  return v0 @kind object;
  #L14c554.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c55a.  v1:= temp @kind object;
  #L14c55c.  call temp:= `body`(v1) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L14c562.  v1:= temp @kind object;
  #L14c564.  if v1 == 0 then goto L14c576;
  #L14c568.  call temp:= `isOneShot`(v1) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L14c56e.  v1:= temp;
  #L14c570.  if v1 == 0 then goto L14c576;
  #L14c574.  return v0 @kind object;
  #L14c576.  call temp:= `priorResponse`(v6) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L14c57c.  v1:= temp @kind object;
  #L14c57e.  if v1 == 0 then goto L14c590;
  #L14c582.  call temp:= `code`(v1) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L14c588.  v1:= temp;
  #L14c58a.  if v1 != v7 then goto L14c590;
  #L14c58e.  return v0 @kind object;
  #L14c590.  v7:= 0I;
  #L14c592.  call temp:= `f`(v5, v6, v7) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.f:(Lokhttp3/Response;I)I` @kind direct;
  #L14c598.  v7:= temp;
  #L14c59a.  if v7 <= 0 then goto L14c5a0;
  #L14c59e.  return v0 @kind object;
  #L14c5a0.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c5a6.  v6:= temp @kind object;
  #L14c5a8.  return v6 @kind object;
  #L14c5aa.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L14c5b0.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L14c5b6.  v7:= temp @kind object;
  #L14c5b8.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L14c5be.  v7:= temp @kind object;
  #L14c5c0.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L14c5c4.  if v7 != v0 then goto L14c5de;
  #L14c5c8.  v7:= v5.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L14c5cc.  call temp:= `proxyAuthenticator`(v7) @signature `Lokhttp3/OkHttpClient;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L14c5d2.  v7:= temp @kind object;
  #L14c5d4.  call temp:= `authenticate`(v7, v1, v6) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L14c5da.  v6:= temp @kind object;
  #L14c5dc.  return v6 @kind object;
  #L14c5de.  v6:= new `java.net.ProtocolException`;
  #L14c5e2.  v7:= "Received HTTP_PROXY_AUTH (407) code while not using proxy" @kind object;
  #L14c5e6.  call `<init>`(v6, v7) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14c5ec.  throw v6;
  #L14c5ee.  call temp:= `priorResponse`(v6) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L14c5f4.  v1:= temp @kind object;
  #L14c5f6.  if v1 == 0 then goto L14c608;
  #L14c5fa.  call temp:= `code`(v1) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L14c600.  v1:= temp;
  #L14c602.  if v1 != v7 then goto L14c608;
  #L14c606.  return v0 @kind object;
  #L14c608.  v7:= 2147483647I;
  #L14c60e.  call temp:= `f`(v5, v6, v7) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.f:(Lokhttp3/Response;I)I` @kind direct;
  #L14c614.  v7:= temp;
  #L14c616.  if v7 != 0 then goto L14c624;
  #L14c61a.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c620.  v6:= temp @kind object;
  #L14c622.  return v6 @kind object;
  #L14c624.  return v0 @kind object;
  #L14c626.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c62c.  v1:= temp @kind object;
  #L14c62e.  call temp:= `body`(v1) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L14c634.  v1:= temp @kind object;
  #L14c636.  if v1 == 0 then goto L14c648;
  #L14c63a.  call temp:= `isOneShot`(v1) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L14c640.  v1:= temp;
  #L14c642.  if v1 == 0 then goto L14c648;
  #L14c646.  return v0 @kind object;
  #L14c648.  if v7 == 0 then goto L14c672;
  #L14c64c.  call temp:= `isCoalescedConnection$okhttp`(v7) @signature `Lokhttp3/internal/connection/Exchange;.isCoalescedConnection$okhttp:()Z` @kind virtual;
  #L14c652.  v1:= temp;
  #L14c654.  if v1 != 0 then goto L14c65a;
  #L14c658.  goto L14c672;
  #L14c65a.  call temp:= `getConnection$okhttp`(v7) @signature `Lokhttp3/internal/connection/Exchange;.getConnection$okhttp:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L14c660.  v7:= temp @kind object;
  #L14c662.  call `noCoalescedConnections$okhttp`(v7) @signature `Lokhttp3/internal/connection/RealConnection;.noCoalescedConnections$okhttp:()V` @kind virtual;
  #L14c668.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L14c66e.  v6:= temp @kind object;
  #L14c670.  return v6 @kind object;
  #L14c672.  return v0 @kind object;
  #L14c674.  v7:= v5.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L14c678.  call temp:= `authenticator`(v7) @signature `Lokhttp3/OkHttpClient;.authenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L14c67e.  v7:= temp @kind object;
  #L14c680.  call temp:= `authenticate`(v7, v1, v6) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L14c686.  v6:= temp @kind object;
  #L14c688.  return v6 @kind object;
  #L14c68a.  call temp:= `a`(v5, v6, v3) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.a:(Lokhttp3/Response;Ljava/lang/String;)Lokhttp3/Request;` @kind direct;
  #L14c690.  v6:= temp @kind object;
  #L14c692.  return v6 @kind object;
  #L14c694.  switch v2
                  | 300 => goto L14c68a
                  | 301 => goto L14c68a
                  | 302 => goto L14c68a
                  | 303 => goto L14c68a
                  | else => goto L14c540;
}
procedure `boolean` `c`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v3 @kind this, `java.io.IOException` v4 @kind object, `boolean` v5 ) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.c:(Ljava/io/IOException;Z)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L14c208.  v0:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L14c20c.  v1:= 0I;
  #L14c20e.  if v0 == 0 then goto L14c214;
  #L14c212.  return v1;
  #L14c214.  v0:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L14c218.  v2:= 1I;
  #L14c21a.  if v0 == 0 then goto L14c22e;
  #L14c21e.  v4:= instanceof @variable v4 @type ^`java.net.SocketTimeoutException` @kind boolean;
  #L14c222.  if v4 == 0 then goto L14c22c;
  #L14c226.  if v5 != 0 then goto L14c22c;
  #L14c22a.  v1:= 1I;
  #L14c22c.  return v1;
  #L14c22e.  v5:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L14c232.  if v5 == 0 then goto L14c248;
  #L14c236.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L14c23c.  v5:= temp @kind object;
  #L14c23e.  v5:= instanceof @variable v5 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L14c242.  if v5 == 0 then goto L14c248;
  #L14c246.  return v1;
  #L14c248.  v4:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L14c24c.  if v4 == 0 then goto L14c252;
  #L14c250.  return v1;
  #L14c252.  return v2;
}
procedure `boolean` `d`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v2 @kind this, `java.io.IOException` v3 @kind object, `okhttp3.internal.connection.RealCall` v4 @kind object, `okhttp3.Request` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.d:(Ljava/io/IOException;Lokhttp3/internal/connection/RealCall;Lokhttp3/Request;Z)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L14c264.  v0:= v2.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L14c268.  call temp:= `retryOnConnectionFailure`(v0) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L14c26e.  v0:= temp;
  #L14c270.  v1:= 0I;
  #L14c272.  if v0 != 0 then goto L14c278;
  #L14c276.  return v1;
  #L14c278.  if v6 == 0 then goto L14c28a;
  #L14c27c.  call temp:= `e`(v2, v3, v5) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.e:(Ljava/io/IOException;Lokhttp3/Request;)Z` @kind direct;
  #L14c282.  v5:= temp;
  #L14c284.  if v5 == 0 then goto L14c28a;
  #L14c288.  return v1;
  #L14c28a.  call temp:= `c`(v2, v3, v6) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.c:(Ljava/io/IOException;Z)Z` @kind direct;
  #L14c290.  v3:= temp;
  #L14c292.  if v3 != 0 then goto L14c298;
  #L14c296.  return v1;
  #L14c298.  call temp:= `retryAfterFailure`(v4) @signature `Lokhttp3/internal/connection/RealCall;.retryAfterFailure:()Z` @kind virtual;
  #L14c29e.  v3:= temp;
  #L14c2a0.  if v3 != 0 then goto L14c2a6;
  #L14c2a4.  return v1;
  #L14c2a6.  v3:= 1I;
  #L14c2a8.  return v3;
}
procedure `boolean` `e`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v0 @kind this, `java.io.IOException` v1 @kind object, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.e:(Ljava/io/IOException;Lokhttp3/Request;)Z` @AccessFlag PRIVATE_FINAL {
    temp;

  #L14c2bc.  call temp:= `body`(v2) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L14c2c2.  v2:= temp @kind object;
  #L14c2c4.  if v2 == 0 then goto L14c2d4;
  #L14c2c8.  call temp:= `isOneShot`(v2) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L14c2ce.  v2:= temp;
  #L14c2d0.  if v2 != 0 then goto L14c2dc;
  #L14c2d4.  v1:= instanceof @variable v1 @type ^`java.io.FileNotFoundException` @kind boolean;
  #L14c2d8.  if v1 == 0 then goto L14c2e0;
  #L14c2dc.  v1:= 1I;
  #L14c2de.  goto L14c2e2;
  #L14c2e0.  v1:= 0I;
  #L14c2e2.  return v1;
}
procedure `int` `f`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v3 @kind this, `okhttp3.Response` v4 @kind object, `int` v5 ) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.f:(Lokhttp3/Response;I)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L14c2f4.  v0:= "Retry-After" @kind object;
  #L14c2f8.  v1:= 0I;
  #L14c2fa.  v2:= 2I;
  #L14c2fc.  call temp:= `header$default`(v4, v0, v1, v2, v1) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L14c302.  v4:= temp @kind object;
  #L14c304.  if v4 == 0 then goto L14c346;
  #L14c308.  v5:= new `kotlin.text.Regex`;
  #L14c30c.  v0:= "\\d+" @kind object;
  #L14c310.  call `<init>`(v5, v0) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14c316.  call temp:= `matches`(v5, v4) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L14c31c.  v5:= temp;
  #L14c31e.  if v5 == 0 then goto L14c33e;
  #L14c322.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L14c328.  v4:= temp @kind object;
  #L14c32a.  v5:= "Integer.valueOf(header)" @kind object;
  #L14c32e.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14c334.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L14c33a.  v4:= temp;
  #L14c33c.  return v4;
  #L14c33e.  v4:= 2147483647I;
  #L14c344.  return v4;
  #L14c346.  return v5;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v10 @kind this, `okhttp3.Interceptor$Chain` v11 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L14c6bc.  v0:= "chain" @kind object;
  #L14c6c0.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14c6c6.  v11:= (`okhttp3.internal.http.RealInterceptorChain`) v11 @kind object;
  #L14c6ca.  call temp:= `getRequest$okhttp`(v11) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getRequest$okhttp:()Lokhttp3/Request;` @kind virtual;
  #L14c6d0.  v0:= temp @kind object;
  #L14c6d2.  call temp:= `getCall$okhttp`(v11) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getCall$okhttp:()Lokhttp3/internal/connection/RealCall;` @kind virtual;
  #L14c6d8.  v1:= temp @kind object;
  #L14c6da.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L14c6e0.  v2:= temp @kind object;
  #L14c6e2.  v3:= 0I;
  #L14c6e4.  v4:= 1I;
  #L14c6e6.  v5:= 0I;
  #L14c6e8.  v7:= v3 @kind object;
  #L14c6ea.  v6:= 1I;
  #L14c6ec.  v8:= 0I;
  #L14c6ee.  call `enterNetworkInterceptorExchange`(v1, v0, v6) @signature `Lokhttp3/internal/connection/RealCall;.enterNetworkInterceptorExchange:(Lokhttp3/Request;Z)V` @kind virtual;
  #L14c6f4.  call temp:= `isCanceled`(v1) @signature `Lokhttp3/internal/connection/RealCall;.isCanceled:()Z` @kind virtual;
  #L14c6fa.  v6:= temp;
  #L14c6fc.  if v6 != 0 then goto L14c85c;
  #L14c700.  call temp:= `proceed`(v11, v0) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind virtual;
  #L14c706.  v0:= temp @kind object;
  #L14c708.  if v7 == 0 then goto L14c73c;
  #L14c70c.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L14c712.  v0:= temp @kind object;
  #L14c714.  call temp:= `newBuilder`(v7) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L14c71a.  v6:= temp @kind object;
  #L14c71c.  call temp:= `body`(v6, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14c722.  v6:= temp @kind object;
  #L14c724.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L14c72a.  v6:= temp @kind object;
  #L14c72c.  call temp:= `priorResponse`(v0, v6) @signature `Lokhttp3/Response$Builder;.priorResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L14c732.  v0:= temp @kind object;
  #L14c734.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L14c73a.  v0:= temp @kind object;
  #L14c73c.  v7:= v0 @kind object;
  #L14c73e.  call temp:= `getInterceptorScopedExchange$okhttp`(v1) @signature `Lokhttp3/internal/connection/RealCall;.getInterceptorScopedExchange$okhttp:()Lokhttp3/internal/connection/Exchange;` @kind virtual;
  #L14c744.  v0:= temp @kind object;
  #L14c746.  call temp:= `b`(v10, v7, v0) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.b:(Lokhttp3/Response;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Request;` @kind direct;
  #L14c74c.  v6:= temp @kind object;
  #L14c74e.  if v6 != 0 then goto L14c770;
  #L14c752.  if v0 == 0 then goto L14c768;
  #L14c756.  call temp:= `isDuplex$okhttp`(v0) @signature `Lokhttp3/internal/connection/Exchange;.isDuplex$okhttp:()Z` @kind virtual;
  #L14c75c.  v11:= temp;
  #L14c75e.  if v11 == 0 then goto L14c768;
  #L14c762.  call `timeoutEarlyExit`(v1) @signature `Lokhttp3/internal/connection/RealCall;.timeoutEarlyExit:()V` @kind virtual;
  #L14c768.  call `exitNetworkInterceptorExchange$okhttp`(v1, v5) @signature `Lokhttp3/internal/connection/RealCall;.exitNetworkInterceptorExchange$okhttp:(Z)V` @kind virtual;
  #L14c76e.  return v7 @kind object;
  #L14c770.  call temp:= `body`(v6) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L14c776.  v0:= temp @kind object;
  #L14c778.  if v0 == 0 then goto L14c790;
  #L14c77c.  call temp:= `isOneShot`(v0) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L14c782.  v0:= temp;
  #L14c784.  if v0 == 0 then goto L14c790;
  #L14c788.  call `exitNetworkInterceptorExchange$okhttp`(v1, v5) @signature `Lokhttp3/internal/connection/RealCall;.exitNetworkInterceptorExchange$okhttp:(Z)V` @kind virtual;
  #L14c78e.  return v7 @kind object;
  #L14c790.  call temp:= `body`(v7) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L14c796.  v0:= temp @kind object;
  #L14c798.  if v0 == 0 then goto L14c7a2;
  #L14c79c.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L14c7a2.  v8:= v8 + 1;
  #L14c7a6.  v0:= 20I;
  #L14c7aa.  if v8 > v0 then goto L14c7ba;
  #L14c7ae.  call `exitNetworkInterceptorExchange$okhttp`(v1, v4) @signature `Lokhttp3/internal/connection/RealCall;.exitNetworkInterceptorExchange$okhttp:(Z)V` @kind virtual;
  #L14c7b4.  v0:= v6 @kind object;
  #L14c7b6.  v6:= 1I;
  #L14c7b8.  goto L14c6ee;
  #L14c7ba.  v11:= new `java.net.ProtocolException`;
  #L14c7be.  v0:= new `java.lang.StringBuilder`;
  #L14c7c2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14c7c8.  v2:= "Too many follow-up requests: " @kind object;
  #L14c7cc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c7d2.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c7d8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14c7de.  v0:= temp @kind object;
  #L14c7e0.  call `<init>`(v11, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14c7e6.  throw v11;
  #L14c7e8.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L14c7ea.  v9:= instanceof @variable v6 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L14c7ee.  if v9 != 0 then goto L14c7f6;
  #L14c7f2.  v9:= 1I;
  #L14c7f4.  goto L14c7f8;
  #L14c7f6.  v9:= 0I;
  #L14c7f8.  call temp:= `d`(v10, v6, v1, v0, v9) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.d:(Ljava/io/IOException;Lokhttp3/internal/connection/RealCall;Lokhttp3/Request;Z)Z` @kind direct;
  #L14c7fe.  v9:= temp;
  #L14c800.  if v9 == 0 then goto L14c80e;
  #L14c804.  call temp:= `plus`(v2, v6) @signature `Lkotlin/collections/CollectionsKt;.plus:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L14c80a.  v2:= temp @kind object;
  #L14c80c.  goto L14c83e;
  #L14c80e.  call temp:= `withSuppressed`(v6, v2) @signature `Lokhttp3/internal/Util;.withSuppressed:(Ljava/lang/Exception;Ljava/util/List;)Ljava/lang/Throwable;` @kind static;
  #L14c814.  v11:= temp @kind object;
  #L14c816.  throw v11;
  #L14c818.  v6:= Exception @type ^`okhttp3.internal.connection.RouteException` @kind object;
  #L14c81a.  call temp:= `getLastConnectException`(v6) @signature `Lokhttp3/internal/connection/RouteException;.getLastConnectException:()Ljava/io/IOException;` @kind virtual;
  #L14c820.  v9:= temp @kind object;
  #L14c822.  call temp:= `d`(v10, v9, v1, v0, v5) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.d:(Ljava/io/IOException;Lokhttp3/internal/connection/RealCall;Lokhttp3/Request;Z)Z` @kind direct;
  #L14c828.  v9:= temp;
  #L14c82a.  if v9 == 0 then goto L14c84a;
  #L14c82e.  call temp:= `getFirstConnectException`(v6) @signature `Lokhttp3/internal/connection/RouteException;.getFirstConnectException:()Ljava/io/IOException;` @kind virtual;
  #L14c834.  v6:= temp @kind object;
  #L14c836.  call temp:= `plus`(v2, v6) @signature `Lkotlin/collections/CollectionsKt;.plus:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L14c83c.  v2:= temp @kind object;
  #L14c83e.  call `exitNetworkInterceptorExchange$okhttp`(v1, v4) @signature `Lokhttp3/internal/connection/RealCall;.exitNetworkInterceptorExchange$okhttp:(Z)V` @kind virtual;
  #L14c844.  v6:= 0I;
  #L14c846.  goto L14c6ee;
  #L14c84a.  call temp:= `getFirstConnectException`(v6) @signature `Lokhttp3/internal/connection/RouteException;.getFirstConnectException:()Ljava/io/IOException;` @kind virtual;
  #L14c850.  v11:= temp @kind object;
  #L14c852.  call temp:= `withSuppressed`(v11, v2) @signature `Lokhttp3/internal/Util;.withSuppressed:(Ljava/lang/Exception;Ljava/util/List;)Ljava/lang/Throwable;` @kind static;
  #L14c858.  v11:= temp @kind object;
  #L14c85a.  throw v11;
  #L14c85c.  v11:= new `java.io.IOException`;
  #L14c860.  v0:= "Canceled" @kind object;
  #L14c864.  call `<init>`(v11, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14c86a.  throw v11;
  #L14c86c.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14c86e.  call `exitNetworkInterceptorExchange$okhttp`(v1, v4) @signature `Lokhttp3/internal/connection/RealCall;.exitNetworkInterceptorExchange$okhttp:(Z)V` @kind virtual;
  #L14c874.  throw v11;
  catch `java.lang.Throwable` @[L14c6f4..L14c6fc] goto L14c86c;
  catch `okhttp3.internal.connection.RouteException` @[L14c700..L14c708] goto L14c818;
  catch `java.io.IOException` @[L14c700..L14c708] goto L14c7e8;
  catch `java.lang.Throwable` @[L14c700..L14c708] goto L14c86c;
  catch `java.lang.Throwable` @[L14c70c..L14c768] goto L14c86c;
  catch `java.lang.Throwable` @[L14c770..L14c784] goto L14c86c;
  catch `java.lang.Throwable` @[L14c790..L14c7a2] goto L14c86c;
  catch `java.lang.Throwable` @[L14c7ba..L14c83e] goto L14c86c;
  catch `java.lang.Throwable` @[L14c84a..L14c86c] goto L14c86c;
}
