record `okhttp3.Headers$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Headers$Companion` v0 @kind this) @signature `Lokhttp3/Headers$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L133dd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L133dde.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Headers$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/Headers$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L133df0.  call `<init>`(v0) @signature `Lokhttp3/Headers$Companion;.<init>:()V` @kind direct;
  #L133df6.  return @kind void;
}
procedure `void` `a`(`okhttp3.Headers$Companion` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/Headers$Companion;.a:(Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L133e38.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L133e3e.  v0:= temp;
  #L133e40.  v1:= 1I;
  #L133e42.  v2:= 0I;
  #L133e44.  if v0 <= 0 then goto L133e4c;
  #L133e48.  v0:= 1I;
  #L133e4a.  goto L133e4e;
  #L133e4c.  v0:= 0I;
  #L133e4e.  if v0 == 0 then goto L133ed0;
  #L133e52.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L133e58.  v0:= temp;
  #L133e5a.  v3:= 0I;
  #L133e5c.  if v3 >= v0 then goto L133ece;
  #L133e60.  call temp:= `charAt`(v8, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L133e66.  v4:= temp;
  #L133e68.  v5:= 126I;
  #L133e6c.  v6:= 33I;
  #L133e70.  if v6 <= v4 then goto L133e76;
  #L133e74.  goto L133e7e;
  #L133e76.  if v5 < v4 then goto L133e7e;
  #L133e7a.  v5:= 1I;
  #L133e7c.  goto L133e80;
  #L133e7e.  v5:= 0I;
  #L133e80.  if v5 == 0 then goto L133e8a;
  #L133e84.  v3:= v3 + 1;
  #L133e88.  goto L133e5c;
  #L133e8a.  v0:= 3I;
  #L133e8c.  v0:= new `java.lang.Object`[v0];
  #L133e90.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L133e96.  v4:= temp @kind object;
  #L133e98.  v0[v2]:= v4 @kind object;
  #L133e9c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L133ea2.  v2:= temp @kind object;
  #L133ea4.  v0[v1]:= v2 @kind object;
  #L133ea8.  v1:= 2I;
  #L133eaa.  v0[v1]:= v8 @kind object;
  #L133eae.  v8:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L133eb2.  call temp:= `format`(v8, v0) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L133eb8.  v8:= temp @kind object;
  #L133eba.  v0:= new `java.lang.IllegalArgumentException`;
  #L133ebe.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L133ec4.  v8:= temp @kind object;
  #L133ec6.  call `<init>`(v0, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L133ecc.  throw v0;
  #L133ece.  return @kind void;
  #L133ed0.  v8:= new `java.lang.IllegalArgumentException`;
  #L133ed4.  v0:= "name is empty" @kind object;
  #L133ed8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L133ede.  v0:= temp @kind object;
  #L133ee0.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L133ee6.  throw v8;
}
procedure `void` `access$checkName`(`okhttp3.Headers$Companion` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lokhttp3/Headers$Companion;.access$checkName:(Lokhttp3/Headers$Companion;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L133e08.  call `a`(v0, v1) @signature `Lokhttp3/Headers$Companion;.a:(Ljava/lang/String;)V` @kind direct;
  #L133e0e.  return @kind void;
}
procedure `void` `access$checkValue`(`okhttp3.Headers$Companion` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Companion;.access$checkValue:(Lokhttp3/Headers$Companion;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L133e20.  call `b`(v0, v1, v2) @signature `Lokhttp3/Headers$Companion;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L133e26.  return @kind void;
}
procedure `java.lang.String` `access$get`(`okhttp3.Headers$Companion` v0 @kind object, `java.lang.String`[] v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Companion;.access$get:(Lokhttp3/Headers$Companion;[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L133b08.  call temp:= `c`(v0, v1, v2) @signature `Lokhttp3/Headers$Companion;.c:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L133b0e.  v0:= temp @kind object;
  #L133b10.  return v0 @kind object;
}
procedure `void` `b`(`okhttp3.Headers$Companion` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/Headers$Companion;.b:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L133ef8.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L133efe.  v0:= temp;
  #L133f00.  v1:= 0I;
  #L133f02.  v2:= 0I;
  #L133f04.  if v2 >= v0 then goto L133fd4;
  #L133f08.  call temp:= `charAt`(v8, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L133f0e.  v3:= temp;
  #L133f10.  v4:= 9I;
  #L133f14.  v5:= 1I;
  #L133f16.  if v3 == v4 then goto L133f32;
  #L133f1a.  v4:= 126I;
  #L133f1e.  v6:= 32I;
  #L133f22.  if v6 <= v3 then goto L133f28;
  #L133f26.  goto L133f2e;
  #L133f28.  if v4 < v3 then goto L133f2e;
  #L133f2c.  goto L133f32;
  #L133f2e.  v4:= 0I;
  #L133f30.  goto L133f34;
  #L133f32.  v4:= 1I;
  #L133f34.  if v4 != 0 then goto L133fce;
  #L133f38.  v0:= new `java.lang.StringBuilder`;
  #L133f3c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L133f42.  v4:= 3I;
  #L133f44.  v4:= new `java.lang.Object`[v4];
  #L133f48.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L133f4e.  v3:= temp @kind object;
  #L133f50.  v4[v1]:= v3 @kind object;
  #L133f54.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L133f5a.  v1:= temp @kind object;
  #L133f5c.  v4[v5]:= v1 @kind object;
  #L133f60.  v1:= 2I;
  #L133f62.  v4[v1]:= v9 @kind object;
  #L133f66.  v1:= "Unexpected char %#04x at %d in %s value" @kind object;
  #L133f6a.  call temp:= `format`(v1, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L133f70.  v1:= temp @kind object;
  #L133f72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L133f78.  call temp:= `isSensitiveHeader`(v9) @signature `Lokhttp3/internal/Util;.isSensitiveHeader:(Ljava/lang/String;)Z` @kind static;
  #L133f7e.  v9:= temp;
  #L133f80.  if v9 == 0 then goto L133f8a;
  #L133f84.  v8:= "" @kind object;
  #L133f88.  goto L133fac;
  #L133f8a.  v9:= new `java.lang.StringBuilder`;
  #L133f8e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L133f94.  v1:= ": " @kind object;
  #L133f98.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L133f9e.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L133fa4.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L133faa.  v8:= temp @kind object;
  #L133fac.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L133fb2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L133fb8.  v8:= temp @kind object;
  #L133fba.  v9:= new `java.lang.IllegalArgumentException`;
  #L133fbe.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L133fc4.  v8:= temp @kind object;
  #L133fc6.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L133fcc.  throw v9;
  #L133fce.  v2:= v2 + 1;
  #L133fd2.  goto L133f04;
  #L133fd4.  return @kind void;
}
procedure `java.lang.String` `c`(`okhttp3.Headers$Companion` v5 @kind this, `java.lang.String`[] v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lokhttp3/Headers$Companion;.c:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L133b24.  v0:= length @variable v6;
  #L133b26.  v1:= 2I;
  #L133b28.  v0:= v0 - v1 @kind int;
  #L133b2a.  v2:= 0I;
  #L133b2c.  call temp:= `downTo`(v0, v2) @signature `Lkotlin/ranges/RangesKt;.downTo:(II)Lkotlin/ranges/IntProgression;` @kind static;
  #L133b32.  v0:= temp @kind object;
  #L133b34.  call temp:= `step`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L133b3a.  v0:= temp @kind object;
  #L133b3c.  call temp:= `getFirst`(v0) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L133b42.  v1:= temp;
  #L133b44.  call temp:= `getLast`(v0) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L133b4a.  v2:= temp;
  #L133b4c.  call temp:= `getStep`(v0) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L133b52.  v0:= temp;
  #L133b54.  if v0 < 0 then goto L133b5e;
  #L133b58.  if v1 > v2 then goto L133b84;
  #L133b5c.  goto L133b62;
  #L133b5e.  if v1 < v2 then goto L133b84;
  #L133b62.  v3:= v6[v1] @kind object;
  #L133b66.  v4:= 1I;
  #L133b68.  call temp:= `equals`(v7, v3, v4) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L133b6e.  v3:= temp;
  #L133b70.  if v3 == 0 then goto L133b7c;
  #L133b74.  v1:= v1 + v4 @kind int;
  #L133b76.  v6:= v6[v1] @kind object;
  #L133b7a.  return v6 @kind object;
  #L133b7c.  if v1 == v2 then goto L133b84;
  #L133b80.  v1:= v1 + v0 @kind int;
  #L133b82.  goto L133b62;
  #L133b84.  v6:= 0I;
  #L133b86.  return v6 @kind object;
}
procedure `okhttp3.Headers` `-deprecated_of`(`okhttp3.Headers$Companion` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lokhttp3/Headers$Companion;.-deprecated_of:(Ljava/util/Map;)Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L133bcc.  v0:= "headers" @kind object;
  #L133bd0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133bd6.  call temp:= `of`(v1, v2) @signature `Lokhttp3/Headers$Companion;.of:(Ljava/util/Map;)Lokhttp3/Headers;` @kind virtual;
  #L133bdc.  v2:= temp @kind object;
  #L133bde.  return v2 @kind object;
}
procedure `okhttp3.Headers` `-deprecated_of`(`okhttp3.Headers$Companion` v1 @kind this, `java.lang.String`[] v2 @kind object) @signature `Lokhttp3/Headers$Companion;.-deprecated_of:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L133b98.  v0:= "namesAndValues" @kind object;
  #L133b9c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133ba2.  v0:= length @variable v2;
  #L133ba4.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L133baa.  v2:= temp @kind object;
  #L133bac.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L133bb0.  call temp:= `of`(v1, v2) @signature `Lokhttp3/Headers$Companion;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind virtual;
  #L133bb6.  v2:= temp @kind object;
  #L133bb8.  return v2 @kind object;
}
procedure `okhttp3.Headers` `of`(`okhttp3.Headers$Companion` v5 @kind this, `java.util.Map` v6 @kind object) @signature `Lokhttp3/Headers$Companion;.of:(Ljava/util/Map;)Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L133d10.  v0:= "$this$toHeaders" @kind object;
  #L133d14.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133d1a.  call temp:= `size`(v6) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L133d20.  v0:= temp;
  #L133d22.  v0:= v0 * 2;
  #L133d26.  v0:= new `java.lang.String`[v0];
  #L133d2a.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L133d30.  v6:= temp @kind object;
  #L133d32.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L133d38.  v6:= temp @kind object;
  #L133d3a.  v1:= 0I;
  #L133d3c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L133d42.  v2:= temp;
  #L133d44.  if v2 == 0 then goto L133dba;
  #L133d48.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L133d4e.  v2:= temp @kind object;
  #L133d50.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L133d54.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L133d5a.  v3:= temp @kind object;
  #L133d5c.  v3:= (`java.lang.String`) v3 @kind object;
  #L133d60.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L133d66.  v2:= temp @kind object;
  #L133d68.  v2:= (`java.lang.String`) v2 @kind object;
  #L133d6c.  v4:= "null cannot be cast to non-null type kotlin.CharSequence" @kind object;
  #L133d70.  call temp:= `requireNonNull`(v3, v4) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L133d76.  call temp:= `trim`(v3) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L133d7c.  v3:= temp @kind object;
  #L133d7e.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L133d84.  v3:= temp @kind object;
  #L133d86.  call temp:= `requireNonNull`(v2, v4) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L133d8c.  call temp:= `trim`(v2) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L133d92.  v2:= temp @kind object;
  #L133d94.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L133d9a.  v2:= temp @kind object;
  #L133d9c.  call `a`(v5, v3) @signature `Lokhttp3/Headers$Companion;.a:(Ljava/lang/String;)V` @kind direct;
  #L133da2.  call `b`(v5, v2, v3) @signature `Lokhttp3/Headers$Companion;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L133da8.  v0[v1]:= v3 @kind object;
  #L133dac.  v3:= v1 + 1;
  #L133db0.  v0[v3]:= v2 @kind object;
  #L133db4.  v1:= v1 + 2;
  #L133db8.  goto L133d3c;
  #L133dba.  v6:= new `okhttp3.Headers`;
  #L133dbe.  v1:= 0I;
  #L133dc0.  call `<init>`(v6, v0, v1) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L133dc6.  return v6 @kind object;
}
procedure `okhttp3.Headers` `of`(`okhttp3.Headers$Companion` v7 @kind this, `java.lang.String`[] v8 @kind object) @signature `Lokhttp3/Headers$Companion;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L133bf0.  v0:= "namesAndValues" @kind object;
  #L133bf4.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133bfa.  v0:= length @variable v8;
  #L133bfc.  v1:= 2I;
  #L133bfe.  v0:= v0 %% v1 @kind int;
  #L133c00.  v2:= 0I;
  #L133c02.  v3:= 1I;
  #L133c04.  if v0 != 0 then goto L133c0c;
  #L133c08.  v0:= 1I;
  #L133c0a.  goto L133c0e;
  #L133c0c.  v0:= 0I;
  #L133c0e.  if v0 == 0 then goto L133ce6;
  #L133c12.  call temp:= `clone`(v8) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L133c18.  v8:= temp @kind object;
  #L133c1a.  v0:= "null cannot be cast to non-null type kotlin.Array<kotlin.String>" @kind object;
  #L133c1e.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L133c24.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L133c28.  v0:= length @variable v8;
  #L133c2a.  v4:= 0I;
  #L133c2c.  if v4 >= v0 then goto L133c82;
  #L133c30.  v5:= v8[v4] @kind object;
  #L133c34.  if v5 == 0 then goto L133c3c;
  #L133c38.  v5:= 1I;
  #L133c3a.  goto L133c3e;
  #L133c3c.  v5:= 0I;
  #L133c3e.  if v5 == 0 then goto L133c6a;
  #L133c42.  v5:= v8[v4] @kind object;
  #L133c46.  v6:= "null cannot be cast to non-null type kotlin.CharSequence" @kind object;
  #L133c4a.  call temp:= `requireNonNull`(v5, v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L133c50.  call temp:= `trim`(v5) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L133c56.  v5:= temp @kind object;
  #L133c58.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L133c5e.  v5:= temp @kind object;
  #L133c60.  v8[v4]:= v5 @kind object;
  #L133c64.  v4:= v4 + 1;
  #L133c68.  goto L133c2c;
  #L133c6a.  v8:= new `java.lang.IllegalArgumentException`;
  #L133c6e.  v0:= "Headers cannot be null" @kind object;
  #L133c72.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L133c78.  v0:= temp @kind object;
  #L133c7a.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L133c80.  throw v8;
  #L133c82.  call temp:= `getIndices`(v8) @signature `Lkotlin/collections/ArraysKt;.getIndices:([Ljava/lang/Object;)Lkotlin/ranges/IntRange;` @kind static;
  #L133c88.  v0:= temp @kind object;
  #L133c8a.  call temp:= `step`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L133c90.  v0:= temp @kind object;
  #L133c92.  call temp:= `getFirst`(v0) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L133c98.  v1:= temp;
  #L133c9a.  call temp:= `getLast`(v0) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L133ca0.  v2:= temp;
  #L133ca2.  call temp:= `getStep`(v0) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L133ca8.  v0:= temp;
  #L133caa.  if v0 < 0 then goto L133cb4;
  #L133cae.  if v1 > v2 then goto L133cd8;
  #L133cb2.  goto L133cb8;
  #L133cb4.  if v1 < v2 then goto L133cd8;
  #L133cb8.  v3:= v8[v1] @kind object;
  #L133cbc.  v4:= v1 + 1;
  #L133cc0.  v4:= v8[v4] @kind object;
  #L133cc4.  call `a`(v7, v3) @signature `Lokhttp3/Headers$Companion;.a:(Ljava/lang/String;)V` @kind direct;
  #L133cca.  call `b`(v7, v4, v3) @signature `Lokhttp3/Headers$Companion;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L133cd0.  if v1 == v2 then goto L133cd8;
  #L133cd4.  v1:= v1 + v0 @kind int;
  #L133cd6.  goto L133cb8;
  #L133cd8.  v0:= new `okhttp3.Headers`;
  #L133cdc.  v1:= 0I;
  #L133cde.  call `<init>`(v0, v8, v1) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L133ce4.  return v0 @kind object;
  #L133ce6.  v8:= new `java.lang.IllegalArgumentException`;
  #L133cea.  v0:= "Expected alternating header names and values" @kind object;
  #L133cee.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L133cf4.  v0:= temp @kind object;
  #L133cf6.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L133cfc.  throw v8;
}
