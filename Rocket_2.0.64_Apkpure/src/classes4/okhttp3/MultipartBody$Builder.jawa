record `okhttp3.MultipartBody$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `okio.ByteString` `okhttp3.MultipartBody$Builder.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody$Builder.b` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.MultipartBody$Builder.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v2 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L137df8.  v0:= 0I;
  #L137dfa.  v1:= 1I;
  #L137dfc.  call `<init>`(v2, v0, v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L137e02.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L137e14.  v0:= "boundary" @kind object;
  #L137e18.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137e1e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L137e24.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L137e28.  call temp:= `encodeUtf8`(v0, v2) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L137e2e.  v2:= temp @kind object;
  #L137e30.  v1.`okhttp3.MultipartBody$Builder.a` @type ^`okio.ByteString` := v2 @kind object;
  #L137e34.  v2:= `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` @kind object;
  #L137e38.  v1.`okhttp3.MultipartBody$Builder.b` @type ^`okhttp3.MediaType` := v2 @kind object;
  #L137e3c.  v2:= new `java.util.ArrayList`;
  #L137e40.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L137e46.  v1.`okhttp3.MultipartBody$Builder.c` @type ^`java.util.List` := v2 @kind object;
  #L137e4a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `kotlin.jvm.internal.DefaultConstructorMarker` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L137e5c.  v2:= v2 ^& 1;
  #L137e60.  if v2 == 0 then goto L137e7e;
  #L137e64.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L137e6a.  v1:= temp @kind object;
  #L137e6c.  call temp:= `toString`(v1) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L137e72.  v1:= temp @kind object;
  #L137e74.  v2:= "UUID.randomUUID().toString()" @kind object;
  #L137e78.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137e7e.  call `<init>`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L137e84.  return @kind void;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137c90.  v0:= "name" @kind object;
  #L137c94.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137c9a.  v0:= "value" @kind object;
  #L137c9e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137ca4.  v0:= `@@okhttp3.MultipartBody$Part.Companion` @type ^`okhttp3.MultipartBody$Part$Companion` @kind object;
  #L137ca8.  call temp:= `createFormData`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Part$Companion;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @kind virtual;
  #L137cae.  v2:= temp @kind object;
  #L137cb0.  call temp:= `addPart`(v1, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L137cb6.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `okhttp3.RequestBody` v4 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137cc8.  v0:= "name" @kind object;
  #L137ccc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137cd2.  v0:= "body" @kind object;
  #L137cd6.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137cdc.  v0:= `@@okhttp3.MultipartBody$Part.Companion` @type ^`okhttp3.MultipartBody$Part$Companion` @kind object;
  #L137ce0.  call temp:= `createFormData`(v0, v2, v3, v4) @signature `Lokhttp3/MultipartBody$Part$Companion;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind virtual;
  #L137ce6.  v2:= temp @kind object;
  #L137ce8.  call temp:= `addPart`(v1, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L137cee.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object, `okhttp3.RequestBody` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137d00.  v0:= "body" @kind object;
  #L137d04.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137d0a.  v0:= `@@okhttp3.MultipartBody$Part.Companion` @type ^`okhttp3.MultipartBody$Part$Companion` @kind object;
  #L137d0e.  call temp:= `create`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Part$Companion;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind virtual;
  #L137d14.  v2:= temp @kind object;
  #L137d16.  call temp:= `addPart`(v1, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L137d1c.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.MultipartBody$Part` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137d30.  v0:= "part" @kind object;
  #L137d34.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137d3a.  v0:= v1.`okhttp3.MultipartBody$Builder.c` @type ^`java.util.List` @kind object;
  #L137d3e.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L137d44.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137d58.  v0:= "body" @kind object;
  #L137d5c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137d62.  v0:= `@@okhttp3.MultipartBody$Part.Companion` @type ^`okhttp3.MultipartBody$Part$Companion` @kind object;
  #L137d66.  call temp:= `create`(v0, v2) @signature `Lokhttp3/MultipartBody$Part$Companion;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind virtual;
  #L137d6c.  v2:= temp @kind object;
  #L137d6e.  call temp:= `addPart`(v1, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L137d74.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody` `build`(`okhttp3.MultipartBody$Builder` v4 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.build:()Lokhttp3/MultipartBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L137c34.  v0:= v4.`okhttp3.MultipartBody$Builder.c` @type ^`java.util.List` @kind object;
  #L137c38.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L137c3e.  v0:= temp;
  #L137c40.  v0:= v0 ^~ 1;
  #L137c44.  if v0 == 0 then goto L137c68;
  #L137c48.  v0:= new `okhttp3.MultipartBody`;
  #L137c4c.  v1:= v4.`okhttp3.MultipartBody$Builder.a` @type ^`okio.ByteString` @kind object;
  #L137c50.  v2:= v4.`okhttp3.MultipartBody$Builder.b` @type ^`okhttp3.MediaType` @kind object;
  #L137c54.  v3:= v4.`okhttp3.MultipartBody$Builder.c` @type ^`java.util.List` @kind object;
  #L137c58.  call temp:= `toImmutableList`(v3) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L137c5e.  v3:= temp @kind object;
  #L137c60.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @kind direct;
  #L137c66.  return v0 @kind object;
  #L137c68.  v0:= new `java.lang.IllegalStateException`;
  #L137c6c.  v1:= "Multipart body must have at least one part." @kind object;
  #L137c70.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L137c76.  v1:= temp @kind object;
  #L137c78.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L137c7e.  throw v0;
}
procedure `okhttp3.MultipartBody$Builder` `setType`(`okhttp3.MultipartBody$Builder` v2 @kind this, `okhttp3.MediaType` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.setType:(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L137d88.  v0:= "type" @kind object;
  #L137d8c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137d92.  call temp:= `type`(v3) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @kind virtual;
  #L137d98.  v0:= temp @kind object;
  #L137d9a.  v1:= "multipart" @kind object;
  #L137d9e.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L137da4.  v0:= temp;
  #L137da6.  if v0 == 0 then goto L137db0;
  #L137daa.  v2.`okhttp3.MultipartBody$Builder.b` @type ^`okhttp3.MediaType` := v3 @kind object;
  #L137dae.  return v2 @kind object;
  #L137db0.  v0:= new `java.lang.StringBuilder`;
  #L137db4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L137dba.  v1:= "multipart != " @kind object;
  #L137dbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L137dc4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L137dca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L137dd0.  v3:= temp @kind object;
  #L137dd2.  v0:= new `java.lang.IllegalArgumentException`;
  #L137dd6.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L137ddc.  v3:= temp @kind object;
  #L137dde.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L137de4.  throw v0;
}
