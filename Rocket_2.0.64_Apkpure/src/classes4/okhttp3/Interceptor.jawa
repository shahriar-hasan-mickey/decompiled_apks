record `okhttp3.Interceptor` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `okhttp3.Interceptor$Companion` `@@okhttp3.Interceptor.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Interceptor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L13765c.  v0:= `@@okhttp3.Interceptor$Companion.a` @type ^`okhttp3.Interceptor$Companion` @kind object;
  #L137660.  `@@okhttp3.Interceptor.Companion` @type ^`okhttp3.Interceptor$Companion` := v0 @kind object;
  #L137664.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.Interceptor$Chain` v0 @kind object) @signature `Lokhttp3/Interceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
