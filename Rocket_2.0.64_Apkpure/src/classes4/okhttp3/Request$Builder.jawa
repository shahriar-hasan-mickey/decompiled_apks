record `okhttp3.Request$Builder` @kind class @AccessFlag PUBLIC {
  `okhttp3.HttpUrl` `okhttp3.Request$Builder.a` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.Request$Builder.b` @AccessFlag PRIVATE;
  `okhttp3.Headers$Builder` `okhttp3.Request$Builder.c` @AccessFlag PRIVATE;
  `okhttp3.RequestBody` `okhttp3.Request$Builder.d` @AccessFlag PRIVATE;
  `java.util.Map` `okhttp3.Request$Builder.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L13b4e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13b4ee.  v0:= new `java.util.LinkedHashMap`;
  #L13b4f2.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L13b4f8.  v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` := v0 @kind object;
  #L13b4fc.  v0:= "GET" @kind object;
  #L13b500.  v1.`okhttp3.Request$Builder.b` @type ^`java.lang.String` := v0 @kind object;
  #L13b504.  v0:= new `okhttp3.Headers$Builder`;
  #L13b508.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L13b50e.  v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L13b512.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L13b524.  v0:= "request" @kind object;
  #L13b528.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b52e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13b534.  v0:= new `java.util.LinkedHashMap`;
  #L13b538.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L13b53e.  v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` := v0 @kind object;
  #L13b542.  call temp:= `url`(v2) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L13b548.  v0:= temp @kind object;
  #L13b54a.  v1.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L13b54e.  call temp:= `method`(v2) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L13b554.  v0:= temp @kind object;
  #L13b556.  v1.`okhttp3.Request$Builder.b` @type ^`java.lang.String` := v0 @kind object;
  #L13b55a.  call temp:= `body`(v2) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L13b560.  v0:= temp @kind object;
  #L13b562.  v1.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L13b566.  call temp:= `getTags$okhttp`(v2) @signature `Lokhttp3/Request;.getTags$okhttp:()Ljava/util/Map;` @kind virtual;
  #L13b56c.  v0:= temp @kind object;
  #L13b56e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L13b574.  v0:= temp;
  #L13b576.  if v0 == 0 then goto L13b586;
  #L13b57a.  v0:= new `java.util.LinkedHashMap`;
  #L13b57e.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L13b584.  goto L13b596;
  #L13b586.  call temp:= `getTags$okhttp`(v2) @signature `Lokhttp3/Request;.getTags$okhttp:()Ljava/util/Map;` @kind virtual;
  #L13b58c.  v0:= temp @kind object;
  #L13b58e.  call temp:= `toMutableMap`(v0) @signature `Lkotlin/collections/MapsKt;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L13b594.  v0:= temp @kind object;
  #L13b596.  v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` := v0 @kind object;
  #L13b59a.  call temp:= `headers`(v2) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L13b5a0.  v2:= temp @kind object;
  #L13b5a2.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L13b5a8.  v2:= temp @kind object;
  #L13b5aa.  v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` := v2 @kind object;
  #L13b5ae.  return @kind void;
}
procedure `okhttp3.Request$Builder` `delete$default`(`okhttp3.Request$Builder` v0 @kind object, `okhttp3.RequestBody` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Request$Builder;.delete$default:(Lokhttp3/Request$Builder;Lokhttp3/RequestBody;ILjava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13b088.  if v3 != 0 then goto L13b0a2;
  #L13b08c.  v2:= v2 ^& 1;
  #L13b090.  if v2 == 0 then goto L13b098;
  #L13b094.  v1:= `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` @kind object;
  #L13b098.  call temp:= `delete`(v0, v1) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b09e.  v0:= temp @kind object;
  #L13b0a0.  return v0 @kind object;
  #L13b0a2.  v0:= new `java.lang.UnsupportedOperationException`;
  #L13b0a6.  v1:= "Super calls with default arguments not supported in this target, function: delete" @kind object;
  #L13b0aa.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13b0b0.  throw v0;
}
procedure `okhttp3.Request$Builder` `addHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b008.  v0:= "name" @kind object;
  #L13b00c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b012.  v0:= "value" @kind object;
  #L13b016.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b01c.  v0:= v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L13b020.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L13b026.  return v1 @kind object;
}
procedure `okhttp3.Request` `build`(`okhttp3.Request$Builder` v7 @kind this) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13afa8.  v1:= v7.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L13afac.  if v1 == 0 then goto L13afde;
  #L13afb0.  v2:= v7.`okhttp3.Request$Builder.b` @type ^`java.lang.String` @kind object;
  #L13afb4.  v0:= v7.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L13afb8.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L13afbe.  v3:= temp @kind object;
  #L13afc0.  v4:= v7.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` @kind object;
  #L13afc4.  v0:= v7.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L13afc8.  call temp:= `toImmutableMap`(v0) @signature `Lokhttp3/internal/Util;.toImmutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L13afce.  v5:= temp @kind object;
  #L13afd0.  v6:= new `okhttp3.Request`;
  #L13afd4.  v0:= v6 @kind object;
  #L13afd6.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/RequestBody;Ljava/util/Map;)V` @kind direct;
  #L13afdc.  return v6 @kind object;
  #L13afde.  v0:= new `java.lang.IllegalStateException`;
  #L13afe2.  v1:= "url == null" @kind object;
  #L13afe6.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13afec.  v1:= temp @kind object;
  #L13afee.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13aff4.  throw v0;
}
procedure `okhttp3.Request$Builder` `cacheControl`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.CacheControl` v3 @kind object) @signature `Lokhttp3/Request$Builder;.cacheControl:(Lokhttp3/CacheControl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13b038.  v0:= "cacheControl" @kind object;
  #L13b03c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b042.  call temp:= `toString`(v3) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b048.  v3:= temp @kind object;
  #L13b04a.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L13b050.  v0:= temp;
  #L13b052.  if v0 != 0 then goto L13b05a;
  #L13b056.  v0:= 1I;
  #L13b058.  goto L13b05c;
  #L13b05a.  v0:= 0I;
  #L13b05c.  v1:= "Cache-Control" @kind object;
  #L13b060.  if v0 == 0 then goto L13b06e;
  #L13b064.  call temp:= `removeHeader`(v2, v1) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b06a.  v3:= temp @kind object;
  #L13b06c.  goto L13b076;
  #L13b06e.  call temp:= `header`(v2, v1, v3) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b074.  v3:= temp @kind object;
  #L13b076.  return v3 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.delete:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13b0c4.  v0:= 0I;
  #L13b0c6.  v1:= 1I;
  #L13b0c8.  call temp:= `delete$default`(v2, v0, v1, v0) @signature `Lokhttp3/Request$Builder;.delete$default:(Lokhttp3/Request$Builder;Lokhttp3/RequestBody;ILjava/lang/Object;)Lokhttp3/Request$Builder;` @kind static;
  #L13b0ce.  v0:= temp @kind object;
  #L13b0d0.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b0e4.  v0:= "DELETE" @kind object;
  #L13b0e8.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b0ee.  v2:= temp @kind object;
  #L13b0f0.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `get`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.get:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13b104.  v0:= "GET" @kind object;
  #L13b108.  v1:= 0I;
  #L13b10a.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b110.  v0:= temp @kind object;
  #L13b112.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `getBody$okhttp`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.getBody$okhttp:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13b4d0.  v0:= v1.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` @kind object;
  #L13b4d4.  return v0 @kind object;
}
procedure `okhttp3.Headers$Builder` `getHeaders$okhttp`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.getHeaders$okhttp:()Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13af78.  v0:= v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L13af7c.  return v0 @kind object;
}
procedure `java.lang.String` `getMethod$okhttp`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.getMethod$okhttp:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13af48.  v0:= v1.`okhttp3.Request$Builder.b` @type ^`java.lang.String` @kind object;
  #L13af4c.  return v0 @kind object;
}
procedure `java.util.Map` `getTags$okhttp`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.getTags$okhttp:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13af60.  v0:= v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L13af64.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `getUrl$okhttp`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.getUrl$okhttp:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13af90.  v0:= v1.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L13af94.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `head`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.head:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13b124.  v0:= "HEAD" @kind object;
  #L13b128.  v1:= 0I;
  #L13b12a.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b130.  v0:= temp @kind object;
  #L13b132.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `header`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b144.  v0:= "name" @kind object;
  #L13b148.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b14e.  v0:= "value" @kind object;
  #L13b152.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b158.  v0:= v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L13b15c.  call temp:= `set`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L13b162.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `headers`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b174.  v0:= "headers" @kind object;
  #L13b178.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b17e.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L13b184.  v2:= temp @kind object;
  #L13b186.  v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` := v2 @kind object;
  #L13b18a.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `method`(`okhttp3.Request$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `okhttp3.RequestBody` v5 @kind object) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13b19c.  v0:= "method" @kind object;
  #L13b1a0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b1a6.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L13b1ac.  v0:= temp;
  #L13b1ae.  v1:= 1I;
  #L13b1b0.  if v0 <= 0 then goto L13b1b8;
  #L13b1b4.  v0:= 1I;
  #L13b1b6.  goto L13b1ba;
  #L13b1b8.  v0:= 0I;
  #L13b1ba.  if v0 == 0 then goto L13b264;
  #L13b1be.  v0:= "method " @kind object;
  #L13b1c2.  if v5 != 0 then goto L13b212;
  #L13b1c6.  call temp:= `requiresRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L13b1cc.  v2:= temp;
  #L13b1ce.  v1:= v1 ^~ v2 @kind int;
  #L13b1d0.  if v1 == 0 then goto L13b1d6;
  #L13b1d4.  goto L13b21e;
  #L13b1d6.  v5:= new `java.lang.StringBuilder`;
  #L13b1da.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13b1e0.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b1e6.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b1ec.  v4:= " must have a request body." @kind object;
  #L13b1f0.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b1f6.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b1fc.  v4:= temp @kind object;
  #L13b1fe.  v5:= new `java.lang.IllegalArgumentException`;
  #L13b202.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b208.  v4:= temp @kind object;
  #L13b20a.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13b210.  throw v5;
  #L13b212.  call temp:= `permitsRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L13b218.  v1:= temp;
  #L13b21a.  if v1 == 0 then goto L13b228;
  #L13b21e.  v3.`okhttp3.Request$Builder.b` @type ^`java.lang.String` := v4 @kind object;
  #L13b222.  v3.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` := v5 @kind object;
  #L13b226.  return v3 @kind object;
  #L13b228.  v5:= new `java.lang.StringBuilder`;
  #L13b22c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13b232.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b238.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b23e.  v4:= " must not have a request body." @kind object;
  #L13b242.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b248.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b24e.  v4:= temp @kind object;
  #L13b250.  v5:= new `java.lang.IllegalArgumentException`;
  #L13b254.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b25a.  v4:= temp @kind object;
  #L13b25c.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13b262.  throw v5;
  #L13b264.  v4:= new `java.lang.IllegalArgumentException`;
  #L13b268.  v5:= "method.isEmpty() == true" @kind object;
  #L13b26c.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b272.  v5:= temp @kind object;
  #L13b274.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13b27a.  throw v4;
}
procedure `okhttp3.Request$Builder` `patch`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.patch:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b28c.  v0:= "body" @kind object;
  #L13b290.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b296.  v0:= "PATCH" @kind object;
  #L13b29a.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b2a0.  v2:= temp @kind object;
  #L13b2a2.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `post`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.post:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b2b4.  v0:= "body" @kind object;
  #L13b2b8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b2be.  v0:= "POST" @kind object;
  #L13b2c2.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b2c8.  v2:= temp @kind object;
  #L13b2ca.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `put`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.put:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b2dc.  v0:= "body" @kind object;
  #L13b2e0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b2e6.  v0:= "PUT" @kind object;
  #L13b2ea.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b2f0.  v2:= temp @kind object;
  #L13b2f2.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `removeHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b304.  v0:= "name" @kind object;
  #L13b308.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b30e.  v0:= v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L13b312.  call temp:= `removeAll`(v0, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L13b318.  return v1 @kind object;
}
procedure `void` `setBody$okhttp`(`okhttp3.Request$Builder` v0 @kind this, `okhttp3.RequestBody` v1 @kind object) @signature `Lokhttp3/Request$Builder;.setBody$okhttp:(Lokhttp3/RequestBody;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L13b5c0.  v0.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` := v1 @kind object;
  #L13b5c4.  return @kind void;
}
procedure `void` `setHeaders$okhttp`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Headers$Builder` v2 @kind object) @signature `Lokhttp3/Request$Builder;.setHeaders$okhttp:(Lokhttp3/Headers$Builder;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13b5d8.  v0:= "<set-?>" @kind object;
  #L13b5dc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b5e2.  v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` := v2 @kind object;
  #L13b5e6.  return @kind void;
}
procedure `void` `setMethod$okhttp`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request$Builder;.setMethod$okhttp:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13b5f8.  v0:= "<set-?>" @kind object;
  #L13b5fc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b602.  v1.`okhttp3.Request$Builder.b` @type ^`java.lang.String` := v2 @kind object;
  #L13b606.  return @kind void;
}
procedure `void` `setTags$okhttp`(`okhttp3.Request$Builder` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lokhttp3/Request$Builder;.setTags$okhttp:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13b618.  v0:= "<set-?>" @kind object;
  #L13b61c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b622.  v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` := v2 @kind object;
  #L13b626.  return @kind void;
}
procedure `void` `setUrl$okhttp`(`okhttp3.Request$Builder` v0 @kind this, `okhttp3.HttpUrl` v1 @kind object) @signature `Lokhttp3/Request$Builder;.setUrl$okhttp:(Lokhttp3/HttpUrl;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L13b638.  v0.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` := v1 @kind object;
  #L13b63c.  return @kind void;
}
procedure `okhttp3.Request$Builder` `tag`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Class;Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b32c.  v0:= "type" @kind object;
  #L13b330.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b336.  if v3 != 0 then goto L13b346;
  #L13b33a.  v3:= v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L13b33e.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13b344.  goto L13b37c;
  #L13b346.  v0:= v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L13b34a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L13b350.  v0:= temp;
  #L13b352.  if v0 == 0 then goto L13b364;
  #L13b356.  v0:= new `java.util.LinkedHashMap`;
  #L13b35a.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L13b360.  v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` := v0 @kind object;
  #L13b364.  v0:= v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L13b368.  call temp:= `cast`(v2, v3) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13b36e.  v3:= temp @kind object;
  #L13b370.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L13b376.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13b37c.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `tag`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b390.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L13b394.  call temp:= `tag`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Class;Ljava/lang/Object;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b39a.  v2:= temp @kind object;
  #L13b39c.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13b3b0.  v0:= "url" @kind object;
  #L13b3b4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b3ba.  v0:= "ws:" @kind object;
  #L13b3be.  v1:= 1I;
  #L13b3c0.  call temp:= `startsWith`(v4, v0, v1) @signature `Lkotlin/text/StringsKt;.startsWith:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13b3c6.  v0:= temp;
  #L13b3c8.  v2:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L13b3cc.  if v0 == 0 then goto L13b404;
  #L13b3d0.  v0:= new `java.lang.StringBuilder`;
  #L13b3d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13b3da.  v1:= "http:" @kind object;
  #L13b3de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b3e4.  v1:= 3I;
  #L13b3e6.  call temp:= `substring`(v4, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L13b3ec.  v4:= temp @kind object;
  #L13b3ee.  call `checkNotNullExpressionValue`(v4, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b3f4.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b3fa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b400.  v4:= temp @kind object;
  #L13b402.  goto L13b446;
  #L13b404.  v0:= "wss:" @kind object;
  #L13b408.  call temp:= `startsWith`(v4, v0, v1) @signature `Lkotlin/text/StringsKt;.startsWith:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13b40e.  v0:= temp;
  #L13b410.  if v0 == 0 then goto L13b446;
  #L13b414.  v0:= new `java.lang.StringBuilder`;
  #L13b418.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13b41e.  v1:= "https:" @kind object;
  #L13b422.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b428.  v1:= 4I;
  #L13b42a.  call temp:= `substring`(v4, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L13b430.  v4:= temp @kind object;
  #L13b432.  call `checkNotNullExpressionValue`(v4, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b438.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b43e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b444.  v4:= temp @kind object;
  #L13b446.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L13b44a.  call temp:= `get`(v0, v4) @signature `Lokhttp3/HttpUrl$Companion;.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L13b450.  v4:= temp @kind object;
  #L13b452.  call temp:= `url`(v3, v4) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b458.  v4:= temp @kind object;
  #L13b45a.  return v4 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v2 @kind this, `java.net.URL` v3 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Ljava/net/URL;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13b46c.  v0:= "url" @kind object;
  #L13b470.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b476.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L13b47a.  call temp:= `toString`(v3) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b480.  v3:= temp @kind object;
  #L13b482.  v1:= "url.toString()" @kind object;
  #L13b486.  call `checkNotNullExpressionValue`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b48c.  call temp:= `get`(v0, v3) @signature `Lokhttp3/HttpUrl$Companion;.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L13b492.  v3:= temp @kind object;
  #L13b494.  call temp:= `url`(v2, v3) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L13b49a.  v3:= temp @kind object;
  #L13b49c.  return v3 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13b4b0.  v0:= "url" @kind object;
  #L13b4b4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b4ba.  v1.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` := v2 @kind object;
  #L13b4be.  return v1 @kind object;
}
