record `okhttp3.MultipartBody` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `okhttp3.MediaType` `okhttp3.MultipartBody.a` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.MultipartBody.b` @AccessFlag PRIVATE;
  `okio.ByteString` `okhttp3.MultipartBody.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody.d` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.MultipartBody.e` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.ALTERNATIVE` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MultipartBody$Companion` `@@okhttp3.MultipartBody.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.DIGEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.FORM` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.MIXED` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.PARALLEL` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MultipartBody;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L138558.  v0:= new `okhttp3.MultipartBody$Companion`;
  #L13855c.  v1:= 0I;
  #L13855e.  call `<init>`(v0, v1) @signature `Lokhttp3/MultipartBody$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L138564.  `@@okhttp3.MultipartBody.Companion` @type ^`okhttp3.MultipartBody$Companion` := v0 @kind object;
  #L138568.  v0:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L13856c.  v1:= "multipart/mixed" @kind object;
  #L138570.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L138576.  v1:= temp @kind object;
  #L138578.  `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` := v1 @kind object;
  #L13857c.  v1:= "multipart/alternative" @kind object;
  #L138580.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L138586.  v1:= temp @kind object;
  #L138588.  `@@okhttp3.MultipartBody.ALTERNATIVE` @type ^`okhttp3.MediaType` := v1 @kind object;
  #L13858c.  v1:= "multipart/digest" @kind object;
  #L138590.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L138596.  v1:= temp @kind object;
  #L138598.  `@@okhttp3.MultipartBody.DIGEST` @type ^`okhttp3.MediaType` := v1 @kind object;
  #L13859c.  v1:= "multipart/parallel" @kind object;
  #L1385a0.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L1385a6.  v1:= temp @kind object;
  #L1385a8.  `@@okhttp3.MultipartBody.PARALLEL` @type ^`okhttp3.MediaType` := v1 @kind object;
  #L1385ac.  v1:= "multipart/form-data" @kind object;
  #L1385b0.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L1385b6.  v0:= temp @kind object;
  #L1385b8.  `@@okhttp3.MultipartBody.FORM` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1385bc.  v0:= 2I;
  #L1385be.  v1:= new `byte`[v0];
  #L1385c2.  v2:= 58I;
  #L1385c6.  v2:= (`byte`) v2 @kind i2b;
  #L1385c8.  v3:= 0I;
  #L1385ca.  v1[v3]:= v2 @kind byte;
  #L1385ce.  v2:= 32I;
  #L1385d2.  v2:= (`byte`) v2 @kind i2b;
  #L1385d4.  v4:= 1I;
  #L1385d6.  v1[v4]:= v2 @kind byte;
  #L1385da.  `@@okhttp3.MultipartBody.f` @type ^`byte`[] := v1 @kind object;
  #L1385de.  v1:= new `byte`[v0];
  #L1385e2.  v2:= 13I;
  #L1385e6.  v2:= (`byte`) v2 @kind i2b;
  #L1385e8.  v1[v3]:= v2 @kind byte;
  #L1385ec.  v2:= 10I;
  #L1385f0.  v2:= (`byte`) v2 @kind i2b;
  #L1385f2.  v1[v4]:= v2 @kind byte;
  #L1385f6.  `@@okhttp3.MultipartBody.g` @type ^`byte`[] := v1 @kind object;
  #L1385fa.  v0:= new `byte`[v0];
  #L1385fe.  v1:= 45I;
  #L138602.  v1:= (`byte`) v1 @kind i2b;
  #L138604.  v0[v3]:= v1 @kind byte;
  #L138608.  v0[v4]:= v1 @kind byte;
  #L13860c.  `@@okhttp3.MultipartBody.h` @type ^`byte`[] := v0 @kind object;
  #L138610.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody` v1 @kind this, `okio.ByteString` v2 @kind object, `okhttp3.MediaType` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L138624.  v0:= "boundaryByteString" @kind object;
  #L138628.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13862e.  v0:= "type" @kind object;
  #L138632.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L138638.  v0:= "parts" @kind object;
  #L13863c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L138642.  call `<init>`(v1) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L138648.  v1.`okhttp3.MultipartBody.c` @type ^`okio.ByteString` := v2 @kind object;
  #L13864c.  v1.`okhttp3.MultipartBody.d` @type ^`okhttp3.MediaType` := v3 @kind object;
  #L138650.  v1.`okhttp3.MultipartBody.e` @type ^`java.util.List` := v4 @kind object;
  #L138654.  v2:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L138658.  v4:= new `java.lang.StringBuilder`;
  #L13865c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L138662.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138668.  v3:= "; boundary=" @kind object;
  #L13866c.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138672.  call temp:= `boundary`(v1) @signature `Lokhttp3/MultipartBody;.boundary:()Ljava/lang/String;` @kind virtual;
  #L138678.  v3:= temp @kind object;
  #L13867a.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138680.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L138686.  v3:= temp @kind object;
  #L138688.  call temp:= `get`(v2, v3) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L13868e.  v2:= temp @kind object;
  #L138690.  v1.`okhttp3.MultipartBody.a` @type ^`okhttp3.MediaType` := v2 @kind object;
  #L138694.  v2:= -1L;
  #L138698.  v1.`okhttp3.MultipartBody.b` @type ^`long` := v2 @kind wide;
  #L13869c.  return @kind void;
}
procedure `long` `a`(`okhttp3.MultipartBody` v12 @kind this, `okio.BufferedSink` v13 @kind object, `boolean` v14 ) @signature `Lokhttp3/MultipartBody;.a:(Lokio/BufferedSink;Z)J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L138338.  if v14 == 0 then goto L13834a;
  #L13833c.  v13:= new `okio.Buffer`;
  #L138340.  call `<init>`(v13) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L138346.  v0:= v13 @kind object;
  #L138348.  goto L13834c;
  #L13834a.  v0:= 0I;
  #L13834c.  v1:= v12.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L138350.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L138356.  v1:= temp;
  #L138358.  v2:= 0I;
  #L13835a.  v3:= 0L;
  #L13835e.  v5:= 0I;
  #L138360.  if v5 >= v1 then goto L138494;
  #L138364.  v6:= v12.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L138368.  call temp:= `get`(v6, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L13836e.  v6:= temp @kind object;
  #L138370.  v6:= (`okhttp3.MultipartBody$Part`) v6 @kind object;
  #L138374.  call temp:= `headers`(v6) @signature `Lokhttp3/MultipartBody$Part;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L13837a.  v7:= temp @kind object;
  #L13837c.  call temp:= `body`(v6) @signature `Lokhttp3/MultipartBody$Part;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L138382.  v6:= temp @kind object;
  #L138384.  call `checkNotNull`(v13) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L13838a.  v8:= `@@okhttp3.MultipartBody.h` @type ^`byte`[] @kind object;
  #L13838e.  call temp:= `write`(v13, v8) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L138394.  v8:= v12.`okhttp3.MultipartBody.c` @type ^`okio.ByteString` @kind object;
  #L138398.  call temp:= `write`(v13, v8) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L13839e.  v8:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L1383a2.  call temp:= `write`(v13, v8) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1383a8.  if v7 == 0 then goto L1383f6;
  #L1383ac.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1383b2.  v8:= temp;
  #L1383b4.  v9:= 0I;
  #L1383b6.  if v9 >= v8 then goto L1383f6;
  #L1383ba.  call temp:= `name`(v7, v9) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1383c0.  v10:= temp @kind object;
  #L1383c2.  call temp:= `writeUtf8`(v13, v10) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1383c8.  v10:= temp @kind object;
  #L1383ca.  v11:= `@@okhttp3.MultipartBody.f` @type ^`byte`[] @kind object;
  #L1383ce.  call temp:= `write`(v10, v11) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1383d4.  v10:= temp @kind object;
  #L1383d6.  call temp:= `value`(v7, v9) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1383dc.  v11:= temp @kind object;
  #L1383de.  call temp:= `writeUtf8`(v10, v11) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1383e4.  v10:= temp @kind object;
  #L1383e6.  v11:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L1383ea.  call temp:= `write`(v10, v11) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1383f0.  v9:= v9 + 1;
  #L1383f4.  goto L1383b6;
  #L1383f6.  call temp:= `contentType`(v6) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L1383fc.  v7:= temp @kind object;
  #L1383fe.  if v7 == 0 then goto L138428;
  #L138402.  v8:= "Content-Type: " @kind object;
  #L138406.  call temp:= `writeUtf8`(v13, v8) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L13840c.  v8:= temp @kind object;
  #L13840e.  call temp:= `toString`(v7) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L138414.  v7:= temp @kind object;
  #L138416.  call temp:= `writeUtf8`(v8, v7) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L13841c.  v7:= temp @kind object;
  #L13841e.  v8:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L138422.  call temp:= `write`(v7, v8) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L138428.  call temp:= `contentLength`(v6) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L13842e.  v7:= temp @kind wide;
  #L138430.  v9:= -1L;
  #L138434.  v11:= lcmp(v7, v9);
  #L138438.  if v11 == 0 then goto L13845c;
  #L13843c.  v9:= "Content-Length: " @kind object;
  #L138440.  call temp:= `writeUtf8`(v13, v9) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L138446.  v9:= temp @kind object;
  #L138448.  call temp:= `writeDecimalLong`(v9, v7) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L13844e.  v9:= temp @kind object;
  #L138450.  v10:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L138454.  call temp:= `write`(v9, v10) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L13845a.  goto L13846e;
  #L13845c.  if v14 == 0 then goto L13846e;
  #L138460.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L138466.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L13846c.  return v9 @kind wide;
  #L13846e.  v9:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L138472.  call temp:= `write`(v13, v9) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L138478.  if v14 == 0 then goto L138480;
  #L13847c.  v3:= v3 + v7 @kind long;
  #L13847e.  goto L138486;
  #L138480.  call `writeTo`(v6, v13) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L138486.  call temp:= `write`(v13, v9) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L13848c.  v5:= v5 + 1;
  #L138490.  goto L138360;
  #L138494.  call `checkNotNull`(v13) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L13849a.  v1:= `@@okhttp3.MultipartBody.h` @type ^`byte`[] @kind object;
  #L13849e.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1384a4.  v2:= v12.`okhttp3.MultipartBody.c` @type ^`okio.ByteString` @kind object;
  #L1384a8.  call temp:= `write`(v13, v2) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L1384ae.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1384b4.  v1:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L1384b8.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1384be.  if v14 == 0 then goto L1384d8;
  #L1384c2.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1384c8.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1384ce.  v13:= temp @kind wide;
  #L1384d0.  v3:= v3 + v13 @kind long;
  #L1384d2.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L1384d8.  return v3 @kind wide;
}
procedure `java.lang.String` `-deprecated_boundary`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.-deprecated_boundary:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L138298.  call temp:= `boundary`(v1) @signature `Lokhttp3/MultipartBody;.boundary:()Ljava/lang/String;` @kind virtual;
  #L13829e.  v0:= temp @kind object;
  #L1382a0.  return v0 @kind object;
}
procedure `java.util.List` `-deprecated_parts`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.-deprecated_parts:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1382d4.  v0:= v1.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L1382d8.  return v0 @kind object;
}
procedure `int` `-deprecated_size`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.-deprecated_size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13825c.  call temp:= `size`(v1) @signature `Lokhttp3/MultipartBody;.size:()I` @kind virtual;
  #L138262.  v0:= temp;
  #L138264.  return v0;
}
procedure `okhttp3.MediaType` `-deprecated_type`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.-deprecated_type:()Lokhttp3/MediaType;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1384ec.  v0:= v1.`okhttp3.MultipartBody.d` @type ^`okhttp3.MediaType` @kind object;
  #L1384f0.  return v0 @kind object;
}
procedure `java.lang.String` `boundary`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.boundary:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1382b4.  v0:= v1.`okhttp3.MultipartBody.c` @type ^`okio.ByteString` @kind object;
  #L1382b8.  call temp:= `utf8`(v0) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1382be.  v0:= temp @kind object;
  #L1382c0.  return v0 @kind object;
}
procedure `long` `contentLength`(`okhttp3.MultipartBody` v5 @kind this) @signature `Lokhttp3/MultipartBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L138304.  v0:= v5.`okhttp3.MultipartBody.b` @type ^`long` @kind wide;
  #L138308.  v2:= -1L;
  #L13830c.  v4:= lcmp(v0, v2);
  #L138310.  if v4 != 0 then goto L138324;
  #L138314.  v0:= 0I;
  #L138316.  v1:= 1I;
  #L138318.  call temp:= `a`(v5, v0, v1) @signature `Lokhttp3/MultipartBody;.a:(Lokio/BufferedSink;Z)J` @kind direct;
  #L13831e.  v0:= temp @kind wide;
  #L138320.  v5.`okhttp3.MultipartBody.b` @type ^`long` := v0 @kind wide;
  #L138324.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L138504.  v0:= v1.`okhttp3.MultipartBody.a` @type ^`okhttp3.MediaType` @kind object;
  #L138508.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `part`(`okhttp3.MultipartBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/MultipartBody;.part:(I)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L138534.  v0:= v1.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L138538.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L13853e.  v2:= temp @kind object;
  #L138540.  v2:= (`okhttp3.MultipartBody$Part`) v2 @kind object;
  #L138544.  return v2 @kind object;
}
procedure `java.util.List` `parts`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.parts:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1382ec.  v0:= v1.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L1382f0.  return v0 @kind object;
}
procedure `int` `size`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L138278.  v0:= v1.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L13827c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L138282.  v0:= temp;
  #L138284.  return v0;
}
procedure `okhttp3.MediaType` `type`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.type:()Lokhttp3/MediaType;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13851c.  v0:= v1.`okhttp3.MultipartBody.d` @type ^`okhttp3.MediaType` @kind object;
  #L138520.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.MultipartBody` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lokhttp3/MultipartBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1386b0.  v0:= "sink" @kind object;
  #L1386b4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1386ba.  v0:= 0I;
  #L1386bc.  call temp:= `a`(v1, v2, v0) @signature `Lokhttp3/MultipartBody;.a:(Lokio/BufferedSink;Z)J` @kind direct;
  #L1386c2.  return @kind void;
}
