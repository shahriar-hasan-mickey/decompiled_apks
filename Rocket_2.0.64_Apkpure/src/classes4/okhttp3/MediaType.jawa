record `okhttp3.MediaType` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.MediaType.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String`[] `okhttp3.MediaType.d` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType$Companion` `@@okhttp3.MediaType.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MediaType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L137bb0.  v0:= new `okhttp3.MediaType$Companion`;
  #L137bb4.  v1:= 0I;
  #L137bb6.  call `<init>`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L137bbc.  `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` := v0 @kind object;
  #L137bc0.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L137bc4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L137bca.  v0:= temp @kind object;
  #L137bcc.  `@@okhttp3.MediaType.e` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L137bd0.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L137bd4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L137bda.  v0:= temp @kind object;
  #L137bdc.  `@@okhttp3.MediaType.f` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L137be0.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String`[] v4 @kind object) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L137bf4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L137bfa.  v0.`okhttp3.MediaType.a` @type ^`java.lang.String` := v1 @kind object;
  #L137bfe.  v0.`okhttp3.MediaType.b` @type ^`java.lang.String` := v2 @kind object;
  #L137c02.  v0.`okhttp3.MediaType.c` @type ^`java.lang.String` := v3 @kind object;
  #L137c06.  v0.`okhttp3.MediaType.d` @type ^`java.lang.String`[] := v4 @kind object;
  #L137c0a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String`[] v4 @kind object, `kotlin.jvm.internal.DefaultConstructorMarker` v5 @kind object) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L137c1c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V` @kind direct;
  #L137c22.  return @kind void;
}
procedure `java.util.regex.Pattern` `access$getPARAMETER$cp`() @signature `Lokhttp3/MediaType;.access$getPARAMETER$cp:()Ljava/util/regex/Pattern;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L137b40.  v0:= `@@okhttp3.MediaType.f` @type ^`java.util.regex.Pattern` @kind object;
  #L137b44.  return v0 @kind object;
}
procedure `java.util.regex.Pattern` `access$getTYPE_SUBTYPE$cp`() @signature `Lokhttp3/MediaType;.access$getTYPE_SUBTYPE$cp:()Ljava/util/regex/Pattern;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L137b58.  v0:= `@@okhttp3.MediaType.e` @type ^`java.util.regex.Pattern` @kind object;
  #L137b5c.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset$default`(`okhttp3.MediaType` v0 @kind object, `java.nio.charset.Charset` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lokhttp3/MediaType;.charset$default:(Lokhttp3/MediaType;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L137ac0.  v2:= v2 ^& 1;
  #L137ac4.  if v2 == 0 then goto L137aca;
  #L137ac8.  v1:= 0I;
  #L137aca.  call temp:= `charset`(v0, v1) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L137ad0.  v0:= temp @kind object;
  #L137ad2.  return v0 @kind object;
}
procedure `okhttp3.MediaType` `get`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L137b70.  v0:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L137b74.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L137b7a.  v1:= temp @kind object;
  #L137b7c.  return v1 @kind object;
}
procedure `okhttp3.MediaType` `parse`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L137b90.  v0:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L137b94.  call temp:= `parse`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L137b9a.  v1:= temp @kind object;
  #L137b9c.  return v1 @kind object;
}
procedure `java.lang.String` `-deprecated_subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.-deprecated_subtype:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1379c4.  v0:= v1.`okhttp3.MediaType.c` @type ^`java.lang.String` @kind object;
  #L1379c8.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.-deprecated_type:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1379dc.  v0:= v1.`okhttp3.MediaType.b` @type ^`java.lang.String` @kind object;
  #L1379e0.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v2 @kind this) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L137ae4.  v0:= 0I;
  #L137ae6.  v1:= 1I;
  #L137ae8.  call temp:= `charset$default`(v2, v0, v1, v0) @signature `Lokhttp3/MediaType;.charset$default:(Lokhttp3/MediaType;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/nio/charset/Charset;` @kind static;
  #L137aee.  v0:= temp @kind object;
  #L137af0.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137b04.  v0:= "charset" @kind object;
  #L137b08.  call temp:= `parameter`(v1, v0) @signature `Lokhttp3/MediaType;.parameter:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L137b0e.  v0:= temp @kind object;
  #L137b10.  if v0 == 0 then goto L137b1c;
  #L137b14.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L137b1a.  v2:= temp @kind object;
  #L137b1c.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L137b14..L137b1c] goto L137b1c;
}
procedure `boolean` `equals`(`okhttp3.MediaType` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/MediaType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13796c.  v0:= instanceof @variable v2 @type ^`okhttp3.MediaType` @kind boolean;
  #L137970.  if v0 == 0 then goto L137990;
  #L137974.  v2:= (`okhttp3.MediaType`) v2 @kind object;
  #L137978.  v2:= v2.`okhttp3.MediaType.a` @type ^`java.lang.String` @kind object;
  #L13797c.  v0:= v1.`okhttp3.MediaType.a` @type ^`java.lang.String` @kind object;
  #L137980.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L137986.  v2:= temp;
  #L137988.  if v2 == 0 then goto L137990;
  #L13798c.  v2:= 1I;
  #L13798e.  goto L137992;
  #L137990.  v2:= 0I;
  #L137992.  return v2;
}
procedure `int` `hashCode`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1379a4.  v0:= v1.`okhttp3.MediaType.a` @type ^`java.lang.String` @kind object;
  #L1379a8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1379ae.  v0:= temp;
  #L1379b0.  return v0;
}
procedure `java.lang.String` `parameter`(`okhttp3.MediaType` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lokhttp3/MediaType;.parameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1379f4.  v0:= "name" @kind object;
  #L1379f8.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1379fe.  v0:= v5.`okhttp3.MediaType.d` @type ^`java.lang.String`[] @kind object;
  #L137a02.  call temp:= `getIndices`(v0) @signature `Lkotlin/collections/ArraysKt;.getIndices:([Ljava/lang/Object;)Lkotlin/ranges/IntRange;` @kind static;
  #L137a08.  v0:= temp @kind object;
  #L137a0a.  v1:= 2I;
  #L137a0c.  call temp:= `step`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L137a12.  v0:= temp @kind object;
  #L137a14.  call temp:= `getFirst`(v0) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L137a1a.  v1:= temp;
  #L137a1c.  call temp:= `getLast`(v0) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L137a22.  v2:= temp;
  #L137a24.  call temp:= `getStep`(v0) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L137a2a.  v0:= temp;
  #L137a2c.  if v0 < 0 then goto L137a36;
  #L137a30.  if v1 > v2 then goto L137a64;
  #L137a34.  goto L137a3a;
  #L137a36.  if v1 < v2 then goto L137a64;
  #L137a3a.  v3:= v5.`okhttp3.MediaType.d` @type ^`java.lang.String`[] @kind object;
  #L137a3e.  v3:= v3[v1] @kind object;
  #L137a42.  v4:= 1I;
  #L137a44.  call temp:= `equals`(v3, v6, v4) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L137a4a.  v3:= temp;
  #L137a4c.  if v3 == 0 then goto L137a5c;
  #L137a50.  v6:= v5.`okhttp3.MediaType.d` @type ^`java.lang.String`[] @kind object;
  #L137a54.  v1:= v1 + v4 @kind int;
  #L137a56.  v6:= v6[v1] @kind object;
  #L137a5a.  return v6 @kind object;
  #L137a5c.  if v1 == v2 then goto L137a64;
  #L137a60.  v1:= v1 + v0 @kind int;
  #L137a62.  goto L137a3a;
  #L137a64.  v6:= 0I;
  #L137a66.  return v6 @kind object;
}
procedure `java.lang.String` `subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.subtype:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137a78.  v0:= v1.`okhttp3.MediaType.c` @type ^`java.lang.String` @kind object;
  #L137a7c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L137a90.  v0:= v1.`okhttp3.MediaType.a` @type ^`java.lang.String` @kind object;
  #L137a94.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137aa8.  v0:= v1.`okhttp3.MediaType.b` @type ^`java.lang.String` @kind object;
  #L137aac.  return v0 @kind object;
}
