record `okhttp3.CertificatePinner` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.CertificatePinner.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.tls.CertificateChainCleaner` `okhttp3.CertificatePinner.b` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.CertificatePinner$Companion` `@@okhttp3.CertificatePinner.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.CertificatePinner` `@@okhttp3.CertificatePinner.DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/CertificatePinner;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L12e6b0.  v0:= new `okhttp3.CertificatePinner$Companion`;
  #L12e6b4.  v1:= 0I;
  #L12e6b6.  call `<init>`(v0, v1) @signature `Lokhttp3/CertificatePinner$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L12e6bc.  `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` := v0 @kind object;
  #L12e6c0.  v0:= new `okhttp3.CertificatePinner$Builder`;
  #L12e6c4.  call `<init>`(v0) @signature `Lokhttp3/CertificatePinner$Builder;.<init>:()V` @kind direct;
  #L12e6ca.  call temp:= `build`(v0) @signature `Lokhttp3/CertificatePinner$Builder;.build:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L12e6d0.  v0:= temp @kind object;
  #L12e6d2.  `@@okhttp3.CertificatePinner.DEFAULT` @type ^`okhttp3.CertificatePinner` := v0 @kind object;
  #L12e6d6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner` v1 @kind this, `java.util.Set` v2 @kind object, `okhttp3.internal.tls.CertificateChainCleaner` v3 @kind object) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12e6e8.  v0:= "pins" @kind object;
  #L12e6ec.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e6f2.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12e6f8.  v1.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` := v2 @kind object;
  #L12e6fc.  v1.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v3 @kind object;
  #L12e700.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner` v0 @kind this, `java.util.Set` v1 @kind object, `okhttp3.internal.tls.CertificateChainCleaner` v2 @kind object, `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L12e714.  v3:= v3 ^& 2;
  #L12e718.  if v3 == 0 then goto L12e71e;
  #L12e71c.  v2:= 0I;
  #L12e71e.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V` @kind direct;
  #L12e724.  return @kind void;
}
procedure `java.lang.String` `pin`(`java.security.cert.Certificate` v1 @kind object) @signature `Lokhttp3/CertificatePinner;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L12e564.  v0:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L12e568.  call temp:= `pin`(v0, v1) @signature `Lokhttp3/CertificatePinner$Companion;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind virtual;
  #L12e56e.  v1:= temp @kind object;
  #L12e570.  return v1 @kind object;
}
procedure `okio.ByteString` `sha1Hash`(`java.security.cert.X509Certificate` v1 @kind object) @signature `Lokhttp3/CertificatePinner;.sha1Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L12e670.  v0:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L12e674.  call temp:= `sha1Hash`(v0, v1) @signature `Lokhttp3/CertificatePinner$Companion;.sha1Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L12e67a.  v1:= temp @kind object;
  #L12e67c.  return v1 @kind object;
}
procedure `okio.ByteString` `sha256Hash`(`java.security.cert.X509Certificate` v1 @kind object) @signature `Lokhttp3/CertificatePinner;.sha256Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L12e690.  v0:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L12e694.  call temp:= `sha256Hash`(v0, v1) @signature `Lokhttp3/CertificatePinner$Companion;.sha256Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L12e69a.  v1:= temp @kind object;
  #L12e69c.  return v1 @kind object;
}
procedure `void` `check`(`okhttp3.CertificatePinner` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12e9a8.  v0:= "hostname" @kind object;
  #L12e9ac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e9b2.  v0:= "peerCertificates" @kind object;
  #L12e9b6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e9bc.  v0:= new `okhttp3.CertificatePinner$a`;
  #L12e9c0.  call `<init>`(v0, v1, v3, v2) @signature `Lokhttp3/CertificatePinner$a;.<init>:(Lokhttp3/CertificatePinner;Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L12e9c6.  call `check$okhttp`(v1, v2, v0) @signature `Lokhttp3/CertificatePinner;.check$okhttp:(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V` @kind virtual;
  #L12e9cc.  return @kind void;
}
procedure `void` `check`(`okhttp3.CertificatePinner` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.Certificate`[] v3 @kind object) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;[Ljava/security/cert/Certificate;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12e974.  v0:= "hostname" @kind object;
  #L12e978.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e97e.  v0:= "peerCertificates" @kind object;
  #L12e982.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e988.  call temp:= `toList`(v3) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L12e98e.  v3:= temp @kind object;
  #L12e990.  call `check`(v1, v2, v3) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L12e996.  return @kind void;
}
procedure `void` `check$okhttp`(`okhttp3.CertificatePinner` v10 @kind this, `java.lang.String` v11 @kind object, `kotlin.jvm.functions.Function0` v12 @kind object) @signature `Lokhttp3/CertificatePinner;.check$okhttp:(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L12e738.  v0:= "hostname" @kind object;
  #L12e73c.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e742.  v0:= "cleanedPeerCertificatesFn" @kind object;
  #L12e746.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e74c.  call temp:= `findMatchingPins`(v10, v11) @signature `Lokhttp3/CertificatePinner;.findMatchingPins:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L12e752.  v0:= temp @kind object;
  #L12e754.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L12e75a.  v1:= temp;
  #L12e75c.  if v1 == 0 then goto L12e762;
  #L12e760.  return @kind void;
  #L12e762.  call temp:= `invoke`(v12) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L12e768.  v12:= temp @kind object;
  #L12e76a.  v12:= (`java.util.List`) v12 @kind object;
  #L12e76e.  call temp:= `iterator`(v12) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12e774.  v1:= temp @kind object;
  #L12e776.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12e77c.  v2:= temp;
  #L12e77e.  if v2 == 0 then goto L12e878;
  #L12e782.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12e788.  v2:= temp @kind object;
  #L12e78a.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L12e78e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12e794.  v3:= temp @kind object;
  #L12e796.  v4:= 0I;
  #L12e798.  v5:= v4 @kind object;
  #L12e79a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12e7a0.  v6:= temp;
  #L12e7a2.  if v6 == 0 then goto L12e776;
  #L12e7a6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12e7ac.  v6:= temp @kind object;
  #L12e7ae.  v6:= (`okhttp3.CertificatePinner$Pin`) v6 @kind object;
  #L12e7b2.  call temp:= `getHashAlgorithm`(v6) @signature `Lokhttp3/CertificatePinner$Pin;.getHashAlgorithm:()Ljava/lang/String;` @kind virtual;
  #L12e7b8.  v7:= temp @kind object;
  #L12e7ba.  call temp:= `hashCode`(v7) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L12e7c0.  v8:= temp;
  #L12e7c2.  v9:= -903629273I;
  #L12e7c8.  if v8 == v9 then goto L12e80c;
  #L12e7cc.  v9:= 3528965I;
  #L12e7d2.  if v8 != v9 then goto L12e842;
  #L12e7d6.  v8:= "sha1" @kind object;
  #L12e7da.  call temp:= `equals`(v7, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12e7e0.  v7:= temp;
  #L12e7e2.  if v7 == 0 then goto L12e842;
  #L12e7e6.  if v5 != 0 then goto L12e7f6;
  #L12e7ea.  v5:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L12e7ee.  call temp:= `sha1Hash`(v5, v2) @signature `Lokhttp3/CertificatePinner$Companion;.sha1Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L12e7f4.  v5:= temp @kind object;
  #L12e7f6.  call temp:= `getHash`(v6) @signature `Lokhttp3/CertificatePinner$Pin;.getHash:()Lokio/ByteString;` @kind virtual;
  #L12e7fc.  v6:= temp @kind object;
  #L12e7fe.  call temp:= `areEqual`(v6, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12e804.  v6:= temp;
  #L12e806.  if v6 == 0 then goto L12e79a;
  #L12e80a.  return @kind void;
  #L12e80c.  v8:= "sha256" @kind object;
  #L12e810.  call temp:= `equals`(v7, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12e816.  v7:= temp;
  #L12e818.  if v7 == 0 then goto L12e842;
  #L12e81c.  if v4 != 0 then goto L12e82c;
  #L12e820.  v4:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L12e824.  call temp:= `sha256Hash`(v4, v2) @signature `Lokhttp3/CertificatePinner$Companion;.sha256Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L12e82a.  v4:= temp @kind object;
  #L12e82c.  call temp:= `getHash`(v6) @signature `Lokhttp3/CertificatePinner$Pin;.getHash:()Lokio/ByteString;` @kind virtual;
  #L12e832.  v6:= temp @kind object;
  #L12e834.  call temp:= `areEqual`(v6, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12e83a.  v6:= temp;
  #L12e83c.  if v6 == 0 then goto L12e79a;
  #L12e840.  return @kind void;
  #L12e842.  v11:= new `java.lang.AssertionError`;
  #L12e846.  v12:= new `java.lang.StringBuilder`;
  #L12e84a.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12e850.  v0:= "unsupported hashAlgorithm: " @kind object;
  #L12e854.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e85a.  call temp:= `getHashAlgorithm`(v6) @signature `Lokhttp3/CertificatePinner$Pin;.getHashAlgorithm:()Ljava/lang/String;` @kind virtual;
  #L12e860.  v0:= temp @kind object;
  #L12e862.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e868.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e86e.  v12:= temp @kind object;
  #L12e870.  call `<init>`(v11, v12) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L12e876.  throw v11;
  #L12e878.  v1:= new `java.lang.StringBuilder`;
  #L12e87c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12e882.  v2:= "Certificate pinning failure!" @kind object;
  #L12e886.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e88c.  v2:= "\n  Peer certificate chain:" @kind object;
  #L12e890.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e896.  call temp:= `iterator`(v12) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12e89c.  v12:= temp @kind object;
  #L12e89e.  call temp:= `hasNext`(v12) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12e8a4.  v2:= temp;
  #L12e8a6.  v3:= "\n    " @kind object;
  #L12e8aa.  if v2 == 0 then goto L12e8fe;
  #L12e8ae.  call temp:= `next`(v12) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12e8b4.  v2:= temp @kind object;
  #L12e8b6.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L12e8ba.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e8c0.  v3:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L12e8c4.  call temp:= `pin`(v3, v2) @signature `Lokhttp3/CertificatePinner$Companion;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind virtual;
  #L12e8ca.  v3:= temp @kind object;
  #L12e8cc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e8d2.  v3:= ": " @kind object;
  #L12e8d6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e8dc.  call temp:= `getSubjectDN`(v2) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L12e8e2.  v2:= temp @kind object;
  #L12e8e4.  v3:= "element.subjectDN" @kind object;
  #L12e8e8.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e8ee.  call temp:= `getName`(v2) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L12e8f4.  v2:= temp @kind object;
  #L12e8f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e8fc.  goto L12e89e;
  #L12e8fe.  v12:= "\n  Pinned certificates for " @kind object;
  #L12e902.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e908.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e90e.  v11:= ":" @kind object;
  #L12e912.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e918.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12e91e.  v11:= temp @kind object;
  #L12e920.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12e926.  v12:= temp;
  #L12e928.  if v12 == 0 then goto L12e946;
  #L12e92c.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12e932.  v12:= temp @kind object;
  #L12e934.  v12:= (`okhttp3.CertificatePinner$Pin`) v12 @kind object;
  #L12e938.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e93e.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e944.  goto L12e920;
  #L12e946.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e94c.  v11:= temp @kind object;
  #L12e94e.  v12:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L12e952.  call `checkNotNullExpressionValue`(v11, v12) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e958.  v12:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L12e95c.  call `<init>`(v12, v11) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12e962.  throw v12;
}
procedure `boolean` `equals`(`okhttp3.CertificatePinner` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/CertificatePinner;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12e4d8.  v0:= instanceof @variable v3 @type ^`okhttp3.CertificatePinner` @kind boolean;
  #L12e4dc.  if v0 == 0 then goto L12e510;
  #L12e4e0.  v3:= (`okhttp3.CertificatePinner`) v3 @kind object;
  #L12e4e4.  v0:= v3.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L12e4e8.  v1:= v2.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L12e4ec.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12e4f2.  v0:= temp;
  #L12e4f4.  if v0 == 0 then goto L12e510;
  #L12e4f8.  v3:= v3.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L12e4fc.  v0:= v2.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L12e500.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12e506.  v3:= temp;
  #L12e508.  if v3 == 0 then goto L12e510;
  #L12e50c.  v3:= 1I;
  #L12e50e.  goto L12e512;
  #L12e510.  v3:= 0I;
  #L12e512.  return v3;
}
procedure `java.util.List` `findMatchingPins`(`okhttp3.CertificatePinner` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/CertificatePinner;.findMatchingPins:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12e584.  v0:= "hostname" @kind object;
  #L12e588.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e58e.  v0:= v4.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L12e592.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L12e598.  v1:= temp @kind object;
  #L12e59a.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12e5a0.  v0:= temp @kind object;
  #L12e5a2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12e5a8.  v2:= temp;
  #L12e5aa.  if v2 == 0 then goto L12e5ee;
  #L12e5ae.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12e5b4.  v2:= temp @kind object;
  #L12e5b6.  v3:= v2 @kind object;
  #L12e5b8.  v3:= (`okhttp3.CertificatePinner$Pin`) v3 @kind object;
  #L12e5bc.  call temp:= `matchesHostname`(v3, v5) @signature `Lokhttp3/CertificatePinner$Pin;.matchesHostname:(Ljava/lang/String;)Z` @kind virtual;
  #L12e5c2.  v3:= temp;
  #L12e5c4.  if v3 == 0 then goto L12e5a2;
  #L12e5c8.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L12e5ce.  v3:= temp;
  #L12e5d0.  if v3 == 0 then goto L12e5de;
  #L12e5d4.  v1:= new `java.util.ArrayList`;
  #L12e5d8.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L12e5de.  call temp:= `asMutableList`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L12e5e4.  v3:= temp @kind object;
  #L12e5e6.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L12e5ec.  goto L12e5a2;
  #L12e5ee.  return v1 @kind object;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `getCertificateChainCleaner$okhttp`(`okhttp3.CertificatePinner` v1 @kind this) @signature `Lokhttp3/CertificatePinner;.getCertificateChainCleaner$okhttp:()Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12e658.  v0:= v1.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L12e65c.  return v0 @kind object;
}
procedure `java.util.Set` `getPins`(`okhttp3.CertificatePinner` v1 @kind this) @signature `Lokhttp3/CertificatePinner;.getPins:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12e600.  v0:= v1.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L12e604.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.CertificatePinner` v2 @kind this) @signature `Lokhttp3/CertificatePinner;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12e524.  v0:= v2.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L12e528.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L12e52e.  v0:= temp;
  #L12e530.  v1:= 1517I;
  #L12e534.  v1:= v1 + v0 @kind int;
  #L12e536.  v1:= v1 * 41;
  #L12e53a.  v0:= v2.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L12e53e.  if v0 == 0 then goto L12e54c;
  #L12e542.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L12e548.  v0:= temp;
  #L12e54a.  goto L12e54e;
  #L12e54c.  v0:= 0I;
  #L12e54e.  v1:= v1 + v0 @kind int;
  #L12e550.  return v1;
}
procedure `okhttp3.CertificatePinner` `withCertificateChainCleaner$okhttp`(`okhttp3.CertificatePinner` v2 @kind this, `okhttp3.internal.tls.CertificateChainCleaner` v3 @kind object) @signature `Lokhttp3/CertificatePinner;.withCertificateChainCleaner$okhttp:(Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12e618.  v0:= "certificateChainCleaner" @kind object;
  #L12e61c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e622.  v0:= v2.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L12e626.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12e62c.  v0:= temp;
  #L12e62e.  if v0 == 0 then goto L12e636;
  #L12e632.  v0:= v2 @kind object;
  #L12e634.  goto L12e644;
  #L12e636.  v0:= new `okhttp3.CertificatePinner`;
  #L12e63a.  v1:= v2.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L12e63e.  call `<init>`(v0, v1, v3) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V` @kind direct;
  #L12e644.  return v0 @kind object;
}
