record `okhttp3.Cookie$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie$Builder.a` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.Cookie$Builder.b` @AccessFlag PRIVATE;
  `long` `okhttp3.Cookie$Builder.c` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.Cookie$Builder.d` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.Cookie$Builder.e` @AccessFlag PRIVATE;
  `boolean` `okhttp3.Cookie$Builder.f` @AccessFlag PRIVATE;
  `boolean` `okhttp3.Cookie$Builder.g` @AccessFlag PRIVATE;
  `boolean` `okhttp3.Cookie$Builder.h` @AccessFlag PRIVATE;
  `boolean` `okhttp3.Cookie$Builder.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.Cookie$Builder` v2 @kind this) @signature `Lokhttp3/Cookie$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L130960.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L130966.  v0:= 253402300799999L;
  #L130970.  v2.`okhttp3.Cookie$Builder.c` @type ^`long` := v0 @kind wide;
  #L130974.  v0:= "/" @kind object;
  #L130978.  v2.`okhttp3.Cookie$Builder.e` @type ^`java.lang.String` := v0 @kind object;
  #L13097c.  return @kind void;
}
procedure `okhttp3.Cookie$Builder` `a`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lokhttp3/Cookie$Builder;.a:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L13077c.  call temp:= `toCanonicalHost`(v3) @signature `Lokhttp3/internal/HostnamesKt;.toCanonicalHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L130782.  v0:= temp @kind object;
  #L130784.  if v0 == 0 then goto L130792;
  #L130788.  v2.`okhttp3.Cookie$Builder.d` @type ^`java.lang.String` := v0 @kind object;
  #L13078c.  v2.`okhttp3.Cookie$Builder.i` @type ^`boolean` := v4 @kind boolean;
  #L130790.  return v2 @kind object;
  #L130792.  v4:= new `java.lang.IllegalArgumentException`;
  #L130796.  v0:= new `java.lang.StringBuilder`;
  #L13079a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1307a0.  v1:= "unexpected domain: " @kind object;
  #L1307a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1307aa.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1307b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1307b6.  v3:= temp @kind object;
  #L1307b8.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1307be.  throw v4;
}
procedure `okhttp3.Cookie` `build`(`okhttp3.Cookie$Builder` v13 @kind this) @signature `Lokhttp3/Cookie$Builder;.build:()Lokhttp3/Cookie;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1306f0.  v12:= new `okhttp3.Cookie`;
  #L1306f4.  v1:= v13.`okhttp3.Cookie$Builder.a` @type ^`java.lang.String` @kind object;
  #L1306f8.  v0:= "builder.name == null" @kind object;
  #L1306fc.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L130702.  v2:= v13.`okhttp3.Cookie$Builder.b` @type ^`java.lang.String` @kind object;
  #L130706.  v0:= "builder.value == null" @kind object;
  #L13070a.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L130710.  v3:= v13.`okhttp3.Cookie$Builder.c` @type ^`long` @kind wide;
  #L130714.  v5:= v13.`okhttp3.Cookie$Builder.d` @type ^`java.lang.String` @kind object;
  #L130718.  v0:= "builder.domain == null" @kind object;
  #L13071c.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L130722.  v6:= v13.`okhttp3.Cookie$Builder.e` @type ^`java.lang.String` @kind object;
  #L130726.  v7:= v13.`okhttp3.Cookie$Builder.f` @type ^`boolean` @kind boolean;
  #L13072a.  v8:= v13.`okhttp3.Cookie$Builder.g` @type ^`boolean` @kind boolean;
  #L13072e.  v9:= v13.`okhttp3.Cookie$Builder.h` @type ^`boolean` @kind boolean;
  #L130732.  v10:= v13.`okhttp3.Cookie$Builder.i` @type ^`boolean` @kind boolean;
  #L130736.  v11:= 0I;
  #L130738.  v0:= v12 @kind object;
  #L13073a.  call `<init>`(v0, v1, v2, v3, v5, v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/Cookie;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L130740.  return v12 @kind object;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L130754.  v0:= "domain" @kind object;
  #L130758.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13075e.  v0:= 0I;
  #L130760.  call temp:= `a`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.a:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L130766.  v2:= temp @kind object;
  #L130768.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `expiresAt`(`okhttp3.Cookie$Builder` v3 @kind this, `long` v4 ) @signature `Lokhttp3/Cookie$Builder;.expiresAt:(J)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1307d0.  v0:= 0L;
  #L1307d4.  v2:= lcmp(v4, v0);
  #L1307d8.  if v2 > 0 then goto L1307e0;
  #L1307dc.  v4:= -9223372036854775808L;
  #L1307e0.  v0:= 253402300799999L;
  #L1307ea.  v2:= lcmp(v4, v0);
  #L1307ee.  if v2 <= 0 then goto L1307f4;
  #L1307f2.  v4:= v0 @kind wide;
  #L1307f4.  v3.`okhttp3.Cookie$Builder.c` @type ^`long` := v4 @kind wide;
  #L1307f8.  v4:= 1I;
  #L1307fa.  v3.`okhttp3.Cookie$Builder.h` @type ^`boolean` := v4 @kind boolean;
  #L1307fe.  return v3 @kind object;
}
procedure `okhttp3.Cookie$Builder` `hostOnlyDomain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.hostOnlyDomain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L130810.  v0:= "domain" @kind object;
  #L130814.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13081a.  v0:= 1I;
  #L13081c.  call temp:= `a`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.a:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L130822.  v2:= temp @kind object;
  #L130824.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `httpOnly`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.httpOnly:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L130838.  v0:= 1I;
  #L13083a.  v1.`okhttp3.Cookie$Builder.g` @type ^`boolean` := v0 @kind boolean;
  #L13083e.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `name`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.name:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L130850.  v0:= "name" @kind object;
  #L130854.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13085a.  call temp:= `trim`(v2) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L130860.  v0:= temp @kind object;
  #L130862.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L130868.  v0:= temp @kind object;
  #L13086a.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L130870.  v0:= temp;
  #L130872.  if v0 == 0 then goto L13087c;
  #L130876.  v1.`okhttp3.Cookie$Builder.a` @type ^`java.lang.String` := v2 @kind object;
  #L13087a.  return v1 @kind object;
  #L13087c.  v2:= new `java.lang.IllegalArgumentException`;
  #L130880.  v0:= "name is not trimmed" @kind object;
  #L130884.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13088a.  v0:= temp @kind object;
  #L13088c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L130892.  throw v2;
}
procedure `okhttp3.Cookie$Builder` `path`(`okhttp3.Cookie$Builder` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/Cookie$Builder;.path:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1308a4.  v0:= "path" @kind object;
  #L1308a8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1308ae.  v0:= "/" @kind object;
  #L1308b2.  v1:= 0I;
  #L1308b4.  v2:= 2I;
  #L1308b6.  v3:= 0I;
  #L1308b8.  call temp:= `startsWith$default`(v5, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1308be.  v0:= temp;
  #L1308c0.  if v0 == 0 then goto L1308ca;
  #L1308c4.  v4.`okhttp3.Cookie$Builder.e` @type ^`java.lang.String` := v5 @kind object;
  #L1308c8.  return v4 @kind object;
  #L1308ca.  v5:= new `java.lang.IllegalArgumentException`;
  #L1308ce.  v0:= "path must start with '/'" @kind object;
  #L1308d2.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1308d8.  v0:= temp @kind object;
  #L1308da.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1308e0.  throw v5;
}
procedure `okhttp3.Cookie$Builder` `secure`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.secure:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1308f4.  v0:= 1I;
  #L1308f6.  v1.`okhttp3.Cookie$Builder.f` @type ^`boolean` := v0 @kind boolean;
  #L1308fa.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `value`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.value:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13090c.  v0:= "value" @kind object;
  #L130910.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L130916.  call temp:= `trim`(v2) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L13091c.  v0:= temp @kind object;
  #L13091e.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L130924.  v0:= temp @kind object;
  #L130926.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13092c.  v0:= temp;
  #L13092e.  if v0 == 0 then goto L130938;
  #L130932.  v1.`okhttp3.Cookie$Builder.b` @type ^`java.lang.String` := v2 @kind object;
  #L130936.  return v1 @kind object;
  #L130938.  v2:= new `java.lang.IllegalArgumentException`;
  #L13093c.  v0:= "value is not trimmed" @kind object;
  #L130940.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L130946.  v0:= temp @kind object;
  #L130948.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13094e.  throw v2;
}
