record `okhttp3.CacheControl$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.CacheControl$Companion` v0 @kind this) @signature `Lokhttp3/CacheControl$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L12d188.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12d18e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CacheControl$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/CacheControl$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L12d1a0.  call `<init>`(v0) @signature `Lokhttp3/CacheControl$Companion;.<init>:()V` @kind direct;
  #L12d1a6.  return @kind void;
}
procedure `int` `a`(`okhttp3.CacheControl$Companion` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 ) @signature `Lokhttp3/CacheControl$Companion;.a:(Ljava/lang/String;Ljava/lang/String;I)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L12ce0c.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12ce12.  v0:= temp;
  #L12ce14.  if v8 >= v0 then goto L12ce3a;
  #L12ce18.  call temp:= `charAt`(v6, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L12ce1e.  v1:= temp;
  #L12ce20.  v2:= 0I;
  #L12ce22.  v3:= 2I;
  #L12ce24.  v4:= 0I;
  #L12ce26.  call temp:= `contains$default`(v7, v1, v2, v3, v4) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;CZILjava/lang/Object;)Z` @kind static;
  #L12ce2c.  v1:= temp;
  #L12ce2e.  if v1 == 0 then goto L12ce34;
  #L12ce32.  return v8;
  #L12ce34.  v8:= v8 + 1;
  #L12ce38.  goto L12ce14;
  #L12ce3a.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12ce40.  v6:= temp;
  #L12ce42.  return v6;
}
procedure `okhttp3.CacheControl` `parse`(`okhttp3.CacheControl$Companion` v31 @kind this, `okhttp3.Headers` v32 @kind object) @signature `Lokhttp3/CacheControl$Companion;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;

  #L12ce54.  v0:= v31 @kind object;
  #L12ce58.  v1:= v32 @kind object;
  #L12ce5c.  v2:= "headers" @kind object;
  #L12ce60.  call `checkNotNullParameter`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ce66.  call temp:= `size`(v32) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L12ce6c.  v2:= temp;
  #L12ce6e.  v6:= 1I;
  #L12ce70.  v7:= 0I;
  #L12ce72.  v8:= 1I;
  #L12ce74.  v9:= 0I;
  #L12ce76.  v10:= 0I;
  #L12ce78.  v11:= 0I;
  #L12ce7a.  v12:= -1I;
  #L12ce7c.  v13:= -1I;
  #L12ce7e.  v14:= 0I;
  #L12ce80.  v15:= 0I;
  #L12ce82.  v16:= 0I;
  #L12ce86.  v17:= -1I;
  #L12ce8a.  v18:= -1I;
  #L12ce8e.  v19:= 0I;
  #L12ce92.  v20:= 0I;
  #L12ce96.  v21:= 0I;
  #L12ce9a.  if v7 >= v2 then goto L12d156;
  #L12ce9e.  call temp:= `name`(v1, v7) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L12cea4.  v3:= temp @kind object;
  #L12cea6.  call temp:= `value`(v1, v7) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L12ceac.  v5:= temp @kind object;
  #L12ceae.  v4:= "Cache-Control" @kind object;
  #L12ceb2.  call temp:= `equals`(v3, v4, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12ceb8.  v4:= temp;
  #L12ceba.  if v4 == 0 then goto L12cec8;
  #L12cebe.  if v9 == 0 then goto L12cec4;
  #L12cec2.  goto L12ced8;
  #L12cec4.  v9:= v5 @kind object;
  #L12cec6.  goto L12ceda;
  #L12cec8.  v4:= "Pragma" @kind object;
  #L12cecc.  call temp:= `equals`(v3, v4, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12ced2.  v3:= temp;
  #L12ced4.  if v3 == 0 then goto L12d140;
  #L12ced8.  v8:= 0I;
  #L12ceda.  v3:= 0I;
  #L12cedc.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12cee2.  v4:= temp;
  #L12cee4.  if v3 >= v4 then goto L12d136;
  #L12cee8.  v4:= "=,;" @kind object;
  #L12ceec.  call temp:= `a`(v0, v5, v4, v3) @signature `Lokhttp3/CacheControl$Companion;.a:(Ljava/lang/String;Ljava/lang/String;I)I` @kind direct;
  #L12cef2.  v4:= temp;
  #L12cef4.  call temp:= `substring`(v5, v3, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L12cefa.  v3:= temp @kind object;
  #L12cefc.  v6:= "(this as java.lang.Strinâ€¦ing(startIndex, endIndex)" @kind object;
  #L12cf00.  call `checkNotNullExpressionValue`(v3, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12cf06.  v1:= "null cannot be cast to non-null type kotlin.CharSequence" @kind object;
  #L12cf0a.  call temp:= `requireNonNull`(v3, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L12cf10.  call temp:= `trim`(v3) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L12cf16.  v3:= temp @kind object;
  #L12cf18.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L12cf1e.  v3:= temp @kind object;
  #L12cf20.  v29:= v2;
  #L12cf24.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12cf2a.  v2:= temp;
  #L12cf2c.  if v4 == v2 then goto L12cfea;
  #L12cf30.  call temp:= `charAt`(v5, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L12cf36.  v2:= temp;
  #L12cf38.  v30:= v8;
  #L12cf3c.  v8:= 44I;
  #L12cf40.  if v2 == v8 then goto L12cfee;
  #L12cf44.  call temp:= `charAt`(v5, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L12cf4a.  v2:= temp;
  #L12cf4c.  v8:= 59I;
  #L12cf50.  if v2 != v8 then goto L12cf56;
  #L12cf54.  goto L12cfee;
  #L12cf56.  v4:= v4 + 1;
  #L12cf5a.  call temp:= `indexOfNonWhitespace`(v5, v4) @signature `Lokhttp3/internal/Util;.indexOfNonWhitespace:(Ljava/lang/String;I)I` @kind static;
  #L12cf60.  v2:= temp;
  #L12cf62.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12cf68.  v4:= temp;
  #L12cf6a.  if v2 >= v4 then goto L12cfb8;
  #L12cf6e.  call temp:= `charAt`(v5, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L12cf74.  v4:= temp;
  #L12cf76.  v8:= 34I;
  #L12cf7a.  if v4 != v8 then goto L12cfb8;
  #L12cf7e.  v2:= v2 + 1;
  #L12cf82.  v24:= 34I;
  #L12cf86.  v26:= 0I;
  #L12cf8a.  v27:= 4I;
  #L12cf8e.  v28:= 0I;
  #L12cf92.  v23:= v5 @kind object;
  #L12cf96.  v25:= v2;
  #L12cf9a.  call temp:= `indexOf$default`(v23, v24, v25, v26, v27, v28) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L12cfa0.  v1:= temp;
  #L12cfa2.  call temp:= `substring`(v5, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L12cfa8.  v2:= temp @kind object;
  #L12cfaa.  call `checkNotNullExpressionValue`(v2, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12cfb0.  v4:= 1I;
  #L12cfb2.  v1:= v1 + v4 @kind int;
  #L12cfb4.  v4:= v1;
  #L12cfb6.  goto L12cff4;
  #L12cfb8.  v4:= ",;" @kind object;
  #L12cfbc.  call temp:= `a`(v0, v5, v4, v2) @signature `Lokhttp3/CacheControl$Companion;.a:(Ljava/lang/String;Ljava/lang/String;I)I` @kind direct;
  #L12cfc2.  v4:= temp;
  #L12cfc4.  call temp:= `substring`(v5, v2, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L12cfca.  v2:= temp @kind object;
  #L12cfcc.  call `checkNotNullExpressionValue`(v2, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12cfd2.  call temp:= `requireNonNull`(v2, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L12cfd8.  call temp:= `trim`(v2) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L12cfde.  v1:= temp @kind object;
  #L12cfe0.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L12cfe6.  v2:= temp @kind object;
  #L12cfe8.  goto L12cff4;
  #L12cfea.  v30:= v8;
  #L12cfee.  v4:= v4 + 1;
  #L12cff2.  v2:= 0I;
  #L12cff4.  v1:= "no-cache" @kind object;
  #L12cff8.  v6:= 1I;
  #L12cffa.  call temp:= `equals`(v1, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d000.  v1:= temp;
  #L12d002.  if v1 == 0 then goto L12d00e;
  #L12d006.  v1:= -1I;
  #L12d008.  v10:= 1I;
  #L12d00a.  goto L12d124;
  #L12d00e.  v1:= "no-store" @kind object;
  #L12d012.  call temp:= `equals`(v1, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d018.  v1:= temp;
  #L12d01a.  if v1 == 0 then goto L12d026;
  #L12d01e.  v1:= -1I;
  #L12d020.  v11:= 1I;
  #L12d022.  goto L12d124;
  #L12d026.  v1:= "max-age" @kind object;
  #L12d02a.  call temp:= `equals`(v1, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d030.  v1:= temp;
  #L12d032.  if v1 == 0 then goto L12d044;
  #L12d036.  v1:= -1I;
  #L12d038.  call temp:= `toNonNegativeInt`(v2, v1) @signature `Lokhttp3/internal/Util;.toNonNegativeInt:(Ljava/lang/String;I)I` @kind static;
  #L12d03e.  v12:= temp;
  #L12d040.  goto L12d124;
  #L12d044.  v1:= -1I;
  #L12d046.  v8:= "s-maxage" @kind object;
  #L12d04a.  call temp:= `equals`(v8, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d050.  v8:= temp;
  #L12d052.  if v8 == 0 then goto L12d060;
  #L12d056.  call temp:= `toNonNegativeInt`(v2, v1) @signature `Lokhttp3/internal/Util;.toNonNegativeInt:(Ljava/lang/String;I)I` @kind static;
  #L12d05c.  v13:= temp;
  #L12d05e.  goto L12d124;
  #L12d060.  v1:= "private" @kind object;
  #L12d064.  call temp:= `equals`(v1, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d06a.  v1:= temp;
  #L12d06c.  if v1 == 0 then goto L12d076;
  #L12d070.  v1:= -1I;
  #L12d072.  v14:= 1I;
  #L12d074.  goto L12d124;
  #L12d076.  v1:= "public" @kind object;
  #L12d07a.  call temp:= `equals`(v1, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d080.  v1:= temp;
  #L12d082.  if v1 == 0 then goto L12d08c;
  #L12d086.  v1:= -1I;
  #L12d088.  v15:= 1I;
  #L12d08a.  goto L12d124;
  #L12d08c.  v1:= "must-revalidate" @kind object;
  #L12d090.  call temp:= `equals`(v1, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d096.  v1:= temp;
  #L12d098.  if v1 == 0 then goto L12d0a4;
  #L12d09c.  v1:= -1I;
  #L12d09e.  v16:= 1I;
  #L12d0a2.  goto L12d124;
  #L12d0a4.  v1:= "max-stale" @kind object;
  #L12d0a8.  call temp:= `equals`(v1, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d0ae.  v1:= temp;
  #L12d0b0.  if v1 == 0 then goto L12d0c6;
  #L12d0b4.  v1:= 2147483647I;
  #L12d0ba.  call temp:= `toNonNegativeInt`(v2, v1) @signature `Lokhttp3/internal/Util;.toNonNegativeInt:(Ljava/lang/String;I)I` @kind static;
  #L12d0c0.  v17:= temp;
  #L12d0c2.  v1:= -1I;
  #L12d0c4.  goto L12d124;
  #L12d0c6.  v1:= "min-fresh" @kind object;
  #L12d0ca.  call temp:= `equals`(v1, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d0d0.  v1:= temp;
  #L12d0d2.  if v1 == 0 then goto L12d0e2;
  #L12d0d6.  v1:= -1I;
  #L12d0d8.  call temp:= `toNonNegativeInt`(v2, v1) @signature `Lokhttp3/internal/Util;.toNonNegativeInt:(Ljava/lang/String;I)I` @kind static;
  #L12d0de.  v18:= temp;
  #L12d0e0.  goto L12d124;
  #L12d0e2.  v1:= -1I;
  #L12d0e4.  v2:= "only-if-cached" @kind object;
  #L12d0e8.  call temp:= `equals`(v2, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d0ee.  v2:= temp;
  #L12d0f0.  if v2 == 0 then goto L12d0fa;
  #L12d0f4.  v19:= 1I;
  #L12d0f8.  goto L12d124;
  #L12d0fa.  v2:= "no-transform" @kind object;
  #L12d0fe.  call temp:= `equals`(v2, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d104.  v2:= temp;
  #L12d106.  if v2 == 0 then goto L12d110;
  #L12d10a.  v20:= 1I;
  #L12d10e.  goto L12d124;
  #L12d110.  v2:= "immutable" @kind object;
  #L12d114.  call temp:= `equals`(v2, v3, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L12d11a.  v2:= temp;
  #L12d11c.  if v2 == 0 then goto L12d124;
  #L12d120.  v21:= 1I;
  #L12d124.  v1:= v32 @kind object;
  #L12d128.  v3:= v4;
  #L12d12a.  v2:= v29;
  #L12d12e.  v8:= v30;
  #L12d132.  goto L12cedc;
  #L12d136.  v29:= v2;
  #L12d13a.  v30:= v8;
  #L12d13e.  goto L12d144;
  #L12d140.  v29:= v2;
  #L12d144.  v1:= -1I;
  #L12d146.  v7:= v7 + 1;
  #L12d14a.  v1:= v32 @kind object;
  #L12d14e.  v2:= v29;
  #L12d152.  goto L12ce9a;
  #L12d156.  if v8 != 0 then goto L12d160;
  #L12d15a.  v22:= 0I;
  #L12d15e.  goto L12d164;
  #L12d160.  v22:= v9 @kind object;
  #L12d164.  v1:= new `okhttp3.CacheControl`;
  #L12d168.  v23:= 0I;
  #L12d16c.  v9:= v1 @kind object;
  #L12d16e.  call `<init>`(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23) @signature `Lokhttp3/CacheControl;.<init>:(ZZIIZZZIIZZZLjava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L12d174.  return v1 @kind object;
}
