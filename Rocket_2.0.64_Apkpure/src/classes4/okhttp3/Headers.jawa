record `okhttp3.Headers` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `java.lang.String`[] `okhttp3.Headers.a` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.Headers$Companion` `@@okhttp3.Headers.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Headers;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L134458.  v0:= new `okhttp3.Headers$Companion`;
  #L13445c.  v1:= 0I;
  #L13445e.  call `<init>`(v0, v1) @signature `Lokhttp3/Headers$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L134464.  `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` := v0 @kind object;
  #L134468.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Headers` v0 @kind this, `java.lang.String`[] v1 @kind object) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L13447c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L134482.  v0.`okhttp3.Headers.a` @type ^`java.lang.String`[] := v1 @kind object;
  #L134486.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Headers` v0 @kind this, `java.lang.String`[] v1 @kind object, `kotlin.jvm.internal.DefaultConstructorMarker` v2 @kind object) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L134498.  call `<init>`(v0, v1) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;)V` @kind direct;
  #L13449e.  return @kind void;
}
procedure `okhttp3.Headers` `of`(`java.util.Map` v1 @kind object) @signature `Lokhttp3/Headers;.of:(Ljava/util/Map;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L134408.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L13440c.  call temp:= `of`(v0, v1) @signature `Lokhttp3/Headers$Companion;.of:(Ljava/util/Map;)Lokhttp3/Headers;` @kind virtual;
  #L134412.  v1:= temp @kind object;
  #L134414.  return v1 @kind object;
}
procedure `okhttp3.Headers` `of`(`java.lang.String`[] v1 @kind object) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1343e8.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L1343ec.  call temp:= `of`(v0, v1) @signature `Lokhttp3/Headers$Companion;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind virtual;
  #L1343f2.  v1:= temp @kind object;
  #L1343f4.  return v1 @kind object;
}
procedure `int` `-deprecated_size`(`okhttp3.Headers` v1 @kind this) @signature `Lokhttp3/Headers;.-deprecated_size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L134020.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L134026.  v0:= temp;
  #L134028.  return v0;
}
procedure `long` `byteCount`(`okhttp3.Headers` v6 @kind this) @signature `Lokhttp3/Headers;.byteCount:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1343a8.  v0:= v6.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L1343ac.  v1:= length @variable v0;
  #L1343ae.  v1:= v1 * 2;
  #L1343b2.  v1:= (`long`) v1 @kind i2l;
  #L1343b4.  v0:= length @variable v0;
  #L1343b6.  v3:= 0I;
  #L1343b8.  if v3 >= v0 then goto L1343d6;
  #L1343bc.  v4:= v6.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L1343c0.  v4:= v4[v3] @kind object;
  #L1343c4.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1343ca.  v4:= temp;
  #L1343cc.  v4:= (`long`) v4 @kind i2l;
  #L1343ce.  v1:= v1 + v4 @kind long;
  #L1343d0.  v3:= v3 + 1;
  #L1343d4.  goto L1343b8;
  #L1343d6.  return v1 @kind wide;
}
procedure `boolean` `equals`(`okhttp3.Headers` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/Headers;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L133fe8.  v0:= instanceof @variable v2 @type ^`okhttp3.Headers` @kind boolean;
  #L133fec.  if v0 == 0 then goto L13400c;
  #L133ff0.  v0:= v1.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L133ff4.  v2:= (`okhttp3.Headers`) v2 @kind object;
  #L133ff8.  v2:= v2.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L133ffc.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L134002.  v2:= temp;
  #L134004.  if v2 == 0 then goto L13400c;
  #L134008.  v2:= 1I;
  #L13400a.  goto L13400e;
  #L13400c.  v2:= 0I;
  #L13400e.  return v2;
}
procedure `java.lang.String` `get`(`okhttp3.Headers` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L134078.  v0:= "name" @kind object;
  #L13407c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L134082.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L134086.  v1:= v2.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L13408a.  call temp:= `access$get`(v0, v1, v3) @signature `Lokhttp3/Headers$Companion;.access$get:(Lokhttp3/Headers$Companion;[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L134090.  v3:= temp @kind object;
  #L134092.  return v3 @kind object;
}
procedure `java.util.Date` `getDate`(`okhttp3.Headers` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers;.getDate:(Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1341a0.  v0:= "name" @kind object;
  #L1341a4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1341aa.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1341b0.  v2:= temp @kind object;
  #L1341b2.  if v2 == 0 then goto L1341c0;
  #L1341b6.  call temp:= `toHttpDateOrNull`(v2) @signature `Lokhttp3/internal/http/DatesKt;.toHttpDateOrNull:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1341bc.  v2:= temp @kind object;
  #L1341be.  goto L1341c2;
  #L1341c0.  v2:= 0I;
  #L1341c2.  return v2 @kind object;
}
procedure `java.time.Instant` `getInstant`(`okhttp3.Headers` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers;.getInstant:(Ljava/lang/String;)Ljava/time/Instant;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13416c.  v0:= "name" @kind object;
  #L134170.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L134176.  call temp:= `getDate`(v1, v2) @signature `Lokhttp3/Headers;.getDate:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L13417c.  v2:= temp @kind object;
  #L13417e.  if v2 == 0 then goto L13418c;
  #L134182.  call temp:= `toInstant`(v2) @signature `Ljava/util/Date;.toInstant:()Ljava/time/Instant;` @kind virtual;
  #L134188.  v2:= temp @kind object;
  #L13418a.  goto L13418e;
  #L13418c.  v2:= 0I;
  #L13418e.  return v2 @kind object;
}
procedure `int` `hashCode`(`okhttp3.Headers` v1 @kind this) @signature `Lokhttp3/Headers;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13403c.  v0:= v1.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L134040.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L134046.  v0:= temp;
  #L134048.  return v0;
}
procedure `java.util.Iterator` `iterator`(`okhttp3.Headers` v5 @kind this) @signature `Lokhttp3/Headers;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1341d4.  call temp:= `size`(v5) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1341da.  v0:= temp;
  #L1341dc.  v1:= new `kotlin.Pair`[v0];
  #L1341e0.  v2:= 0I;
  #L1341e2.  if v2 >= v0 then goto L134208;
  #L1341e6.  call temp:= `name`(v5, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1341ec.  v3:= temp @kind object;
  #L1341ee.  call temp:= `value`(v5, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1341f4.  v4:= temp @kind object;
  #L1341f6.  call temp:= `to`(v3, v4) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L1341fc.  v3:= temp @kind object;
  #L1341fe.  v1[v2]:= v3 @kind object;
  #L134202.  v2:= v2 + 1;
  #L134206.  goto L1341e2;
  #L134208.  call temp:= `iterator`(v1) @signature `Lkotlin/jvm/internal/ArrayIteratorKt;.iterator:([Ljava/lang/Object;)Ljava/util/Iterator;` @kind static;
  #L13420e.  v0:= temp @kind object;
  #L134210.  return v0 @kind object;
}
procedure `java.lang.String` `name`(`okhttp3.Headers` v1 @kind this, `int` v2 ) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1340a4.  v0:= v1.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L1340a8.  v2:= v2 * 2;
  #L1340ac.  v2:= v0[v2] @kind object;
  #L1340b0.  return v2 @kind object;
}
procedure `java.util.Set` `names`(`okhttp3.Headers` v4 @kind this) @signature `Lokhttp3/Headers;.names:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13434c.  v0:= new `java.util.TreeSet`;
  #L134350.  v1:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L134354.  call temp:= `getCASE_INSENSITIVE_ORDER`(v1) @signature `Lkotlin/text/StringsKt;.getCASE_INSENSITIVE_ORDER:(Lkotlin/jvm/internal/StringCompanionObject;)Ljava/util/Comparator;` @kind static;
  #L13435a.  v1:= temp @kind object;
  #L13435c.  call `<init>`(v0, v1) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L134362.  call temp:= `size`(v4) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L134368.  v1:= temp;
  #L13436a.  v2:= 0I;
  #L13436c.  if v2 >= v1 then goto L134384;
  #L134370.  call temp:= `name`(v4, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L134376.  v3:= temp @kind object;
  #L134378.  call temp:= `add`(v0, v3) @signature `Ljava/util/TreeSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L13437e.  v2:= v2 + 1;
  #L134382.  goto L13436c;
  #L134384.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L13438a.  v0:= temp @kind object;
  #L13438c.  v1:= "Collections.unmodifiableSet(result)" @kind object;
  #L134390.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L134396.  return v0 @kind object;
}
procedure `okhttp3.Headers$Builder` `newBuilder`(`okhttp3.Headers` v3 @kind this) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L134428.  v0:= new `okhttp3.Headers$Builder`;
  #L13442c.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L134432.  call temp:= `getNamesAndValues$okhttp`(v0) @signature `Lokhttp3/Headers$Builder;.getNamesAndValues$okhttp:()Ljava/util/List;` @kind virtual;
  #L134438.  v1:= temp @kind object;
  #L13443a.  v2:= v3.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L13443e.  call temp:= `addAll`(v1, v2) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L134444.  return v0 @kind object;
}
procedure `int` `size`(`okhttp3.Headers` v1 @kind this) @signature `Lokhttp3/Headers;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13405c.  v0:= v1.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L134060.  v0:= length @variable v0;
  #L134062.  v0:= v0 / 2;
  #L134066.  return v0;
}
procedure `java.util.Map` `toMultimap`(`okhttp3.Headers` v6 @kind this) @signature `Lokhttp3/Headers;.toMultimap:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1342ac.  v0:= new `java.util.TreeMap`;
  #L1342b0.  v1:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L1342b4.  call temp:= `getCASE_INSENSITIVE_ORDER`(v1) @signature `Lkotlin/text/StringsKt;.getCASE_INSENSITIVE_ORDER:(Lkotlin/jvm/internal/StringCompanionObject;)Ljava/util/Comparator;` @kind static;
  #L1342ba.  v1:= temp @kind object;
  #L1342bc.  call `<init>`(v0, v1) @signature `Ljava/util/TreeMap;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L1342c2.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1342c8.  v1:= temp;
  #L1342ca.  v2:= 0I;
  #L1342cc.  if v2 >= v1 then goto L134338;
  #L1342d0.  call temp:= `name`(v6, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1342d6.  v3:= temp @kind object;
  #L1342d8.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1342dc.  v5:= "Locale.US" @kind object;
  #L1342e0.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1342e6.  v5:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1342ea.  call temp:= `requireNonNull`(v3, v5) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1342f0.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1342f6.  v3:= temp @kind object;
  #L1342f8.  v4:= "(this as java.lang.String).toLowerCase(locale)" @kind object;
  #L1342fc.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L134302.  call temp:= `get`(v0, v3) @signature `Ljava/util/TreeMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L134308.  v4:= temp @kind object;
  #L13430a.  v4:= (`java.util.List`) v4 @kind object;
  #L13430e.  if v4 != 0 then goto L134324;
  #L134312.  v4:= new `java.util.ArrayList`;
  #L134316.  v5:= 2I;
  #L134318.  call `<init>`(v4, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L13431e.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L134324.  call temp:= `value`(v6, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L13432a.  v3:= temp @kind object;
  #L13432c.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L134332.  v2:= v2 + 1;
  #L134336.  goto L1342cc;
  #L134338.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Headers` v6 @kind this) @signature `Lokhttp3/Headers;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1340c4.  v0:= new `java.lang.StringBuilder`;
  #L1340c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1340ce.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1340d4.  v1:= temp;
  #L1340d6.  v2:= 0I;
  #L1340d8.  if v2 >= v1 then goto L134122;
  #L1340dc.  call temp:= `name`(v6, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1340e2.  v3:= temp @kind object;
  #L1340e4.  call temp:= `value`(v6, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1340ea.  v4:= temp @kind object;
  #L1340ec.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1340f2.  v5:= ": " @kind object;
  #L1340f6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1340fc.  call temp:= `isSensitiveHeader`(v3) @signature `Lokhttp3/internal/Util;.isSensitiveHeader:(Ljava/lang/String;)Z` @kind static;
  #L134102.  v3:= temp;
  #L134104.  if v3 == 0 then goto L13410c;
  #L134108.  v4:= "██" @kind object;
  #L13410c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L134112.  v3:= "\n" @kind object;
  #L134116.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13411c.  v2:= v2 + 1;
  #L134120.  goto L1340d8;
  #L134122.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L134128.  v0:= temp @kind object;
  #L13412a.  v1:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L13412e.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L134134.  return v0 @kind object;
}
procedure `java.lang.String` `value`(`okhttp3.Headers` v1 @kind this, `int` v2 ) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L134148.  v0:= v1.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L13414c.  v2:= v2 * 2;
  #L134150.  v2:= v2 + 1;
  #L134154.  v2:= v0[v2] @kind object;
  #L134158.  return v2 @kind object;
}
procedure `java.util.List` `values`(`okhttp3.Headers` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L134224.  v0:= "name" @kind object;
  #L134228.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13422e.  call temp:= `size`(v5) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L134234.  v0:= temp;
  #L134236.  v1:= 0I;
  #L134238.  v2:= 0I;
  #L13423a.  if v2 >= v0 then goto L134278;
  #L13423e.  call temp:= `name`(v5, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L134244.  v3:= temp @kind object;
  #L134246.  v4:= 1I;
  #L134248.  call temp:= `equals`(v6, v3, v4) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L13424e.  v3:= temp;
  #L134250.  if v3 == 0 then goto L134272;
  #L134254.  if v1 != 0 then goto L134264;
  #L134258.  v1:= new `java.util.ArrayList`;
  #L13425c.  v3:= 2I;
  #L13425e.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L134264.  call temp:= `value`(v5, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L13426a.  v3:= temp @kind object;
  #L13426c.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L134272.  v2:= v2 + 1;
  #L134276.  goto L13423a;
  #L134278.  if v1 == 0 then goto L134290;
  #L13427c.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L134282.  v6:= temp @kind object;
  #L134284.  v0:= "Collections.unmodifiableList(result)" @kind object;
  #L134288.  call `checkNotNullExpressionValue`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13428e.  goto L134298;
  #L134290.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L134296.  v6:= temp @kind object;
  #L134298.  return v6 @kind object;
}
