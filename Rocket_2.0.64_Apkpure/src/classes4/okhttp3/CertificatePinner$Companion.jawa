record `okhttp3.CertificatePinner$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.CertificatePinner$Companion` v0 @kind this) @signature `Lokhttp3/CertificatePinner$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L12dec0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12dec6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/CertificatePinner$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L12ded8.  call `<init>`(v0) @signature `Lokhttp3/CertificatePinner$Companion;.<init>:()V` @kind direct;
  #L12dede.  return @kind void;
}
procedure `java.lang.String` `pin`(`okhttp3.CertificatePinner$Companion` v2 @kind this, `java.security.cert.Certificate` v3 @kind object) @signature `Lokhttp3/CertificatePinner$Companion;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12dd94.  v0:= "certificate" @kind object;
  #L12dd98.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12dd9e.  v0:= instanceof @variable v3 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L12dda2.  if v0 == 0 then goto L12ddde;
  #L12dda6.  v0:= new `java.lang.StringBuilder`;
  #L12ddaa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12ddb0.  v1:= "sha256/" @kind object;
  #L12ddb4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12ddba.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L12ddbe.  call temp:= `sha256Hash`(v2, v3) @signature `Lokhttp3/CertificatePinner$Companion;.sha256Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L12ddc4.  v3:= temp @kind object;
  #L12ddc6.  call temp:= `base64`(v3) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L12ddcc.  v3:= temp @kind object;
  #L12ddce.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12ddd4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12ddda.  v3:= temp @kind object;
  #L12dddc.  return v3 @kind object;
  #L12ddde.  v3:= new `java.lang.IllegalArgumentException`;
  #L12dde2.  v0:= "Certificate pinning requires X509 certificates" @kind object;
  #L12dde6.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L12ddec.  v0:= temp @kind object;
  #L12ddee.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12ddf4.  throw v3;
}
procedure `okio.ByteString` `sha1Hash`(`okhttp3.CertificatePinner$Companion` v7 @kind this, `java.security.cert.X509Certificate` v8 @kind object) @signature `Lokhttp3/CertificatePinner$Companion;.sha1Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L12de08.  v0:= "$this$sha1Hash" @kind object;
  #L12de0c.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12de12.  v1:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L12de16.  call temp:= `getPublicKey`(v8) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L12de1c.  v8:= temp @kind object;
  #L12de1e.  v0:= "publicKey" @kind object;
  #L12de22.  call `checkNotNullExpressionValue`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12de28.  call temp:= `getEncoded`(v8) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L12de2e.  v2:= temp @kind object;
  #L12de30.  v8:= "publicKey.encoded" @kind object;
  #L12de34.  call `checkNotNullExpressionValue`(v2, v8) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12de3a.  v3:= 0I;
  #L12de3c.  v4:= 0I;
  #L12de3e.  v5:= 3I;
  #L12de40.  v6:= 0I;
  #L12de42.  call temp:= `of$default`(v1, v2, v3, v4, v5, v6) @signature `Lokio/ByteString$Companion;.of$default:(Lokio/ByteString$Companion;[BIIILjava/lang/Object;)Lokio/ByteString;` @kind static;
  #L12de48.  v8:= temp @kind object;
  #L12de4a.  call temp:= `sha1`(v8) @signature `Lokio/ByteString;.sha1:()Lokio/ByteString;` @kind virtual;
  #L12de50.  v8:= temp @kind object;
  #L12de52.  return v8 @kind object;
}
procedure `okio.ByteString` `sha256Hash`(`okhttp3.CertificatePinner$Companion` v7 @kind this, `java.security.cert.X509Certificate` v8 @kind object) @signature `Lokhttp3/CertificatePinner$Companion;.sha256Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L12de64.  v0:= "$this$sha256Hash" @kind object;
  #L12de68.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12de6e.  v1:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L12de72.  call temp:= `getPublicKey`(v8) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L12de78.  v8:= temp @kind object;
  #L12de7a.  v0:= "publicKey" @kind object;
  #L12de7e.  call `checkNotNullExpressionValue`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12de84.  call temp:= `getEncoded`(v8) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L12de8a.  v2:= temp @kind object;
  #L12de8c.  v8:= "publicKey.encoded" @kind object;
  #L12de90.  call `checkNotNullExpressionValue`(v2, v8) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12de96.  v3:= 0I;
  #L12de98.  v4:= 0I;
  #L12de9a.  v5:= 3I;
  #L12de9c.  v6:= 0I;
  #L12de9e.  call temp:= `of$default`(v1, v2, v3, v4, v5, v6) @signature `Lokio/ByteString$Companion;.of$default:(Lokio/ByteString$Companion;[BIIILjava/lang/Object;)Lokio/ByteString;` @kind static;
  #L12dea4.  v8:= temp @kind object;
  #L12dea6.  call temp:= `sha256`(v8) @signature `Lokio/ByteString;.sha256:()Lokio/ByteString;` @kind virtual;
  #L12deac.  v8:= temp @kind object;
  #L12deae.  return v8 @kind object;
}
