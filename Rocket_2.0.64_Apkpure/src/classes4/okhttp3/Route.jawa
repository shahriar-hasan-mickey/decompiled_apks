record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.a` @AccessFlag PRIVATE_FINAL;
  `java.net.Proxy` `okhttp3.Route.b` @AccessFlag PRIVATE_FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v1 @kind this, `okhttp3.Address` v2 @kind object, `java.net.Proxy` v3 @kind object, `java.net.InetSocketAddress` v4 @kind object) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L13d948.  v0:= "address" @kind object;
  #L13d94c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13d952.  v0:= "proxy" @kind object;
  #L13d956.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13d95c.  v0:= "socketAddress" @kind object;
  #L13d960.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13d966.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13d96c.  v1.`okhttp3.Route.a` @type ^`okhttp3.Address` := v2 @kind object;
  #L13d970.  v1.`okhttp3.Route.b` @type ^`java.net.Proxy` := v3 @kind object;
  #L13d974.  v1.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` := v4 @kind object;
  #L13d978.  return @kind void;
}
procedure `okhttp3.Address` `-deprecated_address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.-deprecated_address:()Lokhttp3/Address;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d918.  v0:= v1.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L13d91c.  return v0 @kind object;
}
procedure `java.net.Proxy` `-deprecated_proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.-deprecated_proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d8e8.  v0:= v1.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L13d8ec.  return v0 @kind object;
}
procedure `java.net.InetSocketAddress` `-deprecated_socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.-deprecated_socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d8b8.  v0:= v1.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L13d8bc.  return v0 @kind object;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d930.  v0:= v1.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L13d934.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13d790.  v0:= instanceof @variable v3 @type ^`okhttp3.Route` @kind boolean;
  #L13d794.  if v0 == 0 then goto L13d7dc;
  #L13d798.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L13d79c.  v0:= v3.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L13d7a0.  v1:= v2.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L13d7a4.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13d7aa.  v0:= temp;
  #L13d7ac.  if v0 == 0 then goto L13d7dc;
  #L13d7b0.  v0:= v3.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L13d7b4.  v1:= v2.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L13d7b8.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13d7be.  v0:= temp;
  #L13d7c0.  if v0 == 0 then goto L13d7dc;
  #L13d7c4.  v3:= v3.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L13d7c8.  v0:= v2.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L13d7cc.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13d7d2.  v3:= temp;
  #L13d7d4.  if v3 == 0 then goto L13d7dc;
  #L13d7d8.  v3:= 1I;
  #L13d7da.  goto L13d7de;
  #L13d7dc.  v3:= 0I;
  #L13d7de.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13d82c.  v0:= v2.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L13d830.  call temp:= `hashCode`(v0) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L13d836.  v0:= temp;
  #L13d838.  v1:= 527I;
  #L13d83c.  v1:= v1 + v0 @kind int;
  #L13d83e.  v1:= v1 * 31;
  #L13d842.  v0:= v2.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L13d846.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L13d84c.  v0:= temp;
  #L13d84e.  v1:= v1 + v0 @kind int;
  #L13d850.  v1:= v1 * 31;
  #L13d854.  v0:= v2.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L13d858.  call temp:= `hashCode`(v0) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L13d85e.  v0:= temp;
  #L13d860.  v1:= v1 + v0 @kind int;
  #L13d862.  return v1;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d900.  v0:= v1.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L13d904.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d7f0.  v0:= v2.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L13d7f4.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L13d7fa.  v0:= temp @kind object;
  #L13d7fc.  if v0 == 0 then goto L13d818;
  #L13d800.  v0:= v2.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L13d804.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L13d80a.  v0:= temp @kind object;
  #L13d80c.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L13d810.  if v0 != v1 then goto L13d818;
  #L13d814.  v0:= 1I;
  #L13d816.  goto L13d81a;
  #L13d818.  v0:= 0I;
  #L13d81a.  return v0;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13d8d0.  v0:= v1.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L13d8d4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13d874.  v0:= new `java.lang.StringBuilder`;
  #L13d878.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13d87e.  v1:= "Route{" @kind object;
  #L13d882.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d888.  v1:= v2.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L13d88c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d892.  v1:= 125I;
  #L13d896.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d89c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13d8a2.  v0:= temp @kind object;
  #L13d8a4.  return v0 @kind object;
}
