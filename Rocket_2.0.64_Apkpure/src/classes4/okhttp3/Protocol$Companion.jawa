record `okhttp3.Protocol$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Protocol$Companion` v0 @kind this) @signature `Lokhttp3/Protocol$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L13ad90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13ad96.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Protocol$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/Protocol$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L13ada8.  call `<init>`(v0) @signature `Lokhttp3/Protocol$Companion;.<init>:()V` @kind direct;
  #L13adae.  return @kind void;
}
procedure `okhttp3.Protocol` `get`(`okhttp3.Protocol$Companion` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/Protocol$Companion;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13acac.  v0:= "protocol" @kind object;
  #L13acb0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13acb6.  v0:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L13acba.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L13acc0.  v1:= temp @kind object;
  #L13acc2.  call temp:= `areEqual`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13acc8.  v1:= temp;
  #L13acca.  if v1 == 0 then goto L13acd0;
  #L13acce.  goto L13ad50;
  #L13acd0.  v0:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L13acd4.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L13acda.  v1:= temp @kind object;
  #L13acdc.  call temp:= `areEqual`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13ace2.  v1:= temp;
  #L13ace4.  if v1 == 0 then goto L13acea;
  #L13ace8.  goto L13ad50;
  #L13acea.  v0:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L13acee.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L13acf4.  v1:= temp @kind object;
  #L13acf6.  call temp:= `areEqual`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13acfc.  v1:= temp;
  #L13acfe.  if v1 == 0 then goto L13ad04;
  #L13ad02.  goto L13ad50;
  #L13ad04.  v0:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L13ad08.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L13ad0e.  v1:= temp @kind object;
  #L13ad10.  call temp:= `areEqual`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13ad16.  v1:= temp;
  #L13ad18.  if v1 == 0 then goto L13ad1e;
  #L13ad1c.  goto L13ad50;
  #L13ad1e.  v0:= `@@okhttp3.Protocol.SPDY_3` @type ^`okhttp3.Protocol` @kind object;
  #L13ad22.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L13ad28.  v1:= temp @kind object;
  #L13ad2a.  call temp:= `areEqual`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13ad30.  v1:= temp;
  #L13ad32.  if v1 == 0 then goto L13ad38;
  #L13ad36.  goto L13ad50;
  #L13ad38.  v0:= `@@okhttp3.Protocol.QUIC` @type ^`okhttp3.Protocol` @kind object;
  #L13ad3c.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L13ad42.  v1:= temp @kind object;
  #L13ad44.  call temp:= `areEqual`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13ad4a.  v1:= temp;
  #L13ad4c.  if v1 == 0 then goto L13ad52;
  #L13ad50.  return v0 @kind object;
  #L13ad52.  v0:= new `java.io.IOException`;
  #L13ad56.  v1:= new `java.lang.StringBuilder`;
  #L13ad5a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13ad60.  v2:= "Unexpected protocol: " @kind object;
  #L13ad64.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ad6a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ad70.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13ad76.  v4:= temp @kind object;
  #L13ad78.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13ad7e.  throw v0;
}
