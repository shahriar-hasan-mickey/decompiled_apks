record `okhttp3.CertificatePinner$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `okhttp3.CertificatePinner$Builder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner$Builder` v1 @kind this) @signature `Lokhttp3/CertificatePinner$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12dd6c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12dd72.  v0:= new `java.util.ArrayList`;
  #L12dd76.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L12dd7c.  v1.`okhttp3.CertificatePinner$Builder.a` @type ^`java.util.List` := v0 @kind object;
  #L12dd80.  return @kind void;
}
procedure `okhttp3.CertificatePinner$Builder` `add`(`okhttp3.CertificatePinner$Builder` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.String`[] v7 @kind object) @signature `Lokhttp3/CertificatePinner$Builder;.add:(Ljava/lang/String;[Ljava/lang/String;)Lokhttp3/CertificatePinner$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L12dd20.  v0:= "pattern" @kind object;
  #L12dd24.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12dd2a.  v0:= "pins" @kind object;
  #L12dd2e.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12dd34.  v0:= length @variable v7;
  #L12dd36.  v1:= 0I;
  #L12dd38.  if v1 >= v0 then goto L12dd5a;
  #L12dd3c.  v2:= v7[v1] @kind object;
  #L12dd40.  v3:= v5.`okhttp3.CertificatePinner$Builder.a` @type ^`java.util.List` @kind object;
  #L12dd44.  v4:= new `okhttp3.CertificatePinner$Pin`;
  #L12dd48.  call `<init>`(v4, v6, v2) @signature `Lokhttp3/CertificatePinner$Pin;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L12dd4e.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L12dd54.  v1:= v1 + 1;
  #L12dd58.  goto L12dd38;
  #L12dd5a.  return v5 @kind object;
}
procedure `okhttp3.CertificatePinner` `build`(`okhttp3.CertificatePinner$Builder` v4 @kind this) @signature `Lokhttp3/CertificatePinner$Builder;.build:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12dcf4.  v0:= new `okhttp3.CertificatePinner`;
  #L12dcf8.  v1:= v4.`okhttp3.CertificatePinner$Builder.a` @type ^`java.util.List` @kind object;
  #L12dcfc.  call temp:= `toSet`(v1) @signature `Lkotlin/collections/CollectionsKt;.toSet:(Ljava/lang/Iterable;)Ljava/util/Set;` @kind static;
  #L12dd02.  v1:= temp @kind object;
  #L12dd04.  v2:= 0I;
  #L12dd06.  v3:= 2I;
  #L12dd08.  call `<init>`(v0, v1, v2, v3, v2) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L12dd0e.  return v0 @kind object;
}
procedure `java.util.List` `getPins`(`okhttp3.CertificatePinner$Builder` v1 @kind this) @signature `Lokhttp3/CertificatePinner$Builder;.getPins:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12dcdc.  v0:= v1.`okhttp3.CertificatePinner$Builder.a` @type ^`java.util.List` @kind object;
  #L12dce0.  return v0 @kind object;
}
