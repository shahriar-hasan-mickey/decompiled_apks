record `okhttp3.CertificatePinner$Pin` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.CertificatePinner$Pin.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.CertificatePinner$Pin.b` @AccessFlag PRIVATE_FINAL;
  `okio.ByteString` `okhttp3.CertificatePinner$Pin.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner$Pin` v11 @kind this, `java.lang.String` v12 @kind object, `java.lang.String` v13 @kind object) @signature `Lokhttp3/CertificatePinner$Pin;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L12e1e8.  v0:= "pattern" @kind object;
  #L12e1ec.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e1f2.  v0:= "pin" @kind object;
  #L12e1f6.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e1fc.  call `<init>`(v11) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12e202.  v0:= "*." @kind object;
  #L12e206.  v1:= 0I;
  #L12e208.  v2:= 2I;
  #L12e20a.  v3:= 0I;
  #L12e20c.  call temp:= `startsWith$default`(v12, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L12e212.  v0:= temp;
  #L12e214.  v4:= -1I;
  #L12e216.  if v0 == 0 then goto L12e234;
  #L12e21a.  v7:= 1I;
  #L12e21c.  v8:= 0I;
  #L12e21e.  v9:= 4I;
  #L12e220.  v10:= 0I;
  #L12e222.  v6:= "*" @kind object;
  #L12e226.  v5:= v12 @kind object;
  #L12e228.  call temp:= `indexOf$default`(v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L12e22e.  v0:= temp;
  #L12e230.  if v0 == v4 then goto L12e278;
  #L12e234.  v0:= "**." @kind object;
  #L12e238.  call temp:= `startsWith$default`(v12, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L12e23e.  v0:= temp;
  #L12e240.  if v0 == 0 then goto L12e25e;
  #L12e244.  v7:= 2I;
  #L12e246.  v8:= 0I;
  #L12e248.  v9:= 4I;
  #L12e24a.  v10:= 0I;
  #L12e24c.  v6:= "*" @kind object;
  #L12e250.  v5:= v12 @kind object;
  #L12e252.  call temp:= `indexOf$default`(v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L12e258.  v0:= temp;
  #L12e25a.  if v0 == v4 then goto L12e278;
  #L12e25e.  v7:= 0I;
  #L12e260.  v8:= 0I;
  #L12e262.  v9:= 6I;
  #L12e264.  v10:= 0I;
  #L12e266.  v6:= "*" @kind object;
  #L12e26a.  v5:= v12 @kind object;
  #L12e26c.  call temp:= `indexOf$default`(v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L12e272.  v0:= temp;
  #L12e274.  if v0 != v4 then goto L12e27c;
  #L12e278.  v0:= 1I;
  #L12e27a.  goto L12e27e;
  #L12e27c.  v0:= 0I;
  #L12e27e.  if v0 == 0 then goto L12e3c6;
  #L12e282.  call temp:= `toCanonicalHost`(v12) @signature `Lokhttp3/internal/HostnamesKt;.toCanonicalHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L12e288.  v0:= temp @kind object;
  #L12e28a.  if v0 == 0 then goto L12e398;
  #L12e28e.  v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` := v0 @kind object;
  #L12e292.  v12:= "sha1/" @kind object;
  #L12e296.  call temp:= `startsWith$default`(v13, v12, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L12e29c.  v12:= temp;
  #L12e29e.  v0:= "Invalid pin hash: " @kind object;
  #L12e2a2.  v4:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L12e2a6.  if v12 == 0 then goto L12e302;
  #L12e2aa.  v12:= "sha1" @kind object;
  #L12e2ae.  v11.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` := v12 @kind object;
  #L12e2b2.  v12:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L12e2b6.  v1:= 5I;
  #L12e2b8.  call temp:= `substring`(v13, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L12e2be.  v1:= temp @kind object;
  #L12e2c0.  call `checkNotNullExpressionValue`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e2c6.  call temp:= `decodeBase64`(v12, v1) @signature `Lokio/ByteString$Companion;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L12e2cc.  v12:= temp @kind object;
  #L12e2ce.  if v12 == 0 then goto L12e2d8;
  #L12e2d2.  v11.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` := v12 @kind object;
  #L12e2d6.  goto L12e33e;
  #L12e2d8.  v12:= new `java.lang.IllegalArgumentException`;
  #L12e2dc.  v1:= new `java.lang.StringBuilder`;
  #L12e2e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12e2e6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e2ec.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e2f2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e2f8.  v13:= temp @kind object;
  #L12e2fa.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12e300.  throw v12;
  #L12e302.  v12:= "sha256/" @kind object;
  #L12e306.  call temp:= `startsWith$default`(v13, v12, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L12e30c.  v12:= temp;
  #L12e30e.  if v12 == 0 then goto L12e36a;
  #L12e312.  v12:= "sha256" @kind object;
  #L12e316.  v11.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` := v12 @kind object;
  #L12e31a.  v12:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L12e31e.  v1:= 7I;
  #L12e320.  call temp:= `substring`(v13, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L12e326.  v1:= temp @kind object;
  #L12e328.  call `checkNotNullExpressionValue`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e32e.  call temp:= `decodeBase64`(v12, v1) @signature `Lokio/ByteString$Companion;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L12e334.  v12:= temp @kind object;
  #L12e336.  if v12 == 0 then goto L12e340;
  #L12e33a.  v11.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` := v12 @kind object;
  #L12e33e.  return @kind void;
  #L12e340.  v12:= new `java.lang.IllegalArgumentException`;
  #L12e344.  v1:= new `java.lang.StringBuilder`;
  #L12e348.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12e34e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e354.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e35a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e360.  v13:= temp @kind object;
  #L12e362.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12e368.  throw v12;
  #L12e36a.  v12:= new `java.lang.IllegalArgumentException`;
  #L12e36e.  v0:= new `java.lang.StringBuilder`;
  #L12e372.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12e378.  v1:= "pins must start with 'sha256/' or 'sha1/': " @kind object;
  #L12e37c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e382.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e388.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e38e.  v13:= temp @kind object;
  #L12e390.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12e396.  throw v12;
  #L12e398.  v13:= new `java.lang.IllegalArgumentException`;
  #L12e39c.  v0:= new `java.lang.StringBuilder`;
  #L12e3a0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12e3a6.  v1:= "Invalid pattern: " @kind object;
  #L12e3aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e3b0.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e3b6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e3bc.  v12:= temp @kind object;
  #L12e3be.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12e3c4.  throw v13;
  #L12e3c6.  v13:= new `java.lang.StringBuilder`;
  #L12e3ca.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12e3d0.  v0:= "Unexpected pattern: " @kind object;
  #L12e3d4.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e3da.  call temp:= `append`(v13, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e3e0.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e3e6.  v12:= temp @kind object;
  #L12e3e8.  v13:= new `java.lang.IllegalArgumentException`;
  #L12e3ec.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e3f2.  v12:= temp @kind object;
  #L12e3f4.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12e3fa.  throw v13;
}
procedure `boolean` `equals`(`okhttp3.CertificatePinner$Pin` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lokhttp3/CertificatePinner$Pin;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12def0.  v0:= 1I;
  #L12def2.  if v4 != v5 then goto L12def8;
  #L12def6.  return v0;
  #L12def8.  v1:= instanceof @variable v5 @type ^`okhttp3.CertificatePinner$Pin` @kind boolean;
  #L12defc.  v2:= 0I;
  #L12defe.  if v1 != 0 then goto L12df04;
  #L12df02.  return v2;
  #L12df04.  v1:= v4.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12df08.  v5:= (`okhttp3.CertificatePinner$Pin`) v5 @kind object;
  #L12df0c.  v3:= v5.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12df10.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12df16.  v1:= temp;
  #L12df18.  v1:= v1 ^~ v0 @kind int;
  #L12df1a.  if v1 == 0 then goto L12df20;
  #L12df1e.  return v2;
  #L12df20.  v1:= v4.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L12df24.  v3:= v5.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L12df28.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12df2e.  v1:= temp;
  #L12df30.  v1:= v1 ^~ v0 @kind int;
  #L12df32.  if v1 == 0 then goto L12df38;
  #L12df36.  return v2;
  #L12df38.  v1:= v4.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L12df3c.  v5:= v5.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L12df40.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12df46.  v5:= temp;
  #L12df48.  v5:= v5 ^~ v0 @kind int;
  #L12df4a.  if v5 == 0 then goto L12df50;
  #L12df4e.  return v2;
  #L12df50.  return v0;
}
procedure `okio.ByteString` `getHash`(`okhttp3.CertificatePinner$Pin` v1 @kind this) @signature `Lokhttp3/CertificatePinner$Pin;.getHash:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12e1d0.  v0:= v1.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L12e1d4.  return v0 @kind object;
}
procedure `java.lang.String` `getHashAlgorithm`(`okhttp3.CertificatePinner$Pin` v1 @kind this) @signature `Lokhttp3/CertificatePinner$Pin;.getHashAlgorithm:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12e154.  v0:= v1.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L12e158.  return v0 @kind object;
}
procedure `java.lang.String` `getPattern`(`okhttp3.CertificatePinner$Pin` v1 @kind this) @signature `Lokhttp3/CertificatePinner$Pin;.getPattern:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12e16c.  v0:= v1.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12e170.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.CertificatePinner$Pin` v2 @kind this) @signature `Lokhttp3/CertificatePinner$Pin;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12e110.  v0:= v2.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12e114.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L12e11a.  v0:= temp;
  #L12e11c.  v0:= v0 * 31;
  #L12e120.  v1:= v2.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L12e124.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L12e12a.  v1:= temp;
  #L12e12c.  v0:= v0 + v1 @kind int;
  #L12e12e.  v0:= v0 * 31;
  #L12e132.  v1:= v2.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L12e136.  call temp:= `hashCode`(v1) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L12e13c.  v1:= temp;
  #L12e13e.  v0:= v0 + v1 @kind int;
  #L12e140.  return v0;
}
procedure `boolean` `matchesCertificate`(`okhttp3.CertificatePinner$Pin` v3 @kind this, `java.security.cert.X509Certificate` v4 @kind object) @signature `Lokhttp3/CertificatePinner$Pin;.matchesCertificate:(Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L12df64.  v0:= "certificate" @kind object;
  #L12df68.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12df6e.  v0:= v3.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L12df72.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L12df78.  v1:= temp;
  #L12df7a.  v2:= -903629273I;
  #L12df80.  if v1 == v2 then goto L12dfba;
  #L12df84.  v2:= 3528965I;
  #L12df8a.  if v1 == v2 then goto L12df90;
  #L12df8e.  goto L12dfe4;
  #L12df90.  v1:= "sha1" @kind object;
  #L12df94.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12df9a.  v0:= temp;
  #L12df9c.  if v0 == 0 then goto L12dfe4;
  #L12dfa0.  v0:= v3.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L12dfa4.  v1:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L12dfa8.  call temp:= `sha1Hash`(v1, v4) @signature `Lokhttp3/CertificatePinner$Companion;.sha1Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L12dfae.  v4:= temp @kind object;
  #L12dfb0.  call temp:= `areEqual`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12dfb6.  v4:= temp;
  #L12dfb8.  goto L12dfe6;
  #L12dfba.  v1:= "sha256" @kind object;
  #L12dfbe.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12dfc4.  v0:= temp;
  #L12dfc6.  if v0 == 0 then goto L12dfe4;
  #L12dfca.  v0:= v3.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L12dfce.  v1:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L12dfd2.  call temp:= `sha256Hash`(v1, v4) @signature `Lokhttp3/CertificatePinner$Companion;.sha256Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L12dfd8.  v4:= temp @kind object;
  #L12dfda.  call temp:= `areEqual`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12dfe0.  v4:= temp;
  #L12dfe2.  goto L12dfe6;
  #L12dfe4.  v4:= 0I;
  #L12dfe6.  return v4;
}
procedure `boolean` `matchesHostname`(`okhttp3.CertificatePinner$Pin` v11 @kind this, `java.lang.String` v12 @kind object) @signature `Lokhttp3/CertificatePinner$Pin;.matchesHostname:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L12dff8.  v0:= "hostname" @kind object;
  #L12dffc.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12e002.  v0:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12e006.  v1:= "**." @kind object;
  #L12e00a.  v2:= 0I;
  #L12e00c.  v3:= 2I;
  #L12e00e.  v4:= 0I;
  #L12e010.  call temp:= `startsWith$default`(v0, v1, v2, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L12e016.  v0:= temp;
  #L12e018.  v1:= 1I;
  #L12e01a.  if v0 == 0 then goto L12e07a;
  #L12e01e.  v0:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12e022.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12e028.  v0:= temp;
  #L12e02a.  v7:= v0 + -3;
  #L12e02e.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12e034.  v0:= temp;
  #L12e036.  v0:= v0 - v7 @kind int;
  #L12e038.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12e03e.  v3:= temp;
  #L12e040.  v4:= v3 - v7 @kind int;
  #L12e044.  v5:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12e048.  v6:= 3I;
  #L12e04a.  v8:= 0I;
  #L12e04c.  v9:= 16I;
  #L12e050.  v10:= 0I;
  #L12e052.  v3:= v12 @kind object;
  #L12e054.  call temp:= `regionMatches$default`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.regionMatches$default:(Ljava/lang/String;ILjava/lang/String;IIZILjava/lang/Object;)Z` @kind static;
  #L12e05a.  v3:= temp;
  #L12e05c.  if v3 == 0 then goto L12e0fc;
  #L12e060.  if v0 == 0 then goto L12e076;
  #L12e064.  v0:= v0 - v1 @kind int;
  #L12e066.  call temp:= `charAt`(v12, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L12e06c.  v12:= temp;
  #L12e06e.  v0:= 46I;
  #L12e072.  if v12 != v0 then goto L12e0fc;
  #L12e076.  v2:= 1I;
  #L12e078.  goto L12e0fc;
  #L12e07a.  v0:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12e07e.  v5:= "*." @kind object;
  #L12e082.  call temp:= `startsWith$default`(v0, v5, v2, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L12e088.  v0:= temp;
  #L12e08a.  if v0 == 0 then goto L12e0f0;
  #L12e08e.  v0:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12e092.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12e098.  v0:= temp;
  #L12e09a.  v7:= v0 + -1;
  #L12e09e.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12e0a4.  v0:= temp;
  #L12e0a6.  v0:= v0 - v7 @kind int;
  #L12e0a8.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12e0ae.  v3:= temp;
  #L12e0b0.  v4:= v3 - v7 @kind int;
  #L12e0b4.  v5:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12e0b8.  v6:= 1I;
  #L12e0ba.  v8:= 0I;
  #L12e0bc.  v9:= 16I;
  #L12e0c0.  v10:= 0I;
  #L12e0c2.  v3:= v12 @kind object;
  #L12e0c4.  call temp:= `regionMatches$default`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.regionMatches$default:(Ljava/lang/String;ILjava/lang/String;IIZILjava/lang/Object;)Z` @kind static;
  #L12e0ca.  v3:= temp;
  #L12e0cc.  if v3 == 0 then goto L12e0fc;
  #L12e0d0.  v5:= 46I;
  #L12e0d4.  v6:= v0 + -1;
  #L12e0d8.  v7:= 0I;
  #L12e0da.  v8:= 4I;
  #L12e0dc.  v9:= 0I;
  #L12e0de.  v4:= v12 @kind object;
  #L12e0e0.  call temp:= `lastIndexOf$default`(v4, v5, v6, v7, v8, v9) @signature `Lkotlin/text/StringsKt;.lastIndexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L12e0e6.  v12:= temp;
  #L12e0e8.  v0:= -1I;
  #L12e0ea.  if v12 != v0 then goto L12e0fc;
  #L12e0ee.  goto L12e076;
  #L12e0f0.  v0:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L12e0f4.  call temp:= `areEqual`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12e0fa.  v2:= temp;
  #L12e0fc.  return v2;
}
procedure `java.lang.String` `toString`(`okhttp3.CertificatePinner$Pin` v2 @kind this) @signature `Lokhttp3/CertificatePinner$Pin;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12e184.  v0:= new `java.lang.StringBuilder`;
  #L12e188.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12e18e.  v1:= v2.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L12e192.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e198.  v1:= 47I;
  #L12e19c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e1a2.  v1:= v2.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L12e1a6.  call temp:= `base64`(v1) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L12e1ac.  v1:= temp @kind object;
  #L12e1ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e1b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e1ba.  v0:= temp @kind object;
  #L12e1bc.  return v0 @kind object;
}
