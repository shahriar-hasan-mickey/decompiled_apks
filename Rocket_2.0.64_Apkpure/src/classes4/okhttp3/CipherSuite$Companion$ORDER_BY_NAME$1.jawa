record `okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1` v0 @kind this) @signature `Lokhttp3/CipherSuite$Companion$ORDER_BY_NAME$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L12edcc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12edd2.  return @kind void;
}
procedure `int` `compare`(`okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/CipherSuite$Companion$ORDER_BY_NAME$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L12ed14.  v1:= (`java.lang.String`) v1 @kind object;
  #L12ed18.  v2:= (`java.lang.String`) v2 @kind object;
  #L12ed1c.  call temp:= `compare`(v0, v1, v2) @signature `Lokhttp3/CipherSuite$Companion$ORDER_BY_NAME$1;.compare:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L12ed22.  v1:= temp;
  #L12ed24.  return v1;
}
procedure `int` `compare`(`okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/CipherSuite$Companion$ORDER_BY_NAME$1;.compare:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L12ed38.  v0:= "a" @kind object;
  #L12ed3c.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ed42.  v0:= "b" @kind object;
  #L12ed46.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12ed4c.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12ed52.  v0:= temp;
  #L12ed54.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12ed5a.  v1:= temp;
  #L12ed5c.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L12ed62.  v0:= temp;
  #L12ed64.  v1:= 4I;
  #L12ed66.  v2:= -1I;
  #L12ed68.  v3:= 1I;
  #L12ed6a.  if v1 >= v0 then goto L12ed9a;
  #L12ed6e.  call temp:= `charAt`(v7, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L12ed74.  v4:= temp;
  #L12ed76.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L12ed7c.  v5:= temp;
  #L12ed7e.  if v4 == v5 then goto L12ed94;
  #L12ed82.  call temp:= `compare`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L12ed88.  v7:= temp;
  #L12ed8a.  if v7 >= 0 then goto L12ed90;
  #L12ed8e.  goto L12ed92;
  #L12ed90.  v2:= 1I;
  #L12ed92.  return v2;
  #L12ed94.  v1:= v1 + 1;
  #L12ed98.  goto L12ed66;
  #L12ed9a.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12eda0.  v7:= temp;
  #L12eda2.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L12eda8.  v8:= temp;
  #L12edaa.  if v7 == v8 then goto L12edb8;
  #L12edae.  if v7 >= v8 then goto L12edb4;
  #L12edb2.  goto L12edb6;
  #L12edb4.  v2:= 1I;
  #L12edb6.  return v2;
  #L12edb8.  v7:= 0I;
  #L12edba.  return v7;
}
