record `okhttp3.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.HttpUrl.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.e` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.HttpUrl.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.g` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.i` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.j` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.HttpUrl$Companion` `@@okhttp3.HttpUrl.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FORM_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET_URI` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PASSWORD_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET_URI` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET_URI` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_REENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.USERNAME_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `char`[] `@@okhttp3.HttpUrl.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1374d0.  v0:= new `okhttp3.HttpUrl$Companion`;
  #L1374d4.  v1:= 0I;
  #L1374d6.  call `<init>`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1374dc.  `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` := v0 @kind object;
  #L1374e0.  v0:= 16I;
  #L1374e4.  v0:= new `char`[v0];
  #L1374e8.  goto L1374f4;
  #L1374ee.  `@@okhttp3.HttpUrl.k` @type ^`char`[] := v0 @kind object;
  #L1374f2.  return @kind void;
  #L1374f4.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L13751b.  goto L1374ee;
}
procedure `void` `<init>`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 , `java.util.List` v7 @kind object, `java.util.List` v8 @kind object, `java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object) @signature `Lokhttp3/HttpUrl;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L13752c.  v0:= "scheme" @kind object;
  #L137530.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137536.  v0:= "username" @kind object;
  #L13753a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137540.  v0:= "password" @kind object;
  #L137544.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13754a.  v0:= "host" @kind object;
  #L13754e.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137554.  v0:= "pathSegments" @kind object;
  #L137558.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13755e.  v0:= "url" @kind object;
  #L137562.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137568.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13756e.  v1.`okhttp3.HttpUrl.b` @type ^`java.lang.String` := v2 @kind object;
  #L137572.  v1.`okhttp3.HttpUrl.c` @type ^`java.lang.String` := v3 @kind object;
  #L137576.  v1.`okhttp3.HttpUrl.d` @type ^`java.lang.String` := v4 @kind object;
  #L13757a.  v1.`okhttp3.HttpUrl.e` @type ^`java.lang.String` := v5 @kind object;
  #L13757e.  v1.`okhttp3.HttpUrl.f` @type ^`int` := v6;
  #L137582.  v1.`okhttp3.HttpUrl.g` @type ^`java.util.List` := v7 @kind object;
  #L137586.  v1.`okhttp3.HttpUrl.h` @type ^`java.util.List` := v8 @kind object;
  #L13758a.  v1.`okhttp3.HttpUrl.i` @type ^`java.lang.String` := v9 @kind object;
  #L13758e.  v1.`okhttp3.HttpUrl.j` @type ^`java.lang.String` := v10 @kind object;
  #L137592.  v3:= "https" @kind object;
  #L137596.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L13759c.  v2:= temp;
  #L13759e.  v1.`okhttp3.HttpUrl.a` @type ^`boolean` := v2 @kind boolean;
  #L1375a2.  return @kind void;
}
procedure `char`[] `access$getHEX_DIGITS$cp`() @signature `Lokhttp3/HttpUrl;.access$getHEX_DIGITS$cp:()[C` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1368b8.  v0:= `@@okhttp3.HttpUrl.k` @type ^`char`[] @kind object;
  #L1368bc.  return v0 @kind object;
}
procedure `int` `defaultPort`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L136920.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L136924.  call temp:= `defaultPort`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.defaultPort:(Ljava/lang/String;)I` @kind virtual;
  #L13692a.  v1:= temp;
  #L13692c.  return v1;
}
procedure `okhttp3.HttpUrl` `get`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L137324.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L137328.  call temp:= `get`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L13732e.  v1:= temp @kind object;
  #L137330.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URI` v1 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L137344.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L137348.  call temp:= `get`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @kind virtual;
  #L13734e.  v1:= temp @kind object;
  #L137350.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URL` v1 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L137364.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L137368.  call temp:= `get`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @kind virtual;
  #L13736e.  v1:= temp @kind object;
  #L137370.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl` `parse`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L137384.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L137388.  call temp:= `parse`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L13738e.  v1:= temp @kind object;
  #L137390.  return v1 @kind object;
}
procedure `java.lang.String` `-deprecated_encodedFragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1369c4.  call temp:= `encodedFragment`(v1) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L1369ca.  v0:= temp @kind object;
  #L1369cc.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_encodedPassword`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1369e0.  call temp:= `encodedPassword`(v1) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L1369e6.  v0:= temp @kind object;
  #L1369e8.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_encodedPath`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1369fc.  call temp:= `encodedPath`(v1) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L136a02.  v0:= temp @kind object;
  #L136a04.  return v0 @kind object;
}
procedure `java.util.List` `-deprecated_encodedPathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1370ac.  call temp:= `encodedPathSegments`(v1) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L1370b2.  v0:= temp @kind object;
  #L1370b4.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_encodedQuery`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136a18.  call temp:= `encodedQuery`(v1) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L136a1e.  v0:= temp @kind object;
  #L136a20.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_encodedUsername`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136a34.  call temp:= `encodedUsername`(v1) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L136a3a.  v0:= temp @kind object;
  #L136a3c.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_fragment:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136a50.  v0:= v1.`okhttp3.HttpUrl.i` @type ^`java.lang.String` @kind object;
  #L136a54.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_host:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136a68.  v0:= v1.`okhttp3.HttpUrl.e` @type ^`java.lang.String` @kind object;
  #L136a6c.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_password:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136a80.  v0:= v1.`okhttp3.HttpUrl.d` @type ^`java.lang.String` @kind object;
  #L136a84.  return v0 @kind object;
}
procedure `java.util.List` `-deprecated_pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1370c8.  v0:= v1.`okhttp3.HttpUrl.g` @type ^`java.util.List` @kind object;
  #L1370cc.  return v0 @kind object;
}
procedure `int` `-deprecated_pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_pathSize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1368d0.  call temp:= `pathSize`(v1) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @kind virtual;
  #L1368d6.  v0:= temp;
  #L1368d8.  return v0;
}
procedure `int` `-deprecated_port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_port:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1368ec.  v0:= v1.`okhttp3.HttpUrl.f` @type ^`int`;
  #L1368f0.  return v0;
}
procedure `java.lang.String` `-deprecated_query`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_query:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136a98.  call temp:= `query`(v1) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L136a9e.  v0:= temp @kind object;
  #L136aa0.  return v0 @kind object;
}
procedure `java.util.Set` `-deprecated_queryParameterNames`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137260.  call temp:= `queryParameterNames`(v1) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @kind virtual;
  #L137266.  v0:= temp @kind object;
  #L137268.  return v0 @kind object;
}
procedure `int` `-deprecated_querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_querySize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136904.  call temp:= `querySize`(v1) @signature `Lokhttp3/HttpUrl;.querySize:()I` @kind virtual;
  #L13690a.  v0:= temp;
  #L13690c.  return v0;
}
procedure `java.lang.String` `-deprecated_scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_scheme:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136ab4.  v0:= v1.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L136ab8.  return v0 @kind object;
}
procedure `java.net.URI` `-deprecated_uri`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_uri:()Ljava/net/URI;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136fa8.  call temp:= `uri`(v1) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L136fae.  v0:= temp @kind object;
  #L136fb0.  return v0 @kind object;
}
procedure `java.net.URL` `-deprecated_url`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_url:()Ljava/net/URL;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L137050.  call temp:= `url`(v1) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @kind virtual;
  #L137056.  v0:= temp @kind object;
  #L137058.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_username:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136acc.  v0:= v1.`okhttp3.HttpUrl.c` @type ^`java.lang.String` @kind object;
  #L136ad0.  return v0 @kind object;
}
procedure `java.lang.String` `encodedFragment`(`okhttp3.HttpUrl` v7 @kind this) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L136ae4.  v0:= v7.`okhttp3.HttpUrl.i` @type ^`java.lang.String` @kind object;
  #L136ae8.  if v0 != 0 then goto L136af0;
  #L136aec.  v0:= 0I;
  #L136aee.  return v0 @kind object;
  #L136af0.  v1:= v7.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136af4.  v2:= 35I;
  #L136af8.  v3:= 0I;
  #L136afa.  v4:= 0I;
  #L136afc.  v5:= 6I;
  #L136afe.  v6:= 0I;
  #L136b00.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L136b06.  v0:= temp;
  #L136b08.  v0:= v0 + 1;
  #L136b0c.  v1:= v7.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136b10.  v2:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L136b14.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L136b1a.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L136b20.  v0:= temp @kind object;
  #L136b22.  v1:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L136b26.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L136b2c.  return v0 @kind object;
}
procedure `java.lang.String` `encodedPassword`(`okhttp3.HttpUrl` v8 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L136b40.  v0:= v8.`okhttp3.HttpUrl.d` @type ^`java.lang.String` @kind object;
  #L136b44.  call temp:= `length`(v0) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L136b4a.  v0:= temp;
  #L136b4c.  v1:= 1I;
  #L136b4e.  if v0 != 0 then goto L136b56;
  #L136b52.  v0:= 1I;
  #L136b54.  goto L136b58;
  #L136b56.  v0:= 0I;
  #L136b58.  if v0 == 0 then goto L136b62;
  #L136b5c.  v0:= "" @kind object;
  #L136b60.  return v0 @kind object;
  #L136b62.  v2:= v8.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136b66.  v3:= 58I;
  #L136b6a.  v0:= v8.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L136b6e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L136b74.  v0:= temp;
  #L136b76.  v4:= v0 + 3;
  #L136b7a.  v5:= 0I;
  #L136b7c.  v6:= 4I;
  #L136b7e.  v7:= 0I;
  #L136b80.  call temp:= `indexOf$default`(v2, v3, v4, v5, v6, v7) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L136b86.  v0:= temp;
  #L136b88.  v0:= v0 + v1 @kind int;
  #L136b8a.  v1:= v8.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136b8e.  v2:= 64I;
  #L136b92.  v3:= 0I;
  #L136b94.  v4:= 0I;
  #L136b96.  v5:= 6I;
  #L136b98.  v6:= 0I;
  #L136b9a.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L136ba0.  v1:= temp;
  #L136ba2.  v2:= v8.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136ba6.  v3:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L136baa.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L136bb0.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L136bb6.  v0:= temp @kind object;
  #L136bb8.  v1:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L136bbc.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L136bc2.  return v0 @kind object;
}
procedure `java.lang.String` `encodedPath`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L136bd4.  v0:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136bd8.  v1:= v6.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L136bdc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L136be2.  v1:= temp;
  #L136be4.  v2:= v1 + 3;
  #L136be8.  v1:= 47I;
  #L136bec.  v3:= 0I;
  #L136bee.  v4:= 4I;
  #L136bf0.  v5:= 0I;
  #L136bf2.  call temp:= `indexOf$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L136bf8.  v0:= temp;
  #L136bfa.  v1:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136bfe.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L136c04.  v2:= temp;
  #L136c06.  v3:= "?#" @kind object;
  #L136c0a.  call temp:= `delimiterOffset`(v1, v3, v0, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;Ljava/lang/String;II)I` @kind static;
  #L136c10.  v1:= temp;
  #L136c12.  v2:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136c16.  v3:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L136c1a.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L136c20.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L136c26.  v0:= temp @kind object;
  #L136c28.  v1:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L136c2c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L136c32.  return v0 @kind object;
}
procedure `java.util.List` `encodedPathSegments`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1370e0.  v0:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L1370e4.  v1:= v6.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L1370e8.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1370ee.  v1:= temp;
  #L1370f0.  v2:= v1 + 3;
  #L1370f4.  v1:= 47I;
  #L1370f8.  v3:= 0I;
  #L1370fa.  v4:= 4I;
  #L1370fc.  v5:= 0I;
  #L1370fe.  call temp:= `indexOf$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L137104.  v0:= temp;
  #L137106.  v1:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L13710a.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L137110.  v2:= temp;
  #L137112.  v3:= "?#" @kind object;
  #L137116.  call temp:= `delimiterOffset`(v1, v3, v0, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;Ljava/lang/String;II)I` @kind static;
  #L13711c.  v1:= temp;
  #L13711e.  v2:= new `java.util.ArrayList`;
  #L137122.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L137128.  if v0 >= v1 then goto L13716a;
  #L13712c.  v0:= v0 + 1;
  #L137130.  v3:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L137134.  v4:= 47I;
  #L137138.  call temp:= `delimiterOffset`(v3, v4, v0, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;CII)I` @kind static;
  #L13713e.  v3:= temp;
  #L137140.  v4:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L137144.  v5:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L137148.  call temp:= `requireNonNull`(v4, v5) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L13714e.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L137154.  v0:= temp @kind object;
  #L137156.  v4:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L13715a.  call `checkNotNullExpressionValue`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137160.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L137166.  v0:= v3;
  #L137168.  goto L137128;
  #L13716a.  return v2 @kind object;
}
procedure `java.lang.String` `encodedQuery`(`okhttp3.HttpUrl` v7 @kind this) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L136c44.  v0:= v7.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L136c48.  if v0 != 0 then goto L136c50;
  #L136c4c.  v0:= 0I;
  #L136c4e.  return v0 @kind object;
  #L136c50.  v1:= v7.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136c54.  v2:= 63I;
  #L136c58.  v3:= 0I;
  #L136c5a.  v4:= 0I;
  #L136c5c.  v5:= 6I;
  #L136c5e.  v6:= 0I;
  #L136c60.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L136c66.  v0:= temp;
  #L136c68.  v0:= v0 + 1;
  #L136c6c.  v1:= v7.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136c70.  v2:= 35I;
  #L136c74.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L136c7a.  v3:= temp;
  #L136c7c.  call temp:= `delimiterOffset`(v1, v2, v0, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;CII)I` @kind static;
  #L136c82.  v1:= temp;
  #L136c84.  v2:= v7.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136c88.  v3:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L136c8c.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L136c92.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L136c98.  v0:= temp @kind object;
  #L136c9a.  v1:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L136c9e.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L136ca4.  return v0 @kind object;
}
procedure `java.lang.String` `encodedUsername`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L136cb8.  v0:= v4.`okhttp3.HttpUrl.c` @type ^`java.lang.String` @kind object;
  #L136cbc.  call temp:= `length`(v0) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L136cc2.  v0:= temp;
  #L136cc4.  if v0 != 0 then goto L136ccc;
  #L136cc8.  v0:= 1I;
  #L136cca.  goto L136cce;
  #L136ccc.  v0:= 0I;
  #L136cce.  if v0 == 0 then goto L136cd8;
  #L136cd2.  v0:= "" @kind object;
  #L136cd6.  return v0 @kind object;
  #L136cd8.  v0:= v4.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L136cdc.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L136ce2.  v0:= temp;
  #L136ce4.  v0:= v0 + 3;
  #L136ce8.  v1:= v4.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136cec.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L136cf2.  v2:= temp;
  #L136cf4.  v3:= ":@" @kind object;
  #L136cf8.  call temp:= `delimiterOffset`(v1, v3, v0, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;Ljava/lang/String;II)I` @kind static;
  #L136cfe.  v1:= temp;
  #L136d00.  v2:= v4.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136d04.  v3:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L136d08.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L136d0e.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L136d14.  v0:= temp @kind object;
  #L136d16.  v1:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L136d1a.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L136d20.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L136868.  v0:= instanceof @variable v2 @type ^`okhttp3.HttpUrl` @kind boolean;
  #L13686c.  if v0 == 0 then goto L13688c;
  #L136870.  v2:= (`okhttp3.HttpUrl`) v2 @kind object;
  #L136874.  v2:= v2.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136878.  v0:= v1.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L13687c.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L136882.  v2:= temp;
  #L136884.  if v2 == 0 then goto L13688c;
  #L136888.  v2:= 1I;
  #L13688a.  goto L13688e;
  #L13688c.  v2:= 0I;
  #L13688e.  return v2;
}
procedure `java.lang.String` `fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.fragment:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136d34.  v0:= v1.`okhttp3.HttpUrl.i` @type ^`java.lang.String` @kind object;
  #L136d38.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L136940.  v0:= v1.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136944.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L13694a.  v0:= temp;
  #L13694c.  return v0;
}
procedure `java.lang.String` `host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136d4c.  v0:= v1.`okhttp3.HttpUrl.e` @type ^`java.lang.String` @kind object;
  #L136d50.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1368a0.  v0:= v1.`okhttp3.HttpUrl.a` @type ^`boolean` @kind boolean;
  #L1368a4.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1373d8.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L1373dc.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L1373e2.  v1:= v4.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L1373e6.  call `setScheme$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setScheme$okhttp:(Ljava/lang/String;)V` @kind virtual;
  #L1373ec.  call temp:= `encodedUsername`(v4) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L1373f2.  v1:= temp @kind object;
  #L1373f4.  call `setEncodedUsername$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedUsername$okhttp:(Ljava/lang/String;)V` @kind virtual;
  #L1373fa.  call temp:= `encodedPassword`(v4) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L137400.  v1:= temp @kind object;
  #L137402.  call `setEncodedPassword$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedPassword$okhttp:(Ljava/lang/String;)V` @kind virtual;
  #L137408.  v1:= v4.`okhttp3.HttpUrl.e` @type ^`java.lang.String` @kind object;
  #L13740c.  call `setHost$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setHost$okhttp:(Ljava/lang/String;)V` @kind virtual;
  #L137412.  v1:= v4.`okhttp3.HttpUrl.f` @type ^`int`;
  #L137416.  v2:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L13741a.  v3:= v4.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L13741e.  call temp:= `defaultPort`(v2, v3) @signature `Lokhttp3/HttpUrl$Companion;.defaultPort:(Ljava/lang/String;)I` @kind virtual;
  #L137424.  v2:= temp;
  #L137426.  if v1 == v2 then goto L137430;
  #L13742a.  v1:= v4.`okhttp3.HttpUrl.f` @type ^`int`;
  #L13742e.  goto L137432;
  #L137430.  v1:= -1I;
  #L137432.  call `setPort$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setPort$okhttp:(I)V` @kind virtual;
  #L137438.  call temp:= `getEncodedPathSegments$okhttp`(v0) @signature `Lokhttp3/HttpUrl$Builder;.getEncodedPathSegments$okhttp:()Ljava/util/List;` @kind virtual;
  #L13743e.  v1:= temp @kind object;
  #L137440.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L137446.  call temp:= `getEncodedPathSegments$okhttp`(v0) @signature `Lokhttp3/HttpUrl$Builder;.getEncodedPathSegments$okhttp:()Ljava/util/List;` @kind virtual;
  #L13744c.  v1:= temp @kind object;
  #L13744e.  call temp:= `encodedPathSegments`(v4) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L137454.  v2:= temp @kind object;
  #L137456.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L13745c.  call temp:= `encodedQuery`(v4) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L137462.  v1:= temp @kind object;
  #L137464.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L13746a.  call temp:= `encodedFragment`(v4) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L137470.  v1:= temp @kind object;
  #L137472.  call `setEncodedFragment$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedFragment$okhttp:(Ljava/lang/String;)V` @kind virtual;
  #L137478.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13748c.  v0:= "link" @kind object;
  #L137490.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137496.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L13749a.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L1374a0.  call temp:= `parse$okhttp`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.parse$okhttp:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1374a6.  v2:= temp @kind object;
  #L1374a8.  goto L1374ac;
  #L1374aa.  v2:= 0I;
  #L1374ac.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L137496..L1374a8] goto L1374aa;
}
procedure `java.lang.String` `password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.password:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136d64.  v0:= v1.`okhttp3.HttpUrl.d` @type ^`java.lang.String` @kind object;
  #L136d68.  return v0 @kind object;
}
procedure `java.util.List` `pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13717c.  v0:= v1.`okhttp3.HttpUrl.g` @type ^`java.util.List` @kind object;
  #L137180.  return v0 @kind object;
}
procedure `int` `pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136960.  v0:= v1.`okhttp3.HttpUrl.g` @type ^`java.util.List` @kind object;
  #L136964.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L13696a.  v0:= temp;
  #L13696c.  return v0;
}
procedure `int` `port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.port:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136980.  v0:= v1.`okhttp3.HttpUrl.f` @type ^`int`;
  #L136984.  return v0;
}
procedure `java.lang.String` `query`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L136d7c.  v0:= v3.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L136d80.  if v0 != 0 then goto L136d88;
  #L136d84.  v0:= 0I;
  #L136d86.  return v0 @kind object;
  #L136d88.  v0:= new `java.lang.StringBuilder`;
  #L136d8c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L136d92.  v1:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L136d96.  v2:= v3.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L136d9a.  call `toQueryString$okhttp`(v1, v2, v0) @signature `Lokhttp3/HttpUrl$Companion;.toQueryString$okhttp:(Ljava/util/List;Ljava/lang/StringBuilder;)V` @kind virtual;
  #L136da0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L136da6.  v0:= temp @kind object;
  #L136da8.  return v0 @kind object;
}
procedure `java.lang.String` `queryParameter`(`okhttp3.HttpUrl` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lokhttp3/HttpUrl;.queryParameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L136dbc.  v0:= "name" @kind object;
  #L136dc0.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L136dc6.  v0:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L136dca.  v1:= 0I;
  #L136dcc.  if v0 != 0 then goto L136dd2;
  #L136dd0.  return v1 @kind object;
  #L136dd2.  v2:= 0I;
  #L136dd4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L136dda.  v0:= temp;
  #L136ddc.  call temp:= `until`(v2, v0) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L136de2.  v0:= temp @kind object;
  #L136de4.  v2:= 2I;
  #L136de6.  call temp:= `step`(v0, v2) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L136dec.  v0:= temp @kind object;
  #L136dee.  call temp:= `getFirst`(v0) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L136df4.  v2:= temp;
  #L136df6.  call temp:= `getLast`(v0) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L136dfc.  v3:= temp;
  #L136dfe.  call temp:= `getStep`(v0) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L136e04.  v0:= temp;
  #L136e06.  if v0 < 0 then goto L136e10;
  #L136e0a.  if v2 > v3 then goto L136e4e;
  #L136e0e.  goto L136e14;
  #L136e10.  if v2 < v3 then goto L136e4e;
  #L136e14.  v4:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L136e18.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L136e1e.  v4:= temp @kind object;
  #L136e20.  v4:= (`java.lang.String`) v4 @kind object;
  #L136e24.  call temp:= `areEqual`(v6, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L136e2a.  v4:= temp;
  #L136e2c.  if v4 == 0 then goto L136e46;
  #L136e30.  v6:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L136e34.  v2:= v2 + 1;
  #L136e38.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L136e3e.  v6:= temp @kind object;
  #L136e40.  v6:= (`java.lang.String`) v6 @kind object;
  #L136e44.  return v6 @kind object;
  #L136e46.  if v2 == v3 then goto L136e4e;
  #L136e4a.  v2:= v2 + v0 @kind int;
  #L136e4c.  goto L136e14;
  #L136e4e.  return v1 @kind object;
}
procedure `java.lang.String` `queryParameterName`(`okhttp3.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl;.queryParameterName:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136e60.  v0:= v1.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L136e64.  if v0 == 0 then goto L136e80;
  #L136e68.  v2:= v2 * 2;
  #L136e6c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L136e72.  v2:= temp @kind object;
  #L136e74.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L136e7a.  v2:= (`java.lang.String`) v2 @kind object;
  #L136e7e.  return v2 @kind object;
  #L136e80.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L136e84.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L136e8a.  throw v2;
}
procedure `java.util.Set` `queryParameterNames`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L13727c.  v0:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L137280.  if v0 != 0 then goto L13728e;
  #L137284.  call temp:= `emptySet`() @signature `Lkotlin/collections/SetsKt;.emptySet:()Ljava/util/Set;` @kind static;
  #L13728a.  v0:= temp @kind object;
  #L13728c.  return v0 @kind object;
  #L13728e.  v0:= new `java.util.LinkedHashSet`;
  #L137292.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L137298.  v1:= 0I;
  #L13729a.  v2:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L13729e.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1372a4.  v2:= temp;
  #L1372a6.  call temp:= `until`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L1372ac.  v1:= temp @kind object;
  #L1372ae.  v2:= 2I;
  #L1372b0.  call temp:= `step`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L1372b6.  v1:= temp @kind object;
  #L1372b8.  call temp:= `getFirst`(v1) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L1372be.  v2:= temp;
  #L1372c0.  call temp:= `getLast`(v1) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L1372c6.  v3:= temp;
  #L1372c8.  call temp:= `getStep`(v1) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L1372ce.  v1:= temp;
  #L1372d0.  if v1 < 0 then goto L1372da;
  #L1372d4.  if v2 > v3 then goto L1372fe;
  #L1372d8.  goto L1372de;
  #L1372da.  if v2 < v3 then goto L1372fe;
  #L1372de.  v4:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L1372e2.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1372e8.  v4:= temp @kind object;
  #L1372ea.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1372f0.  call temp:= `add`(v0, v4) @signature `Ljava/util/LinkedHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1372f6.  if v2 == v3 then goto L1372fe;
  #L1372fa.  v2:= v2 + v1 @kind int;
  #L1372fc.  goto L1372de;
  #L1372fe.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L137304.  v0:= temp @kind object;
  #L137306.  v1:= "Collections.unmodifiableSet(result)" @kind object;
  #L13730a.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137310.  return v0 @kind object;
}
procedure `java.lang.String` `queryParameterValue`(`okhttp3.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl;.queryParameterValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136e9c.  v0:= v1.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L136ea0.  if v0 == 0 then goto L136eba;
  #L136ea4.  v2:= v2 * 2;
  #L136ea8.  v2:= v2 + 1;
  #L136eac.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L136eb2.  v2:= temp @kind object;
  #L136eb4.  v2:= (`java.lang.String`) v2 @kind object;
  #L136eb8.  return v2 @kind object;
  #L136eba.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L136ebe.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L136ec4.  throw v2;
}
procedure `java.util.List` `queryParameterValues`(`okhttp3.HttpUrl` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl;.queryParameterValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L137194.  v0:= "name" @kind object;
  #L137198.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13719e.  v0:= v6.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L1371a2.  if v0 != 0 then goto L1371b0;
  #L1371a6.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L1371ac.  v7:= temp @kind object;
  #L1371ae.  return v7 @kind object;
  #L1371b0.  v0:= new `java.util.ArrayList`;
  #L1371b4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1371ba.  v1:= 0I;
  #L1371bc.  v2:= v6.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L1371c0.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1371c6.  v2:= temp;
  #L1371c8.  call temp:= `until`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L1371ce.  v1:= temp @kind object;
  #L1371d0.  v2:= 2I;
  #L1371d2.  call temp:= `step`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L1371d8.  v1:= temp @kind object;
  #L1371da.  call temp:= `getFirst`(v1) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L1371e0.  v2:= temp;
  #L1371e2.  call temp:= `getLast`(v1) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L1371e8.  v3:= temp;
  #L1371ea.  call temp:= `getStep`(v1) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L1371f0.  v1:= temp;
  #L1371f2.  if v1 < 0 then goto L1371fc;
  #L1371f6.  if v2 > v3 then goto L13723a;
  #L1371fa.  goto L137200;
  #L1371fc.  if v2 < v3 then goto L13723a;
  #L137200.  v4:= v6.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L137204.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L13720a.  v4:= temp @kind object;
  #L13720c.  v4:= (`java.lang.String`) v4 @kind object;
  #L137210.  call temp:= `areEqual`(v7, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L137216.  v4:= temp;
  #L137218.  if v4 == 0 then goto L137232;
  #L13721c.  v4:= v6.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L137220.  v5:= v2 + 1;
  #L137224.  call temp:= `get`(v4, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L13722a.  v4:= temp @kind object;
  #L13722c.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L137232.  if v2 == v3 then goto L13723a;
  #L137236.  v2:= v2 + v1 @kind int;
  #L137238.  goto L137200;
  #L13723a.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L137240.  v7:= temp @kind object;
  #L137242.  v0:= "Collections.unmodifiableList(result)" @kind object;
  #L137246.  call `checkNotNullExpressionValue`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13724c.  return v7 @kind object;
}
procedure `int` `querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.querySize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136998.  v0:= v1.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L13699c.  if v0 == 0 then goto L1369ae;
  #L1369a0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1369a6.  v0:= temp;
  #L1369a8.  v0:= v0 / 2;
  #L1369ac.  goto L1369b0;
  #L1369ae.  v0:= 0I;
  #L1369b0.  return v0;
}
procedure `java.lang.String` `redact`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L136ed8.  v0:= "/..." @kind object;
  #L136edc.  call temp:= `newBuilder`(v2, v0) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L136ee2.  v0:= temp @kind object;
  #L136ee4.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L136eea.  v1:= "" @kind object;
  #L136eee.  call temp:= `username`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L136ef4.  v0:= temp @kind object;
  #L136ef6.  call temp:= `password`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L136efc.  v0:= temp @kind object;
  #L136efe.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L136f04.  v0:= temp @kind object;
  #L136f06.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L136f0c.  v0:= temp @kind object;
  #L136f0e.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `resolve`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1373a4.  v0:= "link" @kind object;
  #L1373a8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1373ae.  call temp:= `newBuilder`(v1, v2) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1373b4.  v2:= temp @kind object;
  #L1373b6.  if v2 == 0 then goto L1373c4;
  #L1373ba.  call temp:= `build`(v2) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1373c0.  v2:= temp @kind object;
  #L1373c2.  goto L1373c6;
  #L1373c4.  v2:= 0I;
  #L1373c6.  return v2 @kind object;
}
procedure `java.lang.String` `scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136f20.  v0:= v1.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L136f24.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L136f38.  v0:= v1.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L136f3c.  return v0 @kind object;
}
procedure `java.lang.String` `topPrivateDomain`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.topPrivateDomain:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L136f50.  v0:= v2.`okhttp3.HttpUrl.e` @type ^`java.lang.String` @kind object;
  #L136f54.  call temp:= `canParseAsIpAddress`(v0) @signature `Lokhttp3/internal/Util;.canParseAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L136f5a.  v0:= temp;
  #L136f5c.  if v0 == 0 then goto L136f64;
  #L136f60.  v0:= 0I;
  #L136f62.  goto L136f7c;
  #L136f64.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.Companion` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion` @kind object;
  #L136f68.  call temp:= `get`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind virtual;
  #L136f6e.  v0:= temp @kind object;
  #L136f70.  v1:= v2.`okhttp3.HttpUrl.e` @type ^`java.lang.String` @kind object;
  #L136f74.  call temp:= `getEffectiveTldPlusOne`(v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L136f7a.  v0:= temp @kind object;
  #L136f7c.  return v0 @kind object;
}
procedure `java.net.URI` `uri`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L136fc4.  call temp:= `newBuilder`(v4) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L136fca.  v0:= temp @kind object;
  #L136fcc.  call temp:= `reencodeForUri$okhttp`(v0) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri$okhttp:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L136fd2.  v0:= temp @kind object;
  #L136fd4.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L136fda.  v0:= temp @kind object;
  #L136fdc.  v1:= new `java.net.URI`;
  #L136fe0.  call `<init>`(v1, v0) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L136fe6.  goto L137016;
  #L136fe8.  v1:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L136fea.  v2:= new `kotlin.text.Regex`;
  #L136fee.  v3:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L136ff2.  call `<init>`(v2, v3) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L136ff8.  v3:= "" @kind object;
  #L136ffc.  call temp:= `replace`(v2, v0, v3) @signature `Lkotlin/text/Regex;.replace:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L137002.  v0:= temp @kind object;
  #L137004.  call temp:= `create`(v0) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L13700a.  v1:= temp @kind object;
  #L13700c.  v0:= "try {\n        val stripp…e) // Unexpected!\n      }" @kind object;
  #L137010.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L137016.  return v1 @kind object;
  #L137018.  v0:= new `java.lang.RuntimeException`;
  #L13701c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L137022.  throw v0;
  catch `java.net.URISyntaxException` @[L136fdc..L136fe6] goto L136fe8;
  catch `java.lang.Exception` @[L136fea..L13700c] goto L137018;
}
procedure `java.net.URL` `url`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13706c.  v0:= new `java.net.URL`;
  #L137070.  v1:= v2.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L137074.  call `<init>`(v0, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13707a.  return v0 @kind object;
  #L13707c.  v0:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L13707e.  v1:= new `java.lang.RuntimeException`;
  #L137082.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L137088.  throw v1;
  catch `java.net.MalformedURLException` @[L13706c..L13707a] goto L13707c;
}
procedure `java.lang.String` `username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.username:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L136f90.  v0:= v1.`okhttp3.HttpUrl.c` @type ^`java.lang.String` @kind object;
  #L136f94.  return v0 @kind object;
}
