record `okhttp3.RequestBody$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.RequestBody$Companion` v0 @kind this) @signature `Lokhttp3/RequestBody$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L13bb48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13bb4e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.RequestBody$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/RequestBody$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L13bb60.  call `<init>`(v0) @signature `Lokhttp3/RequestBody$Companion;.<init>:()V` @kind direct;
  #L13bb66.  return @kind void;
}
procedure `okhttp3.RequestBody` `create$default`(`okhttp3.RequestBody$Companion` v0 @kind object, `java.io.File` v1 @kind object, `okhttp3.MediaType` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Ljava/io/File;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13b844.  v3:= v3 ^& 1;
  #L13b848.  if v3 == 0 then goto L13b84e;
  #L13b84c.  v2:= 0I;
  #L13b84e.  call temp:= `create`(v0, v1, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/io/File;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L13b854.  v0:= temp @kind object;
  #L13b856.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create$default`(`okhttp3.RequestBody$Companion` v0 @kind object, `java.lang.String` v1 @kind object, `okhttp3.MediaType` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Ljava/lang/String;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13b868.  v3:= v3 ^& 1;
  #L13b86c.  if v3 == 0 then goto L13b872;
  #L13b870.  v2:= 0I;
  #L13b872.  call temp:= `create`(v0, v1, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L13b878.  v0:= temp @kind object;
  #L13b87a.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create$default`(`okhttp3.RequestBody$Companion` v0 @kind object, `okhttp3.MediaType` v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Lokhttp3/MediaType;[BIIILjava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13b88c.  v6:= v5 ^& 4;
  #L13b890.  if v6 == 0 then goto L13b896;
  #L13b894.  v3:= 0I;
  #L13b896.  v5:= v5 ^& 8;
  #L13b89a.  if v5 == 0 then goto L13b8a0;
  #L13b89e.  v4:= length @variable v2;
  #L13b8a0.  call temp:= `create`(v0, v1, v2, v3, v4) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;[BII)Lokhttp3/RequestBody;` @kind virtual;
  #L13b8a6.  v0:= temp @kind object;
  #L13b8a8.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create$default`(`okhttp3.RequestBody$Companion` v0 @kind object, `okio.ByteString` v1 @kind object, `okhttp3.MediaType` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Lokio/ByteString;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13b8bc.  v3:= v3 ^& 1;
  #L13b8c0.  if v3 == 0 then goto L13b8c6;
  #L13b8c4.  v2:= 0I;
  #L13b8c6.  call temp:= `create`(v0, v1, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L13b8cc.  v0:= temp @kind object;
  #L13b8ce.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create$default`(`okhttp3.RequestBody$Companion` v0 @kind object, `byte`[] v1 @kind object, `okhttp3.MediaType` v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L13b80c.  v6:= v5 ^& 1;
  #L13b810.  if v6 == 0 then goto L13b816;
  #L13b814.  v2:= 0I;
  #L13b816.  v6:= v5 ^& 2;
  #L13b81a.  if v6 == 0 then goto L13b820;
  #L13b81e.  v3:= 0I;
  #L13b820.  v5:= v5 ^& 4;
  #L13b824.  if v5 == 0 then goto L13b82a;
  #L13b828.  v4:= length @variable v1;
  #L13b82a.  call temp:= `create`(v0, v1, v2, v3, v4) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;` @kind virtual;
  #L13b830.  v0:= temp @kind object;
  #L13b832.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `java.io.File` v2 @kind object, `okhttp3.MediaType` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/io/File;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13b98c.  v0:= "$this$asRequestBody" @kind object;
  #L13b990.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b996.  v0:= new `okhttp3.RequestBody$Companion$asRequestBody$1`;
  #L13b99a.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/RequestBody$Companion$asRequestBody$1;.<init>:(Ljava/io/File;Lokhttp3/MediaType;)V` @kind direct;
  #L13b9a0.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v3 @kind this, `java.lang.String` v4 @kind object, `okhttp3.MediaType` v5 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13b9b4.  v0:= "$this$toRequestBody" @kind object;
  #L13b9b8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b9be.  v0:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L13b9c2.  if v5 == 0 then goto L13ba08;
  #L13b9c6.  v1:= 1I;
  #L13b9c8.  v2:= 0I;
  #L13b9ca.  call temp:= `charset$default`(v5, v2, v1, v2) @signature `Lokhttp3/MediaType;.charset$default:(Lokhttp3/MediaType;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/nio/charset/Charset;` @kind static;
  #L13b9d0.  v1:= temp @kind object;
  #L13b9d2.  if v1 != 0 then goto L13ba06;
  #L13b9d6.  v1:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L13b9da.  v2:= new `java.lang.StringBuilder`;
  #L13b9de.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13b9e4.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b9ea.  v5:= "; charset=utf-8" @kind object;
  #L13b9ee.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b9f4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b9fa.  v5:= temp @kind object;
  #L13b9fc.  call temp:= `parse`(v1, v5) @signature `Lokhttp3/MediaType$Companion;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L13ba02.  v5:= temp @kind object;
  #L13ba04.  goto L13ba08;
  #L13ba06.  v0:= v1 @kind object;
  #L13ba08.  call temp:= `getBytes`(v4, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L13ba0e.  v4:= temp @kind object;
  #L13ba10.  v0:= "(this as java.lang.String).getBytes(charset)" @kind object;
  #L13ba14.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ba1a.  v0:= 0I;
  #L13ba1c.  v1:= length @variable v4;
  #L13ba1e.  call temp:= `create`(v3, v4, v5, v0, v1) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;` @kind virtual;
  #L13ba24.  v4:= temp @kind object;
  #L13ba26.  return v4 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `okhttp3.MediaType` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;Ljava/io/File;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13bab4.  v0:= "file" @kind object;
  #L13bab8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13babe.  call temp:= `create`(v1, v3, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/io/File;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L13bac4.  v2:= temp @kind object;
  #L13bac6.  return v2 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `okhttp3.MediaType` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13bad8.  v0:= "content" @kind object;
  #L13badc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13bae2.  call temp:= `create`(v1, v3, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L13bae8.  v2:= temp @kind object;
  #L13baea.  return v2 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `okhttp3.MediaType` v2 @kind object, `okio.ByteString` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13bafc.  v0:= "content" @kind object;
  #L13bb00.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13bb06.  call temp:= `create`(v1, v3, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L13bb0c.  v2:= temp @kind object;
  #L13bb0e.  return v2 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `okhttp3.MediaType` v8 @kind object, `byte`[] v9 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13ba38.  v3:= 0I;
  #L13ba3a.  v4:= 0I;
  #L13ba3c.  v5:= 12I;
  #L13ba40.  v6:= 0I;
  #L13ba42.  v0:= v7 @kind object;
  #L13ba44.  v1:= v8 @kind object;
  #L13ba46.  v2:= v9 @kind object;
  #L13ba48.  call temp:= `create$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Lokhttp3/MediaType;[BIIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L13ba4e.  v8:= temp @kind object;
  #L13ba50.  return v8 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `okhttp3.MediaType` v8 @kind object, `byte`[] v9 @kind object, `int` v10 ) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;[BI)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13ba64.  v4:= 0I;
  #L13ba66.  v5:= 8I;
  #L13ba6a.  v6:= 0I;
  #L13ba6c.  v0:= v7 @kind object;
  #L13ba6e.  v1:= v8 @kind object;
  #L13ba70.  v2:= v9 @kind object;
  #L13ba72.  v3:= v10;
  #L13ba74.  call temp:= `create$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Lokhttp3/MediaType;[BIIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L13ba7a.  v8:= temp @kind object;
  #L13ba7c.  return v8 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `okhttp3.MediaType` v2 @kind object, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;[BII)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13ba90.  v0:= "content" @kind object;
  #L13ba94.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ba9a.  call temp:= `create`(v1, v3, v2, v4, v5) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;` @kind virtual;
  #L13baa0.  v2:= temp @kind object;
  #L13baa2.  return v2 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `okio.ByteString` v2 @kind object, `okhttp3.MediaType` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13bb20.  v0:= "$this$toRequestBody" @kind object;
  #L13bb24.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13bb2a.  v0:= new `okhttp3.RequestBody$Companion$toRequestBody$1`;
  #L13bb2e.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/RequestBody$Companion$toRequestBody$1;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;)V` @kind direct;
  #L13bb34.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `byte`[] v8 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:([B)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13b8e0.  v2:= 0I;
  #L13b8e2.  v3:= 0I;
  #L13b8e4.  v4:= 0I;
  #L13b8e6.  v5:= 7I;
  #L13b8e8.  v6:= 0I;
  #L13b8ea.  v0:= v7 @kind object;
  #L13b8ec.  v1:= v8 @kind object;
  #L13b8ee.  call temp:= `create$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L13b8f4.  v8:= temp @kind object;
  #L13b8f6.  return v8 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `byte`[] v8 @kind object, `okhttp3.MediaType` v9 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13b908.  v3:= 0I;
  #L13b90a.  v4:= 0I;
  #L13b90c.  v5:= 6I;
  #L13b90e.  v6:= 0I;
  #L13b910.  v0:= v7 @kind object;
  #L13b912.  v1:= v8 @kind object;
  #L13b914.  v2:= v9 @kind object;
  #L13b916.  call temp:= `create$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L13b91c.  v8:= temp @kind object;
  #L13b91e.  return v8 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `byte`[] v8 @kind object, `okhttp3.MediaType` v9 @kind object, `int` v10 ) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;I)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13b930.  v4:= 0I;
  #L13b932.  v5:= 4I;
  #L13b934.  v6:= 0I;
  #L13b936.  v0:= v7 @kind object;
  #L13b938.  v1:= v8 @kind object;
  #L13b93a.  v2:= v9 @kind object;
  #L13b93c.  v3:= v10;
  #L13b93e.  call temp:= `create$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L13b944.  v8:= temp @kind object;
  #L13b946.  return v8 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `byte`[] v8 @kind object, `okhttp3.MediaType` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13b958.  v0:= "$this$toRequestBody" @kind object;
  #L13b95c.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13b962.  v0:= length @variable v8;
  #L13b964.  v1:= (`long`) v0 @kind i2l;
  #L13b966.  v3:= (`long`) v10 @kind i2l;
  #L13b968.  v5:= (`long`) v11 @kind i2l;
  #L13b96a.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L13b970.  v0:= new `okhttp3.RequestBody$Companion$toRequestBody$2`;
  #L13b974.  call `<init>`(v0, v8, v9, v11, v10) @signature `Lokhttp3/RequestBody$Companion$toRequestBody$2;.<init>:([BLokhttp3/MediaType;II)V` @kind direct;
  #L13b97a.  return v0 @kind object;
}
