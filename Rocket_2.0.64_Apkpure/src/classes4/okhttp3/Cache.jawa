record `okhttp3.Cache` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface, `java.io.Flushable` @kind interface {
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.Cache.a` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.Cache.b` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.c` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.d` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.e` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.f` @AccessFlag PRIVATE;
}
global `okhttp3.Cache$Companion` `@@okhttp3.Cache.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L12d9f4.  v0:= new `okhttp3.Cache$Companion`;
  #L12d9f8.  v1:= 0I;
  #L12d9fa.  call `<init>`(v0, v1) @signature `Lokhttp3/Cache$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L12da00.  `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` := v0 @kind object;
  #L12da04.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache` v1 @kind this, `java.io.File` v2 @kind object, `long` v3 ) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12da18.  v0:= "directory" @kind object;
  #L12da1c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12da22.  v0:= `@@okhttp3.internal.io.FileSystem.SYSTEM` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L12da26.  call `<init>`(v1, v2, v3, v0) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V` @kind direct;
  #L12da2c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache` v9 @kind this, `java.io.File` v10 @kind object, `long` v11 , `okhttp3.internal.io.FileSystem` v13 @kind object) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L12da40.  v0:= "directory" @kind object;
  #L12da44.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12da4a.  v0:= "fileSystem" @kind object;
  #L12da4e.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12da54.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12da5a.  v0:= new `okhttp3.internal.cache.DiskLruCache`;
  #L12da5e.  v8:= `@@okhttp3.internal.concurrent.TaskRunner.INSTANCE` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L12da62.  v4:= 201105I;
  #L12da68.  v5:= 2I;
  #L12da6a.  v1:= v0 @kind object;
  #L12da6c.  v2:= v13 @kind object;
  #L12da6e.  v3:= v10 @kind object;
  #L12da70.  v6:= v11 @kind wide;
  #L12da72.  call `<init>`(v1, v2, v3, v4, v5, v6, v8) @signature `Lokhttp3/internal/cache/DiskLruCache;.<init>:(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJLokhttp3/internal/concurrent/TaskRunner;)V` @kind direct;
  #L12da78.  v9.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` := v0 @kind object;
  #L12da7c.  return @kind void;
}
procedure `void` `a`(`okhttp3.Cache` v0 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v1 @kind object) @signature `Lokhttp3/Cache;.a:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L12da90.  if v1 == 0 then goto L12da9a;
  #L12da94.  call `abort`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abort:()V` @kind virtual;
  #L12da9a.  return @kind void;
  catch `java.io.IOException` @[L12da94..L12da9a] goto L12da9a;
}
procedure `java.lang.String` `key`(`okhttp3.HttpUrl` v1 @kind object) @signature `Lokhttp3/Cache;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L12d7b8.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L12d7bc.  call temp:= `key`(v0, v1) @signature `Lokhttp3/Cache$Companion;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L12d7c2.  v1:= temp @kind object;
  #L12d7c4.  return v1 @kind object;
}
procedure `java.io.File` `-deprecated_directory`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.-deprecated_directory:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d778.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12d77c.  call temp:= `getDirectory`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.getDirectory:()Ljava/io/File;` @kind virtual;
  #L12d782.  v0:= temp @kind object;
  #L12d784.  return v0 @kind object;
}
procedure `void` `close`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12dabc.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12dac0.  call `close`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.close:()V` @kind virtual;
  #L12dac6.  return @kind void;
}
procedure `void` `delete`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.delete:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12dad8.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12dadc.  call `delete`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.delete:()V` @kind virtual;
  #L12dae2.  return @kind void;
}
procedure `java.io.File` `directory`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.directory:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d798.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12d79c.  call temp:= `getDirectory`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.getDirectory:()Ljava/io/File;` @kind virtual;
  #L12d7a2.  v0:= temp @kind object;
  #L12d7a4.  return v0 @kind object;
}
procedure `void` `evictAll`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.evictAll:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12daf4.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12daf8.  call `evictAll`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.evictAll:()V` @kind virtual;
  #L12dafe.  return @kind void;
}
procedure `void` `flush`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12db10.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12db14.  call `flush`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.flush:()V` @kind virtual;
  #L12db1a.  return @kind void;
}
procedure `okhttp3.Response` `get$okhttp`(`okhttp3.Cache` v4 @kind this, `okhttp3.Request` v5 @kind object) @signature `Lokhttp3/Cache;.get$okhttp:(Lokhttp3/Request;)Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12d834.  v0:= "request" @kind object;
  #L12d838.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d83e.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L12d842.  call temp:= `url`(v5) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L12d848.  v1:= temp @kind object;
  #L12d84a.  call temp:= `key`(v0, v1) @signature `Lokhttp3/Cache$Companion;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L12d850.  v0:= temp @kind object;
  #L12d852.  v1:= 0I;
  #L12d854.  v2:= v4.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12d858.  call temp:= `get`(v2, v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.get:(Ljava/lang/String;)Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L12d85e.  v0:= temp @kind object;
  #L12d860.  if v0 == 0 then goto L12d8a8;
  #L12d864.  v2:= new `okhttp3.Cache$Entry`;
  #L12d868.  v3:= 0I;
  #L12d86a.  call temp:= `getSource`(v0, v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L12d870.  v3:= temp @kind object;
  #L12d872.  call `<init>`(v2, v3) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @kind direct;
  #L12d878.  call temp:= `d`(v2, v0) @signature `Lokhttp3/Cache$Entry;.d:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @kind virtual;
  #L12d87e.  v0:= temp @kind object;
  #L12d880.  call temp:= `b`(v2, v5, v0) @signature `Lokhttp3/Cache$Entry;.b:(Lokhttp3/Request;Lokhttp3/Response;)Z` @kind virtual;
  #L12d886.  v5:= temp;
  #L12d888.  if v5 != 0 then goto L12d8a0;
  #L12d88c.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L12d892.  v5:= temp @kind object;
  #L12d894.  if v5 == 0 then goto L12d89e;
  #L12d898.  call `closeQuietly`(v5) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L12d89e.  return v1 @kind object;
  #L12d8a0.  return v0 @kind object;
  #L12d8a2.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L12d8a8.  return v1 @kind object;
  catch `java.io.IOException` @[L12d854..L12d860] goto L12d8a8;
  catch `java.io.IOException` @[L12d864..L12d878] goto L12d8a2;
}
procedure `okhttp3.internal.cache.DiskLruCache` `getCache$okhttp`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.getCache$okhttp:()Lokhttp3/internal/cache/DiskLruCache;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d9dc.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12d9e0.  return v0 @kind object;
}
procedure `int` `getWriteAbortCount$okhttp`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.getWriteAbortCount$okhttp:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d66c.  v0:= v1.`okhttp3.Cache.c` @type ^`int`;
  #L12d670.  return v0;
}
procedure `int` `getWriteSuccessCount$okhttp`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.getWriteSuccessCount$okhttp:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d684.  v0:= v1.`okhttp3.Cache.b` @type ^`int`;
  #L12d688.  return v0;
}
procedure `int` `hitCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.hitCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d69c.  @monitorenter v1
  #L12d69e.  v0:= v1.`okhttp3.Cache.e` @type ^`int`;
  #L12d6a2.  @monitorexit v1
  #L12d6a4.  return v0;
  #L12d6a6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12d6a8.  @monitorexit v1
  #L12d6aa.  throw v0;
  catch `java.lang.Throwable` @[L12d69e..L12d6a2] goto L12d6a6;
}
procedure `void` `initialize`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.initialize:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12db2c.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12db30.  call `initialize`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.initialize:()V` @kind virtual;
  #L12db36.  return @kind void;
}
procedure `boolean` `isClosed`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.isClosed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d64c.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12d650.  call temp:= `isClosed`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.isClosed:()Z` @kind virtual;
  #L12d656.  v0:= temp;
  #L12d658.  return v0;
}
procedure `long` `maxSize`(`okhttp3.Cache` v2 @kind this) @signature `Lokhttp3/Cache;.maxSize:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12d7f4.  v0:= v2.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12d7f8.  call temp:= `getMaxSize`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.getMaxSize:()J` @kind virtual;
  #L12d7fe.  v0:= temp @kind wide;
  #L12d800.  return v0 @kind wide;
}
procedure `int` `networkCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.networkCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d6c8.  @monitorenter v1
  #L12d6ca.  v0:= v1.`okhttp3.Cache.d` @type ^`int`;
  #L12d6ce.  @monitorexit v1
  #L12d6d0.  return v0;
  #L12d6d2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12d6d4.  @monitorexit v1
  #L12d6d6.  throw v0;
  catch `java.lang.Throwable` @[L12d6ca..L12d6ce] goto L12d6d2;
}
procedure `okhttp3.internal.cache.CacheRequest` `put$okhttp`(`okhttp3.Cache` v9 @kind this, `okhttp3.Response` v10 @kind object) @signature `Lokhttp3/Cache;.put$okhttp:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L12d8d8.  v0:= "response" @kind object;
  #L12d8dc.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d8e2.  call temp:= `request`(v10) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L12d8e8.  v0:= temp @kind object;
  #L12d8ea.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L12d8f0.  v0:= temp @kind object;
  #L12d8f2.  v1:= `@@okhttp3.internal.http.HttpMethod.INSTANCE` @type ^`okhttp3.internal.http.HttpMethod` @kind object;
  #L12d8f6.  call temp:= `request`(v10) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L12d8fc.  v2:= temp @kind object;
  #L12d8fe.  call temp:= `method`(v2) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L12d904.  v2:= temp @kind object;
  #L12d906.  call temp:= `invalidatesCache`(v1, v2) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @kind virtual;
  #L12d90c.  v1:= temp;
  #L12d90e.  v2:= 0I;
  #L12d910.  if v1 == 0 then goto L12d924;
  #L12d914.  call temp:= `request`(v10) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L12d91a.  v10:= temp @kind object;
  #L12d91c.  call `remove$okhttp`(v9, v10) @signature `Lokhttp3/Cache;.remove$okhttp:(Lokhttp3/Request;)V` @kind virtual;
  #L12d922.  return v2 @kind object;
  #L12d924.  v1:= "GET" @kind object;
  #L12d928.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12d92e.  v0:= temp;
  #L12d930.  v0:= v0 ^~ 1;
  #L12d934.  if v0 == 0 then goto L12d93a;
  #L12d938.  return v2 @kind object;
  #L12d93a.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L12d93e.  call temp:= `hasVaryAll`(v0, v10) @signature `Lokhttp3/Cache$Companion;.hasVaryAll:(Lokhttp3/Response;)Z` @kind virtual;
  #L12d944.  v1:= temp;
  #L12d946.  if v1 == 0 then goto L12d94c;
  #L12d94a.  return v2 @kind object;
  #L12d94c.  v1:= new `okhttp3.Cache$Entry`;
  #L12d950.  call `<init>`(v1, v10) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L12d956.  v3:= v9.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12d95a.  call temp:= `request`(v10) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L12d960.  v10:= temp @kind object;
  #L12d962.  call temp:= `url`(v10) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L12d968.  v10:= temp @kind object;
  #L12d96a.  call temp:= `key`(v0, v10) @signature `Lokhttp3/Cache$Companion;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L12d970.  v4:= temp @kind object;
  #L12d972.  v5:= 0L;
  #L12d976.  v7:= 2I;
  #L12d978.  v8:= 0I;
  #L12d97a.  call temp:= `edit$default`(v3, v4, v5, v7, v8) @signature `Lokhttp3/internal/cache/DiskLruCache;.edit$default:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;JILjava/lang/Object;)Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind static;
  #L12d980.  v10:= temp @kind object;
  #L12d982.  if v10 == 0 then goto L12d998;
  #L12d986.  call `f`(v1, v10) @signature `Lokhttp3/Cache$Entry;.f:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind virtual;
  #L12d98c.  v0:= new `okhttp3.Cache$RealCacheRequest`;
  #L12d990.  call `<init>`(v0, v9, v10) @signature `Lokhttp3/Cache$RealCacheRequest;.<init>:(Lokhttp3/Cache;Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind direct;
  #L12d996.  return v0 @kind object;
  #L12d998.  return v2 @kind object;
  #L12d99a.  v10:= v2 @kind object;
  #L12d99c.  call `a`(v9, v10) @signature `Lokhttp3/Cache;.a:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind direct;
  #L12d9a2.  return v2 @kind object;
  catch `java.io.IOException` @[L12d914..L12d922] goto L12d922;
  catch `java.io.IOException` @[L12d956..L12d982] goto L12d99a;
  catch `java.io.IOException` @[L12d986..L12d996] goto L12d99c;
}
procedure `void` `remove$okhttp`(`okhttp3.Cache` v2 @kind this, `okhttp3.Request` v3 @kind object) @signature `Lokhttp3/Cache;.remove$okhttp:(Lokhttp3/Request;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12db48.  v0:= "request" @kind object;
  #L12db4c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12db52.  v0:= v2.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12db56.  v1:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L12db5a.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L12db60.  v3:= temp @kind object;
  #L12db62.  call temp:= `key`(v1, v3) @signature `Lokhttp3/Cache$Companion;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L12db68.  v3:= temp @kind object;
  #L12db6a.  call temp:= `remove`(v0, v3) @signature `Lokhttp3/internal/cache/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L12db70.  return @kind void;
}
procedure `int` `requestCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.requestCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d6f4.  @monitorenter v1
  #L12d6f6.  v0:= v1.`okhttp3.Cache.f` @type ^`int`;
  #L12d6fa.  @monitorexit v1
  #L12d6fc.  return v0;
  #L12d6fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12d700.  @monitorexit v1
  #L12d702.  throw v0;
  catch `java.lang.Throwable` @[L12d6f6..L12d6fa] goto L12d6fe;
}
procedure `void` `setWriteAbortCount$okhttp`(`okhttp3.Cache` v0 @kind this, `int` v1 ) @signature `Lokhttp3/Cache;.setWriteAbortCount$okhttp:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L12db84.  v0.`okhttp3.Cache.c` @type ^`int` := v1;
  #L12db88.  return @kind void;
}
procedure `void` `setWriteSuccessCount$okhttp`(`okhttp3.Cache` v0 @kind this, `int` v1 ) @signature `Lokhttp3/Cache;.setWriteSuccessCount$okhttp:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L12db9c.  v0.`okhttp3.Cache.b` @type ^`int` := v1;
  #L12dba0.  return @kind void;
}
procedure `long` `size`(`okhttp3.Cache` v2 @kind this) @signature `Lokhttp3/Cache;.size:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L12d814.  v0:= v2.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L12d818.  call temp:= `size`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.size:()J` @kind virtual;
  #L12d81e.  v0:= temp @kind wide;
  #L12d820.  return v0 @kind wide;
}
procedure `void` `trackConditionalCacheHit$okhttp`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.trackConditionalCacheHit$okhttp:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12dbb4.  @monitorenter v1
  #L12dbb6.  v0:= v1.`okhttp3.Cache.e` @type ^`int`;
  #L12dbba.  v0:= v0 + 1;
  #L12dbbe.  v1.`okhttp3.Cache.e` @type ^`int` := v0;
  #L12dbc2.  @monitorexit v1
  #L12dbc4.  return @kind void;
  #L12dbc6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12dbc8.  @monitorexit v1
  #L12dbca.  throw v0;
  catch `java.lang.Throwable` @[L12dbb6..L12dbc2] goto L12dbc6;
}
procedure `void` `trackResponse$okhttp`(`okhttp3.Cache` v1 @kind this, `okhttp3.internal.cache.CacheStrategy` v2 @kind object) @signature `Lokhttp3/Cache;.trackResponse$okhttp:(Lokhttp3/internal/cache/CacheStrategy;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12dbe8.  @monitorenter v1
  #L12dbea.  v0:= "cacheStrategy" @kind object;
  #L12dbee.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12dbf4.  v0:= v1.`okhttp3.Cache.f` @type ^`int`;
  #L12dbf8.  v0:= v0 + 1;
  #L12dbfc.  v1.`okhttp3.Cache.f` @type ^`int` := v0;
  #L12dc00.  call temp:= `getNetworkRequest`(v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.getNetworkRequest:()Lokhttp3/Request;` @kind virtual;
  #L12dc06.  v0:= temp @kind object;
  #L12dc08.  if v0 == 0 then goto L12dc1a;
  #L12dc0c.  v2:= v1.`okhttp3.Cache.d` @type ^`int`;
  #L12dc10.  v2:= v2 + 1;
  #L12dc14.  v1.`okhttp3.Cache.d` @type ^`int` := v2;
  #L12dc18.  goto L12dc32;
  #L12dc1a.  call temp:= `getCacheResponse`(v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.getCacheResponse:()Lokhttp3/Response;` @kind virtual;
  #L12dc20.  v2:= temp @kind object;
  #L12dc22.  if v2 == 0 then goto L12dc32;
  #L12dc26.  v2:= v1.`okhttp3.Cache.e` @type ^`int`;
  #L12dc2a.  v2:= v2 + 1;
  #L12dc2e.  v1.`okhttp3.Cache.e` @type ^`int` := v2;
  #L12dc32.  @monitorexit v1
  #L12dc34.  return @kind void;
  #L12dc36.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12dc38.  @monitorexit v1
  #L12dc3a.  throw v2;
  catch `java.lang.Throwable` @[L12dbea..L12dc32] goto L12dc36;
}
procedure `void` `update$okhttp`(`okhttp3.Cache` v1 @kind this, `okhttp3.Response` v2 @kind object, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/Cache;.update$okhttp:(Lokhttp3/Response;Lokhttp3/Response;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12dc58.  v0:= "cached" @kind object;
  #L12dc5c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12dc62.  v0:= "network" @kind object;
  #L12dc66.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12dc6c.  v0:= new `okhttp3.Cache$Entry`;
  #L12dc70.  call `<init>`(v0, v3) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L12dc76.  call temp:= `body`(v2) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L12dc7c.  v2:= temp @kind object;
  #L12dc7e.  v3:= "null cannot be cast to non-null type okhttp3.Cache.CacheResponseBody" @kind object;
  #L12dc82.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L12dc88.  v2:= (`okhttp3.Cache$CacheResponseBody`) v2 @kind object;
  #L12dc8c.  call temp:= `b`(v2) @signature `Lokhttp3/Cache$CacheResponseBody;.b:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L12dc92.  v2:= temp @kind object;
  #L12dc94.  v3:= 0I;
  #L12dc96.  call temp:= `edit`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.edit:()Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind virtual;
  #L12dc9c.  v3:= temp @kind object;
  #L12dc9e.  if v3 == 0 then goto L12dcb0;
  #L12dca2.  call `f`(v0, v3) @signature `Lokhttp3/Cache$Entry;.f:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind virtual;
  #L12dca8.  call `commit`(v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #L12dcae.  goto L12dcb8;
  #L12dcb0.  return @kind void;
  #L12dcb2.  call `a`(v1, v3) @signature `Lokhttp3/Cache;.a:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind direct;
  #L12dcb8.  return @kind void;
  catch `java.io.IOException` @[L12dc96..L12dcae] goto L12dcb2;
}
procedure `java.util.Iterator` `urls`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.urls:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d7d8.  v0:= new `okhttp3.Cache$urls$1`;
  #L12d7dc.  call `<init>`(v0, v1) @signature `Lokhttp3/Cache$urls$1;.<init>:(Lokhttp3/Cache;)V` @kind direct;
  #L12d7e2.  return v0 @kind object;
}
procedure `int` `writeAbortCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.writeAbortCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d720.  @monitorenter v1
  #L12d722.  v0:= v1.`okhttp3.Cache.c` @type ^`int`;
  #L12d726.  @monitorexit v1
  #L12d728.  return v0;
  #L12d72a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12d72c.  @monitorexit v1
  #L12d72e.  throw v0;
  catch `java.lang.Throwable` @[L12d722..L12d726] goto L12d72a;
}
procedure `int` `writeSuccessCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.writeSuccessCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d74c.  @monitorenter v1
  #L12d74e.  v0:= v1.`okhttp3.Cache.b` @type ^`int`;
  #L12d752.  @monitorexit v1
  #L12d754.  return v0;
  #L12d756.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12d758.  @monitorexit v1
  #L12d75a.  throw v0;
  catch `java.lang.Throwable` @[L12d74e..L12d752] goto L12d756;
}
