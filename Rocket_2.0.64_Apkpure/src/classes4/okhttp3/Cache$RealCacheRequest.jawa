record `okhttp3.Cache$RealCacheRequest` @kind class @AccessFlag FINAL extends `okhttp3.internal.cache.CacheRequest` @kind interface {
  `okio.Sink` `okhttp3.Cache$RealCacheRequest.a` @AccessFlag PRIVATE_FINAL;
  `okio.Sink` `okhttp3.Cache$RealCacheRequest.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cache$RealCacheRequest.c` @AccessFlag PRIVATE;
  `okhttp3.internal.cache.DiskLruCache$Editor` `okhttp3.Cache$RealCacheRequest.d` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Cache` `okhttp3.Cache$RealCacheRequest.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$RealCacheRequest` v1 @kind this, `okhttp3.Cache` v2 @kind object, `okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind object) @signature `Lokhttp3/Cache$RealCacheRequest;.<init>:(Lokhttp3/Cache;Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12c930.  v0:= "editor" @kind object;
  #L12c934.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12c93a.  v1.`okhttp3.Cache$RealCacheRequest.e` @type ^`okhttp3.Cache` := v2 @kind object;
  #L12c93e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12c944.  v1.`okhttp3.Cache$RealCacheRequest.d` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` := v3 @kind object;
  #L12c948.  v2:= 1I;
  #L12c94a.  call temp:= `newSink`(v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L12c950.  v2:= temp @kind object;
  #L12c952.  v1.`okhttp3.Cache$RealCacheRequest.a` @type ^`okio.Sink` := v2 @kind object;
  #L12c956.  v3:= new `okhttp3.Cache$RealCacheRequest$1`;
  #L12c95a.  call `<init>`(v3, v1, v2) @signature `Lokhttp3/Cache$RealCacheRequest$1;.<init>:(Lokhttp3/Cache$RealCacheRequest;Lokio/Sink;)V` @kind direct;
  #L12c960.  v1.`okhttp3.Cache$RealCacheRequest.b` @type ^`okio.Sink` := v3 @kind object;
  #L12c964.  return @kind void;
}
procedure `okhttp3.internal.cache.DiskLruCache$Editor` `a`(`okhttp3.Cache$RealCacheRequest` v0 @kind object) @signature `Lokhttp3/Cache$RealCacheRequest;.a:(Lokhttp3/Cache$RealCacheRequest;)Lokhttp3/internal/cache/DiskLruCache$Editor;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L12c900.  v0:= v0.`okhttp3.Cache$RealCacheRequest.d` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L12c904.  return v0 @kind object;
}
procedure `void` `abort`(`okhttp3.Cache$RealCacheRequest` v4 @kind this) @signature `Lokhttp3/Cache$RealCacheRequest;.abort:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12c978.  v0:= v4.`okhttp3.Cache$RealCacheRequest.e` @type ^`okhttp3.Cache` @kind object;
  #L12c97c.  @monitorenter v0
  #L12c97e.  v1:= v4.`okhttp3.Cache$RealCacheRequest.c` @type ^`boolean` @kind boolean;
  #L12c982.  if v1 == 0 then goto L12c98a;
  #L12c986.  @monitorexit v0
  #L12c988.  return @kind void;
  #L12c98a.  v1:= 1I;
  #L12c98c.  v4.`okhttp3.Cache$RealCacheRequest.c` @type ^`boolean` := v1 @kind boolean;
  #L12c990.  v2:= v4.`okhttp3.Cache$RealCacheRequest.e` @type ^`okhttp3.Cache` @kind object;
  #L12c994.  call temp:= `getWriteAbortCount$okhttp`(v2) @signature `Lokhttp3/Cache;.getWriteAbortCount$okhttp:()I` @kind virtual;
  #L12c99a.  v3:= temp;
  #L12c99c.  v3:= v3 + v1 @kind int;
  #L12c99e.  call `setWriteAbortCount$okhttp`(v2, v3) @signature `Lokhttp3/Cache;.setWriteAbortCount$okhttp:(I)V` @kind virtual;
  #L12c9a4.  @monitorexit v0
  #L12c9a6.  v0:= v4.`okhttp3.Cache$RealCacheRequest.a` @type ^`okio.Sink` @kind object;
  #L12c9aa.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L12c9b0.  v0:= v4.`okhttp3.Cache$RealCacheRequest.d` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L12c9b4.  call `abort`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abort:()V` @kind virtual;
  #L12c9ba.  return @kind void;
  #L12c9bc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12c9be.  @monitorexit v0
  #L12c9c0.  throw v1;
  catch `java.lang.Throwable` @[L12c97e..L12c982] goto L12c9bc;
  catch `java.lang.Throwable` @[L12c98c..L12c9a4] goto L12c9bc;
  catch `java.io.IOException` @[L12c9b0..L12c9ba] goto L12c9ba;
}
procedure `boolean` `b`(`okhttp3.Cache$RealCacheRequest` v1 @kind this) @signature `Lokhttp3/Cache$RealCacheRequest;.b:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12c8e8.  v0:= v1.`okhttp3.Cache$RealCacheRequest.c` @type ^`boolean` @kind boolean;
  #L12c8ec.  return v0;
}
procedure `okio.Sink` `body`(`okhttp3.Cache$RealCacheRequest` v1 @kind this) @signature `Lokhttp3/Cache$RealCacheRequest;.body:()Lokio/Sink;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12c918.  v0:= v1.`okhttp3.Cache$RealCacheRequest.b` @type ^`okio.Sink` @kind object;
  #L12c91c.  return v0 @kind object;
}
procedure `void` `c`(`okhttp3.Cache$RealCacheRequest` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/Cache$RealCacheRequest;.c:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L12c9f4.  v0.`okhttp3.Cache$RealCacheRequest.c` @type ^`boolean` := v1 @kind boolean;
  #L12c9f8.  return @kind void;
}
