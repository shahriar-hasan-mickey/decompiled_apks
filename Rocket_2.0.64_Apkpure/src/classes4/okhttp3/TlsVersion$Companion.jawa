record `okhttp3.TlsVersion$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.TlsVersion$Companion` v0 @kind this) @signature `Lokhttp3/TlsVersion$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L13da7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13da82.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/TlsVersion$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L13da94.  call `<init>`(v0) @signature `Lokhttp3/TlsVersion$Companion;.<init>:()V` @kind direct;
  #L13da9a.  return @kind void;
}
procedure `okhttp3.TlsVersion` `forJavaName`(`okhttp3.TlsVersion$Companion` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/TlsVersion$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13d98c.  v0:= "javaName" @kind object;
  #L13d990.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13d996.  call temp:= `hashCode`(v4) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L13d99c.  v0:= temp;
  #L13d99e.  v1:= 79201641I;
  #L13d9a4.  if v0 == v1 then goto L13da12;
  #L13d9a8.  v1:= 79923350I;
  #L13d9ae.  if v0 == v1 then goto L13d9fc;
  #L13d9b2.  goto L13da58;
  #L13d9b8.  goto L13da28;
  #L13d9ba.  v0:= "TLSv1.3" @kind object;
  #L13d9be.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L13d9c4.  v0:= temp;
  #L13d9c6.  if v0 == 0 then goto L13da28;
  #L13d9ca.  v4:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L13d9ce.  goto L13da26;
  #L13d9d0.  v0:= "TLSv1.2" @kind object;
  #L13d9d4.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L13d9da.  v0:= temp;
  #L13d9dc.  if v0 == 0 then goto L13da28;
  #L13d9e0.  v4:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L13d9e4.  goto L13da26;
  #L13d9e6.  v0:= "TLSv1.1" @kind object;
  #L13d9ea.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L13d9f0.  v0:= temp;
  #L13d9f2.  if v0 == 0 then goto L13da28;
  #L13d9f6.  v4:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L13d9fa.  goto L13da26;
  #L13d9fc.  v0:= "TLSv1" @kind object;
  #L13da00.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L13da06.  v0:= temp;
  #L13da08.  if v0 == 0 then goto L13da28;
  #L13da0c.  v4:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L13da10.  goto L13da26;
  #L13da12.  v0:= "SSLv3" @kind object;
  #L13da16.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L13da1c.  v0:= temp;
  #L13da1e.  if v0 == 0 then goto L13da28;
  #L13da22.  v4:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L13da26.  return v4 @kind object;
  #L13da28.  v0:= new `java.lang.IllegalArgumentException`;
  #L13da2c.  v1:= new `java.lang.StringBuilder`;
  #L13da30.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13da36.  v2:= "Unexpected TLS version: " @kind object;
  #L13da3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13da40.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13da46.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13da4c.  v4:= temp @kind object;
  #L13da4e.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13da54.  throw v0;
  #L13da56.  
  #L13da58.  switch v0
                  | -503070503 => goto L13d9e6
                  | -503070502 => goto L13d9d0
                  | -503070501 => goto L13d9ba
                  | else => goto L13d9b8;
}
