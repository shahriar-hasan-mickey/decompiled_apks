record `okhttp3.Interceptor$Companion$invoke$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `kotlin.jvm.functions.Function1` `okhttp3.Interceptor$Companion$invoke$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Interceptor$Companion$invoke$1` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lokhttp3/Interceptor$Companion$invoke$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1375e0.  v0.`okhttp3.Interceptor$Companion$invoke$1.a` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L1375e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1375ea.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.Interceptor$Companion$invoke$1` v1 @kind this, `okhttp3.Interceptor$Chain` v2 @kind object) @signature `Lokhttp3/Interceptor$Companion$invoke$1;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1375b4.  v0:= "it" @kind object;
  #L1375b8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1375be.  v0:= v1.`okhttp3.Interceptor$Companion$invoke$1.a` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1375c2.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1375c8.  v2:= temp @kind object;
  #L1375ca.  v2:= (`okhttp3.Response`) v2 @kind object;
  #L1375ce.  return v2 @kind object;
}
