record `okio.internal.RealBufferedSinkKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `commonClose`(`okio.RealBufferedSink` v6 @kind object) @signature `Lokio/internal/RealBufferedSinkKt;.commonClose:(Lokio/RealBufferedSink;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L172dc8.  v0:= "$this$commonClose" @kind object;
  #L172dcc.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172dd2.  v0:= v6.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172dd6.  if v0 == 0 then goto L172ddc;
  #L172dda.  return @kind void;
  #L172ddc.  v0:= 0I;
  #L172dde.  v1:= v6.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172de2.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L172de8.  v1:= temp @kind wide;
  #L172dea.  v3:= 0L;
  #L172dee.  v5:= lcmp(v1, v3);
  #L172df2.  if v5 <= 0 then goto L172e10;
  #L172df6.  v1:= v6.`okio.RealBufferedSink.sink` @type ^`okio.Sink` @kind object;
  #L172dfa.  v2:= v6.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172dfe.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L172e04.  v3:= temp @kind wide;
  #L172e06.  call `write`(v1, v2, v3) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L172e0c.  goto L172e10;
  #L172e0e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L172e10.  v1:= v6.`okio.RealBufferedSink.sink` @type ^`okio.Sink` @kind object;
  #L172e14.  call `close`(v1) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L172e1a.  goto L172e24;
  #L172e1c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L172e1e.  if v0 != 0 then goto L172e24;
  #L172e22.  v0:= v1 @kind object;
  #L172e24.  v1:= 1I;
  #L172e26.  v6.`okio.RealBufferedSink.closed` @type ^`boolean` := v1 @kind boolean;
  #L172e2a.  if v0 != 0 then goto L172e30;
  #L172e2e.  return @kind void;
  #L172e30.  throw v0;
  catch `java.lang.Throwable` @[L172dde..L172e0c] goto L172e0e;
  catch `java.lang.Throwable` @[L172e10..L172e1a] goto L172e1c;
}
procedure `okio.BufferedSink` `commonEmit`(`okio.RealBufferedSink` v5 @kind object) @signature `Lokio/internal/RealBufferedSinkKt;.commonEmit:(Lokio/RealBufferedSink;)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L172700.  v0:= "$this$commonEmit" @kind object;
  #L172704.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17270a.  v0:= v5.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L17270e.  v0:= v0 ^~ 1;
  #L172712.  if v0 == 0 then goto L17273e;
  #L172716.  v0:= v5.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L17271a.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L172720.  v0:= temp @kind wide;
  #L172722.  v2:= 0L;
  #L172726.  v4:= lcmp(v0, v2);
  #L17272a.  if v4 <= 0 then goto L17273c;
  #L17272e.  v2:= v5.`okio.RealBufferedSink.sink` @type ^`okio.Sink` @kind object;
  #L172732.  v3:= v5.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172736.  call `write`(v2, v3, v0) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L17273c.  return v5 @kind object;
  #L17273e.  v5:= new `java.lang.IllegalStateException`;
  #L172742.  v0:= "closed" @kind object;
  #L172746.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L17274c.  v0:= temp @kind object;
  #L17274e.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172754.  throw v5;
}
procedure `okio.BufferedSink` `commonEmitCompleteSegments`(`okio.RealBufferedSink` v5 @kind object) @signature `Lokio/internal/RealBufferedSinkKt;.commonEmitCompleteSegments:(Lokio/RealBufferedSink;)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L172768.  v0:= "$this$commonEmitCompleteSegments" @kind object;
  #L17276c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172772.  v0:= v5.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172776.  v0:= v0 ^~ 1;
  #L17277a.  if v0 == 0 then goto L1727a6;
  #L17277e.  v0:= v5.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172782.  call temp:= `completeSegmentByteCount`(v0) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L172788.  v0:= temp @kind wide;
  #L17278a.  v2:= 0L;
  #L17278e.  v4:= lcmp(v0, v2);
  #L172792.  if v4 <= 0 then goto L1727a4;
  #L172796.  v2:= v5.`okio.RealBufferedSink.sink` @type ^`okio.Sink` @kind object;
  #L17279a.  v3:= v5.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L17279e.  call `write`(v2, v3, v0) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L1727a4.  return v5 @kind object;
  #L1727a6.  v5:= new `java.lang.IllegalStateException`;
  #L1727aa.  v0:= "closed" @kind object;
  #L1727ae.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1727b4.  v0:= temp @kind object;
  #L1727b6.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1727bc.  throw v5;
}
procedure `void` `commonFlush`(`okio.RealBufferedSink` v5 @kind object) @signature `Lokio/internal/RealBufferedSinkKt;.commonFlush:(Lokio/RealBufferedSink;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L172e5c.  v0:= "$this$commonFlush" @kind object;
  #L172e60.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172e66.  v0:= v5.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172e6a.  v0:= v0 ^~ 1;
  #L172e6e.  if v0 == 0 then goto L172eac;
  #L172e72.  v0:= v5.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172e76.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L172e7c.  v0:= temp @kind wide;
  #L172e7e.  v2:= 0L;
  #L172e82.  v4:= lcmp(v0, v2);
  #L172e86.  if v4 <= 0 then goto L172ea0;
  #L172e8a.  v0:= v5.`okio.RealBufferedSink.sink` @type ^`okio.Sink` @kind object;
  #L172e8e.  v1:= v5.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172e92.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L172e98.  v2:= temp @kind wide;
  #L172e9a.  call `write`(v0, v1, v2) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L172ea0.  v5:= v5.`okio.RealBufferedSink.sink` @type ^`okio.Sink` @kind object;
  #L172ea4.  call `flush`(v5) @signature `Lokio/Sink;.flush:()V` @kind interface;
  #L172eaa.  return @kind void;
  #L172eac.  v5:= new `java.lang.IllegalStateException`;
  #L172eb0.  v0:= "closed" @kind object;
  #L172eb4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172eba.  v0:= temp @kind object;
  #L172ebc.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172ec2.  throw v5;
}
procedure `okio.Timeout` `commonTimeout`(`okio.RealBufferedSink` v1 @kind object) @signature `Lokio/internal/RealBufferedSinkKt;.commonTimeout:(Lokio/RealBufferedSink;)Lokio/Timeout;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172da0.  v0:= "$this$commonTimeout" @kind object;
  #L172da4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172daa.  v1:= v1.`okio.RealBufferedSink.sink` @type ^`okio.Sink` @kind object;
  #L172dae.  call temp:= `timeout`(v1) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L172db4.  v1:= temp @kind object;
  #L172db6.  return v1 @kind object;
}
procedure `java.lang.String` `commonToString`(`okio.RealBufferedSink` v2 @kind object) @signature `Lokio/internal/RealBufferedSinkKt;.commonToString:(Lokio/RealBufferedSink;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L172660.  v0:= "$this$commonToString" @kind object;
  #L172664.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17266a.  v0:= new `java.lang.StringBuilder`;
  #L17266e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L172674.  v1:= "buffer(" @kind object;
  #L172678.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17267e.  v2:= v2.`okio.RealBufferedSink.sink` @type ^`okio.Sink` @kind object;
  #L172682.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L172688.  v2:= 41I;
  #L17268c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L172692.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L172698.  v2:= temp @kind object;
  #L17269a.  return v2 @kind object;
}
procedure `okio.BufferedSink` `commonWrite`(`okio.RealBufferedSink` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokio/internal/RealBufferedSinkKt;.commonWrite:(Lokio/RealBufferedSink;Lokio/ByteString;)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172888.  v0:= "$this$commonWrite" @kind object;
  #L17288c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172892.  v0:= "byteString" @kind object;
  #L172896.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17289c.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1728a0.  v0:= v0 ^~ 1;
  #L1728a4.  if v0 == 0 then goto L1728bc;
  #L1728a8.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L1728ac.  call temp:= `write`(v0, v2) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1728b2.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L1728b8.  v1:= temp @kind object;
  #L1728ba.  return v1 @kind object;
  #L1728bc.  v1:= new `java.lang.IllegalStateException`;
  #L1728c0.  v2:= "closed" @kind object;
  #L1728c4.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1728ca.  v2:= temp @kind object;
  #L1728cc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1728d2.  throw v1;
}
procedure `okio.BufferedSink` `commonWrite`(`okio.RealBufferedSink` v1 @kind object, `okio.ByteString` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWrite:(Lokio/RealBufferedSink;Lokio/ByteString;II)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1728e4.  v0:= "$this$commonWrite" @kind object;
  #L1728e8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1728ee.  v0:= "byteString" @kind object;
  #L1728f2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1728f8.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1728fc.  v0:= v0 ^~ 1;
  #L172900.  if v0 == 0 then goto L172918;
  #L172904.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172908.  call temp:= `write`(v0, v2, v3, v4) @signature `Lokio/Buffer;.write:(Lokio/ByteString;II)Lokio/Buffer;` @kind virtual;
  #L17290e.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172914.  v1:= temp @kind object;
  #L172916.  return v1 @kind object;
  #L172918.  v1:= new `java.lang.IllegalStateException`;
  #L17291c.  v2:= "closed" @kind object;
  #L172920.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172926.  v2:= temp @kind object;
  #L172928.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17292e.  throw v1;
}
procedure `okio.BufferedSink` `commonWrite`(`okio.RealBufferedSink` v5 @kind object, `okio.Source` v6 @kind object, `long` v7 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWrite:(Lokio/RealBufferedSink;Lokio/Source;J)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L172940.  v0:= "$this$commonWrite" @kind object;
  #L172944.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17294a.  v0:= "source" @kind object;
  #L17294e.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172954.  v0:= 0L;
  #L172958.  v2:= lcmp(v7, v0);
  #L17295c.  if v2 <= 0 then goto L17298e;
  #L172960.  v0:= v5.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172964.  call temp:= `read`(v6, v0, v7) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L17296a.  v0:= temp @kind wide;
  #L17296c.  v2:= -1L;
  #L172970.  v4:= lcmp(v0, v2);
  #L172974.  if v4 == 0 then goto L172982;
  #L172978.  v7:= v7 - v0 @kind long;
  #L17297a.  call temp:= `emitCompleteSegments`(v5) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172980.  goto L172954;
  #L172982.  v5:= new `java.io.EOFException`;
  #L172986.  call `<init>`(v5) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L17298c.  throw v5;
  #L17298e.  return v5 @kind object;
}
procedure `okio.BufferedSink` `commonWrite`(`okio.RealBufferedSink` v1 @kind object, `byte`[] v2 @kind object) @signature `Lokio/internal/RealBufferedSinkKt;.commonWrite:(Lokio/RealBufferedSink;[B)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1727d0.  v0:= "$this$commonWrite" @kind object;
  #L1727d4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1727da.  v0:= "source" @kind object;
  #L1727de.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1727e4.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1727e8.  v0:= v0 ^~ 1;
  #L1727ec.  if v0 == 0 then goto L172804;
  #L1727f0.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L1727f4.  call temp:= `write`(v0, v2) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L1727fa.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172800.  v1:= temp @kind object;
  #L172802.  return v1 @kind object;
  #L172804.  v1:= new `java.lang.IllegalStateException`;
  #L172808.  v2:= "closed" @kind object;
  #L17280c.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172812.  v2:= temp @kind object;
  #L172814.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17281a.  throw v1;
}
procedure `okio.BufferedSink` `commonWrite`(`okio.RealBufferedSink` v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWrite:(Lokio/RealBufferedSink;[BII)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L17282c.  v0:= "$this$commonWrite" @kind object;
  #L172830.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172836.  v0:= "source" @kind object;
  #L17283a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172840.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172844.  v0:= v0 ^~ 1;
  #L172848.  if v0 == 0 then goto L172860;
  #L17284c.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172850.  call temp:= `write`(v0, v2, v3, v4) @signature `Lokio/Buffer;.write:([BII)Lokio/Buffer;` @kind virtual;
  #L172856.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L17285c.  v1:= temp @kind object;
  #L17285e.  return v1 @kind object;
  #L172860.  v1:= new `java.lang.IllegalStateException`;
  #L172864.  v2:= "closed" @kind object;
  #L172868.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L17286e.  v2:= temp @kind object;
  #L172870.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172876.  throw v1;
}
procedure `void` `commonWrite`(`okio.RealBufferedSink` v1 @kind object, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWrite:(Lokio/RealBufferedSink;Lokio/Buffer;J)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172ed4.  v0:= "$this$commonWrite" @kind object;
  #L172ed8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172ede.  v0:= "source" @kind object;
  #L172ee2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172ee8.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172eec.  v0:= v0 ^~ 1;
  #L172ef0.  if v0 == 0 then goto L172f06;
  #L172ef4.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172ef8.  call `write`(v0, v2, v3) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L172efe.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172f04.  return @kind void;
  #L172f06.  v1:= new `java.lang.IllegalStateException`;
  #L172f0a.  v2:= "closed" @kind object;
  #L172f0e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172f14.  v2:= temp @kind object;
  #L172f16.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172f1c.  throw v1;
}
procedure `long` `commonWriteAll`(`okio.RealBufferedSink` v7 @kind object, `okio.Source` v8 @kind object) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteAll:(Lokio/RealBufferedSink;Lokio/Source;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1726ac.  v0:= "$this$commonWriteAll" @kind object;
  #L1726b0.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1726b6.  v0:= "source" @kind object;
  #L1726ba.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1726c0.  v0:= 0L;
  #L1726c4.  v2:= v7.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L1726c8.  v3:= 8192I;
  #L1726cc.  v3:= (`long`) v3 @kind i2l;
  #L1726ce.  call temp:= `read`(v8, v2, v3) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1726d4.  v2:= temp @kind wide;
  #L1726d6.  v4:= -1L;
  #L1726da.  v6:= lcmp(v2, v4);
  #L1726de.  if v6 != 0 then goto L1726e4;
  #L1726e2.  return v0 @kind wide;
  #L1726e4.  v0:= v0 + v2 @kind long;
  #L1726e6.  call temp:= `emitCompleteSegments`(v7) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L1726ec.  goto L1726c4;
}
procedure `okio.BufferedSink` `commonWriteByte`(`okio.RealBufferedSink` v1 @kind object, `int` v2 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteByte:(Lokio/RealBufferedSink;I)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1729a0.  v0:= "$this$commonWriteByte" @kind object;
  #L1729a4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1729aa.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1729ae.  v0:= v0 ^~ 1;
  #L1729b2.  if v0 == 0 then goto L1729ca;
  #L1729b6.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L1729ba.  call temp:= `writeByte`(v0, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1729c0.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L1729c6.  v1:= temp @kind object;
  #L1729c8.  return v1 @kind object;
  #L1729ca.  v1:= new `java.lang.IllegalStateException`;
  #L1729ce.  v2:= "closed" @kind object;
  #L1729d2.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1729d8.  v2:= temp @kind object;
  #L1729da.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1729e0.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteDecimalLong`(`okio.RealBufferedSink` v1 @kind object, `long` v2 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteDecimalLong:(Lokio/RealBufferedSink;J)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1729f4.  v0:= "$this$commonWriteDecimalLong" @kind object;
  #L1729f8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1729fe.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172a02.  v0:= v0 ^~ 1;
  #L172a06.  if v0 == 0 then goto L172a1e;
  #L172a0a.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172a0e.  call temp:= `writeDecimalLong`(v0, v2) @signature `Lokio/Buffer;.writeDecimalLong:(J)Lokio/Buffer;` @kind virtual;
  #L172a14.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172a1a.  v1:= temp @kind object;
  #L172a1c.  return v1 @kind object;
  #L172a1e.  v1:= new `java.lang.IllegalStateException`;
  #L172a22.  v2:= "closed" @kind object;
  #L172a26.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172a2c.  v2:= temp @kind object;
  #L172a2e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172a34.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteHexadecimalUnsignedLong`(`okio.RealBufferedSink` v1 @kind object, `long` v2 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteHexadecimalUnsignedLong:(Lokio/RealBufferedSink;J)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172a48.  v0:= "$this$commonWriteHexadecimalUnsignedLong" @kind object;
  #L172a4c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172a52.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172a56.  v0:= v0 ^~ 1;
  #L172a5a.  if v0 == 0 then goto L172a72;
  #L172a5e.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172a62.  call temp:= `writeHexadecimalUnsignedLong`(v0, v2) @signature `Lokio/Buffer;.writeHexadecimalUnsignedLong:(J)Lokio/Buffer;` @kind virtual;
  #L172a68.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172a6e.  v1:= temp @kind object;
  #L172a70.  return v1 @kind object;
  #L172a72.  v1:= new `java.lang.IllegalStateException`;
  #L172a76.  v2:= "closed" @kind object;
  #L172a7a.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172a80.  v2:= temp @kind object;
  #L172a82.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172a88.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteInt`(`okio.RealBufferedSink` v1 @kind object, `int` v2 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteInt:(Lokio/RealBufferedSink;I)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172a9c.  v0:= "$this$commonWriteInt" @kind object;
  #L172aa0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172aa6.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172aaa.  v0:= v0 ^~ 1;
  #L172aae.  if v0 == 0 then goto L172ac6;
  #L172ab2.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172ab6.  call temp:= `writeInt`(v0, v2) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L172abc.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172ac2.  v1:= temp @kind object;
  #L172ac4.  return v1 @kind object;
  #L172ac6.  v1:= new `java.lang.IllegalStateException`;
  #L172aca.  v2:= "closed" @kind object;
  #L172ace.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172ad4.  v2:= temp @kind object;
  #L172ad6.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172adc.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteIntLe`(`okio.RealBufferedSink` v1 @kind object, `int` v2 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteIntLe:(Lokio/RealBufferedSink;I)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172af0.  v0:= "$this$commonWriteIntLe" @kind object;
  #L172af4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172afa.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172afe.  v0:= v0 ^~ 1;
  #L172b02.  if v0 == 0 then goto L172b1a;
  #L172b06.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172b0a.  call temp:= `writeIntLe`(v0, v2) @signature `Lokio/Buffer;.writeIntLe:(I)Lokio/Buffer;` @kind virtual;
  #L172b10.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172b16.  v1:= temp @kind object;
  #L172b18.  return v1 @kind object;
  #L172b1a.  v1:= new `java.lang.IllegalStateException`;
  #L172b1e.  v2:= "closed" @kind object;
  #L172b22.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172b28.  v2:= temp @kind object;
  #L172b2a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172b30.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteLong`(`okio.RealBufferedSink` v1 @kind object, `long` v2 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteLong:(Lokio/RealBufferedSink;J)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172b44.  v0:= "$this$commonWriteLong" @kind object;
  #L172b48.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172b4e.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172b52.  v0:= v0 ^~ 1;
  #L172b56.  if v0 == 0 then goto L172b6e;
  #L172b5a.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172b5e.  call temp:= `writeLong`(v0, v2) @signature `Lokio/Buffer;.writeLong:(J)Lokio/Buffer;` @kind virtual;
  #L172b64.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172b6a.  v1:= temp @kind object;
  #L172b6c.  return v1 @kind object;
  #L172b6e.  v1:= new `java.lang.IllegalStateException`;
  #L172b72.  v2:= "closed" @kind object;
  #L172b76.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172b7c.  v2:= temp @kind object;
  #L172b7e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172b84.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteLongLe`(`okio.RealBufferedSink` v1 @kind object, `long` v2 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteLongLe:(Lokio/RealBufferedSink;J)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172b98.  v0:= "$this$commonWriteLongLe" @kind object;
  #L172b9c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172ba2.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172ba6.  v0:= v0 ^~ 1;
  #L172baa.  if v0 == 0 then goto L172bc2;
  #L172bae.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172bb2.  call temp:= `writeLongLe`(v0, v2) @signature `Lokio/Buffer;.writeLongLe:(J)Lokio/Buffer;` @kind virtual;
  #L172bb8.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172bbe.  v1:= temp @kind object;
  #L172bc0.  return v1 @kind object;
  #L172bc2.  v1:= new `java.lang.IllegalStateException`;
  #L172bc6.  v2:= "closed" @kind object;
  #L172bca.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172bd0.  v2:= temp @kind object;
  #L172bd2.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172bd8.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteShort`(`okio.RealBufferedSink` v1 @kind object, `int` v2 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteShort:(Lokio/RealBufferedSink;I)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172bec.  v0:= "$this$commonWriteShort" @kind object;
  #L172bf0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172bf6.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172bfa.  v0:= v0 ^~ 1;
  #L172bfe.  if v0 == 0 then goto L172c16;
  #L172c02.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172c06.  call temp:= `writeShort`(v0, v2) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L172c0c.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172c12.  v1:= temp @kind object;
  #L172c14.  return v1 @kind object;
  #L172c16.  v1:= new `java.lang.IllegalStateException`;
  #L172c1a.  v2:= "closed" @kind object;
  #L172c1e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172c24.  v2:= temp @kind object;
  #L172c26.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172c2c.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteShortLe`(`okio.RealBufferedSink` v1 @kind object, `int` v2 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteShortLe:(Lokio/RealBufferedSink;I)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172c40.  v0:= "$this$commonWriteShortLe" @kind object;
  #L172c44.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172c4a.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172c4e.  v0:= v0 ^~ 1;
  #L172c52.  if v0 == 0 then goto L172c6a;
  #L172c56.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172c5a.  call temp:= `writeShortLe`(v0, v2) @signature `Lokio/Buffer;.writeShortLe:(I)Lokio/Buffer;` @kind virtual;
  #L172c60.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172c66.  v1:= temp @kind object;
  #L172c68.  return v1 @kind object;
  #L172c6a.  v1:= new `java.lang.IllegalStateException`;
  #L172c6e.  v2:= "closed" @kind object;
  #L172c72.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172c78.  v2:= temp @kind object;
  #L172c7a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172c80.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteUtf8`(`okio.RealBufferedSink` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteUtf8:(Lokio/RealBufferedSink;Ljava/lang/String;)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172c94.  v0:= "$this$commonWriteUtf8" @kind object;
  #L172c98.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172c9e.  v0:= "string" @kind object;
  #L172ca2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172ca8.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172cac.  v0:= v0 ^~ 1;
  #L172cb0.  if v0 == 0 then goto L172cc8;
  #L172cb4.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172cb8.  call temp:= `writeUtf8`(v0, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L172cbe.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172cc4.  v1:= temp @kind object;
  #L172cc6.  return v1 @kind object;
  #L172cc8.  v1:= new `java.lang.IllegalStateException`;
  #L172ccc.  v2:= "closed" @kind object;
  #L172cd0.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172cd6.  v2:= temp @kind object;
  #L172cd8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172cde.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteUtf8`(`okio.RealBufferedSink` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteUtf8:(Lokio/RealBufferedSink;Ljava/lang/String;II)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172cf0.  v0:= "$this$commonWriteUtf8" @kind object;
  #L172cf4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172cfa.  v0:= "string" @kind object;
  #L172cfe.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172d04.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172d08.  v0:= v0 ^~ 1;
  #L172d0c.  if v0 == 0 then goto L172d24;
  #L172d10.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172d14.  call temp:= `writeUtf8`(v0, v2, v3, v4) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L172d1a.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172d20.  v1:= temp @kind object;
  #L172d22.  return v1 @kind object;
  #L172d24.  v1:= new `java.lang.IllegalStateException`;
  #L172d28.  v2:= "closed" @kind object;
  #L172d2c.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172d32.  v2:= temp @kind object;
  #L172d34.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172d3a.  throw v1;
}
procedure `okio.BufferedSink` `commonWriteUtf8CodePoint`(`okio.RealBufferedSink` v1 @kind object, `int` v2 ) @signature `Lokio/internal/RealBufferedSinkKt;.commonWriteUtf8CodePoint:(Lokio/RealBufferedSink;I)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L172d4c.  v0:= "$this$commonWriteUtf8CodePoint" @kind object;
  #L172d50.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L172d56.  v0:= v1.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L172d5a.  v0:= v0 ^~ 1;
  #L172d5e.  if v0 == 0 then goto L172d76;
  #L172d62.  v0:= v1.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L172d66.  call temp:= `writeUtf8CodePoint`(v0, v2) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L172d6c.  call temp:= `emitCompleteSegments`(v1) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L172d72.  v1:= temp @kind object;
  #L172d74.  return v1 @kind object;
  #L172d76.  v1:= new `java.lang.IllegalStateException`;
  #L172d7a.  v2:= "closed" @kind object;
  #L172d7e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L172d84.  v2:= temp @kind object;
  #L172d86.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172d8c.  throw v1;
}
