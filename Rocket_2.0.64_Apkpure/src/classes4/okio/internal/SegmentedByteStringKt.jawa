record `okio.internal.SegmentedByteStringKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`okio.SegmentedByteString` v5 @kind object, `int` v6 , `int` v7 , `kotlin.jvm.functions.Function3` v8 @kind object) @signature `Lokio/internal/SegmentedByteStringKt;.a:(Lokio/SegmentedByteString;IILkotlin/jvm/functions/Function3;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17477c.  call temp:= `segment`(v5, v6) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L174782.  v0:= temp;
  #L174784.  if v6 >= v7 then goto L174802;
  #L174788.  if v0 != 0 then goto L174790;
  #L17478c.  v1:= 0I;
  #L17478e.  goto L1747a0;
  #L174790.  call temp:= `getDirectory$okio`(v5) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L174796.  v1:= temp @kind object;
  #L174798.  v2:= v0 + -1;
  #L17479c.  v1:= v1[v2];
  #L1747a0.  call temp:= `getDirectory$okio`(v5) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1747a6.  v2:= temp @kind object;
  #L1747a8.  v2:= v2[v0];
  #L1747ac.  v2:= v2 - v1 @kind int;
  #L1747ae.  call temp:= `getDirectory$okio`(v5) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1747b4.  v3:= temp @kind object;
  #L1747b6.  call temp:= `getSegments$okio`(v5) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1747bc.  v4:= temp @kind object;
  #L1747be.  v4:= length @variable v4;
  #L1747c0.  v4:= v4 + v0 @kind int;
  #L1747c2.  v3:= v3[v4];
  #L1747c6.  v2:= v2 + v1 @kind int;
  #L1747c8.  call temp:= `min`(v7, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1747ce.  v2:= temp;
  #L1747d0.  v2:= v2 - v6 @kind int;
  #L1747d2.  v1:= v6 - v1 @kind int;
  #L1747d6.  v3:= v3 + v1 @kind int;
  #L1747d8.  call temp:= `getSegments$okio`(v5) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1747de.  v1:= temp @kind object;
  #L1747e0.  v1:= v1[v0] @kind object;
  #L1747e4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1747ea.  v3:= temp @kind object;
  #L1747ec.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1747f2.  v4:= temp @kind object;
  #L1747f4.  call temp:= `invoke`(v8, v1, v3, v4) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1747fa.  v6:= v6 + v2 @kind int;
  #L1747fc.  v0:= v0 + 1;
  #L174800.  goto L174784;
  #L174802.  return @kind void;
}
procedure `void` `access$forEachSegment`(`okio.SegmentedByteString` v0 @kind object, `int` v1 , `int` v2 , `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lokio/internal/SegmentedByteStringKt;.access$forEachSegment:(Lokio/SegmentedByteString;IILkotlin/jvm/functions/Function3;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L174670.  call `a`(v0, v1, v2, v3) @signature `Lokio/internal/SegmentedByteStringKt;.a:(Lokio/SegmentedByteString;IILkotlin/jvm/functions/Function3;)V` @kind static;
  #L174676.  return @kind void;
}
procedure `int` `binarySearch`(`int`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lokio/internal/SegmentedByteStringKt;.binarySearch:([IIII)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L174314.  v0:= "$this$binarySearch" @kind object;
  #L174318.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17431e.  v5:= v5 + -1;
  #L174322.  if v4 > v5 then goto L17434c;
  #L174326.  v0:= v4 + v5 @kind int;
  #L17432a.  v0:= v0 ^>> 1;
  #L17432e.  v1:= v2[v0];
  #L174332.  if v1 >= v3 then goto L17433e;
  #L174336.  v0:= v0 + 1;
  #L17433a.  v4:= v0;
  #L17433c.  goto L174322;
  #L17433e.  if v1 <= v3 then goto L17434a;
  #L174342.  v0:= v0 + -1;
  #L174346.  v5:= v0;
  #L174348.  goto L174322;
  #L17434a.  return v0;
  #L17434c.  v2:= -v4 @kind int;
  #L17434e.  v2:= v2 + -1;
  #L174352.  return v2;
}
procedure `boolean` `commonEquals`(`okio.SegmentedByteString` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lokio/internal/SegmentedByteStringKt;.commonEquals:(Lokio/SegmentedByteString;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L174014.  v0:= "$this$commonEquals" @kind object;
  #L174018.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17401e.  v0:= 1I;
  #L174020.  v1:= 0I;
  #L174022.  if v5 != v4 then goto L174028;
  #L174026.  goto L174060;
  #L174028.  v2:= instanceof @variable v5 @type ^`okio.ByteString` @kind boolean;
  #L17402c.  if v2 == 0 then goto L17405e;
  #L174030.  v5:= (`okio.ByteString`) v5 @kind object;
  #L174034.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L17403a.  v2:= temp;
  #L17403c.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L174042.  v3:= temp;
  #L174044.  if v2 != v3 then goto L17405e;
  #L174048.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L17404e.  v2:= temp;
  #L174050.  call temp:= `rangeEquals`(v4, v1, v5, v1, v2) @signature `Lokio/SegmentedByteString;.rangeEquals:(ILokio/ByteString;II)Z` @kind virtual;
  #L174056.  v4:= temp;
  #L174058.  if v4 == 0 then goto L17405e;
  #L17405c.  goto L174060;
  #L17405e.  v0:= 0I;
  #L174060.  return v0;
}
procedure `int` `commonGetSize`(`okio.SegmentedByteString` v1 @kind object) @signature `Lokio/internal/SegmentedByteStringKt;.commonGetSize:(Lokio/SegmentedByteString;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L174364.  v0:= "$this$commonGetSize" @kind object;
  #L174368.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17436e.  call temp:= `getDirectory$okio`(v1) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L174374.  v0:= temp @kind object;
  #L174376.  call temp:= `getSegments$okio`(v1) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L17437c.  v1:= temp @kind object;
  #L17437e.  v1:= length @variable v1;
  #L174380.  v1:= v1 + -1;
  #L174384.  v1:= v0[v1];
  #L174388.  return v1;
}
procedure `int` `commonHashCode`(`okio.SegmentedByteString` v8 @kind object) @signature `Lokio/internal/SegmentedByteStringKt;.commonHashCode:(Lokio/SegmentedByteString;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L17439c.  v0:= "$this$commonHashCode" @kind object;
  #L1743a0.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1743a6.  call temp:= `getHashCode$okio`(v8) @signature `Lokio/ByteString;.getHashCode$okio:()I` @kind virtual;
  #L1743ac.  v0:= temp;
  #L1743ae.  if v0 == 0 then goto L1743b4;
  #L1743b2.  return v0;
  #L1743b4.  call temp:= `getSegments$okio`(v8) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1743ba.  v0:= temp @kind object;
  #L1743bc.  v0:= length @variable v0;
  #L1743be.  v1:= 0I;
  #L1743c0.  v2:= 1I;
  #L1743c2.  v2:= 0I;
  #L1743c4.  v3:= 1I;
  #L1743c6.  if v1 >= v0 then goto L174414;
  #L1743ca.  call temp:= `getDirectory$okio`(v8) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1743d0.  v4:= temp @kind object;
  #L1743d2.  v5:= v0 + v1 @kind int;
  #L1743d6.  v4:= v4[v5];
  #L1743da.  call temp:= `getDirectory$okio`(v8) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1743e0.  v5:= temp @kind object;
  #L1743e2.  v5:= v5[v1];
  #L1743e6.  call temp:= `getSegments$okio`(v8) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1743ec.  v6:= temp @kind object;
  #L1743ee.  v6:= v6[v1] @kind object;
  #L1743f2.  v2:= v5 - v2 @kind int;
  #L1743f6.  v2:= v2 + v4 @kind int;
  #L1743f8.  if v4 >= v2 then goto L17440c;
  #L1743fc.  v3:= v3 * 31;
  #L174400.  v7:= v6[v4] @kind byte;
  #L174404.  v3:= v3 + v7 @kind int;
  #L174406.  v4:= v4 + 1;
  #L17440a.  goto L1743f8;
  #L17440c.  v1:= v1 + 1;
  #L174410.  v2:= v5;
  #L174412.  goto L1743c6;
  #L174414.  call `setHashCode$okio`(v8, v3) @signature `Lokio/ByteString;.setHashCode$okio:(I)V` @kind virtual;
  #L17441a.  return v3;
}
procedure `byte` `commonInternalGet`(`okio.SegmentedByteString` v7 @kind object, `int` v8 ) @signature `Lokio/internal/SegmentedByteStringKt;.commonInternalGet:(Lokio/SegmentedByteString;I)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L174208.  v0:= "$this$commonInternalGet" @kind object;
  #L17420c.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L174212.  call temp:= `getDirectory$okio`(v7) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L174218.  v0:= temp @kind object;
  #L17421a.  call temp:= `getSegments$okio`(v7) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L174220.  v1:= temp @kind object;
  #L174222.  v1:= length @variable v1;
  #L174224.  v1:= v1 + -1;
  #L174228.  v0:= v0[v1];
  #L17422c.  v1:= (`long`) v0 @kind i2l;
  #L17422e.  v3:= (`long`) v8 @kind i2l;
  #L174230.  v5:= 1L;
  #L174234.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L17423a.  call temp:= `segment`(v7, v8) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L174240.  v0:= temp;
  #L174242.  if v0 != 0 then goto L17424a;
  #L174246.  v1:= 0I;
  #L174248.  goto L17425a;
  #L17424a.  call temp:= `getDirectory$okio`(v7) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L174250.  v1:= temp @kind object;
  #L174252.  v2:= v0 + -1;
  #L174256.  v1:= v1[v2];
  #L17425a.  call temp:= `getDirectory$okio`(v7) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L174260.  v2:= temp @kind object;
  #L174262.  call temp:= `getSegments$okio`(v7) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L174268.  v3:= temp @kind object;
  #L17426a.  v3:= length @variable v3;
  #L17426c.  v3:= v3 + v0 @kind int;
  #L17426e.  v2:= v2[v3];
  #L174272.  call temp:= `getSegments$okio`(v7) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L174278.  v7:= temp @kind object;
  #L17427a.  v7:= v7[v0] @kind object;
  #L17427e.  v8:= v8 - v1 @kind int;
  #L174280.  v8:= v8 + v2 @kind int;
  #L174282.  v7:= v7[v8] @kind byte;
  #L174286.  return v7;
}
procedure `boolean` `commonRangeEquals`(`okio.SegmentedByteString` v6 @kind object, `int` v7 , `okio.ByteString` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/internal/SegmentedByteStringKt;.commonRangeEquals:(Lokio/SegmentedByteString;ILokio/ByteString;II)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L174144.  v0:= "$this$commonRangeEquals" @kind object;
  #L174148.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17414e.  v0:= "other" @kind object;
  #L174152.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L174158.  v0:= 0I;
  #L17415a.  if v7 < 0 then goto L1741f4;
  #L17415e.  call temp:= `size`(v6) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L174164.  v1:= temp;
  #L174166.  v1:= v1 - v10 @kind int;
  #L174168.  if v7 <= v1 then goto L17416e;
  #L17416c.  goto L1741f4;
  #L17416e.  v10:= v10 + v7 @kind int;
  #L174170.  call temp:= `segment`(v6, v7) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L174176.  v1:= temp;
  #L174178.  if v7 >= v10 then goto L1741f0;
  #L17417c.  if v1 != 0 then goto L174184;
  #L174180.  v2:= 0I;
  #L174182.  goto L174194;
  #L174184.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L17418a.  v2:= temp @kind object;
  #L17418c.  v3:= v1 + -1;
  #L174190.  v2:= v2[v3];
  #L174194.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L17419a.  v3:= temp @kind object;
  #L17419c.  v3:= v3[v1];
  #L1741a0.  v3:= v3 - v2 @kind int;
  #L1741a2.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1741a8.  v4:= temp @kind object;
  #L1741aa.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1741b0.  v5:= temp @kind object;
  #L1741b2.  v5:= length @variable v5;
  #L1741b4.  v5:= v5 + v1 @kind int;
  #L1741b6.  v4:= v4[v5];
  #L1741ba.  v3:= v3 + v2 @kind int;
  #L1741bc.  call temp:= `min`(v10, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1741c2.  v3:= temp;
  #L1741c4.  v3:= v3 - v7 @kind int;
  #L1741c6.  v2:= v7 - v2 @kind int;
  #L1741ca.  v4:= v4 + v2 @kind int;
  #L1741cc.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1741d2.  v2:= temp @kind object;
  #L1741d4.  v2:= v2[v1] @kind object;
  #L1741d8.  call temp:= `rangeEquals`(v8, v9, v2, v4, v3) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L1741de.  v2:= temp;
  #L1741e0.  if v2 != 0 then goto L1741e6;
  #L1741e4.  return v0;
  #L1741e6.  v9:= v9 + v3 @kind int;
  #L1741e8.  v7:= v7 + v3 @kind int;
  #L1741ea.  v1:= v1 + 1;
  #L1741ee.  goto L174178;
  #L1741f0.  v6:= 1I;
  #L1741f2.  return v6;
  #L1741f4.  return v0;
}
procedure `boolean` `commonRangeEquals`(`okio.SegmentedByteString` v6 @kind object, `int` v7 , `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/internal/SegmentedByteStringKt;.commonRangeEquals:(Lokio/SegmentedByteString;I[BII)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L174074.  v0:= "$this$commonRangeEquals" @kind object;
  #L174078.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17407e.  v0:= "other" @kind object;
  #L174082.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L174088.  v0:= 0I;
  #L17408a.  if v7 < 0 then goto L174130;
  #L17408e.  call temp:= `size`(v6) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L174094.  v1:= temp;
  #L174096.  v1:= v1 - v10 @kind int;
  #L174098.  if v7 > v1 then goto L174130;
  #L17409c.  if v9 < 0 then goto L174130;
  #L1740a0.  v1:= length @variable v8;
  #L1740a2.  v1:= v1 - v10 @kind int;
  #L1740a4.  if v9 <= v1 then goto L1740aa;
  #L1740a8.  goto L174130;
  #L1740aa.  v10:= v10 + v7 @kind int;
  #L1740ac.  call temp:= `segment`(v6, v7) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L1740b2.  v1:= temp;
  #L1740b4.  if v7 >= v10 then goto L17412c;
  #L1740b8.  if v1 != 0 then goto L1740c0;
  #L1740bc.  v2:= 0I;
  #L1740be.  goto L1740d0;
  #L1740c0.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1740c6.  v2:= temp @kind object;
  #L1740c8.  v3:= v1 + -1;
  #L1740cc.  v2:= v2[v3];
  #L1740d0.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1740d6.  v3:= temp @kind object;
  #L1740d8.  v3:= v3[v1];
  #L1740dc.  v3:= v3 - v2 @kind int;
  #L1740de.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1740e4.  v4:= temp @kind object;
  #L1740e6.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1740ec.  v5:= temp @kind object;
  #L1740ee.  v5:= length @variable v5;
  #L1740f0.  v5:= v5 + v1 @kind int;
  #L1740f2.  v4:= v4[v5];
  #L1740f6.  v3:= v3 + v2 @kind int;
  #L1740f8.  call temp:= `min`(v10, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1740fe.  v3:= temp;
  #L174100.  v3:= v3 - v7 @kind int;
  #L174102.  v2:= v7 - v2 @kind int;
  #L174106.  v4:= v4 + v2 @kind int;
  #L174108.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L17410e.  v2:= temp @kind object;
  #L174110.  v2:= v2[v1] @kind object;
  #L174114.  call temp:= `arrayRangeEquals`(v2, v4, v8, v9, v3) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L17411a.  v2:= temp;
  #L17411c.  if v2 != 0 then goto L174122;
  #L174120.  return v0;
  #L174122.  v9:= v9 + v3 @kind int;
  #L174124.  v7:= v7 + v3 @kind int;
  #L174126.  v1:= v1 + 1;
  #L17412a.  goto L1740b4;
  #L17412c.  v6:= 1I;
  #L17412e.  return v6;
  #L174130.  return v0;
}
procedure `okio.ByteString` `commonSubstring`(`okio.SegmentedByteString` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lokio/internal/SegmentedByteStringKt;.commonSubstring:(Lokio/SegmentedByteString;II)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L174470.  v0:= "$this$commonSubstring" @kind object;
  #L174474.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17447a.  v0:= 0I;
  #L17447c.  v1:= 1I;
  #L17447e.  if v12 < 0 then goto L174486;
  #L174482.  v2:= 1I;
  #L174484.  goto L174488;
  #L174486.  v2:= 0I;
  #L174488.  if v2 == 0 then goto L17461e;
  #L17448c.  call temp:= `size`(v11) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L174492.  v2:= temp;
  #L174494.  if v13 > v2 then goto L17449c;
  #L174498.  v2:= 1I;
  #L17449a.  goto L17449e;
  #L17449c.  v2:= 0I;
  #L17449e.  v3:= "endIndex=" @kind object;
  #L1744a2.  if v2 == 0 then goto L1745ca;
  #L1744a6.  v2:= v13 - v12 @kind int;
  #L1744aa.  if v2 < 0 then goto L1744b2;
  #L1744ae.  v4:= 1I;
  #L1744b0.  goto L1744b4;
  #L1744b2.  v4:= 0I;
  #L1744b4.  if v4 == 0 then goto L174588;
  #L1744b8.  if v12 != 0 then goto L1744ca;
  #L1744bc.  call temp:= `size`(v11) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1744c2.  v3:= temp;
  #L1744c4.  if v13 != v3 then goto L1744ca;
  #L1744c8.  return v11 @kind object;
  #L1744ca.  if v12 != v13 then goto L1744d4;
  #L1744ce.  v11:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L1744d2.  return v11 @kind object;
  #L1744d4.  call temp:= `segment`(v11, v12) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L1744da.  v3:= temp;
  #L1744dc.  v13:= v13 - v1 @kind int;
  #L1744de.  call temp:= `segment`(v11, v13) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L1744e4.  v13:= temp;
  #L1744e6.  call temp:= `getSegments$okio`(v11) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1744ec.  v4:= temp @kind object;
  #L1744ee.  v5:= v13 + 1;
  #L1744f2.  call temp:= `copyOfRange`(v4, v3, v5) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;` @kind static;
  #L1744f8.  v4:= temp @kind object;
  #L1744fa.  v4:= (`byte`[][]) v4 @kind object;
  #L1744fe.  v5:= length @variable v4;
  #L174500.  v5:= v5 * 2;
  #L174504.  v5:= new `int`[v5];
  #L174508.  if v3 > v13 then goto L17455a;
  #L17450c.  v7:= v3;
  #L17450e.  v6:= 0I;
  #L174510.  call temp:= `getDirectory$okio`(v11) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L174516.  v8:= temp @kind object;
  #L174518.  v8:= v8[v7];
  #L17451c.  v8:= v8 - v12 @kind int;
  #L17451e.  call temp:= `min`(v8, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L174524.  v8:= temp;
  #L174526.  v5[v6]:= v8;
  #L17452a.  v8:= v6 + 1;
  #L17452e.  v9:= length @variable v4;
  #L174530.  v6:= v6 + v9 @kind int;
  #L174532.  call temp:= `getDirectory$okio`(v11) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L174538.  v9:= temp @kind object;
  #L17453a.  call temp:= `getSegments$okio`(v11) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L174540.  v10:= temp @kind object;
  #L174542.  v10:= length @variable v10;
  #L174544.  v10:= v10 + v7 @kind int;
  #L174546.  v9:= v9[v10];
  #L17454a.  v5[v6]:= v9;
  #L17454e.  if v7 == v13 then goto L17455a;
  #L174552.  v7:= v7 + 1;
  #L174556.  v6:= v8;
  #L174558.  goto L174510;
  #L17455a.  if v3 != 0 then goto L174560;
  #L17455e.  goto L17456e;
  #L174560.  call temp:= `getDirectory$okio`(v11) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L174566.  v11:= temp @kind object;
  #L174568.  v3:= v3 - v1 @kind int;
  #L17456a.  v0:= v11[v3];
  #L17456e.  v11:= length @variable v4;
  #L174570.  v13:= v5[v11];
  #L174574.  v12:= v12 - v0 @kind int;
  #L174576.  v13:= v13 + v12 @kind int;
  #L174578.  v5[v11]:= v13;
  #L17457c.  v11:= new `okio.SegmentedByteString`;
  #L174580.  call `<init>`(v11, v4, v5) @signature `Lokio/SegmentedByteString;.<init>:([[B[I)V` @kind direct;
  #L174586.  return v11 @kind object;
  #L174588.  v11:= new `java.lang.StringBuilder`;
  #L17458c.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L174592.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L174598.  call temp:= `append`(v11, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L17459e.  v13:= " < beginIndex=" @kind object;
  #L1745a2.  call temp:= `append`(v11, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1745a8.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1745ae.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1745b4.  v11:= temp @kind object;
  #L1745b6.  v12:= new `java.lang.IllegalArgumentException`;
  #L1745ba.  call temp:= `toString`(v11) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1745c0.  v11:= temp @kind object;
  #L1745c2.  call `<init>`(v12, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1745c8.  throw v12;
  #L1745ca.  v12:= new `java.lang.StringBuilder`;
  #L1745ce.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1745d4.  call temp:= `append`(v12, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1745da.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1745e0.  v13:= " > length(" @kind object;
  #L1745e4.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1745ea.  call temp:= `size`(v11) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1745f0.  v11:= temp;
  #L1745f2.  call temp:= `append`(v12, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1745f8.  v11:= 41I;
  #L1745fc.  call temp:= `append`(v12, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L174602.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L174608.  v11:= temp @kind object;
  #L17460a.  v12:= new `java.lang.IllegalArgumentException`;
  #L17460e.  call temp:= `toString`(v11) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L174614.  v11:= temp @kind object;
  #L174616.  call `<init>`(v12, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17461c.  throw v12;
  #L17461e.  v11:= new `java.lang.StringBuilder`;
  #L174622.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L174628.  v13:= "beginIndex=" @kind object;
  #L17462c.  call temp:= `append`(v11, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L174632.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L174638.  v12:= " < 0" @kind object;
  #L17463c.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L174642.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L174648.  v11:= temp @kind object;
  #L17464a.  v12:= new `java.lang.IllegalArgumentException`;
  #L17464e.  call temp:= `toString`(v11) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L174654.  v11:= temp @kind object;
  #L174656.  call `<init>`(v12, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17465c.  throw v12;
}
procedure `byte`[] `commonToByteArray`(`okio.SegmentedByteString` v9 @kind object) @signature `Lokio/internal/SegmentedByteStringKt;.commonToByteArray:(Lokio/SegmentedByteString;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L174298.  v0:= "$this$commonToByteArray" @kind object;
  #L17429c.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1742a2.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1742a8.  v0:= temp;
  #L1742aa.  v0:= new `byte`[v0];
  #L1742ae.  call temp:= `getSegments$okio`(v9) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1742b4.  v1:= temp @kind object;
  #L1742b6.  v1:= length @variable v1;
  #L1742b8.  v2:= 0I;
  #L1742ba.  v3:= 0I;
  #L1742bc.  v4:= 0I;
  #L1742be.  if v2 >= v1 then goto L174302;
  #L1742c2.  call temp:= `getDirectory$okio`(v9) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1742c8.  v5:= temp @kind object;
  #L1742ca.  v6:= v1 + v2 @kind int;
  #L1742ce.  v5:= v5[v6];
  #L1742d2.  call temp:= `getDirectory$okio`(v9) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1742d8.  v6:= temp @kind object;
  #L1742da.  v6:= v6[v2];
  #L1742de.  call temp:= `getSegments$okio`(v9) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1742e4.  v7:= temp @kind object;
  #L1742e6.  v7:= v7[v2] @kind object;
  #L1742ea.  v3:= v6 - v3 @kind int;
  #L1742ee.  v8:= v5 + v3 @kind int;
  #L1742f2.  call temp:= `copyInto`(v7, v0, v4, v5, v8) @signature `Lkotlin/collections/ArraysKt;.copyInto:([B[BIII)[B` @kind static;
  #L1742f8.  v4:= v4 + v3 @kind int;
  #L1742fa.  v2:= v2 + 1;
  #L1742fe.  v3:= v6;
  #L174300.  goto L1742be;
  #L174302.  return v0 @kind object;
}
procedure `void` `commonWrite`(`okio.SegmentedByteString` v10 @kind object, `okio.Buffer` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lokio/internal/SegmentedByteStringKt;.commonWrite:(Lokio/SegmentedByteString;Lokio/Buffer;II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L174688.  v0:= "$this$commonWrite" @kind object;
  #L17468c.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L174692.  v0:= "buffer" @kind object;
  #L174696.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17469c.  v13:= v13 + v12 @kind int;
  #L17469e.  call temp:= `segment`(v10, v12) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L1746a4.  v0:= temp;
  #L1746a6.  if v12 >= v13 then goto L174750;
  #L1746aa.  if v0 != 0 then goto L1746b2;
  #L1746ae.  v1:= 0I;
  #L1746b0.  goto L1746c2;
  #L1746b2.  call temp:= `getDirectory$okio`(v10) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1746b8.  v1:= temp @kind object;
  #L1746ba.  v2:= v0 + -1;
  #L1746be.  v1:= v1[v2];
  #L1746c2.  call temp:= `getDirectory$okio`(v10) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1746c8.  v2:= temp @kind object;
  #L1746ca.  v2:= v2[v0];
  #L1746ce.  v2:= v2 - v1 @kind int;
  #L1746d0.  call temp:= `getDirectory$okio`(v10) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L1746d6.  v3:= temp @kind object;
  #L1746d8.  call temp:= `getSegments$okio`(v10) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L1746de.  v4:= temp @kind object;
  #L1746e0.  v4:= length @variable v4;
  #L1746e2.  v4:= v4 + v0 @kind int;
  #L1746e4.  v3:= v3[v4];
  #L1746e8.  v2:= v2 + v1 @kind int;
  #L1746ea.  call temp:= `min`(v13, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1746f0.  v2:= temp;
  #L1746f2.  v2:= v2 - v12 @kind int;
  #L1746f4.  v1:= v12 - v1 @kind int;
  #L1746f8.  v6:= v3 + v1 @kind int;
  #L1746fc.  call temp:= `getSegments$okio`(v10) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L174702.  v1:= temp @kind object;
  #L174704.  v5:= v1[v0] @kind object;
  #L174708.  v1:= new `okio.Segment`;
  #L17470c.  v7:= v6 + v2 @kind int;
  #L174710.  v8:= 1I;
  #L174712.  v9:= 0I;
  #L174714.  v4:= v1 @kind object;
  #L174716.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lokio/Segment;.<init>:([BIIZZ)V` @kind direct;
  #L17471c.  v3:= v11.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L174720.  if v3 != 0 then goto L174732;
  #L174724.  v1.`okio.Segment.prev` @type ^`okio.Segment` := v1 @kind object;
  #L174728.  v1.`okio.Segment.next` @type ^`okio.Segment` := v1 @kind object;
  #L17472c.  v11.`okio.Buffer.head` @type ^`okio.Segment` := v1 @kind object;
  #L174730.  goto L174748;
  #L174732.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L174738.  v3:= v3.`okio.Segment.prev` @type ^`okio.Segment` @kind object;
  #L17473c.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L174742.  call temp:= `push`(v3, v1) @signature `Lokio/Segment;.push:(Lokio/Segment;)Lokio/Segment;` @kind virtual;
  #L174748.  v12:= v12 + v2 @kind int;
  #L17474a.  v0:= v0 + 1;
  #L17474e.  goto L1746a6;
  #L174750.  call temp:= `size`(v11) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L174756.  v12:= temp @kind wide;
  #L174758.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L17475e.  v10:= temp;
  #L174760.  v0:= (`long`) v10 @kind i2l;
  #L174762.  v12:= v12 + v0 @kind long;
  #L174764.  call `setSize$okio`(v11, v12) @signature `Lokio/Buffer;.setSize$okio:(J)V` @kind virtual;
  #L17476a.  return @kind void;
}
procedure `void` `forEachSegment`(`okio.SegmentedByteString` v6 @kind object, `kotlin.jvm.functions.Function3` v7 @kind object) @signature `Lokio/internal/SegmentedByteStringKt;.forEachSegment:(Lokio/SegmentedByteString;Lkotlin/jvm/functions/Function3;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L174814.  v0:= "$this$forEachSegment" @kind object;
  #L174818.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L17481e.  v0:= "action" @kind object;
  #L174822.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L174828.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L17482e.  v0:= temp @kind object;
  #L174830.  v0:= length @variable v0;
  #L174832.  v1:= 0I;
  #L174834.  v2:= 0I;
  #L174836.  if v1 >= v0 then goto L174884;
  #L17483a.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L174840.  v3:= temp @kind object;
  #L174842.  v4:= v0 + v1 @kind int;
  #L174846.  v3:= v3[v4];
  #L17484a.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L174850.  v4:= temp @kind object;
  #L174852.  v4:= v4[v1];
  #L174856.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L17485c.  v5:= temp @kind object;
  #L17485e.  v5:= v5[v1] @kind object;
  #L174862.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L174868.  v3:= temp @kind object;
  #L17486a.  v2:= v4 - v2 @kind int;
  #L17486e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L174874.  v2:= temp @kind object;
  #L174876.  call temp:= `invoke`(v7, v5, v3, v2) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17487c.  v1:= v1 + 1;
  #L174880.  v2:= v4;
  #L174882.  goto L174836;
  #L174884.  return @kind void;
}
procedure `int` `segment`(`okio.SegmentedByteString` v2 @kind object, `int` v3 ) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L17442c.  v0:= "$this$segment" @kind object;
  #L174430.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L174436.  call temp:= `getDirectory$okio`(v2) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L17443c.  v0:= temp @kind object;
  #L17443e.  v3:= v3 + 1;
  #L174442.  call temp:= `getSegments$okio`(v2) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L174448.  v2:= temp @kind object;
  #L17444a.  v2:= length @variable v2;
  #L17444c.  v1:= 0I;
  #L17444e.  call temp:= `binarySearch`(v0, v3, v1, v2) @signature `Lokio/internal/SegmentedByteStringKt;.binarySearch:([IIII)I` @kind static;
  #L174454.  v2:= temp;
  #L174456.  if v2 < 0 then goto L17445c;
  #L17445a.  goto L17445e;
  #L17445c.  v2:= ~v2 @kind int;
  #L17445e.  return v2;
}
