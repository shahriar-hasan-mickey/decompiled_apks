record `okio.-Util` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `and`(`byte` v0 , `int` v1 ) @signature `Lokio/-Util;.and:(BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L15f610.  v0:= v0 ^& v1 @kind int;
  #L15f612.  return v0;
}
procedure `long` `and`(`byte` v2 , `long` v3 ) @signature `Lokio/-Util;.and:(BJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15fa24.  v0:= (`long`) v2 @kind i2l;
  #L15fa26.  v2:= v0 ^& v3 @kind long;
  #L15fa2a.  return v2 @kind wide;
}
procedure `long` `and`(`int` v2 , `long` v3 ) @signature `Lokio/-Util;.and:(IJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15fa3c.  v0:= (`long`) v2 @kind i2l;
  #L15fa3e.  v2:= v0 ^& v3 @kind long;
  #L15fa42.  return v2 @kind wide;
}
procedure `boolean` `arrayRangeEquals`(`byte`[] v4 @kind object, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15f5c4.  v0:= "a" @kind object;
  #L15f5c8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15f5ce.  v0:= "b" @kind object;
  #L15f5d2.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15f5d8.  v0:= 0I;
  #L15f5da.  v1:= 0I;
  #L15f5dc.  if v1 >= v8 then goto L15f5fc;
  #L15f5e0.  v2:= v1 + v5 @kind int;
  #L15f5e4.  v2:= v4[v2] @kind byte;
  #L15f5e8.  v3:= v1 + v7 @kind int;
  #L15f5ec.  v3:= v6[v3] @kind byte;
  #L15f5f0.  if v2 == v3 then goto L15f5f6;
  #L15f5f4.  return v0;
  #L15f5f6.  v1:= v1 + 1;
  #L15f5fa.  goto L15f5dc;
  #L15f5fc.  v4:= 1I;
  #L15f5fe.  return v4;
}
procedure `void` `checkOffsetAndCount`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15fb48.  v0:= v7 ^| v9 @kind long;
  #L15fb4c.  v2:= 0L;
  #L15fb50.  v4:= lcmp(v0, v2);
  #L15fb54.  if v4 < 0 then goto L15fb6e;
  #L15fb58.  v0:= lcmp(v7, v5);
  #L15fb5c.  if v0 > 0 then goto L15fb6e;
  #L15fb60.  v0:= v5 - v7 @kind long;
  #L15fb64.  v2:= lcmp(v0, v9);
  #L15fb68.  if v2 < 0 then goto L15fb6e;
  #L15fb6c.  return @kind void;
  #L15fb6e.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L15fb72.  v1:= new `java.lang.StringBuilder`;
  #L15fb76.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15fb7c.  v2:= "size=" @kind object;
  #L15fb80.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fb86.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fb8c.  v5:= " offset=" @kind object;
  #L15fb90.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fb96.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fb9c.  v5:= " byteCount=" @kind object;
  #L15fba0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fba6.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fbac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15fbb2.  v5:= temp @kind object;
  #L15fbb4.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15fbba.  throw v0;
}
procedure `long` `minOf`(`int` v2 , `long` v3 ) @signature `Lokio/-Util;.minOf:(IJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15fa54.  v0:= (`long`) v2 @kind i2l;
  #L15fa56.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L15fa5c.  v2:= temp @kind wide;
  #L15fa5e.  return v2 @kind wide;
}
procedure `long` `minOf`(`long` v2 , `int` v4 ) @signature `Lokio/-Util;.minOf:(JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15fa70.  v0:= (`long`) v4 @kind i2l;
  #L15fa72.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L15fa78.  v2:= temp @kind wide;
  #L15fa7a.  return v2 @kind wide;
}
procedure `int` `reverseBytes`(`int` v2 ) @signature `Lokio/-Util;.reverseBytes:(I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15f624.  v0:= -16777216I;
  #L15f628.  v0:= v0 ^& v2 @kind int;
  #L15f62a.  v0:= v0 ^>> 24;
  #L15f62e.  v1:= 16711680I;
  #L15f632.  v1:= v1 ^& v2 @kind int;
  #L15f634.  v1:= v1 ^>> 8;
  #L15f638.  v0:= v0 ^| v1 @kind int;
  #L15f63a.  v1:= 65280I;
  #L15f640.  v1:= v1 ^& v2 @kind int;
  #L15f642.  v1:= v1 ^< 8;
  #L15f646.  v0:= v0 ^| v1 @kind int;
  #L15f648.  v2:= v2 ^& 255;
  #L15f64c.  v2:= v2 ^< 24;
  #L15f650.  v2:= v2 ^| v0 @kind int;
  #L15f652.  return v2;
}
procedure `long` `reverseBytes`(`long` v8 ) @signature `Lokio/-Util;.reverseBytes:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L15fa8c.  v0:= -72057594037927936L;
  #L15fa90.  v0:= v0 ^& v8 @kind long;
  #L15fa92.  v2:= 56I;
  #L15fa96.  v0:= v0 ^>> v2 @kind long;
  #L15fa98.  v3:= 71776119061217280L;
  #L15fa9c.  v3:= v3 ^& v8 @kind long;
  #L15fa9e.  v5:= 40I;
  #L15faa2.  v3:= v3 ^>> v5 @kind long;
  #L15faa4.  v0:= v0 ^| v3 @kind long;
  #L15faa6.  v3:= 280375465082880L;
  #L15fab0.  v3:= v3 ^& v8 @kind long;
  #L15fab2.  v6:= 24I;
  #L15fab6.  v3:= v3 ^>> v6 @kind long;
  #L15fab8.  v0:= v0 ^| v3 @kind long;
  #L15faba.  v3:= 1095216660480L;
  #L15fac4.  v3:= v3 ^& v8 @kind long;
  #L15fac6.  v7:= 8I;
  #L15faca.  v3:= v3 ^>> v7 @kind long;
  #L15facc.  v0:= v0 ^| v3 @kind long;
  #L15face.  v3:= 4278190080L;
  #L15fad8.  v3:= v3 ^& v8 @kind long;
  #L15fada.  v3:= v3 ^< v7 @kind long;
  #L15fadc.  v0:= v0 ^| v3 @kind long;
  #L15fade.  v3:= 16711680L;
  #L15fae4.  v3:= v3 ^& v8 @kind long;
  #L15fae6.  v3:= v3 ^< v6 @kind long;
  #L15fae8.  v0:= v0 ^| v3 @kind long;
  #L15faea.  v3:= 65280L;
  #L15faf0.  v3:= v3 ^& v8 @kind long;
  #L15faf2.  v3:= v3 ^< v5 @kind long;
  #L15faf4.  v0:= v0 ^| v3 @kind long;
  #L15faf6.  v3:= 255L;
  #L15fafa.  v8:= v8 ^& v3 @kind long;
  #L15fafc.  v8:= v8 ^< v2 @kind long;
  #L15fafe.  v8:= v8 ^| v0 @kind long;
  #L15fb00.  return v8 @kind wide;
}
procedure `short` `reverseBytes`(`short` v1 ) @signature `Lokio/-Util;.reverseBytes:(S)S` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15fb14.  v0:= 65535I;
  #L15fb1a.  v1:= v1 ^& v0 @kind int;
  #L15fb1c.  v0:= 65280I;
  #L15fb22.  v0:= v0 ^& v1 @kind int;
  #L15fb24.  v0:= v0 ^>> 8;
  #L15fb28.  v1:= v1 ^& 255;
  #L15fb2c.  v1:= v1 ^< 8;
  #L15fb30.  v1:= v1 ^| v0 @kind int;
  #L15fb32.  v1:= (`short`) v1 @kind i2s;
  #L15fb34.  return v1;
}
procedure `int` `shl`(`byte` v0 , `int` v1 ) @signature `Lokio/-Util;.shl:(BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L15f664.  v0:= v0 ^< v1 @kind int;
  #L15f666.  return v0;
}
procedure `int` `shr`(`byte` v0 , `int` v1 ) @signature `Lokio/-Util;.shr:(BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L15f678.  v0:= v0 ^> v1 @kind int;
  #L15f67a.  return v0;
}
procedure `java.lang.String` `toHexString`(`byte` v3 ) @signature `Lokio/-Util;.toHexString:(B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15f68c.  v0:= 2I;
  #L15f68e.  v0:= new `char`[v0];
  #L15f692.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f698.  v1:= temp @kind object;
  #L15f69a.  v2:= v3 ^> 4;
  #L15f69e.  v2:= v2 ^& 15;
  #L15f6a2.  v1:= v1[v2] @kind char;
  #L15f6a6.  v2:= 0I;
  #L15f6a8.  v0[v2]:= v1 @kind char;
  #L15f6ac.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f6b2.  v1:= temp @kind object;
  #L15f6b4.  v3:= v3 ^& 15;
  #L15f6b8.  v3:= v1[v3] @kind char;
  #L15f6bc.  v1:= 1I;
  #L15f6be.  v0[v1]:= v3 @kind char;
  #L15f6c2.  v3:= new `java.lang.String`;
  #L15f6c6.  call `<init>`(v3, v0) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L15f6cc.  return v3 @kind object;
}
procedure `java.lang.String` `toHexString`(`int` v6 ) @signature `Lokio/-Util;.toHexString:(I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15f6e0.  if v6 != 0 then goto L15f6ea;
  #L15f6e4.  v6:= "0" @kind object;
  #L15f6e8.  return v6 @kind object;
  #L15f6ea.  v0:= 8I;
  #L15f6ee.  v1:= new `char`[v0];
  #L15f6f2.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f6f8.  v2:= temp @kind object;
  #L15f6fa.  v3:= v6 ^> 28;
  #L15f6fe.  v3:= v3 ^& 15;
  #L15f702.  v2:= v2[v3] @kind char;
  #L15f706.  v3:= 0I;
  #L15f708.  v1[v3]:= v2 @kind char;
  #L15f70c.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f712.  v2:= temp @kind object;
  #L15f714.  v4:= v6 ^> 24;
  #L15f718.  v4:= v4 ^& 15;
  #L15f71c.  v2:= v2[v4] @kind char;
  #L15f720.  v4:= 1I;
  #L15f722.  v1[v4]:= v2 @kind char;
  #L15f726.  v2:= 2I;
  #L15f728.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f72e.  v4:= temp @kind object;
  #L15f730.  v5:= v6 ^> 20;
  #L15f734.  v5:= v5 ^& 15;
  #L15f738.  v4:= v4[v5] @kind char;
  #L15f73c.  v1[v2]:= v4 @kind char;
  #L15f740.  v2:= 3I;
  #L15f742.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f748.  v4:= temp @kind object;
  #L15f74a.  v5:= v6 ^> 16;
  #L15f74e.  v5:= v5 ^& 15;
  #L15f752.  v4:= v4[v5] @kind char;
  #L15f756.  v1[v2]:= v4 @kind char;
  #L15f75a.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f760.  v2:= temp @kind object;
  #L15f762.  v4:= v6 ^> 12;
  #L15f766.  v4:= v4 ^& 15;
  #L15f76a.  v2:= v2[v4] @kind char;
  #L15f76e.  v4:= 4I;
  #L15f770.  v1[v4]:= v2 @kind char;
  #L15f774.  v2:= 5I;
  #L15f776.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f77c.  v4:= temp @kind object;
  #L15f77e.  v5:= v6 ^> 8;
  #L15f782.  v5:= v5 ^& 15;
  #L15f786.  v4:= v4[v5] @kind char;
  #L15f78a.  v1[v2]:= v4 @kind char;
  #L15f78e.  v2:= 6I;
  #L15f790.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f796.  v4:= temp @kind object;
  #L15f798.  v5:= v6 ^> 4;
  #L15f79c.  v5:= v5 ^& 15;
  #L15f7a0.  v4:= v4[v5] @kind char;
  #L15f7a4.  v1[v2]:= v4 @kind char;
  #L15f7a8.  v2:= 7I;
  #L15f7aa.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f7b0.  v4:= temp @kind object;
  #L15f7b2.  v6:= v6 ^& 15;
  #L15f7b6.  v6:= v4[v6] @kind char;
  #L15f7ba.  v1[v2]:= v6 @kind char;
  #L15f7be.  if v3 >= v0 then goto L15f7d6;
  #L15f7c2.  v6:= v1[v3] @kind char;
  #L15f7c6.  v2:= 48I;
  #L15f7ca.  if v6 == v2 then goto L15f7d0;
  #L15f7ce.  goto L15f7d6;
  #L15f7d0.  v3:= v3 + 1;
  #L15f7d4.  goto L15f7be;
  #L15f7d6.  v6:= v3 - 8;
  #L15f7da.  v0:= new `java.lang.String`;
  #L15f7de.  call `<init>`(v0, v1, v3, v6) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L15f7e4.  return v0 @kind object;
}
procedure `java.lang.String` `toHexString`(`long` v12 ) @signature `Lokio/-Util;.toHexString:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L15f7f8.  v0:= 0L;
  #L15f7fc.  v2:= lcmp(v12, v0);
  #L15f800.  if v2 != 0 then goto L15f80a;
  #L15f804.  v12:= "0" @kind object;
  #L15f808.  return v12 @kind object;
  #L15f80a.  v0:= 16I;
  #L15f80e.  v1:= new `char`[v0];
  #L15f812.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f818.  v2:= temp @kind object;
  #L15f81a.  v3:= 60I;
  #L15f81e.  v3:= v12 ^> v3 @kind long;
  #L15f822.  v5:= 15L;
  #L15f826.  v3:= v3 ^& v5 @kind long;
  #L15f828.  v4:= (`int`) v3 @kind l2i;
  #L15f82a.  v2:= v2[v4] @kind char;
  #L15f82e.  v3:= 0I;
  #L15f830.  v1[v3]:= v2 @kind char;
  #L15f834.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f83a.  v2:= temp @kind object;
  #L15f83c.  v4:= 56I;
  #L15f840.  v7:= v12 ^> v4 @kind long;
  #L15f844.  v7:= v7 ^& v5 @kind long;
  #L15f846.  v4:= (`int`) v7 @kind l2i;
  #L15f848.  v2:= v2[v4] @kind char;
  #L15f84c.  v4:= 1I;
  #L15f84e.  v1[v4]:= v2 @kind char;
  #L15f852.  v2:= 2I;
  #L15f854.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f85a.  v4:= temp @kind object;
  #L15f85c.  v7:= 52I;
  #L15f860.  v7:= v12 ^> v7 @kind long;
  #L15f864.  v7:= v7 ^& v5 @kind long;
  #L15f866.  v8:= (`int`) v7 @kind l2i;
  #L15f868.  v4:= v4[v8] @kind char;
  #L15f86c.  v1[v2]:= v4 @kind char;
  #L15f870.  v2:= 3I;
  #L15f872.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f878.  v4:= temp @kind object;
  #L15f87a.  v7:= 48I;
  #L15f87e.  v8:= v12 ^> v7 @kind long;
  #L15f882.  v8:= v8 ^& v5 @kind long;
  #L15f884.  v9:= (`int`) v8 @kind l2i;
  #L15f886.  v4:= v4[v9] @kind char;
  #L15f88a.  v1[v2]:= v4 @kind char;
  #L15f88e.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f894.  v2:= temp @kind object;
  #L15f896.  v4:= 44I;
  #L15f89a.  v8:= v12 ^> v4 @kind long;
  #L15f89e.  v8:= v8 ^& v5 @kind long;
  #L15f8a0.  v4:= (`int`) v8 @kind l2i;
  #L15f8a2.  v2:= v2[v4] @kind char;
  #L15f8a6.  v4:= 4I;
  #L15f8a8.  v1[v4]:= v2 @kind char;
  #L15f8ac.  v2:= 5I;
  #L15f8ae.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f8b4.  v8:= temp @kind object;
  #L15f8b6.  v9:= 40I;
  #L15f8ba.  v9:= v12 ^> v9 @kind long;
  #L15f8be.  v9:= v9 ^& v5 @kind long;
  #L15f8c0.  v10:= (`int`) v9 @kind l2i;
  #L15f8c2.  v8:= v8[v10] @kind char;
  #L15f8c6.  v1[v2]:= v8 @kind char;
  #L15f8ca.  v2:= 6I;
  #L15f8cc.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f8d2.  v8:= temp @kind object;
  #L15f8d4.  v9:= 36I;
  #L15f8d8.  v9:= v12 ^> v9 @kind long;
  #L15f8dc.  v9:= v9 ^& v5 @kind long;
  #L15f8de.  v10:= (`int`) v9 @kind l2i;
  #L15f8e0.  v8:= v8[v10] @kind char;
  #L15f8e4.  v1[v2]:= v8 @kind char;
  #L15f8e8.  v2:= 7I;
  #L15f8ea.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f8f0.  v8:= temp @kind object;
  #L15f8f2.  v9:= 32I;
  #L15f8f6.  v9:= v12 ^> v9 @kind long;
  #L15f8fa.  v9:= v9 ^& v5 @kind long;
  #L15f8fc.  v10:= (`int`) v9 @kind l2i;
  #L15f8fe.  v8:= v8[v10] @kind char;
  #L15f902.  v1[v2]:= v8 @kind char;
  #L15f906.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f90c.  v2:= temp @kind object;
  #L15f90e.  v8:= 28I;
  #L15f912.  v8:= v12 ^> v8 @kind long;
  #L15f916.  v8:= v8 ^& v5 @kind long;
  #L15f918.  v9:= (`int`) v8 @kind l2i;
  #L15f91a.  v2:= v2[v9] @kind char;
  #L15f91e.  v8:= 8I;
  #L15f922.  v1[v8]:= v2 @kind char;
  #L15f926.  v2:= 9I;
  #L15f92a.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f930.  v9:= temp @kind object;
  #L15f932.  v10:= 24I;
  #L15f936.  v10:= v12 ^> v10 @kind long;
  #L15f93a.  v10:= v10 ^& v5 @kind long;
  #L15f93c.  v11:= (`int`) v10 @kind l2i;
  #L15f93e.  v9:= v9[v11] @kind char;
  #L15f942.  v1[v2]:= v9 @kind char;
  #L15f946.  v2:= 10I;
  #L15f94a.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f950.  v9:= temp @kind object;
  #L15f952.  v10:= 20I;
  #L15f956.  v10:= v12 ^> v10 @kind long;
  #L15f95a.  v10:= v10 ^& v5 @kind long;
  #L15f95c.  v11:= (`int`) v10 @kind l2i;
  #L15f95e.  v9:= v9[v11] @kind char;
  #L15f962.  v1[v2]:= v9 @kind char;
  #L15f966.  v2:= 11I;
  #L15f96a.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f970.  v9:= temp @kind object;
  #L15f972.  v10:= v12 ^> v0 @kind long;
  #L15f976.  v10:= v10 ^& v5 @kind long;
  #L15f978.  v11:= (`int`) v10 @kind l2i;
  #L15f97a.  v9:= v9[v11] @kind char;
  #L15f97e.  v1[v2]:= v9 @kind char;
  #L15f982.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f988.  v2:= temp @kind object;
  #L15f98a.  v9:= 12I;
  #L15f98e.  v10:= v12 ^> v9 @kind long;
  #L15f992.  v10:= v10 ^& v5 @kind long;
  #L15f994.  v11:= (`int`) v10 @kind l2i;
  #L15f996.  v2:= v2[v11] @kind char;
  #L15f99a.  v1[v9]:= v2 @kind char;
  #L15f99e.  v2:= 13I;
  #L15f9a2.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f9a8.  v9:= temp @kind object;
  #L15f9aa.  v10:= v12 ^> v8 @kind long;
  #L15f9ae.  v10:= v10 ^& v5 @kind long;
  #L15f9b0.  v8:= (`int`) v10 @kind l2i;
  #L15f9b2.  v8:= v9[v8] @kind char;
  #L15f9b6.  v1[v2]:= v8 @kind char;
  #L15f9ba.  v2:= 14I;
  #L15f9be.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f9c4.  v8:= temp @kind object;
  #L15f9c6.  v9:= v12 ^> v4 @kind long;
  #L15f9ca.  v9:= v9 ^& v5 @kind long;
  #L15f9cc.  v4:= (`int`) v9 @kind l2i;
  #L15f9ce.  v4:= v8[v4] @kind char;
  #L15f9d2.  v1[v2]:= v4 @kind char;
  #L15f9d6.  v2:= 15I;
  #L15f9da.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L15f9e0.  v4:= temp @kind object;
  #L15f9e2.  v12:= v12 ^& v5 @kind long;
  #L15f9e4.  v13:= (`int`) v12 @kind l2i;
  #L15f9e6.  v12:= v4[v13] @kind char;
  #L15f9ea.  v1[v2]:= v12 @kind char;
  #L15f9ee.  if v3 >= v0 then goto L15fa02;
  #L15f9f2.  v12:= v1[v3] @kind char;
  #L15f9f6.  if v12 == v7 then goto L15f9fc;
  #L15f9fa.  goto L15fa02;
  #L15f9fc.  v3:= v3 + 1;
  #L15fa00.  goto L15f9ee;
  #L15fa02.  v12:= v3 - 16;
  #L15fa06.  v13:= new `java.lang.String`;
  #L15fa0a.  call `<init>`(v13, v1, v3, v12) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L15fa10.  return v13 @kind object;
}
