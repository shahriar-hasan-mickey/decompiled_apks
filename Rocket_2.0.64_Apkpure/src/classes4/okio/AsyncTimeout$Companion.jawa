record `okio.AsyncTimeout$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okio.AsyncTimeout$Companion` v0 @kind this) @signature `Lokio/AsyncTimeout$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15fd3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15fd42.  return @kind void;
}
procedure `void` `<init>`(`okio.AsyncTimeout$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokio/AsyncTimeout$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L15fd54.  call `<init>`(v0) @signature `Lokio/AsyncTimeout$Companion;.<init>:()V` @kind direct;
  #L15fd5a.  return @kind void;
}
procedure `boolean` `a`(`okio.AsyncTimeout$Companion` v3 @kind this, `okio.AsyncTimeout` v4 @kind object) @signature `Lokio/AsyncTimeout$Companion;.a:(Lokio/AsyncTimeout;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15fbe8.  v0:= constclass @type ^`okio.AsyncTimeout` @kind object;
  #L15fbec.  @monitorenter v0
  #L15fbee.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L15fbf4.  v1:= temp @kind object;
  #L15fbf6.  if v1 == 0 then goto L15fc2c;
  #L15fbfa.  call temp:= `access$getNext$p`(v1) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L15fc00.  v2:= temp @kind object;
  #L15fc02.  if v2 != v4 then goto L15fc22;
  #L15fc06.  call temp:= `access$getNext$p`(v4) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L15fc0c.  v2:= temp @kind object;
  #L15fc0e.  call `access$setNext$p`(v1, v2) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L15fc14.  v1:= 0I;
  #L15fc16.  call `access$setNext$p`(v4, v1) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L15fc1c.  v4:= 0I;
  #L15fc1e.  @monitorexit v0
  #L15fc20.  return v4;
  #L15fc22.  call temp:= `access$getNext$p`(v1) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L15fc28.  v1:= temp @kind object;
  #L15fc2a.  goto L15fbf6;
  #L15fc2c.  v4:= 1I;
  #L15fc2e.  @monitorexit v0
  #L15fc30.  return v4;
  #L15fc32.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15fc34.  @monitorexit v0
  #L15fc36.  throw v4;
  catch `java.lang.Throwable` @[L15fbee..L15fc1c] goto L15fc32;
  catch `java.lang.Throwable` @[L15fc22..L15fc2a] goto L15fc32;
}
procedure `boolean` `access$cancelScheduledTimeout`(`okio.AsyncTimeout$Companion` v0 @kind object, `okio.AsyncTimeout` v1 @kind object) @signature `Lokio/AsyncTimeout$Companion;.access$cancelScheduledTimeout:(Lokio/AsyncTimeout$Companion;Lokio/AsyncTimeout;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15fbcc.  call temp:= `a`(v0, v1) @signature `Lokio/AsyncTimeout$Companion;.a:(Lokio/AsyncTimeout;)Z` @kind direct;
  #L15fbd2.  v0:= temp;
  #L15fbd4.  return v0;
}
procedure `void` `access$scheduleTimeout`(`okio.AsyncTimeout$Companion` v0 @kind object, `okio.AsyncTimeout` v1 @kind object, `long` v2 , `boolean` v4 ) @signature `Lokio/AsyncTimeout$Companion;.access$scheduleTimeout:(Lokio/AsyncTimeout$Companion;Lokio/AsyncTimeout;JZ)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15fd6c.  call `b`(v0, v1, v2, v4) @signature `Lokio/AsyncTimeout$Companion;.b:(Lokio/AsyncTimeout;JZ)V` @kind direct;
  #L15fd72.  return @kind void;
}
procedure `void` `b`(`okio.AsyncTimeout$Companion` v6 @kind this, `okio.AsyncTimeout` v7 @kind object, `long` v8 , `boolean` v10 ) @signature `Lokio/AsyncTimeout$Companion;.b:(Lokio/AsyncTimeout;JZ)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15fd84.  v0:= constclass @type ^`okio.AsyncTimeout` @kind object;
  #L15fd88.  @monitorenter v0
  #L15fd8a.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L15fd90.  v1:= temp @kind object;
  #L15fd92.  if v1 != 0 then goto L15fdb6;
  #L15fd96.  v1:= new `okio.AsyncTimeout`;
  #L15fd9a.  call `<init>`(v1) @signature `Lokio/AsyncTimeout;.<init>:()V` @kind direct;
  #L15fda0.  call `access$setHead$cp`(v1) @signature `Lokio/AsyncTimeout;.access$setHead$cp:(Lokio/AsyncTimeout;)V` @kind static;
  #L15fda6.  v1:= new `okio.AsyncTimeout$a`;
  #L15fdaa.  call `<init>`(v1) @signature `Lokio/AsyncTimeout$a;.<init>:()V` @kind direct;
  #L15fdb0.  call `start`(v1) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L15fdb6.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L15fdbc.  v1:= temp @kind wide;
  #L15fdbe.  v3:= 0L;
  #L15fdc2.  v5:= lcmp(v8, v3);
  #L15fdc6.  if v5 == 0 then goto L15fdea;
  #L15fdca.  if v10 == 0 then goto L15fdea;
  #L15fdce.  call temp:= `deadlineNanoTime`(v7) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L15fdd4.  v3:= temp @kind wide;
  #L15fdd6.  v3:= v3 - v1 @kind long;
  #L15fdd8.  call temp:= `min`(v8, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L15fdde.  v8:= temp @kind wide;
  #L15fde0.  v8:= v8 + v1 @kind long;
  #L15fde2.  call `access$setTimeoutAt$p`(v7, v8) @signature `Lokio/AsyncTimeout;.access$setTimeoutAt$p:(Lokio/AsyncTimeout;J)V` @kind static;
  #L15fde8.  goto L15fe0a;
  #L15fdea.  if v5 == 0 then goto L15fdf8;
  #L15fdee.  v8:= v8 + v1 @kind long;
  #L15fdf0.  call `access$setTimeoutAt$p`(v7, v8) @signature `Lokio/AsyncTimeout;.access$setTimeoutAt$p:(Lokio/AsyncTimeout;J)V` @kind static;
  #L15fdf6.  goto L15fe0a;
  #L15fdf8.  if v10 == 0 then goto L15fe8a;
  #L15fdfc.  call temp:= `deadlineNanoTime`(v7) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L15fe02.  v8:= temp @kind wide;
  #L15fe04.  call `access$setTimeoutAt$p`(v7, v8) @signature `Lokio/AsyncTimeout;.access$setTimeoutAt$p:(Lokio/AsyncTimeout;J)V` @kind static;
  #L15fe0a.  call temp:= `access$remainingNanos`(v7, v1) @signature `Lokio/AsyncTimeout;.access$remainingNanos:(Lokio/AsyncTimeout;J)J` @kind static;
  #L15fe10.  v8:= temp @kind wide;
  #L15fe12.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L15fe18.  v10:= temp @kind object;
  #L15fe1a.  call `checkNotNull`(v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15fe20.  call temp:= `access$getNext$p`(v10) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L15fe26.  v3:= temp @kind object;
  #L15fe28.  if v3 == 0 then goto L15fe5c;
  #L15fe2c.  call temp:= `access$getNext$p`(v10) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L15fe32.  v3:= temp @kind object;
  #L15fe34.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15fe3a.  call temp:= `access$remainingNanos`(v3, v1) @signature `Lokio/AsyncTimeout;.access$remainingNanos:(Lokio/AsyncTimeout;J)J` @kind static;
  #L15fe40.  v3:= temp @kind wide;
  #L15fe42.  v5:= lcmp(v8, v3);
  #L15fe46.  if v5 >= 0 then goto L15fe4c;
  #L15fe4a.  goto L15fe5c;
  #L15fe4c.  call temp:= `access$getNext$p`(v10) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L15fe52.  v10:= temp @kind object;
  #L15fe54.  call `checkNotNull`(v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15fe5a.  goto L15fe20;
  #L15fe5c.  call temp:= `access$getNext$p`(v10) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L15fe62.  v8:= temp @kind object;
  #L15fe64.  call `access$setNext$p`(v7, v8) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L15fe6a.  call `access$setNext$p`(v10, v7) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L15fe70.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L15fe76.  v7:= temp @kind object;
  #L15fe78.  if v10 != v7 then goto L15fe82;
  #L15fe7c.  call `notify`(v0) @signature `Ljava/lang/Object;.notify:()V` @kind virtual;
  #L15fe82.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15fe86.  @monitorexit v0
  #L15fe88.  return @kind void;
  #L15fe8a.  v7:= new `java.lang.AssertionError`;
  #L15fe8e.  call `<init>`(v7) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15fe94.  throw v7;
  #L15fe96.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15fe98.  @monitorexit v0
  #L15fe9a.  throw v7;
  catch `java.lang.Throwable` @[L15fd8a..L15fe86] goto L15fe96;
  catch `java.lang.Throwable` @[L15fe8a..L15fe96] goto L15fe96;
}
procedure `okio.AsyncTimeout` `awaitTimeout$okio`(`okio.AsyncTimeout$Companion` v9 @kind this) @signature `Lokio/AsyncTimeout$Companion;.awaitTimeout$okio:()Lokio/AsyncTimeout;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L15fc5c.  v0:= constclass @type ^`okio.AsyncTimeout` @kind object;
  #L15fc60.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L15fc66.  v1:= temp @kind object;
  #L15fc68.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15fc6e.  call temp:= `access$getNext$p`(v1) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L15fc74.  v1:= temp @kind object;
  #L15fc76.  v2:= 0I;
  #L15fc78.  if v1 != 0 then goto L15fcd0;
  #L15fc7c.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L15fc82.  v3:= temp @kind wide;
  #L15fc84.  call temp:= `access$getIDLE_TIMEOUT_MILLIS$cp`() @signature `Lokio/AsyncTimeout;.access$getIDLE_TIMEOUT_MILLIS$cp:()J` @kind static;
  #L15fc8a.  v5:= temp @kind wide;
  #L15fc8c.  call `wait`(v0, v5) @signature `Ljava/lang/Object;.wait:(J)V` @kind virtual;
  #L15fc92.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L15fc98.  v0:= temp @kind object;
  #L15fc9a.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15fca0.  call temp:= `access$getNext$p`(v0) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L15fca6.  v0:= temp @kind object;
  #L15fca8.  if v0 != 0 then goto L15fcce;
  #L15fcac.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L15fcb2.  v0:= temp @kind wide;
  #L15fcb4.  v0:= v0 - v3 @kind long;
  #L15fcb6.  call temp:= `access$getIDLE_TIMEOUT_NANOS$cp`() @signature `Lokio/AsyncTimeout;.access$getIDLE_TIMEOUT_NANOS$cp:()J` @kind static;
  #L15fcbc.  v3:= temp @kind wide;
  #L15fcbe.  v5:= lcmp(v0, v3);
  #L15fcc2.  if v5 < 0 then goto L15fcce;
  #L15fcc6.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L15fccc.  v2:= temp @kind object;
  #L15fcce.  return v2 @kind object;
  #L15fcd0.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L15fcd6.  v3:= temp @kind wide;
  #L15fcd8.  call temp:= `access$remainingNanos`(v1, v3) @signature `Lokio/AsyncTimeout;.access$remainingNanos:(Lokio/AsyncTimeout;J)J` @kind static;
  #L15fcde.  v3:= temp @kind wide;
  #L15fce0.  v5:= 0L;
  #L15fce4.  v7:= lcmp(v3, v5);
  #L15fce8.  if v7 <= 0 then goto L15fd06;
  #L15fcec.  v5:= 1000000L;
  #L15fcf2.  v7:= v3 / v5 @kind long;
  #L15fcf6.  v5:= v5 * v7 @kind long;
  #L15fcfa.  v3:= v3 - v5 @kind long;
  #L15fcfc.  v1:= (`int`) v3 @kind l2i;
  #L15fcfe.  call `wait`(v0, v7, v1) @signature `Ljava/lang/Object;.wait:(JI)V` @kind virtual;
  #L15fd04.  return v2 @kind object;
  #L15fd06.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L15fd0c.  v0:= temp @kind object;
  #L15fd0e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15fd14.  call temp:= `access$getNext$p`(v1) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L15fd1a.  v3:= temp @kind object;
  #L15fd1c.  call `access$setNext$p`(v0, v3) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L15fd22.  call `access$setNext$p`(v1, v2) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L15fd28.  return v1 @kind object;
}
