record `okio.ByteString` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface, `java.lang.Comparable` @kind interface {
  `int` `okio.ByteString.a` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.String` `okio.ByteString.b` @AccessFlag PRIVATE_TRANSIENT;
  `byte`[] `okio.ByteString.c` @AccessFlag PRIVATE_FINAL;
}
global `okio.ByteString$Companion` `@@okio.ByteString.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okio.ByteString.EMPTY` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okio.ByteString.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/ByteString;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L165ed0.  v0:= new `okio.ByteString$Companion`;
  #L165ed4.  v1:= 0I;
  #L165ed6.  call `<init>`(v0, v1) @signature `Lokio/ByteString$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L165edc.  `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` := v0 @kind object;
  #L165ee0.  v0:= new `okio.ByteString`;
  #L165ee4.  v1:= 0I;
  #L165ee6.  v1:= new `byte`[v1];
  #L165eea.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L165ef0.  `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` := v0 @kind object;
  #L165ef4.  return @kind void;
}
procedure `void` `<init>`(`okio.ByteString` v1 @kind this, `byte`[] v2 @kind object) @signature `Lokio/ByteString;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L165f08.  v0:= "data" @kind object;
  #L165f0c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165f12.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L165f18.  v1.`okio.ByteString.c` @type ^`byte`[] := v2 @kind object;
  #L165f1c.  return @kind void;
}
procedure `okio.ByteString` `decodeBase64`(`java.lang.String` v1 @kind object) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L165940.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L165944.  call temp:= `decodeBase64`(v0, v1) @signature `Lokio/ByteString$Companion;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L16594a.  v1:= temp @kind object;
  #L16594c.  return v1 @kind object;
}
procedure `okio.ByteString` `decodeHex`(`java.lang.String` v1 @kind object) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L165960.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L165964.  call temp:= `decodeHex`(v0, v1) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L16596a.  v1:= temp @kind object;
  #L16596c.  return v1 @kind object;
}
procedure `okio.ByteString` `encodeString`(`java.lang.String` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lokio/ByteString;.encodeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1659c4.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1659c8.  call temp:= `encodeString`(v0, v1, v2) @signature `Lokio/ByteString$Companion;.encodeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/ByteString;` @kind virtual;
  #L1659ce.  v1:= temp @kind object;
  #L1659d0.  return v1 @kind object;
}
procedure `okio.ByteString` `encodeUtf8`(`java.lang.String` v1 @kind object) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1659e4.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1659e8.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1659ee.  v1:= temp @kind object;
  #L1659f0.  return v1 @kind object;
}
procedure `int` `indexOf$default`(`okio.ByteString` v0 @kind object, `okio.ByteString` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/ByteString;.indexOf$default:(Lokio/ByteString;Lokio/ByteString;IILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L165314.  if v4 != 0 then goto L16532c;
  #L165318.  v3:= v3 ^& 2;
  #L16531c.  if v3 == 0 then goto L165322;
  #L165320.  v2:= 0I;
  #L165322.  call temp:= `indexOf`(v0, v1, v2) @signature `Lokio/ByteString;.indexOf:(Lokio/ByteString;I)I` @kind virtual;
  #L165328.  v0:= temp;
  #L16532a.  return v0;
  #L16532c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L165330.  v1:= "Super calls with default arguments not supported in this target, function: indexOf" @kind object;
  #L165334.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16533a.  throw v0;
}
procedure `int` `indexOf$default`(`okio.ByteString` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/ByteString;.indexOf$default:(Lokio/ByteString;[BIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1652dc.  if v4 != 0 then goto L1652f4;
  #L1652e0.  v3:= v3 ^& 2;
  #L1652e4.  if v3 == 0 then goto L1652ea;
  #L1652e8.  v2:= 0I;
  #L1652ea.  call temp:= `indexOf`(v0, v1, v2) @signature `Lokio/ByteString;.indexOf:([BI)I` @kind virtual;
  #L1652f0.  v0:= temp;
  #L1652f2.  return v0;
  #L1652f4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1652f8.  v1:= "Super calls with default arguments not supported in this target, function: indexOf" @kind object;
  #L1652fc.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L165302.  throw v0;
}
procedure `int` `lastIndexOf$default`(`okio.ByteString` v0 @kind object, `okio.ByteString` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/ByteString;.lastIndexOf$default:(Lokio/ByteString;Lokio/ByteString;IILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L165454.  if v4 != 0 then goto L165472;
  #L165458.  v3:= v3 ^& 2;
  #L16545c.  if v3 == 0 then goto L165468;
  #L165460.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L165466.  v2:= temp;
  #L165468.  call temp:= `lastIndexOf`(v0, v1, v2) @signature `Lokio/ByteString;.lastIndexOf:(Lokio/ByteString;I)I` @kind virtual;
  #L16546e.  v0:= temp;
  #L165470.  return v0;
  #L165472.  v0:= new `java.lang.UnsupportedOperationException`;
  #L165476.  v1:= "Super calls with default arguments not supported in this target, function: lastIndexOf" @kind object;
  #L16547a.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L165480.  throw v0;
}
procedure `int` `lastIndexOf$default`(`okio.ByteString` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/ByteString;.lastIndexOf$default:(Lokio/ByteString;[BIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L165414.  if v4 != 0 then goto L165432;
  #L165418.  v3:= v3 ^& 2;
  #L16541c.  if v3 == 0 then goto L165428;
  #L165420.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L165426.  v2:= temp;
  #L165428.  call temp:= `lastIndexOf`(v0, v1, v2) @signature `Lokio/ByteString;.lastIndexOf:([BI)I` @kind virtual;
  #L16542e.  v0:= temp;
  #L165430.  return v0;
  #L165432.  v0:= new `java.lang.UnsupportedOperationException`;
  #L165436.  v1:= "Super calls with default arguments not supported in this target, function: lastIndexOf" @kind object;
  #L16543a.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L165440.  throw v0;
}
procedure `okio.ByteString` `of`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lokio/ByteString;.of:(Ljava/nio/ByteBuffer;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L165b60.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L165b64.  call temp:= `of`(v0, v1) @signature `Lokio/ByteString$Companion;.of:(Ljava/nio/ByteBuffer;)Lokio/ByteString;` @kind virtual;
  #L165b6a.  v1:= temp @kind object;
  #L165b6c.  return v1 @kind object;
}
procedure `okio.ByteString` `of`(`byte`[] v1 @kind object) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L165b20.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L165b24.  call temp:= `of`(v0, v1) @signature `Lokio/ByteString$Companion;.of:([B)Lokio/ByteString;` @kind virtual;
  #L165b2a.  v1:= temp @kind object;
  #L165b2c.  return v1 @kind object;
}
procedure `okio.ByteString` `of`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokio/ByteString;.of:([BII)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L165b40.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L165b44.  call temp:= `of`(v0, v1, v2, v3) @signature `Lokio/ByteString$Companion;.of:([BII)Lokio/ByteString;` @kind virtual;
  #L165b4a.  v1:= temp @kind object;
  #L165b4c.  return v1 @kind object;
}
procedure `okio.ByteString` `read`(`java.io.InputStream` v1 @kind object, `int` v2 ) @signature `Lokio/ByteString;.read:(Ljava/io/InputStream;I)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L165b80.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L165b84.  call temp:= `read`(v0, v1, v2) @signature `Lokio/ByteString$Companion;.read:(Ljava/io/InputStream;I)Lokio/ByteString;` @kind virtual;
  #L165b8a.  v1:= temp @kind object;
  #L165b8c.  return v1 @kind object;
}
procedure `void` `readObject`(`okio.ByteString` v2 @kind this, `java.io.ObjectInputStream` v3 @kind object) @signature `Lokio/ByteString;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L165f30.  call temp:= `readInt`(v3) @signature `Ljava/io/ObjectInputStream;.readInt:()I` @kind virtual;
  #L165f36.  v0:= temp;
  #L165f38.  v1:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L165f3c.  call temp:= `read`(v1, v3, v0) @signature `Lokio/ByteString$Companion;.read:(Ljava/io/InputStream;I)Lokio/ByteString;` @kind virtual;
  #L165f42.  v3:= temp @kind object;
  #L165f44.  v0:= constclass @type ^`okio.ByteString` @kind object;
  #L165f48.  v1:= "c" @kind object;
  #L165f4c.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L165f52.  v0:= temp @kind object;
  #L165f54.  v1:= "field" @kind object;
  #L165f58.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165f5e.  v1:= 1I;
  #L165f60.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L165f66.  v3:= v3.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L165f6a.  call `set`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L165f70.  return @kind void;
}
procedure `okio.ByteString` `substring$default`(`okio.ByteString` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/ByteString;.substring$default:(Lokio/ByteString;IIILjava/lang/Object;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L165c00.  if v4 != 0 then goto L165c28;
  #L165c04.  v4:= v3 ^& 1;
  #L165c08.  if v4 == 0 then goto L165c0e;
  #L165c0c.  v1:= 0I;
  #L165c0e.  v3:= v3 ^& 2;
  #L165c12.  if v3 == 0 then goto L165c1e;
  #L165c16.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L165c1c.  v2:= temp;
  #L165c1e.  call temp:= `substring`(v0, v1, v2) @signature `Lokio/ByteString;.substring:(II)Lokio/ByteString;` @kind virtual;
  #L165c24.  v0:= temp @kind object;
  #L165c26.  return v0 @kind object;
  #L165c28.  v0:= new `java.lang.UnsupportedOperationException`;
  #L165c2c.  v1:= "Super calls with default arguments not supported in this target, function: substring" @kind object;
  #L165c30.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L165c36.  throw v0;
}
procedure `void` `writeObject`(`okio.ByteString` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lokio/ByteString;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L166000.  v0:= v1.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L166004.  v0:= length @variable v0;
  #L166006.  call `writeInt`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.writeInt:(I)V` @kind virtual;
  #L16600c.  v0:= v1.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L166010.  call `write`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.write:([B)V` @kind virtual;
  #L166016.  return @kind void;
}
procedure `byte` `-deprecated_getByte`(`okio.ByteString` v0 @kind this, `int` v1 ) @signature `Lokio/ByteString;.-deprecated_getByte:(I)B` @AccessFlag PUBLIC_FINAL {
    temp;

  #L165100.  call temp:= `getByte`(v0, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L165106.  v1:= temp;
  #L165108.  return v1;
}
procedure `int` `-deprecated_size`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.-deprecated_size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1651bc.  call temp:= `size`(v1) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1651c2.  v0:= temp;
  #L1651c4.  return v0;
}
procedure `java.nio.ByteBuffer` `asByteBuffer`(`okio.ByteString` v2 @kind this) @signature `Lokio/ByteString;.asByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L165910.  v0:= v2.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L165914.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L16591a.  v0:= temp @kind object;
  #L16591c.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L165922.  v0:= temp @kind object;
  #L165924.  v1:= "ByteBuffer.wrap(data).asReadOnlyBuffer()" @kind object;
  #L165928.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16592e.  return v0 @kind object;
}
procedure `java.lang.String` `base64`(`okio.ByteString` v3 @kind this) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L165574.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L16557a.  v0:= temp @kind object;
  #L16557c.  v1:= 0I;
  #L16557e.  v2:= 1I;
  #L165580.  call temp:= `encodeBase64$default`(v0, v1, v2, v1) @signature `Lokio/-Base64;.encodeBase64$default:([B[BILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L165586.  v0:= temp @kind object;
  #L165588.  return v0 @kind object;
}
procedure `java.lang.String` `base64Url`(`okio.ByteString` v2 @kind this) @signature `Lokio/ByteString;.base64Url:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16559c.  call temp:= `getData$okio`(v2) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1655a2.  v0:= temp @kind object;
  #L1655a4.  call temp:= `getBASE64_URL_SAFE`() @signature `Lokio/-Base64;.getBASE64_URL_SAFE:()[B` @kind static;
  #L1655aa.  v1:= temp @kind object;
  #L1655ac.  call temp:= `encodeBase64`(v0, v1) @signature `Lokio/-Base64;.encodeBase64:([B[B)Ljava/lang/String;` @kind static;
  #L1655b2.  v0:= temp @kind object;
  #L1655b4.  return v0 @kind object;
}
procedure `int` `compareTo`(`okio.ByteString` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lokio/ByteString;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1651d8.  v1:= (`okio.ByteString`) v1 @kind object;
  #L1651dc.  call temp:= `compareTo`(v0, v1) @signature `Lokio/ByteString;.compareTo:(Lokio/ByteString;)I` @kind virtual;
  #L1651e2.  v1:= temp;
  #L1651e4.  return v1;
}
procedure `int` `compareTo`(`okio.ByteString` v9 @kind this, `okio.ByteString` v10 @kind object) @signature `Lokio/ByteString;.compareTo:(Lokio/ByteString;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1651f8.  v0:= "other" @kind object;
  #L1651fc.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165202.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L165208.  v0:= temp;
  #L16520a.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L165210.  v1:= temp;
  #L165212.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L165218.  v2:= temp;
  #L16521a.  v3:= 0I;
  #L16521c.  v4:= 0I;
  #L16521e.  v5:= -1I;
  #L165220.  v6:= 1I;
  #L165222.  if v4 >= v2 then goto L16524e;
  #L165226.  call temp:= `getByte`(v9, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L16522c.  v7:= temp;
  #L16522e.  v7:= v7 ^& 255;
  #L165232.  call temp:= `getByte`(v10, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L165238.  v8:= temp;
  #L16523a.  v8:= v8 ^& 255;
  #L16523e.  if v7 != v8 then goto L165248;
  #L165242.  v4:= v4 + 1;
  #L165246.  goto L16521e;
  #L165248.  if v7 >= v8 then goto L16525c;
  #L16524c.  goto L165258;
  #L16524e.  if v0 != v1 then goto L165254;
  #L165252.  goto L16525e;
  #L165254.  if v0 >= v1 then goto L16525c;
  #L165258.  v3:= -1I;
  #L16525a.  goto L16525e;
  #L16525c.  v3:= 1I;
  #L16525e.  return v3;
}
procedure `okio.ByteString` `digest$okio`(`okio.ByteString` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokio/ByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L165980.  v0:= "algorithm" @kind object;
  #L165984.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16598a.  v0:= new `okio.ByteString`;
  #L16598e.  call temp:= `getInstance`(v3) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L165994.  v3:= temp @kind object;
  #L165996.  v1:= v2.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L16599a.  call temp:= `digest`(v3, v1) @signature `Ljava/security/MessageDigest;.digest:([B)[B` @kind virtual;
  #L1659a0.  v3:= temp @kind object;
  #L1659a2.  v1:= "MessageDigest.getInstance(algorithm).digest(data)" @kind object;
  #L1659a6.  call `checkNotNullExpressionValue`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1659ac.  call `<init>`(v0, v3) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1659b2.  return v0 @kind object;
}
procedure `boolean` `endsWith`(`okio.ByteString` v3 @kind this, `okio.ByteString` v4 @kind object) @signature `Lokio/ByteString;.endsWith:(Lokio/ByteString;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L164f84.  v0:= "suffix" @kind object;
  #L164f88.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L164f8e.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L164f94.  v0:= temp;
  #L164f96.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L164f9c.  v1:= temp;
  #L164f9e.  v0:= v0 - v1 @kind int;
  #L164fa0.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L164fa6.  v1:= temp;
  #L164fa8.  v2:= 0I;
  #L164faa.  call temp:= `rangeEquals`(v3, v0, v4, v2, v1) @signature `Lokio/ByteString;.rangeEquals:(ILokio/ByteString;II)Z` @kind virtual;
  #L164fb0.  v4:= temp;
  #L164fb2.  return v4;
}
procedure `boolean` `endsWith`(`okio.ByteString` v3 @kind this, `byte`[] v4 @kind object) @signature `Lokio/ByteString;.endsWith:([B)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L164f50.  v0:= "suffix" @kind object;
  #L164f54.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L164f5a.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L164f60.  v0:= temp;
  #L164f62.  v1:= length @variable v4;
  #L164f64.  v0:= v0 - v1 @kind int;
  #L164f66.  v1:= length @variable v4;
  #L164f68.  v2:= 0I;
  #L164f6a.  call temp:= `rangeEquals`(v3, v0, v4, v2, v1) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L164f70.  v4:= temp;
  #L164f72.  return v4;
}
procedure `boolean` `equals`(`okio.ByteString` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L164fc4.  v0:= 1I;
  #L164fc6.  v1:= 0I;
  #L164fc8.  if v5 != v4 then goto L164fce;
  #L164fcc.  goto L165012;
  #L164fce.  v2:= instanceof @variable v5 @type ^`okio.ByteString` @kind boolean;
  #L164fd2.  if v2 == 0 then goto L165010;
  #L164fd6.  v5:= (`okio.ByteString`) v5 @kind object;
  #L164fda.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L164fe0.  v2:= temp;
  #L164fe2.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L164fe8.  v3:= temp @kind object;
  #L164fea.  v3:= length @variable v3;
  #L164fec.  if v2 != v3 then goto L165010;
  #L164ff0.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L164ff6.  v2:= temp @kind object;
  #L164ff8.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L164ffe.  v3:= temp @kind object;
  #L165000.  v3:= length @variable v3;
  #L165002.  call temp:= `rangeEquals`(v5, v1, v2, v1, v3) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L165008.  v5:= temp;
  #L16500a.  if v5 == 0 then goto L165010;
  #L16500e.  goto L165012;
  #L165010.  v0:= 0I;
  #L165012.  return v0;
}
procedure `byte` `getByte`(`okio.ByteString` v0 @kind this, `int` v1 ) @signature `Lokio/ByteString;.getByte:(I)B` @AccessFlag PUBLIC_FINAL {
    temp;

  #L16511c.  call temp:= `internalGet$okio`(v0, v1) @signature `Lokio/ByteString;.internalGet$okio:(I)B` @kind virtual;
  #L165122.  v1:= temp;
  #L165124.  return v1;
}
procedure `byte`[] `getData$okio`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.getData$okio:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L165158.  v0:= v1.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L16515c.  return v0 @kind object;
}
procedure `int` `getHashCode$okio`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.getHashCode$okio:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L165270.  v0:= v1.`okio.ByteString.a` @type ^`int`;
  #L165274.  return v0;
}
procedure `int` `getSize$okio`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.getSize$okio:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165288.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L16528e.  v0:= temp @kind object;
  #L165290.  v0:= length @variable v0;
  #L165292.  return v0;
}
procedure `java.lang.String` `getUtf8$okio`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.getUtf8$okio:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1655c8.  v0:= v1.`okio.ByteString.b` @type ^`java.lang.String` @kind object;
  #L1655cc.  return v0 @kind object;
}
procedure `int` `hashCode`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1652a4.  call temp:= `getHashCode$okio`(v1) @signature `Lokio/ByteString;.getHashCode$okio:()I` @kind virtual;
  #L1652aa.  v0:= temp;
  #L1652ac.  if v0 == 0 then goto L1652b2;
  #L1652b0.  goto L1652c8;
  #L1652b2.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1652b8.  v0:= temp @kind object;
  #L1652ba.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L1652c0.  v0:= temp;
  #L1652c2.  call `setHashCode$okio`(v1, v0) @signature `Lokio/ByteString;.setHashCode$okio:(I)V` @kind virtual;
  #L1652c8.  return v0;
}
procedure `java.lang.String` `hex`(`okio.ByteString` v9 @kind this) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1655e0.  call temp:= `getData$okio`(v9) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1655e6.  v0:= temp @kind object;
  #L1655e8.  v0:= length @variable v0;
  #L1655ea.  v0:= v0 * 2;
  #L1655ee.  v0:= new `char`[v0];
  #L1655f2.  call temp:= `getData$okio`(v9) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1655f8.  v1:= temp @kind object;
  #L1655fa.  v2:= length @variable v1;
  #L1655fc.  v3:= 0I;
  #L1655fe.  v4:= 0I;
  #L165600.  if v3 >= v2 then goto L165642;
  #L165604.  v5:= v1[v3] @kind byte;
  #L165608.  v6:= v4 + 1;
  #L16560c.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L165612.  v7:= temp @kind object;
  #L165614.  v8:= v5 ^> 4;
  #L165618.  v8:= v8 ^& 15;
  #L16561c.  v7:= v7[v8] @kind char;
  #L165620.  v0[v4]:= v7 @kind char;
  #L165624.  v4:= v6 + 1;
  #L165628.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L16562e.  v7:= temp @kind object;
  #L165630.  v5:= v5 ^& 15;
  #L165634.  v5:= v7[v5] @kind char;
  #L165638.  v0[v6]:= v5 @kind char;
  #L16563c.  v3:= v3 + 1;
  #L165640.  goto L165600;
  #L165642.  v1:= new `java.lang.String`;
  #L165646.  call `<init>`(v1, v0) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L16564c.  return v1 @kind object;
}
procedure `okio.ByteString` `hmac$okio`(`okio.ByteString` v2 @kind this, `java.lang.String` v3 @kind object, `okio.ByteString` v4 @kind object) @signature `Lokio/ByteString;.hmac$okio:(Ljava/lang/String;Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L165a04.  v0:= "algorithm" @kind object;
  #L165a08.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165a0e.  v0:= "key" @kind object;
  #L165a12.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165a18.  call temp:= `getInstance`(v3) @signature `Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;` @kind static;
  #L165a1e.  v0:= temp @kind object;
  #L165a20.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L165a24.  call temp:= `toByteArray`(v4) @signature `Lokio/ByteString;.toByteArray:()[B` @kind virtual;
  #L165a2a.  v4:= temp @kind object;
  #L165a2c.  call `<init>`(v1, v4, v3) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L165a32.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L165a38.  v3:= new `okio.ByteString`;
  #L165a3c.  v4:= v2.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L165a40.  call temp:= `doFinal`(v0, v4) @signature `Ljavax/crypto/Mac;.doFinal:([B)[B` @kind virtual;
  #L165a46.  v4:= temp @kind object;
  #L165a48.  v0:= "mac.doFinal(data)" @kind object;
  #L165a4c.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165a52.  call `<init>`(v3, v4) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L165a58.  return v3 @kind object;
  #L165a5a.  v3:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L165a5c.  v4:= new `java.lang.IllegalArgumentException`;
  #L165a60.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L165a66.  throw v4;
  catch `java.security.InvalidKeyException` @[L165a18..L165a58] goto L165a5a;
}
procedure `okio.ByteString` `hmacSha1`(`okio.ByteString` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokio/ByteString;.hmacSha1:(Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165a88.  v0:= "key" @kind object;
  #L165a8c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165a92.  v0:= "HmacSHA1" @kind object;
  #L165a96.  call temp:= `hmac$okio`(v1, v0, v2) @signature `Lokio/ByteString;.hmac$okio:(Ljava/lang/String;Lokio/ByteString;)Lokio/ByteString;` @kind virtual;
  #L165a9c.  v2:= temp @kind object;
  #L165a9e.  return v2 @kind object;
}
procedure `okio.ByteString` `hmacSha256`(`okio.ByteString` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokio/ByteString;.hmacSha256:(Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165ab0.  v0:= "key" @kind object;
  #L165ab4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165aba.  v0:= "HmacSHA256" @kind object;
  #L165abe.  call temp:= `hmac$okio`(v1, v0, v2) @signature `Lokio/ByteString;.hmac$okio:(Ljava/lang/String;Lokio/ByteString;)Lokio/ByteString;` @kind virtual;
  #L165ac4.  v2:= temp @kind object;
  #L165ac6.  return v2 @kind object;
}
procedure `okio.ByteString` `hmacSha512`(`okio.ByteString` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokio/ByteString;.hmacSha512:(Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165ad8.  v0:= "key" @kind object;
  #L165adc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165ae2.  v0:= "HmacSHA512" @kind object;
  #L165ae6.  call temp:= `hmac$okio`(v1, v0, v2) @signature `Lokio/ByteString;.hmac$okio:(Ljava/lang/String;Lokio/ByteString;)Lokio/ByteString;` @kind virtual;
  #L165aec.  v2:= temp @kind object;
  #L165aee.  return v2 @kind object;
}
procedure `int` `indexOf`(`okio.ByteString` v3 @kind this, `okio.ByteString` v4 @kind object) @signature `Lokio/ByteString;.indexOf:(Lokio/ByteString;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1653c8.  v0:= 0I;
  #L1653ca.  v1:= 2I;
  #L1653cc.  v2:= 0I;
  #L1653ce.  call temp:= `indexOf$default`(v3, v4, v0, v1, v2) @signature `Lokio/ByteString;.indexOf$default:(Lokio/ByteString;Lokio/ByteString;IILjava/lang/Object;)I` @kind static;
  #L1653d4.  v4:= temp;
  #L1653d6.  return v4;
}
procedure `int` `indexOf`(`okio.ByteString` v1 @kind this, `okio.ByteString` v2 @kind object, `int` v3 ) @signature `Lokio/ByteString;.indexOf:(Lokio/ByteString;I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1653e8.  v0:= "other" @kind object;
  #L1653ec.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1653f2.  call temp:= `internalArray$okio`(v2) @signature `Lokio/ByteString;.internalArray$okio:()[B` @kind virtual;
  #L1653f8.  v2:= temp @kind object;
  #L1653fa.  call temp:= `indexOf`(v1, v2, v3) @signature `Lokio/ByteString;.indexOf:([BI)I` @kind virtual;
  #L165400.  v2:= temp;
  #L165402.  return v2;
}
procedure `int` `indexOf`(`okio.ByteString` v3 @kind this, `byte`[] v4 @kind object) @signature `Lokio/ByteString;.indexOf:([B)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L16534c.  v0:= 0I;
  #L16534e.  v1:= 2I;
  #L165350.  v2:= 0I;
  #L165352.  call temp:= `indexOf$default`(v3, v4, v0, v1, v2) @signature `Lokio/ByteString;.indexOf$default:(Lokio/ByteString;[BIILjava/lang/Object;)I` @kind static;
  #L165358.  v4:= temp;
  #L16535a.  return v4;
}
procedure `int` `indexOf`(`okio.ByteString` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lokio/ByteString;.indexOf:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16536c.  v0:= "other" @kind object;
  #L165370.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165376.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L16537c.  v0:= temp @kind object;
  #L16537e.  v0:= length @variable v0;
  #L165380.  v1:= length @variable v5;
  #L165382.  v0:= v0 - v1 @kind int;
  #L165384.  v1:= 0I;
  #L165386.  call temp:= `max`(v6, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L16538c.  v6:= temp;
  #L16538e.  if v6 > v0 then goto L1653b4;
  #L165392.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165398.  v2:= temp @kind object;
  #L16539a.  v3:= length @variable v5;
  #L16539c.  call temp:= `arrayRangeEquals`(v2, v6, v5, v1, v3) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L1653a2.  v2:= temp;
  #L1653a4.  if v2 == 0 then goto L1653aa;
  #L1653a8.  goto L1653b6;
  #L1653aa.  if v6 == v0 then goto L1653b4;
  #L1653ae.  v6:= v6 + 1;
  #L1653b2.  goto L165392;
  #L1653b4.  v6:= -1I;
  #L1653b6.  return v6;
}
procedure `byte`[] `internalArray$okio`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.internalArray$okio:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165170.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165176.  v0:= temp @kind object;
  #L165178.  return v0 @kind object;
}
procedure `byte` `internalGet$okio`(`okio.ByteString` v1 @kind this, `int` v2 ) @signature `Lokio/ByteString;.internalGet$okio:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165138.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L16513e.  v0:= temp @kind object;
  #L165140.  v2:= v0[v2] @kind byte;
  #L165144.  return v2;
}
procedure `int` `lastIndexOf`(`okio.ByteString` v3 @kind this, `okio.ByteString` v4 @kind object) @signature `Lokio/ByteString;.lastIndexOf:(Lokio/ByteString;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L16550c.  v0:= 0I;
  #L16550e.  v1:= 2I;
  #L165510.  v2:= 0I;
  #L165512.  call temp:= `lastIndexOf$default`(v3, v4, v0, v1, v2) @signature `Lokio/ByteString;.lastIndexOf$default:(Lokio/ByteString;Lokio/ByteString;IILjava/lang/Object;)I` @kind static;
  #L165518.  v4:= temp;
  #L16551a.  return v4;
}
procedure `int` `lastIndexOf`(`okio.ByteString` v1 @kind this, `okio.ByteString` v2 @kind object, `int` v3 ) @signature `Lokio/ByteString;.lastIndexOf:(Lokio/ByteString;I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16552c.  v0:= "other" @kind object;
  #L165530.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165536.  call temp:= `internalArray$okio`(v2) @signature `Lokio/ByteString;.internalArray$okio:()[B` @kind virtual;
  #L16553c.  v2:= temp @kind object;
  #L16553e.  call temp:= `lastIndexOf`(v1, v2, v3) @signature `Lokio/ByteString;.lastIndexOf:([BI)I` @kind virtual;
  #L165544.  v2:= temp;
  #L165546.  return v2;
}
procedure `int` `lastIndexOf`(`okio.ByteString` v3 @kind this, `byte`[] v4 @kind object) @signature `Lokio/ByteString;.lastIndexOf:([B)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L165494.  v0:= 0I;
  #L165496.  v1:= 2I;
  #L165498.  v2:= 0I;
  #L16549a.  call temp:= `lastIndexOf$default`(v3, v4, v0, v1, v2) @signature `Lokio/ByteString;.lastIndexOf$default:(Lokio/ByteString;[BIILjava/lang/Object;)I` @kind static;
  #L1654a0.  v4:= temp;
  #L1654a2.  return v4;
}
procedure `int` `lastIndexOf`(`okio.ByteString` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lokio/ByteString;.lastIndexOf:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1654b4.  v0:= "other" @kind object;
  #L1654b8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1654be.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1654c4.  v0:= temp @kind object;
  #L1654c6.  v0:= length @variable v0;
  #L1654c8.  v1:= length @variable v4;
  #L1654ca.  v0:= v0 - v1 @kind int;
  #L1654cc.  call temp:= `min`(v5, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1654d2.  v5:= temp;
  #L1654d4.  if v5 < 0 then goto L1654f8;
  #L1654d8.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1654de.  v0:= temp @kind object;
  #L1654e0.  v1:= 0I;
  #L1654e2.  v2:= length @variable v4;
  #L1654e4.  call temp:= `arrayRangeEquals`(v0, v5, v4, v1, v2) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L1654ea.  v0:= temp;
  #L1654ec.  if v0 == 0 then goto L1654f2;
  #L1654f0.  goto L1654fa;
  #L1654f2.  v5:= v5 + -1;
  #L1654f6.  goto L1654d4;
  #L1654f8.  v5:= -1I;
  #L1654fa.  return v5;
}
procedure `okio.ByteString` `md5`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.md5:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165b00.  v0:= "MD5" @kind object;
  #L165b04.  call temp:= `digest$okio`(v1, v0) @signature `Lokio/ByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L165b0a.  v0:= temp @kind object;
  #L165b0c.  return v0 @kind object;
}
procedure `boolean` `rangeEquals`(`okio.ByteString` v1 @kind this, `int` v2 , `okio.ByteString` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/ByteString;.rangeEquals:(ILokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16507c.  v0:= "other" @kind object;
  #L165080.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165086.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L16508c.  v0:= temp @kind object;
  #L16508e.  call temp:= `rangeEquals`(v3, v4, v0, v2, v5) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L165094.  v2:= temp;
  #L165096.  return v2;
}
procedure `boolean` `rangeEquals`(`okio.ByteString` v1 @kind this, `int` v2 , `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165024.  v0:= "other" @kind object;
  #L165028.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16502e.  if v2 < 0 then goto L165066;
  #L165032.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165038.  v0:= temp @kind object;
  #L16503a.  v0:= length @variable v0;
  #L16503c.  v0:= v0 - v5 @kind int;
  #L16503e.  if v2 > v0 then goto L165066;
  #L165042.  if v4 < 0 then goto L165066;
  #L165046.  v0:= length @variable v3;
  #L165048.  v0:= v0 - v5 @kind int;
  #L16504a.  if v4 > v0 then goto L165066;
  #L16504e.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165054.  v0:= temp @kind object;
  #L165056.  call temp:= `arrayRangeEquals`(v0, v2, v3, v4, v5) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L16505c.  v2:= temp;
  #L16505e.  if v2 == 0 then goto L165066;
  #L165062.  v2:= 1I;
  #L165064.  goto L165068;
  #L165066.  v2:= 0I;
  #L165068.  return v2;
}
procedure `void` `setHashCode$okio`(`okio.ByteString` v0 @kind this, `int` v1 ) @signature `Lokio/ByteString;.setHashCode$okio:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L165f84.  v0.`okio.ByteString.a` @type ^`int` := v1;
  #L165f88.  return @kind void;
}
procedure `void` `setUtf8$okio`(`okio.ByteString` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokio/ByteString;.setUtf8$okio:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L165f9c.  v0.`okio.ByteString.b` @type ^`java.lang.String` := v1 @kind object;
  #L165fa0.  return @kind void;
}
procedure `okio.ByteString` `sha1`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.sha1:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165ba0.  v0:= "SHA-1" @kind object;
  #L165ba4.  call temp:= `digest$okio`(v1, v0) @signature `Lokio/ByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L165baa.  v0:= temp @kind object;
  #L165bac.  return v0 @kind object;
}
procedure `okio.ByteString` `sha256`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.sha256:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165bc0.  v0:= "SHA-256" @kind object;
  #L165bc4.  call temp:= `digest$okio`(v1, v0) @signature `Lokio/ByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L165bca.  v0:= temp @kind object;
  #L165bcc.  return v0 @kind object;
}
procedure `okio.ByteString` `sha512`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.sha512:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165be0.  v0:= "SHA-512" @kind object;
  #L165be4.  call temp:= `digest$okio`(v1, v0) @signature `Lokio/ByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L165bea.  v0:= temp @kind object;
  #L165bec.  return v0 @kind object;
}
procedure `int` `size`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L165558.  call temp:= `getSize$okio`(v1) @signature `Lokio/ByteString;.getSize$okio:()I` @kind virtual;
  #L16555e.  v0:= temp;
  #L165560.  return v0;
}
procedure `boolean` `startsWith`(`okio.ByteString` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/ByteString;.startsWith:(Lokio/ByteString;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1650d0.  v0:= "prefix" @kind object;
  #L1650d4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1650da.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1650e0.  v0:= temp;
  #L1650e2.  v1:= 0I;
  #L1650e4.  call temp:= `rangeEquals`(v2, v1, v3, v1, v0) @signature `Lokio/ByteString;.rangeEquals:(ILokio/ByteString;II)Z` @kind virtual;
  #L1650ea.  v3:= temp;
  #L1650ec.  return v3;
}
procedure `boolean` `startsWith`(`okio.ByteString` v2 @kind this, `byte`[] v3 @kind object) @signature `Lokio/ByteString;.startsWith:([B)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1650a8.  v0:= "prefix" @kind object;
  #L1650ac.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1650b2.  v0:= length @variable v3;
  #L1650b4.  v1:= 0I;
  #L1650b6.  call temp:= `rangeEquals`(v2, v1, v3, v1, v0) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L1650bc.  v3:= temp;
  #L1650be.  return v3;
}
procedure `java.lang.String` `string`(`okio.ByteString` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/ByteString;.string:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L165660.  v0:= "charset" @kind object;
  #L165664.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16566a.  v0:= v2.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L16566e.  v1:= new `java.lang.String`;
  #L165672.  call `<init>`(v1, v0, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L165678.  return v1 @kind object;
}
procedure `okio.ByteString` `substring`(`okio.ByteString` v3 @kind this) @signature `Lokio/ByteString;.substring:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L165c48.  v0:= 0I;
  #L165c4a.  v1:= 3I;
  #L165c4c.  v2:= 0I;
  #L165c4e.  call temp:= `substring$default`(v3, v0, v0, v1, v2) @signature `Lokio/ByteString;.substring$default:(Lokio/ByteString;IIILjava/lang/Object;)Lokio/ByteString;` @kind static;
  #L165c54.  v0:= temp @kind object;
  #L165c56.  return v0 @kind object;
}
procedure `okio.ByteString` `substring`(`okio.ByteString` v3 @kind this, `int` v4 ) @signature `Lokio/ByteString;.substring:(I)Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L165c68.  v0:= 0I;
  #L165c6a.  v1:= 2I;
  #L165c6c.  v2:= 0I;
  #L165c6e.  call temp:= `substring$default`(v3, v4, v0, v1, v2) @signature `Lokio/ByteString;.substring$default:(Lokio/ByteString;IIILjava/lang/Object;)Lokio/ByteString;` @kind static;
  #L165c74.  v4:= temp @kind object;
  #L165c76.  return v4 @kind object;
}
procedure `okio.ByteString` `substring`(`okio.ByteString` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lokio/ByteString;.substring:(II)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L165c88.  v0:= 1I;
  #L165c8a.  v1:= 0I;
  #L165c8c.  if v4 < 0 then goto L165c94;
  #L165c90.  v2:= 1I;
  #L165c92.  goto L165c96;
  #L165c94.  v2:= 0I;
  #L165c96.  if v2 == 0 then goto L165d56;
  #L165c9a.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165ca0.  v2:= temp @kind object;
  #L165ca2.  v2:= length @variable v2;
  #L165ca4.  if v5 > v2 then goto L165cac;
  #L165ca8.  v2:= 1I;
  #L165caa.  goto L165cae;
  #L165cac.  v2:= 0I;
  #L165cae.  if v2 == 0 then goto L165d0c;
  #L165cb2.  v2:= v5 - v4 @kind int;
  #L165cb6.  if v2 < 0 then goto L165cbc;
  #L165cba.  goto L165cbe;
  #L165cbc.  v0:= 0I;
  #L165cbe.  if v0 == 0 then goto L165cf4;
  #L165cc2.  if v4 != 0 then goto L165cd8;
  #L165cc6.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165ccc.  v0:= temp @kind object;
  #L165cce.  v0:= length @variable v0;
  #L165cd0.  if v5 != v0 then goto L165cd8;
  #L165cd4.  v0:= v3 @kind object;
  #L165cd6.  goto L165cf2;
  #L165cd8.  v0:= new `okio.ByteString`;
  #L165cdc.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165ce2.  v1:= temp @kind object;
  #L165ce4.  call temp:= `copyOfRange`(v1, v4, v5) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([BII)[B` @kind static;
  #L165cea.  v4:= temp @kind object;
  #L165cec.  call `<init>`(v0, v4) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L165cf2.  return v0 @kind object;
  #L165cf4.  v4:= new `java.lang.IllegalArgumentException`;
  #L165cf8.  v5:= "endIndex < beginIndex" @kind object;
  #L165cfc.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L165d02.  v5:= temp @kind object;
  #L165d04.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L165d0a.  throw v4;
  #L165d0c.  v4:= new `java.lang.StringBuilder`;
  #L165d10.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L165d16.  v5:= "endIndex > length(" @kind object;
  #L165d1a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165d20.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165d26.  v5:= temp @kind object;
  #L165d28.  v5:= length @variable v5;
  #L165d2a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L165d30.  v5:= 41I;
  #L165d34.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L165d3a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165d40.  v4:= temp @kind object;
  #L165d42.  v5:= new `java.lang.IllegalArgumentException`;
  #L165d46.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L165d4c.  v4:= temp @kind object;
  #L165d4e.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L165d54.  throw v5;
  #L165d56.  v4:= new `java.lang.IllegalArgumentException`;
  #L165d5a.  v5:= "beginIndex < 0" @kind object;
  #L165d5e.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L165d64.  v5:= temp @kind object;
  #L165d66.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L165d6c.  throw v4;
}
procedure `okio.ByteString` `toAsciiLowercase`(`okio.ByteString` v6 @kind this) @signature `Lokio/ByteString;.toAsciiLowercase:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L165d80.  v0:= 0I;
  #L165d82.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165d88.  v1:= temp @kind object;
  #L165d8a.  v1:= length @variable v1;
  #L165d8c.  if v0 >= v1 then goto L165e12;
  #L165d90.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165d96.  v1:= temp @kind object;
  #L165d98.  v1:= v1[v0] @kind byte;
  #L165d9c.  v2:= 65I;
  #L165da0.  v2:= (`byte`) v2 @kind i2b;
  #L165da2.  if v1 < v2 then goto L165e0c;
  #L165da6.  v3:= 90I;
  #L165daa.  v3:= (`byte`) v3 @kind i2b;
  #L165dac.  if v1 <= v3 then goto L165db2;
  #L165db0.  goto L165e0c;
  #L165db2.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165db8.  v4:= temp @kind object;
  #L165dba.  v5:= length @variable v4;
  #L165dbc.  call temp:= `copyOf`(v4, v5) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L165dc2.  v4:= temp @kind object;
  #L165dc4.  v5:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L165dc8.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165dce.  v5:= v0 + 1;
  #L165dd2.  v1:= v1 + 32;
  #L165dd6.  v1:= (`byte`) v1 @kind i2b;
  #L165dd8.  v4[v0]:= v1 @kind byte;
  #L165ddc.  v0:= length @variable v4;
  #L165dde.  if v5 >= v0 then goto L165e00;
  #L165de2.  v0:= v4[v5] @kind byte;
  #L165de6.  if v0 < v2 then goto L165dfa;
  #L165dea.  if v0 <= v3 then goto L165df0;
  #L165dee.  goto L165dfa;
  #L165df0.  v0:= v0 + 32;
  #L165df4.  v0:= (`byte`) v0 @kind i2b;
  #L165df6.  v4[v5]:= v0 @kind byte;
  #L165dfa.  v5:= v5 + 1;
  #L165dfe.  goto L165ddc;
  #L165e00.  v0:= new `okio.ByteString`;
  #L165e04.  call `<init>`(v0, v4) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L165e0a.  goto L165e14;
  #L165e0c.  v0:= v0 + 1;
  #L165e10.  goto L165d82;
  #L165e12.  v0:= v6 @kind object;
  #L165e14.  return v0 @kind object;
}
procedure `okio.ByteString` `toAsciiUppercase`(`okio.ByteString` v6 @kind this) @signature `Lokio/ByteString;.toAsciiUppercase:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L165e28.  v0:= 0I;
  #L165e2a.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165e30.  v1:= temp @kind object;
  #L165e32.  v1:= length @variable v1;
  #L165e34.  if v0 >= v1 then goto L165eba;
  #L165e38.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165e3e.  v1:= temp @kind object;
  #L165e40.  v1:= v1[v0] @kind byte;
  #L165e44.  v2:= 97I;
  #L165e48.  v2:= (`byte`) v2 @kind i2b;
  #L165e4a.  if v1 < v2 then goto L165eb4;
  #L165e4e.  v3:= 122I;
  #L165e52.  v3:= (`byte`) v3 @kind i2b;
  #L165e54.  if v1 <= v3 then goto L165e5a;
  #L165e58.  goto L165eb4;
  #L165e5a.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165e60.  v4:= temp @kind object;
  #L165e62.  v5:= length @variable v4;
  #L165e64.  call temp:= `copyOf`(v4, v5) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L165e6a.  v4:= temp @kind object;
  #L165e6c.  v5:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L165e70.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165e76.  v5:= v0 + 1;
  #L165e7a.  v1:= v1 + -32;
  #L165e7e.  v1:= (`byte`) v1 @kind i2b;
  #L165e80.  v4[v0]:= v1 @kind byte;
  #L165e84.  v0:= length @variable v4;
  #L165e86.  if v5 >= v0 then goto L165ea8;
  #L165e8a.  v0:= v4[v5] @kind byte;
  #L165e8e.  if v0 < v2 then goto L165ea2;
  #L165e92.  if v0 <= v3 then goto L165e98;
  #L165e96.  goto L165ea2;
  #L165e98.  v0:= v0 + -32;
  #L165e9c.  v0:= (`byte`) v0 @kind i2b;
  #L165e9e.  v4[v5]:= v0 @kind byte;
  #L165ea2.  v5:= v5 + 1;
  #L165ea6.  goto L165e84;
  #L165ea8.  v0:= new `okio.ByteString`;
  #L165eac.  call `<init>`(v0, v4) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L165eb2.  goto L165ebc;
  #L165eb4.  v0:= v0 + 1;
  #L165eb8.  goto L165e2a;
  #L165eba.  v0:= v6 @kind object;
  #L165ebc.  return v0 @kind object;
}
procedure `byte`[] `toByteArray`(`okio.ByteString` v2 @kind this) @signature `Lokio/ByteString;.toByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16518c.  call temp:= `getData$okio`(v2) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165192.  v0:= temp @kind object;
  #L165194.  v1:= length @variable v0;
  #L165196.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L16519c.  v0:= temp @kind object;
  #L16519e.  v1:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L1651a2.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1651a8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.ByteString` v20 @kind this) @signature `Lokio/ByteString;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L16568c.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165692.  v0:= temp @kind object;
  #L165694.  v0:= length @variable v0;
  #L165696.  v1:= 1I;
  #L165698.  v2:= 0I;
  #L16569a.  if v0 != 0 then goto L1656a2;
  #L16569e.  v0:= 1I;
  #L1656a0.  goto L1656a4;
  #L1656a2.  v0:= 0I;
  #L1656a4.  if v0 == 0 then goto L1656b0;
  #L1656a8.  v0:= "[size=0]" @kind object;
  #L1656ac.  goto L1658ca;
  #L1656b0.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1656b6.  v0:= temp @kind object;
  #L1656b8.  v3:= 64I;
  #L1656bc.  call temp:= `access$codePointIndexToCharIndex`(v0, v3) @signature `Lokio/internal/ByteStringKt;.access$codePointIndexToCharIndex:([BI)I` @kind static;
  #L1656c2.  v0:= temp;
  #L1656c4.  v4:= -1I;
  #L1656c6.  v5:= "…]" @kind object;
  #L1656ca.  v6:= 93I;
  #L1656ce.  v7:= "[size=" @kind object;
  #L1656d2.  if v0 != v4 then goto L1657f0;
  #L1656d6.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1656dc.  v0:= temp @kind object;
  #L1656de.  v0:= length @variable v0;
  #L1656e0.  if v0 > v3 then goto L165718;
  #L1656e4.  v0:= new `java.lang.StringBuilder`;
  #L1656e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1656ee.  v1:= "[hex=" @kind object;
  #L1656f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1656f8.  call temp:= `hex`(v20) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L1656fe.  v1:= temp @kind object;
  #L165700.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165706.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16570c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165712.  v0:= temp @kind object;
  #L165714.  goto L1658ca;
  #L165718.  v0:= new `java.lang.StringBuilder`;
  #L16571c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L165722.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165728.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L16572e.  v4:= temp @kind object;
  #L165730.  v4:= length @variable v4;
  #L165732.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L165738.  v4:= " hex=" @kind object;
  #L16573c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165742.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165748.  v4:= temp @kind object;
  #L16574a.  v4:= length @variable v4;
  #L16574c.  if v3 > v4 then goto L165752;
  #L165750.  goto L165754;
  #L165752.  v1:= 0I;
  #L165754.  if v1 == 0 then goto L1657a6;
  #L165758.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L16575e.  v1:= temp @kind object;
  #L165760.  v1:= length @variable v1;
  #L165762.  if v3 != v1 then goto L16576c;
  #L165766.  v1:= v20 @kind object;
  #L16576a.  goto L165786;
  #L16576c.  v1:= new `okio.ByteString`;
  #L165770.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165776.  v4:= temp @kind object;
  #L165778.  call temp:= `copyOfRange`(v4, v2, v3) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([BII)[B` @kind static;
  #L16577e.  v2:= temp @kind object;
  #L165780.  call `<init>`(v1, v2) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L165786.  call temp:= `hex`(v1) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L16578c.  v1:= temp @kind object;
  #L16578e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165794.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16579a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1657a0.  v0:= temp @kind object;
  #L1657a2.  goto L1658ca;
  #L1657a6.  v0:= new `java.lang.StringBuilder`;
  #L1657aa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1657b0.  v1:= "endIndex > length(" @kind object;
  #L1657b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1657ba.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1657c0.  v1:= temp @kind object;
  #L1657c2.  v1:= length @variable v1;
  #L1657c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1657ca.  v1:= 41I;
  #L1657ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1657d4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1657da.  v0:= temp @kind object;
  #L1657dc.  v1:= new `java.lang.IllegalArgumentException`;
  #L1657e0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1657e6.  v0:= temp @kind object;
  #L1657e8.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1657ee.  throw v1;
  #L1657f0.  call temp:= `utf8`(v20) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1657f6.  v1:= temp @kind object;
  #L1657f8.  v3:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1657fc.  call temp:= `requireNonNull`(v1, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L165802.  call temp:= `substring`(v1, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L165808.  v8:= temp @kind object;
  #L16580a.  v2:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L16580e.  call `checkNotNullExpressionValue`(v8, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165814.  v11:= 0I;
  #L165816.  v12:= 4I;
  #L165818.  v13:= 0I;
  #L16581a.  v9:= "\\" @kind object;
  #L16581e.  v10:= "\\\\" @kind object;
  #L165822.  call temp:= `replace$default`(v8, v9, v10, v11, v12, v13) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L165828.  v14:= temp @kind object;
  #L16582a.  v17:= 0I;
  #L16582e.  v18:= 4I;
  #L165832.  v19:= 0I;
  #L165836.  v15:= "\n" @kind object;
  #L16583a.  v16:= "\\n" @kind object;
  #L16583e.  call temp:= `replace$default`(v14, v15, v16, v17, v18, v19) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L165844.  v8:= temp @kind object;
  #L165846.  v9:= "\r" @kind object;
  #L16584a.  v10:= "\\r" @kind object;
  #L16584e.  call temp:= `replace$default`(v8, v9, v10, v11, v12, v13) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L165854.  v2:= temp @kind object;
  #L165856.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L16585c.  v1:= temp;
  #L16585e.  if v0 >= v1 then goto L1658a2;
  #L165862.  v0:= new `java.lang.StringBuilder`;
  #L165866.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16586c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165872.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L165878.  v1:= temp @kind object;
  #L16587a.  v1:= length @variable v1;
  #L16587c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L165882.  v1:= " text=" @kind object;
  #L165886.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16588c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165892.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165898.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16589e.  v0:= temp @kind object;
  #L1658a0.  goto L1658ca;
  #L1658a2.  v0:= new `java.lang.StringBuilder`;
  #L1658a6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1658ac.  v1:= "[text=" @kind object;
  #L1658b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1658b6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1658bc.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1658c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1658c8.  v0:= temp @kind object;
  #L1658ca.  return v0 @kind object;
}
procedure `java.lang.String` `utf8`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1658dc.  call temp:= `getUtf8$okio`(v1) @signature `Lokio/ByteString;.getUtf8$okio:()Ljava/lang/String;` @kind virtual;
  #L1658e2.  v0:= temp @kind object;
  #L1658e4.  if v0 != 0 then goto L1658fe;
  #L1658e8.  call temp:= `internalArray$okio`(v1) @signature `Lokio/ByteString;.internalArray$okio:()[B` @kind virtual;
  #L1658ee.  v0:= temp @kind object;
  #L1658f0.  call temp:= `toUtf8String`(v0) @signature `Lokio/-Platform;.toUtf8String:([B)Ljava/lang/String;` @kind static;
  #L1658f6.  v0:= temp @kind object;
  #L1658f8.  call `setUtf8$okio`(v1, v0) @signature `Lokio/ByteString;.setUtf8$okio:(Ljava/lang/String;)V` @kind virtual;
  #L1658fe.  return v0 @kind object;
}
procedure `void` `write`(`okio.ByteString` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lokio/ByteString;.write:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165fd8.  v0:= "out" @kind object;
  #L165fdc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165fe2.  v0:= v1.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L165fe6.  call `write`(v2, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L165fec.  return @kind void;
}
procedure `void` `write$okio`(`okio.ByteString` v1 @kind this, `okio.Buffer` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/ByteString;.write$okio:(Lokio/Buffer;II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165fb4.  v0:= "buffer" @kind object;
  #L165fb8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L165fbe.  call `commonWrite`(v1, v2, v3, v4) @signature `Lokio/internal/ByteStringKt;.commonWrite:(Lokio/ByteString;Lokio/Buffer;II)V` @kind static;
  #L165fc4.  return @kind void;
}
