record `okio.GzipSource` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Source` @kind interface {
  `byte` `okio.GzipSource.a` @AccessFlag PRIVATE;
  `okio.RealBufferedSource` `okio.GzipSource.b` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Inflater` `okio.GzipSource.c` @AccessFlag PRIVATE_FINAL;
  `okio.InflaterSource` `okio.GzipSource.d` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.CRC32` `okio.GzipSource.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.GzipSource` v2 @kind this, `okio.Source` v3 @kind object) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L166aa8.  v0:= "source" @kind object;
  #L166aac.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L166ab2.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L166ab8.  v0:= new `okio.RealBufferedSource`;
  #L166abc.  call `<init>`(v0, v3) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L166ac2.  v2.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` := v0 @kind object;
  #L166ac6.  v3:= new `java.util.zip.Inflater`;
  #L166aca.  v1:= 1I;
  #L166acc.  call `<init>`(v3, v1) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L166ad2.  v2.`okio.GzipSource.c` @type ^`java.util.zip.Inflater` := v3 @kind object;
  #L166ad6.  v1:= new `okio.InflaterSource`;
  #L166ada.  call `<init>`(v1, v0, v3) @signature `Lokio/InflaterSource;.<init>:(Lokio/BufferedSource;Ljava/util/zip/Inflater;)V` @kind direct;
  #L166ae0.  v2.`okio.GzipSource.d` @type ^`okio.InflaterSource` := v1 @kind object;
  #L166ae4.  v3:= new `java.util.zip.CRC32`;
  #L166ae8.  call `<init>`(v3) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L166aee.  v2.`okio.GzipSource.e` @type ^`java.util.zip.CRC32` := v3 @kind object;
  #L166af2.  return @kind void;
}
procedure `void` `a`(`okio.GzipSource` v4 @kind this, `java.lang.String` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lokio/GzipSource;.a:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L166b04.  if v7 != v6 then goto L166b0a;
  #L166b08.  return @kind void;
  #L166b0a.  v0:= new `java.io.IOException`;
  #L166b0e.  v1:= 3I;
  #L166b10.  v2:= new `java.lang.Object`[v1];
  #L166b14.  v3:= 0I;
  #L166b16.  v2[v3]:= v5 @kind object;
  #L166b1a.  v5:= 1I;
  #L166b1c.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L166b22.  v7:= temp @kind object;
  #L166b24.  v2[v5]:= v7 @kind object;
  #L166b28.  v5:= 2I;
  #L166b2a.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L166b30.  v6:= temp @kind object;
  #L166b32.  v2[v5]:= v6 @kind object;
  #L166b36.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L166b3c.  v5:= temp @kind object;
  #L166b3e.  v6:= "%s: actual 0x%08x != expected 0x%08x" @kind object;
  #L166b42.  call temp:= `format`(v6, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L166b48.  v5:= temp @kind object;
  #L166b4a.  v6:= "java.lang.String.format(this, *args)" @kind object;
  #L166b4e.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L166b54.  call `<init>`(v0, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L166b5a.  throw v0;
}
procedure `void` `b`(`okio.GzipSource` v17 @kind this) @signature `Lokio/GzipSource;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L166b88.  v6:= v17 @kind object;
  #L166b8c.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166b90.  v1:= 10L;
  #L166b94.  call `require`(v0, v1) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L166b9a.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166b9e.  v0:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L166ba2.  v1:= 3L;
  #L166ba6.  call temp:= `getByte`(v0, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L166bac.  v7:= temp;
  #L166bae.  v0:= v7 ^> 1;
  #L166bb2.  v8:= 1I;
  #L166bb4.  v0:= v0 ^& v8 @kind int;
  #L166bb6.  v9:= 0I;
  #L166bb8.  if v0 != v8 then goto L166bc0;
  #L166bbc.  v10:= 1I;
  #L166bbe.  goto L166bc2;
  #L166bc0.  v10:= 0I;
  #L166bc2.  if v10 == 0 then goto L166be0;
  #L166bc6.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166bca.  v1:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L166bce.  v2:= 0L;
  #L166bd2.  v4:= 10L;
  #L166bd6.  v0:= v17 @kind object;
  #L166bda.  call `d`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L166be0.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166be4.  call temp:= `readShort`(v0) @signature `Lokio/RealBufferedSource;.readShort:()S` @kind virtual;
  #L166bea.  v0:= temp;
  #L166bec.  v1:= 8075I;
  #L166bf0.  v2:= "ID1ID2" @kind object;
  #L166bf4.  call `a`(v6, v2, v1, v0) @signature `Lokio/GzipSource;.a:(Ljava/lang/String;II)V` @kind direct;
  #L166bfa.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166bfe.  v1:= 8L;
  #L166c02.  call `skip`(v0, v1) @signature `Lokio/RealBufferedSource;.skip:(J)V` @kind virtual;
  #L166c08.  v0:= v7 ^> 2;
  #L166c0c.  v0:= v0 ^& v8 @kind int;
  #L166c0e.  if v0 != v8 then goto L166c16;
  #L166c12.  v0:= 1I;
  #L166c14.  goto L166c18;
  #L166c16.  v0:= 0I;
  #L166c18.  if v0 == 0 then goto L166c8a;
  #L166c1c.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166c20.  v1:= 2L;
  #L166c24.  call `require`(v0, v1) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L166c2a.  if v10 == 0 then goto L166c48;
  #L166c2e.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166c32.  v1:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L166c36.  v2:= 0L;
  #L166c3a.  v4:= 2L;
  #L166c3e.  v0:= v17 @kind object;
  #L166c42.  call `d`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L166c48.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166c4c.  v0:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L166c50.  call temp:= `readShortLe`(v0) @signature `Lokio/Buffer;.readShortLe:()S` @kind virtual;
  #L166c56.  v0:= temp;
  #L166c58.  v11:= (`long`) v0 @kind i2l;
  #L166c5a.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166c5e.  call `require`(v0, v11) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L166c64.  if v10 == 0 then goto L166c80;
  #L166c68.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166c6c.  v1:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L166c70.  v2:= 0L;
  #L166c74.  v0:= v17 @kind object;
  #L166c78.  v4:= v11 @kind wide;
  #L166c7a.  call `d`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L166c80.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166c84.  call `skip`(v0, v11) @signature `Lokio/RealBufferedSource;.skip:(J)V` @kind virtual;
  #L166c8a.  v0:= v7 ^> 3;
  #L166c8e.  v0:= v0 ^& v8 @kind int;
  #L166c90.  if v0 != v8 then goto L166c98;
  #L166c94.  v0:= 1I;
  #L166c96.  goto L166c9a;
  #L166c98.  v0:= 0I;
  #L166c9a.  v11:= -1L;
  #L166c9e.  v13:= 1L;
  #L166ca2.  if v0 == 0 then goto L166cf4;
  #L166ca6.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166caa.  call temp:= `indexOf`(v0, v9) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L166cb0.  v15:= temp @kind wide;
  #L166cb2.  v0:= lcmp(v15, v11);
  #L166cb6.  if v0 == 0 then goto L166ce8;
  #L166cba.  if v10 == 0 then goto L166cd8;
  #L166cbe.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166cc2.  v1:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L166cc6.  v2:= 0L;
  #L166cca.  v4:= v15 + v13 @kind long;
  #L166cce.  v0:= v17 @kind object;
  #L166cd2.  call `d`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L166cd8.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166cdc.  v1:= v15 + v13 @kind long;
  #L166ce0.  call `skip`(v0, v1) @signature `Lokio/RealBufferedSource;.skip:(J)V` @kind virtual;
  #L166ce6.  goto L166cf4;
  #L166ce8.  v0:= new `java.io.EOFException`;
  #L166cec.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L166cf2.  throw v0;
  #L166cf4.  v0:= v7 ^> 4;
  #L166cf8.  v0:= v0 ^& v8 @kind int;
  #L166cfa.  if v0 != v8 then goto L166d00;
  #L166cfe.  goto L166d02;
  #L166d00.  v8:= 0I;
  #L166d02.  if v8 == 0 then goto L166d52;
  #L166d06.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166d0a.  call temp:= `indexOf`(v0, v9) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L166d10.  v7:= temp @kind wide;
  #L166d12.  v0:= lcmp(v7, v11);
  #L166d16.  if v0 == 0 then goto L166d46;
  #L166d1a.  if v10 == 0 then goto L166d38;
  #L166d1e.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166d22.  v1:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L166d26.  v2:= 0L;
  #L166d2a.  v4:= v7 + v13 @kind long;
  #L166d2e.  v0:= v17 @kind object;
  #L166d32.  call `d`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L166d38.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166d3c.  v7:= v7 + v13 @kind long;
  #L166d3e.  call `skip`(v0, v7) @signature `Lokio/RealBufferedSource;.skip:(J)V` @kind virtual;
  #L166d44.  goto L166d52;
  #L166d46.  v0:= new `java.io.EOFException`;
  #L166d4a.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L166d50.  throw v0;
  #L166d52.  if v10 == 0 then goto L166d86;
  #L166d56.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166d5a.  call temp:= `readShortLe`(v0) @signature `Lokio/RealBufferedSource;.readShortLe:()S` @kind virtual;
  #L166d60.  v0:= temp;
  #L166d62.  v1:= v6.`okio.GzipSource.e` @type ^`java.util.zip.CRC32` @kind object;
  #L166d66.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L166d6c.  v1:= temp @kind wide;
  #L166d6e.  v2:= (`int`) v1 @kind l2i;
  #L166d70.  v1:= (`short`) v2 @kind i2s;
  #L166d72.  v2:= "FHCRC" @kind object;
  #L166d76.  call `a`(v6, v2, v0, v1) @signature `Lokio/GzipSource;.a:(Ljava/lang/String;II)V` @kind direct;
  #L166d7c.  v0:= v6.`okio.GzipSource.e` @type ^`java.util.zip.CRC32` @kind object;
  #L166d80.  call `reset`(v0) @signature `Ljava/util/zip/CRC32;.reset:()V` @kind virtual;
  #L166d86.  return @kind void;
}
procedure `void` `c`(`okio.GzipSource` v3 @kind this) @signature `Lokio/GzipSource;.c:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L166d98.  v0:= v3.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166d9c.  call temp:= `readIntLe`(v0) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @kind virtual;
  #L166da2.  v0:= temp;
  #L166da4.  v1:= v3.`okio.GzipSource.e` @type ^`java.util.zip.CRC32` @kind object;
  #L166da8.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L166dae.  v1:= temp @kind wide;
  #L166db0.  v2:= (`int`) v1 @kind l2i;
  #L166db2.  v1:= "CRC" @kind object;
  #L166db6.  call `a`(v3, v1, v0, v2) @signature `Lokio/GzipSource;.a:(Ljava/lang/String;II)V` @kind direct;
  #L166dbc.  v0:= v3.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166dc0.  call temp:= `readIntLe`(v0) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @kind virtual;
  #L166dc6.  v0:= temp;
  #L166dc8.  v1:= v3.`okio.GzipSource.c` @type ^`java.util.zip.Inflater` @kind object;
  #L166dcc.  call temp:= `getBytesWritten`(v1) @signature `Ljava/util/zip/Inflater;.getBytesWritten:()J` @kind virtual;
  #L166dd2.  v1:= temp @kind wide;
  #L166dd4.  v2:= (`int`) v1 @kind l2i;
  #L166dd6.  v1:= "ISIZE" @kind object;
  #L166dda.  call `a`(v3, v1, v0, v2) @signature `Lokio/GzipSource;.a:(Ljava/lang/String;II)V` @kind direct;
  #L166de0.  return @kind void;
}
procedure `void` `d`(`okio.GzipSource` v5 @kind this, `okio.Buffer` v6 @kind object, `long` v7 , `long` v9 ) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L166df4.  v6:= v6.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L166df8.  call `checkNotNull`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L166dfe.  v0:= v6.`okio.Segment.limit` @type ^`int`;
  #L166e02.  v1:= v6.`okio.Segment.pos` @type ^`int`;
  #L166e06.  v2:= v0 - v1 @kind int;
  #L166e0a.  v2:= (`long`) v2 @kind i2l;
  #L166e0c.  v4:= lcmp(v7, v2);
  #L166e10.  if v4 < 0 then goto L166e26;
  #L166e14.  v0:= v0 - v1 @kind int;
  #L166e16.  v0:= (`long`) v0 @kind i2l;
  #L166e18.  v7:= v7 - v0 @kind long;
  #L166e1a.  v6:= v6.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L166e1e.  call `checkNotNull`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L166e24.  goto L166dfe;
  #L166e26.  v0:= 0L;
  #L166e2a.  v2:= lcmp(v9, v0);
  #L166e2e.  if v2 <= 0 then goto L166e6e;
  #L166e32.  v2:= v6.`okio.Segment.pos` @type ^`int`;
  #L166e36.  v2:= (`long`) v2 @kind i2l;
  #L166e38.  v2:= v2 + v7 @kind long;
  #L166e3a.  v7:= (`int`) v2 @kind l2i;
  #L166e3c.  v8:= v6.`okio.Segment.limit` @type ^`int`;
  #L166e40.  v8:= v8 - v7 @kind int;
  #L166e42.  v2:= (`long`) v8 @kind i2l;
  #L166e44.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L166e4a.  v2:= temp @kind wide;
  #L166e4c.  v8:= (`int`) v2 @kind l2i;
  #L166e4e.  v2:= v5.`okio.GzipSource.e` @type ^`java.util.zip.CRC32` @kind object;
  #L166e52.  v3:= v6.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L166e56.  call `update`(v2, v3, v7, v8) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L166e5c.  v7:= (`long`) v8 @kind i2l;
  #L166e5e.  v9:= v9 - v7 @kind long;
  #L166e60.  v6:= v6.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L166e64.  call `checkNotNull`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L166e6a.  v7:= v0 @kind wide;
  #L166e6c.  goto L166e2a;
  #L166e6e.  return @kind void;
}
procedure `void` `close`(`okio.GzipSource` v1 @kind this) @signature `Lokio/GzipSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L166b6c.  v0:= v1.`okio.GzipSource.d` @type ^`okio.InflaterSource` @kind object;
  #L166b70.  call `close`(v0) @signature `Lokio/InflaterSource;.close:()V` @kind virtual;
  #L166b76.  return @kind void;
}
procedure `long` `read`(`okio.GzipSource` v11 @kind this, `okio.Buffer` v12 @kind object, `long` v13 ) @signature `Lokio/GzipSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L166994.  v0:= "sink" @kind object;
  #L166998.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16699e.  v0:= 0L;
  #L1669a2.  v2:= 1I;
  #L1669a4.  v3:= lcmp(v13, v0);
  #L1669a8.  if v3 < 0 then goto L1669b0;
  #L1669ac.  v4:= 1I;
  #L1669ae.  goto L1669b2;
  #L1669b0.  v4:= 0I;
  #L1669b2.  if v4 == 0 then goto L166a42;
  #L1669b6.  if v3 != 0 then goto L1669bc;
  #L1669ba.  return v0 @kind wide;
  #L1669bc.  v0:= v11.`okio.GzipSource.a` @type ^`byte` @kind byte;
  #L1669c0.  if v0 != 0 then goto L1669ce;
  #L1669c4.  call `b`(v11) @signature `Lokio/GzipSource;.b:()V` @kind direct;
  #L1669ca.  v11.`okio.GzipSource.a` @type ^`byte` := v2 @kind byte;
  #L1669ce.  v0:= v11.`okio.GzipSource.a` @type ^`byte` @kind byte;
  #L1669d2.  v3:= -1L;
  #L1669d6.  v1:= 2I;
  #L1669d8.  if v0 != v2 then goto L166a0a;
  #L1669dc.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1669e2.  v7:= temp @kind wide;
  #L1669e4.  v0:= v11.`okio.GzipSource.d` @type ^`okio.InflaterSource` @kind object;
  #L1669e8.  call temp:= `read`(v0, v12, v13) @signature `Lokio/InflaterSource;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L1669ee.  v13:= temp @kind wide;
  #L1669f0.  v0:= lcmp(v13, v3);
  #L1669f4.  if v0 == 0 then goto L166a06;
  #L1669f8.  v5:= v11 @kind object;
  #L1669fa.  v6:= v12 @kind object;
  #L1669fc.  v9:= v13 @kind wide;
  #L1669fe.  call `d`(v5, v6, v7, v9) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L166a04.  return v13 @kind wide;
  #L166a06.  v11.`okio.GzipSource.a` @type ^`byte` := v1 @kind byte;
  #L166a0a.  v12:= v11.`okio.GzipSource.a` @type ^`byte` @kind byte;
  #L166a0e.  if v12 != v1 then goto L166a40;
  #L166a12.  call `c`(v11) @signature `Lokio/GzipSource;.c:()V` @kind direct;
  #L166a18.  v12:= 3I;
  #L166a1a.  v11.`okio.GzipSource.a` @type ^`byte` := v12 @kind byte;
  #L166a1e.  v12:= v11.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166a22.  call temp:= `exhausted`(v12) @signature `Lokio/RealBufferedSource;.exhausted:()Z` @kind virtual;
  #L166a28.  v12:= temp;
  #L166a2a.  if v12 == 0 then goto L166a30;
  #L166a2e.  goto L166a40;
  #L166a30.  v12:= new `java.io.IOException`;
  #L166a34.  v13:= "gzip finished without exhausting source" @kind object;
  #L166a38.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L166a3e.  throw v12;
  #L166a40.  return v3 @kind wide;
  #L166a42.  v12:= new `java.lang.StringBuilder`;
  #L166a46.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L166a4c.  v0:= "byteCount < 0: " @kind object;
  #L166a50.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166a56.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L166a5c.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L166a62.  v12:= temp @kind object;
  #L166a64.  v13:= new `java.lang.IllegalArgumentException`;
  #L166a68.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L166a6e.  v12:= temp @kind object;
  #L166a70.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L166a76.  throw v13;
}
procedure `okio.Timeout` `timeout`(`okio.GzipSource` v1 @kind this) @signature `Lokio/GzipSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L166a88.  v0:= v1.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L166a8c.  call temp:= `timeout`(v0) @signature `Lokio/RealBufferedSource;.timeout:()Lokio/Timeout;` @kind virtual;
  #L166a92.  v0:= temp @kind object;
  #L166a94.  return v0 @kind object;
}
