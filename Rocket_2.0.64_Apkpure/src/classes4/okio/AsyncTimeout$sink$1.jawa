record `okio.AsyncTimeout$sink$1` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Sink` @kind interface {
  `okio.AsyncTimeout` `okio.AsyncTimeout$sink$1.a` @AccessFlag FINAL_SYNTHETIC;
  `okio.Sink` `okio.AsyncTimeout$sink$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.AsyncTimeout$sink$1` v0 @kind this, `okio.AsyncTimeout` v1 @kind object, `okio.Sink` v2 @kind object) @signature `Lokio/AsyncTimeout$sink$1;.<init>:(Lokio/AsyncTimeout;Lokio/Sink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L15ffe0.  v0.`okio.AsyncTimeout$sink$1.a` @type ^`okio.AsyncTimeout` := v1 @kind object;
  #L15ffe4.  v0.`okio.AsyncTimeout$sink$1.b` @type ^`okio.Sink` := v2 @kind object;
  #L15ffe8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15ffee.  return @kind void;
}
procedure `void` `close`(`okio.AsyncTimeout$sink$1` v3 @kind this) @signature `Lokio/AsyncTimeout$sink$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L160000.  v0:= v3.`okio.AsyncTimeout$sink$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L160004.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L16000a.  v1:= v3.`okio.AsyncTimeout$sink$1.b` @type ^`okio.Sink` @kind object;
  #L16000e.  call `close`(v1) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L160014.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L160018.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L16001e.  v1:= temp;
  #L160020.  if v1 != 0 then goto L160026;
  #L160024.  return @kind void;
  #L160026.  v1:= 0I;
  #L160028.  call temp:= `access$newTimeoutException`(v0, v1) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L16002e.  v0:= temp @kind object;
  #L160030.  throw v0;
  #L160032.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L160034.  goto L160050;
  #L160036.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L160038.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L16003e.  v2:= temp;
  #L160040.  if v2 != 0 then goto L160046;
  #L160044.  goto L16004e;
  #L160046.  call temp:= `access$newTimeoutException`(v0, v1) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L16004c.  v1:= temp @kind object;
  #L16004e.  throw v1;
  #L160050.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L160056.  v0:= temp;
  #L160058.  throw v1;
  catch `java.io.IOException` @[L16000a..L160018] goto L160036;
  catch `java.lang.Throwable` @[L16000a..L160018] goto L160032;
  catch `java.lang.Throwable` @[L160038..L160050] goto L160032;
}
procedure `void` `flush`(`okio.AsyncTimeout$sink$1` v3 @kind this) @signature `Lokio/AsyncTimeout$sink$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L160084.  v0:= v3.`okio.AsyncTimeout$sink$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L160088.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L16008e.  v1:= v3.`okio.AsyncTimeout$sink$1.b` @type ^`okio.Sink` @kind object;
  #L160092.  call `flush`(v1) @signature `Lokio/Sink;.flush:()V` @kind interface;
  #L160098.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16009c.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1600a2.  v1:= temp;
  #L1600a4.  if v1 != 0 then goto L1600aa;
  #L1600a8.  return @kind void;
  #L1600aa.  v1:= 0I;
  #L1600ac.  call temp:= `access$newTimeoutException`(v0, v1) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1600b2.  v0:= temp @kind object;
  #L1600b4.  throw v0;
  #L1600b6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1600b8.  goto L1600d4;
  #L1600ba.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1600bc.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1600c2.  v2:= temp;
  #L1600c4.  if v2 != 0 then goto L1600ca;
  #L1600c8.  goto L1600d2;
  #L1600ca.  call temp:= `access$newTimeoutException`(v0, v1) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1600d0.  v1:= temp @kind object;
  #L1600d2.  throw v1;
  #L1600d4.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1600da.  v0:= temp;
  #L1600dc.  throw v1;
  catch `java.io.IOException` @[L16008e..L16009c] goto L1600ba;
  catch `java.lang.Throwable` @[L16008e..L16009c] goto L1600b6;
  catch `java.lang.Throwable` @[L1600bc..L1600d4] goto L1600b6;
}
procedure `okio.AsyncTimeout` `timeout`(`okio.AsyncTimeout$sink$1` v1 @kind this) @signature `Lokio/AsyncTimeout$sink$1;.timeout:()Lokio/AsyncTimeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ffac.  v0:= v1.`okio.AsyncTimeout$sink$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L15ffb0.  return v0 @kind object;
}
procedure `okio.Timeout` `timeout`(`okio.AsyncTimeout$sink$1` v1 @kind this) @signature `Lokio/AsyncTimeout$sink$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L15ffc4.  call temp:= `timeout`(v1) @signature `Lokio/AsyncTimeout$sink$1;.timeout:()Lokio/AsyncTimeout;` @kind virtual;
  #L15ffca.  v0:= temp @kind object;
  #L15ffcc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.AsyncTimeout$sink$1` v2 @kind this) @signature `Lokio/AsyncTimeout$sink$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ff68.  v0:= new `java.lang.StringBuilder`;
  #L15ff6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15ff72.  v1:= "AsyncTimeout.sink(" @kind object;
  #L15ff76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ff7c.  v1:= v2.`okio.AsyncTimeout$sink$1.b` @type ^`okio.Sink` @kind object;
  #L15ff80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ff86.  v1:= 41I;
  #L15ff8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ff90.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15ff96.  v0:= temp @kind object;
  #L15ff98.  return v0 @kind object;
}
procedure `void` `write`(`okio.AsyncTimeout$sink$1` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokio/AsyncTimeout$sink$1;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L160108.  v0:= "source" @kind object;
  #L16010c.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L160112.  call temp:= `size`(v8) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L160118.  v1:= temp @kind wide;
  #L16011a.  v3:= 0L;
  #L16011e.  v5:= v9 @kind wide;
  #L160120.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L160126.  v0:= 0L;
  #L16012a.  v2:= lcmp(v9, v0);
  #L16012e.  if v2 <= 0 then goto L1601cc;
  #L160132.  v2:= v8.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L160136.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L16013c.  v3:= 65536I;
  #L160140.  v3:= (`long`) v3 @kind i2l;
  #L160142.  v5:= lcmp(v0, v3);
  #L160146.  if v5 >= 0 then goto L160170;
  #L16014a.  v3:= v2.`okio.Segment.limit` @type ^`int`;
  #L16014e.  v4:= v2.`okio.Segment.pos` @type ^`int`;
  #L160152.  v3:= v3 - v4 @kind int;
  #L160154.  v3:= (`long`) v3 @kind i2l;
  #L160156.  v0:= v0 + v3 @kind long;
  #L160158.  v3:= lcmp(v0, v9);
  #L16015c.  if v3 < 0 then goto L160164;
  #L160160.  v0:= v9 @kind wide;
  #L160162.  goto L160170;
  #L160164.  v2:= v2.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L160168.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L16016e.  goto L16013c;
  #L160170.  v2:= v7.`okio.AsyncTimeout$sink$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L160174.  call `enter`(v2) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L16017a.  v3:= v7.`okio.AsyncTimeout$sink$1.b` @type ^`okio.Sink` @kind object;
  #L16017e.  call `write`(v3, v8, v0) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L160184.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L160188.  call temp:= `exit`(v2) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L16018e.  v3:= temp;
  #L160190.  if v3 != 0 then goto L160198;
  #L160194.  v9:= v9 - v0 @kind long;
  #L160196.  goto L160126;
  #L160198.  v8:= 0I;
  #L16019a.  call temp:= `access$newTimeoutException`(v2, v8) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1601a0.  v8:= temp @kind object;
  #L1601a2.  throw v8;
  #L1601a4.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1601a6.  goto L1601c2;
  #L1601a8.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L1601aa.  call temp:= `exit`(v2) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1601b0.  v9:= temp;
  #L1601b2.  if v9 != 0 then goto L1601b8;
  #L1601b6.  goto L1601c0;
  #L1601b8.  call temp:= `access$newTimeoutException`(v2, v8) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1601be.  v8:= temp @kind object;
  #L1601c0.  throw v8;
  #L1601c2.  call temp:= `exit`(v2) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1601c8.  v9:= temp;
  #L1601ca.  throw v8;
  #L1601cc.  return @kind void;
  catch `java.io.IOException` @[L16017a..L160188] goto L1601a8;
  catch `java.lang.Throwable` @[L16017a..L160188] goto L1601a4;
  catch `java.lang.Throwable` @[L1601aa..L1601c2] goto L1601a4;
}
