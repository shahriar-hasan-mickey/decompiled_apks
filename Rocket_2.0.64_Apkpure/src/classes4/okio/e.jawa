record `okio.e` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `java.io.OutputStream` `okio.e.a` @AccessFlag PRIVATE_FINAL;
  `okio.Timeout` `okio.e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.e` v1 @kind this, `java.io.OutputStream` v2 @kind object, `okio.Timeout` v3 @kind object) @signature `Lokio/e;.<init>:(Ljava/io/OutputStream;Lokio/Timeout;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L168a74.  v0:= "out" @kind object;
  #L168a78.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L168a7e.  v0:= "timeout" @kind object;
  #L168a82.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L168a88.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L168a8e.  v1.`okio.e.a` @type ^`java.io.OutputStream` := v2 @kind object;
  #L168a92.  v1.`okio.e.b` @type ^`okio.Timeout` := v3 @kind object;
  #L168a96.  return @kind void;
}
procedure `void` `close`(`okio.e` v1 @kind this) @signature `Lokio/e;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168aa8.  v0:= v1.`okio.e.a` @type ^`java.io.OutputStream` @kind object;
  #L168aac.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L168ab2.  return @kind void;
}
procedure `void` `flush`(`okio.e` v1 @kind this) @signature `Lokio/e;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168ac4.  v0:= v1.`okio.e.a` @type ^`java.io.OutputStream` @kind object;
  #L168ac8.  call `flush`(v0) @signature `Ljava/io/OutputStream;.flush:()V` @kind virtual;
  #L168ace.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okio.e` v1 @kind this) @signature `Lokio/e;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168a5c.  v0:= v1.`okio.e.b` @type ^`okio.Timeout` @kind object;
  #L168a60.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.e` v2 @kind this) @signature `Lokio/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L168a18.  v0:= new `java.lang.StringBuilder`;
  #L168a1c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L168a22.  v1:= "sink(" @kind object;
  #L168a26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L168a2c.  v1:= v2.`okio.e.a` @type ^`java.io.OutputStream` @kind object;
  #L168a30.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L168a36.  v1:= 41I;
  #L168a3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L168a40.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L168a46.  v0:= temp @kind object;
  #L168a48.  return v0 @kind object;
}
procedure `void` `write`(`okio.e` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokio/e;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L168ae0.  v0:= "source" @kind object;
  #L168ae4.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L168aea.  call temp:= `size`(v8) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L168af0.  v1:= temp @kind wide;
  #L168af2.  v3:= 0L;
  #L168af6.  v5:= v9 @kind wide;
  #L168af8.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L168afe.  v0:= 0L;
  #L168b02.  v2:= lcmp(v9, v0);
  #L168b06.  if v2 <= 0 then goto L168b84;
  #L168b0a.  v0:= v7.`okio.e.b` @type ^`okio.Timeout` @kind object;
  #L168b0e.  call `throwIfReached`(v0) @signature `Lokio/Timeout;.throwIfReached:()V` @kind virtual;
  #L168b14.  v0:= v8.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L168b18.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L168b1e.  v1:= v0.`okio.Segment.limit` @type ^`int`;
  #L168b22.  v2:= v0.`okio.Segment.pos` @type ^`int`;
  #L168b26.  v1:= v1 - v2 @kind int;
  #L168b28.  v1:= (`long`) v1 @kind i2l;
  #L168b2a.  call temp:= `min`(v9, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L168b30.  v1:= temp @kind wide;
  #L168b32.  v2:= (`int`) v1 @kind l2i;
  #L168b34.  v1:= v7.`okio.e.a` @type ^`java.io.OutputStream` @kind object;
  #L168b38.  v3:= v0.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L168b3c.  v4:= v0.`okio.Segment.pos` @type ^`int`;
  #L168b40.  call `write`(v1, v3, v4, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L168b46.  v1:= v0.`okio.Segment.pos` @type ^`int`;
  #L168b4a.  v1:= v1 + v2 @kind int;
  #L168b4c.  v0.`okio.Segment.pos` @type ^`int` := v1;
  #L168b50.  v1:= (`long`) v2 @kind i2l;
  #L168b52.  v9:= v9 - v1 @kind long;
  #L168b54.  call temp:= `size`(v8) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L168b5a.  v3:= temp @kind wide;
  #L168b5c.  v3:= v3 - v1 @kind long;
  #L168b5e.  call `setSize$okio`(v8, v3) @signature `Lokio/Buffer;.setSize$okio:(J)V` @kind virtual;
  #L168b64.  v1:= v0.`okio.Segment.pos` @type ^`int`;
  #L168b68.  v2:= v0.`okio.Segment.limit` @type ^`int`;
  #L168b6c.  if v1 != v2 then goto L168afe;
  #L168b70.  call temp:= `pop`(v0) @signature `Lokio/Segment;.pop:()Lokio/Segment;` @kind virtual;
  #L168b76.  v1:= temp @kind object;
  #L168b78.  v8.`okio.Buffer.head` @type ^`okio.Segment` := v1 @kind object;
  #L168b7c.  call `recycle`(v0) @signature `Lokio/SegmentPool;.recycle:(Lokio/Segment;)V` @kind static;
  #L168b82.  goto L168afe;
  #L168b84.  return @kind void;
}
