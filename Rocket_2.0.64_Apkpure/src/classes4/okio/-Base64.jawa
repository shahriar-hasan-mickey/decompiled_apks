record `okio.-Base64` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@okio.-Base64.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okio.-Base64.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/-Base64;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15f054.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L15f058.  v1:= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" @kind object;
  #L15f05c.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L15f062.  v1:= temp @kind object;
  #L15f064.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L15f06a.  v1:= temp @kind object;
  #L15f06c.  `@@okio.-Base64.a` @type ^`byte`[] := v1 @kind object;
  #L15f070.  v1:= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_" @kind object;
  #L15f074.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L15f07a.  v0:= temp @kind object;
  #L15f07c.  call temp:= `getData$okio`(v0) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L15f082.  v0:= temp @kind object;
  #L15f084.  `@@okio.-Base64.b` @type ^`byte`[] := v0 @kind object;
  #L15f088.  return @kind void;
}
procedure `byte`[] `decodeBase64ToArray`(`java.lang.String` v15 @kind object) @signature `Lokio/-Base64;.decodeBase64ToArray:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L15ecc8.  v0:= "$this$decodeBase64ToArray" @kind object;
  #L15eccc.  call `checkNotNullParameter`(v15, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15ecd2.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15ecd8.  v0:= temp;
  #L15ecda.  v1:= 9I;
  #L15ecde.  v2:= 32I;
  #L15ece2.  v3:= 13I;
  #L15ece6.  v4:= 10I;
  #L15ecea.  if v0 <= 0 then goto L15ed1a;
  #L15ecee.  v5:= v0 + -1;
  #L15ecf2.  call temp:= `charAt`(v15, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L15ecf8.  v5:= temp;
  #L15ecfa.  v6:= 61I;
  #L15ecfe.  if v5 == v6 then goto L15ed14;
  #L15ed02.  if v5 == v4 then goto L15ed14;
  #L15ed06.  if v5 == v3 then goto L15ed14;
  #L15ed0a.  if v5 == v2 then goto L15ed14;
  #L15ed0e.  if v5 == v1 then goto L15ed14;
  #L15ed12.  goto L15ed1a;
  #L15ed14.  v0:= v0 + -1;
  #L15ed18.  goto L15ecda;
  #L15ed1a.  v5:= (`long`) v0 @kind i2l;
  #L15ed1c.  v7:= 6L;
  #L15ed20.  v5:= v5 * v7 @kind long;
  #L15ed24.  v7:= 8L;
  #L15ed28.  v5:= v5 / v7 @kind long;
  #L15ed2a.  v6:= (`int`) v5 @kind l2i;
  #L15ed2c.  v5:= new `byte`[v6];
  #L15ed30.  v7:= 0I;
  #L15ed32.  v8:= 0I;
  #L15ed34.  v9:= 0I;
  #L15ed36.  v10:= 0I;
  #L15ed38.  v11:= 0I;
  #L15ed3a.  if v7 >= v0 then goto L15ee10;
  #L15ed3e.  call temp:= `charAt`(v15, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L15ed44.  v12:= temp;
  #L15ed46.  v13:= 90I;
  #L15ed4a.  v14:= 65I;
  #L15ed4e.  if v14 <= v12 then goto L15ed54;
  #L15ed52.  goto L15ed5e;
  #L15ed54.  if v13 < v12 then goto L15ed5e;
  #L15ed58.  v12:= v12 + -65;
  #L15ed5c.  goto L15edd0;
  #L15ed5e.  v13:= 122I;
  #L15ed62.  v14:= 97I;
  #L15ed66.  if v14 <= v12 then goto L15ed6c;
  #L15ed6a.  goto L15ed76;
  #L15ed6c.  if v13 < v12 then goto L15ed76;
  #L15ed70.  v12:= v12 + -71;
  #L15ed74.  goto L15edd0;
  #L15ed76.  v13:= 57I;
  #L15ed7a.  v14:= 48I;
  #L15ed7e.  if v14 <= v12 then goto L15ed84;
  #L15ed82.  goto L15ed8e;
  #L15ed84.  if v13 < v12 then goto L15ed8e;
  #L15ed88.  v12:= v12 + 4;
  #L15ed8c.  goto L15edd0;
  #L15ed8e.  v13:= 43I;
  #L15ed92.  if v12 == v13 then goto L15edcc;
  #L15ed96.  v13:= 45I;
  #L15ed9a.  if v12 != v13 then goto L15eda0;
  #L15ed9e.  goto L15edcc;
  #L15eda0.  v13:= 47I;
  #L15eda4.  if v12 == v13 then goto L15edc6;
  #L15eda8.  v13:= 95I;
  #L15edac.  if v12 != v13 then goto L15edb2;
  #L15edb0.  goto L15edc6;
  #L15edb2.  if v12 == v4 then goto L15ee0a;
  #L15edb6.  if v12 == v3 then goto L15ee0a;
  #L15edba.  if v12 == v2 then goto L15ee0a;
  #L15edbe.  if v12 != v1 then goto L15edc4;
  #L15edc2.  goto L15ee0a;
  #L15edc4.  return v11 @kind object;
  #L15edc6.  v12:= 63I;
  #L15edca.  goto L15edd0;
  #L15edcc.  v12:= 62I;
  #L15edd0.  v9:= v9 ^< 6;
  #L15edd4.  v9:= v9 ^| v12 @kind int;
  #L15edd6.  v8:= v8 + 1;
  #L15edda.  v11:= v8 %% 4;
  #L15edde.  if v11 != 0 then goto L15ee0a;
  #L15ede2.  v11:= v10 + 1;
  #L15ede6.  v12:= v9 ^> 16;
  #L15edea.  v12:= (`byte`) v12 @kind i2b;
  #L15edec.  v5[v10]:= v12 @kind byte;
  #L15edf0.  v10:= v11 + 1;
  #L15edf4.  v12:= v9 ^> 8;
  #L15edf8.  v12:= (`byte`) v12 @kind i2b;
  #L15edfa.  v5[v11]:= v12 @kind byte;
  #L15edfe.  v11:= v10 + 1;
  #L15ee02.  v12:= (`byte`) v9 @kind i2b;
  #L15ee04.  v5[v10]:= v12 @kind byte;
  #L15ee08.  v10:= v11;
  #L15ee0a.  v7:= v7 + 1;
  #L15ee0e.  goto L15ed38;
  #L15ee10.  v8:= v8 %% 4;
  #L15ee14.  v15:= 1I;
  #L15ee16.  if v8 == v15 then goto L15ee78;
  #L15ee1a.  v15:= 2I;
  #L15ee1c.  if v8 == v15 then goto L15ee4a;
  #L15ee20.  v15:= 3I;
  #L15ee22.  if v8 == v15 then goto L15ee28;
  #L15ee26.  goto L15ee5e;
  #L15ee28.  v15:= v9 ^< 6;
  #L15ee2c.  v0:= v10 + 1;
  #L15ee30.  v1:= v15 ^> 16;
  #L15ee34.  v1:= (`byte`) v1 @kind i2b;
  #L15ee36.  v5[v10]:= v1 @kind byte;
  #L15ee3a.  v10:= v0 + 1;
  #L15ee3e.  v15:= v15 ^> 8;
  #L15ee42.  v15:= (`byte`) v15 @kind i2b;
  #L15ee44.  v5[v0]:= v15 @kind byte;
  #L15ee48.  goto L15ee5e;
  #L15ee4a.  v15:= v9 ^< 12;
  #L15ee4e.  v0:= v10 + 1;
  #L15ee52.  v15:= v15 ^> 16;
  #L15ee56.  v15:= (`byte`) v15 @kind i2b;
  #L15ee58.  v5[v10]:= v15 @kind byte;
  #L15ee5c.  v10:= v0;
  #L15ee5e.  if v10 != v6 then goto L15ee64;
  #L15ee62.  return v5 @kind object;
  #L15ee64.  call temp:= `copyOf`(v5, v10) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L15ee6a.  v15:= temp @kind object;
  #L15ee6c.  v0:= "java.util.Arrays.copyOf(this, newSize)" @kind object;
  #L15ee70.  call `checkNotNullExpressionValue`(v15, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15ee76.  return v15 @kind object;
  #L15ee78.  return v11 @kind object;
}
procedure `java.lang.String` `encodeBase64`(`byte`[] v10 @kind object, `byte`[] v11 @kind object) @signature `Lokio/-Base64;.encodeBase64:([B[B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L15eee4.  v0:= "$this$encodeBase64" @kind object;
  #L15eee8.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15eeee.  v0:= "map" @kind object;
  #L15eef2.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15eef8.  v0:= length @variable v10;
  #L15eefa.  v1:= 2I;
  #L15eefc.  v0:= v0 + v1 @kind int;
  #L15eefe.  v0:= v0 / 3;
  #L15ef02.  v0:= v0 * 4;
  #L15ef06.  v0:= new `byte`[v0];
  #L15ef0a.  v2:= length @variable v10;
  #L15ef0c.  v3:= length @variable v10;
  #L15ef0e.  v3:= v3 %% 3;
  #L15ef12.  v2:= v2 - v3 @kind int;
  #L15ef14.  v3:= 0I;
  #L15ef16.  v4:= 0I;
  #L15ef18.  if v3 >= v2 then goto L15ef94;
  #L15ef1c.  v5:= v3 + 1;
  #L15ef20.  v3:= v10[v3] @kind byte;
  #L15ef24.  v6:= v5 + 1;
  #L15ef28.  v5:= v10[v5] @kind byte;
  #L15ef2c.  v7:= v6 + 1;
  #L15ef30.  v6:= v10[v6] @kind byte;
  #L15ef34.  v8:= v4 + 1;
  #L15ef38.  v9:= v3 ^& 255;
  #L15ef3c.  v9:= v9 ^> v1 @kind int;
  #L15ef3e.  v9:= v11[v9] @kind byte;
  #L15ef42.  v0[v4]:= v9 @kind byte;
  #L15ef46.  v4:= v8 + 1;
  #L15ef4a.  v3:= v3 ^& 3;
  #L15ef4e.  v3:= v3 ^< 4;
  #L15ef52.  v9:= v5 ^& 255;
  #L15ef56.  v9:= v9 ^> 4;
  #L15ef5a.  v3:= v3 ^| v9 @kind int;
  #L15ef5c.  v3:= v11[v3] @kind byte;
  #L15ef60.  v0[v8]:= v3 @kind byte;
  #L15ef64.  v3:= v4 + 1;
  #L15ef68.  v5:= v5 ^& 15;
  #L15ef6c.  v5:= v5 ^< v1 @kind int;
  #L15ef6e.  v8:= v6 ^& 255;
  #L15ef72.  v8:= v8 ^> 6;
  #L15ef76.  v5:= v5 ^| v8 @kind int;
  #L15ef78.  v5:= v11[v5] @kind byte;
  #L15ef7c.  v0[v4]:= v5 @kind byte;
  #L15ef80.  v4:= v3 + 1;
  #L15ef84.  v5:= v6 ^& 63;
  #L15ef88.  v5:= v11[v5] @kind byte;
  #L15ef8c.  v0[v3]:= v5 @kind byte;
  #L15ef90.  v3:= v7;
  #L15ef92.  goto L15ef18;
  #L15ef94.  v5:= length @variable v10;
  #L15ef96.  v5:= v5 - v2 @kind int;
  #L15ef98.  v2:= 61I;
  #L15ef9c.  v6:= 1I;
  #L15ef9e.  if v5 == v6 then goto L15effe;
  #L15efa2.  if v5 == v1 then goto L15efa8;
  #L15efa6.  goto L15f038;
  #L15efa8.  v5:= v3 + 1;
  #L15efac.  v3:= v10[v3] @kind byte;
  #L15efb0.  v10:= v10[v5] @kind byte;
  #L15efb4.  v5:= v4 + 1;
  #L15efb8.  v6:= v3 ^& 255;
  #L15efbc.  v6:= v6 ^> v1 @kind int;
  #L15efbe.  v6:= v11[v6] @kind byte;
  #L15efc2.  v0[v4]:= v6 @kind byte;
  #L15efc6.  v4:= v5 + 1;
  #L15efca.  v3:= v3 ^& 3;
  #L15efce.  v3:= v3 ^< 4;
  #L15efd2.  v6:= v10 ^& 255;
  #L15efd6.  v6:= v6 ^> 4;
  #L15efda.  v3:= v3 ^| v6 @kind int;
  #L15efdc.  v3:= v11[v3] @kind byte;
  #L15efe0.  v0[v5]:= v3 @kind byte;
  #L15efe4.  v3:= v4 + 1;
  #L15efe8.  v10:= v10 ^& 15;
  #L15efec.  v10:= v10 ^< v1 @kind int;
  #L15efee.  v10:= v11[v10] @kind byte;
  #L15eff2.  v0[v4]:= v10 @kind byte;
  #L15eff6.  v10:= (`byte`) v2 @kind i2b;
  #L15eff8.  v0[v3]:= v10 @kind byte;
  #L15effc.  goto L15f038;
  #L15effe.  v10:= v10[v3] @kind byte;
  #L15f002.  v3:= v4 + 1;
  #L15f006.  v5:= v10 ^& 255;
  #L15f00a.  v1:= v5 ^> 2;
  #L15f00e.  v1:= v11[v1] @kind byte;
  #L15f012.  v0[v4]:= v1 @kind byte;
  #L15f016.  v1:= v3 + 1;
  #L15f01a.  v10:= v10 ^& 3;
  #L15f01e.  v10:= v10 ^< 4;
  #L15f022.  v10:= v11[v10] @kind byte;
  #L15f026.  v0[v3]:= v10 @kind byte;
  #L15f02a.  v10:= v1 + 1;
  #L15f02e.  v11:= (`byte`) v2 @kind i2b;
  #L15f030.  v0[v1]:= v11 @kind byte;
  #L15f034.  v0[v10]:= v11 @kind byte;
  #L15f038.  call temp:= `toUtf8String`(v0) @signature `Lokio/-Platform;.toUtf8String:([B)Ljava/lang/String;` @kind static;
  #L15f03e.  v10:= temp @kind object;
  #L15f040.  return v10 @kind object;
}
procedure `java.lang.String` `encodeBase64$default`(`byte`[] v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lokio/-Base64;.encodeBase64$default:([B[BILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15eebc.  v2:= v2 ^& 1;
  #L15eec0.  if v2 == 0 then goto L15eec8;
  #L15eec4.  v1:= `@@okio.-Base64.a` @type ^`byte`[] @kind object;
  #L15eec8.  call temp:= `encodeBase64`(v0, v1) @signature `Lokio/-Base64;.encodeBase64:([B[B)Ljava/lang/String;` @kind static;
  #L15eece.  v0:= temp @kind object;
  #L15eed0.  return v0 @kind object;
}
procedure `byte`[] `getBASE64`() @signature `Lokio/-Base64;.getBASE64:()[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15ee8c.  v0:= `@@okio.-Base64.a` @type ^`byte`[] @kind object;
  #L15ee90.  return v0 @kind object;
}
procedure `byte`[] `getBASE64_URL_SAFE`() @signature `Lokio/-Base64;.getBASE64_URL_SAFE:()[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15eea4.  v0:= `@@okio.-Base64.b` @type ^`byte`[] @kind object;
  #L15eea8.  return v0 @kind object;
}
