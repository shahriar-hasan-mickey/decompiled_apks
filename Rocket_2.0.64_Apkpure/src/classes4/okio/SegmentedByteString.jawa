record `okio.SegmentedByteString` @kind class @AccessFlag PUBLIC_FINAL extends `okio.ByteString` @kind class {
  `byte`[][] `okio.SegmentedByteString.d` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int`[] `okio.SegmentedByteString.e` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`okio.SegmentedByteString` v1 @kind this, `byte`[][] v2 @kind object, `int`[] v3 @kind object) @signature `Lokio/SegmentedByteString;.<init>:([[B[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16c608.  v0:= "segments" @kind object;
  #L16c60c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c612.  v0:= "directory" @kind object;
  #L16c616.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c61c.  v0:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L16c620.  call temp:= `getData$okio`(v0) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L16c626.  v0:= temp @kind object;
  #L16c628.  call `<init>`(v1, v0) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L16c62e.  v1.`okio.SegmentedByteString.d` @type ^`byte`[][] := v2 @kind object;
  #L16c632.  v1.`okio.SegmentedByteString.e` @type ^`int`[] := v3 @kind object;
  #L16c636.  return @kind void;
}
procedure `okio.ByteString` `a`(`okio.SegmentedByteString` v2 @kind this) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L16c5e4.  v0:= new `okio.ByteString`;
  #L16c5e8.  call temp:= `toByteArray`(v2) @signature `Lokio/SegmentedByteString;.toByteArray:()[B` @kind virtual;
  #L16c5ee.  v1:= temp @kind object;
  #L16c5f0.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L16c5f6.  return v0 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`okio.SegmentedByteString` v2 @kind this) @signature `Lokio/SegmentedByteString;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L16c138.  call temp:= `a`(v2) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @kind direct;
  #L16c13e.  v0:= temp @kind object;
  #L16c140.  v1:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L16c144.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L16c14a.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `asByteBuffer`(`okio.SegmentedByteString` v2 @kind this) @signature `Lokio/SegmentedByteString;.asByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16c218.  call temp:= `toByteArray`(v2) @signature `Lokio/SegmentedByteString;.toByteArray:()[B` @kind virtual;
  #L16c21e.  v0:= temp @kind object;
  #L16c220.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L16c226.  v0:= temp @kind object;
  #L16c228.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L16c22e.  v0:= temp @kind object;
  #L16c230.  v1:= "ByteBuffer.wrap(toByteArray()).asReadOnlyBuffer()" @kind object;
  #L16c234.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c23a.  return v0 @kind object;
}
procedure `java.lang.String` `base64`(`okio.SegmentedByteString` v1 @kind this) @signature `Lokio/SegmentedByteString;.base64:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16c15c.  call temp:= `a`(v1) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @kind direct;
  #L16c162.  v0:= temp @kind object;
  #L16c164.  call temp:= `base64`(v0) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L16c16a.  v0:= temp @kind object;
  #L16c16c.  return v0 @kind object;
}
procedure `java.lang.String` `base64Url`(`okio.SegmentedByteString` v1 @kind this) @signature `Lokio/SegmentedByteString;.base64Url:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16c180.  call temp:= `a`(v1) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @kind direct;
  #L16c186.  v0:= temp @kind object;
  #L16c188.  call temp:= `base64Url`(v0) @signature `Lokio/ByteString;.base64Url:()Ljava/lang/String;` @kind virtual;
  #L16c18e.  v0:= temp @kind object;
  #L16c190.  return v0 @kind object;
}
procedure `okio.ByteString` `digest$okio`(`okio.SegmentedByteString` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokio/SegmentedByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16c24c.  v0:= "algorithm" @kind object;
  #L16c250.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c256.  call temp:= `getInstance`(v7) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L16c25c.  v7:= temp @kind object;
  #L16c25e.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c264.  v0:= temp @kind object;
  #L16c266.  v0:= length @variable v0;
  #L16c268.  v1:= 0I;
  #L16c26a.  v2:= 0I;
  #L16c26c.  if v1 >= v0 then goto L16c2aa;
  #L16c270.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c276.  v3:= temp @kind object;
  #L16c278.  v4:= v0 + v1 @kind int;
  #L16c27c.  v3:= v3[v4];
  #L16c280.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c286.  v4:= temp @kind object;
  #L16c288.  v4:= v4[v1];
  #L16c28c.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c292.  v5:= temp @kind object;
  #L16c294.  v5:= v5[v1] @kind object;
  #L16c298.  v2:= v4 - v2 @kind int;
  #L16c29c.  call `update`(v7, v5, v3, v2) @signature `Ljava/security/MessageDigest;.update:([BII)V` @kind virtual;
  #L16c2a2.  v1:= v1 + 1;
  #L16c2a6.  v2:= v4;
  #L16c2a8.  goto L16c26c;
  #L16c2aa.  v0:= new `okio.ByteString`;
  #L16c2ae.  call temp:= `digest`(v7) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L16c2b4.  v7:= temp @kind object;
  #L16c2b6.  v1:= "digest.digest()" @kind object;
  #L16c2ba.  call `checkNotNullExpressionValue`(v7, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c2c0.  call `<init>`(v0, v7) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L16c2c6.  return v0 @kind object;
}
procedure `boolean` `equals`(`okio.SegmentedByteString` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lokio/SegmentedByteString;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16bd14.  v0:= 1I;
  #L16bd16.  v1:= 0I;
  #L16bd18.  if v5 != v4 then goto L16bd1e;
  #L16bd1c.  goto L16bd56;
  #L16bd1e.  v2:= instanceof @variable v5 @type ^`okio.ByteString` @kind boolean;
  #L16bd22.  if v2 == 0 then goto L16bd54;
  #L16bd26.  v5:= (`okio.ByteString`) v5 @kind object;
  #L16bd2a.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16bd30.  v2:= temp;
  #L16bd32.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16bd38.  v3:= temp;
  #L16bd3a.  if v2 != v3 then goto L16bd54;
  #L16bd3e.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16bd44.  v2:= temp;
  #L16bd46.  call temp:= `rangeEquals`(v4, v1, v5, v1, v2) @signature `Lokio/SegmentedByteString;.rangeEquals:(ILokio/ByteString;II)Z` @kind virtual;
  #L16bd4c.  v5:= temp;
  #L16bd4e.  if v5 == 0 then goto L16bd54;
  #L16bd52.  goto L16bd56;
  #L16bd54.  v0:= 0I;
  #L16bd56.  return v0;
}
procedure `int`[] `getDirectory$okio`(`okio.SegmentedByteString` v1 @kind this) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16c120.  v0:= v1.`okio.SegmentedByteString.e` @type ^`int`[] @kind object;
  #L16c124.  return v0 @kind object;
}
procedure `byte`[][] `getSegments$okio`(`okio.SegmentedByteString` v1 @kind this) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16bffc.  v0:= v1.`okio.SegmentedByteString.d` @type ^`byte`[][] @kind object;
  #L16c000.  return v0 @kind object;
}
procedure `int` `getSize$okio`(`okio.SegmentedByteString` v2 @kind this) @signature `Lokio/SegmentedByteString;.getSize$okio:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16c014.  call temp:= `getDirectory$okio`(v2) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c01a.  v0:= temp @kind object;
  #L16c01c.  call temp:= `getSegments$okio`(v2) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c022.  v1:= temp @kind object;
  #L16c024.  v1:= length @variable v1;
  #L16c026.  v1:= v1 + -1;
  #L16c02a.  v0:= v0[v1];
  #L16c02e.  return v0;
}
procedure `int` `hashCode`(`okio.SegmentedByteString` v8 @kind this) @signature `Lokio/SegmentedByteString;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L16c040.  call temp:= `getHashCode$okio`(v8) @signature `Lokio/ByteString;.getHashCode$okio:()I` @kind virtual;
  #L16c046.  v0:= temp;
  #L16c048.  if v0 == 0 then goto L16c04e;
  #L16c04c.  goto L16c0b4;
  #L16c04e.  call temp:= `getSegments$okio`(v8) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c054.  v0:= temp @kind object;
  #L16c056.  v0:= length @variable v0;
  #L16c058.  v1:= 0I;
  #L16c05a.  v2:= 1I;
  #L16c05c.  v3:= 0I;
  #L16c05e.  if v1 >= v0 then goto L16c0ac;
  #L16c062.  call temp:= `getDirectory$okio`(v8) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c068.  v4:= temp @kind object;
  #L16c06a.  v5:= v0 + v1 @kind int;
  #L16c06e.  v4:= v4[v5];
  #L16c072.  call temp:= `getDirectory$okio`(v8) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c078.  v5:= temp @kind object;
  #L16c07a.  v5:= v5[v1];
  #L16c07e.  call temp:= `getSegments$okio`(v8) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c084.  v6:= temp @kind object;
  #L16c086.  v6:= v6[v1] @kind object;
  #L16c08a.  v3:= v5 - v3 @kind int;
  #L16c08e.  v3:= v3 + v4 @kind int;
  #L16c090.  if v4 >= v3 then goto L16c0a4;
  #L16c094.  v2:= v2 * 31;
  #L16c098.  v7:= v6[v4] @kind byte;
  #L16c09c.  v2:= v2 + v7 @kind int;
  #L16c09e.  v4:= v4 + 1;
  #L16c0a2.  goto L16c090;
  #L16c0a4.  v1:= v1 + 1;
  #L16c0a8.  v3:= v5;
  #L16c0aa.  goto L16c05e;
  #L16c0ac.  call `setHashCode$okio`(v8, v2) @signature `Lokio/ByteString;.setHashCode$okio:(I)V` @kind virtual;
  #L16c0b2.  v0:= v2;
  #L16c0b4.  return v0;
}
procedure `java.lang.String` `hex`(`okio.SegmentedByteString` v1 @kind this) @signature `Lokio/SegmentedByteString;.hex:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16c1a4.  call temp:= `a`(v1) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @kind direct;
  #L16c1aa.  v0:= temp @kind object;
  #L16c1ac.  call temp:= `hex`(v0) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L16c1b2.  v0:= temp @kind object;
  #L16c1b4.  return v0 @kind object;
}
procedure `okio.ByteString` `hmac$okio`(`okio.SegmentedByteString` v5 @kind this, `java.lang.String` v6 @kind object, `okio.ByteString` v7 @kind object) @signature `Lokio/SegmentedByteString;.hmac$okio:(Ljava/lang/String;Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16c2d8.  v0:= "algorithm" @kind object;
  #L16c2dc.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c2e2.  v0:= "key" @kind object;
  #L16c2e6.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c2ec.  call temp:= `getInstance`(v6) @signature `Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;` @kind static;
  #L16c2f2.  v0:= temp @kind object;
  #L16c2f4.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L16c2f8.  call temp:= `toByteArray`(v7) @signature `Lokio/ByteString;.toByteArray:()[B` @kind virtual;
  #L16c2fe.  v7:= temp @kind object;
  #L16c300.  call `<init>`(v1, v7, v6) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L16c306.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L16c30c.  call temp:= `getSegments$okio`(v5) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c312.  v6:= temp @kind object;
  #L16c314.  v6:= length @variable v6;
  #L16c316.  v7:= 0I;
  #L16c318.  v1:= 0I;
  #L16c31a.  if v7 >= v6 then goto L16c358;
  #L16c31e.  call temp:= `getDirectory$okio`(v5) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c324.  v2:= temp @kind object;
  #L16c326.  v3:= v6 + v7 @kind int;
  #L16c32a.  v2:= v2[v3];
  #L16c32e.  call temp:= `getDirectory$okio`(v5) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c334.  v3:= temp @kind object;
  #L16c336.  v3:= v3[v7];
  #L16c33a.  call temp:= `getSegments$okio`(v5) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c340.  v4:= temp @kind object;
  #L16c342.  v4:= v4[v7] @kind object;
  #L16c346.  v1:= v3 - v1 @kind int;
  #L16c34a.  call `update`(v0, v4, v2, v1) @signature `Ljavax/crypto/Mac;.update:([BII)V` @kind virtual;
  #L16c350.  v7:= v7 + 1;
  #L16c354.  v1:= v3;
  #L16c356.  goto L16c31a;
  #L16c358.  v6:= new `okio.ByteString`;
  #L16c35c.  call temp:= `doFinal`(v0) @signature `Ljavax/crypto/Mac;.doFinal:()[B` @kind virtual;
  #L16c362.  v7:= temp @kind object;
  #L16c364.  v0:= "mac.doFinal()" @kind object;
  #L16c368.  call `checkNotNullExpressionValue`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c36e.  call `<init>`(v6, v7) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L16c374.  return v6 @kind object;
  #L16c376.  v6:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L16c378.  v7:= new `java.lang.IllegalArgumentException`;
  #L16c37c.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16c382.  throw v7;
  catch `java.security.InvalidKeyException` @[L16c2ec..L16c374] goto L16c376;
}
procedure `int` `indexOf`(`okio.SegmentedByteString` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lokio/SegmentedByteString;.indexOf:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16c0c8.  v0:= "other" @kind object;
  #L16c0cc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c0d2.  call temp:= `a`(v1) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @kind direct;
  #L16c0d8.  v0:= temp @kind object;
  #L16c0da.  call temp:= `indexOf`(v0, v2, v3) @signature `Lokio/ByteString;.indexOf:([BI)I` @kind virtual;
  #L16c0e0.  v2:= temp;
  #L16c0e2.  return v2;
}
procedure `byte`[] `internalArray$okio`(`okio.SegmentedByteString` v1 @kind this) @signature `Lokio/SegmentedByteString;.internalArray$okio:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16bf6c.  call temp:= `toByteArray`(v1) @signature `Lokio/SegmentedByteString;.toByteArray:()[B` @kind virtual;
  #L16bf72.  v0:= temp @kind object;
  #L16bf74.  return v0 @kind object;
}
procedure `byte` `internalGet$okio`(`okio.SegmentedByteString` v7 @kind this, `int` v8 ) @signature `Lokio/SegmentedByteString;.internalGet$okio:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16bee4.  call temp:= `getDirectory$okio`(v7) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16beea.  v0:= temp @kind object;
  #L16beec.  call temp:= `getSegments$okio`(v7) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16bef2.  v1:= temp @kind object;
  #L16bef4.  v1:= length @variable v1;
  #L16bef6.  v1:= v1 + -1;
  #L16befa.  v0:= v0[v1];
  #L16befe.  v1:= (`long`) v0 @kind i2l;
  #L16bf00.  v3:= (`long`) v8 @kind i2l;
  #L16bf02.  v5:= 1L;
  #L16bf06.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L16bf0c.  call temp:= `segment`(v7, v8) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L16bf12.  v0:= temp;
  #L16bf14.  if v0 != 0 then goto L16bf1c;
  #L16bf18.  v1:= 0I;
  #L16bf1a.  goto L16bf2c;
  #L16bf1c.  call temp:= `getDirectory$okio`(v7) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16bf22.  v1:= temp @kind object;
  #L16bf24.  v2:= v0 + -1;
  #L16bf28.  v1:= v1[v2];
  #L16bf2c.  call temp:= `getDirectory$okio`(v7) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16bf32.  v2:= temp @kind object;
  #L16bf34.  call temp:= `getSegments$okio`(v7) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16bf3a.  v3:= temp @kind object;
  #L16bf3c.  v3:= length @variable v3;
  #L16bf3e.  v3:= v3 + v0 @kind int;
  #L16bf40.  v2:= v2[v3];
  #L16bf44.  call temp:= `getSegments$okio`(v7) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16bf4a.  v3:= temp @kind object;
  #L16bf4c.  v0:= v3[v0] @kind object;
  #L16bf50.  v8:= v8 - v1 @kind int;
  #L16bf52.  v8:= v8 + v2 @kind int;
  #L16bf54.  v8:= v0[v8] @kind byte;
  #L16bf58.  return v8;
}
procedure `int` `lastIndexOf`(`okio.SegmentedByteString` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lokio/SegmentedByteString;.lastIndexOf:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16c0f4.  v0:= "other" @kind object;
  #L16c0f8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c0fe.  call temp:= `a`(v1) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @kind direct;
  #L16c104.  v0:= temp @kind object;
  #L16c106.  call temp:= `lastIndexOf`(v0, v2, v3) @signature `Lokio/ByteString;.lastIndexOf:([BI)I` @kind virtual;
  #L16c10c.  v2:= temp;
  #L16c10e.  return v2;
}
procedure `boolean` `rangeEquals`(`okio.SegmentedByteString` v6 @kind this, `int` v7 , `okio.ByteString` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/SegmentedByteString;.rangeEquals:(ILokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16be2c.  v0:= "other" @kind object;
  #L16be30.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16be36.  v0:= 0I;
  #L16be38.  if v7 < 0 then goto L16bed0;
  #L16be3c.  call temp:= `size`(v6) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16be42.  v1:= temp;
  #L16be44.  v1:= v1 - v10 @kind int;
  #L16be46.  if v7 <= v1 then goto L16be4c;
  #L16be4a.  goto L16bed0;
  #L16be4c.  v10:= v10 + v7 @kind int;
  #L16be4e.  call temp:= `segment`(v6, v7) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L16be54.  v1:= temp;
  #L16be56.  if v7 >= v10 then goto L16bece;
  #L16be5a.  if v1 != 0 then goto L16be62;
  #L16be5e.  v2:= 0I;
  #L16be60.  goto L16be72;
  #L16be62.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16be68.  v2:= temp @kind object;
  #L16be6a.  v3:= v1 + -1;
  #L16be6e.  v2:= v2[v3];
  #L16be72.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16be78.  v3:= temp @kind object;
  #L16be7a.  v3:= v3[v1];
  #L16be7e.  v3:= v3 - v2 @kind int;
  #L16be80.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16be86.  v4:= temp @kind object;
  #L16be88.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16be8e.  v5:= temp @kind object;
  #L16be90.  v5:= length @variable v5;
  #L16be92.  v5:= v5 + v1 @kind int;
  #L16be94.  v4:= v4[v5];
  #L16be98.  v3:= v3 + v2 @kind int;
  #L16be9a.  call temp:= `min`(v10, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L16bea0.  v3:= temp;
  #L16bea2.  v3:= v3 - v7 @kind int;
  #L16bea4.  v2:= v7 - v2 @kind int;
  #L16bea8.  v4:= v4 + v2 @kind int;
  #L16beaa.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16beb0.  v2:= temp @kind object;
  #L16beb2.  v2:= v2[v1] @kind object;
  #L16beb6.  call temp:= `rangeEquals`(v8, v9, v2, v4, v3) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L16bebc.  v2:= temp;
  #L16bebe.  if v2 != 0 then goto L16bec4;
  #L16bec2.  goto L16bed0;
  #L16bec4.  v9:= v9 + v3 @kind int;
  #L16bec6.  v7:= v7 + v3 @kind int;
  #L16bec8.  v1:= v1 + 1;
  #L16becc.  goto L16be56;
  #L16bece.  v0:= 1I;
  #L16bed0.  return v0;
}
procedure `boolean` `rangeEquals`(`okio.SegmentedByteString` v6 @kind this, `int` v7 , `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/SegmentedByteString;.rangeEquals:(I[BII)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16bd68.  v0:= "other" @kind object;
  #L16bd6c.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16bd72.  v0:= 0I;
  #L16bd74.  if v7 < 0 then goto L16be18;
  #L16bd78.  call temp:= `size`(v6) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16bd7e.  v1:= temp;
  #L16bd80.  v1:= v1 - v10 @kind int;
  #L16bd82.  if v7 > v1 then goto L16be18;
  #L16bd86.  if v9 < 0 then goto L16be18;
  #L16bd8a.  v1:= length @variable v8;
  #L16bd8c.  v1:= v1 - v10 @kind int;
  #L16bd8e.  if v9 <= v1 then goto L16bd94;
  #L16bd92.  goto L16be18;
  #L16bd94.  v10:= v10 + v7 @kind int;
  #L16bd96.  call temp:= `segment`(v6, v7) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L16bd9c.  v1:= temp;
  #L16bd9e.  if v7 >= v10 then goto L16be16;
  #L16bda2.  if v1 != 0 then goto L16bdaa;
  #L16bda6.  v2:= 0I;
  #L16bda8.  goto L16bdba;
  #L16bdaa.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16bdb0.  v2:= temp @kind object;
  #L16bdb2.  v3:= v1 + -1;
  #L16bdb6.  v2:= v2[v3];
  #L16bdba.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16bdc0.  v3:= temp @kind object;
  #L16bdc2.  v3:= v3[v1];
  #L16bdc6.  v3:= v3 - v2 @kind int;
  #L16bdc8.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16bdce.  v4:= temp @kind object;
  #L16bdd0.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16bdd6.  v5:= temp @kind object;
  #L16bdd8.  v5:= length @variable v5;
  #L16bdda.  v5:= v5 + v1 @kind int;
  #L16bddc.  v4:= v4[v5];
  #L16bde0.  v3:= v3 + v2 @kind int;
  #L16bde2.  call temp:= `min`(v10, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L16bde8.  v3:= temp;
  #L16bdea.  v3:= v3 - v7 @kind int;
  #L16bdec.  v2:= v7 - v2 @kind int;
  #L16bdf0.  v4:= v4 + v2 @kind int;
  #L16bdf2.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16bdf8.  v2:= temp @kind object;
  #L16bdfa.  v2:= v2[v1] @kind object;
  #L16bdfe.  call temp:= `arrayRangeEquals`(v2, v4, v8, v9, v3) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L16be04.  v2:= temp;
  #L16be06.  if v2 != 0 then goto L16be0c;
  #L16be0a.  goto L16be18;
  #L16be0c.  v9:= v9 + v3 @kind int;
  #L16be0e.  v7:= v7 + v3 @kind int;
  #L16be10.  v1:= v1 + 1;
  #L16be14.  goto L16bd9e;
  #L16be16.  v0:= 1I;
  #L16be18.  return v0;
}
procedure `java.lang.String` `string`(`okio.SegmentedByteString` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lokio/SegmentedByteString;.string:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16c1c8.  v0:= "charset" @kind object;
  #L16c1cc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c1d2.  call temp:= `a`(v1) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @kind direct;
  #L16c1d8.  v0:= temp @kind object;
  #L16c1da.  call temp:= `string`(v0, v2) @signature `Lokio/ByteString;.string:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L16c1e0.  v2:= temp @kind object;
  #L16c1e2.  return v2 @kind object;
}
procedure `okio.ByteString` `substring`(`okio.SegmentedByteString` v11 @kind this, `int` v12 , `int` v13 ) @signature `Lokio/SegmentedByteString;.substring:(II)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L16c3a4.  v0:= 0I;
  #L16c3a6.  v1:= 1I;
  #L16c3a8.  if v12 < 0 then goto L16c3b0;
  #L16c3ac.  v2:= 1I;
  #L16c3ae.  goto L16c3b2;
  #L16c3b0.  v2:= 0I;
  #L16c3b2.  if v2 == 0 then goto L16c54a;
  #L16c3b6.  call temp:= `size`(v11) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16c3bc.  v2:= temp;
  #L16c3be.  if v13 > v2 then goto L16c3c6;
  #L16c3c2.  v2:= 1I;
  #L16c3c4.  goto L16c3c8;
  #L16c3c6.  v2:= 0I;
  #L16c3c8.  v3:= "endIndex=" @kind object;
  #L16c3cc.  if v2 == 0 then goto L16c4f6;
  #L16c3d0.  v2:= v13 - v12 @kind int;
  #L16c3d4.  if v2 < 0 then goto L16c3dc;
  #L16c3d8.  v4:= 1I;
  #L16c3da.  goto L16c3de;
  #L16c3dc.  v4:= 0I;
  #L16c3de.  if v4 == 0 then goto L16c4b4;
  #L16c3e2.  if v12 != 0 then goto L16c3f6;
  #L16c3e6.  call temp:= `size`(v11) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16c3ec.  v3:= temp;
  #L16c3ee.  if v13 != v3 then goto L16c3f6;
  #L16c3f2.  v12:= v11 @kind object;
  #L16c3f4.  goto L16c4b2;
  #L16c3f6.  if v12 != v13 then goto L16c400;
  #L16c3fa.  v12:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L16c3fe.  goto L16c4b2;
  #L16c400.  call temp:= `segment`(v11, v12) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L16c406.  v3:= temp;
  #L16c408.  v13:= v13 - v1 @kind int;
  #L16c40a.  call temp:= `segment`(v11, v13) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L16c410.  v13:= temp;
  #L16c412.  call temp:= `getSegments$okio`(v11) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c418.  v4:= temp @kind object;
  #L16c41a.  v5:= v13 + 1;
  #L16c41e.  call temp:= `copyOfRange`(v4, v3, v5) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;` @kind static;
  #L16c424.  v4:= temp @kind object;
  #L16c426.  v4:= (`byte`[][]) v4 @kind object;
  #L16c42a.  v5:= length @variable v4;
  #L16c42c.  v5:= v5 * 2;
  #L16c430.  v5:= new `int`[v5];
  #L16c434.  if v3 > v13 then goto L16c486;
  #L16c438.  v7:= v3;
  #L16c43a.  v6:= 0I;
  #L16c43c.  call temp:= `getDirectory$okio`(v11) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c442.  v8:= temp @kind object;
  #L16c444.  v8:= v8[v7];
  #L16c448.  v8:= v8 - v12 @kind int;
  #L16c44a.  call temp:= `min`(v8, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L16c450.  v8:= temp;
  #L16c452.  v5[v6]:= v8;
  #L16c456.  v8:= v6 + 1;
  #L16c45a.  v9:= length @variable v4;
  #L16c45c.  v6:= v6 + v9 @kind int;
  #L16c45e.  call temp:= `getDirectory$okio`(v11) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c464.  v9:= temp @kind object;
  #L16c466.  call temp:= `getSegments$okio`(v11) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c46c.  v10:= temp @kind object;
  #L16c46e.  v10:= length @variable v10;
  #L16c470.  v10:= v10 + v7 @kind int;
  #L16c472.  v9:= v9[v10];
  #L16c476.  v5[v6]:= v9;
  #L16c47a.  if v7 == v13 then goto L16c486;
  #L16c47e.  v7:= v7 + 1;
  #L16c482.  v6:= v8;
  #L16c484.  goto L16c43c;
  #L16c486.  if v3 != 0 then goto L16c48c;
  #L16c48a.  goto L16c49a;
  #L16c48c.  call temp:= `getDirectory$okio`(v11) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c492.  v13:= temp @kind object;
  #L16c494.  v3:= v3 - v1 @kind int;
  #L16c496.  v0:= v13[v3];
  #L16c49a.  v13:= length @variable v4;
  #L16c49c.  v1:= v5[v13];
  #L16c4a0.  v12:= v12 - v0 @kind int;
  #L16c4a2.  v1:= v1 + v12 @kind int;
  #L16c4a4.  v5[v13]:= v1;
  #L16c4a8.  v12:= new `okio.SegmentedByteString`;
  #L16c4ac.  call `<init>`(v12, v4, v5) @signature `Lokio/SegmentedByteString;.<init>:([[B[I)V` @kind direct;
  #L16c4b2.  return v12 @kind object;
  #L16c4b4.  v0:= new `java.lang.StringBuilder`;
  #L16c4b8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16c4be.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c4c4.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c4ca.  v13:= " < beginIndex=" @kind object;
  #L16c4ce.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c4d4.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c4da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c4e0.  v12:= temp @kind object;
  #L16c4e2.  v13:= new `java.lang.IllegalArgumentException`;
  #L16c4e6.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c4ec.  v12:= temp @kind object;
  #L16c4ee.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16c4f4.  throw v13;
  #L16c4f6.  v12:= new `java.lang.StringBuilder`;
  #L16c4fa.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16c500.  call temp:= `append`(v12, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c506.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c50c.  v13:= " > length(" @kind object;
  #L16c510.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c516.  call temp:= `size`(v11) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16c51c.  v13:= temp;
  #L16c51e.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c524.  v13:= 41I;
  #L16c528.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c52e.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c534.  v12:= temp @kind object;
  #L16c536.  v13:= new `java.lang.IllegalArgumentException`;
  #L16c53a.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c540.  v12:= temp @kind object;
  #L16c542.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16c548.  throw v13;
  #L16c54a.  v13:= new `java.lang.StringBuilder`;
  #L16c54e.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16c554.  v0:= "beginIndex=" @kind object;
  #L16c558.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c55e.  call temp:= `append`(v13, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c564.  v12:= " < 0" @kind object;
  #L16c568.  call temp:= `append`(v13, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c56e.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c574.  v12:= temp @kind object;
  #L16c576.  v13:= new `java.lang.IllegalArgumentException`;
  #L16c57a.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c580.  v12:= temp @kind object;
  #L16c582.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16c588.  throw v13;
}
procedure `okio.ByteString` `toAsciiLowercase`(`okio.SegmentedByteString` v1 @kind this) @signature `Lokio/SegmentedByteString;.toAsciiLowercase:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16c59c.  call temp:= `a`(v1) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @kind direct;
  #L16c5a2.  v0:= temp @kind object;
  #L16c5a4.  call temp:= `toAsciiLowercase`(v0) @signature `Lokio/ByteString;.toAsciiLowercase:()Lokio/ByteString;` @kind virtual;
  #L16c5aa.  v0:= temp @kind object;
  #L16c5ac.  return v0 @kind object;
}
procedure `okio.ByteString` `toAsciiUppercase`(`okio.SegmentedByteString` v1 @kind this) @signature `Lokio/SegmentedByteString;.toAsciiUppercase:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16c5c0.  call temp:= `a`(v1) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @kind direct;
  #L16c5c6.  v0:= temp @kind object;
  #L16c5c8.  call temp:= `toAsciiUppercase`(v0) @signature `Lokio/ByteString;.toAsciiUppercase:()Lokio/ByteString;` @kind virtual;
  #L16c5ce.  v0:= temp @kind object;
  #L16c5d0.  return v0 @kind object;
}
procedure `byte`[] `toByteArray`(`okio.SegmentedByteString` v9 @kind this) @signature `Lokio/SegmentedByteString;.toByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L16bf88.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16bf8e.  v0:= temp;
  #L16bf90.  v0:= new `byte`[v0];
  #L16bf94.  call temp:= `getSegments$okio`(v9) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16bf9a.  v1:= temp @kind object;
  #L16bf9c.  v1:= length @variable v1;
  #L16bf9e.  v2:= 0I;
  #L16bfa0.  v3:= 0I;
  #L16bfa2.  v4:= 0I;
  #L16bfa4.  if v2 >= v1 then goto L16bfe8;
  #L16bfa8.  call temp:= `getDirectory$okio`(v9) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16bfae.  v5:= temp @kind object;
  #L16bfb0.  v6:= v1 + v2 @kind int;
  #L16bfb4.  v5:= v5[v6];
  #L16bfb8.  call temp:= `getDirectory$okio`(v9) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16bfbe.  v6:= temp @kind object;
  #L16bfc0.  v6:= v6[v2];
  #L16bfc4.  call temp:= `getSegments$okio`(v9) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16bfca.  v7:= temp @kind object;
  #L16bfcc.  v7:= v7[v2] @kind object;
  #L16bfd0.  v3:= v6 - v3 @kind int;
  #L16bfd4.  v8:= v5 + v3 @kind int;
  #L16bfd8.  call temp:= `copyInto`(v7, v0, v4, v5, v8) @signature `Lkotlin/collections/ArraysKt;.copyInto:([B[BIII)[B` @kind static;
  #L16bfde.  v4:= v4 + v3 @kind int;
  #L16bfe0.  v2:= v2 + 1;
  #L16bfe4.  v3:= v6;
  #L16bfe6.  goto L16bfa4;
  #L16bfe8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.SegmentedByteString` v1 @kind this) @signature `Lokio/SegmentedByteString;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16c1f4.  call temp:= `a`(v1) @signature `Lokio/SegmentedByteString;.a:()Lokio/ByteString;` @kind direct;
  #L16c1fa.  v0:= temp @kind object;
  #L16c1fc.  call temp:= `toString`(v0) @signature `Lokio/ByteString;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c202.  v0:= temp @kind object;
  #L16c204.  return v0 @kind object;
}
procedure `void` `write`(`okio.SegmentedByteString` v6 @kind this, `java.io.OutputStream` v7 @kind object) @signature `Lokio/SegmentedByteString;.write:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16c734.  v0:= "out" @kind object;
  #L16c738.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c73e.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c744.  v0:= temp @kind object;
  #L16c746.  v0:= length @variable v0;
  #L16c748.  v1:= 0I;
  #L16c74a.  v2:= 0I;
  #L16c74c.  if v1 >= v0 then goto L16c78a;
  #L16c750.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c756.  v3:= temp @kind object;
  #L16c758.  v4:= v0 + v1 @kind int;
  #L16c75c.  v3:= v3[v4];
  #L16c760.  call temp:= `getDirectory$okio`(v6) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c766.  v4:= temp @kind object;
  #L16c768.  v4:= v4[v1];
  #L16c76c.  call temp:= `getSegments$okio`(v6) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c772.  v5:= temp @kind object;
  #L16c774.  v5:= v5[v1] @kind object;
  #L16c778.  v2:= v4 - v2 @kind int;
  #L16c77c.  call `write`(v7, v5, v3, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L16c782.  v1:= v1 + 1;
  #L16c786.  v2:= v4;
  #L16c788.  goto L16c74c;
  #L16c78a.  return @kind void;
}
procedure `void` `write$okio`(`okio.SegmentedByteString` v10 @kind this, `okio.Buffer` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lokio/SegmentedByteString;.write$okio:(Lokio/Buffer;II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L16c648.  v0:= "buffer" @kind object;
  #L16c64c.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16c652.  v13:= v13 + v12 @kind int;
  #L16c654.  call temp:= `segment`(v10, v12) @signature `Lokio/internal/SegmentedByteStringKt;.segment:(Lokio/SegmentedByteString;I)I` @kind static;
  #L16c65a.  v0:= temp;
  #L16c65c.  if v12 >= v13 then goto L16c706;
  #L16c660.  if v0 != 0 then goto L16c668;
  #L16c664.  v1:= 0I;
  #L16c666.  goto L16c678;
  #L16c668.  call temp:= `getDirectory$okio`(v10) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c66e.  v1:= temp @kind object;
  #L16c670.  v2:= v0 + -1;
  #L16c674.  v1:= v1[v2];
  #L16c678.  call temp:= `getDirectory$okio`(v10) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c67e.  v2:= temp @kind object;
  #L16c680.  v2:= v2[v0];
  #L16c684.  v2:= v2 - v1 @kind int;
  #L16c686.  call temp:= `getDirectory$okio`(v10) @signature `Lokio/SegmentedByteString;.getDirectory$okio:()[I` @kind virtual;
  #L16c68c.  v3:= temp @kind object;
  #L16c68e.  call temp:= `getSegments$okio`(v10) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c694.  v4:= temp @kind object;
  #L16c696.  v4:= length @variable v4;
  #L16c698.  v4:= v4 + v0 @kind int;
  #L16c69a.  v3:= v3[v4];
  #L16c69e.  v2:= v2 + v1 @kind int;
  #L16c6a0.  call temp:= `min`(v13, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L16c6a6.  v2:= temp;
  #L16c6a8.  v2:= v2 - v12 @kind int;
  #L16c6aa.  v1:= v12 - v1 @kind int;
  #L16c6ae.  v6:= v3 + v1 @kind int;
  #L16c6b2.  call temp:= `getSegments$okio`(v10) @signature `Lokio/SegmentedByteString;.getSegments$okio:()[[B` @kind virtual;
  #L16c6b8.  v1:= temp @kind object;
  #L16c6ba.  v5:= v1[v0] @kind object;
  #L16c6be.  v1:= new `okio.Segment`;
  #L16c6c2.  v7:= v6 + v2 @kind int;
  #L16c6c6.  v8:= 1I;
  #L16c6c8.  v9:= 0I;
  #L16c6ca.  v4:= v1 @kind object;
  #L16c6cc.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lokio/Segment;.<init>:([BIIZZ)V` @kind direct;
  #L16c6d2.  v3:= v11.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L16c6d6.  if v3 != 0 then goto L16c6e8;
  #L16c6da.  v1.`okio.Segment.prev` @type ^`okio.Segment` := v1 @kind object;
  #L16c6de.  v1.`okio.Segment.next` @type ^`okio.Segment` := v1 @kind object;
  #L16c6e2.  v11.`okio.Buffer.head` @type ^`okio.Segment` := v1 @kind object;
  #L16c6e6.  goto L16c6fe;
  #L16c6e8.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L16c6ee.  v3:= v3.`okio.Segment.prev` @type ^`okio.Segment` @kind object;
  #L16c6f2.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L16c6f8.  call temp:= `push`(v3, v1) @signature `Lokio/Segment;.push:(Lokio/Segment;)Lokio/Segment;` @kind virtual;
  #L16c6fe.  v12:= v12 + v2 @kind int;
  #L16c700.  v0:= v0 + 1;
  #L16c704.  goto L16c65c;
  #L16c706.  call temp:= `size`(v11) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16c70c.  v12:= temp @kind wide;
  #L16c70e.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16c714.  v0:= temp;
  #L16c716.  v0:= (`long`) v0 @kind i2l;
  #L16c718.  v12:= v12 + v0 @kind long;
  #L16c71a.  call `setSize$okio`(v11, v12) @signature `Lokio/Buffer;.setSize$okio:(J)V` @kind virtual;
  #L16c720.  return @kind void;
}
