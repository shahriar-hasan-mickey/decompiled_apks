record `okio.Pipe$source$1` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Source` @kind interface {
  `okio.Timeout` `okio.Pipe$source$1.a` @AccessFlag PRIVATE_FINAL;
  `okio.Pipe` `okio.Pipe$source$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Pipe$source$1` v0 @kind this, `okio.Pipe` v1 @kind object) @signature `Lokio/Pipe$source$1;.<init>:(Lokio/Pipe;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L169610.  v0.`okio.Pipe$source$1.b` @type ^`okio.Pipe` := v1 @kind object;
  #L169614.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16961a.  v1:= new `okio.Timeout`;
  #L16961e.  call `<init>`(v1) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L169624.  v0.`okio.Pipe$source$1.a` @type ^`okio.Timeout` := v1 @kind object;
  #L169628.  return @kind void;
}
procedure `void` `close`(`okio.Pipe$source$1` v3 @kind this) @signature `Lokio/Pipe$source$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L16963c.  v0:= v3.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L169640.  call temp:= `getBuffer$okio`(v0) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L169646.  v0:= temp @kind object;
  #L169648.  @monitorenter v0
  #L16964a.  v1:= v3.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L16964e.  v2:= 1I;
  #L169650.  call `setSourceClosed$okio`(v1, v2) @signature `Lokio/Pipe;.setSourceClosed$okio:(Z)V` @kind virtual;
  #L169656.  v1:= v3.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L16965a.  call temp:= `getBuffer$okio`(v1) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L169660.  v1:= temp @kind object;
  #L169662.  if v1 == 0 then goto L169674;
  #L169666.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L16966c.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L169670.  @monitorexit v0
  #L169672.  return @kind void;
  #L169674.  v1:= new `java.lang.NullPointerException`;
  #L169678.  v2:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L16967c.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L169682.  throw v1;
  #L169684.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L169686.  @monitorexit v0
  #L169688.  throw v1;
  catch `java.lang.Throwable` @[L16964a..L169670] goto L169684;
  catch `java.lang.Throwable` @[L169674..L169684] goto L169684;
}
procedure `long` `read`(`okio.Pipe$source$1` v6 @kind this, `okio.Buffer` v7 @kind object, `long` v8 ) @signature `Lokio/Pipe$source$1;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1694b4.  v0:= "sink" @kind object;
  #L1694b8.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1694be.  v0:= v6.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L1694c2.  call temp:= `getBuffer$okio`(v0) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1694c8.  v0:= temp @kind object;
  #L1694ca.  @monitorenter v0
  #L1694cc.  v1:= v6.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L1694d0.  call temp:= `getSourceClosed$okio`(v1) @signature `Lokio/Pipe;.getSourceClosed$okio:()Z` @kind virtual;
  #L1694d6.  v1:= temp;
  #L1694d8.  v1:= v1 ^~ 1;
  #L1694dc.  if v1 == 0 then goto L1695ae;
  #L1694e0.  v1:= v6.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L1694e4.  call temp:= `getCanceled$okio`(v1) @signature `Lokio/Pipe;.getCanceled$okio:()Z` @kind virtual;
  #L1694ea.  v1:= temp;
  #L1694ec.  if v1 != 0 then goto L16959e;
  #L1694f0.  v1:= v6.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L1694f4.  call temp:= `getBuffer$okio`(v1) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1694fa.  v1:= temp @kind object;
  #L1694fc.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L169502.  v1:= temp @kind wide;
  #L169504.  v3:= 0L;
  #L169508.  v5:= lcmp(v1, v3);
  #L16950c.  if v5 != 0 then goto L169560;
  #L169510.  v1:= v6.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L169514.  call temp:= `getSinkClosed$okio`(v1) @signature `Lokio/Pipe;.getSinkClosed$okio:()Z` @kind virtual;
  #L16951a.  v1:= temp;
  #L16951c.  if v1 == 0 then goto L169528;
  #L169520.  v7:= -1L;
  #L169524.  @monitorexit v0
  #L169526.  return v7 @kind wide;
  #L169528.  v1:= v6.`okio.Pipe$source$1.a` @type ^`okio.Timeout` @kind object;
  #L16952c.  v2:= v6.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L169530.  call temp:= `getBuffer$okio`(v2) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L169536.  v2:= temp @kind object;
  #L169538.  call `waitUntilNotified`(v1, v2) @signature `Lokio/Timeout;.waitUntilNotified:(Ljava/lang/Object;)V` @kind virtual;
  #L16953e.  v1:= v6.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L169542.  call temp:= `getCanceled$okio`(v1) @signature `Lokio/Pipe;.getCanceled$okio:()Z` @kind virtual;
  #L169548.  v1:= temp;
  #L16954a.  if v1 != 0 then goto L169550;
  #L16954e.  goto L1694f0;
  #L169550.  v7:= new `java.io.IOException`;
  #L169554.  v8:= "canceled" @kind object;
  #L169558.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16955e.  throw v7;
  #L169560.  v1:= v6.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L169564.  call temp:= `getBuffer$okio`(v1) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L16956a.  v1:= temp @kind object;
  #L16956c.  call temp:= `read`(v1, v7, v8) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L169572.  v7:= temp @kind wide;
  #L169574.  v9:= v6.`okio.Pipe$source$1.b` @type ^`okio.Pipe` @kind object;
  #L169578.  call temp:= `getBuffer$okio`(v9) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L16957e.  v9:= temp @kind object;
  #L169580.  if v9 == 0 then goto L16958e;
  #L169584.  call `notifyAll`(v9) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L16958a.  @monitorexit v0
  #L16958c.  return v7 @kind wide;
  #L16958e.  v7:= new `java.lang.NullPointerException`;
  #L169592.  v8:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L169596.  call `<init>`(v7, v8) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16959c.  throw v7;
  #L16959e.  v7:= new `java.io.IOException`;
  #L1695a2.  v8:= "canceled" @kind object;
  #L1695a6.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1695ac.  throw v7;
  #L1695ae.  v7:= "closed" @kind object;
  #L1695b2.  v8:= new `java.lang.IllegalStateException`;
  #L1695b6.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1695bc.  v7:= temp @kind object;
  #L1695be.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1695c4.  throw v8;
  #L1695c6.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1695c8.  @monitorexit v0
  #L1695ca.  throw v7;
  catch `java.lang.Throwable` @[L1694cc..L16951c] goto L1695c6;
  catch `java.lang.Throwable` @[L169528..L16958a] goto L1695c6;
  catch `java.lang.Throwable` @[L16958e..L1695c6] goto L1695c6;
}
procedure `okio.Timeout` `timeout`(`okio.Pipe$source$1` v1 @kind this) @signature `Lokio/Pipe$source$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1695f8.  v0:= v1.`okio.Pipe$source$1.a` @type ^`okio.Timeout` @kind object;
  #L1695fc.  return v0 @kind object;
}
