record `okio.HashingSink` @kind class @AccessFlag PUBLIC_FINAL extends `okio.ForwardingSink` @kind class {
  `java.security.MessageDigest` `okio.HashingSink.b` @AccessFlag PRIVATE_FINAL;
  `javax.crypto.Mac` `okio.HashingSink.c` @AccessFlag PRIVATE_FINAL;
}
global `okio.HashingSink$Companion` `@@okio.HashingSink.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/HashingSink;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L167144.  v0:= new `okio.HashingSink$Companion`;
  #L167148.  v1:= 0I;
  #L16714a.  call `<init>`(v0, v1) @signature `Lokio/HashingSink$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L167150.  `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` := v0 @kind object;
  #L167154.  return @kind void;
}
procedure `void` `<init>`(`okio.HashingSink` v1 @kind this, `okio.Sink` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokio/HashingSink;.<init>:(Lokio/Sink;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L167168.  v0:= "sink" @kind object;
  #L16716c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L167172.  v0:= "algorithm" @kind object;
  #L167176.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16717c.  call `<init>`(v1, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L167182.  call temp:= `getInstance`(v3) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L167188.  v2:= temp @kind object;
  #L16718a.  v1.`okio.HashingSink.b` @type ^`java.security.MessageDigest` := v2 @kind object;
  #L16718e.  v2:= 0I;
  #L167190.  v1.`okio.HashingSink.c` @type ^`javax.crypto.Mac` := v2 @kind object;
  #L167194.  return @kind void;
}
procedure `void` `<init>`(`okio.HashingSink` v1 @kind this, `okio.Sink` v2 @kind object, `okio.ByteString` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokio/HashingSink;.<init>:(Lokio/Sink;Lokio/ByteString;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1671a8.  v0:= "sink" @kind object;
  #L1671ac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1671b2.  v0:= "key" @kind object;
  #L1671b6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1671bc.  v0:= "algorithm" @kind object;
  #L1671c0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1671c6.  call `<init>`(v1, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L1671cc.  call temp:= `getInstance`(v4) @signature `Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;` @kind static;
  #L1671d2.  v2:= temp @kind object;
  #L1671d4.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L1671d8.  call temp:= `toByteArray`(v3) @signature `Lokio/ByteString;.toByteArray:()[B` @kind virtual;
  #L1671de.  v3:= temp @kind object;
  #L1671e0.  call `<init>`(v0, v3, v4) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1671e6.  call `init`(v2, v0) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L1671ec.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1671f0.  v1.`okio.HashingSink.c` @type ^`javax.crypto.Mac` := v2 @kind object;
  #L1671f4.  v2:= 0I;
  #L1671f6.  v1.`okio.HashingSink.b` @type ^`java.security.MessageDigest` := v2 @kind object;
  #L1671fa.  return @kind void;
  #L1671fc.  v2:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L1671fe.  v3:= new `java.lang.IllegalArgumentException`;
  #L167202.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L167208.  throw v3;
  catch `java.security.InvalidKeyException` @[L1671cc..L1671fa] goto L1671fc;
}
procedure `okio.HashingSink` `hmacSha1`(`okio.Sink` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokio/HashingSink;.hmacSha1:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L167064.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L167068.  call temp:= `hmacSha1`(v0, v1, v2) @signature `Lokio/HashingSink$Companion;.hmacSha1:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @kind virtual;
  #L16706e.  v1:= temp @kind object;
  #L167070.  return v1 @kind object;
}
procedure `okio.HashingSink` `hmacSha256`(`okio.Sink` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokio/HashingSink;.hmacSha256:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L167084.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L167088.  call temp:= `hmacSha256`(v0, v1, v2) @signature `Lokio/HashingSink$Companion;.hmacSha256:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @kind virtual;
  #L16708e.  v1:= temp @kind object;
  #L167090.  return v1 @kind object;
}
procedure `okio.HashingSink` `hmacSha512`(`okio.Sink` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokio/HashingSink;.hmacSha512:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1670a4.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L1670a8.  call temp:= `hmacSha512`(v0, v1, v2) @signature `Lokio/HashingSink$Companion;.hmacSha512:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @kind virtual;
  #L1670ae.  v1:= temp @kind object;
  #L1670b0.  return v1 @kind object;
}
procedure `okio.HashingSink` `md5`(`okio.Sink` v1 @kind object) @signature `Lokio/HashingSink;.md5:(Lokio/Sink;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1670c4.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L1670c8.  call temp:= `md5`(v0, v1) @signature `Lokio/HashingSink$Companion;.md5:(Lokio/Sink;)Lokio/HashingSink;` @kind virtual;
  #L1670ce.  v1:= temp @kind object;
  #L1670d0.  return v1 @kind object;
}
procedure `okio.HashingSink` `sha1`(`okio.Sink` v1 @kind object) @signature `Lokio/HashingSink;.sha1:(Lokio/Sink;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1670e4.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L1670e8.  call temp:= `sha1`(v0, v1) @signature `Lokio/HashingSink$Companion;.sha1:(Lokio/Sink;)Lokio/HashingSink;` @kind virtual;
  #L1670ee.  v1:= temp @kind object;
  #L1670f0.  return v1 @kind object;
}
procedure `okio.HashingSink` `sha256`(`okio.Sink` v1 @kind object) @signature `Lokio/HashingSink;.sha256:(Lokio/Sink;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L167104.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L167108.  call temp:= `sha256`(v0, v1) @signature `Lokio/HashingSink$Companion;.sha256:(Lokio/Sink;)Lokio/HashingSink;` @kind virtual;
  #L16710e.  v1:= temp @kind object;
  #L167110.  return v1 @kind object;
}
procedure `okio.HashingSink` `sha512`(`okio.Sink` v1 @kind object) @signature `Lokio/HashingSink;.sha512:(Lokio/Sink;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L167124.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L167128.  call temp:= `sha512`(v0, v1) @signature `Lokio/HashingSink$Companion;.sha512:(Lokio/Sink;)Lokio/HashingSink;` @kind virtual;
  #L16712e.  v1:= temp @kind object;
  #L167130.  return v1 @kind object;
}
procedure `okio.ByteString` `-deprecated_hash`(`okio.HashingSink` v1 @kind this) @signature `Lokio/HashingSink;.-deprecated_hash:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L166ffc.  call temp:= `hash`(v1) @signature `Lokio/HashingSink;.hash:()Lokio/ByteString;` @kind virtual;
  #L167002.  v0:= temp @kind object;
  #L167004.  return v0 @kind object;
}
procedure `okio.ByteString` `hash`(`okio.HashingSink` v3 @kind this) @signature `Lokio/HashingSink;.hash:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L167018.  v0:= v3.`okio.HashingSink.b` @type ^`java.security.MessageDigest` @kind object;
  #L16701c.  if v0 == 0 then goto L16702a;
  #L167020.  call temp:= `digest`(v0) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L167026.  v0:= temp @kind object;
  #L167028.  goto L16703c;
  #L16702a.  v0:= v3.`okio.HashingSink.c` @type ^`javax.crypto.Mac` @kind object;
  #L16702e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L167034.  call temp:= `doFinal`(v0) @signature `Ljavax/crypto/Mac;.doFinal:()[B` @kind virtual;
  #L16703a.  v0:= temp @kind object;
  #L16703c.  v1:= new `okio.ByteString`;
  #L167040.  v2:= "result" @kind object;
  #L167044.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16704a.  call `<init>`(v1, v0) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L167050.  return v1 @kind object;
}
procedure `void` `write`(`okio.HashingSink` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokio/HashingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16722c.  v0:= "source" @kind object;
  #L167230.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L167236.  call temp:= `size`(v8) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16723c.  v1:= temp @kind wide;
  #L16723e.  v3:= 0L;
  #L167242.  v5:= v9 @kind wide;
  #L167244.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L16724a.  v0:= v8.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L16724e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L167254.  v1:= 0L;
  #L167258.  v3:= lcmp(v1, v9);
  #L16725c.  if v3 >= 0 then goto L1672ba;
  #L167260.  v3:= v9 - v1 @kind long;
  #L167264.  v5:= v0.`okio.Segment.limit` @type ^`int`;
  #L167268.  v6:= v0.`okio.Segment.pos` @type ^`int`;
  #L16726c.  v5:= v5 - v6 @kind int;
  #L16726e.  v5:= (`long`) v5 @kind i2l;
  #L167270.  call temp:= `min`(v3, v5) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L167276.  v3:= temp @kind wide;
  #L167278.  v4:= (`int`) v3 @kind l2i;
  #L16727a.  v3:= v7.`okio.HashingSink.b` @type ^`java.security.MessageDigest` @kind object;
  #L16727e.  if v3 == 0 then goto L167292;
  #L167282.  v5:= v0.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L167286.  v6:= v0.`okio.Segment.pos` @type ^`int`;
  #L16728a.  call `update`(v3, v5, v6, v4) @signature `Ljava/security/MessageDigest;.update:([BII)V` @kind virtual;
  #L167290.  goto L1672aa;
  #L167292.  v3:= v7.`okio.HashingSink.c` @type ^`javax.crypto.Mac` @kind object;
  #L167296.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L16729c.  v5:= v0.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L1672a0.  v6:= v0.`okio.Segment.pos` @type ^`int`;
  #L1672a4.  call `update`(v3, v5, v6, v4) @signature `Ljavax/crypto/Mac;.update:([BII)V` @kind virtual;
  #L1672aa.  v3:= (`long`) v4 @kind i2l;
  #L1672ac.  v1:= v1 + v3 @kind long;
  #L1672ae.  v0:= v0.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L1672b2.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1672b8.  goto L167258;
  #L1672ba.  call `write`(v7, v8, v9) @signature `Lokio/ForwardingSink;.write:(Lokio/Buffer;J)V` @kind super;
  #L1672c0.  return @kind void;
}
