record `okio.RealBufferedSource` @kind class @AccessFlag PUBLIC_FINAL extends `okio.BufferedSource` @kind interface {
  `okio.Buffer` `okio.RealBufferedSource.bufferField` @AccessFlag PUBLIC_FINAL;
  `boolean` `okio.RealBufferedSource.closed` @AccessFlag PUBLIC;
  `okio.Source` `okio.RealBufferedSource.source` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okio.RealBufferedSource` v1 @kind this, `okio.Source` v2 @kind object) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16b864.  v0:= "source" @kind object;
  #L16b868.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b86e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16b874.  v1.`okio.RealBufferedSource.source` @type ^`okio.Source` := v2 @kind object;
  #L16b878.  v2:= new `okio.Buffer`;
  #L16b87c.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L16b882.  v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` := v2 @kind object;
  #L16b886.  return @kind void;
}
procedure `void` `getBuffer$annotations`() @signature `Lokio/RealBufferedSource;.getBuffer$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L16b8d0.  return @kind void;
}
procedure `okio.Buffer` `buffer`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.buffer:()Lokio/Buffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16b750.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b754.  return v0 @kind object;
}
procedure `void` `close`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16b898.  v0:= v1.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16b89c.  if v0 == 0 then goto L16b8a2;
  #L16b8a0.  goto L16b8bc;
  #L16b8a2.  v0:= 1I;
  #L16b8a4.  v1.`okio.RealBufferedSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L16b8a8.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16b8ac.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L16b8b2.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b8b6.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L16b8bc.  return @kind void;
}
procedure `boolean` `exhausted`(`okio.RealBufferedSource` v6 @kind this) @signature `Lokio/RealBufferedSource;.exhausted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16a86c.  v0:= v6.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16a870.  v1:= 1I;
  #L16a872.  v0:= v0 ^~ v1 @kind int;
  #L16a874.  if v0 == 0 then goto L16a8b0;
  #L16a878.  v0:= v6.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16a87c.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L16a882.  v0:= temp;
  #L16a884.  if v0 == 0 then goto L16a8ac;
  #L16a888.  v0:= v6.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16a88c.  v2:= v6.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16a890.  v3:= 8192I;
  #L16a894.  v3:= (`long`) v3 @kind i2l;
  #L16a896.  call temp:= `read`(v0, v2, v3) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16a89c.  v2:= temp @kind wide;
  #L16a89e.  v4:= -1L;
  #L16a8a2.  v0:= lcmp(v2, v4);
  #L16a8a6.  if v0 != 0 then goto L16a8ac;
  #L16a8aa.  goto L16a8ae;
  #L16a8ac.  v1:= 0I;
  #L16a8ae.  return v1;
  #L16a8b0.  v0:= new `java.lang.IllegalStateException`;
  #L16a8b4.  v1:= "closed" @kind object;
  #L16a8b8.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16a8be.  v1:= temp @kind object;
  #L16a8c0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16a8c6.  throw v0;
}
procedure `okio.Buffer` `getBuffer`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.getBuffer:()Lokio/Buffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16b768.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b76c.  return v0 @kind object;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 ) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16b0e8.  v2:= 0L;
  #L16b0ec.  v4:= 9223372036854775807L;
  #L16b0f6.  v0:= v6 @kind object;
  #L16b0f8.  v1:= v7;
  #L16b0fa.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L16b100.  v0:= temp @kind wide;
  #L16b102.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 , `long` v8 ) @signature `Lokio/RealBufferedSource;.indexOf:(BJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16b114.  v4:= 9223372036854775807L;
  #L16b11e.  v0:= v6 @kind object;
  #L16b120.  v1:= v7;
  #L16b122.  v2:= v8 @kind wide;
  #L16b124.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L16b12a.  v7:= temp @kind wide;
  #L16b12c.  return v7 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v8 @kind this, `byte` v9 , `long` v10 , `long` v12 ) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L16b140.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16b144.  v1:= 1I;
  #L16b146.  v0:= v0 ^~ v1 @kind int;
  #L16b148.  if v0 == 0 then goto L16b21a;
  #L16b14c.  v2:= 0L;
  #L16b150.  v0:= lcmp(v2, v10);
  #L16b154.  if v0 <= 0 then goto L16b15a;
  #L16b158.  goto L16b164;
  #L16b15a.  v0:= lcmp(v12, v10);
  #L16b15e.  if v0 < 0 then goto L16b164;
  #L16b162.  goto L16b166;
  #L16b164.  v1:= 0I;
  #L16b166.  if v1 == 0 then goto L16b1d4;
  #L16b16a.  v0:= -1L;
  #L16b16e.  v2:= lcmp(v10, v12);
  #L16b172.  if v2 >= 0 then goto L16b1d2;
  #L16b176.  v2:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b17a.  v3:= v9;
  #L16b17c.  v4:= v10 @kind wide;
  #L16b17e.  v6:= v12 @kind wide;
  #L16b180.  call temp:= `indexOf`(v2, v3, v4, v6) @signature `Lokio/Buffer;.indexOf:(BJJ)J` @kind virtual;
  #L16b186.  v2:= temp @kind wide;
  #L16b188.  v4:= lcmp(v2, v0);
  #L16b18c.  if v4 == 0 then goto L16b194;
  #L16b190.  v0:= v2 @kind wide;
  #L16b192.  goto L16b1d2;
  #L16b194.  v2:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b198.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b19e.  v2:= temp @kind wide;
  #L16b1a0.  v4:= lcmp(v2, v12);
  #L16b1a4.  if v4 >= 0 then goto L16b1d2;
  #L16b1a8.  v4:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16b1ac.  v5:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b1b0.  v6:= 8192I;
  #L16b1b4.  v6:= (`long`) v6 @kind i2l;
  #L16b1b6.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16b1bc.  v4:= temp @kind wide;
  #L16b1be.  v6:= lcmp(v4, v0);
  #L16b1c2.  if v6 != 0 then goto L16b1c8;
  #L16b1c6.  goto L16b1d2;
  #L16b1c8.  call temp:= `max`(v10, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L16b1ce.  v10:= temp @kind wide;
  #L16b1d0.  goto L16b16a;
  #L16b1d2.  return v0 @kind wide;
  #L16b1d4.  v9:= new `java.lang.StringBuilder`;
  #L16b1d8.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16b1de.  v0:= "fromIndex=" @kind object;
  #L16b1e2.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b1e8.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b1ee.  v10:= " toIndex=" @kind object;
  #L16b1f2.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b1f8.  call temp:= `append`(v9, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b1fe.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b204.  v9:= temp @kind object;
  #L16b206.  v10:= new `java.lang.IllegalArgumentException`;
  #L16b20a.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b210.  v9:= temp @kind object;
  #L16b212.  call `<init>`(v10, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b218.  throw v10;
  #L16b21a.  v9:= new `java.lang.IllegalStateException`;
  #L16b21e.  v10:= "closed" @kind object;
  #L16b222.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b228.  v10:= temp @kind object;
  #L16b22a.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b230.  throw v9;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16b244.  v0:= "bytes" @kind object;
  #L16b248.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b24e.  v0:= 0L;
  #L16b252.  call temp:= `indexOf`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L16b258.  v0:= temp @kind wide;
  #L16b25a.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L16b26c.  v0:= "bytes" @kind object;
  #L16b270.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b276.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16b27a.  v0:= v0 ^~ 1;
  #L16b27e.  if v0 == 0 then goto L16b2e6;
  #L16b282.  v0:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b286.  call temp:= `indexOf`(v0, v9, v10) @signature `Lokio/Buffer;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L16b28c.  v0:= temp @kind wide;
  #L16b28e.  v2:= -1L;
  #L16b292.  v4:= lcmp(v0, v2);
  #L16b296.  if v4 == 0 then goto L16b29c;
  #L16b29a.  goto L16b2c8;
  #L16b29c.  v0:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b2a0.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b2a6.  v0:= temp @kind wide;
  #L16b2a8.  v4:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16b2ac.  v5:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b2b0.  v6:= 8192I;
  #L16b2b4.  v6:= (`long`) v6 @kind i2l;
  #L16b2b6.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16b2bc.  v4:= temp @kind wide;
  #L16b2be.  v6:= lcmp(v4, v2);
  #L16b2c2.  if v6 != 0 then goto L16b2ca;
  #L16b2c6.  v0:= v2 @kind wide;
  #L16b2c8.  return v0 @kind wide;
  #L16b2ca.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16b2d0.  v2:= temp;
  #L16b2d2.  v2:= (`long`) v2 @kind i2l;
  #L16b2d4.  v0:= v0 - v2 @kind long;
  #L16b2d6.  v2:= 1L;
  #L16b2da.  v0:= v0 + v2 @kind long;
  #L16b2dc.  call temp:= `max`(v10, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L16b2e2.  v10:= temp @kind wide;
  #L16b2e4.  goto L16b282;
  #L16b2e6.  v9:= new `java.lang.IllegalStateException`;
  #L16b2ea.  v10:= "closed" @kind object;
  #L16b2ee.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b2f4.  v10:= temp @kind object;
  #L16b2f6.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b2fc.  throw v9;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16b310.  v0:= "targetBytes" @kind object;
  #L16b314.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b31a.  v0:= 0L;
  #L16b31e.  call temp:= `indexOfElement`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L16b324.  v0:= temp @kind wide;
  #L16b326.  return v0 @kind wide;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L16b338.  v0:= "targetBytes" @kind object;
  #L16b33c.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b342.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16b346.  v0:= v0 ^~ 1;
  #L16b34a.  if v0 == 0 then goto L16b3a0;
  #L16b34e.  v0:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b352.  call temp:= `indexOfElement`(v0, v9, v10) @signature `Lokio/Buffer;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L16b358.  v0:= temp @kind wide;
  #L16b35a.  v2:= -1L;
  #L16b35e.  v4:= lcmp(v0, v2);
  #L16b362.  if v4 == 0 then goto L16b368;
  #L16b366.  goto L16b394;
  #L16b368.  v0:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b36c.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b372.  v0:= temp @kind wide;
  #L16b374.  v4:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16b378.  v5:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b37c.  v6:= 8192I;
  #L16b380.  v6:= (`long`) v6 @kind i2l;
  #L16b382.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16b388.  v4:= temp @kind wide;
  #L16b38a.  v6:= lcmp(v4, v2);
  #L16b38e.  if v6 != 0 then goto L16b396;
  #L16b392.  v0:= v2 @kind wide;
  #L16b394.  return v0 @kind wide;
  #L16b396.  call temp:= `max`(v10, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L16b39c.  v10:= temp @kind wide;
  #L16b39e.  goto L16b34e;
  #L16b3a0.  v9:= new `java.lang.IllegalStateException`;
  #L16b3a4.  v10:= "closed" @kind object;
  #L16b3a8.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b3ae.  v10:= temp @kind object;
  #L16b3b0.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b3b6.  throw v9;
}
procedure `java.io.InputStream` `inputStream`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.inputStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ad9c.  v0:= new `okio.RealBufferedSource$inputStream$1`;
  #L16ada0.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource$inputStream$1;.<init>:(Lokio/RealBufferedSource;)V` @kind direct;
  #L16ada6.  return v0 @kind object;
}
procedure `boolean` `isOpen`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16a8d8.  v0:= v1.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16a8dc.  v0:= v0 ^~ 1;
  #L16a8e0.  return v0;
}
procedure `okio.BufferedSource` `peek`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.peek:()Lokio/BufferedSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16b780.  v0:= new `okio.PeekSource`;
  #L16b784.  call `<init>`(v0, v1) @signature `Lokio/PeekSource;.<init>:(Lokio/BufferedSource;)V` @kind direct;
  #L16b78a.  call temp:= `buffer`(v0) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L16b790.  v0:= temp @kind object;
  #L16b792.  return v0 @kind object;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v7 @kind this, `long` v8 , `okio.ByteString` v10 @kind object) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16a8f4.  v0:= "bytes" @kind object;
  #L16a8f8.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16a8fe.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16a904.  v6:= temp;
  #L16a906.  v5:= 0I;
  #L16a908.  v1:= v7 @kind object;
  #L16a90a.  v2:= v8 @kind wide;
  #L16a90c.  v4:= v10 @kind object;
  #L16a90e.  call temp:= `rangeEquals`(v1, v2, v4, v5, v6) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @kind virtual;
  #L16a914.  v8:= temp;
  #L16a916.  return v8;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v7 @kind this, `long` v8 , `okio.ByteString` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16a928.  v0:= "bytes" @kind object;
  #L16a92c.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16a932.  v0:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16a936.  v1:= 1I;
  #L16a938.  v0:= v0 ^~ v1 @kind int;
  #L16a93a.  if v0 == 0 then goto L16a9aa;
  #L16a93e.  v2:= 0L;
  #L16a942.  v0:= 0I;
  #L16a944.  v4:= lcmp(v8, v2);
  #L16a948.  if v4 < 0 then goto L16a9a6;
  #L16a94c.  if v11 < 0 then goto L16a9a6;
  #L16a950.  if v12 < 0 then goto L16a9a6;
  #L16a954.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16a95a.  v2:= temp;
  #L16a95c.  v2:= v2 - v11 @kind int;
  #L16a95e.  if v2 >= v12 then goto L16a964;
  #L16a962.  goto L16a9a6;
  #L16a964.  v2:= 0I;
  #L16a966.  if v2 >= v12 then goto L16a9a8;
  #L16a96a.  v3:= (`long`) v2 @kind i2l;
  #L16a96c.  v3:= v3 + v8 @kind long;
  #L16a96e.  v5:= 1L;
  #L16a972.  v5:= v5 + v3 @kind long;
  #L16a974.  call temp:= `request`(v7, v5) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L16a97a.  v5:= temp;
  #L16a97c.  if v5 != 0 then goto L16a982;
  #L16a980.  goto L16a9a6;
  #L16a982.  v5:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16a986.  call temp:= `getByte`(v5, v3) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L16a98c.  v3:= temp;
  #L16a98e.  v4:= v11 + v2 @kind int;
  #L16a992.  call temp:= `getByte`(v10, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L16a998.  v4:= temp;
  #L16a99a.  if v3 == v4 then goto L16a9a0;
  #L16a99e.  goto L16a9a6;
  #L16a9a0.  v2:= v2 + 1;
  #L16a9a4.  goto L16a966;
  #L16a9a6.  v1:= 0I;
  #L16a9a8.  return v1;
  #L16a9aa.  v8:= new `java.lang.IllegalStateException`;
  #L16a9ae.  v9:= "closed" @kind object;
  #L16a9b2.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16a9b8.  v9:= temp @kind object;
  #L16a9ba.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16a9c0.  throw v8;
}
procedure `int` `read`(`okio.RealBufferedSource` v5 @kind this, `java.nio.ByteBuffer` v6 @kind object) @signature `Lokio/RealBufferedSource;.read:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16abc0.  v0:= "sink" @kind object;
  #L16abc4.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16abca.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16abce.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16abd4.  v0:= temp @kind wide;
  #L16abd6.  v2:= 0L;
  #L16abda.  v4:= lcmp(v0, v2);
  #L16abde.  if v4 != 0 then goto L16ac08;
  #L16abe2.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16abe6.  v1:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16abea.  v2:= 8192I;
  #L16abee.  v2:= (`long`) v2 @kind i2l;
  #L16abf0.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16abf6.  v0:= temp @kind wide;
  #L16abf8.  v2:= -1L;
  #L16abfc.  v4:= lcmp(v0, v2);
  #L16ac00.  if v4 != 0 then goto L16ac08;
  #L16ac04.  v6:= -1I;
  #L16ac06.  return v6;
  #L16ac08.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ac0c.  call temp:= `read`(v0, v6) @signature `Lokio/Buffer;.read:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L16ac12.  v6:= temp;
  #L16ac14.  return v6;
}
procedure `int` `read`(`okio.RealBufferedSource` v2 @kind this, `byte`[] v3 @kind object) @signature `Lokio/RealBufferedSource;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16ab0c.  v0:= "sink" @kind object;
  #L16ab10.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16ab16.  v0:= length @variable v3;
  #L16ab18.  v1:= 0I;
  #L16ab1a.  call temp:= `read`(v2, v3, v1, v0) @signature `Lokio/RealBufferedSource;.read:([BII)I` @kind virtual;
  #L16ab20.  v3:= temp;
  #L16ab22.  return v3;
}
procedure `int` `read`(`okio.RealBufferedSource` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/RealBufferedSource;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L16ab34.  v0:= "sink" @kind object;
  #L16ab38.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16ab3e.  v0:= length @variable v10;
  #L16ab40.  v1:= (`long`) v0 @kind i2l;
  #L16ab42.  v3:= (`long`) v11 @kind i2l;
  #L16ab44.  v7:= (`long`) v12 @kind i2l;
  #L16ab46.  v5:= v7 @kind wide;
  #L16ab48.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L16ab4e.  v12:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ab52.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16ab58.  v0:= temp @kind wide;
  #L16ab5a.  v2:= 0L;
  #L16ab5e.  v12:= lcmp(v0, v2);
  #L16ab62.  if v12 != 0 then goto L16ab8c;
  #L16ab66.  v12:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16ab6a.  v0:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ab6e.  v1:= 8192I;
  #L16ab72.  v1:= (`long`) v1 @kind i2l;
  #L16ab74.  call temp:= `read`(v12, v0, v1) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16ab7a.  v0:= temp @kind wide;
  #L16ab7c.  v2:= -1L;
  #L16ab80.  v12:= lcmp(v0, v2);
  #L16ab84.  if v12 != 0 then goto L16ab8c;
  #L16ab88.  v10:= -1I;
  #L16ab8a.  goto L16abae;
  #L16ab8c.  v12:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ab90.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16ab96.  v0:= temp @kind wide;
  #L16ab98.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L16ab9e.  v0:= temp @kind wide;
  #L16aba0.  v12:= (`int`) v0 @kind l2i;
  #L16aba2.  v0:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16aba6.  call temp:= `read`(v0, v10, v11, v12) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L16abac.  v10:= temp;
  #L16abae.  return v10;
}
procedure `long` `read`(`okio.RealBufferedSource` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokio/RealBufferedSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16b3c8.  v0:= "sink" @kind object;
  #L16b3cc.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b3d2.  v0:= 1I;
  #L16b3d4.  v1:= 0L;
  #L16b3d8.  v3:= lcmp(v9, v1);
  #L16b3dc.  if v3 < 0 then goto L16b3e4;
  #L16b3e0.  v3:= 1I;
  #L16b3e2.  goto L16b3e6;
  #L16b3e4.  v3:= 0I;
  #L16b3e6.  if v3 == 0 then goto L16b466;
  #L16b3ea.  v3:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16b3ee.  v0:= v0 ^~ v3 @kind int;
  #L16b3f0.  if v0 == 0 then goto L16b44e;
  #L16b3f4.  v0:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b3f8.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b3fe.  v3:= temp @kind wide;
  #L16b400.  v5:= -1L;
  #L16b404.  v0:= lcmp(v3, v1);
  #L16b408.  if v0 != 0 then goto L16b42c;
  #L16b40c.  v0:= v7.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16b410.  v1:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b414.  v2:= 8192I;
  #L16b418.  v2:= (`long`) v2 @kind i2l;
  #L16b41a.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16b420.  v0:= temp @kind wide;
  #L16b422.  v2:= lcmp(v0, v5);
  #L16b426.  if v2 != 0 then goto L16b42c;
  #L16b42a.  goto L16b44c;
  #L16b42c.  v0:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b430.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b436.  v0:= temp @kind wide;
  #L16b438.  call temp:= `min`(v9, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L16b43e.  v9:= temp @kind wide;
  #L16b440.  v0:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b444.  call temp:= `read`(v0, v8, v9) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L16b44a.  v5:= temp @kind wide;
  #L16b44c.  return v5 @kind wide;
  #L16b44e.  v8:= new `java.lang.IllegalStateException`;
  #L16b452.  v9:= "closed" @kind object;
  #L16b456.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b45c.  v9:= temp @kind object;
  #L16b45e.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b464.  throw v8;
  #L16b466.  v8:= new `java.lang.StringBuilder`;
  #L16b46a.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16b470.  v0:= "byteCount < 0: " @kind object;
  #L16b474.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b47a.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b480.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b486.  v8:= temp @kind object;
  #L16b488.  v9:= new `java.lang.IllegalArgumentException`;
  #L16b48c.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b492.  v8:= temp @kind object;
  #L16b494.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b49a.  throw v9;
}
procedure `long` `readAll`(`okio.RealBufferedSource` v9 @kind this, `okio.Sink` v10 @kind object) @signature `Lokio/RealBufferedSource;.readAll:(Lokio/Sink;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L16b4ac.  v0:= "sink" @kind object;
  #L16b4b0.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b4b6.  v0:= 0L;
  #L16b4ba.  v2:= v0 @kind wide;
  #L16b4bc.  v4:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16b4c0.  v5:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b4c4.  v6:= 8192I;
  #L16b4c8.  v6:= (`long`) v6 @kind i2l;
  #L16b4ca.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16b4d0.  v4:= temp @kind wide;
  #L16b4d2.  v6:= -1L;
  #L16b4d6.  v8:= lcmp(v4, v6);
  #L16b4da.  if v8 == 0 then goto L16b500;
  #L16b4de.  v4:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b4e2.  call temp:= `completeSegmentByteCount`(v4) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L16b4e8.  v4:= temp @kind wide;
  #L16b4ea.  v6:= lcmp(v4, v0);
  #L16b4ee.  if v6 <= 0 then goto L16b4bc;
  #L16b4f2.  v2:= v2 + v4 @kind long;
  #L16b4f4.  v6:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b4f8.  call `write`(v10, v6, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L16b4fe.  goto L16b4bc;
  #L16b500.  v4:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b504.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b50a.  v4:= temp @kind wide;
  #L16b50c.  v6:= lcmp(v4, v0);
  #L16b510.  if v6 <= 0 then goto L16b534;
  #L16b514.  v0:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b518.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b51e.  v0:= temp @kind wide;
  #L16b520.  v2:= v2 + v0 @kind long;
  #L16b522.  v0:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b526.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b52c.  v4:= temp @kind wide;
  #L16b52e.  call `write`(v10, v0, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L16b534.  return v2 @kind wide;
}
procedure `byte` `readByte`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16aa94.  v0:= 1L;
  #L16aa98.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16aa9e.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16aaa2.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L16aaa8.  v0:= temp;
  #L16aaaa.  return v0;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16aabc.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16aac0.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16aac4.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L16aaca.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16aace.  call temp:= `readByteArray`(v0) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L16aad4.  v0:= temp @kind object;
  #L16aad6.  return v0 @kind object;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readByteArray:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16aae8.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16aaee.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16aaf2.  call temp:= `readByteArray`(v0, v2) @signature `Lokio/Buffer;.readByteArray:(J)[B` @kind virtual;
  #L16aaf8.  v2:= temp @kind object;
  #L16aafa.  return v2 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteString:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16b7a4.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b7a8.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16b7ac.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L16b7b2.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b7b6.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L16b7bc.  v0:= temp @kind object;
  #L16b7be.  return v0 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readByteString:(J)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16b7d0.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16b7d6.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b7da.  call temp:= `readByteString`(v0, v2) @signature `Lokio/Buffer;.readByteString:(J)Lokio/ByteString;` @kind virtual;
  #L16b7e0.  v2:= temp @kind object;
  #L16b7e2.  return v2 @kind object;
}
procedure `long` `readDecimalLong`(`okio.RealBufferedSource` v10 @kind this) @signature `Lokio/RealBufferedSource;.readDecimalLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L16b548.  v0:= 1L;
  #L16b54c.  call `require`(v10, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16b552.  v2:= 0L;
  #L16b556.  v4:= v2 @kind wide;
  #L16b558.  v6:= v4 + v0 @kind long;
  #L16b55c.  call temp:= `request`(v10, v6) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L16b562.  v8:= temp;
  #L16b564.  if v8 == 0 then goto L16b5fa;
  #L16b568.  v8:= v10.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b56c.  call temp:= `getByte`(v8, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L16b572.  v8:= temp;
  #L16b574.  v9:= 48I;
  #L16b578.  v9:= (`byte`) v9 @kind i2b;
  #L16b57a.  if v8 < v9 then goto L16b588;
  #L16b57e.  v9:= 57I;
  #L16b582.  v9:= (`byte`) v9 @kind i2b;
  #L16b584.  if v8 <= v9 then goto L16b59c;
  #L16b588.  v9:= lcmp(v4, v2);
  #L16b58c.  if v9 != 0 then goto L16b5a0;
  #L16b590.  v4:= 45I;
  #L16b594.  v4:= (`byte`) v4 @kind i2b;
  #L16b596.  if v8 == v4 then goto L16b59c;
  #L16b59a.  goto L16b5a0;
  #L16b59c.  v4:= v6 @kind wide;
  #L16b59e.  goto L16b558;
  #L16b5a0.  if v9 == 0 then goto L16b5a6;
  #L16b5a4.  goto L16b5fa;
  #L16b5a6.  v0:= new `java.lang.NumberFormatException`;
  #L16b5aa.  v1:= new `java.lang.StringBuilder`;
  #L16b5ae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16b5b4.  v2:= "Expected leading [0-9] or '-' character but was 0x" @kind object;
  #L16b5b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b5be.  v2:= 16I;
  #L16b5c2.  call temp:= `checkRadix`(v2) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L16b5c8.  v2:= temp;
  #L16b5ca.  call temp:= `checkRadix`(v2) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L16b5d0.  v2:= temp;
  #L16b5d2.  call temp:= `toString`(v8, v2) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L16b5d8.  v2:= temp @kind object;
  #L16b5da.  v3:= "java.lang.Integer.toStri…(this, checkRadix(radix))" @kind object;
  #L16b5de.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b5e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b5ea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b5f0.  v1:= temp @kind object;
  #L16b5f2.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b5f8.  throw v0;
  #L16b5fa.  v0:= v10.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b5fe.  call temp:= `readDecimalLong`(v0) @signature `Lokio/Buffer;.readDecimalLong:()J` @kind virtual;
  #L16b604.  v0:= temp @kind wide;
  #L16b606.  return v0 @kind wide;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v1 @kind this, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokio/RealBufferedSource;.readFully:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16b970.  v0:= "sink" @kind object;
  #L16b974.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b97a.  call `require`(v1, v3) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16b980.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b984.  call `readFully`(v0, v2, v3) @signature `Lokio/Buffer;.readFully:(Lokio/Buffer;J)V` @kind virtual;
  #L16b98a.  return @kind void;
  #L16b98c.  v3:= Exception @type ^`java.io.EOFException` @kind object;
  #L16b98e.  v4:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b992.  call temp:= `writeAll`(v2, v4) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L16b998.  throw v3;
  catch `java.io.EOFException` @[L16b97a..L16b980] goto L16b98c;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v7 @kind this, `byte`[] v8 @kind object) @signature `Lokio/RealBufferedSource;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16b8e4.  v0:= "sink" @kind object;
  #L16b8e8.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b8ee.  v0:= length @variable v8;
  #L16b8f0.  v0:= (`long`) v0 @kind i2l;
  #L16b8f2.  call `require`(v7, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16b8f8.  v0:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b8fc.  call `readFully`(v0, v8) @signature `Lokio/Buffer;.readFully:([B)V` @kind virtual;
  #L16b902.  return @kind void;
  #L16b904.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L16b906.  v1:= 0I;
  #L16b908.  v2:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b90c.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b912.  v2:= temp @kind wide;
  #L16b914.  v4:= 0L;
  #L16b918.  v6:= lcmp(v2, v4);
  #L16b91c.  if v6 <= 0 then goto L16b94c;
  #L16b920.  v2:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b924.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b92a.  v3:= temp @kind wide;
  #L16b92c.  v4:= (`int`) v3 @kind l2i;
  #L16b92e.  call temp:= `read`(v2, v8, v1, v4) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L16b934.  v2:= temp;
  #L16b936.  v3:= -1I;
  #L16b938.  if v2 == v3 then goto L16b940;
  #L16b93c.  v1:= v1 + v2 @kind int;
  #L16b93e.  goto L16b908;
  #L16b940.  v8:= new `java.lang.AssertionError`;
  #L16b944.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L16b94a.  throw v8;
  #L16b94c.  throw v0;
  catch `java.io.EOFException` @[L16b8ee..L16b8f8] goto L16b904;
}
procedure `long` `readHexadecimalUnsignedLong`(`okio.RealBufferedSource` v5 @kind this) @signature `Lokio/RealBufferedSource;.readHexadecimalUnsignedLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16b618.  v0:= 1L;
  #L16b61c.  call `require`(v5, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16b622.  v0:= 0I;
  #L16b624.  v1:= v0 + 1;
  #L16b628.  v2:= (`long`) v1 @kind i2l;
  #L16b62a.  call temp:= `request`(v5, v2) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L16b630.  v2:= temp;
  #L16b632.  if v2 == 0 then goto L16b6e0;
  #L16b636.  v2:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b63a.  v3:= (`long`) v0 @kind i2l;
  #L16b63c.  call temp:= `getByte`(v2, v3) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L16b642.  v2:= temp;
  #L16b644.  v3:= 48I;
  #L16b648.  v3:= (`byte`) v3 @kind i2b;
  #L16b64a.  if v2 < v3 then goto L16b658;
  #L16b64e.  v3:= 57I;
  #L16b652.  v3:= (`byte`) v3 @kind i2b;
  #L16b654.  if v2 <= v3 then goto L16b682;
  #L16b658.  v3:= 97I;
  #L16b65c.  v3:= (`byte`) v3 @kind i2b;
  #L16b65e.  if v2 < v3 then goto L16b66c;
  #L16b662.  v3:= 102I;
  #L16b666.  v3:= (`byte`) v3 @kind i2b;
  #L16b668.  if v2 <= v3 then goto L16b682;
  #L16b66c.  v3:= 65I;
  #L16b670.  v3:= (`byte`) v3 @kind i2b;
  #L16b672.  if v2 < v3 then goto L16b686;
  #L16b676.  v3:= 70I;
  #L16b67a.  v3:= (`byte`) v3 @kind i2b;
  #L16b67c.  if v2 <= v3 then goto L16b682;
  #L16b680.  goto L16b686;
  #L16b682.  v0:= v1;
  #L16b684.  goto L16b624;
  #L16b686.  if v0 == 0 then goto L16b68c;
  #L16b68a.  goto L16b6e0;
  #L16b68c.  v0:= new `java.lang.NumberFormatException`;
  #L16b690.  v1:= new `java.lang.StringBuilder`;
  #L16b694.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16b69a.  v3:= "Expected leading [0-9a-fA-F] character but was 0x" @kind object;
  #L16b69e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b6a4.  v3:= 16I;
  #L16b6a8.  call temp:= `checkRadix`(v3) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L16b6ae.  v3:= temp;
  #L16b6b0.  call temp:= `checkRadix`(v3) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L16b6b6.  v3:= temp;
  #L16b6b8.  call temp:= `toString`(v2, v3) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L16b6be.  v2:= temp @kind object;
  #L16b6c0.  v3:= "java.lang.Integer.toStri…(this, checkRadix(radix))" @kind object;
  #L16b6c4.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16b6ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b6d0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b6d6.  v1:= temp @kind object;
  #L16b6d8.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b6de.  throw v0;
  #L16b6e0.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b6e4.  call temp:= `readHexadecimalUnsignedLong`(v0) @signature `Lokio/Buffer;.readHexadecimalUnsignedLong:()J` @kind virtual;
  #L16b6ea.  v0:= temp @kind wide;
  #L16b6ec.  return v0 @kind wide;
}
procedure `int` `readInt`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16ac28.  v0:= 4L;
  #L16ac2c.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16ac32.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ac36.  call temp:= `readInt`(v0) @signature `Lokio/Buffer;.readInt:()I` @kind virtual;
  #L16ac3c.  v0:= temp;
  #L16ac3e.  return v0;
}
procedure `int` `readIntLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16ac50.  v0:= 4L;
  #L16ac54.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16ac5a.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ac5e.  call temp:= `readIntLe`(v0) @signature `Lokio/Buffer;.readIntLe:()I` @kind virtual;
  #L16ac64.  v0:= temp;
  #L16ac66.  return v0;
}
procedure `long` `readLong`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16b700.  v0:= 8L;
  #L16b704.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16b70a.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b70e.  call temp:= `readLong`(v0) @signature `Lokio/Buffer;.readLong:()J` @kind virtual;
  #L16b714.  v0:= temp @kind wide;
  #L16b716.  return v0 @kind wide;
}
procedure `long` `readLongLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLongLe:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16b728.  v0:= 8L;
  #L16b72c.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16b732.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b736.  call temp:= `readLongLe`(v0) @signature `Lokio/Buffer;.readLongLe:()J` @kind virtual;
  #L16b73c.  v0:= temp @kind wide;
  #L16b73e.  return v0 @kind wide;
}
procedure `short` `readShort`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16b814.  v0:= 2L;
  #L16b818.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16b81e.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b822.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L16b828.  v0:= temp;
  #L16b82a.  return v0;
}
procedure `short` `readShortLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShortLe:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16b83c.  v0:= 2L;
  #L16b840.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16b846.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b84a.  call temp:= `readShortLe`(v0) @signature `Lokio/Buffer;.readShortLe:()S` @kind virtual;
  #L16b850.  v0:= temp;
  #L16b852.  return v0;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 , `java.nio.charset.Charset` v4 @kind object) @signature `Lokio/RealBufferedSource;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16adf0.  v0:= "charset" @kind object;
  #L16adf4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16adfa.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16ae00.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ae04.  call temp:= `readString`(v0, v2, v4) @signature `Lokio/Buffer;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L16ae0a.  v2:= temp @kind object;
  #L16ae0c.  return v2 @kind object;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/RealBufferedSource;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16adb8.  v0:= "charset" @kind object;
  #L16adbc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16adc2.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16adc6.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16adca.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L16add0.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16add4.  call temp:= `readString`(v0, v3) @signature `Lokio/Buffer;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L16adda.  v3:= temp @kind object;
  #L16addc.  return v3 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16ae20.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ae24.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16ae28.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L16ae2e.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ae32.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L16ae38.  v0:= temp @kind object;
  #L16ae3a.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ae4c.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16ae52.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ae56.  call temp:= `readUtf8`(v0, v2) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L16ae5c.  v2:= temp @kind object;
  #L16ae5e.  return v2 @kind object;
}
procedure `int` `readUtf8CodePoint`(`okio.RealBufferedSource` v3 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8CodePoint:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L16ac78.  v0:= 1L;
  #L16ac7c.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16ac82.  v0:= v3.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ac86.  v1:= 0L;
  #L16ac8a.  call temp:= `getByte`(v0, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L16ac90.  v0:= temp;
  #L16ac92.  v1:= v0 ^& 224;
  #L16ac96.  v2:= 192I;
  #L16ac9a.  if v1 != v2 then goto L16acaa;
  #L16ac9e.  v0:= 2L;
  #L16aca2.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16aca8.  goto L16acd8;
  #L16acaa.  v1:= v0 ^& 240;
  #L16acae.  v2:= 224I;
  #L16acb2.  if v1 != v2 then goto L16acc2;
  #L16acb6.  v0:= 3L;
  #L16acba.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16acc0.  goto L16acd8;
  #L16acc2.  v0:= v0 ^& 248;
  #L16acc6.  v1:= 240I;
  #L16acca.  if v0 != v1 then goto L16acd8;
  #L16acce.  v0:= 4L;
  #L16acd2.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L16acd8.  v0:= v3.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16acdc.  call temp:= `readUtf8CodePoint`(v0) @signature `Lokio/Buffer;.readUtf8CodePoint:()I` @kind virtual;
  #L16ace2.  v0:= temp;
  #L16ace4.  return v0;
}
procedure `java.lang.String` `readUtf8Line`(`okio.RealBufferedSource` v5 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8Line:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16ae70.  v0:= 10I;
  #L16ae74.  v0:= (`byte`) v0 @kind i2b;
  #L16ae76.  call temp:= `indexOf`(v5, v0) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L16ae7c.  v0:= temp @kind wide;
  #L16ae7e.  v2:= -1L;
  #L16ae82.  v4:= lcmp(v0, v2);
  #L16ae86.  if v4 != 0 then goto L16aebc;
  #L16ae8a.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ae8e.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16ae94.  v0:= temp @kind wide;
  #L16ae96.  v2:= 0L;
  #L16ae9a.  v4:= lcmp(v0, v2);
  #L16ae9e.  if v4 == 0 then goto L16aeb8;
  #L16aea2.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16aea6.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16aeac.  v0:= temp @kind wide;
  #L16aeae.  call temp:= `readUtf8`(v5, v0) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L16aeb4.  v0:= temp @kind object;
  #L16aeb6.  goto L16aec8;
  #L16aeb8.  v0:= 0I;
  #L16aeba.  goto L16aec8;
  #L16aebc.  v2:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16aec0.  call temp:= `readUtf8Line`(v2, v0) @signature `Lokio/internal/BufferKt;.readUtf8Line:(Lokio/Buffer;J)Ljava/lang/String;` @kind static;
  #L16aec6.  v0:= temp @kind object;
  #L16aec8.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16aedc.  v0:= 9223372036854775807L;
  #L16aee6.  call temp:= `readUtf8LineStrict`(v2, v0) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @kind virtual;
  #L16aeec.  v0:= temp @kind object;
  #L16aeee.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v13 @kind this, `long` v14 ) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L16af00.  v0:= 0L;
  #L16af04.  v2:= lcmp(v14, v0);
  #L16af08.  if v2 < 0 then goto L16af10;
  #L16af0c.  v0:= 1I;
  #L16af0e.  goto L16af12;
  #L16af10.  v0:= 0I;
  #L16af12.  if v0 == 0 then goto L16b05c;
  #L16af16.  v0:= 1L;
  #L16af1a.  v2:= 9223372036854775807L;
  #L16af24.  v4:= lcmp(v14, v2);
  #L16af28.  if v4 != 0 then goto L16af30;
  #L16af2c.  v4:= v2 @kind wide;
  #L16af2e.  goto L16af34;
  #L16af30.  v4:= v14 + v0 @kind long;
  #L16af34.  v6:= 10I;
  #L16af38.  v12:= (`byte`) v6 @kind i2b;
  #L16af3a.  v8:= 0L;
  #L16af3e.  v6:= v13 @kind object;
  #L16af40.  v7:= v12;
  #L16af42.  v10:= v4 @kind wide;
  #L16af44.  call temp:= `indexOf`(v6, v7, v8, v10) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L16af4a.  v6:= temp @kind wide;
  #L16af4c.  v8:= -1L;
  #L16af50.  v10:= lcmp(v6, v8);
  #L16af54.  if v10 == 0 then goto L16af66;
  #L16af58.  v14:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16af5c.  call temp:= `readUtf8Line`(v14, v6) @signature `Lokio/internal/BufferKt;.readUtf8Line:(Lokio/Buffer;J)Ljava/lang/String;` @kind static;
  #L16af62.  v14:= temp @kind object;
  #L16af64.  goto L16afbe;
  #L16af66.  v6:= lcmp(v4, v2);
  #L16af6a.  if v6 >= 0 then goto L16afc0;
  #L16af6e.  call temp:= `request`(v13, v4) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L16af74.  v2:= temp;
  #L16af76.  if v2 == 0 then goto L16afc0;
  #L16af7a.  v2:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16af7e.  v6:= v4 - v0 @kind long;
  #L16af82.  call temp:= `getByte`(v2, v6) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L16af88.  v2:= temp;
  #L16af8a.  v3:= 13I;
  #L16af8e.  v3:= (`byte`) v3 @kind i2b;
  #L16af90.  if v2 != v3 then goto L16afc0;
  #L16af94.  v0:= v0 + v4 @kind long;
  #L16af96.  call temp:= `request`(v13, v0) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L16af9c.  v0:= temp;
  #L16af9e.  if v0 == 0 then goto L16afc0;
  #L16afa2.  v0:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16afa6.  call temp:= `getByte`(v0, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L16afac.  v0:= temp;
  #L16afae.  if v0 != v12 then goto L16afc0;
  #L16afb2.  v14:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16afb6.  call temp:= `readUtf8Line`(v14, v4) @signature `Lokio/internal/BufferKt;.readUtf8Line:(Lokio/Buffer;J)Ljava/lang/String;` @kind static;
  #L16afbc.  v14:= temp @kind object;
  #L16afbe.  return v14 @kind object;
  #L16afc0.  v6:= new `okio.Buffer`;
  #L16afc4.  call `<init>`(v6) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L16afca.  v0:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16afce.  v2:= 0L;
  #L16afd2.  v1:= 32I;
  #L16afd6.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16afdc.  v4:= temp @kind wide;
  #L16afde.  v7:= (`long`) v1 @kind i2l;
  #L16afe0.  call temp:= `min`(v7, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L16afe6.  v4:= temp @kind wide;
  #L16afe8.  v1:= v6 @kind object;
  #L16afea.  call temp:= `copyTo`(v0, v1, v2, v4) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L16aff0.  v0:= new `java.io.EOFException`;
  #L16aff4.  v1:= new `java.lang.StringBuilder`;
  #L16aff8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16affe.  v2:= "\\n not found: limit=" @kind object;
  #L16b002.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b008.  v2:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16b00c.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16b012.  v2:= temp @kind wide;
  #L16b014.  call temp:= `min`(v2, v14) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L16b01a.  v14:= temp @kind wide;
  #L16b01c.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b022.  v14:= " content=" @kind object;
  #L16b026.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b02c.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L16b032.  v14:= temp @kind object;
  #L16b034.  call temp:= `hex`(v14) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L16b03a.  v14:= temp @kind object;
  #L16b03c.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b042.  v14:= "…" @kind object;
  #L16b046.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b04c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b052.  v14:= temp @kind object;
  #L16b054.  call `<init>`(v0, v14) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b05a.  throw v0;
  #L16b05c.  v0:= new `java.lang.StringBuilder`;
  #L16b060.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16b066.  v1:= "limit < 0: " @kind object;
  #L16b06a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b070.  call temp:= `append`(v0, v14) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b076.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b07c.  v14:= temp @kind object;
  #L16b07e.  v15:= new `java.lang.IllegalArgumentException`;
  #L16b082.  call temp:= `toString`(v14) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b088.  v14:= temp @kind object;
  #L16b08a.  call `<init>`(v15, v14) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b090.  throw v15;
}
procedure `boolean` `request`(`okio.RealBufferedSource` v7 @kind this, `long` v8 ) @signature `Lokio/RealBufferedSource;.request:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16a9d4.  v0:= 0I;
  #L16a9d6.  v1:= 1I;
  #L16a9d8.  v2:= 0L;
  #L16a9dc.  v4:= lcmp(v8, v2);
  #L16a9e0.  if v4 < 0 then goto L16a9e8;
  #L16a9e4.  v2:= 1I;
  #L16a9e6.  goto L16a9ea;
  #L16a9e8.  v2:= 0I;
  #L16a9ea.  if v2 == 0 then goto L16aa4c;
  #L16a9ee.  v2:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16a9f2.  v2:= v2 ^~ v1 @kind int;
  #L16a9f4.  if v2 == 0 then goto L16aa34;
  #L16a9f8.  v2:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16a9fc.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16aa02.  v2:= temp @kind wide;
  #L16aa04.  v4:= lcmp(v2, v8);
  #L16aa08.  if v4 >= 0 then goto L16aa30;
  #L16aa0c.  v2:= v7.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16aa10.  v3:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16aa14.  v4:= 8192I;
  #L16aa18.  v4:= (`long`) v4 @kind i2l;
  #L16aa1a.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16aa20.  v2:= temp @kind wide;
  #L16aa22.  v4:= -1L;
  #L16aa26.  v6:= lcmp(v2, v4);
  #L16aa2a.  if v6 != 0 then goto L16a9f8;
  #L16aa2e.  goto L16aa32;
  #L16aa30.  v0:= 1I;
  #L16aa32.  return v0;
  #L16aa34.  v8:= new `java.lang.IllegalStateException`;
  #L16aa38.  v9:= "closed" @kind object;
  #L16aa3c.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16aa42.  v9:= temp @kind object;
  #L16aa44.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16aa4a.  throw v8;
  #L16aa4c.  v0:= new `java.lang.StringBuilder`;
  #L16aa50.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16aa56.  v1:= "byteCount < 0: " @kind object;
  #L16aa5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aa60.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aa66.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16aa6c.  v8:= temp @kind object;
  #L16aa6e.  v9:= new `java.lang.IllegalArgumentException`;
  #L16aa72.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16aa78.  v8:= temp @kind object;
  #L16aa7a.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16aa80.  throw v9;
}
procedure `void` `require`(`okio.RealBufferedSource` v0 @kind this, `long` v1 ) @signature `Lokio/RealBufferedSource;.require:(J)V` @AccessFlag PUBLIC {
    temp;

  #L16b9bc.  call temp:= `request`(v0, v1) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L16b9c2.  v1:= temp;
  #L16b9c4.  if v1 == 0 then goto L16b9ca;
  #L16b9c8.  return @kind void;
  #L16b9ca.  v1:= new `java.io.EOFException`;
  #L16b9ce.  call `<init>`(v1) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L16b9d4.  throw v1;
}
procedure `int` `select`(`okio.RealBufferedSource` v8 @kind this, `okio.Options` v9 @kind object) @signature `Lokio/RealBufferedSource;.select:(Lokio/Options;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L16acf8.  v0:= "options" @kind object;
  #L16acfc.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16ad02.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16ad06.  v1:= 1I;
  #L16ad08.  v0:= v0 ^~ v1 @kind int;
  #L16ad0a.  if v0 == 0 then goto L16ad72;
  #L16ad0e.  v0:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ad12.  call temp:= `selectPrefix`(v0, v9, v1) @signature `Lokio/internal/BufferKt;.selectPrefix:(Lokio/Buffer;Lokio/Options;Z)I` @kind static;
  #L16ad18.  v0:= temp;
  #L16ad1a.  v2:= -2I;
  #L16ad1c.  v3:= -1I;
  #L16ad1e.  if v0 == v2 then goto L16ad4c;
  #L16ad22.  if v0 == v3 then goto L16ad48;
  #L16ad26.  call temp:= `getByteStrings$okio`(v9) @signature `Lokio/Options;.getByteStrings$okio:()[Lokio/ByteString;` @kind virtual;
  #L16ad2c.  v9:= temp @kind object;
  #L16ad2e.  v9:= v9[v0] @kind object;
  #L16ad32.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L16ad38.  v9:= temp;
  #L16ad3a.  v1:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ad3e.  v2:= (`long`) v9 @kind i2l;
  #L16ad40.  call `skip`(v1, v2) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L16ad46.  goto L16ad70;
  #L16ad48.  v0:= -1I;
  #L16ad4a.  goto L16ad70;
  #L16ad4c.  v0:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16ad50.  v2:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ad54.  v4:= 8192I;
  #L16ad58.  v4:= (`long`) v4 @kind i2l;
  #L16ad5a.  call temp:= `read`(v0, v2, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16ad60.  v4:= temp @kind wide;
  #L16ad62.  v6:= -1L;
  #L16ad66.  v0:= lcmp(v4, v6);
  #L16ad6a.  if v0 != 0 then goto L16ad0e;
  #L16ad6e.  goto L16ad48;
  #L16ad70.  return v0;
  #L16ad72.  v9:= new `java.lang.IllegalStateException`;
  #L16ad76.  v0:= "closed" @kind object;
  #L16ad7a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16ad80.  v0:= temp @kind object;
  #L16ad82.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16ad88.  throw v9;
}
procedure `void` `skip`(`okio.RealBufferedSource` v5 @kind this, `long` v6 ) @signature `Lokio/RealBufferedSource;.skip:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16b9e8.  v0:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L16b9ec.  v0:= v0 ^~ 1;
  #L16b9f0.  if v0 == 0 then goto L16ba68;
  #L16b9f4.  v0:= 0L;
  #L16b9f8.  v2:= lcmp(v6, v0);
  #L16b9fc.  if v2 <= 0 then goto L16ba66;
  #L16ba00.  v2:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ba04.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16ba0a.  v2:= temp @kind wide;
  #L16ba0c.  v4:= lcmp(v2, v0);
  #L16ba10.  if v4 != 0 then goto L16ba44;
  #L16ba14.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16ba18.  v1:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ba1c.  v2:= 8192I;
  #L16ba20.  v2:= (`long`) v2 @kind i2l;
  #L16ba22.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L16ba28.  v0:= temp @kind wide;
  #L16ba2a.  v2:= -1L;
  #L16ba2e.  v4:= lcmp(v0, v2);
  #L16ba32.  if v4 == 0 then goto L16ba38;
  #L16ba36.  goto L16ba44;
  #L16ba38.  v6:= new `java.io.EOFException`;
  #L16ba3c.  call `<init>`(v6) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L16ba42.  throw v6;
  #L16ba44.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ba48.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L16ba4e.  v0:= temp @kind wide;
  #L16ba50.  call temp:= `min`(v6, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L16ba56.  v0:= temp @kind wide;
  #L16ba58.  v2:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L16ba5c.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L16ba62.  v6:= v6 - v0 @kind long;
  #L16ba64.  goto L16b9f4;
  #L16ba66.  return @kind void;
  #L16ba68.  v6:= new `java.lang.IllegalStateException`;
  #L16ba6c.  v7:= "closed" @kind object;
  #L16ba70.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16ba76.  v7:= temp @kind object;
  #L16ba78.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16ba7e.  throw v6;
}
procedure `okio.Timeout` `timeout`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16b7f4.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16b7f8.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L16b7fe.  v0:= temp @kind object;
  #L16b800.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16b0a4.  v0:= new `java.lang.StringBuilder`;
  #L16b0a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16b0ae.  v1:= "buffer(" @kind object;
  #L16b0b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b0b8.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L16b0bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b0c2.  v1:= 41I;
  #L16b0c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b0cc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b0d2.  v0:= temp @kind object;
  #L16b0d4.  return v0 @kind object;
}
