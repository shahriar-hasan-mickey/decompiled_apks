record `tgio.rncryptor.RNCryptorNative` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<clinit>`() @signature `Ltgio/rncryptor/RNCryptorNative;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c6edc.  v0:= "gnustl_shared" @kind object;
  #L1c6ee0.  call `loadLibrary`(v0) @signature `Ljava/lang/System;.loadLibrary:(Ljava/lang/String;)V` @kind static;
  #L1c6ee6.  v0:= "cryptopp_shared" @kind object;
  #L1c6eea.  call `loadLibrary`(v0) @signature `Ljava/lang/System;.loadLibrary:(Ljava/lang/String;)V` @kind static;
  #L1c6ef0.  v0:= "rncrypto" @kind object;
  #L1c6ef4.  call `loadLibrary`(v0) @signature `Ljava/lang/System;.loadLibrary:(Ljava/lang/String;)V` @kind static;
  #L1c6efa.  return @kind void;
}
procedure `void` `<init>`(`tgio.rncryptor.RNCryptorNative` v0 @kind this) @signature `Ltgio/rncryptor/RNCryptorNative;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1c6f0c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c6f12.  return @kind void;
}
procedure `byte`[] `a`(`java.io.File` v4 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.a:(Ljava/io/File;)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c6e74.  call temp:= `length`(v4) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L1c6e7a.  v0:= temp @kind wide;
  #L1c6e7c.  v1:= (`int`) v0 @kind l2i;
  #L1c6e7e.  v0:= new `byte`[v1];
  #L1c6e82.  v2:= new `java.io.BufferedInputStream`;
  #L1c6e86.  v3:= new `java.io.FileInputStream`;
  #L1c6e8a.  call `<init>`(v3, v4) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L1c6e90.  call `<init>`(v2, v3) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1c6e96.  v4:= 0I;
  #L1c6e98.  call temp:= `read`(v2, v0, v4, v1) @signature `Ljava/io/BufferedInputStream;.read:([BII)I` @kind virtual;
  #L1c6e9e.  call `close`(v2) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L1c6ea4.  goto L1c6eb8;
  #L1c6ea6.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L1c6ea8.  call `printStackTrace`(v4) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L1c6eae.  goto L1c6eb8;
  #L1c6eb0.  v4:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L1c6eb2.  call `printStackTrace`(v4) @signature `Ljava/io/FileNotFoundException;.printStackTrace:()V` @kind virtual;
  #L1c6eb8.  return v0 @kind object;
  catch `java.io.FileNotFoundException` @[L1c6e82..L1c6ea4] goto L1c6eb0;
  catch `java.io.IOException` @[L1c6e82..L1c6ea4] goto L1c6ea6;
}
procedure `void` `b`(`java.io.File` v2 @kind object, `byte`[] v3 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.b:(Ljava/io/File;[B)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1c7044.  v0:= new `java.io.BufferedOutputStream`;
  #L1c7048.  v1:= new `java.io.FileOutputStream`;
  #L1c704c.  call `<init>`(v1, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L1c7052.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L1c7058.  call `write`(v0, v3) @signature `Ljava/io/BufferedOutputStream;.write:([B)V` @kind virtual;
  #L1c705e.  call `flush`(v0) @signature `Ljava/io/BufferedOutputStream;.flush:()V` @kind virtual;
  #L1c7064.  call `close`(v0) @signature `Ljava/io/BufferedOutputStream;.close:()V` @kind virtual;
  #L1c706a.  return @kind void;
}
procedure `void` `decryptAsync`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `tgio.rncryptor.RNCryptorNative$RNCryptorNativeCallback` v4 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.decryptAsync:(Ljava/lang/String;Ljava/lang/String;Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c6f24.  v0:= 0I;
  #L1c6f26.  v1:= new `tgio.rncryptor.RNCryptorNative`;
  #L1c6f2a.  call `<init>`(v1) @signature `Ltgio/rncryptor/RNCryptorNative;.<init>:()V` @kind direct;
  #L1c6f30.  call temp:= `decrypt`(v1, v2, v3) @signature `Ltgio/rncryptor/RNCryptorNative;.decrypt:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1c6f36.  v2:= temp @kind object;
  #L1c6f38.  call `done`(v4, v2, v0) @signature `Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;.done:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind interface;
  #L1c6f3e.  goto L1c6f48;
  #L1c6f40.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L1c6f42.  call `done`(v4, v0, v2) @signature `Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;.done:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind interface;
  #L1c6f48.  return @kind void;
  catch `java.lang.Exception` @[L1c6f26..L1c6f3e] goto L1c6f40;
}
procedure `void` `decryptFile`(`java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.decryptFile:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c6f6c.  call temp:= `a`(v2) @signature `Ltgio/rncryptor/RNCryptorNative;.a:(Ljava/io/File;)[B` @kind static;
  #L1c6f72.  v2:= temp @kind object;
  #L1c6f74.  v0:= new `tgio.rncryptor.RNCryptorNative`;
  #L1c6f78.  call `<init>`(v0) @signature `Ltgio/rncryptor/RNCryptorNative;.<init>:()V` @kind direct;
  #L1c6f7e.  v1:= new `java.lang.String`;
  #L1c6f82.  call `<init>`(v1, v2) @signature `Ljava/lang/String;.<init>:([B)V` @kind direct;
  #L1c6f88.  call temp:= `decrypt`(v0, v1, v4) @signature `Ltgio/rncryptor/RNCryptorNative;.decrypt:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1c6f8e.  v2:= temp @kind object;
  #L1c6f90.  v4:= 0I;
  #L1c6f92.  call temp:= `decode`(v2, v4) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L1c6f98.  v2:= temp @kind object;
  #L1c6f9a.  call `b`(v3, v2) @signature `Ltgio/rncryptor/RNCryptorNative;.b:(Ljava/io/File;[B)V` @kind static;
  #L1c6fa0.  return @kind void;
}
procedure `void` `encryptAsync`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `tgio.rncryptor.RNCryptorNative$RNCryptorNativeCallback` v4 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.encryptAsync:(Ljava/lang/String;Ljava/lang/String;Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c6fb4.  v0:= 0I;
  #L1c6fb6.  v1:= new `tgio.rncryptor.RNCryptorNative`;
  #L1c6fba.  call `<init>`(v1) @signature `Ltgio/rncryptor/RNCryptorNative;.<init>:()V` @kind direct;
  #L1c6fc0.  call temp:= `encrypt`(v1, v2, v3) @signature `Ltgio/rncryptor/RNCryptorNative;.encrypt:(Ljava/lang/String;Ljava/lang/String;)[B` @kind virtual;
  #L1c6fc6.  v2:= temp @kind object;
  #L1c6fc8.  v3:= new `java.lang.String`;
  #L1c6fcc.  v1:= "UTF-8" @kind object;
  #L1c6fd0.  call `<init>`(v3, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1c6fd6.  call `done`(v4, v3, v0) @signature `Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;.done:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind interface;
  #L1c6fdc.  goto L1c6fe6;
  #L1c6fde.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L1c6fe0.  call `done`(v4, v0, v2) @signature `Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;.done:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind interface;
  #L1c6fe6.  return @kind void;
  catch `java.lang.Exception` @[L1c6fb6..L1c6fdc] goto L1c6fde;
}
procedure `void` `encryptFile`(`java.io.File` v1 @kind object, `java.io.File` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.encryptFile:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c7008.  call temp:= `a`(v1) @signature `Ltgio/rncryptor/RNCryptorNative;.a:(Ljava/io/File;)[B` @kind static;
  #L1c700e.  v1:= temp @kind object;
  #L1c7010.  v0:= 0I;
  #L1c7012.  call temp:= `encodeToString`(v1, v0) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L1c7018.  v1:= temp @kind object;
  #L1c701a.  v0:= new `tgio.rncryptor.RNCryptorNative`;
  #L1c701e.  call `<init>`(v0) @signature `Ltgio/rncryptor/RNCryptorNative;.<init>:()V` @kind direct;
  #L1c7024.  call temp:= `encrypt`(v0, v1, v3) @signature `Ltgio/rncryptor/RNCryptorNative;.encrypt:(Ljava/lang/String;Ljava/lang/String;)[B` @kind virtual;
  #L1c702a.  v1:= temp @kind object;
  #L1c702c.  call `b`(v2, v1) @signature `Ltgio/rncryptor/RNCryptorNative;.b:(Ljava/io/File;[B)V` @kind static;
  #L1c7032.  return @kind void;
}
procedure `java.lang.String` `decrypt`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.decrypt:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_NATIVE {

  # return;
}
procedure `byte`[] `encrypt`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.encrypt:(Ljava/lang/String;Ljava/lang/String;)[B` @AccessFlag PUBLIC_NATIVE {

  # return;
}
procedure `java.lang.String` `getABI`() @signature `Ltgio/rncryptor/RNCryptorNative;.getABI:()Ljava/lang/String;` @AccessFlag PUBLIC_NATIVE {

  # return;
}
