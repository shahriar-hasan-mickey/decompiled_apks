record `org.simpleframework.xml.util.WeakCache$Segment` @kind class @AccessFlag PUBLIC extends `java.util.WeakHashMap` @kind class {
  `org.simpleframework.xml.util.WeakCache` `org.simpleframework.xml.util.WeakCache$Segment.this$0` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `org.simpleframework.xml.util.WeakCache` v1 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.<init>:(Lorg/simpleframework/xml/util/WeakCache;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1bcb38.  v0.`org.simpleframework.xml.util.WeakCache$Segment.this$0` @type ^`org.simpleframework.xml.util.WeakCache` := v1 @kind object;
  #L1bcb3c.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L1bcb42.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `org.simpleframework.xml.util.WeakCache` v1 @kind object, `org.simpleframework.xml.util.WeakCache$1` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.<init>:(Lorg/simpleframework/xml/util/WeakCache;Lorg/simpleframework/xml/util/WeakCache$1;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1bcb54.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.<init>:(Lorg/simpleframework/xml/util/WeakCache;)V` @kind direct;
  #L1bcb5a.  return @kind void;
}
procedure `void` `cache`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L1bcb6c.  @monitorenter v0
  #L1bcb6e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/WeakHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bcb74.  @monitorexit v0
  #L1bcb76.  return @kind void;
  #L1bcb78.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bcb7a.  @monitorexit v0
  #L1bcb7c.  throw v1;
  catch `java.lang.Throwable` @[L1bcb6e..L1bcb74] goto L1bcb78;
}
procedure `boolean` `contains`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L1bcaa8.  @monitorenter v0
  #L1bcaaa.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/WeakHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1bcab0.  v1:= temp;
  #L1bcab2.  @monitorexit v0
  #L1bcab4.  return v1;
  #L1bcab6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bcab8.  @monitorexit v0
  #L1bcaba.  throw v1;
  catch `java.lang.Throwable` @[L1bcaaa..L1bcab2] goto L1bcab6;
}
procedure `java.lang.Object` `fetch`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1bcad8.  @monitorenter v0
  #L1bcada.  call temp:= `get`(v0, v1) @signature `Ljava/util/WeakHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bcae0.  v1:= temp @kind object;
  #L1bcae2.  @monitorexit v0
  #L1bcae4.  return v1 @kind object;
  #L1bcae6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bcae8.  @monitorexit v0
  #L1bcaea.  throw v1;
  catch `java.lang.Throwable` @[L1bcada..L1bcae2] goto L1bcae6;
}
procedure `java.lang.Object` `take`(`org.simpleframework.xml.util.WeakCache$Segment` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.take:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1bcb08.  @monitorenter v0
  #L1bcb0a.  call temp:= `remove`(v0, v1) @signature `Ljava/util/WeakHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bcb10.  v1:= temp @kind object;
  #L1bcb12.  @monitorexit v0
  #L1bcb14.  return v1 @kind object;
  #L1bcb16.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1bcb18.  @monitorexit v0
  #L1bcb1a.  throw v1;
  catch `java.lang.Throwable` @[L1bcb0a..L1bcb12] goto L1bcb16;
}
