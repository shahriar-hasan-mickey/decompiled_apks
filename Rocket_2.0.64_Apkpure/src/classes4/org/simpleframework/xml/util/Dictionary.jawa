record `org.simpleframework.xml.util.Dictionary` @kind class @AccessFlag PUBLIC extends `java.util.AbstractSet` @kind class {
  `org.simpleframework.xml.util.Dictionary$Table` `org.simpleframework.xml.util.Dictionary.map` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.Dictionary` v1 @kind this) @signature `Lorg/simpleframework/xml/util/Dictionary;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1bc41c.  call `<init>`(v1) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L1bc422.  v0:= new `org.simpleframework.xml.util.Dictionary$Table`;
  #L1bc426.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/Dictionary$Table;.<init>:()V` @kind direct;
  #L1bc42c.  v1.`org.simpleframework.xml.util.Dictionary.map` @type ^`org.simpleframework.xml.util.Dictionary$Table` := v0 @kind object;
  #L1bc430.  return @kind void;
}
procedure `boolean` `add`(`org.simpleframework.xml.util.Dictionary` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/Dictionary;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1bc33c.  v1:= (`org.simpleframework.xml.util.Entry`) v1 @kind object;
  #L1bc340.  call temp:= `add`(v0, v1) @signature `Lorg/simpleframework/xml/util/Dictionary;.add:(Lorg/simpleframework/xml/util/Entry;)Z` @kind virtual;
  #L1bc346.  v1:= temp;
  #L1bc348.  return v1;
}
procedure `boolean` `add`(`org.simpleframework.xml.util.Dictionary` v2 @kind this, `org.simpleframework.xml.util.Entry` v3 @kind object) @signature `Lorg/simpleframework/xml/util/Dictionary;.add:(Lorg/simpleframework/xml/util/Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1bc35c.  v0:= v2.`org.simpleframework.xml.util.Dictionary.map` @type ^`org.simpleframework.xml.util.Dictionary$Table` @kind object;
  #L1bc360.  call temp:= `getName`(v3) @signature `Lorg/simpleframework/xml/util/Entry;.getName:()Ljava/lang/String;` @kind interface;
  #L1bc366.  v1:= temp @kind object;
  #L1bc368.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bc36e.  v3:= temp @kind object;
  #L1bc370.  if v3 == 0 then goto L1bc378;
  #L1bc374.  v3:= 1I;
  #L1bc376.  goto L1bc37a;
  #L1bc378.  v3:= 0I;
  #L1bc37a.  return v3;
}
procedure `org.simpleframework.xml.util.Entry` `get`(`org.simpleframework.xml.util.Dictionary` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/util/Dictionary;.get:(Ljava/lang/String;)Lorg/simpleframework/xml/util/Entry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc3d4.  v0:= v1.`org.simpleframework.xml.util.Dictionary.map` @type ^`org.simpleframework.xml.util.Dictionary$Table` @kind object;
  #L1bc3d8.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bc3de.  v2:= temp @kind object;
  #L1bc3e0.  v2:= (`org.simpleframework.xml.util.Entry`) v2 @kind object;
  #L1bc3e4.  return v2 @kind object;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.util.Dictionary` v1 @kind this) @signature `Lorg/simpleframework/xml/util/Dictionary;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc3ac.  v0:= v1.`org.simpleframework.xml.util.Dictionary.map` @type ^`org.simpleframework.xml.util.Dictionary$Table` @kind object;
  #L1bc3b0.  call temp:= `values`(v0) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L1bc3b6.  v0:= temp @kind object;
  #L1bc3b8.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1bc3be.  v0:= temp @kind object;
  #L1bc3c0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.util.Entry` `remove`(`org.simpleframework.xml.util.Dictionary` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/util/Dictionary;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/util/Entry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc3f8.  v0:= v1.`org.simpleframework.xml.util.Dictionary.map` @type ^`org.simpleframework.xml.util.Dictionary$Table` @kind object;
  #L1bc3fc.  call temp:= `remove`(v0, v2) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bc402.  v2:= temp @kind object;
  #L1bc404.  v2:= (`org.simpleframework.xml.util.Entry`) v2 @kind object;
  #L1bc408.  return v2 @kind object;
}
procedure `int` `size`(`org.simpleframework.xml.util.Dictionary` v1 @kind this) @signature `Lorg/simpleframework/xml/util/Dictionary;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc38c.  v0:= v1.`org.simpleframework.xml.util.Dictionary.map` @type ^`org.simpleframework.xml.util.Dictionary$Table` @kind object;
  #L1bc390.  call temp:= `size`(v0) @signature `Ljava/util/HashMap;.size:()I` @kind virtual;
  #L1bc396.  v0:= temp;
  #L1bc398.  return v0;
}
