record `org.simpleframework.xml.util.WeakCache$SegmentList` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface {
  `java.util.List` `org.simpleframework.xml.util.WeakCache$SegmentList.a` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.util.WeakCache$SegmentList.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.util.WeakCache` `org.simpleframework.xml.util.WeakCache$SegmentList.this$0` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.WeakCache$SegmentList` v0 @kind this, `org.simpleframework.xml.util.WeakCache` v1 @kind object, `int` v2 ) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.<init>:(Lorg/simpleframework/xml/util/WeakCache;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1bca3c.  v0.`org.simpleframework.xml.util.WeakCache$SegmentList.this$0` @type ^`org.simpleframework.xml.util.WeakCache` := v1 @kind object;
  #L1bca40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bca46.  v1:= new `java.util.ArrayList`;
  #L1bca4a.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1bca50.  v0.`org.simpleframework.xml.util.WeakCache$SegmentList.a` @type ^`java.util.List` := v1 @kind object;
  #L1bca54.  v0.`org.simpleframework.xml.util.WeakCache$SegmentList.b` @type ^`int` := v2;
  #L1bca58.  call `a`(v0, v2) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.a:(I)V` @kind direct;
  #L1bca5e.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.util.WeakCache$SegmentList` v4 @kind this, `int` v5 ) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bca70.  v0:= v5 + -1;
  #L1bca74.  if v5 <= 0 then goto L1bca96;
  #L1bca78.  v5:= v4.`org.simpleframework.xml.util.WeakCache$SegmentList.a` @type ^`java.util.List` @kind object;
  #L1bca7c.  v1:= new `org.simpleframework.xml.util.WeakCache$Segment`;
  #L1bca80.  v2:= v4.`org.simpleframework.xml.util.WeakCache$SegmentList.this$0` @type ^`org.simpleframework.xml.util.WeakCache` @kind object;
  #L1bca84.  v3:= 0I;
  #L1bca86.  call `<init>`(v1, v2, v3) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.<init>:(Lorg/simpleframework/xml/util/WeakCache;Lorg/simpleframework/xml/util/WeakCache$1;)V` @kind direct;
  #L1bca8c.  call temp:= `add`(v5, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1bca92.  v5:= v0;
  #L1bca94.  goto L1bca70;
  #L1bca96.  return @kind void;
}
procedure `int` `b`(`org.simpleframework.xml.util.WeakCache$SegmentList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.b:(Ljava/lang/Object;)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1bc9bc.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1bc9c2.  v2:= temp;
  #L1bc9c4.  v0:= v1.`org.simpleframework.xml.util.WeakCache$SegmentList.b` @type ^`int`;
  #L1bc9c8.  v2:= v2 %% v0 @kind int;
  #L1bc9ca.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L1bc9d0.  v2:= temp;
  #L1bc9d2.  return v2;
}
procedure `org.simpleframework.xml.util.WeakCache$Segment` `get`(`org.simpleframework.xml.util.WeakCache$SegmentList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.get:(Ljava/lang/Object;)Lorg/simpleframework/xml/util/WeakCache$Segment;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bca04.  call temp:= `b`(v1, v2) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.b:(Ljava/lang/Object;)I` @kind direct;
  #L1bca0a.  v2:= temp;
  #L1bca0c.  v0:= v1.`org.simpleframework.xml.util.WeakCache$SegmentList.b` @type ^`int`;
  #L1bca10.  if v2 >= v0 then goto L1bca26;
  #L1bca14.  v0:= v1.`org.simpleframework.xml.util.WeakCache$SegmentList.a` @type ^`java.util.List` @kind object;
  #L1bca18.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1bca1e.  v2:= temp @kind object;
  #L1bca20.  v2:= (`org.simpleframework.xml.util.WeakCache$Segment`) v2 @kind object;
  #L1bca24.  return v2 @kind object;
  #L1bca26.  v2:= 0I;
  #L1bca28.  return v2 @kind object;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.util.WeakCache$SegmentList` v1 @kind this) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc9e4.  v0:= v1.`org.simpleframework.xml.util.WeakCache$SegmentList.a` @type ^`java.util.List` @kind object;
  #L1bc9e8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1bc9ee.  v0:= temp @kind object;
  #L1bc9f0.  return v0 @kind object;
}
