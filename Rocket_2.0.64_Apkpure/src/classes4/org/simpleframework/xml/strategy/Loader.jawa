record `org.simpleframework.xml.strategy.Loader` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.simpleframework.xml.strategy.Loader` v0 @kind this) @signature `Lorg/simpleframework/xml/strategy/Loader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b5600.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b5606.  return @kind void;
}
procedure `java.lang.ClassLoader` `a`() @signature `Lorg/simpleframework/xml/strategy/Loader;.a:()Ljava/lang/ClassLoader;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b55bc.  v0:= constclass @type ^`org.simpleframework.xml.strategy.Loader` @kind object;
  #L1b55c0.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1b55c6.  v0:= temp @kind object;
  #L1b55c8.  return v0 @kind object;
}
procedure `java.lang.ClassLoader` `b`() @signature `Lorg/simpleframework/xml/strategy/Loader;.b:()Ljava/lang/ClassLoader;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b55dc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1b55e2.  v0:= temp @kind object;
  #L1b55e4.  call temp:= `getContextClassLoader`(v0) @signature `Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1b55ea.  v0:= temp @kind object;
  #L1b55ec.  return v0 @kind object;
}
procedure `java.lang.Class` `load`(`org.simpleframework.xml.strategy.Loader` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/strategy/Loader;.load:(Ljava/lang/String;)Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b558c.  call temp:= `b`() @signature `Lorg/simpleframework/xml/strategy/Loader;.b:()Ljava/lang/ClassLoader;` @kind static;
  #L1b5592.  v0:= temp @kind object;
  #L1b5594.  if v0 != 0 then goto L1b55a0;
  #L1b5598.  call temp:= `a`() @signature `Lorg/simpleframework/xml/strategy/Loader;.a:()Ljava/lang/ClassLoader;` @kind static;
  #L1b559e.  v0:= temp @kind object;
  #L1b55a0.  call temp:= `loadClass`(v0, v2) @signature `Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L1b55a6.  v2:= temp @kind object;
  #L1b55a8.  return v2 @kind object;
}
