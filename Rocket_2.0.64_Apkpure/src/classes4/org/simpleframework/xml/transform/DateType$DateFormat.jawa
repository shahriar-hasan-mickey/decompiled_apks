record `org.simpleframework.xml.transform.DateType$DateFormat` @kind class @AccessFlag PUBLIC {
  `java.text.SimpleDateFormat` `org.simpleframework.xml.transform.DateType$DateFormat.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.DateType$DateFormat` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/DateType$DateFormat;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1baf94.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1baf9a.  v0:= new `java.text.SimpleDateFormat`;
  #L1baf9e.  call `<init>`(v0, v2) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bafa4.  v1.`org.simpleframework.xml.transform.DateType$DateFormat.a` @type ^`java.text.SimpleDateFormat` := v0 @kind object;
  #L1bafa8.  return @kind void;
}
procedure `java.util.Date` `getDate`(`org.simpleframework.xml.transform.DateType$DateFormat` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/DateType$DateFormat;.getDate:(Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1baf60.  @monitorenter v1
  #L1baf62.  v0:= v1.`org.simpleframework.xml.transform.DateType$DateFormat.a` @type ^`java.text.SimpleDateFormat` @kind object;
  #L1baf66.  call temp:= `parse`(v0, v2) @signature `Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L1baf6c.  v2:= temp @kind object;
  #L1baf6e.  @monitorexit v1
  #L1baf70.  return v2 @kind object;
  #L1baf72.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1baf74.  @monitorexit v1
  #L1baf76.  throw v2;
  catch `java.lang.Throwable` @[L1baf62..L1baf6e] goto L1baf72;
}
procedure `java.lang.String` `getText`(`org.simpleframework.xml.transform.DateType$DateFormat` v1 @kind this, `java.util.Date` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/DateType$DateFormat;.getText:(Ljava/util/Date;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1baf2c.  @monitorenter v1
  #L1baf2e.  v0:= v1.`org.simpleframework.xml.transform.DateType$DateFormat.a` @type ^`java.text.SimpleDateFormat` @kind object;
  #L1baf32.  call temp:= `format`(v0, v2) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L1baf38.  v2:= temp @kind object;
  #L1baf3a.  @monitorexit v1
  #L1baf3c.  return v2 @kind object;
  #L1baf3e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1baf40.  @monitorexit v1
  #L1baf42.  throw v2;
  catch `java.lang.Throwable` @[L1baf2e..L1baf3a] goto L1baf3e;
}
