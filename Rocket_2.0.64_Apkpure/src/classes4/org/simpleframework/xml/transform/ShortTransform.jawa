record `org.simpleframework.xml.transform.ShortTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.ShortTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/ShortTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1bbdd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bbdde.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.ShortTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ShortTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1bbd64.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/ShortTransform;.read:(Ljava/lang/String;)Ljava/lang/Short;` @kind virtual;
  #L1bbd6a.  v1:= temp @kind object;
  #L1bbd6c.  return v1 @kind object;
}
procedure `java.lang.Short` `read`(`org.simpleframework.xml.transform.ShortTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ShortTransform;.read:(Ljava/lang/String;)Ljava/lang/Short;` @AccessFlag PUBLIC {
    temp;

  #L1bbd80.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Short;.valueOf:(Ljava/lang/String;)Ljava/lang/Short;` @kind static;
  #L1bbd86.  v1:= temp @kind object;
  #L1bbd88.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.ShortTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ShortTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1bbd9c.  v1:= (`java.lang.Short`) v1 @kind object;
  #L1bbda0.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/ShortTransform;.write:(Ljava/lang/Short;)Ljava/lang/String;` @kind virtual;
  #L1bbda6.  v1:= temp @kind object;
  #L1bbda8.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.ShortTransform` v0 @kind this, `java.lang.Short` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ShortTransform;.write:(Ljava/lang/Short;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L1bbdbc.  call temp:= `toString`(v1) @signature `Ljava/lang/Short;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bbdc2.  v1:= temp @kind object;
  #L1bbdc4.  return v1 @kind object;
}
