record `org.simpleframework.xml.transform.CurrencyTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.CurrencyTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/CurrencyTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1badb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1badbe.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.CurrencyTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/CurrencyTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1bad44.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/CurrencyTransform;.read:(Ljava/lang/String;)Ljava/util/Currency;` @kind virtual;
  #L1bad4a.  v1:= temp @kind object;
  #L1bad4c.  return v1 @kind object;
}
procedure `java.util.Currency` `read`(`org.simpleframework.xml.transform.CurrencyTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/CurrencyTransform;.read:(Ljava/lang/String;)Ljava/util/Currency;` @AccessFlag PUBLIC {
    temp;

  #L1bad9c.  call temp:= `getInstance`(v1) @signature `Ljava/util/Currency;.getInstance:(Ljava/lang/String;)Ljava/util/Currency;` @kind static;
  #L1bada2.  v1:= temp @kind object;
  #L1bada4.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.CurrencyTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/CurrencyTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1bad60.  v1:= (`java.util.Currency`) v1 @kind object;
  #L1bad64.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/CurrencyTransform;.write:(Ljava/util/Currency;)Ljava/lang/String;` @kind virtual;
  #L1bad6a.  v1:= temp @kind object;
  #L1bad6c.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.CurrencyTransform` v0 @kind this, `java.util.Currency` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/CurrencyTransform;.write:(Ljava/util/Currency;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L1bad80.  call temp:= `toString`(v1) @signature `Ljava/util/Currency;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bad86.  v1:= temp @kind object;
  #L1bad88.  return v1 @kind object;
}
