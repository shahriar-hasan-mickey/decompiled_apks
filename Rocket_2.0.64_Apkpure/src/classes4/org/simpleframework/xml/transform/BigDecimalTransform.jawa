record `org.simpleframework.xml.transform.BigDecimalTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.BigDecimalTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/BigDecimalTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ba7ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ba7f2.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.BigDecimalTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/BigDecimalTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1ba778.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/BigDecimalTransform;.read:(Ljava/lang/String;)Ljava/math/BigDecimal;` @kind virtual;
  #L1ba77e.  v1:= temp @kind object;
  #L1ba780.  return v1 @kind object;
}
procedure `java.math.BigDecimal` `read`(`org.simpleframework.xml.transform.BigDecimalTransform` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/BigDecimalTransform;.read:(Ljava/lang/String;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ba7d0.  v0:= new `java.math.BigDecimal`;
  #L1ba7d4.  call `<init>`(v0, v2) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ba7da.  return v0 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.BigDecimalTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/BigDecimalTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1ba794.  v1:= (`java.math.BigDecimal`) v1 @kind object;
  #L1ba798.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/BigDecimalTransform;.write:(Ljava/math/BigDecimal;)Ljava/lang/String;` @kind virtual;
  #L1ba79e.  v1:= temp @kind object;
  #L1ba7a0.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.BigDecimalTransform` v0 @kind this, `java.math.BigDecimal` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/BigDecimalTransform;.write:(Ljava/math/BigDecimal;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L1ba7b4.  call temp:= `toString`(v1) @signature `Ljava/math/BigDecimal;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ba7ba.  v1:= temp @kind object;
  #L1ba7bc.  return v1 @kind object;
}
