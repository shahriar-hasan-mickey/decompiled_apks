record `org.simpleframework.xml.transform.LocaleTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
  `java.util.regex.Pattern` `org.simpleframework.xml.transform.LocaleTransform.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.LocaleTransform` v1 @kind this) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1bb768.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bb76e.  v0:= "_" @kind object;
  #L1bb772.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L1bb778.  v0:= temp @kind object;
  #L1bb77a.  v1.`org.simpleframework.xml.transform.LocaleTransform.a` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L1bb77e.  return @kind void;
}
procedure `java.util.Locale` `a`(`org.simpleframework.xml.transform.LocaleTransform` v4 @kind this, `java.lang.String`[] v5 @kind object) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.a:([Ljava/lang/String;)Ljava/util/Locale;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bb710.  v0:= "" @kind object;
  #L1bb714.  temp:= new `java.lang.String`[v0, v0, v0];
  #L1bb71a.  v0:= temp @kind object;
  #L1bb71c.  v1:= 0I;
  #L1bb71e.  v2:= 0I;
  #L1bb720.  v3:= 3I;
  #L1bb722.  if v2 >= v3 then goto L1bb73a;
  #L1bb726.  v3:= length @variable v5;
  #L1bb728.  if v2 >= v3 then goto L1bb734;
  #L1bb72c.  v3:= v5[v2] @kind object;
  #L1bb730.  v0[v2]:= v3 @kind object;
  #L1bb734.  v2:= v2 + 1;
  #L1bb738.  goto L1bb720;
  #L1bb73a.  v5:= new `java.util.Locale`;
  #L1bb73e.  v1:= v0[v1] @kind object;
  #L1bb742.  v2:= 1I;
  #L1bb744.  v2:= v0[v2] @kind object;
  #L1bb748.  v3:= 2I;
  #L1bb74a.  v0:= v0[v3] @kind object;
  #L1bb74e.  call `<init>`(v5, v1, v2, v0) @signature `Ljava/util/Locale;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L1bb754.  return v5 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.LocaleTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1bb670.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.read:(Ljava/lang/String;)Ljava/util/Locale;` @kind virtual;
  #L1bb676.  v1:= temp @kind object;
  #L1bb678.  return v1 @kind object;
}
procedure `java.util.Locale` `read`(`org.simpleframework.xml.transform.LocaleTransform` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.read:(Ljava/lang/String;)Ljava/util/Locale;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1bb6c8.  v0:= v3.`org.simpleframework.xml.transform.LocaleTransform.a` @type ^`java.util.regex.Pattern` @kind object;
  #L1bb6cc.  call temp:= `split`(v0, v4) @signature `Ljava/util/regex/Pattern;.split:(Ljava/lang/CharSequence;)[Ljava/lang/String;` @kind virtual;
  #L1bb6d2.  v0:= temp @kind object;
  #L1bb6d4.  v1:= length @variable v0;
  #L1bb6d6.  v2:= 1I;
  #L1bb6d8.  if v1 < v2 then goto L1bb6e6;
  #L1bb6dc.  call temp:= `a`(v3, v0) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.a:([Ljava/lang/String;)Ljava/util/Locale;` @kind direct;
  #L1bb6e2.  v4:= temp @kind object;
  #L1bb6e4.  return v4 @kind object;
  #L1bb6e6.  v0:= new `org.simpleframework.xml.transform.InvalidFormatException`;
  #L1bb6ea.  v1:= new `java.lang.Object`[v2];
  #L1bb6ee.  v2:= 0I;
  #L1bb6f0.  v1[v2]:= v4 @kind object;
  #L1bb6f4.  v4:= "Invalid locale %s" @kind object;
  #L1bb6f8.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/transform/InvalidFormatException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1bb6fe.  throw v0;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.LocaleTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1bb68c.  v1:= (`java.util.Locale`) v1 @kind object;
  #L1bb690.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.write:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1bb696.  v1:= temp @kind object;
  #L1bb698.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.LocaleTransform` v0 @kind this, `java.util.Locale` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.write:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L1bb6ac.  call temp:= `toString`(v1) @signature `Ljava/util/Locale;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb6b2.  v1:= temp @kind object;
  #L1bb6b4.  return v1 @kind object;
}
