record `org.simpleframework.xml.convert.AnnotationStrategy` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.strategy.Strategy` @kind interface {
  `org.simpleframework.xml.convert.ConverterScanner` `org.simpleframework.xml.convert.AnnotationStrategy.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Strategy` `org.simpleframework.xml.convert.AnnotationStrategy.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19f870.  v0:= new `org.simpleframework.xml.strategy.TreeStrategy`;
  #L19f874.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @kind direct;
  #L19f87a.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;)V` @kind direct;
  #L19f880.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19f894.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19f89a.  v0:= new `org.simpleframework.xml.convert.ConverterScanner`;
  #L19f89e.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/convert/ConverterScanner;.<init>:()V` @kind direct;
  #L19f8a4.  v1.`org.simpleframework.xml.convert.AnnotationStrategy.a` @type ^`org.simpleframework.xml.convert.ConverterScanner` := v0 @kind object;
  #L19f8a8.  v1.`org.simpleframework.xml.convert.AnnotationStrategy.b` @type ^`org.simpleframework.xml.strategy.Strategy` := v2 @kind object;
  #L19f8ac.  return @kind void;
}
procedure `boolean` `a`(`org.simpleframework.xml.convert.AnnotationStrategy` v0 @kind this, `org.simpleframework.xml.strategy.Value` v1 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.a:(Lorg/simpleframework/xml/strategy/Value;)Z` @AccessFlag PRIVATE {
    temp;

  #L19f758.  if v1 == 0 then goto L19f76c;
  #L19f75c.  call temp:= `isReference`(v1) @signature `Lorg/simpleframework/xml/strategy/Value;.isReference:()Z` @kind interface;
  #L19f762.  v1:= temp;
  #L19f764.  if v1 == 0 then goto L19f76c;
  #L19f768.  v1:= 1I;
  #L19f76a.  goto L19f76e;
  #L19f76c.  v1:= 0I;
  #L19f76e.  return v1;
}
procedure `org.simpleframework.xml.strategy.Value` `b`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object, `org.simpleframework.xml.strategy.Value` v4 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.b:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L19f81c.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.a` @type ^`org.simpleframework.xml.convert.ConverterScanner` @kind object;
  #L19f820.  call temp:= `getConverter`(v0, v2, v4) @signature `Lorg/simpleframework/xml/convert/ConverterScanner;.getConverter:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/convert/Converter;` @kind virtual;
  #L19f826.  v0:= temp @kind object;
  #L19f828.  call temp:= `getNode`(v3) @signature `Lorg/simpleframework/xml/stream/NodeMap;.getNode:()Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L19f82e.  v3:= temp @kind object;
  #L19f830.  v3:= (`org.simpleframework.xml.stream.InputNode`) v3 @kind object;
  #L19f834.  if v0 == 0 then goto L19f85e;
  #L19f838.  call temp:= `read`(v0, v3) @signature `Lorg/simpleframework/xml/convert/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L19f83e.  v3:= temp @kind object;
  #L19f840.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L19f846.  v2:= temp @kind object;
  #L19f848.  if v4 == 0 then goto L19f852;
  #L19f84c.  call `setValue`(v4, v3) @signature `Lorg/simpleframework/xml/strategy/Value;.setValue:(Ljava/lang/Object;)V` @kind interface;
  #L19f852.  v0:= new `org.simpleframework.xml.convert.Reference`;
  #L19f856.  call `<init>`(v0, v4, v3, v2) @signature `Lorg/simpleframework/xml/convert/Reference;.<init>:(Lorg/simpleframework/xml/strategy/Value;Ljava/lang/Object;Ljava/lang/Class;)V` @kind direct;
  #L19f85c.  return v0 @kind object;
  #L19f85e.  return v4 @kind object;
}
procedure `boolean` `c`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.c:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L19f780.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.a` @type ^`org.simpleframework.xml.convert.ConverterScanner` @kind object;
  #L19f784.  call temp:= `getConverter`(v0, v2, v3) @signature `Lorg/simpleframework/xml/convert/ConverterScanner;.getConverter:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Lorg/simpleframework/xml/convert/Converter;` @kind virtual;
  #L19f78a.  v2:= temp @kind object;
  #L19f78c.  call temp:= `getNode`(v4) @signature `Lorg/simpleframework/xml/stream/NodeMap;.getNode:()Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L19f792.  v4:= temp @kind object;
  #L19f794.  v4:= (`org.simpleframework.xml.stream.OutputNode`) v4 @kind object;
  #L19f798.  if v2 == 0 then goto L19f7a6;
  #L19f79c.  call `write`(v2, v4, v3) @signature `Lorg/simpleframework/xml/convert/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L19f7a2.  v2:= 1I;
  #L19f7a4.  return v2;
  #L19f7a6.  v2:= 0I;
  #L19f7a8.  return v2;
}
procedure `org.simpleframework.xml.strategy.Value` `read`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19f7e8.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.b` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L19f7ec.  call temp:= `read`(v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/strategy/Strategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Lorg/simpleframework/xml/strategy/Value;` @kind interface;
  #L19f7f2.  v4:= temp @kind object;
  #L19f7f4.  call temp:= `a`(v1, v4) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.a:(Lorg/simpleframework/xml/strategy/Value;)Z` @kind direct;
  #L19f7fa.  v0:= temp;
  #L19f7fc.  if v0 == 0 then goto L19f802;
  #L19f800.  return v4 @kind object;
  #L19f802.  call temp:= `b`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.b:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/strategy/Value;` @kind direct;
  #L19f808.  v2:= temp @kind object;
  #L19f80a.  return v2 @kind object;
}
procedure `boolean` `write`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19f7bc.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.b` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L19f7c0.  call temp:= `write`(v0, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/strategy/Strategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Z` @kind interface;
  #L19f7c6.  v5:= temp;
  #L19f7c8.  if v5 != 0 then goto L19f7d6;
  #L19f7cc.  call temp:= `c`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.c:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @kind direct;
  #L19f7d2.  v2:= temp;
  #L19f7d4.  return v2;
  #L19f7d6.  return v5;
}
