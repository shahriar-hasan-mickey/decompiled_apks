record `org.simpleframework.xml.convert.ScannerBuilder$Entry` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.util.ConcurrentCache` @kind class, `org.simpleframework.xml.convert.Scanner` @kind interface {
  `java.lang.Class` `org.simpleframework.xml.convert.ScannerBuilder$Entry.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.ScannerBuilder$Entry` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/convert/ScannerBuilder$Entry;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1a0078.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L1a007e.  v0.`org.simpleframework.xml.convert.ScannerBuilder$Entry.a` @type ^`java.lang.Class` := v1 @kind object;
  #L1a0082.  return @kind void;
}
procedure `java.lang.annotation.Annotation` `b`(`org.simpleframework.xml.convert.ScannerBuilder$Entry` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/convert/ScannerBuilder$Entry;.b:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a0004.  v0:= v2.`org.simpleframework.xml.convert.ScannerBuilder$Entry.a` @type ^`java.lang.Class` @kind object;
  #L1a0008.  if v0 == 0 then goto L1a0024;
  #L1a000c.  call temp:= `getAnnotation`(v0, v3) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1a0012.  v1:= temp @kind object;
  #L1a0014.  if v1 == 0 then goto L1a001a;
  #L1a0018.  return v1 @kind object;
  #L1a001a.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1a0020.  v0:= temp @kind object;
  #L1a0022.  goto L1a0008;
  #L1a0024.  v3:= 0I;
  #L1a0026.  return v3 @kind object;
}
procedure `java.lang.annotation.Annotation` `scan`(`org.simpleframework.xml.convert.ScannerBuilder$Entry` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/convert/ScannerBuilder$Entry;.scan:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a0038.  call temp:= `contains`(v1, v2) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a003e.  v0:= temp;
  #L1a0040.  if v0 != 0 then goto L1a005a;
  #L1a0044.  call temp:= `b`(v1, v2) @signature `Lorg/simpleframework/xml/convert/ScannerBuilder$Entry;.b:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a004a.  v0:= temp @kind object;
  #L1a004c.  if v2 == 0 then goto L1a005a;
  #L1a0050.  if v0 == 0 then goto L1a005a;
  #L1a0054.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a005a.  call temp:= `get`(v1, v2) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a0060.  v2:= temp @kind object;
  #L1a0062.  v2:= (`java.lang.annotation.Annotation`) v2 @kind object;
  #L1a0066.  return v2 @kind object;
}
