record `org.simpleframework.xml.stream.PrefixResolver` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `org.simpleframework.xml.stream.NamespaceMap` @kind interface {
  `org.simpleframework.xml.stream.OutputNode` `org.simpleframework.xml.stream.PrefixResolver.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.PrefixResolver` v0 @kind this, `org.simpleframework.xml.stream.OutputNode` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.<init>:(Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b966c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1b9672.  v0.`org.simpleframework.xml.stream.PrefixResolver.a` @type ^`org.simpleframework.xml.stream.OutputNode` := v1 @kind object;
  #L1b9676.  return @kind void;
}
procedure `java.lang.String` `b`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b958c.  v0:= v1.`org.simpleframework.xml.stream.PrefixResolver.a` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L1b9590.  call temp:= `getNamespaces`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L1b9596.  v0:= temp @kind object;
  #L1b9598.  if v0 == 0 then goto L1b95b2;
  #L1b959c.  call temp:= `getPrefix`(v0, v2) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.getPrefix:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1b95a2.  v2:= temp @kind object;
  #L1b95a4.  call temp:= `containsValue`(v1, v2) @signature `Ljava/util/LinkedHashMap;.containsValue:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b95aa.  v0:= temp;
  #L1b95ac.  if v0 != 0 then goto L1b95b2;
  #L1b95b0.  return v2 @kind object;
  #L1b95b2.  v2:= 0I;
  #L1b95b4.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.c:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b95c8.  v0:= v1.`org.simpleframework.xml.stream.PrefixResolver.a` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L1b95cc.  call temp:= `getNamespaces`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L1b95d2.  v0:= temp @kind object;
  #L1b95d4.  if v0 == 0 then goto L1b95e2;
  #L1b95d8.  call temp:= `getReference`(v0, v2) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.getReference:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1b95de.  v2:= temp @kind object;
  #L1b95e0.  return v2 @kind object;
  #L1b95e2.  v2:= 0I;
  #L1b95e4.  return v2 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b94d0.  v0:= v1.`org.simpleframework.xml.stream.PrefixResolver.a` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L1b94d4.  call temp:= `getPrefix`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L1b94da.  v0:= temp @kind object;
  #L1b94dc.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.getPrefix:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b94f0.  call temp:= `size`(v1) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L1b94f6.  v0:= temp;
  #L1b94f8.  if v0 <= 0 then goto L1b950e;
  #L1b94fc.  call temp:= `get`(v1, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b9502.  v0:= temp @kind object;
  #L1b9504.  v0:= (`java.lang.String`) v0 @kind object;
  #L1b9508.  if v0 == 0 then goto L1b950e;
  #L1b950c.  return v0 @kind object;
  #L1b950e.  call temp:= `b`(v1, v2) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L1b9514.  v2:= temp @kind object;
  #L1b9516.  return v2 @kind object;
}
procedure `java.lang.String` `getReference`(`org.simpleframework.xml.stream.PrefixResolver` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.getReference:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b9528.  call temp:= `containsValue`(v3, v4) @signature `Ljava/util/LinkedHashMap;.containsValue:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b952e.  v0:= temp;
  #L1b9530.  if v0 == 0 then goto L1b9572;
  #L1b9534.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b953a.  v0:= temp @kind object;
  #L1b953c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b9542.  v1:= temp;
  #L1b9544.  if v1 == 0 then goto L1b9572;
  #L1b9548.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b954e.  v1:= temp @kind object;
  #L1b9550.  v1:= (`java.lang.String`) v1 @kind object;
  #L1b9554.  call temp:= `get`(v3, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b955a.  v2:= temp @kind object;
  #L1b955c.  v2:= (`java.lang.String`) v2 @kind object;
  #L1b9560.  if v2 == 0 then goto L1b953c;
  #L1b9564.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b956a.  v2:= temp;
  #L1b956c.  if v2 == 0 then goto L1b953c;
  #L1b9570.  return v1 @kind object;
  #L1b9572.  call temp:= `c`(v3, v4) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L1b9578.  v4:= temp @kind object;
  #L1b957a.  return v4 @kind object;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b9648.  call temp:= `keySet`(v1) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L1b964e.  v0:= temp @kind object;
  #L1b9650.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b9656.  v0:= temp @kind object;
  #L1b9658.  return v0 @kind object;
}
procedure `java.lang.String` `setReference`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.setReference:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b95f8.  v0:= "" @kind object;
  #L1b95fc.  call temp:= `setReference`(v1, v2, v0) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.setReference:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1b9602.  v2:= temp @kind object;
  #L1b9604.  return v2 @kind object;
}
procedure `java.lang.String` `setReference`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.setReference:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b9618.  call temp:= `b`(v1, v2) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L1b961e.  v0:= temp @kind object;
  #L1b9620.  if v0 == 0 then goto L1b9628;
  #L1b9624.  v2:= 0I;
  #L1b9626.  return v2 @kind object;
  #L1b9628.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b962e.  v2:= temp @kind object;
  #L1b9630.  v2:= (`java.lang.String`) v2 @kind object;
  #L1b9634.  return v2 @kind object;
}
