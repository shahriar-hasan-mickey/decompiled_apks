record `org.simpleframework.xml.stream.InputElement` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.InputNode` @kind interface {
  `org.simpleframework.xml.stream.InputNodeMap` `org.simpleframework.xml.stream.InputElement.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.NodeReader` `org.simpleframework.xml.stream.InputElement.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.InputNode` `org.simpleframework.xml.stream.InputElement.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.EventNode` `org.simpleframework.xml.stream.InputElement.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.InputElement` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `org.simpleframework.xml.stream.NodeReader` v3 @kind object, `org.simpleframework.xml.stream.EventNode` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/InputElement;.<init>:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/stream/NodeReader;Lorg/simpleframework/xml/stream/EventNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b7a10.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b7a16.  v0:= new `org.simpleframework.xml.stream.InputNodeMap`;
  #L1b7a1a.  call `<init>`(v0, v1, v4) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.<init>:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/stream/EventNode;)V` @kind direct;
  #L1b7a20.  v1.`org.simpleframework.xml.stream.InputElement.a` @type ^`org.simpleframework.xml.stream.InputNodeMap` := v0 @kind object;
  #L1b7a24.  v1.`org.simpleframework.xml.stream.InputElement.b` @type ^`org.simpleframework.xml.stream.NodeReader` := v3 @kind object;
  #L1b7a28.  v1.`org.simpleframework.xml.stream.InputElement.c` @type ^`org.simpleframework.xml.stream.InputNode` := v2 @kind object;
  #L1b7a2c.  v1.`org.simpleframework.xml.stream.InputElement.d` @type ^`org.simpleframework.xml.stream.EventNode` := v4 @kind object;
  #L1b7a30.  return @kind void;
}
procedure `org.simpleframework.xml.stream.InputNode` `getAttribute`(`org.simpleframework.xml.stream.InputElement` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/InputElement;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b7944.  v0:= v1.`org.simpleframework.xml.stream.InputElement.a` @type ^`org.simpleframework.xml.stream.InputNodeMap` @kind object;
  #L1b7948.  call temp:= `get`(v0, v2) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.get:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind virtual;
  #L1b794e.  v2:= temp @kind object;
  #L1b7950.  return v2 @kind object;
}
procedure `org.simpleframework.xml.stream.NodeMap` `getAttributes`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b79d8.  v0:= v1.`org.simpleframework.xml.stream.InputElement.a` @type ^`org.simpleframework.xml.stream.InputNodeMap` @kind object;
  #L1b79dc.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b7890.  v0:= v1.`org.simpleframework.xml.stream.InputElement.d` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L1b7894.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/stream/EventNode;.getName:()Ljava/lang/String;` @kind interface;
  #L1b789a.  v0:= temp @kind object;
  #L1b789c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.InputNode` `getNext`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b7964.  v0:= v1.`org.simpleframework.xml.stream.InputElement.b` @type ^`org.simpleframework.xml.stream.NodeReader` @kind object;
  #L1b7968.  call temp:= `readElement`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeReader;.readElement:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/stream/InputNode;` @kind virtual;
  #L1b796e.  v0:= temp @kind object;
  #L1b7970.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.InputNode` `getNext`(`org.simpleframework.xml.stream.InputElement` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/InputElement;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b7984.  v0:= v1.`org.simpleframework.xml.stream.InputElement.b` @type ^`org.simpleframework.xml.stream.NodeReader` @kind object;
  #L1b7988.  call temp:= `readElement`(v0, v1, v2) @signature `Lorg/simpleframework/xml/stream/NodeReader;.readElement:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind virtual;
  #L1b798e.  v2:= temp @kind object;
  #L1b7990.  return v2 @kind object;
}
procedure `org.simpleframework.xml.stream.InputNode` `getParent`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b79a4.  v0:= v1.`org.simpleframework.xml.stream.InputElement.c` @type ^`org.simpleframework.xml.stream.InputNode` @kind object;
  #L1b79a8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Node` `getParent`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.getParent:()Lorg/simpleframework/xml/stream/Node;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1b79bc.  call temp:= `getParent`(v1) @signature `Lorg/simpleframework/xml/stream/InputElement;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind virtual;
  #L1b79c2.  v0:= temp @kind object;
  #L1b79c4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Position` `getPosition`(`org.simpleframework.xml.stream.InputElement` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b79f0.  v0:= new `org.simpleframework.xml.stream.InputPosition`;
  #L1b79f4.  v1:= v2.`org.simpleframework.xml.stream.InputElement.d` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L1b79f8.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputPosition;.<init>:(Lorg/simpleframework/xml/stream/EventNode;)V` @kind direct;
  #L1b79fe.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b78b0.  v0:= v1.`org.simpleframework.xml.stream.InputElement.d` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L1b78b4.  call temp:= `getPrefix`(v0) @signature `Lorg/simpleframework/xml/stream/EventNode;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L1b78ba.  v0:= temp @kind object;
  #L1b78bc.  return v0 @kind object;
}
procedure `java.lang.String` `getReference`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.getReference:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b78d0.  v0:= v1.`org.simpleframework.xml.stream.InputElement.d` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L1b78d4.  call temp:= `getReference`(v0) @signature `Lorg/simpleframework/xml/stream/EventNode;.getReference:()Ljava/lang/String;` @kind interface;
  #L1b78da.  v0:= temp @kind object;
  #L1b78dc.  return v0 @kind object;
}
procedure `java.lang.Object` `getSource`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.getSource:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b7870.  v0:= v1.`org.simpleframework.xml.stream.InputElement.d` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L1b7874.  call temp:= `getSource`(v0) @signature `Lorg/simpleframework/xml/stream/EventNode;.getSource:()Ljava/lang/Object;` @kind interface;
  #L1b787a.  v0:= temp @kind object;
  #L1b787c.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b78f0.  v0:= v1.`org.simpleframework.xml.stream.InputElement.b` @type ^`org.simpleframework.xml.stream.NodeReader` @kind object;
  #L1b78f4.  call temp:= `readValue`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeReader;.readValue:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/String;` @kind virtual;
  #L1b78fa.  v0:= temp @kind object;
  #L1b78fc.  return v0 @kind object;
}
procedure `boolean` `isElement`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.isElement:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b7808.  v0:= 1I;
  #L1b780a.  return v0;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b781c.  v0:= v1.`org.simpleframework.xml.stream.InputElement.a` @type ^`org.simpleframework.xml.stream.InputNodeMap` @kind object;
  #L1b7820.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L1b7826.  v0:= temp;
  #L1b7828.  if v0 != 0 then goto L1b7830;
  #L1b782c.  v0:= 0I;
  #L1b782e.  return v0;
  #L1b7830.  v0:= v1.`org.simpleframework.xml.stream.InputElement.b` @type ^`org.simpleframework.xml.stream.NodeReader` @kind object;
  #L1b7834.  call temp:= `isEmpty`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeReader;.isEmpty:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind virtual;
  #L1b783a.  v0:= temp;
  #L1b783c.  return v0;
}
procedure `boolean` `isRoot`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.isRoot:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b7850.  v0:= v1.`org.simpleframework.xml.stream.InputElement.b` @type ^`org.simpleframework.xml.stream.NodeReader` @kind object;
  #L1b7854.  call temp:= `isRoot`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeReader;.isRoot:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind virtual;
  #L1b785a.  v0:= temp;
  #L1b785c.  return v0;
}
procedure `void` `skip`(`org.simpleframework.xml.stream.InputElement` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.skip:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b7a44.  v0:= v1.`org.simpleframework.xml.stream.InputElement.b` @type ^`org.simpleframework.xml.stream.NodeReader` @kind object;
  #L1b7a48.  call `skipElement`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeReader;.skipElement:(Lorg/simpleframework/xml/stream/InputNode;)V` @kind virtual;
  #L1b7a4e.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.stream.InputElement` v3 @kind this) @signature `Lorg/simpleframework/xml/stream/InputElement;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b7910.  v0:= 1I;
  #L1b7912.  v0:= new `java.lang.Object`[v0];
  #L1b7916.  call temp:= `getName`(v3) @signature `Lorg/simpleframework/xml/stream/InputElement;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b791c.  v1:= temp @kind object;
  #L1b791e.  v2:= 0I;
  #L1b7920.  v0[v2]:= v1 @kind object;
  #L1b7924.  v1:= "element %s" @kind object;
  #L1b7928.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b792e.  v0:= temp @kind object;
  #L1b7930.  return v0 @kind object;
}
