record `org.simpleframework.xml.stream.OutputDocument` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.OutputNode` @kind interface {
  `org.simpleframework.xml.stream.OutputNodeMap` `org.simpleframework.xml.stream.OutputDocument.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.NodeWriter` `org.simpleframework.xml.stream.OutputDocument.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.OutputStack` `org.simpleframework.xml.stream.OutputDocument.c` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.d` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.e` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.f` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.g` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.Mode` `org.simpleframework.xml.stream.OutputDocument.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this, `org.simpleframework.xml.stream.NodeWriter` v2 @kind object, `org.simpleframework.xml.stream.OutputStack` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.<init>:(Lorg/simpleframework/xml/stream/NodeWriter;Lorg/simpleframework/xml/stream/OutputStack;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b8d1c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b8d22.  v0:= new `org.simpleframework.xml.stream.OutputNodeMap`;
  #L1b8d26.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/OutputNodeMap;.<init>:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind direct;
  #L1b8d2c.  v1.`org.simpleframework.xml.stream.OutputDocument.a` @type ^`org.simpleframework.xml.stream.OutputNodeMap` := v0 @kind object;
  #L1b8d30.  v0:= `@@org.simpleframework.xml.stream.Mode.INHERIT` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L1b8d34.  v1.`org.simpleframework.xml.stream.OutputDocument.h` @type ^`org.simpleframework.xml.stream.Mode` := v0 @kind object;
  #L1b8d38.  v1.`org.simpleframework.xml.stream.OutputDocument.b` @type ^`org.simpleframework.xml.stream.NodeWriter` := v2 @kind object;
  #L1b8d3c.  v1.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` := v3 @kind object;
  #L1b8d40.  return @kind void;
}
procedure `void` `commit`(`org.simpleframework.xml.stream.OutputDocument` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.commit:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b8d54.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L1b8d58.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L1b8d5e.  v0:= temp;
  #L1b8d60.  if v0 != 0 then goto L1b8d78;
  #L1b8d64.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L1b8d68.  call temp:= `bottom`(v0) @signature `Lorg/simpleframework/xml/stream/OutputStack;.bottom:()Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L1b8d6e.  v0:= temp @kind object;
  #L1b8d70.  call `commit`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.commit:()V` @kind interface;
  #L1b8d76.  return @kind void;
  #L1b8d78.  v0:= new `org.simpleframework.xml.stream.NodeException`;
  #L1b8d7c.  v1:= "No root node" @kind object;
  #L1b8d80.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b8d86.  throw v0;
}
procedure `org.simpleframework.xml.stream.NodeMap` `getAttributes`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8cb0.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.a` @type ^`org.simpleframework.xml.stream.OutputNodeMap` @kind object;
  #L1b8cb4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.OutputNode` `getChild`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8cc8.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.b` @type ^`org.simpleframework.xml.stream.NodeWriter` @kind object;
  #L1b8ccc.  call temp:= `writeElement`(v0, v1, v2) @signature `Lorg/simpleframework/xml/stream/NodeWriter;.writeElement:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L1b8cd2.  v2:= temp @kind object;
  #L1b8cd4.  return v2 @kind object;
}
procedure `java.lang.String` `getComment`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getComment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8be4.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.e` @type ^`java.lang.String` @kind object;
  #L1b8be8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Mode` `getMode`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getMode:()Lorg/simpleframework/xml/stream/Mode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8c68.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.h` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L1b8c6c.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8bfc.  v0:= 0I;
  #L1b8bfe.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.NamespaceMap` `getNamespaces`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8c80.  v0:= 0I;
  #L1b8c82.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Node` `getParent`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getParent:()Lorg/simpleframework/xml/stream/Node;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1b8c94.  call temp:= `getParent`(v1) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L1b8c9a.  v0:= temp @kind object;
  #L1b8c9c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.OutputNode` `getParent`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8ce8.  v0:= 0I;
  #L1b8cea.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8c10.  v0:= 0I;
  #L1b8c12.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `boolean` v1 ) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getPrefix:(Z)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L1b8c24.  v1:= 0I;
  #L1b8c26.  return v1 @kind object;
}
procedure `java.lang.String` `getReference`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getReference:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8c38.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.d` @type ^`java.lang.String` @kind object;
  #L1b8c3c.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8c50.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.f` @type ^`java.lang.String` @kind object;
  #L1b8c54.  return v0 @kind object;
}
procedure `boolean` `isCommitted`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.isCommitted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8bb0.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L1b8bb4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L1b8bba.  v0:= temp;
  #L1b8bbc.  return v0;
}
procedure `boolean` `isRoot`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.isRoot:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8bd0.  v0:= 1I;
  #L1b8bd2.  return v0;
}
procedure `void` `remove`(`org.simpleframework.xml.stream.OutputDocument` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b8d98.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L1b8d9c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L1b8da2.  v0:= temp;
  #L1b8da4.  if v0 != 0 then goto L1b8dbc;
  #L1b8da8.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L1b8dac.  call temp:= `bottom`(v0) @signature `Lorg/simpleframework/xml/stream/OutputStack;.bottom:()Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L1b8db2.  v0:= temp @kind object;
  #L1b8db4.  call `remove`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.remove:()V` @kind interface;
  #L1b8dba.  return @kind void;
  #L1b8dbc.  v0:= new `org.simpleframework.xml.stream.NodeException`;
  #L1b8dc0.  v1:= "No root node" @kind object;
  #L1b8dc4.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b8dca.  throw v0;
}
procedure `org.simpleframework.xml.stream.OutputNode` `setAttribute`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8cfc.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.a` @type ^`org.simpleframework.xml.stream.OutputNodeMap` @kind object;
  #L1b8d00.  call temp:= `put`(v0, v2, v3) @signature `Lorg/simpleframework/xml/stream/OutputNodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L1b8d06.  v2:= temp @kind object;
  #L1b8d08.  return v2 @kind object;
}
procedure `void` `setComment`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setComment:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L1b8ddc.  v0.`org.simpleframework.xml.stream.OutputDocument.e` @type ^`java.lang.String` := v1 @kind object;
  #L1b8de0.  return @kind void;
}
procedure `void` `setData`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `boolean` v1 ) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setData:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1b8df4.  if v1 == 0 then goto L1b8e02;
  #L1b8df8.  v1:= `@@org.simpleframework.xml.stream.Mode.DATA` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L1b8dfc.  v0.`org.simpleframework.xml.stream.OutputDocument.h` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L1b8e00.  goto L1b8e0a;
  #L1b8e02.  v1:= `@@org.simpleframework.xml.stream.Mode.ESCAPE` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L1b8e06.  v0.`org.simpleframework.xml.stream.OutputDocument.h` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L1b8e0a.  return @kind void;
}
procedure `void` `setMode`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `org.simpleframework.xml.stream.Mode` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setMode:(Lorg/simpleframework/xml/stream/Mode;)V` @AccessFlag PUBLIC {
    temp;

  #L1b8e1c.  v0.`org.simpleframework.xml.stream.OutputDocument.h` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L1b8e20.  return @kind void;
}
procedure `void` `setName`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L1b8e34.  v0.`org.simpleframework.xml.stream.OutputDocument.g` @type ^`java.lang.String` := v1 @kind object;
  #L1b8e38.  return @kind void;
}
procedure `void` `setReference`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setReference:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L1b8e4c.  v0.`org.simpleframework.xml.stream.OutputDocument.d` @type ^`java.lang.String` := v1 @kind object;
  #L1b8e50.  return @kind void;
}
procedure `void` `setValue`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setValue:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L1b8e64.  v0.`org.simpleframework.xml.stream.OutputDocument.f` @type ^`java.lang.String` := v1 @kind object;
  #L1b8e68.  return @kind void;
}
