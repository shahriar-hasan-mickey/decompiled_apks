record `org.simpleframework.xml.stream.StreamProvider` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.Provider` @kind interface {
  `javax.xml.stream.XMLInputFactory` `org.simpleframework.xml.stream.StreamProvider.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.StreamProvider` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamProvider;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b9f5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b9f62.  call temp:= `newInstance`() @signature `Ljavax/xml/stream/XMLInputFactory;.newInstance:()Ljavax/xml/stream/XMLInputFactory;` @kind static;
  #L1b9f68.  v0:= temp @kind object;
  #L1b9f6a.  v1.`org.simpleframework.xml.stream.StreamProvider.a` @type ^`javax.xml.stream.XMLInputFactory` := v0 @kind object;
  #L1b9f6e.  return @kind void;
}
procedure `org.simpleframework.xml.stream.EventReader` `a`(`org.simpleframework.xml.stream.StreamProvider` v1 @kind this, `javax.xml.stream.XMLEventReader` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamProvider;.a:(Ljavax/xml/stream/XMLEventReader;)Lorg/simpleframework/xml/stream/EventReader;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b9f40.  v0:= new `org.simpleframework.xml.stream.StreamReader`;
  #L1b9f44.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/StreamReader;.<init>:(Ljavax/xml/stream/XMLEventReader;)V` @kind direct;
  #L1b9f4a.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventReader` `provide`(`org.simpleframework.xml.stream.StreamProvider` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamProvider;.provide:(Ljava/io/InputStream;)Lorg/simpleframework/xml/stream/EventReader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b9ef0.  v0:= v1.`org.simpleframework.xml.stream.StreamProvider.a` @type ^`javax.xml.stream.XMLInputFactory` @kind object;
  #L1b9ef4.  call temp:= `createXMLEventReader`(v0, v2) @signature `Ljavax/xml/stream/XMLInputFactory;.createXMLEventReader:(Ljava/io/InputStream;)Ljavax/xml/stream/XMLEventReader;` @kind virtual;
  #L1b9efa.  v2:= temp @kind object;
  #L1b9efc.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/stream/StreamProvider;.a:(Ljavax/xml/stream/XMLEventReader;)Lorg/simpleframework/xml/stream/EventReader;` @kind direct;
  #L1b9f02.  v2:= temp @kind object;
  #L1b9f04.  return v2 @kind object;
}
procedure `org.simpleframework.xml.stream.EventReader` `provide`(`org.simpleframework.xml.stream.StreamProvider` v1 @kind this, `java.io.Reader` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamProvider;.provide:(Ljava/io/Reader;)Lorg/simpleframework/xml/stream/EventReader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b9f18.  v0:= v1.`org.simpleframework.xml.stream.StreamProvider.a` @type ^`javax.xml.stream.XMLInputFactory` @kind object;
  #L1b9f1c.  call temp:= `createXMLEventReader`(v0, v2) @signature `Ljavax/xml/stream/XMLInputFactory;.createXMLEventReader:(Ljava/io/Reader;)Ljavax/xml/stream/XMLEventReader;` @kind virtual;
  #L1b9f22.  v2:= temp @kind object;
  #L1b9f24.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/stream/StreamProvider;.a:(Ljavax/xml/stream/XMLEventReader;)Lorg/simpleframework/xml/stream/EventReader;` @kind direct;
  #L1b9f2a.  v2:= temp @kind object;
  #L1b9f2c.  return v2 @kind object;
}
