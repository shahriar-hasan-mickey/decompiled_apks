record `org.simpleframework.xml.stream.PullProvider` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.Provider` @kind interface {
  `org.xmlpull.v1.XmlPullParserFactory` `org.simpleframework.xml.stream.PullProvider.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.PullProvider` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/PullProvider;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1b9754.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b975a.  call temp:= `newInstance`() @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newInstance:()Lorg/xmlpull/v1/XmlPullParserFactory;` @kind static;
  #L1b9760.  v0:= temp @kind object;
  #L1b9762.  v2.`org.simpleframework.xml.stream.PullProvider.a` @type ^`org.xmlpull.v1.XmlPullParserFactory` := v0 @kind object;
  #L1b9766.  v1:= 1I;
  #L1b9768.  call `setNamespaceAware`(v0, v1) @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.setNamespaceAware:(Z)V` @kind virtual;
  #L1b976e.  return @kind void;
}
procedure `org.simpleframework.xml.stream.EventReader` `provide`(`org.simpleframework.xml.stream.PullProvider` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/PullProvider;.provide:(Ljava/io/InputStream;)Lorg/simpleframework/xml/stream/EventReader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b96ec.  v0:= v2.`org.simpleframework.xml.stream.PullProvider.a` @type ^`org.xmlpull.v1.XmlPullParserFactory` @kind object;
  #L1b96f0.  call temp:= `newPullParser`(v0) @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newPullParser:()Lorg/xmlpull/v1/XmlPullParser;` @kind virtual;
  #L1b96f6.  v0:= temp @kind object;
  #L1b96f8.  if v3 == 0 then goto L1b9704;
  #L1b96fc.  v1:= 0I;
  #L1b96fe.  call `setInput`(v0, v3, v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.setInput:(Ljava/io/InputStream;Ljava/lang/String;)V` @kind interface;
  #L1b9704.  v3:= new `org.simpleframework.xml.stream.PullReader`;
  #L1b9708.  call `<init>`(v3, v0) @signature `Lorg/simpleframework/xml/stream/PullReader;.<init>:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L1b970e.  return v3 @kind object;
}
procedure `org.simpleframework.xml.stream.EventReader` `provide`(`org.simpleframework.xml.stream.PullProvider` v1 @kind this, `java.io.Reader` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PullProvider;.provide:(Ljava/io/Reader;)Lorg/simpleframework/xml/stream/EventReader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b9720.  v0:= v1.`org.simpleframework.xml.stream.PullProvider.a` @type ^`org.xmlpull.v1.XmlPullParserFactory` @kind object;
  #L1b9724.  call temp:= `newPullParser`(v0) @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newPullParser:()Lorg/xmlpull/v1/XmlPullParser;` @kind virtual;
  #L1b972a.  v0:= temp @kind object;
  #L1b972c.  if v2 == 0 then goto L1b9736;
  #L1b9730.  call `setInput`(v0, v2) @signature `Lorg/xmlpull/v1/XmlPullParser;.setInput:(Ljava/io/Reader;)V` @kind interface;
  #L1b9736.  v2:= new `org.simpleframework.xml.stream.PullReader`;
  #L1b973a.  call `<init>`(v2, v0) @signature `Lorg/simpleframework/xml/stream/PullReader;.<init>:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L1b9740.  return v2 @kind object;
}
