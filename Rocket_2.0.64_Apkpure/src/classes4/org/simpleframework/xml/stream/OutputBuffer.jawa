record `org.simpleframework.xml.stream.OutputBuffer` @kind class @AccessFlag PUBLIC {
  `java.lang.StringBuilder` `org.simpleframework.xml.stream.OutputBuffer.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b8abc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b8ac2.  v0:= new `java.lang.StringBuilder`;
  #L1b8ac6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b8acc.  v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L1b8ad0.  return @kind void;
}
procedure `void` `append`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this, `char` v2 ) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:(C)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8ae4.  v0:= v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L1b8ae8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8aee.  return @kind void;
}
procedure `void` `append`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8b3c.  v0:= v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L1b8b40.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8b46.  return @kind void;
}
procedure `void` `append`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:(Ljava/lang/String;II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8b58.  v0:= v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L1b8b5c.  call temp:= `append`(v0, v2, v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8b62.  return @kind void;
}
procedure `void` `append`(`org.simpleframework.xml.stream.OutputBuffer` v3 @kind this, `char`[] v4 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:([C)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b8b00.  v0:= v3.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L1b8b04.  v1:= length @variable v4;
  #L1b8b06.  v2:= 0I;
  #L1b8b08.  call temp:= `append`(v0, v4, v2, v1) @signature `Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8b0e.  return @kind void;
}
procedure `void` `append`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this, `char`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:([CII)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8b20.  v0:= v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L1b8b24.  call temp:= `append`(v0, v2, v3, v4) @signature `Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8b2a.  return @kind void;
}
procedure `void` `clear`(`org.simpleframework.xml.stream.OutputBuffer` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b8b74.  v0:= v2.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L1b8b78.  v1:= 0I;
  #L1b8b7a.  call `setLength`(v0, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L1b8b80.  return @kind void;
}
procedure `void` `write`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this, `java.io.Writer` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.write:(Ljava/io/Writer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b8b94.  v0:= v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L1b8b98.  call temp:= `append`(v2, v0) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L1b8b9e.  return @kind void;
}
