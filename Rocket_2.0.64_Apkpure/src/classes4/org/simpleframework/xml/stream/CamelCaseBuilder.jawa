record `org.simpleframework.xml.stream.CamelCaseBuilder` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.Style` @kind interface {
  `boolean` `org.simpleframework.xml.stream.CamelCaseBuilder.attribute` @AccessFlag PUBLIC_FINAL;
  `boolean` `org.simpleframework.xml.stream.CamelCaseBuilder.element` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.CamelCaseBuilder` v0 @kind this, `boolean` v1 , `boolean` v2 ) @signature `Lorg/simpleframework/xml/stream/CamelCaseBuilder;.<init>:(ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b601c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b6022.  v0.`org.simpleframework.xml.stream.CamelCaseBuilder.attribute` @type ^`boolean` := v2 @kind boolean;
  #L1b6026.  v0.`org.simpleframework.xml.stream.CamelCaseBuilder.element` @type ^`boolean` := v1 @kind boolean;
  #L1b602a.  return @kind void;
}
procedure `java.lang.String` `getAttribute`(`org.simpleframework.xml.stream.CamelCaseBuilder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/CamelCaseBuilder;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b5fc4.  v0:= 0I;
  #L1b5fc6.  if v3 == 0 then goto L1b5fde;
  #L1b5fca.  v1:= new `org.simpleframework.xml.stream.CamelCaseBuilder$Attribute`;
  #L1b5fce.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/stream/CamelCaseBuilder$Attribute;.<init>:(Lorg/simpleframework/xml/stream/CamelCaseBuilder;Ljava/lang/String;Lorg/simpleframework/xml/stream/CamelCaseBuilder$1;)V` @kind direct;
  #L1b5fd4.  call temp:= `process`(v1) @signature `Lorg/simpleframework/xml/stream/Splitter;.process:()Ljava/lang/String;` @kind virtual;
  #L1b5fda.  v3:= temp @kind object;
  #L1b5fdc.  return v3 @kind object;
  #L1b5fde.  return v0 @kind object;
}
procedure `java.lang.String` `getElement`(`org.simpleframework.xml.stream.CamelCaseBuilder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/CamelCaseBuilder;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b5ff0.  v0:= 0I;
  #L1b5ff2.  if v3 == 0 then goto L1b600a;
  #L1b5ff6.  v1:= new `org.simpleframework.xml.stream.CamelCaseBuilder$Element`;
  #L1b5ffa.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/stream/CamelCaseBuilder$Element;.<init>:(Lorg/simpleframework/xml/stream/CamelCaseBuilder;Ljava/lang/String;Lorg/simpleframework/xml/stream/CamelCaseBuilder$1;)V` @kind direct;
  #L1b6000.  call temp:= `process`(v1) @signature `Lorg/simpleframework/xml/stream/Splitter;.process:()Ljava/lang/String;` @kind virtual;
  #L1b6006.  v3:= temp @kind object;
  #L1b6008.  return v3 @kind object;
  #L1b600a.  return v0 @kind object;
}
