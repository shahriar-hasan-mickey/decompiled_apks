record `org.simpleframework.xml.stream.Stack` @kind class @AccessFlag PUBLIC extends `java.util.ArrayList` @kind class {
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.Stack` v0 @kind this, `int` v1 ) @signature `Lorg/simpleframework/xml/stream/Stack;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b9ed8.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1b9ede.  return @kind void;
}
procedure `java.lang.Object` `bottom`(`org.simpleframework.xml.stream.Stack` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/Stack;.bottom:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b9e34.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1b9e3a.  v0:= temp;
  #L1b9e3c.  if v0 > 0 then goto L1b9e44;
  #L1b9e40.  v0:= 0I;
  #L1b9e42.  return v0 @kind object;
  #L1b9e44.  v0:= 0I;
  #L1b9e46.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1b9e4c.  v0:= temp @kind object;
  #L1b9e4e.  return v0 @kind object;
}
procedure `java.lang.Object` `pop`(`org.simpleframework.xml.stream.Stack` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/Stack;.pop:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b9e60.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1b9e66.  v0:= temp;
  #L1b9e68.  if v0 > 0 then goto L1b9e70;
  #L1b9e6c.  v0:= 0I;
  #L1b9e6e.  return v0 @kind object;
  #L1b9e70.  v0:= v0 + -1;
  #L1b9e74.  call temp:= `remove`(v1, v0) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L1b9e7a.  v0:= temp @kind object;
  #L1b9e7c.  return v0 @kind object;
}
procedure `java.lang.Object` `push`(`org.simpleframework.xml.stream.Stack` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/Stack;.push:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1b9e90.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b9e96.  return v1 @kind object;
}
procedure `java.lang.Object` `top`(`org.simpleframework.xml.stream.Stack` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/Stack;.top:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b9ea8.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1b9eae.  v0:= temp;
  #L1b9eb0.  if v0 > 0 then goto L1b9eb8;
  #L1b9eb4.  v0:= 0I;
  #L1b9eb6.  return v0 @kind object;
  #L1b9eb8.  v0:= v0 + -1;
  #L1b9ebc.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1b9ec2.  v0:= temp @kind object;
  #L1b9ec4.  return v0 @kind object;
}
