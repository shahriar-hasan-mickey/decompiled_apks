record `org.simpleframework.xml.filter.MapFilter` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.filter.Filter` @kind interface {
  `org.simpleframework.xml.filter.Filter` `org.simpleframework.xml.filter.MapFilter.a` @AccessFlag PRIVATE;
  `java.util.Map` `org.simpleframework.xml.filter.MapFilter.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.filter.MapFilter` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lorg/simpleframework/xml/filter/MapFilter;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b50e0.  v0:= 0I;
  #L1b50e2.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/filter/MapFilter;.<init>:(Ljava/util/Map;Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L1b50e8.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.filter.MapFilter` v0 @kind this, `java.util.Map` v1 @kind object, `org.simpleframework.xml.filter.Filter` v2 @kind object) @signature `Lorg/simpleframework/xml/filter/MapFilter;.<init>:(Ljava/util/Map;Lorg/simpleframework/xml/filter/Filter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b50fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b5102.  v0.`org.simpleframework.xml.filter.MapFilter.a` @type ^`org.simpleframework.xml.filter.Filter` := v2 @kind object;
  #L1b5106.  v0.`org.simpleframework.xml.filter.MapFilter.b` @type ^`java.util.Map` := v1 @kind object;
  #L1b510a.  return @kind void;
}
procedure `java.lang.String` `replace`(`org.simpleframework.xml.filter.MapFilter` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/filter/MapFilter;.replace:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b5098.  v0:= v2.`org.simpleframework.xml.filter.MapFilter.b` @type ^`java.util.Map` @kind object;
  #L1b509c.  v1:= 0I;
  #L1b509e.  if v0 == 0 then goto L1b50ac;
  #L1b50a2.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1b50a8.  v0:= temp @kind object;
  #L1b50aa.  goto L1b50ae;
  #L1b50ac.  v0:= v1 @kind object;
  #L1b50ae.  if v0 == 0 then goto L1b50bc;
  #L1b50b2.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b50b8.  v3:= temp @kind object;
  #L1b50ba.  return v3 @kind object;
  #L1b50bc.  v0:= v2.`org.simpleframework.xml.filter.MapFilter.a` @type ^`org.simpleframework.xml.filter.Filter` @kind object;
  #L1b50c0.  if v0 == 0 then goto L1b50ce;
  #L1b50c4.  call temp:= `replace`(v0, v3) @signature `Lorg/simpleframework/xml/filter/Filter;.replace:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1b50ca.  v3:= temp @kind object;
  #L1b50cc.  return v3 @kind object;
  #L1b50ce.  return v1 @kind object;
}
