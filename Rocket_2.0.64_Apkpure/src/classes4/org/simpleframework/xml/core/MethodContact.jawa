record `org.simpleframework.xml.core.MethodContact` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Contact` @kind interface {
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.MethodContact.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.MethodPart` `org.simpleframework.xml.core.MethodContact.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.MethodPart` `org.simpleframework.xml.core.MethodContact.c` @AccessFlag PRIVATE;
  `java.lang.Class`[] `org.simpleframework.xml.core.MethodContact.d` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.MethodContact.e` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.MethodContact.f` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.MethodContact.g` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.MethodContact.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.MethodContact` v1 @kind this, `org.simpleframework.xml.core.MethodPart` v2 @kind object) @signature `Lorg/simpleframework/xml/core/MethodContact;.<init>:(Lorg/simpleframework/xml/core/MethodPart;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ab1e0.  v0:= 0I;
  #L1ab1e2.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/MethodContact;.<init>:(Lorg/simpleframework/xml/core/MethodPart;Lorg/simpleframework/xml/core/MethodPart;)V` @kind direct;
  #L1ab1e8.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.MethodContact` v1 @kind this, `org.simpleframework.xml.core.MethodPart` v2 @kind object, `org.simpleframework.xml.core.MethodPart` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodContact;.<init>:(Lorg/simpleframework/xml/core/MethodPart;Lorg/simpleframework/xml/core/MethodPart;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ab1fc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ab202.  call temp:= `getDeclaringClass`(v2) @signature `Lorg/simpleframework/xml/core/MethodPart;.getDeclaringClass:()Ljava/lang/Class;` @kind interface;
  #L1ab208.  v0:= temp @kind object;
  #L1ab20a.  v1.`org.simpleframework.xml.core.MethodContact.e` @type ^`java.lang.Class` := v0 @kind object;
  #L1ab20e.  call temp:= `getAnnotation`(v2) @signature `Lorg/simpleframework/xml/core/MethodPart;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L1ab214.  v0:= temp @kind object;
  #L1ab216.  v1.`org.simpleframework.xml.core.MethodContact.a` @type ^`java.lang.annotation.Annotation` := v0 @kind object;
  #L1ab21a.  call temp:= `getDependents`(v2) @signature `Lorg/simpleframework/xml/core/MethodPart;.getDependents:()[Ljava/lang/Class;` @kind interface;
  #L1ab220.  v0:= temp @kind object;
  #L1ab222.  v1.`org.simpleframework.xml.core.MethodContact.d` @type ^`java.lang.Class`[] := v0 @kind object;
  #L1ab226.  call temp:= `getDependent`(v2) @signature `Lorg/simpleframework/xml/core/MethodPart;.getDependent:()Ljava/lang/Class;` @kind interface;
  #L1ab22c.  v0:= temp @kind object;
  #L1ab22e.  v1.`org.simpleframework.xml.core.MethodContact.f` @type ^`java.lang.Class` := v0 @kind object;
  #L1ab232.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/core/MethodPart;.getType:()Ljava/lang/Class;` @kind interface;
  #L1ab238.  v0:= temp @kind object;
  #L1ab23a.  v1.`org.simpleframework.xml.core.MethodContact.g` @type ^`java.lang.Class` := v0 @kind object;
  #L1ab23e.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/MethodPart;.getName:()Ljava/lang/String;` @kind interface;
  #L1ab244.  v0:= temp @kind object;
  #L1ab246.  v1.`org.simpleframework.xml.core.MethodContact.h` @type ^`java.lang.String` := v0 @kind object;
  #L1ab24a.  v1.`org.simpleframework.xml.core.MethodContact.b` @type ^`org.simpleframework.xml.core.MethodPart` := v3 @kind object;
  #L1ab24e.  v1.`org.simpleframework.xml.core.MethodContact.c` @type ^`org.simpleframework.xml.core.MethodPart` := v2 @kind object;
  #L1ab252.  return @kind void;
}
procedure `java.lang.Object` `get`(`org.simpleframework.xml.core.MethodContact` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodContact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ab0d8.  v0:= v2.`org.simpleframework.xml.core.MethodContact.c` @type ^`org.simpleframework.xml.core.MethodPart` @kind object;
  #L1ab0dc.  call temp:= `getMethod`(v0) @signature `Lorg/simpleframework/xml/core/MethodPart;.getMethod:()Ljava/lang/reflect/Method;` @kind interface;
  #L1ab0e2.  v0:= temp @kind object;
  #L1ab0e4.  v1:= 0I;
  #L1ab0e6.  v1:= new `java.lang.Object`[v1];
  #L1ab0ea.  call temp:= `invoke`(v0, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1ab0f0.  v3:= temp @kind object;
  #L1ab0f2.  return v3 @kind object;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.MethodContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/MethodContact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ab14c.  v0:= v1.`org.simpleframework.xml.core.MethodContact.a` @type ^`java.lang.annotation.Annotation` @kind object;
  #L1ab150.  return v0 @kind object;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.MethodContact` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodContact;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ab164.  v0:= v2.`org.simpleframework.xml.core.MethodContact.c` @type ^`org.simpleframework.xml.core.MethodPart` @kind object;
  #L1ab168.  call temp:= `getAnnotation`(v0, v3) @signature `Lorg/simpleframework/xml/core/MethodPart;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L1ab16e.  v0:= temp @kind object;
  #L1ab170.  v1:= v2.`org.simpleframework.xml.core.MethodContact.a` @type ^`java.lang.annotation.Annotation` @kind object;
  #L1ab174.  call temp:= `annotationType`(v1) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L1ab17a.  v1:= temp @kind object;
  #L1ab17c.  if v3 != v1 then goto L1ab186;
  #L1ab180.  v3:= v2.`org.simpleframework.xml.core.MethodContact.a` @type ^`java.lang.annotation.Annotation` @kind object;
  #L1ab184.  return v3 @kind object;
  #L1ab186.  if v0 != 0 then goto L1ab19c;
  #L1ab18a.  v1:= v2.`org.simpleframework.xml.core.MethodContact.b` @type ^`org.simpleframework.xml.core.MethodPart` @kind object;
  #L1ab18e.  if v1 == 0 then goto L1ab19c;
  #L1ab192.  call temp:= `getAnnotation`(v1, v3) @signature `Lorg/simpleframework/xml/core/MethodPart;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L1ab198.  v3:= temp @kind object;
  #L1ab19a.  return v3 @kind object;
  #L1ab19c.  return v0 @kind object;
}
procedure `java.lang.Class` `getDeclaringClass`(`org.simpleframework.xml.core.MethodContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/MethodContact;.getDeclaringClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ab078.  v0:= v1.`org.simpleframework.xml.core.MethodContact.e` @type ^`java.lang.Class` @kind object;
  #L1ab07c.  return v0 @kind object;
}
procedure `java.lang.Class` `getDependent`(`org.simpleframework.xml.core.MethodContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/MethodContact;.getDependent:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ab090.  v0:= v1.`org.simpleframework.xml.core.MethodContact.f` @type ^`java.lang.Class` @kind object;
  #L1ab094.  return v0 @kind object;
}
procedure `java.lang.Class`[] `getDependents`(`org.simpleframework.xml.core.MethodContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/MethodContact;.getDependents:()[Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ab0c0.  v0:= v1.`org.simpleframework.xml.core.MethodContact.d` @type ^`java.lang.Class`[] @kind object;
  #L1ab0c4.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.MethodContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/MethodContact;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ab104.  v0:= v1.`org.simpleframework.xml.core.MethodContact.h` @type ^`java.lang.String` @kind object;
  #L1ab108.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.MethodPart` `getRead`(`org.simpleframework.xml.core.MethodContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/MethodContact;.getRead:()Lorg/simpleframework/xml/core/MethodPart;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ab1b0.  v0:= v1.`org.simpleframework.xml.core.MethodContact.c` @type ^`org.simpleframework.xml.core.MethodPart` @kind object;
  #L1ab1b4.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.MethodContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/MethodContact;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ab0a8.  v0:= v1.`org.simpleframework.xml.core.MethodContact.g` @type ^`java.lang.Class` @kind object;
  #L1ab0ac.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.MethodPart` `getWrite`(`org.simpleframework.xml.core.MethodContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/MethodContact;.getWrite:()Lorg/simpleframework/xml/core/MethodPart;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ab1c8.  v0:= v1.`org.simpleframework.xml.core.MethodContact.b` @type ^`org.simpleframework.xml.core.MethodPart` @kind object;
  #L1ab1cc.  return v0 @kind object;
}
procedure `boolean` `isReadOnly`(`org.simpleframework.xml.core.MethodContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/MethodContact;.isReadOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ab058.  v0:= v1.`org.simpleframework.xml.core.MethodContact.b` @type ^`org.simpleframework.xml.core.MethodPart` @kind object;
  #L1ab05c.  if v0 != 0 then goto L1ab064;
  #L1ab060.  v0:= 1I;
  #L1ab062.  goto L1ab066;
  #L1ab064.  v0:= 0I;
  #L1ab066.  return v0;
}
procedure `void` `set`(`org.simpleframework.xml.core.MethodContact` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/simpleframework/xml/core/MethodContact;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ab264.  v0:= v4.`org.simpleframework.xml.core.MethodContact.c` @type ^`org.simpleframework.xml.core.MethodPart` @kind object;
  #L1ab268.  call temp:= `getMethod`(v0) @signature `Lorg/simpleframework/xml/core/MethodPart;.getMethod:()Ljava/lang/reflect/Method;` @kind interface;
  #L1ab26e.  v0:= temp @kind object;
  #L1ab270.  call temp:= `getDeclaringClass`(v0) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L1ab276.  v0:= temp @kind object;
  #L1ab278.  v1:= v4.`org.simpleframework.xml.core.MethodContact.b` @type ^`org.simpleframework.xml.core.MethodPart` @kind object;
  #L1ab27c.  v2:= 1I;
  #L1ab27e.  v3:= 0I;
  #L1ab280.  if v1 == 0 then goto L1ab29c;
  #L1ab284.  call temp:= `getMethod`(v1) @signature `Lorg/simpleframework/xml/core/MethodPart;.getMethod:()Ljava/lang/reflect/Method;` @kind interface;
  #L1ab28a.  v0:= temp @kind object;
  #L1ab28c.  v1:= new `java.lang.Object`[v2];
  #L1ab290.  v1[v3]:= v6 @kind object;
  #L1ab294.  call temp:= `invoke`(v0, v5, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1ab29a.  return @kind void;
  #L1ab29c.  v5:= new `org.simpleframework.xml.core.MethodException`;
  #L1ab2a0.  v6:= 2I;
  #L1ab2a2.  v6:= new `java.lang.Object`[v6];
  #L1ab2a6.  v1:= v4.`org.simpleframework.xml.core.MethodContact.h` @type ^`java.lang.String` @kind object;
  #L1ab2aa.  v6[v3]:= v1 @kind object;
  #L1ab2ae.  v6[v2]:= v0 @kind object;
  #L1ab2b2.  v0:= "Property '%s' is read only in %s" @kind object;
  #L1ab2b6.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1ab2bc.  throw v5;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.MethodContact` v3 @kind this) @signature `Lorg/simpleframework/xml/core/MethodContact;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ab11c.  v0:= 1I;
  #L1ab11e.  v0:= new `java.lang.Object`[v0];
  #L1ab122.  v1:= v3.`org.simpleframework.xml.core.MethodContact.h` @type ^`java.lang.String` @kind object;
  #L1ab126.  v2:= 0I;
  #L1ab128.  v0[v2]:= v1 @kind object;
  #L1ab12c.  v1:= "method '%s'" @kind object;
  #L1ab130.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ab136.  v0:= temp @kind object;
  #L1ab138.  return v0 @kind object;
}
