record `org.simpleframework.xml.core.CompositeArray` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.ArrayFactory` `org.simpleframework.xml.core.CompositeArray.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Traverser` `org.simpleframework.xml.core.CompositeArray.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.CompositeArray.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeArray.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeArray.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeArray` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeArray;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a2338.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a233e.  v0:= new `org.simpleframework.xml.core.ArrayFactory`;
  #L1a2342.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/ArrayFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L1a2348.  v1.`org.simpleframework.xml.core.CompositeArray.a` @type ^`org.simpleframework.xml.core.ArrayFactory` := v0 @kind object;
  #L1a234c.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L1a2350.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L1a2356.  v1.`org.simpleframework.xml.core.CompositeArray.b` @type ^`org.simpleframework.xml.core.Traverser` := v0 @kind object;
  #L1a235a.  v1.`org.simpleframework.xml.core.CompositeArray.c` @type ^`java.lang.String` := v5 @kind object;
  #L1a235e.  v1.`org.simpleframework.xml.core.CompositeArray.d` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L1a2362.  v1.`org.simpleframework.xml.core.CompositeArray.e` @type ^`org.simpleframework.xml.strategy.Type` := v3 @kind object;
  #L1a2366.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.CompositeArray` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `int` v5 ) @signature `Lorg/simpleframework/xml/core/CompositeArray;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a2378.  v0:= v2.`org.simpleframework.xml.core.CompositeArray.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a237c.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a2382.  v0:= temp @kind object;
  #L1a2384.  call temp:= `isEmpty`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.isEmpty:()Z` @kind interface;
  #L1a238a.  v1:= temp;
  #L1a238c.  if v1 != 0 then goto L1a239e;
  #L1a2390.  v1:= v2.`org.simpleframework.xml.core.CompositeArray.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a2394.  call temp:= `read`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1a239a.  v3:= temp @kind object;
  #L1a239c.  goto L1a23a0;
  #L1a239e.  v3:= 0I;
  #L1a23a0.  call `set`(v4, v5, v3) @signature `Ljava/lang/reflect/Array;.set:(Ljava/lang/Object;ILjava/lang/Object;)V` @kind static;
  #L1a23a6.  return @kind void;
}
procedure `boolean` `b`(`org.simpleframework.xml.core.CompositeArray` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeArray;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a225c.  call temp:= `getNext`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a2262.  v0:= temp @kind object;
  #L1a2264.  if v0 != 0 then goto L1a226c;
  #L1a2268.  v3:= 1I;
  #L1a226a.  return v3;
  #L1a226c.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/stream/InputNode;.isEmpty:()Z` @kind interface;
  #L1a2272.  v1:= temp;
  #L1a2274.  if v1 != 0 then goto L1a225c;
  #L1a2278.  v1:= v2.`org.simpleframework.xml.core.CompositeArray.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a227c.  call temp:= `validate`(v1, v0, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L1a2282.  goto L1a225c;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeArray` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeArray;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a2294.  v0:= v2.`org.simpleframework.xml.core.CompositeArray.a` @type ^`org.simpleframework.xml.core.ArrayFactory` @kind object;
  #L1a2298.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/ArrayFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L1a229e.  v0:= temp @kind object;
  #L1a22a0.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L1a22a6.  v1:= temp @kind object;
  #L1a22a8.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L1a22ae.  v0:= temp;
  #L1a22b0.  if v0 != 0 then goto L1a22be;
  #L1a22b4.  call temp:= `read`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/CompositeArray;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a22ba.  v3:= temp @kind object;
  #L1a22bc.  return v3 @kind object;
  #L1a22be.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeArray` v5 @kind this, `org.simpleframework.xml.stream.InputNode` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeArray;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a22d0.  call temp:= `getLength`(v7) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L1a22d6.  v0:= temp;
  #L1a22d8.  v1:= 0I;
  #L1a22da.  v2:= 0I;
  #L1a22dc.  call temp:= `getPosition`(v6) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a22e2.  v3:= temp @kind object;
  #L1a22e4.  call temp:= `getNext`(v6) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a22ea.  v4:= temp @kind object;
  #L1a22ec.  if v4 != 0 then goto L1a22f2;
  #L1a22f0.  return v7 @kind object;
  #L1a22f2.  if v2 >= v0 then goto L1a2302;
  #L1a22f6.  call `a`(v5, v4, v7, v2) @signature `Lorg/simpleframework/xml/core/CompositeArray;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;I)V` @kind direct;
  #L1a22fc.  v2:= v2 + 1;
  #L1a2300.  goto L1a22dc;
  #L1a2302.  v6:= new `org.simpleframework.xml.core.ElementException`;
  #L1a2306.  v7:= 2I;
  #L1a2308.  v7:= new `java.lang.Object`[v7];
  #L1a230c.  v0:= v5.`org.simpleframework.xml.core.CompositeArray.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a2310.  v7[v1]:= v0 @kind object;
  #L1a2314.  v0:= 1I;
  #L1a2316.  v7[v0]:= v3 @kind object;
  #L1a231a.  v0:= "Array length missing or incorrect for %s at %s" @kind object;
  #L1a231e.  call `<init>`(v6, v0, v7) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a2324.  throw v6;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeArray` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeArray;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a2214.  v0:= v2.`org.simpleframework.xml.core.CompositeArray.a` @type ^`org.simpleframework.xml.core.ArrayFactory` @kind object;
  #L1a2218.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/ArrayFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L1a221e.  v0:= temp @kind object;
  #L1a2220.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L1a2226.  v1:= temp;
  #L1a2228.  if v1 != 0 then goto L1a2246;
  #L1a222c.  v1:= 0I;
  #L1a222e.  call temp:= `setInstance`(v0, v1) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a2234.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a223a.  v0:= temp @kind object;
  #L1a223c.  call temp:= `b`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/CompositeArray;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind direct;
  #L1a2242.  v3:= temp;
  #L1a2244.  return v3;
  #L1a2246.  v3:= 1I;
  #L1a2248.  return v3;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeArray` v6 @kind this, `org.simpleframework.xml.stream.OutputNode` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeArray;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a23b8.  call temp:= `getLength`(v8) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L1a23be.  v0:= temp;
  #L1a23c0.  v1:= 0I;
  #L1a23c2.  if v1 >= v0 then goto L1a23ee;
  #L1a23c6.  call temp:= `get`(v8, v1) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L1a23cc.  v2:= temp @kind object;
  #L1a23ce.  v3:= v6.`org.simpleframework.xml.core.CompositeArray.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a23d2.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a23d8.  v3:= temp @kind object;
  #L1a23da.  v4:= v6.`org.simpleframework.xml.core.CompositeArray.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a23de.  v5:= v6.`org.simpleframework.xml.core.CompositeArray.c` @type ^`java.lang.String` @kind object;
  #L1a23e2.  call `write`(v4, v7, v2, v3, v5) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V` @kind virtual;
  #L1a23e8.  v1:= v1 + 1;
  #L1a23ec.  goto L1a23c2;
  #L1a23ee.  call `commit`(v7) @signature `Lorg/simpleframework/xml/stream/OutputNode;.commit:()V` @kind interface;
  #L1a23f4.  return @kind void;
}
