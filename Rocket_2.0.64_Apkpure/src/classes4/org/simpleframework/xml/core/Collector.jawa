record `org.simpleframework.xml.core.Collector` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Criteria` @kind interface {
  `org.simpleframework.xml.core.Collector$Registry` `org.simpleframework.xml.core.Collector.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Collector$Registry` `org.simpleframework.xml.core.Collector.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Collector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Collector;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a1ec8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a1ece.  v0:= new `org.simpleframework.xml.core.Collector$Registry`;
  #L1a1ed2.  v1:= 0I;
  #L1a1ed4.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/Collector$Registry;.<init>:(Lorg/simpleframework/xml/core/Collector$1;)V` @kind direct;
  #L1a1eda.  v2.`org.simpleframework.xml.core.Collector.a` @type ^`org.simpleframework.xml.core.Collector$Registry` := v0 @kind object;
  #L1a1ede.  v0:= new `org.simpleframework.xml.core.Collector$Registry`;
  #L1a1ee2.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/Collector$Registry;.<init>:(Lorg/simpleframework/xml/core/Collector$1;)V` @kind direct;
  #L1a1ee8.  v2.`org.simpleframework.xml.core.Collector.b` @type ^`org.simpleframework.xml.core.Collector$Registry` := v0 @kind object;
  #L1a1eec.  return @kind void;
}
procedure `void` `commit`(`org.simpleframework.xml.core.Collector` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.commit:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a1f00.  v0:= v3.`org.simpleframework.xml.core.Collector.a` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L1a1f04.  call temp:= `values`(v0) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L1a1f0a.  v0:= temp @kind object;
  #L1a1f0c.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a1f12.  v0:= temp @kind object;
  #L1a1f14.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a1f1a.  v1:= temp;
  #L1a1f1c.  if v1 == 0 then goto L1a1f44;
  #L1a1f20.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a1f26.  v1:= temp @kind object;
  #L1a1f28.  v1:= (`org.simpleframework.xml.core.Variable`) v1 @kind object;
  #L1a1f2c.  call temp:= `getContact`(v1) @signature `Lorg/simpleframework/xml/core/Variable;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind virtual;
  #L1a1f32.  v2:= temp @kind object;
  #L1a1f34.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Variable;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L1a1f3a.  v1:= temp @kind object;
  #L1a1f3c.  call `set`(v2, v4, v1) @signature `Lorg/simpleframework/xml/core/Contact;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L1a1f42.  goto L1a1f14;
  #L1a1f44.  return @kind void;
}
procedure `org.simpleframework.xml.core.Variable` `get`(`org.simpleframework.xml.core.Collector` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.get:(Ljava/lang/Object;)Lorg/simpleframework/xml/core/Variable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1e28.  v0:= v1.`org.simpleframework.xml.core.Collector.a` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L1a1e2c.  call temp:= `get`(v0, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a1e32.  v2:= temp @kind object;
  #L1a1e34.  v2:= (`org.simpleframework.xml.core.Variable`) v2 @kind object;
  #L1a1e38.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Variable` `get`(`org.simpleframework.xml.core.Collector` v1 @kind this, `org.simpleframework.xml.core.Label` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.get:(Lorg/simpleframework/xml/core/Label;)Lorg/simpleframework/xml/core/Variable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1e4c.  if v2 == 0 then goto L1a1e6a;
  #L1a1e50.  call temp:= `getKey`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1a1e56.  v2:= temp @kind object;
  #L1a1e58.  v0:= v1.`org.simpleframework.xml.core.Collector.a` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L1a1e5c.  call temp:= `get`(v0, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a1e62.  v2:= temp @kind object;
  #L1a1e64.  v2:= (`org.simpleframework.xml.core.Variable`) v2 @kind object;
  #L1a1e68.  return v2 @kind object;
  #L1a1e6a.  v2:= 0I;
  #L1a1e6c.  return v2 @kind object;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.Collector` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Collector;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1e08.  v0:= v1.`org.simpleframework.xml.core.Collector.a` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L1a1e0c.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/Collector$Registry;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1a1e12.  v0:= temp @kind object;
  #L1a1e14.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Variable` `remove`(`org.simpleframework.xml.core.Collector` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.remove:(Ljava/lang/Object;)Lorg/simpleframework/xml/core/Variable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1e80.  v0:= v1.`org.simpleframework.xml.core.Collector.a` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L1a1e84.  call temp:= `remove`(v0, v2) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a1e8a.  v2:= temp @kind object;
  #L1a1e8c.  v2:= (`org.simpleframework.xml.core.Variable`) v2 @kind object;
  #L1a1e90.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Variable` `resolve`(`org.simpleframework.xml.core.Collector` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.resolve:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Variable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1ea4.  v0:= v1.`org.simpleframework.xml.core.Collector.b` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L1a1ea8.  call temp:= `get`(v0, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a1eae.  v2:= temp @kind object;
  #L1a1eb0.  v2:= (`org.simpleframework.xml.core.Variable`) v2 @kind object;
  #L1a1eb4.  return v2 @kind object;
}
procedure `void` `set`(`org.simpleframework.xml.core.Collector` v5 @kind this, `org.simpleframework.xml.core.Label` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Collector;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a1f58.  v0:= new `org.simpleframework.xml.core.Variable`;
  #L1a1f5c.  call `<init>`(v0, v6, v7) @signature `Lorg/simpleframework/xml/core/Variable;.<init>:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind direct;
  #L1a1f62.  if v6 == 0 then goto L1a1f9c;
  #L1a1f66.  call temp:= `getPaths`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L1a1f6c.  v7:= temp @kind object;
  #L1a1f6e.  call temp:= `getKey`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1a1f74.  v6:= temp @kind object;
  #L1a1f76.  v1:= length @variable v7;
  #L1a1f78.  v2:= 0I;
  #L1a1f7a.  if v2 >= v1 then goto L1a1f92;
  #L1a1f7e.  v3:= v7[v2] @kind object;
  #L1a1f82.  v4:= v5.`org.simpleframework.xml.core.Collector.b` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L1a1f86.  call temp:= `put`(v4, v3, v0) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a1f8c.  v2:= v2 + 1;
  #L1a1f90.  goto L1a1f7a;
  #L1a1f92.  v7:= v5.`org.simpleframework.xml.core.Collector.a` @type ^`org.simpleframework.xml.core.Collector$Registry` @kind object;
  #L1a1f96.  call temp:= `put`(v7, v6, v0) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a1f9c.  return @kind void;
}
