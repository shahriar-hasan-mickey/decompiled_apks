record `org.simpleframework.xml.core.CompositeKey` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.CompositeKey.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Traverser` `org.simpleframework.xml.core.CompositeKey.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Style` `org.simpleframework.xml.core.CompositeKey.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Entry` `org.simpleframework.xml.core.CompositeKey.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeKey.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeKey` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.core.Entry` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a2ab8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a2abe.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L1a2ac2.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L1a2ac8.  v1.`org.simpleframework.xml.core.CompositeKey.b` @type ^`org.simpleframework.xml.core.Traverser` := v0 @kind object;
  #L1a2acc.  call temp:= `getStyle`(v2) @signature `Lorg/simpleframework/xml/core/Context;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind interface;
  #L1a2ad2.  v0:= temp @kind object;
  #L1a2ad4.  v1.`org.simpleframework.xml.core.CompositeKey.c` @type ^`org.simpleframework.xml.stream.Style` := v0 @kind object;
  #L1a2ad8.  v1.`org.simpleframework.xml.core.CompositeKey.a` @type ^`org.simpleframework.xml.core.Context` := v2 @kind object;
  #L1a2adc.  v1.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` := v3 @kind object;
  #L1a2ae0.  v1.`org.simpleframework.xml.core.CompositeKey.e` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L1a2ae4.  return @kind void;
}
procedure `java.lang.Object` `a`(`org.simpleframework.xml.core.CompositeKey` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a2a60.  v0:= v2.`org.simpleframework.xml.core.CompositeKey.c` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L1a2a64.  call temp:= `getElement`(v0, v4) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a2a6a.  v4:= temp @kind object;
  #L1a2a6c.  v0:= v2.`org.simpleframework.xml.core.CompositeKey.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a2a70.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a2a76.  v0:= temp @kind object;
  #L1a2a78.  if v4 == 0 then goto L1a2a84;
  #L1a2a7c.  call temp:= `getNext`(v3, v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a2a82.  v3:= temp @kind object;
  #L1a2a84.  v4:= 0I;
  #L1a2a86.  if v3 != 0 then goto L1a2a8c;
  #L1a2a8a.  return v4 @kind object;
  #L1a2a8c.  call temp:= `isEmpty`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.isEmpty:()Z` @kind interface;
  #L1a2a92.  v1:= temp;
  #L1a2a94.  if v1 == 0 then goto L1a2a9a;
  #L1a2a98.  return v4 @kind object;
  #L1a2a9a.  v4:= v2.`org.simpleframework.xml.core.CompositeKey.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a2a9e.  call temp:= `read`(v4, v3, v0) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1a2aa4.  v3:= temp @kind object;
  #L1a2aa6.  return v3 @kind object;
}
procedure `boolean` `b`(`org.simpleframework.xml.core.CompositeKey` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a2924.  v0:= v2.`org.simpleframework.xml.core.CompositeKey.c` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L1a2928.  call temp:= `getElement`(v0, v4) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a292e.  v4:= temp @kind object;
  #L1a2930.  call temp:= `getNext`(v3, v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a2936.  v3:= temp @kind object;
  #L1a2938.  v4:= v2.`org.simpleframework.xml.core.CompositeKey.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a293c.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a2942.  v4:= temp @kind object;
  #L1a2944.  v0:= 1I;
  #L1a2946.  if v3 != 0 then goto L1a294c;
  #L1a294a.  return v0;
  #L1a294c.  call temp:= `isEmpty`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.isEmpty:()Z` @kind interface;
  #L1a2952.  v1:= temp;
  #L1a2954.  if v1 == 0 then goto L1a295a;
  #L1a2958.  return v0;
  #L1a295a.  v0:= v2.`org.simpleframework.xml.core.CompositeKey.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a295e.  call temp:= `validate`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L1a2964.  v3:= temp;
  #L1a2966.  return v3;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeKey` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a2978.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a297e.  v0:= temp @kind object;
  #L1a2980.  v1:= v4.`org.simpleframework.xml.core.CompositeKey.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a2984.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a298a.  v1:= temp @kind object;
  #L1a298c.  v2:= v4.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a2990.  call temp:= `getKey`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @kind virtual;
  #L1a2996.  v2:= temp @kind object;
  #L1a2998.  if v2 != 0 then goto L1a29a8;
  #L1a299c.  v2:= v4.`org.simpleframework.xml.core.CompositeKey.a` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a29a0.  call temp:= `getName`(v2, v1) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L1a29a6.  v2:= temp @kind object;
  #L1a29a8.  v3:= v4.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a29ac.  call temp:= `isAttribute`(v3) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L1a29b2.  v3:= temp;
  #L1a29b4.  if v3 != 0 then goto L1a29c2;
  #L1a29b8.  call temp:= `a`(v4, v5, v2) @signature `Lorg/simpleframework/xml/core/CompositeKey;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @kind direct;
  #L1a29be.  v5:= temp @kind object;
  #L1a29c0.  return v5 @kind object;
  #L1a29c2.  v5:= new `org.simpleframework.xml.core.AttributeException`;
  #L1a29c6.  v2:= 3I;
  #L1a29c8.  v2:= new `java.lang.Object`[v2];
  #L1a29cc.  v3:= 0I;
  #L1a29ce.  v2[v3]:= v1 @kind object;
  #L1a29d2.  v1:= v4.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a29d6.  v3:= 1I;
  #L1a29d8.  v2[v3]:= v1 @kind object;
  #L1a29dc.  v1:= 2I;
  #L1a29de.  v2[v1]:= v0 @kind object;
  #L1a29e2.  v0:= "Can not have %s as an attribute for %s at %s" @kind object;
  #L1a29e6.  call `<init>`(v5, v0, v2) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a29ec.  throw v5;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeKey` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a2a00.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a2a06.  v0:= temp @kind object;
  #L1a2a08.  v1:= v3.`org.simpleframework.xml.core.CompositeKey.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a2a0c.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a2a12.  v1:= temp @kind object;
  #L1a2a14.  if v5 != 0 then goto L1a2a22;
  #L1a2a18.  call temp:= `read`(v3, v4) @signature `Lorg/simpleframework/xml/core/CompositeKey;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L1a2a1e.  v4:= temp @kind object;
  #L1a2a20.  return v4 @kind object;
  #L1a2a22.  v4:= new `org.simpleframework.xml.core.PersistenceException`;
  #L1a2a26.  v5:= 3I;
  #L1a2a28.  v5:= new `java.lang.Object`[v5];
  #L1a2a2c.  v2:= 0I;
  #L1a2a2e.  v5[v2]:= v1 @kind object;
  #L1a2a32.  v1:= v3.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a2a36.  v2:= 1I;
  #L1a2a38.  v5[v2]:= v1 @kind object;
  #L1a2a3c.  v1:= 2I;
  #L1a2a3e.  v5[v1]:= v0 @kind object;
  #L1a2a42.  v0:= "Can not read key of %s for %s at %s" @kind object;
  #L1a2a46.  call `<init>`(v4, v0, v5) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a2a4c.  throw v4;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeKey` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a289c.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a28a2.  v0:= temp @kind object;
  #L1a28a4.  v1:= v4.`org.simpleframework.xml.core.CompositeKey.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a28a8.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a28ae.  v1:= temp @kind object;
  #L1a28b0.  v2:= v4.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a28b4.  call temp:= `getKey`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @kind virtual;
  #L1a28ba.  v2:= temp @kind object;
  #L1a28bc.  if v2 != 0 then goto L1a28cc;
  #L1a28c0.  v2:= v4.`org.simpleframework.xml.core.CompositeKey.a` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a28c4.  call temp:= `getName`(v2, v1) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L1a28ca.  v2:= temp @kind object;
  #L1a28cc.  v3:= v4.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a28d0.  call temp:= `isAttribute`(v3) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L1a28d6.  v3:= temp;
  #L1a28d8.  if v3 != 0 then goto L1a28e6;
  #L1a28dc.  call temp:= `b`(v4, v5, v2) @signature `Lorg/simpleframework/xml/core/CompositeKey;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @kind direct;
  #L1a28e2.  v5:= temp;
  #L1a28e4.  return v5;
  #L1a28e6.  v5:= new `org.simpleframework.xml.core.ElementException`;
  #L1a28ea.  v2:= 3I;
  #L1a28ec.  v2:= new `java.lang.Object`[v2];
  #L1a28f0.  v3:= 0I;
  #L1a28f2.  v2[v3]:= v1 @kind object;
  #L1a28f6.  v1:= v4.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a28fa.  v3:= 1I;
  #L1a28fc.  v2[v3]:= v1 @kind object;
  #L1a2900.  v1:= 2I;
  #L1a2902.  v2[v1]:= v0 @kind object;
  #L1a2906.  v0:= "Can not have %s as an attribute for %s at %s" @kind object;
  #L1a290a.  call `<init>`(v5, v0, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a2910.  throw v5;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeKey` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeKey;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a2af8.  v0:= v3.`org.simpleframework.xml.core.CompositeKey.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a2afc.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a2b02.  v0:= temp @kind object;
  #L1a2b04.  v1:= v3.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a2b08.  call temp:= `getKey`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @kind virtual;
  #L1a2b0e.  v1:= temp @kind object;
  #L1a2b10.  v2:= v3.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a2b14.  call temp:= `isAttribute`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L1a2b1a.  v2:= temp;
  #L1a2b1c.  if v2 != 0 then goto L1a2b48;
  #L1a2b20.  if v1 != 0 then goto L1a2b30;
  #L1a2b24.  v1:= v3.`org.simpleframework.xml.core.CompositeKey.a` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a2b28.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L1a2b2e.  v1:= temp @kind object;
  #L1a2b30.  v2:= v3.`org.simpleframework.xml.core.CompositeKey.c` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L1a2b34.  call temp:= `getElement`(v2, v1) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a2b3a.  v1:= temp @kind object;
  #L1a2b3c.  v2:= v3.`org.simpleframework.xml.core.CompositeKey.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a2b40.  call `write`(v2, v4, v5, v0, v1) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V` @kind virtual;
  #L1a2b46.  return @kind void;
  #L1a2b48.  v4:= new `org.simpleframework.xml.core.ElementException`;
  #L1a2b4c.  v5:= 2I;
  #L1a2b4e.  v5:= new `java.lang.Object`[v5];
  #L1a2b52.  v1:= 0I;
  #L1a2b54.  v5[v1]:= v0 @kind object;
  #L1a2b58.  v0:= v3.`org.simpleframework.xml.core.CompositeKey.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a2b5c.  v1:= 1I;
  #L1a2b5e.  v5[v1]:= v0 @kind object;
  #L1a2b62.  v0:= "Can not have %s as an attribute for %s" @kind object;
  #L1a2b66.  call `<init>`(v4, v0, v5) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a2b6c.  throw v4;
}
