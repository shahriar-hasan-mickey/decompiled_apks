record `org.simpleframework.xml.core.SignatureScanner` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.SignatureBuilder` `org.simpleframework.xml.core.SignatureScanner.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ParameterFactory` `org.simpleframework.xml.core.SignatureScanner.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ParameterMap` `org.simpleframework.xml.core.SignatureScanner.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Constructor` `org.simpleframework.xml.core.SignatureScanner.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `org.simpleframework.xml.core.SignatureScanner.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.SignatureScanner` v1 @kind this, `java.lang.reflect.Constructor` v2 @kind object, `org.simpleframework.xml.core.ParameterMap` v3 @kind object, `org.simpleframework.xml.core.Support` v4 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.<init>:(Ljava/lang/reflect/Constructor;Lorg/simpleframework/xml/core/ParameterMap;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b15b4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b15ba.  v0:= new `org.simpleframework.xml.core.SignatureBuilder`;
  #L1b15be.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L1b15c4.  v1.`org.simpleframework.xml.core.SignatureScanner.a` @type ^`org.simpleframework.xml.core.SignatureBuilder` := v0 @kind object;
  #L1b15c8.  v0:= new `org.simpleframework.xml.core.ParameterFactory`;
  #L1b15cc.  call `<init>`(v0, v4) @signature `Lorg/simpleframework/xml/core/ParameterFactory;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1b15d2.  v1.`org.simpleframework.xml.core.SignatureScanner.b` @type ^`org.simpleframework.xml.core.ParameterFactory` := v0 @kind object;
  #L1b15d6.  call temp:= `getDeclaringClass`(v2) @signature `Ljava/lang/reflect/Constructor;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L1b15dc.  v4:= temp @kind object;
  #L1b15de.  v1.`org.simpleframework.xml.core.SignatureScanner.e` @type ^`java.lang.Class` := v4 @kind object;
  #L1b15e2.  v1.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` := v2 @kind object;
  #L1b15e6.  v1.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` := v3 @kind object;
  #L1b15ea.  call `e`(v1, v4) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.e:(Ljava/lang/Class;)V` @kind direct;
  #L1b15f0.  return @kind void;
}
procedure `java.util.List` `a`(`org.simpleframework.xml.core.SignatureScanner` v2 @kind this, `java.lang.annotation.Annotation` v3 @kind object, `int` v4 ) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b1404.  v0:= v2.`org.simpleframework.xml.core.SignatureScanner.b` @type ^`org.simpleframework.xml.core.ParameterFactory` @kind object;
  #L1b1408.  v1:= v2.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b140c.  call temp:= `getInstance`(v0, v1, v3, v4) @signature `Lorg/simpleframework/xml/core/ParameterFactory;.getInstance:(Ljava/lang/reflect/Constructor;Ljava/lang/annotation/Annotation;I)Lorg/simpleframework/xml/core/Parameter;` @kind virtual;
  #L1b1412.  v3:= temp @kind object;
  #L1b1414.  if v3 == 0 then goto L1b141e;
  #L1b1418.  call `d`(v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.d:(Lorg/simpleframework/xml/core/Parameter;)V` @kind direct;
  #L1b141e.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1b1424.  v3:= temp @kind object;
  #L1b1426.  return v3 @kind object;
}
procedure `java.lang.annotation.Annotation`[] `b`(`org.simpleframework.xml.core.SignatureScanner` v4 @kind this, `java.lang.annotation.Annotation` v5 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.b:(Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b13a0.  call temp:= `annotationType`(v5) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L1b13a6.  v0:= temp @kind object;
  #L1b13a8.  call temp:= `getDeclaredMethods`(v0) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L1b13ae.  v0:= temp @kind object;
  #L1b13b0.  v1:= length @variable v0;
  #L1b13b2.  v2:= 1I;
  #L1b13b4.  v3:= 0I;
  #L1b13b6.  if v1 != v2 then goto L1b13d0;
  #L1b13ba.  v0:= v0[v3] @kind object;
  #L1b13be.  v1:= new `java.lang.Object`[v3];
  #L1b13c2.  call temp:= `invoke`(v0, v5, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b13c8.  v5:= temp @kind object;
  #L1b13ca.  v5:= (`java.lang.annotation.Annotation`[]) v5 @kind object;
  #L1b13ce.  return v5 @kind object;
  #L1b13d0.  v0:= new `org.simpleframework.xml.core.UnionException`;
  #L1b13d4.  v1:= 2I;
  #L1b13d6.  v1:= new `java.lang.Object`[v1];
  #L1b13da.  v1[v3]:= v5 @kind object;
  #L1b13de.  v5:= v4.`org.simpleframework.xml.core.SignatureScanner.e` @type ^`java.lang.Class` @kind object;
  #L1b13e2.  v1[v2]:= v5 @kind object;
  #L1b13e6.  v5:= "Annotation '%s' is not a valid union for %s" @kind object;
  #L1b13ea.  call `<init>`(v0, v5, v1) @signature `Lorg/simpleframework/xml/core/UnionException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b13f0.  throw v0;
}
procedure `java.util.List` `c`(`org.simpleframework.xml.core.SignatureScanner` v1 @kind this, `java.lang.annotation.Annotation` v2 @kind object, `int` v3 ) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.c:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b1458.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.Attribute` @kind boolean;
  #L1b145c.  if v0 == 0 then goto L1b146a;
  #L1b1460.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L1b1466.  v2:= temp @kind object;
  #L1b1468.  return v2 @kind object;
  #L1b146a.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.Element` @kind boolean;
  #L1b146e.  if v0 == 0 then goto L1b147c;
  #L1b1472.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L1b1478.  v2:= temp @kind object;
  #L1b147a.  return v2 @kind object;
  #L1b147c.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementList` @kind boolean;
  #L1b1480.  if v0 == 0 then goto L1b148e;
  #L1b1484.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L1b148a.  v2:= temp @kind object;
  #L1b148c.  return v2 @kind object;
  #L1b148e.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementArray` @kind boolean;
  #L1b1492.  if v0 == 0 then goto L1b14a0;
  #L1b1496.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L1b149c.  v2:= temp @kind object;
  #L1b149e.  return v2 @kind object;
  #L1b14a0.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementMap` @kind boolean;
  #L1b14a4.  if v0 == 0 then goto L1b14b2;
  #L1b14a8.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L1b14ae.  v2:= temp @kind object;
  #L1b14b0.  return v2 @kind object;
  #L1b14b2.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L1b14b6.  if v0 == 0 then goto L1b14c4;
  #L1b14ba.  call temp:= `g`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.g:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L1b14c0.  v2:= temp @kind object;
  #L1b14c2.  return v2 @kind object;
  #L1b14c4.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L1b14c8.  if v0 == 0 then goto L1b14d6;
  #L1b14cc.  call temp:= `g`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.g:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L1b14d2.  v2:= temp @kind object;
  #L1b14d4.  return v2 @kind object;
  #L1b14d6.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L1b14da.  if v0 == 0 then goto L1b14e8;
  #L1b14de.  call temp:= `g`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.g:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L1b14e4.  v2:= temp @kind object;
  #L1b14e6.  return v2 @kind object;
  #L1b14e8.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L1b14ec.  if v0 == 0 then goto L1b14fa;
  #L1b14f0.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L1b14f6.  v2:= temp @kind object;
  #L1b14f8.  return v2 @kind object;
  #L1b14fa.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1b1500.  v2:= temp @kind object;
  #L1b1502.  return v2 @kind object;
}
procedure `void` `d`(`org.simpleframework.xml.core.SignatureScanner` v3 @kind this, `org.simpleframework.xml.core.Parameter` v4 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.d:(Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1b1604.  call temp:= `getPath`(v4) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L1b160a.  v0:= temp @kind object;
  #L1b160c.  call temp:= `getKey`(v4) @signature `Lorg/simpleframework/xml/core/Parameter;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1b1612.  v1:= temp @kind object;
  #L1b1614.  v2:= v3.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b1618.  call temp:= `containsKey`(v2, v1) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b161e.  v2:= temp;
  #L1b1620.  if v2 == 0 then goto L1b162a;
  #L1b1624.  call `h`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.h:(Lorg/simpleframework/xml/core/Parameter;Ljava/lang/Object;)V` @kind direct;
  #L1b162a.  v2:= v3.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b162e.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b1634.  v2:= temp;
  #L1b1636.  if v2 == 0 then goto L1b1640;
  #L1b163a.  call `h`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.h:(Lorg/simpleframework/xml/core/Parameter;Ljava/lang/Object;)V` @kind direct;
  #L1b1640.  v2:= v3.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b1644.  call temp:= `put`(v2, v0, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b164a.  v0:= v3.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b164e.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b1654.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.core.SignatureScanner` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.e:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b1668.  v3:= v2.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b166c.  call temp:= `getParameterTypes`(v3) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L1b1672.  v3:= temp @kind object;
  #L1b1674.  v0:= 0I;
  #L1b1676.  v1:= length @variable v3;
  #L1b1678.  if v0 >= v1 then goto L1b168c;
  #L1b167c.  v1:= v3[v0] @kind object;
  #L1b1680.  call `f`(v2, v1, v0) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.f:(Ljava/lang/Class;I)V` @kind direct;
  #L1b1686.  v0:= v0 + 1;
  #L1b168a.  goto L1b1676;
  #L1b168c.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.core.SignatureScanner` v4 @kind this, `java.lang.Class` v5 @kind object, `int` v6 ) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.f:(Ljava/lang/Class;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b16a0.  v5:= v4.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b16a4.  call temp:= `getParameterAnnotations`(v5) @signature `Ljava/lang/reflect/Constructor;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b16aa.  v5:= temp @kind object;
  #L1b16ac.  v0:= 0I;
  #L1b16ae.  v1:= v5[v6] @kind object;
  #L1b16b2.  v1:= length @variable v1;
  #L1b16b4.  if v0 >= v1 then goto L1b16fa;
  #L1b16b8.  v1:= v5[v6] @kind object;
  #L1b16bc.  v1:= v1[v0] @kind object;
  #L1b16c0.  call temp:= `c`(v4, v1, v6) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.c:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L1b16c6.  v1:= temp @kind object;
  #L1b16c8.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b16ce.  v1:= temp @kind object;
  #L1b16d0.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b16d6.  v2:= temp;
  #L1b16d8.  if v2 == 0 then goto L1b16f4;
  #L1b16dc.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b16e2.  v2:= temp @kind object;
  #L1b16e4.  v2:= (`org.simpleframework.xml.core.Parameter`) v2 @kind object;
  #L1b16e8.  v3:= v4.`org.simpleframework.xml.core.SignatureScanner.a` @type ^`org.simpleframework.xml.core.SignatureBuilder` @kind object;
  #L1b16ec.  call `insert`(v3, v2, v6) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.insert:(Lorg/simpleframework/xml/core/Parameter;I)V` @kind virtual;
  #L1b16f2.  goto L1b16d0;
  #L1b16f4.  v0:= v0 + 1;
  #L1b16f8.  goto L1b16ae;
  #L1b16fa.  return @kind void;
}
procedure `java.util.List` `g`(`org.simpleframework.xml.core.SignatureScanner` v8 @kind this, `java.lang.annotation.Annotation` v9 @kind object, `int` v10 ) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.g:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b1514.  v0:= new `org.simpleframework.xml.core.Signature`;
  #L1b1518.  v1:= v8.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b151c.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L1b1522.  call temp:= `b`(v8, v9) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.b:(Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;` @kind direct;
  #L1b1528.  v1:= temp @kind object;
  #L1b152a.  v2:= length @variable v1;
  #L1b152c.  v3:= 0I;
  #L1b152e.  v4:= 0I;
  #L1b1530.  if v4 >= v2 then goto L1b1598;
  #L1b1534.  v5:= v1[v4] @kind object;
  #L1b1538.  v6:= v8.`org.simpleframework.xml.core.SignatureScanner.b` @type ^`org.simpleframework.xml.core.ParameterFactory` @kind object;
  #L1b153c.  v7:= v8.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b1540.  call temp:= `getInstance`(v6, v7, v9, v5, v10) @signature `Lorg/simpleframework/xml/core/ParameterFactory;.getInstance:(Ljava/lang/reflect/Constructor;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;I)Lorg/simpleframework/xml/core/Parameter;` @kind virtual;
  #L1b1546.  v5:= temp @kind object;
  #L1b1548.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L1b154e.  v6:= temp @kind object;
  #L1b1550.  call temp:= `contains`(v0, v6) @signature `Lorg/simpleframework/xml/core/Signature;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b1556.  v7:= temp;
  #L1b1558.  if v7 != 0 then goto L1b156e;
  #L1b155c.  call `set`(v0, v6, v5) @signature `Lorg/simpleframework/xml/core/Signature;.set:(Ljava/lang/Object;Lorg/simpleframework/xml/core/Parameter;)V` @kind virtual;
  #L1b1562.  call `d`(v8, v5) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.d:(Lorg/simpleframework/xml/core/Parameter;)V` @kind direct;
  #L1b1568.  v4:= v4 + 1;
  #L1b156c.  goto L1b1530;
  #L1b156e.  v10:= new `org.simpleframework.xml.core.UnionException`;
  #L1b1572.  v0:= 3I;
  #L1b1574.  v0:= new `java.lang.Object`[v0];
  #L1b1578.  v0[v3]:= v6 @kind object;
  #L1b157c.  v1:= 1I;
  #L1b157e.  v0[v1]:= v9 @kind object;
  #L1b1582.  v9:= v8.`org.simpleframework.xml.core.SignatureScanner.e` @type ^`java.lang.Class` @kind object;
  #L1b1586.  v1:= 2I;
  #L1b1588.  v0[v1]:= v9 @kind object;
  #L1b158c.  v9:= "Annotation name '%s' used more than once in %s for %s" @kind object;
  #L1b1590.  call `<init>`(v10, v9, v0) @signature `Lorg/simpleframework/xml/core/UnionException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b1596.  throw v10;
  #L1b1598.  call temp:= `getAll`(v0) @signature `Lorg/simpleframework/xml/core/Signature;.getAll:()Ljava/util/List;` @kind virtual;
  #L1b159e.  v9:= temp @kind object;
  #L1b15a0.  return v9 @kind object;
}
procedure `void` `h`(`org.simpleframework.xml.core.SignatureScanner` v5 @kind this, `org.simpleframework.xml.core.Parameter` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.h:(Lorg/simpleframework/xml/core/Parameter;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b170c.  v0:= v5.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b1710.  call temp:= `get`(v0, v7) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b1716.  v7:= temp @kind object;
  #L1b1718.  v7:= (`org.simpleframework.xml.core.Parameter`) v7 @kind object;
  #L1b171c.  call temp:= `isText`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.isText:()Z` @kind interface;
  #L1b1722.  v0:= temp;
  #L1b1724.  call temp:= `isText`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.isText:()Z` @kind interface;
  #L1b172a.  v1:= temp;
  #L1b172c.  if v0 == v1 then goto L1b17b0;
  #L1b1730.  call temp:= `getAnnotation`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L1b1736.  v0:= temp @kind object;
  #L1b1738.  call temp:= `getAnnotation`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L1b173e.  v1:= temp @kind object;
  #L1b1740.  call temp:= `getPath`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L1b1746.  v2:= temp @kind object;
  #L1b1748.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b174e.  v0:= temp;
  #L1b1750.  v1:= 1I;
  #L1b1752.  v3:= 0I;
  #L1b1754.  v4:= 2I;
  #L1b1756.  if v0 == 0 then goto L1b1790;
  #L1b175a.  call temp:= `getType`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.getType:()Ljava/lang/Class;` @kind interface;
  #L1b1760.  v7:= temp @kind object;
  #L1b1762.  call temp:= `getType`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.getType:()Ljava/lang/Class;` @kind interface;
  #L1b1768.  v6:= temp @kind object;
  #L1b176a.  if v7 != v6 then goto L1b1770;
  #L1b176e.  goto L1b17b0;
  #L1b1770.  v6:= new `org.simpleframework.xml.core.ConstructorException`;
  #L1b1774.  v7:= new `java.lang.Object`[v4];
  #L1b1778.  v7[v3]:= v2 @kind object;
  #L1b177c.  v0:= v5.`org.simpleframework.xml.core.SignatureScanner.e` @type ^`java.lang.Class` @kind object;
  #L1b1780.  v7[v1]:= v0 @kind object;
  #L1b1784.  v0:= "Parameter types do not match for '%s' in %s" @kind object;
  #L1b1788.  call `<init>`(v6, v0, v7) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b178e.  throw v6;
  #L1b1790.  v6:= new `org.simpleframework.xml.core.ConstructorException`;
  #L1b1794.  v7:= new `java.lang.Object`[v4];
  #L1b1798.  v7[v3]:= v2 @kind object;
  #L1b179c.  v0:= v5.`org.simpleframework.xml.core.SignatureScanner.e` @type ^`java.lang.Class` @kind object;
  #L1b17a0.  v7[v1]:= v0 @kind object;
  #L1b17a4.  v0:= "Annotations do not match for '%s' in %s" @kind object;
  #L1b17a8.  call `<init>`(v6, v0, v7) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b17ae.  throw v6;
  #L1b17b0.  return @kind void;
}
procedure `java.util.List` `getSignatures`(`org.simpleframework.xml.core.SignatureScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.getSignatures:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1438.  v0:= v1.`org.simpleframework.xml.core.SignatureScanner.a` @type ^`org.simpleframework.xml.core.SignatureBuilder` @kind object;
  #L1b143c.  call temp:= `build`(v0) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.build:()Ljava/util/List;` @kind virtual;
  #L1b1442.  v0:= temp @kind object;
  #L1b1444.  return v0 @kind object;
}
procedure `boolean` `isValid`(`org.simpleframework.xml.core.SignatureScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.isValid:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1380.  v0:= v1.`org.simpleframework.xml.core.SignatureScanner.a` @type ^`org.simpleframework.xml.core.SignatureBuilder` @kind object;
  #L1b1384.  call temp:= `isValid`(v0) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.isValid:()Z` @kind virtual;
  #L1b138a.  v0:= temp;
  #L1b138c.  return v0;
}
