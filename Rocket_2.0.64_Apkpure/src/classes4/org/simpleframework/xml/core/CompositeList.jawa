record `org.simpleframework.xml.core.CompositeList` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.CollectionFactory` `org.simpleframework.xml.core.CompositeList.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Traverser` `org.simpleframework.xml.core.CompositeList.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.CompositeList.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeList.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeList.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeList` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a2ffc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a3002.  v0:= new `org.simpleframework.xml.core.CollectionFactory`;
  #L1a3006.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L1a300c.  v1.`org.simpleframework.xml.core.CompositeList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` := v0 @kind object;
  #L1a3010.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L1a3014.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L1a301a.  v1.`org.simpleframework.xml.core.CompositeList.b` @type ^`org.simpleframework.xml.core.Traverser` := v0 @kind object;
  #L1a301e.  v1.`org.simpleframework.xml.core.CompositeList.d` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L1a3022.  v1.`org.simpleframework.xml.core.CompositeList.e` @type ^`org.simpleframework.xml.strategy.Type` := v3 @kind object;
  #L1a3026.  v1.`org.simpleframework.xml.core.CompositeList.c` @type ^`java.lang.String` := v5 @kind object;
  #L1a302a.  return @kind void;
}
procedure `java.lang.Object` `a`(`org.simpleframework.xml.core.CompositeList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a2f34.  v5:= (`java.util.Collection`) v5 @kind object;
  #L1a2f38.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a2f3e.  v0:= temp @kind object;
  #L1a2f40.  v1:= v3.`org.simpleframework.xml.core.CompositeList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a2f44.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a2f4a.  v1:= temp @kind object;
  #L1a2f4c.  if v0 != 0 then goto L1a2f52;
  #L1a2f50.  return v5 @kind object;
  #L1a2f52.  v2:= v3.`org.simpleframework.xml.core.CompositeList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a2f56.  call temp:= `read`(v2, v0, v1) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1a2f5c.  v0:= temp @kind object;
  #L1a2f5e.  call temp:= `add`(v5, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a2f64.  goto L1a2f38;
}
procedure `boolean` `b`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a2efc.  call temp:= `getNext`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a2f02.  v4:= temp @kind object;
  #L1a2f04.  v0:= v2.`org.simpleframework.xml.core.CompositeList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a2f08.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a2f0e.  v0:= temp @kind object;
  #L1a2f10.  if v4 != 0 then goto L1a2f18;
  #L1a2f14.  v3:= 1I;
  #L1a2f16.  return v3;
  #L1a2f18.  v1:= v2.`org.simpleframework.xml.core.CompositeList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a2f1c.  call temp:= `validate`(v1, v4, v0) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L1a2f22.  goto L1a2efc;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a2f78.  v0:= v2.`org.simpleframework.xml.core.CompositeList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L1a2f7c.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L1a2f82.  v0:= temp @kind object;
  #L1a2f84.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L1a2f8a.  v1:= temp @kind object;
  #L1a2f8c.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L1a2f92.  v0:= temp;
  #L1a2f94.  if v0 != 0 then goto L1a2fa2;
  #L1a2f98.  call temp:= `a`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/CompositeList;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1a2f9e.  v3:= temp @kind object;
  #L1a2fa0.  return v3 @kind object;
  #L1a2fa2.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a2fb4.  v0:= v2.`org.simpleframework.xml.core.CompositeList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L1a2fb8.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L1a2fbe.  v0:= temp @kind object;
  #L1a2fc0.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L1a2fc6.  v1:= temp;
  #L1a2fc8.  if v1 == 0 then goto L1a2fd6;
  #L1a2fcc.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L1a2fd2.  v3:= temp @kind object;
  #L1a2fd4.  return v3 @kind object;
  #L1a2fd6.  call temp:= `setInstance`(v0, v4) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a2fdc.  if v4 == 0 then goto L1a2fea;
  #L1a2fe0.  call temp:= `a`(v2, v3, v4) @signature `Lorg/simpleframework/xml/core/CompositeList;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1a2fe6.  v3:= temp @kind object;
  #L1a2fe8.  return v3 @kind object;
  #L1a2fea.  return v4 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a2eb4.  v0:= v2.`org.simpleframework.xml.core.CompositeList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L1a2eb8.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L1a2ebe.  v0:= temp @kind object;
  #L1a2ec0.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L1a2ec6.  v1:= temp;
  #L1a2ec8.  if v1 != 0 then goto L1a2ee6;
  #L1a2ecc.  v1:= 0I;
  #L1a2ece.  call temp:= `setInstance`(v0, v1) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a2ed4.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a2eda.  v0:= temp @kind object;
  #L1a2edc.  call temp:= `b`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/CompositeList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind direct;
  #L1a2ee2.  v3:= temp;
  #L1a2ee4.  return v3;
  #L1a2ee6.  v3:= 1I;
  #L1a2ee8.  return v3;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeList` v4 @kind this, `org.simpleframework.xml.stream.OutputNode` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a303c.  v6:= (`java.util.Collection`) v6 @kind object;
  #L1a3040.  call temp:= `iterator`(v6) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a3046.  v6:= temp @kind object;
  #L1a3048.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a304e.  v0:= temp;
  #L1a3050.  if v0 == 0 then goto L1a30c0;
  #L1a3054.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a305a.  v0:= temp @kind object;
  #L1a305c.  if v0 == 0 then goto L1a3048;
  #L1a3060.  v1:= v4.`org.simpleframework.xml.core.CompositeList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a3064.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a306a.  v1:= temp @kind object;
  #L1a306c.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a3072.  v2:= temp @kind object;
  #L1a3074.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1a307a.  v3:= temp;
  #L1a307c.  if v3 == 0 then goto L1a3090;
  #L1a3080.  v2:= v4.`org.simpleframework.xml.core.CompositeList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a3084.  v3:= v4.`org.simpleframework.xml.core.CompositeList.c` @type ^`java.lang.String` @kind object;
  #L1a3088.  call `write`(v2, v5, v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V` @kind virtual;
  #L1a308e.  goto L1a3048;
  #L1a3090.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L1a3094.  v6:= 3I;
  #L1a3096.  v6:= new `java.lang.Object`[v6];
  #L1a309a.  v0:= 0I;
  #L1a309c.  v6[v0]:= v2 @kind object;
  #L1a30a0.  v0:= v4.`org.simpleframework.xml.core.CompositeList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a30a4.  v1:= 1I;
  #L1a30a6.  v6[v1]:= v0 @kind object;
  #L1a30aa.  v0:= v4.`org.simpleframework.xml.core.CompositeList.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a30ae.  v1:= 2I;
  #L1a30b0.  v6[v1]:= v0 @kind object;
  #L1a30b4.  v0:= "Entry %s does not match %s for %s" @kind object;
  #L1a30b8.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a30be.  throw v5;
  #L1a30c0.  return @kind void;
}
