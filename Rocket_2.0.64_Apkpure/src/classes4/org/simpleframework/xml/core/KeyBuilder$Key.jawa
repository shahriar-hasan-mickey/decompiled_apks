record `org.simpleframework.xml.core.KeyBuilder$Key` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.KeyBuilder$KeyType` `org.simpleframework.xml.core.KeyBuilder$Key.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.KeyBuilder$Key.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.KeyBuilder$Key` v0 @kind this, `org.simpleframework.xml.core.KeyBuilder$KeyType` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.<init>:(Lorg/simpleframework/xml/core/KeyBuilder$KeyType;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1aa478.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1aa47e.  v0.`org.simpleframework.xml.core.KeyBuilder$Key.b` @type ^`java.lang.String` := v2 @kind object;
  #L1aa482.  v0.`org.simpleframework.xml.core.KeyBuilder$Key.a` @type ^`org.simpleframework.xml.core.KeyBuilder$KeyType` := v1 @kind object;
  #L1aa486.  return @kind void;
}
procedure `boolean` `equals`(`org.simpleframework.xml.core.KeyBuilder$Key` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa3e0.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.core.KeyBuilder$Key` @kind boolean;
  #L1aa3e4.  if v0 == 0 then goto L1aa3f6;
  #L1aa3e8.  v2:= (`org.simpleframework.xml.core.KeyBuilder$Key`) v2 @kind object;
  #L1aa3ec.  call temp:= `equals`(v1, v2) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.equals:(Lorg/simpleframework/xml/core/KeyBuilder$Key;)Z` @kind virtual;
  #L1aa3f2.  v2:= temp;
  #L1aa3f4.  return v2;
  #L1aa3f6.  v2:= 0I;
  #L1aa3f8.  return v2;
}
procedure `boolean` `equals`(`org.simpleframework.xml.core.KeyBuilder$Key` v2 @kind this, `org.simpleframework.xml.core.KeyBuilder$Key` v3 @kind object) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.equals:(Lorg/simpleframework/xml/core/KeyBuilder$Key;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1aa40c.  v0:= v2.`org.simpleframework.xml.core.KeyBuilder$Key.a` @type ^`org.simpleframework.xml.core.KeyBuilder$KeyType` @kind object;
  #L1aa410.  v1:= v3.`org.simpleframework.xml.core.KeyBuilder$Key.a` @type ^`org.simpleframework.xml.core.KeyBuilder$KeyType` @kind object;
  #L1aa414.  if v0 != v1 then goto L1aa42a;
  #L1aa418.  v3:= v3.`org.simpleframework.xml.core.KeyBuilder$Key.b` @type ^`java.lang.String` @kind object;
  #L1aa41c.  v0:= v2.`org.simpleframework.xml.core.KeyBuilder$Key.b` @type ^`java.lang.String` @kind object;
  #L1aa420.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aa426.  v3:= temp;
  #L1aa428.  return v3;
  #L1aa42a.  v3:= 0I;
  #L1aa42c.  return v3;
}
procedure `int` `hashCode`(`org.simpleframework.xml.core.KeyBuilder$Key` v1 @kind this) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa440.  v0:= v1.`org.simpleframework.xml.core.KeyBuilder$Key.b` @type ^`java.lang.String` @kind object;
  #L1aa444.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1aa44a.  v0:= temp;
  #L1aa44c.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.KeyBuilder$Key` v1 @kind this) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa460.  v0:= v1.`org.simpleframework.xml.core.KeyBuilder$Key.b` @type ^`java.lang.String` @kind object;
  #L1aa464.  return v0 @kind object;
}
