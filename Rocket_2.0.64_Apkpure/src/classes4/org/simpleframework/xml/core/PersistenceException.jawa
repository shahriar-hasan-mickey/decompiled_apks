record `org.simpleframework.xml.core.PersistenceException` @kind class @AccessFlag PUBLIC extends `java.lang.Exception` @kind class {
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PersistenceException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ae404.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ae40a.  v1:= temp @kind object;
  #L1ae40c.  call `<init>`(v0, v1) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae412.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PersistenceException` v0 @kind this, `java.lang.Throwable` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ae424.  call temp:= `format`(v2, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ae42a.  v2:= temp @kind object;
  #L1ae42c.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1ae432.  return @kind void;
}
