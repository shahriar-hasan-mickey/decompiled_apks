record `org.simpleframework.xml.core.MethodType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `org.simpleframework.xml.core.MethodType.a` @AccessFlag PRIVATE;
}
global `org.simpleframework.xml.core.MethodType` `@@org.simpleframework.xml.core.MethodType.GET` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `org.simpleframework.xml.core.MethodType` `@@org.simpleframework.xml.core.MethodType.IS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `org.simpleframework.xml.core.MethodType` `@@org.simpleframework.xml.core.MethodType.NONE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `org.simpleframework.xml.core.MethodType` `@@org.simpleframework.xml.core.MethodType.SET` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `org.simpleframework.xml.core.MethodType`[] `@@org.simpleframework.xml.core.MethodType.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lorg/simpleframework/xml/core/MethodType;.<clinit>:()V` @AccessFlag PUBLIC_STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1abecc.  v0:= new `org.simpleframework.xml.core.MethodType`;
  #L1abed0.  v1:= "GET" @kind object;
  #L1abed4.  v2:= 0I;
  #L1abed6.  v3:= 3I;
  #L1abed8.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/MethodType;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1abede.  `@@org.simpleframework.xml.core.MethodType.GET` @type ^`org.simpleframework.xml.core.MethodType` := v0 @kind object;
  #L1abee2.  v1:= new `org.simpleframework.xml.core.MethodType`;
  #L1abee6.  v4:= "IS" @kind object;
  #L1abeea.  v5:= 1I;
  #L1abeec.  v6:= 2I;
  #L1abeee.  call `<init>`(v1, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/MethodType;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1abef4.  `@@org.simpleframework.xml.core.MethodType.IS` @type ^`org.simpleframework.xml.core.MethodType` := v1 @kind object;
  #L1abef8.  v4:= new `org.simpleframework.xml.core.MethodType`;
  #L1abefc.  v7:= "SET" @kind object;
  #L1abf00.  call `<init>`(v4, v7, v6, v3) @signature `Lorg/simpleframework/xml/core/MethodType;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1abf06.  `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` := v4 @kind object;
  #L1abf0a.  v7:= new `org.simpleframework.xml.core.MethodType`;
  #L1abf0e.  v8:= "NONE" @kind object;
  #L1abf12.  call `<init>`(v7, v8, v3, v2) @signature `Lorg/simpleframework/xml/core/MethodType;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1abf18.  `@@org.simpleframework.xml.core.MethodType.NONE` @type ^`org.simpleframework.xml.core.MethodType` := v7 @kind object;
  #L1abf1c.  v8:= 4I;
  #L1abf1e.  v8:= new `org.simpleframework.xml.core.MethodType`[v8];
  #L1abf22.  v8[v2]:= v0 @kind object;
  #L1abf26.  v8[v5]:= v1 @kind object;
  #L1abf2a.  v8[v6]:= v4 @kind object;
  #L1abf2e.  v8[v3]:= v7 @kind object;
  #L1abf32.  `@@org.simpleframework.xml.core.MethodType.b` @type ^`org.simpleframework.xml.core.MethodType`[] := v8 @kind object;
  #L1abf36.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.MethodType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/simpleframework/xml/core/MethodType;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1abf48.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1abf4e.  v0.`org.simpleframework.xml.core.MethodType.a` @type ^`int` := v3;
  #L1abf52.  return @kind void;
}
procedure `org.simpleframework.xml.core.MethodType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/core/MethodType;.valueOf:(Ljava/lang/String;)Lorg/simpleframework/xml/core/MethodType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1abe84.  v0:= constclass @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L1abe88.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1abe8e.  v1:= temp @kind object;
  #L1abe90.  v1:= (`org.simpleframework.xml.core.MethodType`) v1 @kind object;
  #L1abe94.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.MethodType`[] `values`() @signature `Lorg/simpleframework/xml/core/MethodType;.values:()[Lorg/simpleframework/xml/core/MethodType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1abea8.  v0:= `@@org.simpleframework.xml.core.MethodType.b` @type ^`org.simpleframework.xml.core.MethodType`[] @kind object;
  #L1abeac.  call temp:= `clone`(v0) @signature `[Lorg/simpleframework/xml/core/MethodType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1abeb2.  v0:= temp @kind object;
  #L1abeb4.  v0:= (`org.simpleframework.xml.core.MethodType`[]) v0 @kind object;
  #L1abeb8.  return v0 @kind object;
}
procedure `int` `getPrefix`(`org.simpleframework.xml.core.MethodType` v1 @kind this) @signature `Lorg/simpleframework/xml/core/MethodType;.getPrefix:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1abe6c.  v0:= v1.`org.simpleframework.xml.core.MethodType.a` @type ^`int`;
  #L1abe70.  return v0;
}
