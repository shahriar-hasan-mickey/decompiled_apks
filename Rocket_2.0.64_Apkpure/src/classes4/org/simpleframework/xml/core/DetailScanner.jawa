record `org.simpleframework.xml.core.DetailScanner` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Detail` @kind interface {
  `java.util.List` `org.simpleframework.xml.core.DetailScanner.a` @AccessFlag PRIVATE;
  `java.util.List` `org.simpleframework.xml.core.DetailScanner.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.NamespaceList` `org.simpleframework.xml.core.DetailScanner.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Namespace` `org.simpleframework.xml.core.DetailScanner.d` @AccessFlag PRIVATE;
  `java.lang.annotation.Annotation`[] `org.simpleframework.xml.core.DetailScanner.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.DefaultType` `org.simpleframework.xml.core.DetailScanner.f` @AccessFlag PRIVATE;
  `org.simpleframework.xml.DefaultType` `org.simpleframework.xml.core.DetailScanner.g` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Order` `org.simpleframework.xml.core.DetailScanner.h` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Root` `org.simpleframework.xml.core.DetailScanner.i` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.DetailScanner.j` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.DetailScanner.k` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.DetailScanner.l` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.DetailScanner.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a565c.  v0:= 0I;
  #L1a565e.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L1a5664.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.DefaultType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a5678.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a567e.  v0:= new `java.util.LinkedList`;
  #L1a5682.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L1a5688.  v1.`org.simpleframework.xml.core.DetailScanner.a` @type ^`java.util.List` := v0 @kind object;
  #L1a568c.  v0:= new `java.util.LinkedList`;
  #L1a5690.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L1a5696.  v1.`org.simpleframework.xml.core.DetailScanner.b` @type ^`java.util.List` := v0 @kind object;
  #L1a569a.  call temp:= `getDeclaredAnnotations`(v2) @signature `Ljava/lang/Class;.getDeclaredAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1a56a0.  v0:= temp @kind object;
  #L1a56a2.  v1.`org.simpleframework.xml.core.DetailScanner.e` @type ^`java.lang.annotation.Annotation`[] := v0 @kind object;
  #L1a56a6.  v1.`org.simpleframework.xml.core.DetailScanner.f` @type ^`org.simpleframework.xml.DefaultType` := v3 @kind object;
  #L1a56aa.  v3:= 1I;
  #L1a56ac.  v1.`org.simpleframework.xml.core.DetailScanner.m` @type ^`boolean` := v3 @kind boolean;
  #L1a56b0.  v1.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` := v2 @kind object;
  #L1a56b4.  call `i`(v1, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.i:(Ljava/lang/Class;)V` @kind direct;
  #L1a56ba.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this, `java.lang.annotation.Annotation` v2 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.a:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a56cc.  if v2 == 0 then goto L1a56ec;
  #L1a56d0.  v2:= (`org.simpleframework.xml.Default`) v2 @kind object;
  #L1a56d4.  call temp:= `required`(v2) @signature `Lorg/simpleframework/xml/Default;.required:()Z` @kind interface;
  #L1a56da.  v0:= temp;
  #L1a56dc.  v1.`org.simpleframework.xml.core.DetailScanner.l` @type ^`boolean` := v0 @kind boolean;
  #L1a56e0.  call temp:= `value`(v2) @signature `Lorg/simpleframework/xml/Default;.value:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L1a56e6.  v2:= temp @kind object;
  #L1a56e8.  v1.`org.simpleframework.xml.core.DetailScanner.g` @type ^`org.simpleframework.xml.DefaultType` := v2 @kind object;
  #L1a56ec.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.DetailScanner` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.b:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a5700.  v5:= v4.`org.simpleframework.xml.core.DetailScanner.e` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1a5704.  v0:= length @variable v5;
  #L1a5706.  v1:= 0I;
  #L1a5708.  if v1 >= v0 then goto L1a575c;
  #L1a570c.  v2:= v5[v1] @kind object;
  #L1a5710.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Namespace` @kind boolean;
  #L1a5714.  if v3 == 0 then goto L1a571e;
  #L1a5718.  call `f`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.f:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a571e.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.NamespaceList` @kind boolean;
  #L1a5722.  if v3 == 0 then goto L1a572c;
  #L1a5726.  call `j`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.j:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a572c.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Root` @kind boolean;
  #L1a5730.  if v3 == 0 then goto L1a573a;
  #L1a5734.  call `h`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.h:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a573a.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Order` @kind boolean;
  #L1a573e.  if v3 == 0 then goto L1a5748;
  #L1a5742.  call `g`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.g:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a5748.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Default` @kind boolean;
  #L1a574c.  if v3 == 0 then goto L1a5756;
  #L1a5750.  call `a`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.a:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a5756.  v1:= v1 + 1;
  #L1a575a.  goto L1a5708;
  #L1a575c.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.DetailScanner` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.c:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a5770.  call temp:= `getDeclaredFields`(v5) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L1a5776.  v5:= temp @kind object;
  #L1a5778.  v0:= length @variable v5;
  #L1a577a.  v1:= 0I;
  #L1a577c.  if v1 >= v0 then goto L1a579e;
  #L1a5780.  v2:= v5[v1] @kind object;
  #L1a5784.  v3:= new `org.simpleframework.xml.core.FieldDetail`;
  #L1a5788.  call `<init>`(v3, v2) @signature `Lorg/simpleframework/xml/core/FieldDetail;.<init>:(Ljava/lang/reflect/Field;)V` @kind direct;
  #L1a578e.  v2:= v4.`org.simpleframework.xml.core.DetailScanner.b` @type ^`java.util.List` @kind object;
  #L1a5792.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a5798.  v1:= v1 + 1;
  #L1a579c.  goto L1a577c;
  #L1a579e.  return @kind void;
}
procedure `boolean` `d`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.d:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;

  #L1a5434.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a543a.  v1:= temp;
  #L1a543c.  if v1 != 0 then goto L1a5444;
  #L1a5440.  v1:= 1I;
  #L1a5442.  goto L1a5446;
  #L1a5444.  v1:= 0I;
  #L1a5446.  return v1;
}
procedure `void` `e`(`org.simpleframework.xml.core.DetailScanner` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.e:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a57b0.  call temp:= `getDeclaredMethods`(v5) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L1a57b6.  v5:= temp @kind object;
  #L1a57b8.  v0:= length @variable v5;
  #L1a57ba.  v1:= 0I;
  #L1a57bc.  if v1 >= v0 then goto L1a57de;
  #L1a57c0.  v2:= v5[v1] @kind object;
  #L1a57c4.  v3:= new `org.simpleframework.xml.core.MethodDetail`;
  #L1a57c8.  call `<init>`(v3, v2) @signature `Lorg/simpleframework/xml/core/MethodDetail;.<init>:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L1a57ce.  v2:= v4.`org.simpleframework.xml.core.DetailScanner.a` @type ^`java.util.List` @kind object;
  #L1a57d2.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a57d8.  v1:= v1 + 1;
  #L1a57dc.  goto L1a57bc;
  #L1a57de.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.annotation.Annotation` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.f:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;

  #L1a57f0.  if v1 == 0 then goto L1a57fc;
  #L1a57f4.  v1:= (`org.simpleframework.xml.Namespace`) v1 @kind object;
  #L1a57f8.  v0.`org.simpleframework.xml.core.DetailScanner.d` @type ^`org.simpleframework.xml.Namespace` := v1 @kind object;
  #L1a57fc.  return @kind void;
}
procedure `void` `g`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.annotation.Annotation` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.g:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;

  #L1a5810.  if v1 == 0 then goto L1a581c;
  #L1a5814.  v1:= (`org.simpleframework.xml.Order`) v1 @kind object;
  #L1a5818.  v0.`org.simpleframework.xml.core.DetailScanner.h` @type ^`org.simpleframework.xml.Order` := v1 @kind object;
  #L1a581c.  return @kind void;
}
procedure `void` `h`(`org.simpleframework.xml.core.DetailScanner` v3 @kind this, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.h:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a5830.  if v4 == 0 then goto L1a5874;
  #L1a5834.  v4:= (`org.simpleframework.xml.Root`) v4 @kind object;
  #L1a5838.  v0:= v3.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L1a583c.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1a5842.  v0:= temp @kind object;
  #L1a5844.  call temp:= `name`(v4) @signature `Lorg/simpleframework/xml/Root;.name:()Ljava/lang/String;` @kind interface;
  #L1a584a.  v1:= temp @kind object;
  #L1a584c.  call temp:= `d`(v3, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.d:(Ljava/lang/String;)Z` @kind direct;
  #L1a5852.  v2:= temp;
  #L1a5854.  if v2 == 0 then goto L1a5860;
  #L1a5858.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1a585e.  v1:= temp @kind object;
  #L1a5860.  call temp:= `strict`(v4) @signature `Lorg/simpleframework/xml/Root;.strict:()Z` @kind interface;
  #L1a5866.  v0:= temp;
  #L1a5868.  v3.`org.simpleframework.xml.core.DetailScanner.m` @type ^`boolean` := v0 @kind boolean;
  #L1a586c.  v3.`org.simpleframework.xml.core.DetailScanner.i` @type ^`org.simpleframework.xml.Root` := v4 @kind object;
  #L1a5870.  v3.`org.simpleframework.xml.core.DetailScanner.k` @type ^`java.lang.String` := v1 @kind object;
  #L1a5874.  return @kind void;
}
procedure `void` `i`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.i:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;

  #L1a5888.  call `e`(v0, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.e:(Ljava/lang/Class;)V` @kind direct;
  #L1a588e.  call `c`(v0, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.c:(Ljava/lang/Class;)V` @kind direct;
  #L1a5894.  call `b`(v0, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.b:(Ljava/lang/Class;)V` @kind direct;
  #L1a589a.  return @kind void;
}
procedure `void` `j`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.annotation.Annotation` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.j:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;

  #L1a58ac.  if v1 == 0 then goto L1a58b8;
  #L1a58b0.  v1:= (`org.simpleframework.xml.NamespaceList`) v1 @kind object;
  #L1a58b4.  v0.`org.simpleframework.xml.core.DetailScanner.c` @type ^`org.simpleframework.xml.NamespaceList` := v1 @kind object;
  #L1a58b8.  return @kind void;
}
procedure `org.simpleframework.xml.DefaultType` `getAccess`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getAccess:()Lorg/simpleframework/xml/DefaultType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a55c4.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.f` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L1a55c8.  if v0 == 0 then goto L1a55ce;
  #L1a55cc.  return v0 @kind object;
  #L1a55ce.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.g` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L1a55d2.  return v0 @kind object;
}
procedure `java.lang.annotation.Annotation`[] `getAnnotations`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a555c.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.e` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1a5560.  return v0 @kind object;
}
procedure `java.lang.reflect.Constructor`[] `getConstructors`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getConstructors:()[Ljava/lang/reflect/Constructor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a5574.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L1a5578.  call temp:= `getDeclaredConstructors`(v0) @signature `Ljava/lang/Class;.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L1a557e.  v0:= temp @kind object;
  #L1a5580.  return v0 @kind object;
}
procedure `java.util.List` `getFields`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getFields:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a5594.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.b` @type ^`java.util.List` @kind object;
  #L1a5598.  return v0 @kind object;
}
procedure `java.util.List` `getMethods`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getMethods:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a55ac.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.a` @type ^`java.util.List` @kind object;
  #L1a55b0.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a5524.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.k` @type ^`java.lang.String` @kind object;
  #L1a5528.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Namespace` `getNamespace`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getNamespace:()Lorg/simpleframework/xml/Namespace;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a55fc.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.d` @type ^`org.simpleframework.xml.Namespace` @kind object;
  #L1a5600.  return v0 @kind object;
}
procedure `org.simpleframework.xml.NamespaceList` `getNamespaceList`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getNamespaceList:()Lorg/simpleframework/xml/NamespaceList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a5614.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.c` @type ^`org.simpleframework.xml.NamespaceList` @kind object;
  #L1a5618.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Order` `getOrder`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getOrder:()Lorg/simpleframework/xml/Order;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a562c.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.h` @type ^`org.simpleframework.xml.Order` @kind object;
  #L1a5630.  return v0 @kind object;
}
procedure `org.simpleframework.xml.DefaultType` `getOverride`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getOverride:()Lorg/simpleframework/xml/DefaultType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a55e4.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.f` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L1a55e8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Root` `getRoot`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getRoot:()Lorg/simpleframework/xml/Root;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a5644.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.i` @type ^`org.simpleframework.xml.Root` @kind object;
  #L1a5648.  return v0 @kind object;
}
procedure `java.lang.Class` `getSuper`(`org.simpleframework.xml.core.DetailScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getSuper:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a54e4.  v0:= v2.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L1a54e8.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1a54ee.  v0:= temp @kind object;
  #L1a54f0.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L1a54f4.  if v0 != v1 then goto L1a54fa;
  #L1a54f8.  v0:= 0I;
  #L1a54fa.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a550c.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L1a5510.  return v0 @kind object;
}
procedure `boolean` `isInstantiable`(`org.simpleframework.xml.core.DetailScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isInstantiable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a5458.  v0:= v2.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L1a545c.  call temp:= `getModifiers`(v0) @signature `Ljava/lang/Class;.getModifiers:()I` @kind virtual;
  #L1a5462.  v0:= temp;
  #L1a5464.  call temp:= `isStatic`(v0) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L1a546a.  v0:= temp;
  #L1a546c.  v1:= 1I;
  #L1a546e.  if v0 == 0 then goto L1a5474;
  #L1a5472.  return v1;
  #L1a5474.  v0:= v2.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L1a5478.  call temp:= `isMemberClass`(v0) @signature `Ljava/lang/Class;.isMemberClass:()Z` @kind virtual;
  #L1a547e.  v0:= temp;
  #L1a5480.  v0:= v0 ^~ v1 @kind int;
  #L1a5482.  return v0;
}
procedure `boolean` `isPrimitive`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isPrimitive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a5494.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L1a5498.  call temp:= `isPrimitive`(v0) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L1a549e.  v0:= temp;
  #L1a54a0.  return v0;
}
procedure `boolean` `isRequired`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a54b4.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.l` @type ^`boolean` @kind boolean;
  #L1a54b8.  return v0;
}
procedure `boolean` `isStrict`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isStrict:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a54cc.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.m` @type ^`boolean` @kind boolean;
  #L1a54d0.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a553c.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L1a5540.  call temp:= `toString`(v0) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a5546.  v0:= temp @kind object;
  #L1a5548.  return v0 @kind object;
}
