record `org.simpleframework.xml.core.Entry` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.ElementMap` `org.simpleframework.xml.core.Entry.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Contact` `org.simpleframework.xml.core.Entry.b` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.Entry.c` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.Entry.d` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.Entry.e` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.Entry.f` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.Entry.g` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.Entry.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Entry` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `org.simpleframework.xml.ElementMap` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/ElementMap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a8120.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a8126.  call temp:= `attribute`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.attribute:()Z` @kind interface;
  #L1a812c.  v0:= temp;
  #L1a812e.  v1.`org.simpleframework.xml.core.Entry.h` @type ^`boolean` := v0 @kind boolean;
  #L1a8132.  call temp:= `entry`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.entry:()Ljava/lang/String;` @kind interface;
  #L1a8138.  v0:= temp @kind object;
  #L1a813a.  v1.`org.simpleframework.xml.core.Entry.e` @type ^`java.lang.String` := v0 @kind object;
  #L1a813e.  call temp:= `value`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.value:()Ljava/lang/String;` @kind interface;
  #L1a8144.  v0:= temp @kind object;
  #L1a8146.  v1.`org.simpleframework.xml.core.Entry.f` @type ^`java.lang.String` := v0 @kind object;
  #L1a814a.  call temp:= `key`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.key:()Ljava/lang/String;` @kind interface;
  #L1a8150.  v0:= temp @kind object;
  #L1a8152.  v1.`org.simpleframework.xml.core.Entry.g` @type ^`java.lang.String` := v0 @kind object;
  #L1a8156.  v1.`org.simpleframework.xml.core.Entry.b` @type ^`org.simpleframework.xml.core.Contact` := v2 @kind object;
  #L1a815a.  v1.`org.simpleframework.xml.core.Entry.a` @type ^`org.simpleframework.xml.ElementMap` := v3 @kind object;
  #L1a815e.  return @kind void;
}
procedure `java.lang.Class` `a`(`org.simpleframework.xml.core.Entry` v3 @kind this, `int` v4 ) @signature `Lorg/simpleframework/xml/core/Entry;.a:(I)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a7ee4.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1a7ee8.  v1:= v3.`org.simpleframework.xml.core.Entry.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L1a7eec.  call temp:= `getDependents`(v1) @signature `Lorg/simpleframework/xml/core/Contact;.getDependents:()[Ljava/lang/Class;` @kind interface;
  #L1a7ef2.  v1:= temp @kind object;
  #L1a7ef4.  v2:= length @variable v1;
  #L1a7ef6.  if v2 >= v4 then goto L1a7efc;
  #L1a7efa.  return v0 @kind object;
  #L1a7efc.  v2:= length @variable v1;
  #L1a7efe.  if v2 != 0 then goto L1a7f04;
  #L1a7f02.  return v0 @kind object;
  #L1a7f04.  v4:= v1[v4] @kind object;
  #L1a7f08.  return v4 @kind object;
}
procedure `boolean` `b`(`org.simpleframework.xml.core.Entry` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;

  #L1a7ea4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a7eaa.  v1:= temp;
  #L1a7eac.  if v1 != 0 then goto L1a7eb4;
  #L1a7eb0.  v1:= 1I;
  #L1a7eb2.  goto L1a7eb6;
  #L1a7eb4.  v1:= 0I;
  #L1a7eb6.  return v1;
}
procedure `org.simpleframework.xml.core.Contact` `getContact`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getContact:()Lorg/simpleframework/xml/core/Contact;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a7ff0.  v0:= v1.`org.simpleframework.xml.core.Entry.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L1a7ff4.  return v0 @kind object;
}
procedure `java.lang.String` `getEntry`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getEntry:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a7f1c.  v0:= v1.`org.simpleframework.xml.core.Entry.e` @type ^`java.lang.String` @kind object;
  #L1a7f20.  if v0 != 0 then goto L1a7f26;
  #L1a7f24.  return v0 @kind object;
  #L1a7f26.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/core/Entry;.b:(Ljava/lang/String;)Z` @kind direct;
  #L1a7f2c.  v0:= temp;
  #L1a7f2e.  if v0 == 0 then goto L1a7f3a;
  #L1a7f32.  v0:= "entry" @kind object;
  #L1a7f36.  v1.`org.simpleframework.xml.core.Entry.e` @type ^`java.lang.String` := v0 @kind object;
  #L1a7f3a.  v0:= v1.`org.simpleframework.xml.core.Entry.e` @type ^`java.lang.String` @kind object;
  #L1a7f3e.  return v0 @kind object;
}
procedure `java.lang.String` `getKey`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a7f50.  v0:= v1.`org.simpleframework.xml.core.Entry.g` @type ^`java.lang.String` @kind object;
  #L1a7f54.  if v0 != 0 then goto L1a7f5a;
  #L1a7f58.  return v0 @kind object;
  #L1a7f5a.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/core/Entry;.b:(Ljava/lang/String;)Z` @kind direct;
  #L1a7f60.  v0:= temp;
  #L1a7f62.  if v0 == 0 then goto L1a7f6c;
  #L1a7f66.  v0:= 0I;
  #L1a7f68.  v1.`org.simpleframework.xml.core.Entry.g` @type ^`java.lang.String` := v0 @kind object;
  #L1a7f6c.  v0:= v1.`org.simpleframework.xml.core.Entry.g` @type ^`java.lang.String` @kind object;
  #L1a7f70.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Converter` `getKey`(`org.simpleframework.xml.core.Entry` v2 @kind this, `org.simpleframework.xml.core.Context` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a8008.  call temp:= `getKeyType`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getKeyType:()Lorg/simpleframework/xml/strategy/Type;` @kind virtual;
  #L1a800e.  v0:= temp @kind object;
  #L1a8010.  call temp:= `isPrimitive`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Lorg/simpleframework/xml/strategy/Type;)Z` @kind interface;
  #L1a8016.  v1:= temp;
  #L1a8018.  if v1 == 0 then goto L1a8028;
  #L1a801c.  v1:= new `org.simpleframework.xml.core.PrimitiveKey`;
  #L1a8020.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L1a8026.  return v1 @kind object;
  #L1a8028.  v1:= new `org.simpleframework.xml.core.CompositeKey`;
  #L1a802c.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeKey;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L1a8032.  return v1 @kind object;
}
procedure `org.simpleframework.xml.strategy.Type` `getKeyType`(`org.simpleframework.xml.core.Entry` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getKeyType:()Lorg/simpleframework/xml/strategy/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a8080.  v0:= v2.`org.simpleframework.xml.core.Entry.d` @type ^`java.lang.Class` @kind object;
  #L1a8084.  if v0 != 0 then goto L1a80ae;
  #L1a8088.  v0:= v2.`org.simpleframework.xml.core.Entry.a` @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L1a808c.  call temp:= `keyType`(v0) @signature `Lorg/simpleframework/xml/ElementMap;.keyType:()Ljava/lang/Class;` @kind interface;
  #L1a8092.  v0:= temp @kind object;
  #L1a8094.  v2.`org.simpleframework.xml.core.Entry.d` @type ^`java.lang.Class` := v0 @kind object;
  #L1a8098.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L1a809c.  if v0 != v1 then goto L1a80ae;
  #L1a80a0.  v0:= 0I;
  #L1a80a2.  call temp:= `a`(v2, v0) @signature `Lorg/simpleframework/xml/core/Entry;.a:(I)Ljava/lang/Class;` @kind direct;
  #L1a80a8.  v0:= temp @kind object;
  #L1a80aa.  v2.`org.simpleframework.xml.core.Entry.d` @type ^`java.lang.Class` := v0 @kind object;
  #L1a80ae.  v0:= new `org.simpleframework.xml.core.ClassType`;
  #L1a80b2.  v1:= v2.`org.simpleframework.xml.core.Entry.d` @type ^`java.lang.Class` @kind object;
  #L1a80b6.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/ClassType;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1a80bc.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a7f84.  v0:= v1.`org.simpleframework.xml.core.Entry.f` @type ^`java.lang.String` @kind object;
  #L1a7f88.  if v0 != 0 then goto L1a7f8e;
  #L1a7f8c.  return v0 @kind object;
  #L1a7f8e.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/core/Entry;.b:(Ljava/lang/String;)Z` @kind direct;
  #L1a7f94.  v0:= temp;
  #L1a7f96.  if v0 == 0 then goto L1a7fa0;
  #L1a7f9a.  v0:= 0I;
  #L1a7f9c.  v1.`org.simpleframework.xml.core.Entry.f` @type ^`java.lang.String` := v0 @kind object;
  #L1a7fa0.  v0:= v1.`org.simpleframework.xml.core.Entry.f` @type ^`java.lang.String` @kind object;
  #L1a7fa4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Converter` `getValue`(`org.simpleframework.xml.core.Entry` v2 @kind this, `org.simpleframework.xml.core.Context` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a8044.  call temp:= `getValueType`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getValueType:()Lorg/simpleframework/xml/strategy/Type;` @kind virtual;
  #L1a804a.  v0:= temp @kind object;
  #L1a804c.  call temp:= `isPrimitive`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Lorg/simpleframework/xml/strategy/Type;)Z` @kind interface;
  #L1a8052.  v1:= temp;
  #L1a8054.  if v1 == 0 then goto L1a8064;
  #L1a8058.  v1:= new `org.simpleframework.xml.core.PrimitiveValue`;
  #L1a805c.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L1a8062.  return v1 @kind object;
  #L1a8064.  v1:= new `org.simpleframework.xml.core.CompositeValue`;
  #L1a8068.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeValue;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L1a806e.  return v1 @kind object;
}
procedure `org.simpleframework.xml.strategy.Type` `getValueType`(`org.simpleframework.xml.core.Entry` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getValueType:()Lorg/simpleframework/xml/strategy/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a80d0.  v0:= v2.`org.simpleframework.xml.core.Entry.c` @type ^`java.lang.Class` @kind object;
  #L1a80d4.  if v0 != 0 then goto L1a80fe;
  #L1a80d8.  v0:= v2.`org.simpleframework.xml.core.Entry.a` @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L1a80dc.  call temp:= `valueType`(v0) @signature `Lorg/simpleframework/xml/ElementMap;.valueType:()Ljava/lang/Class;` @kind interface;
  #L1a80e2.  v0:= temp @kind object;
  #L1a80e4.  v2.`org.simpleframework.xml.core.Entry.c` @type ^`java.lang.Class` := v0 @kind object;
  #L1a80e8.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L1a80ec.  if v0 != v1 then goto L1a80fe;
  #L1a80f0.  v0:= 1I;
  #L1a80f2.  call temp:= `a`(v2, v0) @signature `Lorg/simpleframework/xml/core/Entry;.a:(I)Ljava/lang/Class;` @kind direct;
  #L1a80f8.  v0:= temp @kind object;
  #L1a80fa.  v2.`org.simpleframework.xml.core.Entry.c` @type ^`java.lang.Class` := v0 @kind object;
  #L1a80fe.  v0:= new `org.simpleframework.xml.core.ClassType`;
  #L1a8102.  v1:= v2.`org.simpleframework.xml.core.Entry.c` @type ^`java.lang.Class` @kind object;
  #L1a8106.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/ClassType;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1a810c.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a7e8c.  v0:= v1.`org.simpleframework.xml.core.Entry.h` @type ^`boolean` @kind boolean;
  #L1a7e90.  return v0;
}
procedure `boolean` `isInline`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.isInline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a7ec8.  call temp:= `isAttribute`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L1a7ece.  v0:= temp;
  #L1a7ed0.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.Entry` v3 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a7fb8.  v0:= 2I;
  #L1a7fba.  v0:= new `java.lang.Object`[v0];
  #L1a7fbe.  v1:= v3.`org.simpleframework.xml.core.Entry.a` @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L1a7fc2.  v2:= 0I;
  #L1a7fc4.  v0[v2]:= v1 @kind object;
  #L1a7fc8.  v1:= v3.`org.simpleframework.xml.core.Entry.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L1a7fcc.  v2:= 1I;
  #L1a7fce.  v0[v2]:= v1 @kind object;
  #L1a7fd2.  v1:= "%s on %s" @kind object;
  #L1a7fd6.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a7fdc.  v0:= temp @kind object;
  #L1a7fde.  return v0 @kind object;
}
