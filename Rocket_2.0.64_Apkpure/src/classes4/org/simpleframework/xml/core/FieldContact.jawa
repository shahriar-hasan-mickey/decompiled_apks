record `org.simpleframework.xml.core.FieldContact` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Contact` @kind interface {
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.FieldContact.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation`[] `org.simpleframework.xml.core.FieldContact.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.FieldContact.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Field` `org.simpleframework.xml.core.FieldContact.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.FieldContact.e` @AccessFlag PRIVATE_FINAL;
  `int` `org.simpleframework.xml.core.FieldContact.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.<init>:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a8adc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a8ae2.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L1a8ae6.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L1a8aec.  v1.`org.simpleframework.xml.core.FieldContact.a` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L1a8af0.  call temp:= `getModifiers`(v2) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L1a8af6.  v0:= temp;
  #L1a8af8.  v1.`org.simpleframework.xml.core.FieldContact.f` @type ^`int` := v0;
  #L1a8afc.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a8b02.  v0:= temp @kind object;
  #L1a8b04.  v1.`org.simpleframework.xml.core.FieldContact.e` @type ^`java.lang.String` := v0 @kind object;
  #L1a8b08.  v1.`org.simpleframework.xml.core.FieldContact.c` @type ^`java.lang.annotation.Annotation` := v3 @kind object;
  #L1a8b0c.  v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` := v2 @kind object;
  #L1a8b10.  v1.`org.simpleframework.xml.core.FieldContact.b` @type ^`java.lang.annotation.Annotation`[] := v4 @kind object;
  #L1a8b14.  return @kind void;
}
procedure `java.lang.annotation.Annotation` `a`(`org.simpleframework.xml.core.FieldContact` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.a:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a8a80.  v0:= v6.`org.simpleframework.xml.core.FieldContact.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a8a84.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/util/Cache;.isEmpty:()Z` @kind interface;
  #L1a8a8a.  v0:= temp;
  #L1a8a8c.  if v0 == 0 then goto L1a8ab8;
  #L1a8a90.  v0:= v6.`org.simpleframework.xml.core.FieldContact.b` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1a8a94.  v1:= length @variable v0;
  #L1a8a96.  v2:= 0I;
  #L1a8a98.  if v2 >= v1 then goto L1a8ab8;
  #L1a8a9c.  v3:= v0[v2] @kind object;
  #L1a8aa0.  call temp:= `annotationType`(v3) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L1a8aa6.  v4:= temp @kind object;
  #L1a8aa8.  v5:= v6.`org.simpleframework.xml.core.FieldContact.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a8aac.  call `cache`(v5, v4, v3) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L1a8ab2.  v2:= v2 + 1;
  #L1a8ab6.  goto L1a8a98;
  #L1a8ab8.  v0:= v6.`org.simpleframework.xml.core.FieldContact.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a8abc.  call temp:= `fetch`(v0, v7) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a8ac2.  v7:= temp @kind object;
  #L1a8ac4.  v7:= (`java.lang.annotation.Annotation`) v7 @kind object;
  #L1a8ac8.  return v7 @kind object;
}
procedure `java.lang.Object` `get`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a89bc.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L1a89c0.  call temp:= `get`(v0, v2) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a89c6.  v2:= temp @kind object;
  #L1a89c8.  return v2 @kind object;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a8a38.  v0:= v1.`org.simpleframework.xml.core.FieldContact.c` @type ^`java.lang.annotation.Annotation` @kind object;
  #L1a8a3c.  return v0 @kind object;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a8a50.  v0:= v1.`org.simpleframework.xml.core.FieldContact.c` @type ^`java.lang.annotation.Annotation` @kind object;
  #L1a8a54.  call temp:= `annotationType`(v0) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L1a8a5a.  v0:= temp @kind object;
  #L1a8a5c.  if v2 != v0 then goto L1a8a66;
  #L1a8a60.  v2:= v1.`org.simpleframework.xml.core.FieldContact.c` @type ^`java.lang.annotation.Annotation` @kind object;
  #L1a8a64.  return v2 @kind object;
  #L1a8a66.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/core/FieldContact;.a:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a8a6c.  v2:= temp @kind object;
  #L1a8a6e.  return v2 @kind object;
}
procedure `java.lang.Class` `getDeclaringClass`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getDeclaringClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a893c.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L1a8940.  call temp:= `getDeclaringClass`(v0) @signature `Ljava/lang/reflect/Field;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L1a8946.  v0:= temp @kind object;
  #L1a8948.  return v0 @kind object;
}
procedure `java.lang.Class` `getDependent`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getDependent:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a895c.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L1a8960.  call temp:= `getDependent`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependent:(Ljava/lang/reflect/Field;)Ljava/lang/Class;` @kind static;
  #L1a8966.  v0:= temp @kind object;
  #L1a8968.  return v0 @kind object;
}
procedure `java.lang.Class`[] `getDependents`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getDependents:()[Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a899c.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L1a89a0.  call temp:= `getDependents`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependents:(Ljava/lang/reflect/Field;)[Ljava/lang/Class;` @kind static;
  #L1a89a6.  v0:= temp @kind object;
  #L1a89a8.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a89dc.  v0:= v1.`org.simpleframework.xml.core.FieldContact.e` @type ^`java.lang.String` @kind object;
  #L1a89e0.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a897c.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L1a8980.  call temp:= `getType`(v0) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L1a8986.  v0:= temp @kind object;
  #L1a8988.  return v0 @kind object;
}
procedure `boolean` `isFinal`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.isFinal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a88cc.  v0:= v1.`org.simpleframework.xml.core.FieldContact.f` @type ^`int`;
  #L1a88d0.  call temp:= `isFinal`(v0) @signature `Ljava/lang/reflect/Modifier;.isFinal:(I)Z` @kind static;
  #L1a88d6.  v0:= temp;
  #L1a88d8.  return v0;
}
procedure `boolean` `isReadOnly`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.isReadOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a88ec.  call temp:= `isStatic`(v1) @signature `Lorg/simpleframework/xml/core/FieldContact;.isStatic:()Z` @kind virtual;
  #L1a88f2.  v0:= temp;
  #L1a88f4.  if v0 != 0 then goto L1a8908;
  #L1a88f8.  call temp:= `isFinal`(v1) @signature `Lorg/simpleframework/xml/core/FieldContact;.isFinal:()Z` @kind virtual;
  #L1a88fe.  v0:= temp;
  #L1a8900.  if v0 == 0 then goto L1a8908;
  #L1a8904.  v0:= 1I;
  #L1a8906.  goto L1a890a;
  #L1a8908.  v0:= 0I;
  #L1a890a.  return v0;
}
procedure `boolean` `isStatic`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.isStatic:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a891c.  v0:= v1.`org.simpleframework.xml.core.FieldContact.f` @type ^`int`;
  #L1a8920.  call temp:= `isStatic`(v0) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L1a8926.  v0:= temp;
  #L1a8928.  return v0;
}
procedure `void` `set`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a8b28.  call temp:= `isFinal`(v1) @signature `Lorg/simpleframework/xml/core/FieldContact;.isFinal:()Z` @kind virtual;
  #L1a8b2e.  v0:= temp;
  #L1a8b30.  if v0 != 0 then goto L1a8b3e;
  #L1a8b34.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L1a8b38.  call `set`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L1a8b3e.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.FieldContact` v3 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a89f4.  v0:= 2I;
  #L1a89f6.  v0:= new `java.lang.Object`[v0];
  #L1a89fa.  call temp:= `getName`(v3) @signature `Lorg/simpleframework/xml/core/FieldContact;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a8a00.  v1:= temp @kind object;
  #L1a8a02.  v2:= 0I;
  #L1a8a04.  v0[v2]:= v1 @kind object;
  #L1a8a08.  v1:= v3.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L1a8a0c.  call temp:= `toString`(v1) @signature `Ljava/lang/reflect/Field;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a8a12.  v1:= temp @kind object;
  #L1a8a14.  v2:= 1I;
  #L1a8a16.  v0[v2]:= v1 @kind object;
  #L1a8a1a.  v1:= "field '%s' %s" @kind object;
  #L1a8a1e.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a8a24.  v0:= temp @kind object;
  #L1a8a26.  return v0 @kind object;
}
