record `org.simpleframework.xml.core.GroupExtractor` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Group` @kind interface {
  `org.simpleframework.xml.core.ExtractorFactory` `org.simpleframework.xml.core.GroupExtractor.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.GroupExtractor.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.GroupExtractor$Registry` `org.simpleframework.xml.core.GroupExtractor.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.GroupExtractor.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.<init>:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a95e4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a95ea.  v0:= new `org.simpleframework.xml.core.ExtractorFactory`;
  #L1a95ee.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.<init>:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L1a95f4.  v1.`org.simpleframework.xml.core.GroupExtractor.a` @type ^`org.simpleframework.xml.core.ExtractorFactory` := v0 @kind object;
  #L1a95f8.  v2:= new `org.simpleframework.xml.core.LabelMap`;
  #L1a95fc.  call `<init>`(v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:()V` @kind direct;
  #L1a9602.  v1.`org.simpleframework.xml.core.GroupExtractor.d` @type ^`org.simpleframework.xml.core.LabelMap` := v2 @kind object;
  #L1a9606.  v4:= new `org.simpleframework.xml.core.GroupExtractor$Registry`;
  #L1a960a.  call `<init>`(v4, v2) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.<init>:(Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1a9610.  v1.`org.simpleframework.xml.core.GroupExtractor.c` @type ^`org.simpleframework.xml.core.GroupExtractor$Registry` := v4 @kind object;
  #L1a9614.  v1.`org.simpleframework.xml.core.GroupExtractor.b` @type ^`java.lang.annotation.Annotation` := v3 @kind object;
  #L1a9618.  call `a`(v1) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.a:()V` @kind direct;
  #L1a961e.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a9630.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor.a` @type ^`org.simpleframework.xml.core.ExtractorFactory` @kind object;
  #L1a9634.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.getInstance:()Lorg/simpleframework/xml/core/Extractor;` @kind virtual;
  #L1a963a.  v0:= temp @kind object;
  #L1a963c.  if v0 == 0 then goto L1a9646;
  #L1a9640.  call `b`(v1, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.b:(Lorg/simpleframework/xml/core/Extractor;)V` @kind direct;
  #L1a9646.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.GroupExtractor` v4 @kind this, `org.simpleframework.xml.core.Extractor` v5 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.b:(Lorg/simpleframework/xml/core/Extractor;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a9658.  call temp:= `getAnnotations`(v5) @signature `Lorg/simpleframework/xml/core/Extractor;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind interface;
  #L1a965e.  v0:= temp @kind object;
  #L1a9660.  v1:= length @variable v0;
  #L1a9662.  v2:= 0I;
  #L1a9664.  if v2 >= v1 then goto L1a9678;
  #L1a9668.  v3:= v0[v2] @kind object;
  #L1a966c.  call `c`(v4, v5, v3) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.c:(Lorg/simpleframework/xml/core/Extractor;Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a9672.  v2:= v2 + 1;
  #L1a9676.  goto L1a9664;
  #L1a9678.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this, `org.simpleframework.xml.core.Extractor` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.c:(Lorg/simpleframework/xml/core/Extractor;Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a968c.  call temp:= `getLabel`(v2, v3) @signature `Lorg/simpleframework/xml/core/Extractor;.getLabel:(Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L1a9692.  v0:= temp @kind object;
  #L1a9694.  call temp:= `getType`(v2, v3) @signature `Lorg/simpleframework/xml/core/Extractor;.getType:(Ljava/lang/annotation/Annotation;)Ljava/lang/Class;` @kind interface;
  #L1a969a.  v2:= temp @kind object;
  #L1a969c.  v3:= v1.`org.simpleframework.xml.core.GroupExtractor.c` @type ^`org.simpleframework.xml.core.GroupExtractor$Registry` @kind object;
  #L1a96a0.  if v3 == 0 then goto L1a96aa;
  #L1a96a4.  call `register`(v3, v2, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.register:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L1a96aa.  return @kind void;
}
procedure `org.simpleframework.xml.core.LabelMap` `getElements`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.getElements:()Lorg/simpleframework/xml/core/LabelMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a95c4.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor.d` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1a95c8.  call temp:= `getLabels`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabels:()Lorg/simpleframework/xml/core/LabelMap;` @kind virtual;
  #L1a95ce.  v0:= temp @kind object;
  #L1a95d0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getLabel`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.getLabel:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a9584.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor.c` @type ^`org.simpleframework.xml.core.GroupExtractor$Registry` @kind object;
  #L1a9588.  call temp:= `resolve`(v0, v2) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolve:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1a958e.  v2:= temp @kind object;
  #L1a9590.  return v2 @kind object;
}
procedure `java.lang.String`[] `getNames`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.getNames:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a9544.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor.d` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1a9548.  call temp:= `getKeys`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getKeys:()[Ljava/lang/String;` @kind virtual;
  #L1a954e.  v0:= temp @kind object;
  #L1a9550.  return v0 @kind object;
}
procedure `java.lang.String`[] `getPaths`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.getPaths:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a9564.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor.d` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1a9568.  call temp:= `getPaths`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getPaths:()[Ljava/lang/String;` @kind virtual;
  #L1a956e.  v0:= temp @kind object;
  #L1a9570.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getText`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.getText:()Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a95a4.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor.c` @type ^`org.simpleframework.xml.core.GroupExtractor$Registry` @kind object;
  #L1a95a8.  call temp:= `resolveText`(v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolveText:()Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1a95ae.  v0:= temp @kind object;
  #L1a95b0.  return v0 @kind object;
}
procedure `boolean` `isDeclared`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.isDeclared:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a9464.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor.c` @type ^`org.simpleframework.xml.core.GroupExtractor$Registry` @kind object;
  #L1a9468.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a946e.  v2:= temp;
  #L1a9470.  return v2;
}
procedure `boolean` `isInline`(`org.simpleframework.xml.core.GroupExtractor` v2 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.isInline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a9484.  v0:= v2.`org.simpleframework.xml.core.GroupExtractor.c` @type ^`org.simpleframework.xml.core.GroupExtractor$Registry` @kind object;
  #L1a9488.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1a948e.  v0:= temp @kind object;
  #L1a9490.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a9496.  v1:= temp;
  #L1a9498.  if v1 == 0 then goto L1a94b8;
  #L1a949c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a94a2.  v1:= temp @kind object;
  #L1a94a4.  v1:= (`org.simpleframework.xml.core.Label`) v1 @kind object;
  #L1a94a8.  call temp:= `isInline`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L1a94ae.  v1:= temp;
  #L1a94b0.  if v1 != 0 then goto L1a9490;
  #L1a94b4.  v0:= 0I;
  #L1a94b6.  return v0;
  #L1a94b8.  v0:= v2.`org.simpleframework.xml.core.GroupExtractor.c` @type ^`org.simpleframework.xml.core.GroupExtractor$Registry` @kind object;
  #L1a94bc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L1a94c2.  v0:= temp;
  #L1a94c4.  v0:= v0 ^~ 1;
  #L1a94c8.  return v0;
}
procedure `boolean` `isTextList`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.isTextList:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a94dc.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor.c` @type ^`org.simpleframework.xml.core.GroupExtractor$Registry` @kind object;
  #L1a94e0.  call temp:= `isText`(v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.isText:()Z` @kind virtual;
  #L1a94e6.  v0:= temp;
  #L1a94e8.  return v0;
}
procedure `boolean` `isValid`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.isValid:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a94fc.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor.c` @type ^`org.simpleframework.xml.core.GroupExtractor$Registry` @kind object;
  #L1a9500.  call temp:= `resolve`(v0, v2) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolve:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1a9506.  v2:= temp @kind object;
  #L1a9508.  if v2 == 0 then goto L1a9510;
  #L1a950c.  v2:= 1I;
  #L1a950e.  goto L1a9512;
  #L1a9510.  v2:= 0I;
  #L1a9512.  return v2;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.GroupExtractor` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a9524.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor.b` @type ^`java.lang.annotation.Annotation` @kind object;
  #L1a9528.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a952e.  v0:= temp @kind object;
  #L1a9530.  return v0 @kind object;
}
