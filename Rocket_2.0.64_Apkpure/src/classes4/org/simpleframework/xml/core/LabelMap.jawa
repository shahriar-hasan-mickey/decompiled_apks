record `org.simpleframework.xml.core.LabelMap` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `java.lang.Iterable` @kind interface {
  `org.simpleframework.xml.core.Policy` `org.simpleframework.xml.core.LabelMap.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.LabelMap` v1 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1aae24.  v0:= 0I;
  #L1aae26.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L1aae2c.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.LabelMap` v0 @kind this, `org.simpleframework.xml.core.Policy` v1 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1aae40.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1aae46.  v0.`org.simpleframework.xml.core.LabelMap.a` @type ^`org.simpleframework.xml.core.Policy` := v1 @kind object;
  #L1aae4a.  return @kind void;
}
procedure `java.lang.String`[] `b`(`org.simpleframework.xml.core.LabelMap` v1 @kind this, `java.util.Set` v2 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.b:(Ljava/util/Set;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1aaca8.  v0:= 0I;
  #L1aacaa.  v0:= new `java.lang.String`[v0];
  #L1aacae.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/Set;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1aacb4.  v2:= temp @kind object;
  #L1aacb6.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L1aacba.  return v2 @kind object;
}
procedure `java.lang.String`[] `getKeys`(`org.simpleframework.xml.core.LabelMap` v4 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.getKeys:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aaccc.  v0:= new `java.util.HashSet`;
  #L1aacd0.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L1aacd6.  call temp:= `iterator`(v4) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1aacdc.  v1:= temp @kind object;
  #L1aacde.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1aace4.  v2:= temp;
  #L1aace6.  if v2 == 0 then goto L1aad18;
  #L1aacea.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1aacf0.  v2:= temp @kind object;
  #L1aacf2.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L1aacf6.  if v2 == 0 then goto L1aacde;
  #L1aacfa.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L1aad00.  v3:= temp @kind object;
  #L1aad02.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L1aad08.  v2:= temp @kind object;
  #L1aad0a.  call temp:= `add`(v0, v3) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aad10.  call temp:= `add`(v0, v2) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aad16.  goto L1aacde;
  #L1aad18.  call temp:= `b`(v4, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.b:(Ljava/util/Set;)[Ljava/lang/String;` @kind direct;
  #L1aad1e.  v0:= temp @kind object;
  #L1aad20.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getLabel`(`org.simpleframework.xml.core.LabelMap` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;

  #L1aadb0.  call temp:= `remove`(v0, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1aadb6.  v1:= temp @kind object;
  #L1aadb8.  v1:= (`org.simpleframework.xml.core.Label`) v1 @kind object;
  #L1aadbc.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.LabelMap` `getLabels`(`org.simpleframework.xml.core.LabelMap` v4 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabels:()Lorg/simpleframework/xml/core/LabelMap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aadd0.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L1aadd4.  v1:= v4.`org.simpleframework.xml.core.LabelMap.a` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L1aadd8.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L1aadde.  call temp:= `iterator`(v4) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1aade4.  v1:= temp @kind object;
  #L1aade6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1aadec.  v2:= temp;
  #L1aadee.  if v2 == 0 then goto L1aae12;
  #L1aadf2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1aadf8.  v2:= temp @kind object;
  #L1aadfa.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L1aadfe.  if v2 == 0 then goto L1aade6;
  #L1aae02.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L1aae08.  v3:= temp @kind object;
  #L1aae0a.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1aae10.  goto L1aade6;
  #L1aae12.  return v0 @kind object;
}
procedure `java.lang.String`[] `getPaths`(`org.simpleframework.xml.core.LabelMap` v3 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.getPaths:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1aad34.  v0:= new `java.util.HashSet`;
  #L1aad38.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L1aad3e.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1aad44.  v1:= temp @kind object;
  #L1aad46.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1aad4c.  v2:= temp;
  #L1aad4e.  if v2 == 0 then goto L1aad72;
  #L1aad52.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1aad58.  v2:= temp @kind object;
  #L1aad5a.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L1aad5e.  if v2 == 0 then goto L1aad46;
  #L1aad62.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L1aad68.  v2:= temp @kind object;
  #L1aad6a.  call temp:= `add`(v0, v2) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aad70.  goto L1aad46;
  #L1aad72.  call temp:= `b`(v3, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.b:(Ljava/util/Set;)[Ljava/lang/String;` @kind direct;
  #L1aad78.  v0:= temp @kind object;
  #L1aad7a.  return v0 @kind object;
}
procedure `boolean` `isStrict`(`org.simpleframework.xml.core.LabelMap` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aac60.  v0:= v1.`org.simpleframework.xml.core.LabelMap.a` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L1aac64.  if v0 != 0 then goto L1aac72;
  #L1aac68.  call temp:= `isStrict`(v2) @signature `Lorg/simpleframework/xml/core/Context;.isStrict:()Z` @kind interface;
  #L1aac6e.  v2:= temp;
  #L1aac70.  return v2;
  #L1aac72.  call temp:= `isStrict`(v2) @signature `Lorg/simpleframework/xml/core/Context;.isStrict:()Z` @kind interface;
  #L1aac78.  v2:= temp;
  #L1aac7a.  if v2 == 0 then goto L1aac92;
  #L1aac7e.  v2:= v1.`org.simpleframework.xml.core.LabelMap.a` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L1aac82.  call temp:= `isStrict`(v2) @signature `Lorg/simpleframework/xml/core/Policy;.isStrict:()Z` @kind interface;
  #L1aac88.  v2:= temp;
  #L1aac8a.  if v2 == 0 then goto L1aac92;
  #L1aac8e.  v2:= 1I;
  #L1aac90.  goto L1aac94;
  #L1aac92.  v2:= 0I;
  #L1aac94.  return v2;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.LabelMap` v1 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aad8c.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L1aad92.  v0:= temp @kind object;
  #L1aad94.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1aad9a.  v0:= temp @kind object;
  #L1aad9c.  return v0 @kind object;
}
