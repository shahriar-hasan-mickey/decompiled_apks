record `org.simpleframework.xml.core.DetailExtractor` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.DetailExtractor.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.DetailExtractor.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.DetailExtractor.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.DefaultType` `org.simpleframework.xml.core.DetailExtractor.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.DetailExtractor.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.DetailExtractor` v1 @kind this, `org.simpleframework.xml.core.Support` v2 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a53cc.  v0:= 0I;
  #L1a53ce.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L1a53d4.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.DetailExtractor` v1 @kind this, `org.simpleframework.xml.core.Support` v2 @kind object, `org.simpleframework.xml.DefaultType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a53e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a53ee.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L1a53f2.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L1a53f8.  v1.`org.simpleframework.xml.core.DetailExtractor.a` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L1a53fc.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L1a5400.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L1a5406.  v1.`org.simpleframework.xml.core.DetailExtractor.b` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L1a540a.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L1a540e.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L1a5414.  v1.`org.simpleframework.xml.core.DetailExtractor.c` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L1a5418.  v1.`org.simpleframework.xml.core.DetailExtractor.d` @type ^`org.simpleframework.xml.DefaultType` := v3 @kind object;
  #L1a541c.  v1.`org.simpleframework.xml.core.DetailExtractor.e` @type ^`org.simpleframework.xml.core.Support` := v2 @kind object;
  #L1a5420.  return @kind void;
}
procedure `org.simpleframework.xml.core.ContactList` `a`(`org.simpleframework.xml.core.DetailExtractor` v2 @kind this, `java.lang.Class` v3 @kind object, `org.simpleframework.xml.core.Detail` v4 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.a:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a52f0.  v0:= new `org.simpleframework.xml.core.FieldScanner`;
  #L1a52f4.  v1:= v2.`org.simpleframework.xml.core.DetailExtractor.e` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1a52f8.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/FieldScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1a52fe.  if v4 == 0 then goto L1a530c;
  #L1a5302.  v4:= v2.`org.simpleframework.xml.core.DetailExtractor.b` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a5306.  call `cache`(v4, v3, v0) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L1a530c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `b`(`org.simpleframework.xml.core.DetailExtractor` v2 @kind this, `java.lang.Class` v3 @kind object, `org.simpleframework.xml.core.Detail` v4 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a535c.  v0:= new `org.simpleframework.xml.core.MethodScanner`;
  #L1a5360.  v1:= v2.`org.simpleframework.xml.core.DetailExtractor.e` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1a5364.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/MethodScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1a536a.  if v4 == 0 then goto L1a5378;
  #L1a536e.  v4:= v2.`org.simpleframework.xml.core.DetailExtractor.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a5372.  call `cache`(v4, v3, v0) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L1a5378.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Detail` `getDetail`(`org.simpleframework.xml.core.DetailExtractor` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a538c.  v0:= v2.`org.simpleframework.xml.core.DetailExtractor.c` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a5390.  call temp:= `fetch`(v0, v3) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a5396.  v0:= temp @kind object;
  #L1a5398.  v0:= (`org.simpleframework.xml.core.Detail`) v0 @kind object;
  #L1a539c.  if v0 != 0 then goto L1a53b8;
  #L1a53a0.  v0:= new `org.simpleframework.xml.core.DetailScanner`;
  #L1a53a4.  v1:= v2.`org.simpleframework.xml.core.DetailExtractor.d` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L1a53a8.  call `<init>`(v0, v3, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L1a53ae.  v1:= v2.`org.simpleframework.xml.core.DetailExtractor.c` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a53b2.  call `cache`(v1, v3, v0) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L1a53b8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getFields`(`org.simpleframework.xml.core.DetailExtractor` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a52b4.  v0:= v2.`org.simpleframework.xml.core.DetailExtractor.b` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a52b8.  call temp:= `fetch`(v0, v3) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a52be.  v0:= temp @kind object;
  #L1a52c0.  v0:= (`org.simpleframework.xml.core.ContactList`) v0 @kind object;
  #L1a52c4.  if v0 != 0 then goto L1a52dc;
  #L1a52c8.  call temp:= `getDetail`(v2, v3) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L1a52ce.  v1:= temp @kind object;
  #L1a52d0.  if v1 == 0 then goto L1a52dc;
  #L1a52d4.  call temp:= `a`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.a:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/ContactList;` @kind direct;
  #L1a52da.  v0:= temp @kind object;
  #L1a52dc.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getMethods`(`org.simpleframework.xml.core.DetailExtractor` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a5320.  v0:= v2.`org.simpleframework.xml.core.DetailExtractor.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a5324.  call temp:= `fetch`(v0, v3) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a532a.  v0:= temp @kind object;
  #L1a532c.  v0:= (`org.simpleframework.xml.core.ContactList`) v0 @kind object;
  #L1a5330.  if v0 != 0 then goto L1a5348;
  #L1a5334.  call temp:= `getDetail`(v2, v3) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L1a533a.  v1:= temp @kind object;
  #L1a533c.  if v1 == 0 then goto L1a5348;
  #L1a5340.  call temp:= `b`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/ContactList;` @kind direct;
  #L1a5346.  v0:= temp @kind object;
  #L1a5348.  return v0 @kind object;
}
