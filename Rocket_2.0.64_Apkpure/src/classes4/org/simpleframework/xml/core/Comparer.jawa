record `org.simpleframework.xml.core.Comparer` @kind class @AccessFlag PUBLIC {
  `java.lang.String`[] `org.simpleframework.xml.core.Comparer.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Comparer` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Comparer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a2078.  v0:= "name" @kind object;
  #L1a207c.  temp:= new `java.lang.String`[v0];
  #L1a2082.  v0:= temp @kind object;
  #L1a2084.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/Comparer;.<init>:([Ljava/lang/String;)V` @kind direct;
  #L1a208a.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Comparer` v0 @kind this, `java.lang.String`[] v1 @kind object) @signature `Lorg/simpleframework/xml/core/Comparer;.<init>:([Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1a209c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a20a2.  v0.`org.simpleframework.xml.core.Comparer.a` @type ^`java.lang.String`[] := v1 @kind object;
  #L1a20a6.  return @kind void;
}
procedure `boolean` `a`(`org.simpleframework.xml.core.Comparer` v5 @kind this, `java.lang.reflect.Method` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Comparer;.a:(Ljava/lang/reflect/Method;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a2030.  call temp:= `getName`(v6) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a2036.  v6:= temp @kind object;
  #L1a2038.  v0:= v5.`org.simpleframework.xml.core.Comparer.a` @type ^`java.lang.String`[] @kind object;
  #L1a203c.  v1:= 0I;
  #L1a203e.  if v0 == 0 then goto L1a2064;
  #L1a2042.  v2:= length @variable v0;
  #L1a2044.  v3:= 0I;
  #L1a2046.  if v3 >= v2 then goto L1a2064;
  #L1a204a.  v4:= v0[v3] @kind object;
  #L1a204e.  call temp:= `equals`(v6, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a2054.  v4:= temp;
  #L1a2056.  if v4 == 0 then goto L1a205e;
  #L1a205a.  v6:= 1I;
  #L1a205c.  return v6;
  #L1a205e.  v3:= v3 + 1;
  #L1a2062.  goto L1a2046;
  #L1a2064.  return v1;
}
procedure `boolean` `equals`(`org.simpleframework.xml.core.Comparer` v7 @kind this, `java.lang.annotation.Annotation` v8 @kind object, `java.lang.annotation.Annotation` v9 @kind object) @signature `Lorg/simpleframework/xml/core/Comparer;.equals:(Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a1fb0.  call temp:= `annotationType`(v8) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L1a1fb6.  v0:= temp @kind object;
  #L1a1fb8.  call temp:= `annotationType`(v9) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L1a1fbe.  v1:= temp @kind object;
  #L1a1fc0.  call temp:= `getDeclaredMethods`(v0) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L1a1fc6.  v2:= temp @kind object;
  #L1a1fc8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a1fce.  v0:= temp;
  #L1a1fd0.  v1:= 0I;
  #L1a1fd2.  if v0 == 0 then goto L1a201e;
  #L1a1fd6.  v0:= length @variable v2;
  #L1a1fd8.  v3:= 0I;
  #L1a1fda.  if v3 >= v0 then goto L1a201a;
  #L1a1fde.  v4:= v2[v3] @kind object;
  #L1a1fe2.  call temp:= `a`(v7, v4) @signature `Lorg/simpleframework/xml/core/Comparer;.a:(Ljava/lang/reflect/Method;)Z` @kind direct;
  #L1a1fe8.  v5:= temp;
  #L1a1fea.  if v5 != 0 then goto L1a2014;
  #L1a1fee.  v5:= new `java.lang.Object`[v1];
  #L1a1ff2.  call temp:= `invoke`(v4, v8, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a1ff8.  v5:= temp @kind object;
  #L1a1ffa.  v6:= new `java.lang.Object`[v1];
  #L1a1ffe.  call temp:= `invoke`(v4, v9, v6) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a2004.  v4:= temp @kind object;
  #L1a2006.  call temp:= `equals`(v5, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a200c.  v4:= temp;
  #L1a200e.  if v4 != 0 then goto L1a2014;
  #L1a2012.  return v1;
  #L1a2014.  v3:= v3 + 1;
  #L1a2018.  goto L1a1fda;
  #L1a201a.  v8:= 1I;
  #L1a201c.  return v8;
  #L1a201e.  return v1;
}
