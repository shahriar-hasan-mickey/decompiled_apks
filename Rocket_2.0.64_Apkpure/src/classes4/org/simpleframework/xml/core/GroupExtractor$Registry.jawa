record `org.simpleframework.xml.core.GroupExtractor$Registry` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `java.lang.Iterable` @kind interface {
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.GroupExtractor$Registry.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.GroupExtractor$Registry.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.GroupExtractor$Registry` v0 @kind this, `org.simpleframework.xml.core.LabelMap` v1 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.<init>:(Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1a939c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1a93a2.  v0.`org.simpleframework.xml.core.GroupExtractor$Registry.a` @type ^`org.simpleframework.xml.core.LabelMap` := v1 @kind object;
  #L1a93a6.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.GroupExtractor$Registry` v2 @kind this, `java.lang.Class` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a93e0.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L1a93e6.  v0:= temp @kind object;
  #L1a93e8.  v1:= v2.`org.simpleframework.xml.core.GroupExtractor$Registry.a` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1a93ec.  call temp:= `containsKey`(v1, v0) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a93f2.  v1:= temp;
  #L1a93f4.  if v1 != 0 then goto L1a9402;
  #L1a93f8.  v1:= v2.`org.simpleframework.xml.core.GroupExtractor$Registry.a` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1a93fc.  call temp:= `put`(v1, v0, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a9402.  call temp:= `containsKey`(v2, v3) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a9408.  v0:= temp;
  #L1a940a.  if v0 != 0 then goto L1a9414;
  #L1a940e.  call temp:= `put`(v2, v3, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a9414.  return @kind void;
}
procedure `org.simpleframework.xml.core.Label` `c`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.c:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a9320.  if v2 == 0 then goto L1a9340;
  #L1a9324.  call temp:= `get`(v1, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a932a.  v0:= temp @kind object;
  #L1a932c.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L1a9330.  if v0 == 0 then goto L1a9336;
  #L1a9334.  return v0 @kind object;
  #L1a9336.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1a933c.  v2:= temp @kind object;
  #L1a933e.  goto L1a9320;
  #L1a9340.  v2:= 0I;
  #L1a9342.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `d`(`org.simpleframework.xml.core.GroupExtractor$Registry` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.d:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a9374.  v0:= v2.`org.simpleframework.xml.core.GroupExtractor$Registry.b` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1a9378.  if v0 == 0 then goto L1a9386;
  #L1a937c.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L1a9380.  if v3 != v1 then goto L1a9386;
  #L1a9384.  return v0 @kind object;
  #L1a9386.  v3:= 0I;
  #L1a9388.  return v3 @kind object;
}
procedure `void` `registerText`(`org.simpleframework.xml.core.GroupExtractor$Registry` v2 @kind this, `org.simpleframework.xml.core.Label` v3 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a9428.  call temp:= `getContact`(v3) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L1a942e.  v0:= temp @kind object;
  #L1a9430.  v1:= constclass @type ^`org.simpleframework.xml.Text` @kind object;
  #L1a9434.  call temp:= `getAnnotation`(v0, v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L1a943a.  v0:= temp @kind object;
  #L1a943c.  v0:= (`org.simpleframework.xml.Text`) v0 @kind object;
  #L1a9440.  if v0 == 0 then goto L1a9452;
  #L1a9444.  v1:= new `org.simpleframework.xml.core.TextListLabel`;
  #L1a9448.  call `<init>`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/TextListLabel;.<init>:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/Text;)V` @kind direct;
  #L1a944e.  v2.`org.simpleframework.xml.core.GroupExtractor$Registry.b` @type ^`org.simpleframework.xml.core.Label` := v1 @kind object;
  #L1a9452.  return @kind void;
}
procedure `boolean` `isText`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.isText:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a92b4.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor$Registry.b` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1a92b8.  if v0 == 0 then goto L1a92c0;
  #L1a92bc.  v0:= 1I;
  #L1a92be.  goto L1a92c2;
  #L1a92c0.  v0:= 0I;
  #L1a92c2.  return v0;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a92d4.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L1a92da.  v0:= temp @kind object;
  #L1a92dc.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a92e2.  v0:= temp @kind object;
  #L1a92e4.  return v0 @kind object;
}
procedure `void` `register`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.core.Label` v3 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.register:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a93b8.  v0:= new `org.simpleframework.xml.core.CacheLabel`;
  #L1a93bc.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/core/CacheLabel;.<init>:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a93c2.  call `b`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a93c8.  call `registerText`(v1, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a93ce.  return @kind void;
}
procedure `org.simpleframework.xml.core.Label` `resolve`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolve:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a92f8.  call temp:= `d`(v1, v2) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.d:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L1a92fe.  v0:= temp @kind object;
  #L1a9300.  if v0 != 0 then goto L1a930e;
  #L1a9304.  call temp:= `c`(v1, v2) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.c:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L1a930a.  v2:= temp @kind object;
  #L1a930c.  return v2 @kind object;
  #L1a930e.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `resolveText`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolveText:()Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a9354.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L1a9358.  call temp:= `d`(v1, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.d:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L1a935e.  v0:= temp @kind object;
  #L1a9360.  return v0 @kind object;
}
