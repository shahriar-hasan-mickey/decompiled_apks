record `org.simpleframework.xml.core.ExpressionBuilder` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.ExpressionBuilder.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.ExpressionBuilder.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `org.simpleframework.xml.core.ExpressionBuilder.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ExpressionBuilder` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a81dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a81e2.  v0:= new `org.simpleframework.xml.util.LimitedCache`;
  #L1a81e6.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/LimitedCache;.<init>:()V` @kind direct;
  #L1a81ec.  v1.`org.simpleframework.xml.core.ExpressionBuilder.a` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L1a81f0.  call temp:= `getFormat`(v3) @signature `Lorg/simpleframework/xml/core/Support;.getFormat:()Lorg/simpleframework/xml/stream/Format;` @kind virtual;
  #L1a81f6.  v3:= temp @kind object;
  #L1a81f8.  v1.`org.simpleframework.xml.core.ExpressionBuilder.b` @type ^`org.simpleframework.xml.stream.Format` := v3 @kind object;
  #L1a81fc.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a8202.  v2:= temp @kind object;
  #L1a8204.  v1.`org.simpleframework.xml.core.ExpressionBuilder.c` @type ^`java.lang.Class` := v2 @kind object;
  #L1a8208.  return @kind void;
}
procedure `org.simpleframework.xml.core.Expression` `a`(`org.simpleframework.xml.core.ExpressionBuilder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.a:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a81a0.  v0:= new `org.simpleframework.xml.core.ClassType`;
  #L1a81a4.  v1:= v3.`org.simpleframework.xml.core.ExpressionBuilder.c` @type ^`java.lang.Class` @kind object;
  #L1a81a8.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/ClassType;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1a81ae.  v1:= new `org.simpleframework.xml.core.PathParser`;
  #L1a81b2.  v2:= v3.`org.simpleframework.xml.core.ExpressionBuilder.b` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L1a81b6.  call `<init>`(v1, v4, v0, v2) @signature `Lorg/simpleframework/xml/core/PathParser;.<init>:(Ljava/lang/String;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L1a81bc.  v0:= v3.`org.simpleframework.xml.core.ExpressionBuilder.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a81c0.  if v0 == 0 then goto L1a81ca;
  #L1a81c4.  call `cache`(v0, v4, v1) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L1a81ca.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `build`(`org.simpleframework.xml.core.ExpressionBuilder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a8170.  v0:= v1.`org.simpleframework.xml.core.ExpressionBuilder.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1a8174.  call temp:= `fetch`(v0, v2) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a817a.  v0:= temp @kind object;
  #L1a817c.  v0:= (`org.simpleframework.xml.core.Expression`) v0 @kind object;
  #L1a8180.  if v0 != 0 then goto L1a818e;
  #L1a8184.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.a:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind direct;
  #L1a818a.  v2:= temp @kind object;
  #L1a818c.  return v2 @kind object;
  #L1a818e.  return v0 @kind object;
}
