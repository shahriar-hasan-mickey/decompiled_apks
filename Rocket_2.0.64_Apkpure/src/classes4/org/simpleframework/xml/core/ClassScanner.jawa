record `org.simpleframework.xml.core.ClassScanner` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.NamespaceDecorator` `org.simpleframework.xml.core.ClassScanner.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ConstructorScanner` `org.simpleframework.xml.core.ClassScanner.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.d` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.f` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.g` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.h` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.ClassScanner.i` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Root` `org.simpleframework.xml.core.ClassScanner.j` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Order` `org.simpleframework.xml.core.ClassScanner.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a16bc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a16c2.  v0:= new `org.simpleframework.xml.core.ConstructorScanner`;
  #L1a16c6.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1a16cc.  v1.`org.simpleframework.xml.core.ClassScanner.b` @type ^`org.simpleframework.xml.core.ConstructorScanner` := v0 @kind object;
  #L1a16d0.  v0:= new `org.simpleframework.xml.core.NamespaceDecorator`;
  #L1a16d4.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.<init>:()V` @kind direct;
  #L1a16da.  v1.`org.simpleframework.xml.core.ClassScanner.a` @type ^`org.simpleframework.xml.core.NamespaceDecorator` := v0 @kind object;
  #L1a16de.  v1.`org.simpleframework.xml.core.ClassScanner.i` @type ^`org.simpleframework.xml.core.Support` := v3 @kind object;
  #L1a16e2.  call `m`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.m:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1a16e8.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.a:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a16fc.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.c` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a1700.  if v0 != 0 then goto L1a1710;
  #L1a1704.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L1a170a.  v2:= temp @kind object;
  #L1a170c.  v1.`org.simpleframework.xml.core.ClassScanner.c` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L1a1710.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.b:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a1724.  call temp:= `getNamespace`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getNamespace:()Lorg/simpleframework/xml/Namespace;` @kind interface;
  #L1a172a.  v2:= temp @kind object;
  #L1a172c.  if v2 == 0 then goto L1a173a;
  #L1a1730.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.a` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L1a1734.  call `set`(v0, v2) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.set:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L1a173a.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.c:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a174c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.f` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a1750.  if v0 != 0 then goto L1a1760;
  #L1a1754.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L1a175a.  v2:= temp @kind object;
  #L1a175c.  v1.`org.simpleframework.xml.core.ClassScanner.f` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L1a1760.  return @kind void;
}
procedure `void` `d`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.d:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a1774.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.j` @type ^`org.simpleframework.xml.Root` @kind object;
  #L1a1778.  if v0 != 0 then goto L1a1788;
  #L1a177c.  call temp:= `getRoot`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getRoot:()Lorg/simpleframework/xml/Root;` @kind interface;
  #L1a1782.  v0:= temp @kind object;
  #L1a1784.  v1.`org.simpleframework.xml.core.ClassScanner.j` @type ^`org.simpleframework.xml.Root` := v0 @kind object;
  #L1a1788.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.k` @type ^`org.simpleframework.xml.Order` @kind object;
  #L1a178c.  if v0 != 0 then goto L1a179c;
  #L1a1790.  call temp:= `getOrder`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getOrder:()Lorg/simpleframework/xml/Order;` @kind interface;
  #L1a1796.  v2:= temp @kind object;
  #L1a1798.  v1.`org.simpleframework.xml.core.ClassScanner.k` @type ^`org.simpleframework.xml.Order` := v2 @kind object;
  #L1a179c.  return @kind void;
}
procedure `org.simpleframework.xml.core.Function` `e`(`org.simpleframework.xml.core.ClassScanner` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a15e4.  call temp:= `f`(v2, v3) @signature `Lorg/simpleframework/xml/core/ClassScanner;.f:(Ljava/lang/reflect/Method;)Z` @kind direct;
  #L1a15ea.  v0:= temp;
  #L1a15ec.  call temp:= `isAccessible`(v3) @signature `Ljava/lang/reflect/Method;.isAccessible:()Z` @kind virtual;
  #L1a15f2.  v1:= temp;
  #L1a15f4.  if v1 != 0 then goto L1a1600;
  #L1a15f8.  v1:= 1I;
  #L1a15fa.  call `setAccessible`(v3, v1) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L1a1600.  v1:= new `org.simpleframework.xml.core.Function`;
  #L1a1604.  call `<init>`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Function;.<init>:(Ljava/lang/reflect/Method;Z)V` @kind direct;
  #L1a160a.  return v1 @kind object;
}
procedure `boolean` `f`(`org.simpleframework.xml.core.ClassScanner` v3 @kind this, `java.lang.reflect.Method` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.f:(Ljava/lang/reflect/Method;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a1514.  call temp:= `getParameterTypes`(v4) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L1a151a.  v4:= temp @kind object;
  #L1a151c.  v0:= length @variable v4;
  #L1a151e.  v1:= 0I;
  #L1a1520.  v2:= 1I;
  #L1a1522.  if v0 != v2 then goto L1a1538;
  #L1a1526.  v4:= v4[v1] @kind object;
  #L1a152a.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L1a152e.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a1534.  v4:= temp;
  #L1a1536.  return v4;
  #L1a1538.  return v1;
}
procedure `void` `g`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.g:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a17b0.  call temp:= `getMethods`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getMethods:()Ljava/util/List;` @kind interface;
  #L1a17b6.  v2:= temp @kind object;
  #L1a17b8.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a17be.  v2:= temp @kind object;
  #L1a17c0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a17c6.  v0:= temp;
  #L1a17c8.  if v0 == 0 then goto L1a17e0;
  #L1a17cc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a17d2.  v0:= temp @kind object;
  #L1a17d4.  v0:= (`org.simpleframework.xml.core.MethodDetail`) v0 @kind object;
  #L1a17d8.  call `h`(v1, v0) @signature `Lorg/simpleframework/xml/core/ClassScanner;.h:(Lorg/simpleframework/xml/core/MethodDetail;)V` @kind direct;
  #L1a17de.  goto L1a17c0;
  #L1a17e0.  return @kind void;
}
procedure `void` `h`(`org.simpleframework.xml.core.ClassScanner` v5 @kind this, `org.simpleframework.xml.core.MethodDetail` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.h:(Lorg/simpleframework/xml/core/MethodDetail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a17f4.  call temp:= `getAnnotations`(v6) @signature `Lorg/simpleframework/xml/core/MethodDetail;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1a17fa.  v0:= temp @kind object;
  #L1a17fc.  call temp:= `getMethod`(v6) @signature `Lorg/simpleframework/xml/core/MethodDetail;.getMethod:()Ljava/lang/reflect/Method;` @kind virtual;
  #L1a1802.  v6:= temp @kind object;
  #L1a1804.  v1:= length @variable v0;
  #L1a1806.  v2:= 0I;
  #L1a1808.  if v2 >= v1 then goto L1a186a;
  #L1a180c.  v3:= v0[v2] @kind object;
  #L1a1810.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Commit` @kind boolean;
  #L1a1814.  if v4 == 0 then goto L1a181e;
  #L1a1818.  call `a`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.a:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L1a181e.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Validate` @kind boolean;
  #L1a1822.  if v4 == 0 then goto L1a182c;
  #L1a1826.  call `n`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.n:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L1a182c.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Persist` @kind boolean;
  #L1a1830.  if v4 == 0 then goto L1a183a;
  #L1a1834.  call `j`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.j:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L1a183a.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Complete` @kind boolean;
  #L1a183e.  if v4 == 0 then goto L1a1848;
  #L1a1842.  call `c`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.c:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L1a1848.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Replace` @kind boolean;
  #L1a184c.  if v4 == 0 then goto L1a1856;
  #L1a1850.  call `k`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.k:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L1a1856.  v3:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Resolve` @kind boolean;
  #L1a185a.  if v3 == 0 then goto L1a1864;
  #L1a185e.  call `l`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.l:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L1a1864.  v2:= v2 + 1;
  #L1a1868.  goto L1a1808;
  #L1a186a.  return @kind void;
}
procedure `void` `i`(`org.simpleframework.xml.core.ClassScanner` v4 @kind this, `org.simpleframework.xml.core.Detail` v5 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.i:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a187c.  call temp:= `getNamespaceList`(v5) @signature `Lorg/simpleframework/xml/core/Detail;.getNamespaceList:()Lorg/simpleframework/xml/NamespaceList;` @kind interface;
  #L1a1882.  v0:= temp @kind object;
  #L1a1884.  call temp:= `getNamespace`(v5) @signature `Lorg/simpleframework/xml/core/Detail;.getNamespace:()Lorg/simpleframework/xml/Namespace;` @kind interface;
  #L1a188a.  v5:= temp @kind object;
  #L1a188c.  if v5 == 0 then goto L1a189a;
  #L1a1890.  v1:= v4.`org.simpleframework.xml.core.ClassScanner.a` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L1a1894.  call `add`(v1, v5) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L1a189a.  if v0 == 0 then goto L1a18c2;
  #L1a189e.  call temp:= `value`(v0) @signature `Lorg/simpleframework/xml/NamespaceList;.value:()[Lorg/simpleframework/xml/Namespace;` @kind interface;
  #L1a18a4.  v5:= temp @kind object;
  #L1a18a6.  v0:= length @variable v5;
  #L1a18a8.  v1:= 0I;
  #L1a18aa.  if v1 >= v0 then goto L1a18c2;
  #L1a18ae.  v2:= v5[v1] @kind object;
  #L1a18b2.  v3:= v4.`org.simpleframework.xml.core.ClassScanner.a` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L1a18b6.  call `add`(v3, v2) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L1a18bc.  v1:= v1 + 1;
  #L1a18c0.  goto L1a18aa;
  #L1a18c2.  return @kind void;
}
procedure `void` `j`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.j:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a18d4.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.e` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a18d8.  if v0 != 0 then goto L1a18e8;
  #L1a18dc.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L1a18e2.  v2:= temp @kind object;
  #L1a18e4.  v1.`org.simpleframework.xml.core.ClassScanner.e` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L1a18e8.  return @kind void;
}
procedure `void` `k`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.k:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a18fc.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.g` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a1900.  if v0 != 0 then goto L1a1910;
  #L1a1904.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L1a190a.  v2:= temp @kind object;
  #L1a190c.  v1.`org.simpleframework.xml.core.ClassScanner.g` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L1a1910.  return @kind void;
}
procedure `void` `l`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.l:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a1924.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.h` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a1928.  if v0 != 0 then goto L1a1938;
  #L1a192c.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L1a1932.  v2:= temp @kind object;
  #L1a1934.  v1.`org.simpleframework.xml.core.ClassScanner.h` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L1a1938.  return @kind void;
}
procedure `void` `m`(`org.simpleframework.xml.core.ClassScanner` v3 @kind this, `org.simpleframework.xml.core.Detail` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.m:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a194c.  call temp:= `getOverride`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getOverride:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L1a1952.  v0:= temp @kind object;
  #L1a1954.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a195a.  v1:= temp @kind object;
  #L1a195c.  if v1 == 0 then goto L1a1988;
  #L1a1960.  v2:= v3.`org.simpleframework.xml.core.ClassScanner.i` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1a1964.  call temp:= `getDetail`(v2, v1, v0) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L1a196a.  v1:= temp @kind object;
  #L1a196c.  call `i`(v3, v1) @signature `Lorg/simpleframework/xml/core/ClassScanner;.i:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1a1972.  call `g`(v3, v1) @signature `Lorg/simpleframework/xml/core/ClassScanner;.g:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1a1978.  call `d`(v3, v1) @signature `Lorg/simpleframework/xml/core/ClassScanner;.d:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1a197e.  call temp:= `getSuper`(v1) @signature `Lorg/simpleframework/xml/core/Detail;.getSuper:()Ljava/lang/Class;` @kind interface;
  #L1a1984.  v1:= temp @kind object;
  #L1a1986.  goto L1a195c;
  #L1a1988.  call `b`(v3, v4) @signature `Lorg/simpleframework/xml/core/ClassScanner;.b:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1a198e.  return @kind void;
}
procedure `void` `n`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.n:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a19a0.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.d` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a19a4.  if v0 != 0 then goto L1a19b4;
  #L1a19a8.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L1a19ae.  v2:= temp @kind object;
  #L1a19b0.  v1.`org.simpleframework.xml.core.ClassScanner.d` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L1a19b4.  return @kind void;
}
procedure `org.simpleframework.xml.core.Function` `getCommit`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getCommit:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a15b4.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.c` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a15b8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getComplete`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getComplete:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a15cc.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.f` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a15d0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Decorator` `getDecorator`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a159c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.a` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L1a15a0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Order` `getOrder`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getOrder:()Lorg/simpleframework/xml/Order;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a156c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.k` @type ^`org.simpleframework.xml.Order` @kind object;
  #L1a1570.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.ParameterMap` `getParameters`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a167c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.b` @type ^`org.simpleframework.xml.core.ConstructorScanner` @kind object;
  #L1a1680.  call temp:= `getParameters`(v0) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @kind virtual;
  #L1a1686.  v0:= temp @kind object;
  #L1a1688.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getPersist`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getPersist:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a161c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.e` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a1620.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getReplace`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getReplace:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1634.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.g` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a1638.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getResolve`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getResolve:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a164c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.h` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a1650.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Root` `getRoot`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getRoot:()Lorg/simpleframework/xml/Root;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1584.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.j` @type ^`org.simpleframework.xml.Root` @kind object;
  #L1a1588.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Signature` `getSignature`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a169c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.b` @type ^`org.simpleframework.xml.core.ConstructorScanner` @kind object;
  #L1a16a0.  call temp:= `getSignature`(v0) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @kind virtual;
  #L1a16a6.  v0:= temp @kind object;
  #L1a16a8.  return v0 @kind object;
}
procedure `java.util.List` `getSignatures`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getSignatures:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a154c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.b` @type ^`org.simpleframework.xml.core.ConstructorScanner` @kind object;
  #L1a1550.  call temp:= `getSignatures`(v0) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getSignatures:()Ljava/util/List;` @kind virtual;
  #L1a1556.  v0:= temp @kind object;
  #L1a1558.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getValidate`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getValidate:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1664.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.d` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L1a1668.  return v0 @kind object;
}
