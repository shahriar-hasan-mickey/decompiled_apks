record `org.simpleframework.xml.core.Function` @kind class @AccessFlag PUBLIC {
  `java.lang.reflect.Method` `org.simpleframework.xml.core.Function.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.simpleframework.xml.core.Function.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Function` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Function;.<init>:(Ljava/lang/reflect/Method;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a90ac.  v0:= 0I;
  #L1a90ae.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Function;.<init>:(Ljava/lang/reflect/Method;Z)V` @kind direct;
  #L1a90b4.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Function` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `boolean` v2 ) @signature `Lorg/simpleframework/xml/core/Function;.<init>:(Ljava/lang/reflect/Method;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1a90c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a90ce.  v0.`org.simpleframework.xml.core.Function.b` @type ^`boolean` := v2 @kind boolean;
  #L1a90d2.  v0.`org.simpleframework.xml.core.Function.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L1a90d6.  return @kind void;
}
procedure `java.lang.Object` `call`(`org.simpleframework.xml.core.Function` v3 @kind this, `org.simpleframework.xml.core.Context` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Function;.call:(Lorg/simpleframework/xml/core/Context;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a9050.  if v5 == 0 then goto L1a9098;
  #L1a9054.  call temp:= `getSession`(v4) @signature `Lorg/simpleframework/xml/core/Context;.getSession:()Lorg/simpleframework/xml/core/Session;` @kind interface;
  #L1a905a.  v4:= temp @kind object;
  #L1a905c.  call temp:= `getMap`(v4) @signature `Lorg/simpleframework/xml/core/Session;.getMap:()Ljava/util/Map;` @kind virtual;
  #L1a9062.  v4:= temp @kind object;
  #L1a9064.  v0:= v3.`org.simpleframework.xml.core.Function.b` @type ^`boolean` @kind boolean;
  #L1a9068.  v1:= 0I;
  #L1a906a.  if v0 == 0 then goto L1a9086;
  #L1a906e.  v0:= v3.`org.simpleframework.xml.core.Function.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1a9072.  v2:= 1I;
  #L1a9074.  v2:= new `java.lang.Object`[v2];
  #L1a9078.  v2[v1]:= v4 @kind object;
  #L1a907c.  call temp:= `invoke`(v0, v5, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a9082.  v4:= temp @kind object;
  #L1a9084.  return v4 @kind object;
  #L1a9086.  v4:= v3.`org.simpleframework.xml.core.Function.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1a908a.  v0:= new `java.lang.Object`[v1];
  #L1a908e.  call temp:= `invoke`(v4, v5, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a9094.  v4:= temp @kind object;
  #L1a9096.  return v4 @kind object;
  #L1a9098.  v4:= 0I;
  #L1a909a.  return v4 @kind object;
}
