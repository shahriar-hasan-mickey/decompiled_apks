record `org.simpleframework.xml.core.ExtractorFactory` @kind class @AccessFlag PUBLIC {
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.ExtractorFactory.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Contact` `org.simpleframework.xml.core.ExtractorFactory.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.ExtractorFactory.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ExtractorFactory` v0 @kind this, `org.simpleframework.xml.core.Contact` v1 @kind object, `java.lang.annotation.Annotation` v2 @kind object, `org.simpleframework.xml.stream.Format` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.<init>:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1a8650.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a8656.  v0.`org.simpleframework.xml.core.ExtractorFactory.b` @type ^`org.simpleframework.xml.core.Contact` := v1 @kind object;
  #L1a865a.  v0.`org.simpleframework.xml.core.ExtractorFactory.c` @type ^`org.simpleframework.xml.stream.Format` := v3 @kind object;
  #L1a865e.  v0.`org.simpleframework.xml.core.ExtractorFactory.a` @type ^`java.lang.annotation.Annotation` := v2 @kind object;
  #L1a8662.  return @kind void;
}
procedure `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder` `a`(`org.simpleframework.xml.core.ExtractorFactory` v3 @kind this, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.a:(Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a85d0.  v0:= instanceof @variable v4 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L1a85d4.  if v0 == 0 then goto L1a85ec;
  #L1a85d8.  v4:= new `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder`;
  #L1a85dc.  v0:= constclass @type ^`org.simpleframework.xml.ElementUnion` @kind object;
  #L1a85e0.  v1:= constclass @type ^`org.simpleframework.xml.core.ExtractorFactory$ElementExtractor` @kind object;
  #L1a85e4.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L1a85ea.  return v4 @kind object;
  #L1a85ec.  v0:= instanceof @variable v4 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L1a85f0.  if v0 == 0 then goto L1a8608;
  #L1a85f4.  v4:= new `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder`;
  #L1a85f8.  v0:= constclass @type ^`org.simpleframework.xml.ElementListUnion` @kind object;
  #L1a85fc.  v1:= constclass @type ^`org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor` @kind object;
  #L1a8600.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L1a8606.  return v4 @kind object;
  #L1a8608.  v0:= instanceof @variable v4 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L1a860c.  if v0 == 0 then goto L1a8624;
  #L1a8610.  v4:= new `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder`;
  #L1a8614.  v0:= constclass @type ^`org.simpleframework.xml.ElementMapUnion` @kind object;
  #L1a8618.  v1:= constclass @type ^`org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor` @kind object;
  #L1a861c.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L1a8622.  return v4 @kind object;
  #L1a8624.  v0:= new `org.simpleframework.xml.core.PersistenceException`;
  #L1a8628.  v1:= 1I;
  #L1a862a.  v1:= new `java.lang.Object`[v1];
  #L1a862e.  v2:= 0I;
  #L1a8630.  v1[v2]:= v4 @kind object;
  #L1a8634.  v4:= "Annotation %s is not a union" @kind object;
  #L1a8638.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a863e.  throw v0;
}
procedure `java.lang.Object` `b`(`org.simpleframework.xml.core.ExtractorFactory` v5 @kind this, `java.lang.annotation.Annotation` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.b:(Ljava/lang/annotation/Annotation;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a8550.  call temp:= `a`(v5, v6) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.a:(Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;` @kind direct;
  #L1a8556.  v0:= temp @kind object;
  #L1a8558.  call temp:= `access$000`(v0) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.access$000:(Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;)Ljava/lang/reflect/Constructor;` @kind static;
  #L1a855e.  v0:= temp @kind object;
  #L1a8560.  call temp:= `isAccessible`(v0) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L1a8566.  v1:= temp;
  #L1a8568.  v2:= 1I;
  #L1a856a.  if v1 != 0 then goto L1a8574;
  #L1a856e.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L1a8574.  v1:= 3I;
  #L1a8576.  v1:= new `java.lang.Object`[v1];
  #L1a857a.  v3:= v5.`org.simpleframework.xml.core.ExtractorFactory.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L1a857e.  v4:= 0I;
  #L1a8580.  v1[v4]:= v3 @kind object;
  #L1a8584.  v1[v2]:= v6 @kind object;
  #L1a8588.  v6:= v5.`org.simpleframework.xml.core.ExtractorFactory.c` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L1a858c.  v2:= 2I;
  #L1a858e.  v1[v2]:= v6 @kind object;
  #L1a8592.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a8598.  v6:= temp @kind object;
  #L1a859a.  return v6 @kind object;
}
procedure `org.simpleframework.xml.core.Extractor` `getInstance`(`org.simpleframework.xml.core.ExtractorFactory` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.getInstance:()Lorg/simpleframework/xml/core/Extractor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a85ac.  v0:= v1.`org.simpleframework.xml.core.ExtractorFactory.a` @type ^`java.lang.annotation.Annotation` @kind object;
  #L1a85b0.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.b:(Ljava/lang/annotation/Annotation;)Ljava/lang/Object;` @kind direct;
  #L1a85b6.  v0:= temp @kind object;
  #L1a85b8.  v0:= (`org.simpleframework.xml.core.Extractor`) v0 @kind object;
  #L1a85bc.  return v0 @kind object;
}
