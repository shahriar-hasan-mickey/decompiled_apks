record `org.simpleframework.xml.core.NamespaceDecorator` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Decorator` @kind interface {
  `java.util.List` `org.simpleframework.xml.core.NamespaceDecorator.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Namespace` `org.simpleframework.xml.core.NamespaceDecorator.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.NamespaceDecorator` v1 @kind this) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ac720.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ac726.  v0:= new `java.util.ArrayList`;
  #L1ac72a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1ac730.  v1.`org.simpleframework.xml.core.NamespaceDecorator.a` @type ^`java.util.List` := v0 @kind object;
  #L1ac734.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.NamespaceDecorator` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.a:(Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ac7a8.  v0:= v1.`org.simpleframework.xml.core.NamespaceDecorator.b` @type ^`org.simpleframework.xml.Namespace` @kind object;
  #L1ac7ac.  if v0 == 0 then goto L1ac7be;
  #L1ac7b0.  call temp:= `reference`(v0) @signature `Lorg/simpleframework/xml/Namespace;.reference:()Ljava/lang/String;` @kind interface;
  #L1ac7b6.  v0:= temp @kind object;
  #L1ac7b8.  call `setReference`(v2, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setReference:(Ljava/lang/String;)V` @kind interface;
  #L1ac7be.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.NamespaceDecorator` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.b:(Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1ac7d0.  call temp:= `getNamespaces`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L1ac7d6.  v4:= temp @kind object;
  #L1ac7d8.  v0:= v3.`org.simpleframework.xml.core.NamespaceDecorator.a` @type ^`java.util.List` @kind object;
  #L1ac7dc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ac7e2.  v0:= temp @kind object;
  #L1ac7e4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ac7ea.  v1:= temp;
  #L1ac7ec.  if v1 == 0 then goto L1ac814;
  #L1ac7f0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ac7f6.  v1:= temp @kind object;
  #L1ac7f8.  v1:= (`org.simpleframework.xml.Namespace`) v1 @kind object;
  #L1ac7fc.  call temp:= `reference`(v1) @signature `Lorg/simpleframework/xml/Namespace;.reference:()Ljava/lang/String;` @kind interface;
  #L1ac802.  v2:= temp @kind object;
  #L1ac804.  call temp:= `prefix`(v1) @signature `Lorg/simpleframework/xml/Namespace;.prefix:()Ljava/lang/String;` @kind interface;
  #L1ac80a.  v1:= temp @kind object;
  #L1ac80c.  call temp:= `setReference`(v4, v2, v1) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.setReference:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1ac812.  goto L1ac7e4;
  #L1ac814.  return @kind void;
}
procedure `void` `add`(`org.simpleframework.xml.core.NamespaceDecorator` v1 @kind this, `org.simpleframework.xml.Namespace` v2 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ac748.  v0:= v1.`org.simpleframework.xml.core.NamespaceDecorator.a` @type ^`java.util.List` @kind object;
  #L1ac74c.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1ac752.  return @kind void;
}
procedure `void` `decorate`(`org.simpleframework.xml.core.NamespaceDecorator` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ac764.  v0:= 0I;
  #L1ac766.  call `decorate`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Decorator;)V` @kind virtual;
  #L1ac76c.  return @kind void;
}
procedure `void` `decorate`(`org.simpleframework.xml.core.NamespaceDecorator` v0 @kind this, `org.simpleframework.xml.stream.OutputNode` v1 @kind object, `org.simpleframework.xml.core.Decorator` v2 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Decorator;)V` @AccessFlag PUBLIC {
    temp;

  #L1ac780.  if v2 == 0 then goto L1ac78a;
  #L1ac784.  call `decorate`(v2, v1) @signature `Lorg/simpleframework/xml/core/Decorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind interface;
  #L1ac78a.  call `b`(v0, v1) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.b:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind direct;
  #L1ac790.  call `a`(v0, v1) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.a:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind direct;
  #L1ac796.  return @kind void;
}
procedure `void` `set`(`org.simpleframework.xml.core.NamespaceDecorator` v0 @kind this, `org.simpleframework.xml.Namespace` v1 @kind object) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.set:(Lorg/simpleframework/xml/Namespace;)V` @AccessFlag PUBLIC {
    temp;

  #L1ac828.  if v1 == 0 then goto L1ac832;
  #L1ac82c.  call `add`(v0, v1) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L1ac832.  v0.`org.simpleframework.xml.core.NamespaceDecorator.b` @type ^`org.simpleframework.xml.Namespace` := v1 @kind object;
  #L1ac836.  return @kind void;
}
