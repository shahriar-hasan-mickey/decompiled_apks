record `org.simpleframework.xml.core.CompositeInlineList` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Repeater` @kind interface {
  `org.simpleframework.xml.core.CollectionFactory` `org.simpleframework.xml.core.CompositeInlineList.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Traverser` `org.simpleframework.xml.core.CompositeInlineList.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.CompositeInlineList.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeInlineList.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeInlineList.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeInlineList` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a257c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a2582.  v0:= new `org.simpleframework.xml.core.CollectionFactory`;
  #L1a2586.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L1a258c.  v1.`org.simpleframework.xml.core.CompositeInlineList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` := v0 @kind object;
  #L1a2590.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L1a2594.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L1a259a.  v1.`org.simpleframework.xml.core.CompositeInlineList.b` @type ^`org.simpleframework.xml.core.Traverser` := v0 @kind object;
  #L1a259e.  v1.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L1a25a2.  v1.`org.simpleframework.xml.core.CompositeInlineList.e` @type ^`org.simpleframework.xml.strategy.Type` := v3 @kind object;
  #L1a25a6.  v1.`org.simpleframework.xml.core.CompositeInlineList.c` @type ^`java.lang.String` := v5 @kind object;
  #L1a25aa.  return @kind void;
}
procedure `java.lang.Object` `a`(`org.simpleframework.xml.core.CompositeInlineList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a2490.  v0:= v2.`org.simpleframework.xml.core.CompositeInlineList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a2494.  call temp:= `read`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1a249a.  v3:= temp @kind object;
  #L1a249c.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a24a2.  v4:= temp @kind object;
  #L1a24a4.  v0:= v2.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a24a8.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a24ae.  v0:= temp @kind object;
  #L1a24b0.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1a24b6.  v0:= temp;
  #L1a24b8.  if v0 == 0 then goto L1a24be;
  #L1a24bc.  return v3 @kind object;
  #L1a24be.  v3:= new `org.simpleframework.xml.core.PersistenceException`;
  #L1a24c2.  v0:= 3I;
  #L1a24c4.  v0:= new `java.lang.Object`[v0];
  #L1a24c8.  v1:= 0I;
  #L1a24ca.  v0[v1]:= v4 @kind object;
  #L1a24ce.  v4:= v2.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a24d2.  v1:= 1I;
  #L1a24d4.  v0[v1]:= v4 @kind object;
  #L1a24d8.  v4:= v2.`org.simpleframework.xml.core.CompositeInlineList.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a24dc.  v1:= 2I;
  #L1a24de.  v0[v1]:= v4 @kind object;
  #L1a24e2.  v4:= "Entry %s does not match %s for %s" @kind object;
  #L1a24e6.  call `<init>`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a24ec.  throw v3;
}
procedure `java.lang.Object` `b`(`org.simpleframework.xml.core.CompositeInlineList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.util.Collection` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a252c.  call temp:= `getParent`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a2532.  v0:= temp @kind object;
  #L1a2534.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L1a253a.  v1:= temp @kind object;
  #L1a253c.  if v4 == 0 then goto L1a2568;
  #L1a2540.  v2:= v3.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a2544.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a254a.  v2:= temp @kind object;
  #L1a254c.  call temp:= `a`(v3, v4, v2) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L1a2552.  v4:= temp @kind object;
  #L1a2554.  if v4 == 0 then goto L1a255e;
  #L1a2558.  call temp:= `add`(v5, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a255e.  call temp:= `getNext`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a2564.  v4:= temp @kind object;
  #L1a2566.  goto L1a253c;
  #L1a2568.  return v5 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineList` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a245c.  v0:= v1.`org.simpleframework.xml.core.CompositeInlineList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L1a2460.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:()Ljava/lang/Object;` @kind virtual;
  #L1a2466.  v0:= temp @kind object;
  #L1a2468.  v0:= (`java.util.Collection`) v0 @kind object;
  #L1a246c.  if v0 == 0 then goto L1a247a;
  #L1a2470.  call temp:= `b`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @kind direct;
  #L1a2476.  v2:= temp @kind object;
  #L1a2478.  return v2 @kind object;
  #L1a247a.  v2:= 0I;
  #L1a247c.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineList` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1a2500.  v2:= (`java.util.Collection`) v2 @kind object;
  #L1a2504.  if v2 == 0 then goto L1a2512;
  #L1a2508.  call temp:= `b`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @kind direct;
  #L1a250e.  v1:= temp @kind object;
  #L1a2510.  return v1 @kind object;
  #L1a2512.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L1a2518.  v1:= temp @kind object;
  #L1a251a.  return v1 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeInlineList` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a2408.  call temp:= `getParent`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a240e.  v0:= temp @kind object;
  #L1a2410.  v1:= v4.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a2414.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a241a.  v1:= temp @kind object;
  #L1a241c.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L1a2422.  v2:= temp @kind object;
  #L1a2424.  if v5 == 0 then goto L1a2446;
  #L1a2428.  v3:= v4.`org.simpleframework.xml.core.CompositeInlineList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a242c.  call temp:= `validate`(v3, v5, v1) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L1a2432.  v5:= temp;
  #L1a2434.  if v5 != 0 then goto L1a243c;
  #L1a2438.  v5:= 0I;
  #L1a243a.  return v5;
  #L1a243c.  call temp:= `getNext`(v0, v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a2442.  v5:= temp @kind object;
  #L1a2444.  goto L1a2424;
  #L1a2446.  v5:= 1I;
  #L1a2448.  return v5;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeInlineList` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a25bc.  v4:= (`java.util.Collection`) v4 @kind object;
  #L1a25c0.  call temp:= `getParent`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L1a25c6.  v0:= temp @kind object;
  #L1a25c8.  call temp:= `isCommitted`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.isCommitted:()Z` @kind interface;
  #L1a25ce.  v1:= temp;
  #L1a25d0.  if v1 != 0 then goto L1a25da;
  #L1a25d4.  call `remove`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.remove:()V` @kind interface;
  #L1a25da.  call `write`(v2, v0, v4) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/util/Collection;)V` @kind virtual;
  #L1a25e0.  return @kind void;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeInlineList` v4 @kind this, `org.simpleframework.xml.stream.OutputNode` v5 @kind object, `java.util.Collection` v6 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a25f4.  call temp:= `iterator`(v6) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a25fa.  v6:= temp @kind object;
  #L1a25fc.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a2602.  v0:= temp;
  #L1a2604.  if v0 == 0 then goto L1a2670;
  #L1a2608.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a260e.  v0:= temp @kind object;
  #L1a2610.  if v0 == 0 then goto L1a25fc;
  #L1a2614.  v1:= v4.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a2618.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a261e.  v1:= temp @kind object;
  #L1a2620.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a2626.  v2:= temp @kind object;
  #L1a2628.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1a262e.  v3:= temp;
  #L1a2630.  if v3 == 0 then goto L1a2644;
  #L1a2634.  v2:= v4.`org.simpleframework.xml.core.CompositeInlineList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a2638.  v3:= v4.`org.simpleframework.xml.core.CompositeInlineList.c` @type ^`java.lang.String` @kind object;
  #L1a263c.  call `write`(v2, v5, v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V` @kind virtual;
  #L1a2642.  goto L1a25fc;
  #L1a2644.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L1a2648.  v6:= 3I;
  #L1a264a.  v6:= new `java.lang.Object`[v6];
  #L1a264e.  v0:= 0I;
  #L1a2650.  v6[v0]:= v2 @kind object;
  #L1a2654.  v0:= 1I;
  #L1a2656.  v6[v0]:= v1 @kind object;
  #L1a265a.  v0:= v4.`org.simpleframework.xml.core.CompositeInlineList.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a265e.  v1:= 2I;
  #L1a2660.  v6[v1]:= v0 @kind object;
  #L1a2664.  v0:= "Entry %s does not match %s for %s" @kind object;
  #L1a2668.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a266e.  throw v5;
  #L1a2670.  return @kind void;
}
