record `org.simpleframework.xml.core.ModelList` @kind class @AccessFlag PUBLIC extends `java.util.ArrayList` @kind class {
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ModelList` v0 @kind this) @signature `Lorg/simpleframework/xml/core/ModelList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ac334.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1ac33a.  return @kind void;
}
procedure `org.simpleframework.xml.core.ModelList` `build`(`org.simpleframework.xml.core.ModelList` v3 @kind this) @signature `Lorg/simpleframework/xml/core/ModelList;.build:()Lorg/simpleframework/xml/core/ModelList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ac2f0.  v0:= new `org.simpleframework.xml.core.ModelList`;
  #L1ac2f4.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/ModelList;.<init>:()V` @kind direct;
  #L1ac2fa.  call temp:= `iterator`(v3) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1ac300.  v1:= temp @kind object;
  #L1ac302.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ac308.  v2:= temp;
  #L1ac30a.  if v2 == 0 then goto L1ac322;
  #L1ac30e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ac314.  v2:= temp @kind object;
  #L1ac316.  v2:= (`org.simpleframework.xml.core.Model`) v2 @kind object;
  #L1ac31a.  call `register`(v0, v2) @signature `Lorg/simpleframework/xml/core/ModelList;.register:(Lorg/simpleframework/xml/core/Model;)V` @kind virtual;
  #L1ac320.  goto L1ac302;
  #L1ac322.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.ModelList` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ModelList;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ac238.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1ac23e.  v0:= temp @kind object;
  #L1ac240.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ac246.  v1:= temp;
  #L1ac248.  if v1 == 0 then goto L1ac26c;
  #L1ac24c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ac252.  v1:= temp @kind object;
  #L1ac254.  v1:= (`org.simpleframework.xml.core.Model`) v1 @kind object;
  #L1ac258.  if v1 == 0 then goto L1ac240;
  #L1ac25c.  call temp:= `isEmpty`(v1) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L1ac262.  v1:= temp;
  #L1ac264.  if v1 != 0 then goto L1ac240;
  #L1ac268.  v0:= 0I;
  #L1ac26a.  return v0;
  #L1ac26c.  v0:= 1I;
  #L1ac26e.  return v0;
}
procedure `org.simpleframework.xml.core.Model` `lookup`(`org.simpleframework.xml.core.ModelList` v1 @kind this, `int` v2 ) @signature `Lorg/simpleframework/xml/core/ModelList;.lookup:(I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ac280.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1ac286.  v0:= temp;
  #L1ac288.  if v2 > v0 then goto L1ac29e;
  #L1ac28c.  v2:= v2 + -1;
  #L1ac290.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1ac296.  v2:= temp @kind object;
  #L1ac298.  v2:= (`org.simpleframework.xml.core.Model`) v2 @kind object;
  #L1ac29c.  return v2 @kind object;
  #L1ac29e.  v2:= 0I;
  #L1ac2a0.  return v2 @kind object;
}
procedure `void` `register`(`org.simpleframework.xml.core.ModelList` v4 @kind this, `org.simpleframework.xml.core.Model` v5 @kind object) @signature `Lorg/simpleframework/xml/core/ModelList;.register:(Lorg/simpleframework/xml/core/Model;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ac34c.  call temp:= `getIndex`(v5) @signature `Lorg/simpleframework/xml/core/Model;.getIndex:()I` @kind interface;
  #L1ac352.  v0:= temp;
  #L1ac354.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1ac35a.  v1:= temp;
  #L1ac35c.  v2:= 0I;
  #L1ac35e.  if v2 >= v0 then goto L1ac382;
  #L1ac362.  if v2 < v1 then goto L1ac36e;
  #L1ac366.  v3:= 0I;
  #L1ac368.  call temp:= `add`(v4, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ac36e.  v3:= v0 + -1;
  #L1ac372.  if v2 != v3 then goto L1ac37c;
  #L1ac376.  call temp:= `set`(v4, v3, v5) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1ac37c.  v2:= v2 + 1;
  #L1ac380.  goto L1ac35e;
  #L1ac382.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `take`(`org.simpleframework.xml.core.ModelList` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ModelList;.take:()Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ac2b4.  call temp:= `isEmpty`(v2) @signature `Lorg/simpleframework/xml/core/ModelList;.isEmpty:()Z` @kind virtual;
  #L1ac2ba.  v0:= temp;
  #L1ac2bc.  if v0 != 0 then goto L1ac2dc;
  #L1ac2c0.  v0:= 0I;
  #L1ac2c2.  call temp:= `remove`(v2, v0) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L1ac2c8.  v0:= temp @kind object;
  #L1ac2ca.  v0:= (`org.simpleframework.xml.core.Model`) v0 @kind object;
  #L1ac2ce.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L1ac2d4.  v1:= temp;
  #L1ac2d6.  if v1 != 0 then goto L1ac2b4;
  #L1ac2da.  return v0 @kind object;
  #L1ac2dc.  v0:= 0I;
  #L1ac2de.  return v0 @kind object;
}
