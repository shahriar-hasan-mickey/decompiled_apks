record `org.simpleframework.xml.core.Reflector` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Reflector` v0 @kind this) @signature `Lorg/simpleframework/xml/core/Reflector;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b05b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b05b6.  return @kind void;
}
procedure `java.lang.Class` `a`(`java.lang.reflect.Type` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.a:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b022c.  v1:= (`java.lang.reflect.GenericArrayType`) v1 @kind object;
  #L1b0230.  call temp:= `getGenericComponentType`(v1) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L1b0236.  v1:= temp @kind object;
  #L1b0238.  call temp:= `c`(v1) @signature `Lorg/simpleframework/xml/core/Reflector;.c:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b023e.  v1:= temp @kind object;
  #L1b0240.  if v1 == 0 then goto L1b0258;
  #L1b0244.  v0:= 0I;
  #L1b0246.  call temp:= `newInstance`(v1, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L1b024c.  v1:= temp @kind object;
  #L1b024e.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b0254.  v1:= temp @kind object;
  #L1b0256.  return v1 @kind object;
  #L1b0258.  v1:= 0I;
  #L1b025a.  return v1 @kind object;
}
procedure `java.lang.Class` `b`(`java.lang.reflect.ParameterizedType` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.b:(Ljava/lang/reflect/ParameterizedType;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b026c.  call temp:= `getActualTypeArguments`(v1) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1b0272.  v1:= temp @kind object;
  #L1b0274.  v0:= length @variable v1;
  #L1b0276.  if v0 <= 0 then goto L1b028a;
  #L1b027a.  v0:= 0I;
  #L1b027c.  v1:= v1[v0] @kind object;
  #L1b0280.  call temp:= `c`(v1) @signature `Lorg/simpleframework/xml/core/Reflector;.c:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b0286.  v1:= temp @kind object;
  #L1b0288.  return v1 @kind object;
  #L1b028a.  v1:= 0I;
  #L1b028c.  return v1 @kind object;
}
procedure `java.lang.Class` `c`(`java.lang.reflect.Type` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.c:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b02a0.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L1b02a4.  if v0 == 0 then goto L1b02ae;
  #L1b02a8.  v1:= (`java.lang.Class`) v1 @kind object;
  #L1b02ac.  return v1 @kind object;
  #L1b02ae.  call temp:= `e`(v1) @signature `Lorg/simpleframework/xml/core/Reflector;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b02b4.  v1:= temp @kind object;
  #L1b02b6.  return v1 @kind object;
}
procedure `java.lang.Class`[] `d`(`java.lang.reflect.ParameterizedType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.d:(Ljava/lang/reflect/ParameterizedType;)[Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1b03a0.  call temp:= `getActualTypeArguments`(v3) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1b03a6.  v3:= temp @kind object;
  #L1b03a8.  v0:= length @variable v3;
  #L1b03aa.  v0:= new `java.lang.Class`[v0];
  #L1b03ae.  v1:= 0I;
  #L1b03b0.  v2:= length @variable v3;
  #L1b03b2.  if v1 >= v2 then goto L1b03cc;
  #L1b03b6.  v2:= v3[v1] @kind object;
  #L1b03ba.  call temp:= `c`(v2) @signature `Lorg/simpleframework/xml/core/Reflector;.c:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b03c0.  v2:= temp @kind object;
  #L1b03c2.  v0[v1]:= v2 @kind object;
  #L1b03c6.  v1:= v1 + 1;
  #L1b03ca.  goto L1b03b0;
  #L1b03cc.  return v0 @kind object;
}
procedure `java.lang.Class` `e`(`java.lang.reflect.Type` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b02f4.  v0:= instanceof @variable v1 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L1b02f8.  if v0 == 0 then goto L1b0306;
  #L1b02fc.  call temp:= `a`(v1) @signature `Lorg/simpleframework/xml/core/Reflector;.a:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b0302.  v1:= temp @kind object;
  #L1b0304.  return v1 @kind object;
  #L1b0306.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L1b030a.  return v1 @kind object;
}
procedure `java.lang.reflect.ParameterizedType` `f`(`java.lang.reflect.Constructor` v1 @kind object, `int` v2 ) @signature `Lorg/simpleframework/xml/core/Reflector;.f:(Ljava/lang/reflect/Constructor;I)Ljava/lang/reflect/ParameterizedType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b04f0.  call temp:= `getGenericParameterTypes`(v1) @signature `Ljava/lang/reflect/Constructor;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L1b04f6.  v1:= temp @kind object;
  #L1b04f8.  v0:= length @variable v1;
  #L1b04fa.  if v0 <= v2 then goto L1b0510;
  #L1b04fe.  v1:= v1[v2] @kind object;
  #L1b0502.  v2:= instanceof @variable v1 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b0506.  if v2 == 0 then goto L1b0510;
  #L1b050a.  v1:= (`java.lang.reflect.ParameterizedType`) v1 @kind object;
  #L1b050e.  return v1 @kind object;
  #L1b0510.  v1:= 0I;
  #L1b0512.  return v1 @kind object;
}
procedure `java.lang.reflect.ParameterizedType` `g`(`java.lang.reflect.Method` v1 @kind object, `int` v2 ) @signature `Lorg/simpleframework/xml/core/Reflector;.g:(Ljava/lang/reflect/Method;I)Ljava/lang/reflect/ParameterizedType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b0524.  call temp:= `getGenericParameterTypes`(v1) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L1b052a.  v1:= temp @kind object;
  #L1b052c.  v0:= length @variable v1;
  #L1b052e.  if v0 <= v2 then goto L1b0544;
  #L1b0532.  v1:= v1[v2] @kind object;
  #L1b0536.  v2:= instanceof @variable v1 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b053a.  if v2 == 0 then goto L1b0544;
  #L1b053e.  v1:= (`java.lang.reflect.ParameterizedType`) v1 @kind object;
  #L1b0542.  return v1 @kind object;
  #L1b0544.  v1:= 0I;
  #L1b0546.  return v1 @kind object;
}
procedure `java.lang.Class` `getDependent`(`java.lang.reflect.Field` v0 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependent:(Ljava/lang/reflect/Field;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1b02c8.  call temp:= `i`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.i:(Ljava/lang/reflect/Field;)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L1b02ce.  v0:= temp @kind object;
  #L1b02d0.  if v0 == 0 then goto L1b02de;
  #L1b02d4.  call temp:= `b`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.b:(Ljava/lang/reflect/ParameterizedType;)Ljava/lang/Class;` @kind static;
  #L1b02da.  v0:= temp @kind object;
  #L1b02dc.  return v0 @kind object;
  #L1b02de.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1b02e2.  return v0 @kind object;
}
procedure `java.lang.Class`[] `getDependents`(`java.lang.reflect.Field` v0 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependents:(Ljava/lang/reflect/Field;)[Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1b03e0.  call temp:= `i`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.i:(Ljava/lang/reflect/Field;)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L1b03e6.  v0:= temp @kind object;
  #L1b03e8.  if v0 == 0 then goto L1b03f6;
  #L1b03ec.  call temp:= `d`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.d:(Ljava/lang/reflect/ParameterizedType;)[Ljava/lang/Class;` @kind static;
  #L1b03f2.  v0:= temp @kind object;
  #L1b03f4.  return v0 @kind object;
  #L1b03f6.  v0:= 0I;
  #L1b03f8.  v0:= new `java.lang.Class`[v0];
  #L1b03fc.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1b04a0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b04a6.  v0:= temp;
  #L1b04a8.  if v0 <= 0 then goto L1b04de;
  #L1b04ac.  call temp:= `toCharArray`(v3) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L1b04b2.  v3:= temp @kind object;
  #L1b04b4.  v0:= 0I;
  #L1b04b6.  v1:= v3[v0] @kind char;
  #L1b04ba.  call temp:= `j`(v3) @signature `Lorg/simpleframework/xml/core/Reflector;.j:([C)Z` @kind static;
  #L1b04c0.  v2:= temp;
  #L1b04c2.  if v2 != 0 then goto L1b04d2;
  #L1b04c6.  call temp:= `l`(v1) @signature `Lorg/simpleframework/xml/core/Reflector;.l:(C)C` @kind static;
  #L1b04cc.  v1:= temp;
  #L1b04ce.  v3[v0]:= v1 @kind char;
  #L1b04d2.  v0:= new `java.lang.String`;
  #L1b04d6.  call `<init>`(v0, v3) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L1b04dc.  return v0 @kind object;
  #L1b04de.  return v3 @kind object;
}
procedure `java.lang.Class` `getParameterDependent`(`java.lang.reflect.Constructor` v0 @kind object, `int` v1 ) @signature `Lorg/simpleframework/xml/core/Reflector;.getParameterDependent:(Ljava/lang/reflect/Constructor;I)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1b031c.  call temp:= `f`(v0, v1) @signature `Lorg/simpleframework/xml/core/Reflector;.f:(Ljava/lang/reflect/Constructor;I)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L1b0322.  v0:= temp @kind object;
  #L1b0324.  if v0 == 0 then goto L1b0332;
  #L1b0328.  call temp:= `b`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.b:(Ljava/lang/reflect/ParameterizedType;)Ljava/lang/Class;` @kind static;
  #L1b032e.  v0:= temp @kind object;
  #L1b0330.  return v0 @kind object;
  #L1b0332.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1b0336.  return v0 @kind object;
}
procedure `java.lang.Class` `getParameterDependent`(`java.lang.reflect.Method` v0 @kind object, `int` v1 ) @signature `Lorg/simpleframework/xml/core/Reflector;.getParameterDependent:(Ljava/lang/reflect/Method;I)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1b0348.  call temp:= `g`(v0, v1) @signature `Lorg/simpleframework/xml/core/Reflector;.g:(Ljava/lang/reflect/Method;I)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L1b034e.  v0:= temp @kind object;
  #L1b0350.  if v0 == 0 then goto L1b035e;
  #L1b0354.  call temp:= `b`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.b:(Ljava/lang/reflect/ParameterizedType;)Ljava/lang/Class;` @kind static;
  #L1b035a.  v0:= temp @kind object;
  #L1b035c.  return v0 @kind object;
  #L1b035e.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1b0362.  return v0 @kind object;
}
procedure `java.lang.Class`[] `getParameterDependents`(`java.lang.reflect.Constructor` v0 @kind object, `int` v1 ) @signature `Lorg/simpleframework/xml/core/Reflector;.getParameterDependents:(Ljava/lang/reflect/Constructor;I)[Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1b0410.  call temp:= `f`(v0, v1) @signature `Lorg/simpleframework/xml/core/Reflector;.f:(Ljava/lang/reflect/Constructor;I)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L1b0416.  v0:= temp @kind object;
  #L1b0418.  if v0 == 0 then goto L1b0426;
  #L1b041c.  call temp:= `d`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.d:(Ljava/lang/reflect/ParameterizedType;)[Ljava/lang/Class;` @kind static;
  #L1b0422.  v0:= temp @kind object;
  #L1b0424.  return v0 @kind object;
  #L1b0426.  v0:= 0I;
  #L1b0428.  v0:= new `java.lang.Class`[v0];
  #L1b042c.  return v0 @kind object;
}
procedure `java.lang.Class`[] `getParameterDependents`(`java.lang.reflect.Method` v0 @kind object, `int` v1 ) @signature `Lorg/simpleframework/xml/core/Reflector;.getParameterDependents:(Ljava/lang/reflect/Method;I)[Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1b0440.  call temp:= `g`(v0, v1) @signature `Lorg/simpleframework/xml/core/Reflector;.g:(Ljava/lang/reflect/Method;I)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L1b0446.  v0:= temp @kind object;
  #L1b0448.  if v0 == 0 then goto L1b0456;
  #L1b044c.  call temp:= `d`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.d:(Ljava/lang/reflect/ParameterizedType;)[Ljava/lang/Class;` @kind static;
  #L1b0452.  v0:= temp @kind object;
  #L1b0454.  return v0 @kind object;
  #L1b0456.  v0:= 0I;
  #L1b0458.  v0:= new `java.lang.Class`[v0];
  #L1b045c.  return v0 @kind object;
}
procedure `java.lang.Class` `getReturnDependent`(`java.lang.reflect.Method` v0 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.getReturnDependent:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1b0374.  call temp:= `h`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.h:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L1b037a.  v0:= temp @kind object;
  #L1b037c.  if v0 == 0 then goto L1b038a;
  #L1b0380.  call temp:= `b`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.b:(Ljava/lang/reflect/ParameterizedType;)Ljava/lang/Class;` @kind static;
  #L1b0386.  v0:= temp @kind object;
  #L1b0388.  return v0 @kind object;
  #L1b038a.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1b038e.  return v0 @kind object;
}
procedure `java.lang.Class`[] `getReturnDependents`(`java.lang.reflect.Method` v0 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.getReturnDependents:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1b0470.  call temp:= `h`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.h:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L1b0476.  v0:= temp @kind object;
  #L1b0478.  if v0 == 0 then goto L1b0486;
  #L1b047c.  call temp:= `d`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.d:(Ljava/lang/reflect/ParameterizedType;)[Ljava/lang/Class;` @kind static;
  #L1b0482.  v0:= temp @kind object;
  #L1b0484.  return v0 @kind object;
  #L1b0486.  v0:= 0I;
  #L1b0488.  v0:= new `java.lang.Class`[v0];
  #L1b048c.  return v0 @kind object;
}
procedure `java.lang.reflect.ParameterizedType` `h`(`java.lang.reflect.Method` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.h:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/ParameterizedType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b0558.  call temp:= `getGenericReturnType`(v1) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1b055e.  v1:= temp @kind object;
  #L1b0560.  v0:= instanceof @variable v1 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b0564.  if v0 == 0 then goto L1b056e;
  #L1b0568.  v1:= (`java.lang.reflect.ParameterizedType`) v1 @kind object;
  #L1b056c.  return v1 @kind object;
  #L1b056e.  v1:= 0I;
  #L1b0570.  return v1 @kind object;
}
procedure `java.lang.reflect.ParameterizedType` `i`(`java.lang.reflect.Field` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.i:(Ljava/lang/reflect/Field;)Ljava/lang/reflect/ParameterizedType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1b0584.  call temp:= `getGenericType`(v1) @signature `Ljava/lang/reflect/Field;.getGenericType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1b058a.  v1:= temp @kind object;
  #L1b058c.  v0:= instanceof @variable v1 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b0590.  if v0 == 0 then goto L1b059a;
  #L1b0594.  v1:= (`java.lang.reflect.ParameterizedType`) v1 @kind object;
  #L1b0598.  return v1 @kind object;
  #L1b059a.  v1:= 0I;
  #L1b059c.  return v1 @kind object;
}
procedure `boolean` `j`(`char`[] v3 @kind object) @signature `Lorg/simpleframework/xml/core/Reflector;.j:([C)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1b01b4.  v0:= length @variable v3;
  #L1b01b6.  v1:= 0I;
  #L1b01b8.  v2:= 2I;
  #L1b01ba.  if v0 >= v2 then goto L1b01c0;
  #L1b01be.  return v1;
  #L1b01c0.  v0:= v3[v1] @kind char;
  #L1b01c4.  call temp:= `k`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.k:(C)Z` @kind static;
  #L1b01ca.  v0:= temp;
  #L1b01cc.  if v0 != 0 then goto L1b01d2;
  #L1b01d0.  return v1;
  #L1b01d2.  v0:= 1I;
  #L1b01d4.  v3:= v3[v0] @kind char;
  #L1b01d8.  call temp:= `k`(v3) @signature `Lorg/simpleframework/xml/core/Reflector;.k:(C)Z` @kind static;
  #L1b01de.  v3:= temp;
  #L1b01e0.  return v3;
}
procedure `boolean` `k`(`char` v0 ) @signature `Lorg/simpleframework/xml/core/Reflector;.k:(C)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1b01f4.  call temp:= `isUpperCase`(v0) @signature `Ljava/lang/Character;.isUpperCase:(C)Z` @kind static;
  #L1b01fa.  v0:= temp;
  #L1b01fc.  return v0;
}
procedure `char` `l`(`char` v0 ) @signature `Lorg/simpleframework/xml/core/Reflector;.l:(C)C` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1b0210.  call temp:= `toLowerCase`(v0) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L1b0216.  v0:= temp;
  #L1b0218.  return v0;
}
