record `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1a8530.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a8536.  v0.`org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder.a` @type ^`java.lang.Class` := v1 @kind object;
  #L1a853a.  v0.`org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder.b` @type ^`java.lang.Class` := v2 @kind object;
  #L1a853e.  return @kind void;
}
procedure `java.lang.reflect.Constructor` `a`(`org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder` v4 @kind this) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.a:()Ljava/lang/reflect/Constructor;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a84ec.  v0:= v4.`org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder.b` @type ^`java.lang.Class` @kind object;
  #L1a84f0.  v1:= 3I;
  #L1a84f2.  v1:= new `java.lang.Class`[v1];
  #L1a84f6.  v2:= 0I;
  #L1a84f8.  v3:= constclass @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L1a84fc.  v1[v2]:= v3 @kind object;
  #L1a8500.  v2:= v4.`org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder.a` @type ^`java.lang.Class` @kind object;
  #L1a8504.  v3:= 1I;
  #L1a8506.  v1[v3]:= v2 @kind object;
  #L1a850a.  v2:= 2I;
  #L1a850c.  v3:= constclass @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L1a8510.  v1[v2]:= v3 @kind object;
  #L1a8514.  call temp:= `getConstructor`(v0, v1) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L1a851a.  v0:= temp @kind object;
  #L1a851c.  return v0 @kind object;
}
procedure `java.lang.reflect.Constructor` `access$000`(`org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder` v0 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.access$000:(Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;)Ljava/lang/reflect/Constructor;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a84d0.  call temp:= `a`(v0) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.a:()Ljava/lang/reflect/Constructor;` @kind direct;
  #L1a84d6.  v0:= temp @kind object;
  #L1a84d8.  return v0 @kind object;
}
