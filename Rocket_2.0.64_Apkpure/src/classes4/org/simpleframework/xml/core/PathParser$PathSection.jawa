record `org.simpleframework.xml.core.PathParser$PathSection` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Expression` @kind interface {
  `java.util.List` `org.simpleframework.xml.core.PathParser$PathSection.a` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.PathParser$PathSection.b` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.PathParser$PathSection.c` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.core.PathParser$PathSection.d` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.core.PathParser$PathSection.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.PathParser` `org.simpleframework.xml.core.PathParser$PathSection.this$0` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PathParser$PathSection` v0 @kind this, `org.simpleframework.xml.core.PathParser` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.<init>:(Lorg/simpleframework/xml/core/PathParser;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ad8dc.  v0.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` := v1 @kind object;
  #L1ad8e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ad8e6.  v1:= new `java.util.ArrayList`;
  #L1ad8ea.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1ad8f0.  v0.`org.simpleframework.xml.core.PathParser$PathSection.a` @type ^`java.util.List` := v1 @kind object;
  #L1ad8f4.  v0.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int` := v2;
  #L1ad8f8.  v0.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int` := v3;
  #L1ad8fc.  return @kind void;
}
procedure `java.lang.String` `a`(`org.simpleframework.xml.core.PathParser$PathSection` v5 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ad620.  v0:= 0I;
  #L1ad622.  v1:= 0I;
  #L1ad624.  v2:= v5.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L1ad628.  v3:= 47I;
  #L1ad62c.  if v0 >= v2 then goto L1ad64a;
  #L1ad630.  v2:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad634.  v2:= v2.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L1ad638.  v1:= v1 + 1;
  #L1ad63c.  call temp:= `indexOf`(v2, v3, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L1ad642.  v1:= temp;
  #L1ad644.  v0:= v0 + 1;
  #L1ad648.  goto L1ad624;
  #L1ad64a.  v2:= v1;
  #L1ad64c.  v4:= v5.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L1ad650.  if v0 > v4 then goto L1ad684;
  #L1ad654.  v4:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad658.  v4:= v4.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L1ad65c.  v2:= v2 + 1;
  #L1ad660.  call temp:= `indexOf`(v4, v3, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L1ad666.  v2:= temp;
  #L1ad668.  v4:= -1I;
  #L1ad66a.  if v2 != v4 then goto L1ad67e;
  #L1ad66e.  v2:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad672.  v2:= v2.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L1ad676.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ad67c.  v2:= temp;
  #L1ad67e.  v0:= v0 + 1;
  #L1ad682.  goto L1ad64c;
  #L1ad684.  v0:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad688.  v0:= v0.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L1ad68c.  v1:= v1 + 1;
  #L1ad690.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1ad696.  v0:= temp @kind object;
  #L1ad698.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`org.simpleframework.xml.core.PathParser$PathSection` v5 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.b:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ad704.  v0:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad708.  v0:= v0.`org.simpleframework.xml.core.PathParser.start` @type ^`int`;
  #L1ad70c.  v1:= 0I;
  #L1ad70e.  v2:= 0I;
  #L1ad710.  v3:= v5.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L1ad714.  if v1 > v3 then goto L1ad754;
  #L1ad718.  v3:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad71c.  v4:= v3.`org.simpleframework.xml.core.PathParser.count` @type ^`int`;
  #L1ad720.  if v0 < v4 then goto L1ad72a;
  #L1ad724.  v0:= v0 + 1;
  #L1ad728.  goto L1ad754;
  #L1ad72a.  v3:= v3.`org.simpleframework.xml.core.PathParser.data` @type ^`char`[] @kind object;
  #L1ad72e.  v4:= v0 + 1;
  #L1ad732.  v0:= v3[v0] @kind char;
  #L1ad736.  v3:= 47I;
  #L1ad73a.  if v0 != v3 then goto L1ad750;
  #L1ad73e.  v1:= v1 + 1;
  #L1ad742.  v0:= v5.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L1ad746.  if v1 != v0 then goto L1ad750;
  #L1ad74a.  v0:= v4;
  #L1ad74c.  v2:= v0;
  #L1ad74e.  goto L1ad710;
  #L1ad750.  v0:= v4;
  #L1ad752.  goto L1ad710;
  #L1ad754.  v1:= new `java.lang.String`;
  #L1ad758.  v3:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad75c.  v3:= v3.`org.simpleframework.xml.core.PathParser.data` @type ^`char`[] @kind object;
  #L1ad760.  v0:= v0 + -1;
  #L1ad764.  v0:= v0 - v2 @kind int;
  #L1ad766.  call `<init>`(v1, v3, v2, v0) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L1ad76c.  return v1 @kind object;
}
procedure `java.lang.String` `getAttribute`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ad5f4.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:()Ljava/lang/String;` @kind virtual;
  #L1ad5fa.  v0:= temp @kind object;
  #L1ad5fc.  if v0 == 0 then goto L1ad60c;
  #L1ad600.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad604.  call temp:= `getAttributePath`(v1, v0, v3) @signature `Lorg/simpleframework/xml/core/PathParser;.getAttributePath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1ad60a.  v3:= temp @kind object;
  #L1ad60c.  return v3 @kind object;
}
procedure `java.lang.String` `getElement`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ad6ac.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:()Ljava/lang/String;` @kind virtual;
  #L1ad6b2.  v0:= temp @kind object;
  #L1ad6b4.  if v0 == 0 then goto L1ad6c4;
  #L1ad6b8.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad6bc.  call temp:= `getElementPath`(v1, v0, v3) @signature `Lorg/simpleframework/xml/core/PathParser;.getElementPath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1ad6c2.  v3:= temp @kind object;
  #L1ad6c4.  return v3 @kind object;
}
procedure `java.lang.String` `getFirst`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getFirst:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ad6d8.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad6dc.  v0:= v0.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L1ad6e0.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L1ad6e4.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1ad6ea.  v0:= temp @kind object;
  #L1ad6ec.  v0:= (`java.lang.String`) v0 @kind object;
  #L1ad6f0.  return v0 @kind object;
}
procedure `int` `getIndex`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ad5c0.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad5c4.  v0:= v0.`org.simpleframework.xml.core.PathParser.indexes` @type ^`java.util.List` @kind object;
  #L1ad5c8.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L1ad5cc.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1ad5d2.  v0:= temp @kind object;
  #L1ad5d4.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L1ad5d8.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1ad5de.  v0:= temp;
  #L1ad5e0.  return v0;
}
procedure `java.lang.String` `getLast`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getLast:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ad780.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad784.  v0:= v0.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L1ad788.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L1ad78c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1ad792.  v0:= temp @kind object;
  #L1ad794.  v0:= (`java.lang.String`) v0 @kind object;
  #L1ad798.  return v0 @kind object;
}
procedure `java.lang.String` `getPath`(`org.simpleframework.xml.core.PathParser$PathSection` v1 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ad7ac.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.b` @type ^`java.lang.String` @kind object;
  #L1ad7b0.  if v0 != 0 then goto L1ad7c0;
  #L1ad7b4.  call temp:= `a`(v1) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.a:()Ljava/lang/String;` @kind direct;
  #L1ad7ba.  v0:= temp @kind object;
  #L1ad7bc.  v1.`org.simpleframework.xml.core.PathParser$PathSection.b` @type ^`java.lang.String` := v0 @kind object;
  #L1ad7c0.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.b` @type ^`java.lang.String` @kind object;
  #L1ad7c4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getPath`(`org.simpleframework.xml.core.PathParser$PathSection` v1 @kind this, `int` v2 ) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ad894.  v0:= 0I;
  #L1ad896.  call temp:= `getPath`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L1ad89c.  v2:= temp @kind object;
  #L1ad89e.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getPath`(`org.simpleframework.xml.core.PathParser$PathSection` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ad8b0.  v0:= new `org.simpleframework.xml.core.PathParser$PathSection`;
  #L1ad8b4.  v1:= v3.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad8b8.  v2:= v3.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L1ad8bc.  v2:= v2 + v4 @kind int;
  #L1ad8be.  v4:= v3.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L1ad8c2.  v4:= v4 - v5 @kind int;
  #L1ad8c4.  call `<init>`(v0, v1, v2, v4) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.<init>:(Lorg/simpleframework/xml/core/PathParser;II)V` @kind direct;
  #L1ad8ca.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ad7d8.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad7dc.  v0:= v0.`org.simpleframework.xml.core.PathParser.prefixes` @type ^`java.util.List` @kind object;
  #L1ad7e0.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L1ad7e4.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1ad7ea.  v0:= temp @kind object;
  #L1ad7ec.  v0:= (`java.lang.String`) v0 @kind object;
  #L1ad7f0.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.PathParser$PathSection` v4 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.isAttribute:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ad538.  v0:= v4.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad53c.  v1:= v0.`org.simpleframework.xml.core.PathParser.attribute` @type ^`boolean` @kind boolean;
  #L1ad540.  v2:= 0I;
  #L1ad542.  if v1 == 0 then goto L1ad560;
  #L1ad546.  v1:= v4.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L1ad54a.  v0:= v0.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L1ad54e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1ad554.  v0:= temp;
  #L1ad556.  v3:= 1I;
  #L1ad558.  v0:= v0 - v3 @kind int;
  #L1ad55a.  if v1 < v0 then goto L1ad560;
  #L1ad55e.  v2:= 1I;
  #L1ad560.  return v2;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ad574.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L1ad578.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L1ad57c.  if v0 != v1 then goto L1ad584;
  #L1ad580.  v0:= 1I;
  #L1ad582.  goto L1ad586;
  #L1ad584.  v0:= 0I;
  #L1ad586.  return v0;
}
procedure `boolean` `isPath`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.isPath:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ad598.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L1ad59c.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L1ad5a0.  v0:= v0 - v1 @kind int;
  #L1ad5a2.  v1:= 1I;
  #L1ad5a4.  if v0 < v1 then goto L1ad5aa;
  #L1ad5a8.  goto L1ad5ac;
  #L1ad5aa.  v1:= 0I;
  #L1ad5ac.  return v1;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.PathParser$PathSection` v3 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ad830.  v0:= v3.`org.simpleframework.xml.core.PathParser$PathSection.a` @type ^`java.util.List` @kind object;
  #L1ad834.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1ad83a.  v0:= temp;
  #L1ad83c.  if v0 == 0 then goto L1ad874;
  #L1ad840.  v0:= v3.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L1ad844.  v1:= v3.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L1ad848.  if v0 > v1 then goto L1ad874;
  #L1ad84c.  v1:= v3.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L1ad850.  v1:= v1.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L1ad854.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1ad85a.  v1:= temp @kind object;
  #L1ad85c.  v1:= (`java.lang.String`) v1 @kind object;
  #L1ad860.  if v1 == 0 then goto L1ad86e;
  #L1ad864.  v2:= v3.`org.simpleframework.xml.core.PathParser$PathSection.a` @type ^`java.util.List` @kind object;
  #L1ad868.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1ad86e.  v0:= v0 + 1;
  #L1ad872.  goto L1ad844;
  #L1ad874.  v0:= v3.`org.simpleframework.xml.core.PathParser$PathSection.a` @type ^`java.util.List` @kind object;
  #L1ad878.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ad87e.  v0:= temp @kind object;
  #L1ad880.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.PathParser$PathSection` v1 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ad804.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.c` @type ^`java.lang.String` @kind object;
  #L1ad808.  if v0 != 0 then goto L1ad818;
  #L1ad80c.  call temp:= `b`(v1) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.b:()Ljava/lang/String;` @kind direct;
  #L1ad812.  v0:= temp @kind object;
  #L1ad814.  v1.`org.simpleframework.xml.core.PathParser$PathSection.c` @type ^`java.lang.String` := v0 @kind object;
  #L1ad818.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.c` @type ^`java.lang.String` @kind object;
  #L1ad81c.  return v0 @kind object;
}
