record `org.simpleframework.xml.core.StructureBuilder` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.InstantiatorBuilder` `org.simpleframework.xml.core.StructureBuilder.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ExpressionBuilder` `org.simpleframework.xml.core.StructureBuilder.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ModelAssembler` `org.simpleframework.xml.core.StructureBuilder.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Instantiator` `org.simpleframework.xml.core.StructureBuilder.d` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.StructureBuilder.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.StructureBuilder.f` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.StructureBuilder.g` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Scanner` `org.simpleframework.xml.core.StructureBuilder.h` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.StructureBuilder.i` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.StructureBuilder.j` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.StructureBuilder.k` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Model` `org.simpleframework.xml.core.StructureBuilder.l` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.StructureBuilder.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Scanner` v3 @kind object, `org.simpleframework.xml.core.Detail` v4 @kind object, `org.simpleframework.xml.core.Support` v5 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.<init>:(Lorg/simpleframework/xml/core/Scanner;Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1b1fc0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b1fc6.  v0:= new `org.simpleframework.xml.core.ExpressionBuilder`;
  #L1b1fca.  call `<init>`(v0, v4, v5) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1b1fd0.  v2.`org.simpleframework.xml.core.StructureBuilder.b` @type ^`org.simpleframework.xml.core.ExpressionBuilder` := v0 @kind object;
  #L1b1fd4.  v1:= new `org.simpleframework.xml.core.ModelAssembler`;
  #L1b1fd8.  call `<init>`(v1, v0, v4, v5) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.<init>:(Lorg/simpleframework/xml/core/ExpressionBuilder;Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1b1fde.  v2.`org.simpleframework.xml.core.StructureBuilder.c` @type ^`org.simpleframework.xml.core.ModelAssembler` := v1 @kind object;
  #L1b1fe2.  v0:= new `org.simpleframework.xml.core.InstantiatorBuilder`;
  #L1b1fe6.  call `<init>`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.<init>:(Lorg/simpleframework/xml/core/Scanner;Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1b1fec.  v2.`org.simpleframework.xml.core.StructureBuilder.a` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` := v0 @kind object;
  #L1b1ff0.  v0:= new `org.simpleframework.xml.core.TreeModel`;
  #L1b1ff4.  call `<init>`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1b1ffa.  v2.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` := v0 @kind object;
  #L1b1ffe.  v4:= new `org.simpleframework.xml.core.LabelMap`;
  #L1b2002.  call `<init>`(v4, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L1b2008.  v2.`org.simpleframework.xml.core.StructureBuilder.e` @type ^`org.simpleframework.xml.core.LabelMap` := v4 @kind object;
  #L1b200c.  v4:= new `org.simpleframework.xml.core.LabelMap`;
  #L1b2010.  call `<init>`(v4, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L1b2016.  v2.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` := v4 @kind object;
  #L1b201a.  v4:= new `org.simpleframework.xml.core.LabelMap`;
  #L1b201e.  call `<init>`(v4, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L1b2024.  v2.`org.simpleframework.xml.core.StructureBuilder.g` @type ^`org.simpleframework.xml.core.LabelMap` := v4 @kind object;
  #L1b2028.  v2.`org.simpleframework.xml.core.StructureBuilder.h` @type ^`org.simpleframework.xml.core.Scanner` := v3 @kind object;
  #L1b202c.  v2.`org.simpleframework.xml.core.StructureBuilder.i` @type ^`org.simpleframework.xml.core.Support` := v5 @kind object;
  #L1b2030.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `a`(`org.simpleframework.xml.core.StructureBuilder` v4 @kind this, `org.simpleframework.xml.core.Expression` v5 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.a:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b1ecc.  v0:= v4.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b1ed0.  if v0 == 0 then goto L1b1f12;
  #L1b1ed4.  call temp:= `getPrefix`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L1b1eda.  v1:= temp @kind object;
  #L1b1edc.  call temp:= `getFirst`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L1b1ee2.  v2:= temp @kind object;
  #L1b1ee4.  call temp:= `getIndex`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L1b1eea.  v3:= temp;
  #L1b1eec.  if v2 == 0 then goto L1b1ef8;
  #L1b1ef0.  call temp:= `register`(v0, v2, v1, v3) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L1b1ef6.  v0:= temp @kind object;
  #L1b1ef8.  call temp:= `isPath`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L1b1efe.  v1:= temp;
  #L1b1f00.  if v1 != 0 then goto L1b1f06;
  #L1b1f04.  goto L1b1f12;
  #L1b1f06.  v1:= 1I;
  #L1b1f08.  call temp:= `getPath`(v5, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L1b1f0e.  v5:= temp @kind object;
  #L1b1f10.  goto L1b1ed0;
  #L1b1f12.  return v0 @kind object;
}
procedure `boolean` `b`(`org.simpleframework.xml.core.StructureBuilder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1b1ddc.  v0:= v3.`org.simpleframework.xml.core.StructureBuilder.b` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L1b1de0.  call temp:= `build`(v0, v4) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L1b1de6.  v0:= temp @kind object;
  #L1b1de8.  call temp:= `e`(v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.e:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L1b1dee.  v1:= temp @kind object;
  #L1b1df0.  if v1 == 0 then goto L1b1e1c;
  #L1b1df4.  call temp:= `getLast`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.getLast:()Ljava/lang/String;` @kind interface;
  #L1b1dfa.  v2:= temp @kind object;
  #L1b1dfc.  call temp:= `isPath`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L1b1e02.  v0:= temp;
  #L1b1e04.  if v0 != 0 then goto L1b1e12;
  #L1b1e08.  call temp:= `isAttribute`(v1, v4) @signature `Lorg/simpleframework/xml/core/Model;.isAttribute:(Ljava/lang/String;)Z` @kind interface;
  #L1b1e0e.  v4:= temp;
  #L1b1e10.  return v4;
  #L1b1e12.  call temp:= `isAttribute`(v1, v2) @signature `Lorg/simpleframework/xml/core/Model;.isAttribute:(Ljava/lang/String;)Z` @kind interface;
  #L1b1e18.  v4:= temp;
  #L1b1e1a.  return v4;
  #L1b1e1c.  v4:= 0I;
  #L1b1e1e.  return v4;
}
procedure `boolean` `c`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.c:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b1e30.  v0:= v5.`org.simpleframework.xml.core.StructureBuilder.b` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L1b1e34.  call temp:= `build`(v0, v6) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L1b1e3a.  v6:= temp @kind object;
  #L1b1e3c.  call temp:= `e`(v5, v6) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.e:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L1b1e42.  v0:= temp @kind object;
  #L1b1e44.  v1:= 0I;
  #L1b1e46.  if v0 == 0 then goto L1b1e8e;
  #L1b1e4a.  call temp:= `getLast`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getLast:()Ljava/lang/String;` @kind interface;
  #L1b1e50.  v2:= temp @kind object;
  #L1b1e52.  call temp:= `getIndex`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L1b1e58.  v6:= temp;
  #L1b1e5a.  call temp:= `isElement`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.isElement:(Ljava/lang/String;)Z` @kind interface;
  #L1b1e60.  v3:= temp;
  #L1b1e62.  v4:= 1I;
  #L1b1e64.  if v3 == 0 then goto L1b1e6a;
  #L1b1e68.  return v4;
  #L1b1e6a.  call temp:= `isModel`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.isModel:(Ljava/lang/String;)Z` @kind interface;
  #L1b1e70.  v3:= temp;
  #L1b1e72.  if v3 == 0 then goto L1b1e8e;
  #L1b1e76.  call temp:= `lookup`(v0, v2, v6) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L1b1e7c.  v6:= temp @kind object;
  #L1b1e7e.  call temp:= `isEmpty`(v6) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L1b1e84.  v6:= temp;
  #L1b1e86.  if v6 == 0 then goto L1b1e8c;
  #L1b1e8a.  return v1;
  #L1b1e8c.  return v4;
  #L1b1e8e.  return v1;
}
procedure `boolean` `d`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.d:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b1ea0.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.k` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b1ea4.  if v0 == 0 then goto L1b1eac;
  #L1b1ea8.  v0:= 0I;
  #L1b1eaa.  return v0;
  #L1b1eac.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b1eb0.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L1b1eb6.  v0:= temp;
  #L1b1eb8.  return v0;
}
procedure `org.simpleframework.xml.core.Model` `e`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Expression` v3 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.e:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b1f24.  v0:= 0I;
  #L1b1f26.  v1:= 1I;
  #L1b1f28.  call temp:= `getPath`(v3, v0, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L1b1f2e.  v0:= temp @kind object;
  #L1b1f30.  call temp:= `isPath`(v3) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L1b1f36.  v3:= temp;
  #L1b1f38.  if v3 == 0 then goto L1b1f4a;
  #L1b1f3c.  v3:= v2.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b1f40.  call temp:= `lookup`(v3, v0) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L1b1f46.  v3:= temp @kind object;
  #L1b1f48.  return v3 @kind object;
  #L1b1f4a.  v3:= v2.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b1f4e.  return v3 @kind object;
}
procedure `void` `f`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Contact` v3 @kind object, `java.lang.annotation.Annotation` v4 @kind object, `org.simpleframework.xml.core.LabelMap` v5 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b2160.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.i` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1b2164.  call temp:= `getLabel`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1b216a.  v4:= temp @kind object;
  #L1b216c.  call temp:= `getPath`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L1b2172.  v0:= temp @kind object;
  #L1b2174.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L1b217a.  v1:= temp @kind object;
  #L1b217c.  call temp:= `get`(v5, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b2182.  v0:= temp @kind object;
  #L1b2184.  if v0 != 0 then goto L1b2190;
  #L1b2188.  call `g`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.g:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1b218e.  return @kind void;
  #L1b2190.  v4:= new `org.simpleframework.xml.core.PersistenceException`;
  #L1b2194.  v5:= 2I;
  #L1b2196.  v5:= new `java.lang.Object`[v5];
  #L1b219a.  v0:= 0I;
  #L1b219c.  v5[v0]:= v1 @kind object;
  #L1b21a0.  v0:= 1I;
  #L1b21a2.  v5[v0]:= v3 @kind object;
  #L1b21a6.  v3:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L1b21aa.  call `<init>`(v4, v3, v5) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b21b0.  throw v4;
}
procedure `void` `g`(`org.simpleframework.xml.core.StructureBuilder` v3 @kind this, `org.simpleframework.xml.core.Contact` v4 @kind object, `org.simpleframework.xml.core.Label` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.g:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1b21c4.  call temp:= `getExpression`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L1b21ca.  v4:= temp @kind object;
  #L1b21cc.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L1b21d2.  v0:= temp @kind object;
  #L1b21d4.  v1:= v3.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b21d8.  call temp:= `isEmpty`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isEmpty:()Z` @kind interface;
  #L1b21de.  v2:= temp;
  #L1b21e0.  if v2 != 0 then goto L1b21ec;
  #L1b21e4.  call temp:= `h`(v3, v4) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.h:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L1b21ea.  v1:= temp @kind object;
  #L1b21ec.  v4:= v3.`org.simpleframework.xml.core.StructureBuilder.a` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` @kind object;
  #L1b21f0.  call `register`(v4, v5) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L1b21f6.  call `register`(v1, v5) @signature `Lorg/simpleframework/xml/core/Model;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind interface;
  #L1b21fc.  call temp:= `put`(v6, v0, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b2202.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `h`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `org.simpleframework.xml.core.Expression` v2 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.h:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b1f60.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b1f64.  call temp:= `lookup`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L1b1f6a.  v0:= temp @kind object;
  #L1b1f6c.  if v0 == 0 then goto L1b1f72;
  #L1b1f70.  return v0 @kind object;
  #L1b1f72.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.a:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L1b1f78.  v2:= temp @kind object;
  #L1b1f7a.  return v2 @kind object;
}
procedure `void` `i`(`org.simpleframework.xml.core.StructureBuilder` v4 @kind this, `org.simpleframework.xml.core.Contact` v5 @kind object, `java.lang.annotation.Annotation` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.i:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b2214.  v0:= v4.`org.simpleframework.xml.core.StructureBuilder.i` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1b2218.  call temp:= `getLabel`(v0, v5, v6) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1b221e.  v5:= temp @kind object;
  #L1b2220.  call temp:= `getExpression`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L1b2226.  v0:= temp @kind object;
  #L1b2228.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L1b222e.  v1:= temp @kind object;
  #L1b2230.  v2:= v4.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b2234.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.isEmpty:()Z` @kind interface;
  #L1b223a.  v3:= temp;
  #L1b223c.  if v3 != 0 then goto L1b2248;
  #L1b2240.  call temp:= `h`(v4, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.h:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L1b2246.  v2:= temp @kind object;
  #L1b2248.  v0:= v4.`org.simpleframework.xml.core.StructureBuilder.g` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b224c.  call temp:= `get`(v0, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b2252.  v0:= temp @kind object;
  #L1b2254.  if v0 != 0 then goto L1b2274;
  #L1b2258.  v6:= v4.`org.simpleframework.xml.core.StructureBuilder.a` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` @kind object;
  #L1b225c.  call `register`(v6, v5) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L1b2262.  call `register`(v2, v5) @signature `Lorg/simpleframework/xml/core/Model;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind interface;
  #L1b2268.  v6:= v4.`org.simpleframework.xml.core.StructureBuilder.g` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b226c.  call temp:= `put`(v6, v1, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b2272.  return @kind void;
  #L1b2274.  v5:= new `org.simpleframework.xml.core.TextException`;
  #L1b2278.  v0:= 1I;
  #L1b227a.  v0:= new `java.lang.Object`[v0];
  #L1b227e.  v1:= 0I;
  #L1b2280.  v0[v1]:= v6 @kind object;
  #L1b2284.  v6:= "Multiple text annotations in %s" @kind object;
  #L1b2288.  call `<init>`(v5, v6, v0) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b228e.  throw v5;
}
procedure `void` `j`(`org.simpleframework.xml.core.StructureBuilder` v3 @kind this, `org.simpleframework.xml.core.Contact` v4 @kind object, `java.lang.annotation.Annotation` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.j:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1b22a0.  v0:= v3.`org.simpleframework.xml.core.StructureBuilder.i` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1b22a4.  call temp:= `getLabels`(v0, v4, v5) @signature `Lorg/simpleframework/xml/core/Support;.getLabels:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Ljava/util/List;` @kind virtual;
  #L1b22aa.  v5:= temp @kind object;
  #L1b22ac.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b22b2.  v5:= temp @kind object;
  #L1b22b4.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b22ba.  v0:= temp;
  #L1b22bc.  if v0 == 0 then goto L1b2312;
  #L1b22c0.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b22c6.  v0:= temp @kind object;
  #L1b22c8.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L1b22cc.  call temp:= `getPath`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L1b22d2.  v1:= temp @kind object;
  #L1b22d4.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L1b22da.  v2:= temp @kind object;
  #L1b22dc.  call temp:= `get`(v6, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b22e2.  v1:= temp @kind object;
  #L1b22e4.  if v1 != 0 then goto L1b22f0;
  #L1b22e8.  call `g`(v3, v4, v0, v6) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.g:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1b22ee.  goto L1b22b4;
  #L1b22f0.  v4:= new `org.simpleframework.xml.core.PersistenceException`;
  #L1b22f4.  v5:= 2I;
  #L1b22f6.  v5:= new `java.lang.Object`[v5];
  #L1b22fa.  v6:= 0I;
  #L1b22fc.  v5[v6]:= v2 @kind object;
  #L1b2300.  v6:= 1I;
  #L1b2302.  v5[v6]:= v0 @kind object;
  #L1b2306.  v6:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L1b230a.  call `<init>`(v4, v6, v5) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b2310.  throw v4;
  #L1b2312.  return @kind void;
}
procedure `void` `k`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.Class` v6 @kind object, `org.simpleframework.xml.Order` v7 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.k:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b2368.  if v7 == 0 then goto L1b23b4;
  #L1b236c.  call temp:= `attributes`(v7) @signature `Lorg/simpleframework/xml/Order;.attributes:()[Ljava/lang/String;` @kind interface;
  #L1b2372.  v7:= temp @kind object;
  #L1b2374.  v0:= length @variable v7;
  #L1b2376.  v1:= 0I;
  #L1b2378.  v2:= 0I;
  #L1b237a.  if v2 >= v0 then goto L1b23b4;
  #L1b237e.  v3:= v7[v2] @kind object;
  #L1b2382.  call temp:= `b`(v5, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.b:(Ljava/lang/String;)Z` @kind direct;
  #L1b2388.  v4:= temp;
  #L1b238a.  if v4 == 0 then goto L1b2394;
  #L1b238e.  v2:= v2 + 1;
  #L1b2392.  goto L1b237a;
  #L1b2394.  v7:= new `org.simpleframework.xml.core.AttributeException`;
  #L1b2398.  v0:= 2I;
  #L1b239a.  v0:= new `java.lang.Object`[v0];
  #L1b239e.  v0[v1]:= v3 @kind object;
  #L1b23a2.  v1:= 1I;
  #L1b23a4.  v0[v1]:= v6 @kind object;
  #L1b23a8.  v6:= "Ordered attribute '%s' missing in %s" @kind object;
  #L1b23ac.  call `<init>`(v7, v6, v0) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b23b2.  throw v7;
  #L1b23b4.  return @kind void;
}
procedure `void` `l`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.Class` v6 @kind object, `org.simpleframework.xml.Order` v7 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.l:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b23c8.  if v7 == 0 then goto L1b2414;
  #L1b23cc.  call temp:= `elements`(v7) @signature `Lorg/simpleframework/xml/Order;.elements:()[Ljava/lang/String;` @kind interface;
  #L1b23d2.  v7:= temp @kind object;
  #L1b23d4.  v0:= length @variable v7;
  #L1b23d6.  v1:= 0I;
  #L1b23d8.  v2:= 0I;
  #L1b23da.  if v2 >= v0 then goto L1b2414;
  #L1b23de.  v3:= v7[v2] @kind object;
  #L1b23e2.  call temp:= `c`(v5, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.c:(Ljava/lang/String;)Z` @kind direct;
  #L1b23e8.  v4:= temp;
  #L1b23ea.  if v4 == 0 then goto L1b23f4;
  #L1b23ee.  v2:= v2 + 1;
  #L1b23f2.  goto L1b23da;
  #L1b23f4.  v7:= new `org.simpleframework.xml.core.ElementException`;
  #L1b23f8.  v0:= 2I;
  #L1b23fa.  v0:= new `java.lang.Object`[v0];
  #L1b23fe.  v0[v1]:= v3 @kind object;
  #L1b2402.  v1:= 1I;
  #L1b2404.  v0[v1]:= v6 @kind object;
  #L1b2408.  v6:= "Ordered element '%s' missing for %s" @kind object;
  #L1b240c.  call `<init>`(v7, v6, v0) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b2412.  throw v7;
  #L1b2414.  return @kind void;
}
procedure `void` `m`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.m:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b2428.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b242c.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L1b2432.  v0:= temp;
  #L1b2434.  if v0 != 0 then goto L1b2442;
  #L1b2438.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b243c.  call `validate`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.validate:(Ljava/lang/Class;)V` @kind interface;
  #L1b2442.  return @kind void;
}
procedure `void` `n`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.n:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b2454.  v0:= v5.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b2458.  call temp:= `getText`(v0) @signature `Lorg/simpleframework/xml/core/Model;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L1b245e.  v0:= temp @kind object;
  #L1b2460.  if v0 == 0 then goto L1b24d0;
  #L1b2464.  call temp:= `isTextList`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L1b246a.  v1:= temp;
  #L1b246c.  if v1 != 0 then goto L1b24ec;
  #L1b2470.  v1:= v5.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b2474.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L1b247a.  v1:= temp;
  #L1b247c.  v2:= 1I;
  #L1b247e.  v3:= 0I;
  #L1b2480.  v4:= 2I;
  #L1b2482.  if v1 == 0 then goto L1b24b4;
  #L1b2486.  v1:= v5.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b248a.  call temp:= `isComposite`(v1) @signature `Lorg/simpleframework/xml/core/Model;.isComposite:()Z` @kind interface;
  #L1b2490.  v1:= temp;
  #L1b2492.  if v1 != 0 then goto L1b2498;
  #L1b2496.  goto L1b24ec;
  #L1b2498.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L1b249c.  v4:= new `java.lang.Object`[v4];
  #L1b24a0.  v4[v3]:= v0 @kind object;
  #L1b24a4.  v4[v2]:= v6 @kind object;
  #L1b24a8.  v6:= "Paths used with %s in %s" @kind object;
  #L1b24ac.  call `<init>`(v1, v6, v4) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b24b2.  throw v1;
  #L1b24b4.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L1b24b8.  v4:= new `java.lang.Object`[v4];
  #L1b24bc.  v4[v3]:= v0 @kind object;
  #L1b24c0.  v4[v2]:= v6 @kind object;
  #L1b24c4.  v6:= "Elements used with %s in %s" @kind object;
  #L1b24c8.  call `<init>`(v1, v6, v4) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b24ce.  throw v1;
  #L1b24d0.  v6:= v5.`org.simpleframework.xml.core.StructureBuilder.h` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L1b24d4.  call temp:= `isEmpty`(v6) @signature `Lorg/simpleframework/xml/core/Scanner;.isEmpty:()Z` @kind interface;
  #L1b24da.  v6:= temp;
  #L1b24dc.  if v6 == 0 then goto L1b24ec;
  #L1b24e0.  call temp:= `d`(v5) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.d:()Z` @kind direct;
  #L1b24e6.  v6:= temp;
  #L1b24e8.  v5.`org.simpleframework.xml.core.StructureBuilder.m` @type ^`boolean` := v6 @kind boolean;
  #L1b24ec.  return @kind void;
}
procedure `void` `o`(`org.simpleframework.xml.core.StructureBuilder` v8 @kind this, `java.lang.Class` v9 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.o:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b2500.  v0:= v8.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b2504.  call temp:= `getText`(v0) @signature `Lorg/simpleframework/xml/core/Model;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L1b250a.  v0:= temp @kind object;
  #L1b250c.  if v0 == 0 then goto L1b25e8;
  #L1b2510.  call temp:= `isTextList`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L1b2516.  v1:= temp;
  #L1b2518.  if v1 == 0 then goto L1b25e8;
  #L1b251c.  call temp:= `getKey`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1b2522.  v1:= temp @kind object;
  #L1b2524.  v2:= v8.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b2528.  call temp:= `iterator`(v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b252e.  v2:= temp @kind object;
  #L1b2530.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b2536.  v3:= temp;
  #L1b2538.  v4:= 1I;
  #L1b253a.  v5:= 0I;
  #L1b253c.  v6:= 2I;
  #L1b253e.  if v3 == 0 then goto L1b25ba;
  #L1b2542.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b2548.  v3:= temp @kind object;
  #L1b254a.  v3:= (`org.simpleframework.xml.core.Label`) v3 @kind object;
  #L1b254e.  call temp:= `getKey`(v3) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1b2554.  v7:= temp @kind object;
  #L1b2556.  call temp:= `equals`(v7, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b255c.  v7:= temp;
  #L1b255e.  if v7 == 0 then goto L1b259e;
  #L1b2562.  call temp:= `getDependent`(v3) @signature `Lorg/simpleframework/xml/core/Label;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @kind interface;
  #L1b2568.  v3:= temp @kind object;
  #L1b256a.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1b2570.  v3:= temp @kind object;
  #L1b2572.  v7:= constclass @type ^`java.lang.String` @kind object;
  #L1b2576.  if v3 == v7 then goto L1b257c;
  #L1b257a.  goto L1b2530;
  #L1b257c.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L1b2580.  v2:= 3I;
  #L1b2582.  v2:= new `java.lang.Object`[v2];
  #L1b2586.  v2[v5]:= v3 @kind object;
  #L1b258a.  v2[v4]:= v0 @kind object;
  #L1b258e.  v2[v6]:= v9 @kind object;
  #L1b2592.  v9:= "Illegal entry of %s with text annotations on %s in %s" @kind object;
  #L1b2596.  call `<init>`(v1, v9, v2) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b259c.  throw v1;
  #L1b259e.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L1b25a2.  v2:= new `java.lang.Object`[v6];
  #L1b25a6.  v2[v5]:= v0 @kind object;
  #L1b25aa.  v2[v4]:= v9 @kind object;
  #L1b25ae.  v9:= "Elements used with %s in %s" @kind object;
  #L1b25b2.  call `<init>`(v1, v9, v2) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b25b8.  throw v1;
  #L1b25ba.  v1:= v8.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b25be.  call temp:= `isComposite`(v1) @signature `Lorg/simpleframework/xml/core/Model;.isComposite:()Z` @kind interface;
  #L1b25c4.  v1:= temp;
  #L1b25c6.  if v1 != 0 then goto L1b25cc;
  #L1b25ca.  goto L1b25e8;
  #L1b25cc.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L1b25d0.  v2:= new `java.lang.Object`[v6];
  #L1b25d4.  v2[v5]:= v0 @kind object;
  #L1b25d8.  v2[v4]:= v9 @kind object;
  #L1b25dc.  v9:= "Paths used with %s in %s" @kind object;
  #L1b25e0.  call `<init>`(v1, v9, v2) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b25e6.  throw v1;
  #L1b25e8.  return @kind void;
}
procedure `void` `p`(`org.simpleframework.xml.core.StructureBuilder` v12 @kind this, `java.lang.Class` v13 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.p:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1b25fc.  v13:= v12.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b2600.  call temp:= `iterator`(v13) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b2606.  v13:= temp @kind object;
  #L1b2608.  call temp:= `hasNext`(v13) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b260e.  v0:= temp;
  #L1b2610.  if v0 == 0 then goto L1b26c0;
  #L1b2614.  call temp:= `next`(v13) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b261a.  v0:= temp @kind object;
  #L1b261c.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L1b2620.  call temp:= `getPaths`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L1b2626.  v1:= temp @kind object;
  #L1b2628.  call temp:= `getContact`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L1b262e.  v2:= temp @kind object;
  #L1b2630.  v3:= length @variable v1;
  #L1b2632.  v4:= 0I;
  #L1b2634.  v5:= 0I;
  #L1b2636.  if v5 >= v3 then goto L1b2608;
  #L1b263a.  v6:= v1[v5] @kind object;
  #L1b263e.  call temp:= `getAnnotation`(v2) @signature `Lorg/simpleframework/xml/core/Contact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L1b2644.  v7:= temp @kind object;
  #L1b2646.  v8:= v12.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b264a.  call temp:= `get`(v8, v6) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b2650.  v6:= temp @kind object;
  #L1b2652.  v6:= (`org.simpleframework.xml.core.Label`) v6 @kind object;
  #L1b2656.  call temp:= `isInline`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L1b265c.  v8:= temp;
  #L1b265e.  call temp:= `isInline`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L1b2664.  v9:= temp;
  #L1b2666.  v10:= 2I;
  #L1b2668.  v11:= 1I;
  #L1b266a.  if v8 != v9 then goto L1b26a4;
  #L1b266e.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L1b2674.  v8:= temp;
  #L1b2676.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L1b267c.  v6:= temp;
  #L1b267e.  if v8 != v6 then goto L1b2688;
  #L1b2682.  v5:= v5 + 1;
  #L1b2686.  goto L1b2636;
  #L1b2688.  v13:= new `org.simpleframework.xml.core.UnionException`;
  #L1b268c.  v0:= new `java.lang.Object`[v10];
  #L1b2690.  v0[v4]:= v7 @kind object;
  #L1b2694.  v0[v11]:= v2 @kind object;
  #L1b2698.  v1:= "Required must be consistent in %s for %s" @kind object;
  #L1b269c.  call `<init>`(v13, v1, v0) @signature `Lorg/simpleframework/xml/core/UnionException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b26a2.  throw v13;
  #L1b26a4.  v13:= new `org.simpleframework.xml.core.UnionException`;
  #L1b26a8.  v0:= new `java.lang.Object`[v10];
  #L1b26ac.  v0[v4]:= v7 @kind object;
  #L1b26b0.  v0[v11]:= v2 @kind object;
  #L1b26b4.  v1:= "Inline must be consistent in %s for %s" @kind object;
  #L1b26b8.  call `<init>`(v13, v1, v0) @signature `Lorg/simpleframework/xml/core/UnionException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b26be.  throw v13;
  #L1b26c0.  return @kind void;
}
procedure `void` `q`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Contact` v3 @kind object, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.q:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b26d4.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.i` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1b26d8.  call temp:= `getLabel`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1b26de.  v3:= temp @kind object;
  #L1b26e0.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b26e4.  if v0 != 0 then goto L1b26ee;
  #L1b26e8.  v2.`org.simpleframework.xml.core.StructureBuilder.j` @type ^`org.simpleframework.xml.core.Label` := v3 @kind object;
  #L1b26ec.  return @kind void;
  #L1b26ee.  v3:= new `org.simpleframework.xml.core.AttributeException`;
  #L1b26f2.  v0:= 1I;
  #L1b26f4.  v0:= new `java.lang.Object`[v0];
  #L1b26f8.  v1:= 0I;
  #L1b26fa.  v0[v1]:= v4 @kind object;
  #L1b26fe.  v4:= "Multiple version annotations in %s" @kind object;
  #L1b2702.  call `<init>`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b2708.  throw v3;
}
procedure `void` `assemble`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.assemble:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b2044.  v3:= v2.`org.simpleframework.xml.core.StructureBuilder.h` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L1b2048.  call temp:= `getOrder`(v3) @signature `Lorg/simpleframework/xml/core/Scanner;.getOrder:()Lorg/simpleframework/xml/Order;` @kind interface;
  #L1b204e.  v3:= temp @kind object;
  #L1b2050.  if v3 == 0 then goto L1b2062;
  #L1b2054.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.c` @type ^`org.simpleframework.xml.core.ModelAssembler` @kind object;
  #L1b2058.  v1:= v2.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b205c.  call `assemble`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.assemble:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @kind virtual;
  #L1b2062.  return @kind void;
}
procedure `org.simpleframework.xml.core.Structure` `build`(`org.simpleframework.xml.core.StructureBuilder` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.build:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Structure;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b1f8c.  v7:= new `org.simpleframework.xml.core.Structure`;
  #L1b1f90.  v1:= v6.`org.simpleframework.xml.core.StructureBuilder.d` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L1b1f94.  v2:= v6.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L1b1f98.  v3:= v6.`org.simpleframework.xml.core.StructureBuilder.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b1f9c.  v4:= v6.`org.simpleframework.xml.core.StructureBuilder.k` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b1fa0.  v5:= v6.`org.simpleframework.xml.core.StructureBuilder.m` @type ^`boolean` @kind boolean;
  #L1b1fa4.  v0:= v7 @kind object;
  #L1b1fa6.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Structure;.<init>:(Lorg/simpleframework/xml/core/Instantiator;Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Label;Z)V` @kind direct;
  #L1b1fac.  return v7 @kind object;
}
procedure `void` `commit`(`org.simpleframework.xml.core.StructureBuilder` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.commit:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L1b2074.  v1:= v0.`org.simpleframework.xml.core.StructureBuilder.d` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L1b2078.  if v1 != 0 then goto L1b208c;
  #L1b207c.  v1:= v0.`org.simpleframework.xml.core.StructureBuilder.a` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` @kind object;
  #L1b2080.  call temp:= `build`(v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.build:()Lorg/simpleframework/xml/core/Instantiator;` @kind virtual;
  #L1b2086.  v1:= temp @kind object;
  #L1b2088.  v0.`org.simpleframework.xml.core.StructureBuilder.d` @type ^`org.simpleframework.xml.core.Instantiator` := v1 @kind object;
  #L1b208c.  return @kind void;
}
procedure `void` `process`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b20a0.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Attribute` @kind boolean;
  #L1b20a4.  if v0 == 0 then goto L1b20b2;
  #L1b20a8.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.e` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b20ac.  call `f`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1b20b2.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L1b20b6.  if v0 == 0 then goto L1b20c4;
  #L1b20ba.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b20be.  call `j`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.j:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1b20c4.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L1b20c8.  if v0 == 0 then goto L1b20d6;
  #L1b20cc.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b20d0.  call `j`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.j:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1b20d6.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L1b20da.  if v0 == 0 then goto L1b20e8;
  #L1b20de.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b20e2.  call `j`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.j:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1b20e8.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementList` @kind boolean;
  #L1b20ec.  if v0 == 0 then goto L1b20fa;
  #L1b20f0.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b20f4.  call `f`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1b20fa.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementArray` @kind boolean;
  #L1b20fe.  if v0 == 0 then goto L1b210c;
  #L1b2102.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b2106.  call `f`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1b210c.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMap` @kind boolean;
  #L1b2110.  if v0 == 0 then goto L1b211e;
  #L1b2114.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b2118.  call `f`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1b211e.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Element` @kind boolean;
  #L1b2122.  if v0 == 0 then goto L1b2130;
  #L1b2126.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b212a.  call `f`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1b2130.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Version` @kind boolean;
  #L1b2134.  if v0 == 0 then goto L1b213e;
  #L1b2138.  call `q`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.q:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1b213e.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L1b2142.  if v0 == 0 then goto L1b214c;
  #L1b2146.  call `i`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.i:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1b214c.  return @kind void;
}
procedure `void` `validate`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validate:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2324.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.h` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L1b2328.  call temp:= `getOrder`(v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getOrder:()Lorg/simpleframework/xml/Order;` @kind interface;
  #L1b232e.  v0:= temp @kind object;
  #L1b2330.  call `p`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.p:(Ljava/lang/Class;)V` @kind direct;
  #L1b2336.  call `l`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.l:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L1b233c.  call `k`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.k:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L1b2342.  call `m`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.m:(Ljava/lang/Class;)V` @kind direct;
  #L1b2348.  call `n`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.n:(Ljava/lang/Class;)V` @kind direct;
  #L1b234e.  call `o`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.o:(Ljava/lang/Class;)V` @kind direct;
  #L1b2354.  return @kind void;
}
