record `org.simpleframework.xml.core.ModelAssembler` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.ExpressionBuilder` `org.simpleframework.xml.core.ModelAssembler.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.ModelAssembler.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Detail` `org.simpleframework.xml.core.ModelAssembler.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ModelAssembler` v0 @kind this, `org.simpleframework.xml.core.ExpressionBuilder` v1 @kind object, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.<init>:(Lorg/simpleframework/xml/core/ExpressionBuilder;Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1abf64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1abf6a.  call temp:= `getFormat`(v3) @signature `Lorg/simpleframework/xml/core/Support;.getFormat:()Lorg/simpleframework/xml/stream/Format;` @kind virtual;
  #L1abf70.  v3:= temp @kind object;
  #L1abf72.  v0.`org.simpleframework.xml.core.ModelAssembler.b` @type ^`org.simpleframework.xml.stream.Format` := v3 @kind object;
  #L1abf76.  v0.`org.simpleframework.xml.core.ModelAssembler.a` @type ^`org.simpleframework.xml.core.ExpressionBuilder` := v1 @kind object;
  #L1abf7a.  v0.`org.simpleframework.xml.core.ModelAssembler.c` @type ^`org.simpleframework.xml.core.Detail` := v2 @kind object;
  #L1abf7e.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.ModelAssembler` v6 @kind this, `org.simpleframework.xml.core.Model` v7 @kind object, `org.simpleframework.xml.Order` v8 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.a:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1abfb0.  call temp:= `attributes`(v8) @signature `Lorg/simpleframework/xml/Order;.attributes:()[Ljava/lang/String;` @kind interface;
  #L1abfb6.  v8:= temp @kind object;
  #L1abfb8.  v0:= length @variable v8;
  #L1abfba.  v1:= 0I;
  #L1abfbc.  v2:= 0I;
  #L1abfbe.  if v2 >= v0 then goto L1ac044;
  #L1abfc2.  v3:= v8[v2] @kind object;
  #L1abfc6.  v4:= v6.`org.simpleframework.xml.core.ModelAssembler.a` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L1abfca.  call temp:= `build`(v4, v3) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L1abfd0.  v4:= temp @kind object;
  #L1abfd2.  call temp:= `isAttribute`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isAttribute:()Z` @kind interface;
  #L1abfd8.  v5:= temp;
  #L1abfda.  if v5 != 0 then goto L1ac010;
  #L1abfde.  call temp:= `isPath`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L1abfe4.  v5:= temp;
  #L1abfe6.  if v5 != 0 then goto L1abfec;
  #L1abfea.  goto L1ac010;
  #L1abfec.  v7:= new `org.simpleframework.xml.core.PathException`;
  #L1abff0.  v8:= 2I;
  #L1abff2.  v8:= new `java.lang.Object`[v8];
  #L1abff6.  v8[v1]:= v4 @kind object;
  #L1abffa.  v0:= v6.`org.simpleframework.xml.core.ModelAssembler.c` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L1abffe.  v1:= 1I;
  #L1ac000.  v8[v1]:= v0 @kind object;
  #L1ac004.  v0:= "Ordered attribute '%s' references an element in %s" @kind object;
  #L1ac008.  call `<init>`(v7, v0, v8) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1ac00e.  throw v7;
  #L1ac010.  call temp:= `isPath`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L1ac016.  v5:= temp;
  #L1ac018.  if v5 != 0 then goto L1ac038;
  #L1ac01c.  v4:= v6.`org.simpleframework.xml.core.ModelAssembler.b` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L1ac020.  call temp:= `getStyle`(v4) @signature `Lorg/simpleframework/xml/stream/Format;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind virtual;
  #L1ac026.  v4:= temp @kind object;
  #L1ac028.  call temp:= `getAttribute`(v4, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1ac02e.  v3:= temp @kind object;
  #L1ac030.  call `registerAttribute`(v7, v3) @signature `Lorg/simpleframework/xml/core/Model;.registerAttribute:(Ljava/lang/String;)V` @kind interface;
  #L1ac036.  goto L1ac03e;
  #L1ac038.  call `d`(v6, v7, v4) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.d:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L1ac03e.  v2:= v2 + 1;
  #L1ac042.  goto L1abfbe;
  #L1ac044.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.ModelAssembler` v5 @kind this, `org.simpleframework.xml.core.Model` v6 @kind object, `org.simpleframework.xml.Order` v7 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.b:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ac058.  call temp:= `elements`(v7) @signature `Lorg/simpleframework/xml/Order;.elements:()[Ljava/lang/String;` @kind interface;
  #L1ac05e.  v7:= temp @kind object;
  #L1ac060.  v0:= length @variable v7;
  #L1ac062.  v1:= 0I;
  #L1ac064.  v2:= 0I;
  #L1ac066.  if v2 >= v0 then goto L1ac0b6;
  #L1ac06a.  v3:= v7[v2] @kind object;
  #L1ac06e.  v4:= v5.`org.simpleframework.xml.core.ModelAssembler.a` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L1ac072.  call temp:= `build`(v4, v3) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L1ac078.  v3:= temp @kind object;
  #L1ac07a.  call temp:= `isAttribute`(v3) @signature `Lorg/simpleframework/xml/core/Expression;.isAttribute:()Z` @kind interface;
  #L1ac080.  v4:= temp;
  #L1ac082.  if v4 != 0 then goto L1ac092;
  #L1ac086.  call `f`(v5, v6, v3) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.f:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L1ac08c.  v2:= v2 + 1;
  #L1ac090.  goto L1ac066;
  #L1ac092.  v6:= new `org.simpleframework.xml.core.PathException`;
  #L1ac096.  v7:= 2I;
  #L1ac098.  v7:= new `java.lang.Object`[v7];
  #L1ac09c.  v7[v1]:= v3 @kind object;
  #L1ac0a0.  v0:= v5.`org.simpleframework.xml.core.ModelAssembler.c` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L1ac0a4.  v1:= 1I;
  #L1ac0a6.  v7[v1]:= v0 @kind object;
  #L1ac0aa.  v0:= "Ordered element '%s' references an attribute in %s" @kind object;
  #L1ac0ae.  call `<init>`(v6, v0, v7) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1ac0b4.  throw v6;
  #L1ac0b6.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.ModelAssembler` v0 @kind this, `org.simpleframework.xml.core.Model` v1 @kind object, `org.simpleframework.xml.core.Expression` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.c:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;

  #L1ac0c8.  call temp:= `getFirst`(v2) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L1ac0ce.  v2:= temp @kind object;
  #L1ac0d0.  if v2 == 0 then goto L1ac0da;
  #L1ac0d4.  call `registerAttribute`(v1, v2) @signature `Lorg/simpleframework/xml/core/Model;.registerAttribute:(Ljava/lang/String;)V` @kind interface;
  #L1ac0da.  return @kind void;
}
procedure `void` `d`(`org.simpleframework.xml.core.ModelAssembler` v4 @kind this, `org.simpleframework.xml.core.Model` v5 @kind object, `org.simpleframework.xml.core.Expression` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.d:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ac0ec.  call temp:= `getPrefix`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L1ac0f2.  v0:= temp @kind object;
  #L1ac0f4.  call temp:= `getFirst`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L1ac0fa.  v1:= temp @kind object;
  #L1ac0fc.  call temp:= `getIndex`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L1ac102.  v2:= temp;
  #L1ac104.  call temp:= `isPath`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L1ac10a.  v3:= temp;
  #L1ac10c.  if v3 == 0 then goto L1ac152;
  #L1ac110.  call temp:= `register`(v5, v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L1ac116.  v5:= temp @kind object;
  #L1ac118.  v0:= 1I;
  #L1ac11a.  call temp:= `getPath`(v6, v0) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L1ac120.  v6:= temp @kind object;
  #L1ac122.  if v5 == 0 then goto L1ac12e;
  #L1ac126.  call `d`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.d:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L1ac12c.  goto L1ac158;
  #L1ac12e.  v5:= new `org.simpleframework.xml.core.PathException`;
  #L1ac132.  v6:= 2I;
  #L1ac134.  v6:= new `java.lang.Object`[v6];
  #L1ac138.  v2:= 0I;
  #L1ac13a.  v6[v2]:= v1 @kind object;
  #L1ac13e.  v1:= v4.`org.simpleframework.xml.core.ModelAssembler.c` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L1ac142.  v6[v0]:= v1 @kind object;
  #L1ac146.  v0:= "Element '%s' does not exist in %s" @kind object;
  #L1ac14a.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1ac150.  throw v5;
  #L1ac152.  call `c`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.c:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L1ac158.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.core.ModelAssembler` v5 @kind this, `org.simpleframework.xml.core.Model` v6 @kind object, `org.simpleframework.xml.core.Expression` v7 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.e:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ac16c.  call temp:= `getPrefix`(v7) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L1ac172.  v0:= temp @kind object;
  #L1ac174.  call temp:= `getFirst`(v7) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L1ac17a.  v1:= temp @kind object;
  #L1ac17c.  call temp:= `getIndex`(v7) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L1ac182.  v2:= temp;
  #L1ac184.  v3:= 1I;
  #L1ac186.  if v2 <= v3 then goto L1ac1c6;
  #L1ac18a.  v4:= v2 + -1;
  #L1ac18e.  call temp:= `lookup`(v6, v1, v4) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L1ac194.  v4:= temp @kind object;
  #L1ac196.  if v4 == 0 then goto L1ac19c;
  #L1ac19a.  goto L1ac1c6;
  #L1ac19c.  v6:= new `org.simpleframework.xml.core.PathException`;
  #L1ac1a0.  v0:= 3I;
  #L1ac1a2.  v0:= new `java.lang.Object`[v0];
  #L1ac1a6.  v2:= 0I;
  #L1ac1a8.  v0[v2]:= v1 @kind object;
  #L1ac1ac.  v0[v3]:= v7 @kind object;
  #L1ac1b0.  v7:= v5.`org.simpleframework.xml.core.ModelAssembler.c` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L1ac1b4.  v1:= 2I;
  #L1ac1b6.  v0[v1]:= v7 @kind object;
  #L1ac1ba.  v7:= "Ordered element '%s' in path '%s' is out of sequence for %s" @kind object;
  #L1ac1be.  call `<init>`(v6, v7, v0) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1ac1c4.  throw v6;
  #L1ac1c6.  call temp:= `register`(v6, v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L1ac1cc.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.core.ModelAssembler` v3 @kind this, `org.simpleframework.xml.core.Model` v4 @kind object, `org.simpleframework.xml.core.Expression` v5 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.f:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1ac1e0.  call temp:= `getPrefix`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L1ac1e6.  v0:= temp @kind object;
  #L1ac1e8.  call temp:= `getFirst`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L1ac1ee.  v1:= temp @kind object;
  #L1ac1f0.  call temp:= `getIndex`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L1ac1f6.  v2:= temp;
  #L1ac1f8.  if v1 == 0 then goto L1ac220;
  #L1ac1fc.  call temp:= `register`(v4, v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L1ac202.  v0:= temp @kind object;
  #L1ac204.  v1:= 1I;
  #L1ac206.  call temp:= `getPath`(v5, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L1ac20c.  v1:= temp @kind object;
  #L1ac20e.  call temp:= `isPath`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L1ac214.  v2:= temp;
  #L1ac216.  if v2 == 0 then goto L1ac220;
  #L1ac21a.  call `f`(v3, v0, v1) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.f:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L1ac220.  call `e`(v3, v4, v5) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.e:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L1ac226.  return @kind void;
}
procedure `void` `assemble`(`org.simpleframework.xml.core.ModelAssembler` v0 @kind this, `org.simpleframework.xml.core.Model` v1 @kind object, `org.simpleframework.xml.Order` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.assemble:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @AccessFlag PUBLIC {
    temp;

  #L1abf90.  call `b`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.b:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L1abf96.  call `a`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.a:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L1abf9c.  return @kind void;
}
