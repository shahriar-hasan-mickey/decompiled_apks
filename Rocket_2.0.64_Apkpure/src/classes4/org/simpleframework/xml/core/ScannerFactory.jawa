record `org.simpleframework.xml.core.ScannerFactory` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.ScannerFactory.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.ScannerFactory.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ScannerFactory` v1 @kind this, `org.simpleframework.xml.core.Support` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ScannerFactory;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b0720.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b0726.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L1b072a.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L1b0730.  v1.`org.simpleframework.xml.core.ScannerFactory.a` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L1b0734.  v1.`org.simpleframework.xml.core.ScannerFactory.b` @type ^`org.simpleframework.xml.core.Support` := v2 @kind object;
  #L1b0738.  return @kind void;
}
procedure `org.simpleframework.xml.core.Scanner` `getInstance`(`org.simpleframework.xml.core.ScannerFactory` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ScannerFactory;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b068c.  v0:= v3.`org.simpleframework.xml.core.ScannerFactory.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1b0690.  call temp:= `fetch`(v0, v4) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1b0696.  v0:= temp @kind object;
  #L1b0698.  v0:= (`org.simpleframework.xml.core.Scanner`) v0 @kind object;
  #L1b069c.  if v0 != 0 then goto L1b070e;
  #L1b06a0.  v0:= v3.`org.simpleframework.xml.core.ScannerFactory.b` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1b06a4.  call temp:= `getDetail`(v0, v4) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L1b06aa.  v0:= temp @kind object;
  #L1b06ac.  v1:= v3.`org.simpleframework.xml.core.ScannerFactory.b` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1b06b0.  call temp:= `isPrimitive`(v1, v4) @signature `Lorg/simpleframework/xml/core/Support;.isPrimitive:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b06b6.  v1:= temp;
  #L1b06b8.  if v1 == 0 then goto L1b06ca;
  #L1b06bc.  v1:= new `org.simpleframework.xml.core.PrimitiveScanner`;
  #L1b06c0.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/PrimitiveScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1b06c6.  v0:= v1 @kind object;
  #L1b06c8.  goto L1b0704;
  #L1b06ca.  v1:= new `org.simpleframework.xml.core.ObjectScanner`;
  #L1b06ce.  v2:= v3.`org.simpleframework.xml.core.ScannerFactory.b` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1b06d2.  call `<init>`(v1, v0, v2) @signature `Lorg/simpleframework/xml/core/ObjectScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1b06d8.  call temp:= `isPrimitive`(v1) @signature `Lorg/simpleframework/xml/core/Scanner;.isPrimitive:()Z` @kind interface;
  #L1b06de.  v2:= temp;
  #L1b06e0.  if v2 == 0 then goto L1b06c6;
  #L1b06e4.  v2:= v3.`org.simpleframework.xml.core.ScannerFactory.b` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1b06e8.  call temp:= `isContainer`(v2, v4) @signature `Lorg/simpleframework/xml/core/Support;.isContainer:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b06ee.  v2:= temp;
  #L1b06f0.  if v2 != 0 then goto L1b06c6;
  #L1b06f4.  v1:= new `org.simpleframework.xml.core.DefaultScanner`;
  #L1b06f8.  v2:= v3.`org.simpleframework.xml.core.ScannerFactory.b` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1b06fc.  call `<init>`(v1, v0, v2) @signature `Lorg/simpleframework/xml/core/DefaultScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1b0702.  goto L1b06c6;
  #L1b0704.  v1:= v3.`org.simpleframework.xml.core.ScannerFactory.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L1b0708.  call `cache`(v1, v4, v0) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L1b070e.  return v0 @kind object;
}
