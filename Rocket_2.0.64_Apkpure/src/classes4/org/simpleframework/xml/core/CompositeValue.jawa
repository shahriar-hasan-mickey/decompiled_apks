record `org.simpleframework.xml.core.CompositeValue` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.CompositeValue.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Traverser` `org.simpleframework.xml.core.CompositeValue.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Style` `org.simpleframework.xml.core.CompositeValue.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Entry` `org.simpleframework.xml.core.CompositeValue.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeValue.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeValue` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.core.Entry` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeValue;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a382c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a3832.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L1a3836.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L1a383c.  v1.`org.simpleframework.xml.core.CompositeValue.b` @type ^`org.simpleframework.xml.core.Traverser` := v0 @kind object;
  #L1a3840.  call temp:= `getStyle`(v2) @signature `Lorg/simpleframework/xml/core/Context;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind interface;
  #L1a3846.  v0:= temp @kind object;
  #L1a3848.  v1.`org.simpleframework.xml.core.CompositeValue.c` @type ^`org.simpleframework.xml.stream.Style` := v0 @kind object;
  #L1a384c.  v1.`org.simpleframework.xml.core.CompositeValue.a` @type ^`org.simpleframework.xml.core.Context` := v2 @kind object;
  #L1a3850.  v1.`org.simpleframework.xml.core.CompositeValue.d` @type ^`org.simpleframework.xml.core.Entry` := v3 @kind object;
  #L1a3854.  v1.`org.simpleframework.xml.core.CompositeValue.e` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L1a3858.  return @kind void;
}
procedure `boolean` `a`(`org.simpleframework.xml.core.CompositeValue` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeValue;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a3740.  v0:= v2.`org.simpleframework.xml.core.CompositeValue.c` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L1a3744.  call temp:= `getElement`(v0, v4) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a374a.  v4:= temp @kind object;
  #L1a374c.  call temp:= `getNext`(v3, v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a3752.  v3:= temp @kind object;
  #L1a3754.  v4:= v2.`org.simpleframework.xml.core.CompositeValue.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a3758.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a375e.  v4:= temp @kind object;
  #L1a3760.  v0:= 1I;
  #L1a3762.  if v3 != 0 then goto L1a3768;
  #L1a3766.  return v0;
  #L1a3768.  call temp:= `isEmpty`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.isEmpty:()Z` @kind interface;
  #L1a376e.  v1:= temp;
  #L1a3770.  if v1 == 0 then goto L1a3776;
  #L1a3774.  return v0;
  #L1a3776.  v0:= v2.`org.simpleframework.xml.core.CompositeValue.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a377a.  call temp:= `validate`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L1a3780.  v3:= temp;
  #L1a3782.  return v3;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeValue` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeValue;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a3794.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a379a.  v4:= temp @kind object;
  #L1a379c.  v0:= v3.`org.simpleframework.xml.core.CompositeValue.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a37a0.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a37a6.  v0:= temp @kind object;
  #L1a37a8.  v1:= 0I;
  #L1a37aa.  if v4 != 0 then goto L1a37b0;
  #L1a37ae.  return v1 @kind object;
  #L1a37b0.  call temp:= `isEmpty`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.isEmpty:()Z` @kind interface;
  #L1a37b6.  v2:= temp;
  #L1a37b8.  if v2 == 0 then goto L1a37be;
  #L1a37bc.  return v1 @kind object;
  #L1a37be.  v1:= v3.`org.simpleframework.xml.core.CompositeValue.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a37c2.  call temp:= `read`(v1, v4, v0) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1a37c8.  v4:= temp @kind object;
  #L1a37ca.  return v4 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeValue` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeValue;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a37dc.  v0:= v2.`org.simpleframework.xml.core.CompositeValue.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a37e0.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a37e6.  v0:= temp @kind object;
  #L1a37e8.  if v4 != 0 then goto L1a37f6;
  #L1a37ec.  call temp:= `read`(v2, v3) @signature `Lorg/simpleframework/xml/core/CompositeValue;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L1a37f2.  v3:= temp @kind object;
  #L1a37f4.  return v3 @kind object;
  #L1a37f6.  v3:= new `org.simpleframework.xml.core.PersistenceException`;
  #L1a37fa.  v4:= 2I;
  #L1a37fc.  v4:= new `java.lang.Object`[v4];
  #L1a3800.  v1:= 0I;
  #L1a3802.  v4[v1]:= v0 @kind object;
  #L1a3806.  v0:= v2.`org.simpleframework.xml.core.CompositeValue.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a380a.  v1:= 1I;
  #L1a380c.  v4[v1]:= v0 @kind object;
  #L1a3810.  v0:= "Can not read value of %s for %s" @kind object;
  #L1a3814.  call `<init>`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a381a.  throw v3;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeValue` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeValue;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a36fc.  v0:= v2.`org.simpleframework.xml.core.CompositeValue.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a3700.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a3706.  v0:= temp @kind object;
  #L1a3708.  v1:= v2.`org.simpleframework.xml.core.CompositeValue.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a370c.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @kind virtual;
  #L1a3712.  v1:= temp @kind object;
  #L1a3714.  if v1 != 0 then goto L1a3724;
  #L1a3718.  v1:= v2.`org.simpleframework.xml.core.CompositeValue.a` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a371c.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L1a3722.  v1:= temp @kind object;
  #L1a3724.  call temp:= `a`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/CompositeValue;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @kind direct;
  #L1a372a.  v3:= temp;
  #L1a372c.  return v3;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeValue` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeValue;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a386c.  v0:= v3.`org.simpleframework.xml.core.CompositeValue.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a3870.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a3876.  v0:= temp @kind object;
  #L1a3878.  v1:= v3.`org.simpleframework.xml.core.CompositeValue.d` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L1a387c.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @kind virtual;
  #L1a3882.  v1:= temp @kind object;
  #L1a3884.  if v1 != 0 then goto L1a3894;
  #L1a3888.  v1:= v3.`org.simpleframework.xml.core.CompositeValue.a` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a388c.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L1a3892.  v1:= temp @kind object;
  #L1a3894.  v2:= v3.`org.simpleframework.xml.core.CompositeValue.c` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L1a3898.  call temp:= `getElement`(v2, v1) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a389e.  v1:= temp @kind object;
  #L1a38a0.  v2:= v3.`org.simpleframework.xml.core.CompositeValue.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L1a38a4.  call `write`(v2, v4, v5, v0, v1) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V` @kind virtual;
  #L1a38aa.  return @kind void;
}
