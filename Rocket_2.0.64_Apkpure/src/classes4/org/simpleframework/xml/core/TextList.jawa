record `org.simpleframework.xml.core.TextList` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Repeater` @kind interface {
  `org.simpleframework.xml.core.CollectionFactory` `org.simpleframework.xml.core.TextList.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Primitive` `org.simpleframework.xml.core.TextList.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.TextList.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.TextList` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b3a40.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b3a46.  v4:= new `org.simpleframework.xml.core.ClassType`;
  #L1b3a4a.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L1b3a4e.  call `<init>`(v4, v0) @signature `Lorg/simpleframework/xml/core/ClassType;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1b3a54.  v1.`org.simpleframework.xml.core.TextList.c` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L1b3a58.  v0:= new `org.simpleframework.xml.core.CollectionFactory`;
  #L1b3a5c.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L1b3a62.  v1.`org.simpleframework.xml.core.TextList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` := v0 @kind object;
  #L1b3a66.  v3:= new `org.simpleframework.xml.core.Primitive`;
  #L1b3a6a.  call `<init>`(v3, v2, v4) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L1b3a70.  v1.`org.simpleframework.xml.core.TextList.b` @type ^`org.simpleframework.xml.core.Primitive` := v3 @kind object;
  #L1b3a74.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.TextList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b39cc.  v0:= v3.`org.simpleframework.xml.core.TextList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L1b39d0.  call temp:= `getInstance`(v0, v4) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L1b39d6.  v0:= temp @kind object;
  #L1b39d8.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L1b39de.  v1:= temp @kind object;
  #L1b39e0.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L1b39e6.  v2:= temp;
  #L1b39e8.  if v2 == 0 then goto L1b39f6;
  #L1b39ec.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L1b39f2.  v4:= temp @kind object;
  #L1b39f4.  return v4 @kind object;
  #L1b39f6.  call temp:= `read`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/TextList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b39fc.  v4:= temp @kind object;
  #L1b39fe.  return v4 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.TextList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b3a10.  v0:= v4 @kind object;
  #L1b3a12.  v0:= (`java.util.Collection`) v0 @kind object;
  #L1b3a16.  v1:= v2.`org.simpleframework.xml.core.TextList.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L1b3a1a.  call temp:= `read`(v1, v3) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L1b3a20.  v3:= temp @kind object;
  #L1b3a22.  if v3 == 0 then goto L1b3a2c;
  #L1b3a26.  call temp:= `add`(v0, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b3a2c.  return v4 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.TextList` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;

  #L1b39b8.  v1:= 1I;
  #L1b39ba.  return v1;
}
procedure `void` `write`(`org.simpleframework.xml.core.TextList` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b3a88.  v4:= (`java.util.Collection`) v4 @kind object;
  #L1b3a8c.  call temp:= `getParent`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L1b3a92.  v3:= temp @kind object;
  #L1b3a94.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b3a9a.  v4:= temp @kind object;
  #L1b3a9c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b3aa2.  v0:= temp;
  #L1b3aa4.  if v0 == 0 then goto L1b3abc;
  #L1b3aa8.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b3aae.  v0:= temp @kind object;
  #L1b3ab0.  v1:= v2.`org.simpleframework.xml.core.TextList.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L1b3ab4.  call `write`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L1b3aba.  goto L1b3a9c;
  #L1b3abc.  return @kind void;
}
