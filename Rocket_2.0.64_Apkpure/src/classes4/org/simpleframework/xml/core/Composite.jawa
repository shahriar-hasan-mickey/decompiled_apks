record `org.simpleframework.xml.core.Composite` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.ObjectFactory` `org.simpleframework.xml.core.Composite.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Primitive` `org.simpleframework.xml.core.Composite.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Criteria` `org.simpleframework.xml.core.Composite.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Revision` `org.simpleframework.xml.core.Composite.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.Composite.e` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.Composite.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a3c98.  v0:= 0I;
  #L1a3c9a.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @kind direct;
  #L1a3ca0.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a3cb4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a3cba.  v0:= new `org.simpleframework.xml.core.ObjectFactory`;
  #L1a3cbe.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/ObjectFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @kind direct;
  #L1a3cc4.  v1.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` := v0 @kind object;
  #L1a3cc8.  v4:= new `org.simpleframework.xml.core.Primitive`;
  #L1a3ccc.  call `<init>`(v4, v2, v3) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L1a3cd2.  v1.`org.simpleframework.xml.core.Composite.b` @type ^`org.simpleframework.xml.core.Primitive` := v4 @kind object;
  #L1a3cd6.  v4:= new `org.simpleframework.xml.core.Collector`;
  #L1a3cda.  call `<init>`(v4) @signature `Lorg/simpleframework/xml/core/Collector;.<init>:()V` @kind direct;
  #L1a3ce0.  v1.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` := v4 @kind object;
  #L1a3ce4.  v4:= new `org.simpleframework.xml.core.Revision`;
  #L1a3ce8.  call `<init>`(v4) @signature `Lorg/simpleframework/xml/core/Revision;.<init>:()V` @kind direct;
  #L1a3cee.  v1.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` := v4 @kind object;
  #L1a3cf2.  v1.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` := v2 @kind object;
  #L1a3cf6.  v1.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` := v3 @kind object;
  #L1a3cfa.  return @kind void;
}
procedure `void` `A`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `org.simpleframework.xml.core.Schema` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.A:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;

  #L1a44e0.  call temp:= `getText`(v2) @signature `Lorg/simpleframework/xml/core/Schema;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L1a44e6.  v2:= temp @kind object;
  #L1a44e8.  if v2 == 0 then goto L1a44f2;
  #L1a44ec.  call `r`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.r:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a44f2.  return @kind void;
}
procedure `void` `B`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object, `org.simpleframework.xml.core.Label` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.B:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a4504.  call temp:= `getPaths`(v7) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L1a450a.  v0:= temp @kind object;
  #L1a450c.  v1:= length @variable v0;
  #L1a450e.  v2:= 0I;
  #L1a4510.  if v2 >= v1 then goto L1a4524;
  #L1a4514.  v3:= v0[v2] @kind object;
  #L1a4518.  call temp:= `getLabel`(v6, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1a451e.  v2:= v2 + 1;
  #L1a4522.  goto L1a4510;
  #L1a4524.  call temp:= `isInline`(v7) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L1a452a.  v6:= temp;
  #L1a452c.  if v6 == 0 then goto L1a453c;
  #L1a4530.  v6:= v4.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a4534.  v0:= 0I;
  #L1a4536.  call `set`(v6, v7, v0) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L1a453c.  call `r`(v4, v5, v7) @signature `Lorg/simpleframework/xml/core/Composite;.r:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a4542.  return @kind void;
}
procedure `void` `C`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Schema` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.C:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a45c4.  call temp:= `getSection`(v4) @signature `Lorg/simpleframework/xml/core/Schema;.getSection:()Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L1a45ca.  v0:= temp @kind object;
  #L1a45cc.  call `O`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Composite;.O:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L1a45d2.  call `K`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.K:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a45d8.  return @kind void;
}
procedure `void` `D`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.D:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a45ec.  if v4 == 0 then goto L1a461a;
  #L1a45f0.  call temp:= `getDecorator`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @kind interface;
  #L1a45f6.  v0:= temp @kind object;
  #L1a45f8.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L1a45fe.  v5:= temp @kind object;
  #L1a4600.  v1:= v2.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L1a4604.  call temp:= `getText`(v1, v4) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getText:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L1a460a.  v4:= temp @kind object;
  #L1a460c.  call temp:= `setAttribute`(v3, v5, v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L1a4612.  v3:= temp @kind object;
  #L1a4614.  call `decorate`(v0, v3) @signature `Lorg/simpleframework/xml/core/Decorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind interface;
  #L1a461a.  return @kind void;
}
procedure `void` `E`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.OutputNode` v5 @kind object, `java.lang.Object` v6 @kind object, `org.simpleframework.xml.core.Section` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.E:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a462c.  call temp:= `getAttributes`(v7) @signature `Lorg/simpleframework/xml/core/Section;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L1a4632.  v7:= temp @kind object;
  #L1a4634.  call temp:= `iterator`(v7) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1a463a.  v7:= temp @kind object;
  #L1a463c.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a4642.  v0:= temp;
  #L1a4644.  if v0 == 0 then goto L1a46c0;
  #L1a4648.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a464e.  v0:= temp @kind object;
  #L1a4650.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L1a4654.  call temp:= `getContact`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L1a465a.  v1:= temp @kind object;
  #L1a465c.  call temp:= `get`(v1, v6) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a4662.  v1:= temp @kind object;
  #L1a4664.  v2:= v4.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a4668.  v3:= v4.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a466c.  call temp:= `getType`(v2, v3, v6) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L1a4672.  v2:= temp @kind object;
  #L1a4674.  if v1 != 0 then goto L1a4684;
  #L1a4678.  v1:= v4.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a467c.  call temp:= `getEmpty`(v0, v1) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L1a4682.  v1:= temp @kind object;
  #L1a4684.  if v1 != 0 then goto L1a46b8;
  #L1a4688.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L1a468e.  v3:= temp;
  #L1a4690.  if v3 != 0 then goto L1a4696;
  #L1a4694.  goto L1a46b8;
  #L1a4696.  v5:= new `org.simpleframework.xml.core.AttributeException`;
  #L1a469a.  v6:= 2I;
  #L1a469c.  v6:= new `java.lang.Object`[v6];
  #L1a46a0.  v7:= 0I;
  #L1a46a2.  v6[v7]:= v0 @kind object;
  #L1a46a6.  v7:= 1I;
  #L1a46a8.  v6[v7]:= v2 @kind object;
  #L1a46ac.  v7:= "Value for %s is null in %s" @kind object;
  #L1a46b0.  call `<init>`(v5, v7, v6) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a46b6.  throw v5;
  #L1a46b8.  call `D`(v4, v5, v1, v0) @signature `Lorg/simpleframework/xml/core/Composite;.D:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a46be.  goto L1a463c;
  #L1a46c0.  return @kind void;
}
procedure `void` `F`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.OutputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Converter` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.F:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Converter;)V` @AccessFlag PRIVATE {
    temp;

  #L1a46d4.  call `write`(v3, v1, v2) @signature `Lorg/simpleframework/xml/core/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L1a46da.  return @kind void;
}
procedure `void` `G`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.G:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a46ec.  if v5 == 0 then goto L1a4762;
  #L1a46f0.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a46f6.  v0:= temp @kind object;
  #L1a46f8.  call temp:= `getLabel`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getLabel:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L1a46fe.  v1:= temp @kind object;
  #L1a4700.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L1a4706.  v2:= temp @kind object;
  #L1a4708.  call temp:= `getType`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getType:(Ljava/lang/Class;)Lorg/simpleframework/xml/strategy/Type;` @kind interface;
  #L1a470e.  v6:= temp @kind object;
  #L1a4710.  call temp:= `getChild`(v4, v2) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L1a4716.  v4:= temp @kind object;
  #L1a4718.  call temp:= `isInline`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L1a471e.  v0:= temp;
  #L1a4720.  if v0 != 0 then goto L1a472a;
  #L1a4724.  call `I`(v3, v4, v6, v1) @signature `Lorg/simpleframework/xml/core/Composite;.I:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a472a.  call temp:= `isInline`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L1a4730.  v0:= temp;
  #L1a4732.  if v0 != 0 then goto L1a4742;
  #L1a4736.  call temp:= `a`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.a:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/strategy/Type;)Z` @kind direct;
  #L1a473c.  v6:= temp;
  #L1a473e.  if v6 != 0 then goto L1a4762;
  #L1a4742.  v6:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a4746.  call temp:= `getConverter`(v1, v6) @signature `Lorg/simpleframework/xml/core/Label;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind interface;
  #L1a474c.  v6:= temp @kind object;
  #L1a474e.  call temp:= `isData`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isData:()Z` @kind interface;
  #L1a4754.  v0:= temp;
  #L1a4756.  call `setData`(v4, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setData:(Z)V` @kind interface;
  #L1a475c.  call `F`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.F:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Converter;)V` @kind direct;
  #L1a4762.  return @kind void;
}
procedure `void` `H`(`org.simpleframework.xml.core.Composite` v5 @kind this, `org.simpleframework.xml.stream.OutputNode` v6 @kind object, `java.lang.Object` v7 @kind object, `org.simpleframework.xml.core.Section` v8 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.H:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a4774.  call temp:= `iterator`(v8) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a477a.  v0:= temp @kind object;
  #L1a477c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a4782.  v1:= temp;
  #L1a4784.  if v1 == 0 then goto L1a480e;
  #L1a4788.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a478e.  v1:= temp @kind object;
  #L1a4790.  v1:= (`java.lang.String`) v1 @kind object;
  #L1a4794.  call temp:= `getSection`(v8, v1) @signature `Lorg/simpleframework/xml/core/Section;.getSection:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L1a479a.  v2:= temp @kind object;
  #L1a479c.  if v2 == 0 then goto L1a47b0;
  #L1a47a0.  call temp:= `getChild`(v6, v1) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L1a47a6.  v1:= temp @kind object;
  #L1a47a8.  call `K`(v5, v1, v7, v2) @signature `Lorg/simpleframework/xml/core/Composite;.K:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a47ae.  goto L1a477c;
  #L1a47b0.  call temp:= `getPath`(v8, v1) @signature `Lorg/simpleframework/xml/core/Section;.getPath:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a47b6.  v2:= temp @kind object;
  #L1a47b8.  call temp:= `getElement`(v8, v2) @signature `Lorg/simpleframework/xml/core/Section;.getElement:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L1a47be.  v2:= temp @kind object;
  #L1a47c0.  v3:= v5.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a47c4.  v4:= v5.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a47c8.  call temp:= `getType`(v3, v4, v7) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L1a47ce.  v3:= temp @kind object;
  #L1a47d0.  v4:= v5.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a47d4.  call temp:= `get`(v4, v2) @signature `Lorg/simpleframework/xml/core/Criteria;.get:(Lorg/simpleframework/xml/core/Label;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L1a47da.  v4:= temp @kind object;
  #L1a47dc.  if v4 != 0 then goto L1a477c;
  #L1a47e0.  if v2 == 0 then goto L1a47ec;
  #L1a47e4.  call `N`(v5, v6, v7, v8, v2) @signature `Lorg/simpleframework/xml/core/Composite;.N:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a47ea.  goto L1a477c;
  #L1a47ec.  v6:= new `org.simpleframework.xml.core.ElementException`;
  #L1a47f0.  v7:= 2I;
  #L1a47f2.  v7:= new `java.lang.Object`[v7];
  #L1a47f6.  v8:= 0I;
  #L1a47f8.  v7[v8]:= v1 @kind object;
  #L1a47fc.  v8:= 1I;
  #L1a47fe.  v7[v8]:= v3 @kind object;
  #L1a4802.  v8:= "Element '%s' not defined in %s" @kind object;
  #L1a4806.  call `<init>`(v6, v8, v7) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a480c.  throw v6;
  #L1a480e.  return @kind void;
}
procedure `void` `I`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.I:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a4820.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a4826.  v3:= temp @kind object;
  #L1a4828.  v0:= v1.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a482c.  call temp:= `getDecorator`(v0, v3) @signature `Lorg/simpleframework/xml/core/Context;.getDecorator:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Decorator;` @kind interface;
  #L1a4832.  v3:= temp @kind object;
  #L1a4834.  call temp:= `getDecorator`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @kind interface;
  #L1a483a.  v4:= temp @kind object;
  #L1a483c.  call `decorate`(v4, v2, v3) @signature `Lorg/simpleframework/xml/core/Decorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Decorator;)V` @kind interface;
  #L1a4842.  return @kind void;
}
procedure `java.lang.Object` `J`(`org.simpleframework.xml.core.Composite` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.J:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a3c14.  if v3 == 0 then goto L1a3c34;
  #L1a3c18.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a3c1e.  v0:= temp @kind object;
  #L1a3c20.  v1:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a3c24.  call temp:= `getCaller`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getCaller:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L1a3c2a.  v0:= temp @kind object;
  #L1a3c2c.  call temp:= `replace`(v0, v3) @signature `Lorg/simpleframework/xml/core/Caller;.replace:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a3c32.  v3:= temp @kind object;
  #L1a3c34.  return v3 @kind object;
}
procedure `void` `K`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.K:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a4854.  call temp:= `getNamespaces`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L1a485a.  v0:= temp @kind object;
  #L1a485c.  call temp:= `getPrefix`(v5) @signature `Lorg/simpleframework/xml/core/Section;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L1a4862.  v1:= temp @kind object;
  #L1a4864.  if v1 == 0 then goto L1a48a2;
  #L1a4868.  call temp:= `getReference`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.getReference:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a486e.  v0:= temp @kind object;
  #L1a4870.  if v0 == 0 then goto L1a487c;
  #L1a4874.  call `setReference`(v3, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setReference:(Ljava/lang/String;)V` @kind interface;
  #L1a487a.  goto L1a48a2;
  #L1a487c.  v3:= new `org.simpleframework.xml.core.ElementException`;
  #L1a4880.  v4:= 2I;
  #L1a4882.  v4:= new `java.lang.Object`[v4];
  #L1a4886.  v5:= 0I;
  #L1a4888.  v4[v5]:= v1 @kind object;
  #L1a488c.  v5:= v2.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a4890.  v0:= 1I;
  #L1a4892.  v4[v0]:= v5 @kind object;
  #L1a4896.  v5:= "Namespace prefix '%s' in %s is not in scope" @kind object;
  #L1a489a.  call `<init>`(v3, v5, v4) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a48a0.  throw v3;
  #L1a48a2.  call `E`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.E:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a48a8.  call `H`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.H:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a48ae.  call `M`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.M:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a48b4.  return @kind void;
}
procedure `void` `L`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.L:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a48c8.  if v3 == 0 then goto L1a48f8;
  #L1a48cc.  call temp:= `isTextList`(v4) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L1a48d2.  v0:= temp;
  #L1a48d4.  if v0 != 0 then goto L1a48f8;
  #L1a48d8.  v0:= v1.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L1a48dc.  call temp:= `getText`(v0, v3) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getText:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L1a48e2.  v3:= temp @kind object;
  #L1a48e4.  call temp:= `isData`(v4) @signature `Lorg/simpleframework/xml/core/Label;.isData:()Z` @kind interface;
  #L1a48ea.  v4:= temp;
  #L1a48ec.  call `setData`(v2, v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setData:(Z)V` @kind interface;
  #L1a48f2.  call `setValue`(v2, v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setValue:(Ljava/lang/String;)V` @kind interface;
  #L1a48f8.  return @kind void;
}
procedure `void` `M`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.M:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a490c.  call temp:= `getText`(v6) @signature `Lorg/simpleframework/xml/core/Section;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L1a4912.  v6:= temp @kind object;
  #L1a4914.  if v6 == 0 then goto L1a4982;
  #L1a4918.  call temp:= `getContact`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L1a491e.  v0:= temp @kind object;
  #L1a4920.  call temp:= `get`(v0, v5) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a4926.  v0:= temp @kind object;
  #L1a4928.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a492c.  v2:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a4930.  call temp:= `getType`(v1, v2, v5) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L1a4936.  v5:= temp @kind object;
  #L1a4938.  if v0 != 0 then goto L1a4948;
  #L1a493c.  v0:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a4940.  call temp:= `getEmpty`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L1a4946.  v0:= temp @kind object;
  #L1a4948.  if v0 != 0 then goto L1a497c;
  #L1a494c.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L1a4952.  v1:= temp;
  #L1a4954.  if v1 != 0 then goto L1a495a;
  #L1a4958.  goto L1a497c;
  #L1a495a.  v4:= new `org.simpleframework.xml.core.TextException`;
  #L1a495e.  v0:= 2I;
  #L1a4960.  v0:= new `java.lang.Object`[v0];
  #L1a4964.  v1:= 0I;
  #L1a4966.  v0[v1]:= v6 @kind object;
  #L1a496a.  v6:= 1I;
  #L1a496c.  v0[v6]:= v5 @kind object;
  #L1a4970.  v5:= "Value for %s is null in %s" @kind object;
  #L1a4974.  call `<init>`(v4, v5, v0) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a497a.  throw v4;
  #L1a497c.  call `L`(v3, v4, v0, v6) @signature `Lorg/simpleframework/xml/core/Composite;.L:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a4982.  return @kind void;
}
procedure `void` `N`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.N:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a4994.  call temp:= `getContact`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L1a499a.  v5:= temp @kind object;
  #L1a499c.  call temp:= `get`(v5, v4) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a49a2.  v5:= temp @kind object;
  #L1a49a4.  v0:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a49a8.  v1:= v2.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a49ac.  call temp:= `getType`(v0, v1, v4) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L1a49b2.  v4:= temp @kind object;
  #L1a49b4.  if v5 != 0 then goto L1a49e8;
  #L1a49b8.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L1a49be.  v0:= temp;
  #L1a49c0.  if v0 != 0 then goto L1a49c6;
  #L1a49c4.  goto L1a49e8;
  #L1a49c6.  v3:= new `org.simpleframework.xml.core.ElementException`;
  #L1a49ca.  v5:= 2I;
  #L1a49cc.  v5:= new `java.lang.Object`[v5];
  #L1a49d0.  v0:= 0I;
  #L1a49d2.  v5[v0]:= v6 @kind object;
  #L1a49d6.  v6:= 1I;
  #L1a49d8.  v5[v6]:= v4 @kind object;
  #L1a49dc.  v4:= "Value for %s is null in %s" @kind object;
  #L1a49e0.  call `<init>`(v3, v4, v5) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a49e6.  throw v3;
  #L1a49e8.  call temp:= `J`(v2, v5) @signature `Lorg/simpleframework/xml/core/Composite;.J:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1a49ee.  v4:= temp @kind object;
  #L1a49f0.  if v4 == 0 then goto L1a49fa;
  #L1a49f4.  call `G`(v2, v3, v4, v6) @signature `Lorg/simpleframework/xml/core/Composite;.G:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a49fa.  v3:= v2.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a49fe.  call `set`(v3, v6, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L1a4a04.  return @kind void;
}
procedure `void` `O`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Schema` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.O:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a4a18.  call temp:= `getRevision`(v6) @signature `Lorg/simpleframework/xml/core/Schema;.getRevision:()Lorg/simpleframework/xml/Version;` @kind interface;
  #L1a4a1e.  v5:= temp @kind object;
  #L1a4a20.  call temp:= `getVersion`(v6) @signature `Lorg/simpleframework/xml/core/Schema;.getVersion:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L1a4a26.  v6:= temp @kind object;
  #L1a4a28.  if v5 == 0 then goto L1a4a7a;
  #L1a4a2c.  v0:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a4a30.  call temp:= `getDefault`(v0) @signature `Lorg/simpleframework/xml/core/Revision;.getDefault:()D` @kind virtual;
  #L1a4a36.  v0:= temp @kind wide;
  #L1a4a38.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L1a4a3e.  v0:= temp @kind object;
  #L1a4a40.  call temp:= `revision`(v5) @signature `Lorg/simpleframework/xml/Version;.revision:()D` @kind interface;
  #L1a4a46.  v1:= temp @kind wide;
  #L1a4a48.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L1a4a4e.  v5:= temp @kind object;
  #L1a4a50.  v1:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a4a54.  call temp:= `compare`(v1, v5, v0) @signature `Lorg/simpleframework/xml/core/Revision;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1a4a5a.  v0:= temp;
  #L1a4a5c.  if v0 == 0 then goto L1a4a74;
  #L1a4a60.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L1a4a66.  v0:= temp;
  #L1a4a68.  if v0 == 0 then goto L1a4a7a;
  #L1a4a6c.  call `D`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.D:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a4a72.  goto L1a4a7a;
  #L1a4a74.  call `D`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.D:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a4a7a.  return @kind void;
}
procedure `boolean` `a`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.a:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/strategy/Type;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a38bc.  v0:= v1.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L1a38c0.  call temp:= `setOverride`(v0, v4, v3, v2) @signature `Lorg/simpleframework/xml/core/Factory;.setOverride:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;)Z` @kind virtual;
  #L1a38c6.  v2:= temp;
  #L1a38c8.  return v2;
}
procedure `void` `access$100`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Schema` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$100:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a3d0c.  call `q`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.q:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L1a3d12.  return @kind void;
}
procedure `void` `access$200`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$200:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a3d24.  call `m`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.m:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a3d2a.  return @kind void;
}
procedure `void` `access$300`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$300:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a3d3c.  call `f`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.f:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a3d42.  return @kind void;
}
procedure `void` `access$400`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$400:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a3d54.  call `h`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.h:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a3d5a.  return @kind void;
}
procedure `java.lang.Object` `b`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `org.simpleframework.xml.core.Instance` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.b:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a3a14.  v0:= v1.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a3a18.  call temp:= `getSchema`(v0, v4) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L1a3a1e.  v4:= temp @kind object;
  #L1a3a20.  call temp:= `getCaller`(v4) @signature `Lorg/simpleframework/xml/core/Schema;.getCaller:()Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L1a3a26.  v0:= temp @kind object;
  #L1a3a28.  call temp:= `c`(v1, v4, v3) @signature `Lorg/simpleframework/xml/core/Composite;.c:(Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;)Lorg/simpleframework/xml/core/Composite$Builder;` @kind direct;
  #L1a3a2e.  v4:= temp @kind object;
  #L1a3a30.  call temp:= `read`(v4, v2) @signature `Lorg/simpleframework/xml/core/Composite$Builder;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L1a3a36.  v4:= temp @kind object;
  #L1a3a38.  call `validate`(v0, v4) @signature `Lorg/simpleframework/xml/core/Caller;.validate:(Ljava/lang/Object;)V` @kind virtual;
  #L1a3a3e.  call `commit`(v0, v4) @signature `Lorg/simpleframework/xml/core/Caller;.commit:(Ljava/lang/Object;)V` @kind virtual;
  #L1a3a44.  call temp:= `setInstance`(v3, v4) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a3a4a.  call temp:= `k`(v1, v2, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.k:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Caller;)Ljava/lang/Object;` @kind direct;
  #L1a3a50.  v2:= temp @kind object;
  #L1a3a52.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Composite$Builder` `c`(`org.simpleframework.xml.core.Composite` v9 @kind this, `org.simpleframework.xml.core.Schema` v10 @kind object, `org.simpleframework.xml.core.Instance` v11 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.c:(Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;)Lorg/simpleframework/xml/core/Composite$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a3c48.  call temp:= `getInstantiator`(v10) @signature `Lorg/simpleframework/xml/core/Schema;.getInstantiator:()Lorg/simpleframework/xml/core/Instantiator;` @kind interface;
  #L1a3c4e.  v0:= temp @kind object;
  #L1a3c50.  call temp:= `isDefault`(v0) @signature `Lorg/simpleframework/xml/core/Instantiator;.isDefault:()Z` @kind interface;
  #L1a3c56.  v0:= temp;
  #L1a3c58.  if v0 == 0 then goto L1a3c6c;
  #L1a3c5c.  v0:= new `org.simpleframework.xml.core.Composite$Builder`;
  #L1a3c60.  v1:= v9.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a3c64.  call `<init>`(v0, v9, v1, v10, v11) @signature `Lorg/simpleframework/xml/core/Composite$Builder;.<init>:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/core/Criteria;Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;)V` @kind direct;
  #L1a3c6a.  return v0 @kind object;
  #L1a3c6c.  v0:= new `org.simpleframework.xml.core.Composite$Injector`;
  #L1a3c70.  v5:= v9.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a3c74.  v8:= 0I;
  #L1a3c76.  v2:= v0 @kind object;
  #L1a3c78.  v3:= v9 @kind object;
  #L1a3c7a.  v4:= v9 @kind object;
  #L1a3c7c.  v6:= v10 @kind object;
  #L1a3c7e.  v7:= v11 @kind object;
  #L1a3c80.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/simpleframework/xml/core/Composite$Injector;.<init>:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/core/Criteria;Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;Lorg/simpleframework/xml/core/Composite$1;)V` @kind direct;
  #L1a3c86.  return v0 @kind object;
}
procedure `void` `d`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Schema` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.d:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a3d6c.  call temp:= `getSection`(v4) @signature `Lorg/simpleframework/xml/core/Schema;.getSection:()Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L1a3d72.  v0:= temp @kind object;
  #L1a3d74.  call `q`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Composite;.q:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L1a3d7a.  call `l`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.l:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a3d80.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.e:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a3d94.  call temp:= `getName`(v3) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L1a3d9a.  v0:= temp @kind object;
  #L1a3d9c.  call temp:= `getAttribute`(v5, v0) @signature `Lorg/simpleframework/xml/core/Section;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a3da2.  v5:= temp @kind object;
  #L1a3da4.  call temp:= `getLabel`(v6, v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1a3daa.  v0:= temp @kind object;
  #L1a3dac.  if v0 != 0 then goto L1a3e12;
  #L1a3db0.  call temp:= `getPosition`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a3db6.  v3:= temp @kind object;
  #L1a3db8.  v0:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a3dbc.  v1:= v2.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a3dc0.  call temp:= `getType`(v0, v1, v4) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L1a3dc6.  v4:= temp @kind object;
  #L1a3dc8.  v0:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a3dcc.  call temp:= `isStrict`(v6, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L1a3dd2.  v6:= temp;
  #L1a3dd4.  if v6 == 0 then goto L1a3e18;
  #L1a3dd8.  v6:= v2.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a3ddc.  call temp:= `isEqual`(v6) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L1a3de2.  v6:= temp;
  #L1a3de4.  if v6 != 0 then goto L1a3dea;
  #L1a3de8.  goto L1a3e18;
  #L1a3dea.  v6:= new `org.simpleframework.xml.core.AttributeException`;
  #L1a3dee.  v0:= 3I;
  #L1a3df0.  v0:= new `java.lang.Object`[v0];
  #L1a3df4.  v1:= 0I;
  #L1a3df6.  v0[v1]:= v5 @kind object;
  #L1a3dfa.  v5:= 1I;
  #L1a3dfc.  v0[v5]:= v4 @kind object;
  #L1a3e00.  v4:= 2I;
  #L1a3e02.  v0[v4]:= v3 @kind object;
  #L1a3e06.  v3:= "Attribute '%s' does not have a match in %s at %s" @kind object;
  #L1a3e0a.  call `<init>`(v6, v3, v0) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a3e10.  throw v6;
  #L1a3e12.  call temp:= `i`(v2, v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.i:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L1a3e18.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.f:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a3e2c.  call temp:= `getAttributes`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L1a3e32.  v0:= temp @kind object;
  #L1a3e34.  call temp:= `getAttributes`(v6) @signature `Lorg/simpleframework/xml/core/Section;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L1a3e3a.  v1:= temp @kind object;
  #L1a3e3c.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a3e42.  v0:= temp @kind object;
  #L1a3e44.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a3e4a.  v2:= temp;
  #L1a3e4c.  if v2 == 0 then goto L1a3e70;
  #L1a3e50.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a3e56.  v2:= temp @kind object;
  #L1a3e58.  v2:= (`java.lang.String`) v2 @kind object;
  #L1a3e5c.  call temp:= `getAttribute`(v4, v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a3e62.  v2:= temp @kind object;
  #L1a3e64.  if v2 == 0 then goto L1a3e44;
  #L1a3e68.  call `e`(v3, v2, v5, v6, v1) @signature `Lorg/simpleframework/xml/core/Composite;.e:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1a3e6e.  goto L1a3e44;
  #L1a3e70.  call `t`(v3, v4, v1, v5) @signature `Lorg/simpleframework/xml/core/Composite;.t:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Ljava/lang/Object;)V` @kind direct;
  #L1a3e76.  return @kind void;
}
procedure `void` `g`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object, `org.simpleframework.xml.core.LabelMap` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.g:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a3e88.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L1a3e8e.  v0:= temp @kind object;
  #L1a3e90.  call temp:= `getPath`(v6, v0) @signature `Lorg/simpleframework/xml/core/Section;.getPath:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a3e96.  v6:= temp @kind object;
  #L1a3e98.  call temp:= `getLabel`(v7, v6) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1a3e9e.  v0:= temp @kind object;
  #L1a3ea0.  if v0 != 0 then goto L1a3eb0;
  #L1a3ea4.  v0:= v3.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a3ea8.  call temp:= `resolve`(v0, v6) @signature `Lorg/simpleframework/xml/core/Criteria;.resolve:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L1a3eae.  v0:= temp @kind object;
  #L1a3eb0.  if v0 != 0 then goto L1a3f1e;
  #L1a3eb4.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a3eba.  v0:= temp @kind object;
  #L1a3ebc.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a3ec0.  v2:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a3ec4.  call temp:= `getType`(v1, v2, v5) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L1a3eca.  v5:= temp @kind object;
  #L1a3ecc.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a3ed0.  call temp:= `isStrict`(v7, v1) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L1a3ed6.  v7:= temp;
  #L1a3ed8.  if v7 == 0 then goto L1a3f16;
  #L1a3edc.  v7:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a3ee0.  call temp:= `isEqual`(v7) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L1a3ee6.  v7:= temp;
  #L1a3ee8.  if v7 != 0 then goto L1a3eee;
  #L1a3eec.  goto L1a3f16;
  #L1a3eee.  v4:= new `org.simpleframework.xml.core.ElementException`;
  #L1a3ef2.  v7:= 3I;
  #L1a3ef4.  v7:= new `java.lang.Object`[v7];
  #L1a3ef8.  v1:= 0I;
  #L1a3efa.  v7[v1]:= v6 @kind object;
  #L1a3efe.  v6:= 1I;
  #L1a3f00.  v7[v6]:= v5 @kind object;
  #L1a3f04.  v5:= 2I;
  #L1a3f06.  v7[v5]:= v0 @kind object;
  #L1a3f0a.  v5:= "Element '%s' does not have a match in %s at %s" @kind object;
  #L1a3f0e.  call `<init>`(v4, v5, v7) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a3f14.  throw v4;
  #L1a3f16.  call `skip`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.skip:()V` @kind interface;
  #L1a3f1c.  goto L1a3f24;
  #L1a3f1e.  call `n`(v3, v4, v5, v7, v0) @signature `Lorg/simpleframework/xml/core/Composite;.n:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a3f24.  return @kind void;
}
procedure `void` `h`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.h:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a3f38.  call temp:= `getElements`(v6) @signature `Lorg/simpleframework/xml/core/Section;.getElements:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L1a3f3e.  v0:= temp @kind object;
  #L1a3f40.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a3f46.  v1:= temp @kind object;
  #L1a3f48.  if v1 == 0 then goto L1a3f78;
  #L1a3f4c.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L1a3f52.  v2:= temp @kind object;
  #L1a3f54.  call temp:= `getSection`(v6, v2) @signature `Lorg/simpleframework/xml/core/Section;.getSection:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L1a3f5a.  v2:= temp @kind object;
  #L1a3f5c.  if v2 == 0 then goto L1a3f68;
  #L1a3f60.  call `l`(v3, v1, v5, v2) @signature `Lorg/simpleframework/xml/core/Composite;.l:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a3f66.  goto L1a3f6e;
  #L1a3f68.  call `g`(v3, v1, v5, v6, v0) @signature `Lorg/simpleframework/xml/core/Composite;.g:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1a3f6e.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a3f74.  v1:= temp @kind object;
  #L1a3f76.  goto L1a3f48;
  #L1a3f78.  call `t`(v3, v4, v0, v5) @signature `Lorg/simpleframework/xml/core/Composite;.t:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Ljava/lang/Object;)V` @kind direct;
  #L1a3f7e.  return @kind void;
}
procedure `java.lang.Object` `i`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.i:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a3a64.  call temp:= `o`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.o:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L1a3a6a.  v0:= temp @kind object;
  #L1a3a6c.  if v0 != 0 then goto L1a3ace;
  #L1a3a70.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a3a76.  v4:= temp @kind object;
  #L1a3a78.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a3a7c.  v2:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a3a80.  call temp:= `getType`(v1, v2, v5) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L1a3a86.  v5:= temp @kind object;
  #L1a3a88.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L1a3a8e.  v1:= temp;
  #L1a3a90.  if v1 == 0 then goto L1a3ae8;
  #L1a3a94.  v1:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a3a98.  call temp:= `isEqual`(v1) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L1a3a9e.  v1:= temp;
  #L1a3aa0.  if v1 != 0 then goto L1a3aa6;
  #L1a3aa4.  goto L1a3ae8;
  #L1a3aa6.  v0:= new `org.simpleframework.xml.core.ValueRequiredException`;
  #L1a3aaa.  v1:= 3I;
  #L1a3aac.  v1:= new `java.lang.Object`[v1];
  #L1a3ab0.  v2:= 0I;
  #L1a3ab2.  v1[v2]:= v6 @kind object;
  #L1a3ab6.  v6:= 1I;
  #L1a3ab8.  v1[v6]:= v5 @kind object;
  #L1a3abc.  v5:= 2I;
  #L1a3abe.  v1[v5]:= v4 @kind object;
  #L1a3ac2.  v4:= "Empty value for %s in %s at %s" @kind object;
  #L1a3ac6.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/ValueRequiredException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a3acc.  throw v0;
  #L1a3ace.  v4:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a3ad2.  call temp:= `getEmpty`(v6, v4) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L1a3ad8.  v4:= temp @kind object;
  #L1a3ada.  if v0 == v4 then goto L1a3ae8;
  #L1a3ade.  v4:= v3.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a3ae2.  call `set`(v4, v6, v0) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L1a3ae8.  return v0 @kind object;
}
procedure `java.lang.Object` `j`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `org.simpleframework.xml.core.Instance` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.j:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a3afc.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a3b02.  v0:= temp @kind object;
  #L1a3b04.  v1:= v2.`org.simpleframework.xml.core.Composite.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L1a3b08.  call temp:= `read`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1a3b0e.  v3:= temp @kind object;
  #L1a3b10.  if v0 == 0 then goto L1a3b1a;
  #L1a3b14.  call temp:= `setInstance`(v4, v3) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a3b1a.  return v3 @kind object;
}
procedure `java.lang.Object` `k`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Caller` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.k:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Caller;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a3b2c.  if v5 == 0 then goto L1a3b8a;
  #L1a3b30.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a3b36.  v4:= temp @kind object;
  #L1a3b38.  call temp:= `resolve`(v6, v5) @signature `Lorg/simpleframework/xml/core/Caller;.resolve:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a3b3e.  v5:= temp @kind object;
  #L1a3b40.  v6:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a3b44.  call temp:= `getType`(v6) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a3b4a.  v6:= temp @kind object;
  #L1a3b4c.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a3b52.  v0:= temp @kind object;
  #L1a3b54.  call temp:= `isAssignableFrom`(v6, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1a3b5a.  v1:= temp;
  #L1a3b5c.  if v1 == 0 then goto L1a3b62;
  #L1a3b60.  return v5 @kind object;
  #L1a3b62.  v5:= new `org.simpleframework.xml.core.ElementException`;
  #L1a3b66.  v1:= 3I;
  #L1a3b68.  v1:= new `java.lang.Object`[v1];
  #L1a3b6c.  v2:= 0I;
  #L1a3b6e.  v1[v2]:= v0 @kind object;
  #L1a3b72.  v0:= 1I;
  #L1a3b74.  v1[v0]:= v6 @kind object;
  #L1a3b78.  v6:= 2I;
  #L1a3b7a.  v1[v6]:= v4 @kind object;
  #L1a3b7e.  v4:= "Type %s does not match %s at %s" @kind object;
  #L1a3b82.  call `<init>`(v5, v4, v1) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a3b88.  throw v5;
  #L1a3b8a.  return v5 @kind object;
}
procedure `void` `l`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.l:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;

  #L1a3f90.  call `m`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.m:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a3f96.  call `f`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.f:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a3f9c.  call `h`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.h:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a3fa2.  return @kind void;
}
procedure `void` `m`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.m:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;

  #L1a3fb4.  call temp:= `getText`(v3) @signature `Lorg/simpleframework/xml/core/Section;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L1a3fba.  v3:= temp @kind object;
  #L1a3fbc.  if v3 == 0 then goto L1a3fc6;
  #L1a3fc0.  call temp:= `i`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.i:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L1a3fc6.  return @kind void;
}
procedure `void` `n`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object, `org.simpleframework.xml.core.Label` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.n:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a3fd8.  call temp:= `i`(v3, v4, v5, v7) @signature `Lorg/simpleframework/xml/core/Composite;.i:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L1a3fde.  v4:= temp @kind object;
  #L1a3fe0.  call temp:= `getPaths`(v7) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L1a3fe6.  v5:= temp @kind object;
  #L1a3fe8.  v0:= length @variable v5;
  #L1a3fea.  v1:= 0I;
  #L1a3fec.  if v1 >= v0 then goto L1a4000;
  #L1a3ff0.  v2:= v5[v1] @kind object;
  #L1a3ff4.  call temp:= `getLabel`(v6, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1a3ffa.  v1:= v1 + 1;
  #L1a3ffe.  goto L1a3fec;
  #L1a4000.  call temp:= `isInline`(v7) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L1a4006.  v5:= temp;
  #L1a4008.  if v5 == 0 then goto L1a4016;
  #L1a400c.  v5:= v3.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a4010.  call `set`(v5, v7, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L1a4016.  return @kind void;
}
procedure `java.lang.Object` `o`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.o:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a3b9c.  v0:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a3ba0.  call temp:= `getConverter`(v5, v0) @signature `Lorg/simpleframework/xml/core/Label;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind interface;
  #L1a3ba6.  v0:= temp @kind object;
  #L1a3ba8.  call temp:= `isCollection`(v5) @signature `Lorg/simpleframework/xml/core/Label;.isCollection:()Z` @kind interface;
  #L1a3bae.  v1:= temp;
  #L1a3bb0.  if v1 == 0 then goto L1a3bf8;
  #L1a3bb4.  v1:= v2.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a3bb8.  call temp:= `get`(v1, v5) @signature `Lorg/simpleframework/xml/core/Criteria;.get:(Lorg/simpleframework/xml/core/Label;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L1a3bbe.  v1:= temp @kind object;
  #L1a3bc0.  call temp:= `getContact`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L1a3bc6.  v5:= temp @kind object;
  #L1a3bc8.  if v1 == 0 then goto L1a3bde;
  #L1a3bcc.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Variable;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L1a3bd2.  v4:= temp @kind object;
  #L1a3bd4.  call temp:= `read`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a3bda.  v3:= temp @kind object;
  #L1a3bdc.  return v3 @kind object;
  #L1a3bde.  if v4 == 0 then goto L1a3bf8;
  #L1a3be2.  call temp:= `get`(v5, v4) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a3be8.  v4:= temp @kind object;
  #L1a3bea.  if v4 == 0 then goto L1a3bf8;
  #L1a3bee.  call temp:= `read`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a3bf4.  v3:= temp @kind object;
  #L1a3bf6.  return v3 @kind object;
  #L1a3bf8.  call temp:= `read`(v0, v3) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L1a3bfe.  v3:= temp @kind object;
  #L1a3c00.  return v3 @kind object;
}
procedure `void` `p`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Label` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.p:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;

  #L1a4028.  call temp:= `i`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.i:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L1a402e.  v1:= temp @kind object;
  #L1a4030.  v2:= v0.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a4034.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a403a.  v2:= temp @kind object;
  #L1a403c.  if v1 == 0 then goto L1a4076;
  #L1a4040.  v3:= v0.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a4044.  call temp:= `getVersion`(v3, v2) @signature `Lorg/simpleframework/xml/core/Context;.getVersion:(Ljava/lang/Class;)Lorg/simpleframework/xml/Version;` @kind interface;
  #L1a404a.  v2:= temp @kind object;
  #L1a404c.  call temp:= `revision`(v2) @signature `Lorg/simpleframework/xml/Version;.revision:()D` @kind interface;
  #L1a4052.  v2:= temp @kind wide;
  #L1a4054.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L1a405a.  v2:= temp @kind object;
  #L1a405c.  v3:= v0.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a4060.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a4066.  v3:= temp;
  #L1a4068.  if v3 != 0 then goto L1a4076;
  #L1a406c.  v3:= v0.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a4070.  call temp:= `compare`(v3, v2, v1) @signature `Lorg/simpleframework/xml/core/Revision;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1a4076.  return @kind void;
}
procedure `void` `q`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Schema` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.q:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a4088.  call temp:= `getVersion`(v5) @signature `Lorg/simpleframework/xml/core/Schema;.getVersion:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L1a408e.  v5:= temp @kind object;
  #L1a4090.  v0:= v2.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a4094.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a409a.  v0:= temp @kind object;
  #L1a409c.  if v5 == 0 then goto L1a410c;
  #L1a40a0.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L1a40a6.  v1:= temp @kind object;
  #L1a40a8.  call temp:= `getAttributes`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L1a40ae.  v3:= temp @kind object;
  #L1a40b0.  call temp:= `remove`(v3, v1) @signature `Lorg/simpleframework/xml/stream/NodeMap;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L1a40b6.  v3:= temp @kind object;
  #L1a40b8.  v3:= (`org.simpleframework.xml.stream.InputNode`) v3 @kind object;
  #L1a40bc.  if v3 == 0 then goto L1a40c8;
  #L1a40c0.  call `p`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.p:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a40c6.  goto L1a410c;
  #L1a40c8.  v3:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a40cc.  call temp:= `getVersion`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.getVersion:(Ljava/lang/Class;)Lorg/simpleframework/xml/Version;` @kind interface;
  #L1a40d2.  v3:= temp @kind object;
  #L1a40d4.  v4:= v2.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a40d8.  call temp:= `getDefault`(v4) @signature `Lorg/simpleframework/xml/core/Revision;.getDefault:()D` @kind virtual;
  #L1a40de.  v0:= temp @kind wide;
  #L1a40e0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L1a40e6.  v4:= temp @kind object;
  #L1a40e8.  call temp:= `revision`(v3) @signature `Lorg/simpleframework/xml/Version;.revision:()D` @kind interface;
  #L1a40ee.  v0:= temp @kind wide;
  #L1a40f0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L1a40f6.  v3:= temp @kind object;
  #L1a40f8.  v0:= v2.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a40fc.  call `set`(v0, v5, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L1a4102.  v5:= v2.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a4106.  call temp:= `compare`(v5, v3, v4) @signature `Lorg/simpleframework/xml/core/Revision;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1a410c.  return @kind void;
}
procedure `void` `r`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.r:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a4120.  v0:= v4.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a4124.  call temp:= `getConverter`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind interface;
  #L1a412a.  v0:= temp @kind object;
  #L1a412c.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a4132.  v1:= temp @kind object;
  #L1a4134.  v2:= v4.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a4138.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a413e.  v2:= temp @kind object;
  #L1a4140.  call temp:= `validate`(v0, v5) @signature `Lorg/simpleframework/xml/core/Converter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind interface;
  #L1a4146.  v5:= temp;
  #L1a4148.  if v5 == 0 then goto L1a415a;
  #L1a414c.  v5:= v4.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a4150.  v0:= 0I;
  #L1a4152.  call `set`(v5, v6, v0) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L1a4158.  return @kind void;
  #L1a415a.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L1a415e.  v0:= 3I;
  #L1a4160.  v0:= new `java.lang.Object`[v0];
  #L1a4164.  v3:= 0I;
  #L1a4166.  v0[v3]:= v6 @kind object;
  #L1a416a.  v6:= 1I;
  #L1a416c.  v0[v6]:= v2 @kind object;
  #L1a4170.  v6:= 2I;
  #L1a4172.  v0[v6]:= v1 @kind object;
  #L1a4176.  v6:= "Invalid value for %s in %s at %s" @kind object;
  #L1a417a.  call `<init>`(v5, v6, v0) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a4180.  throw v5;
}
procedure `void` `s`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.s:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a4194.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a419a.  v5:= temp @kind object;
  #L1a419c.  call temp:= `iterator`(v6) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1a41a2.  v6:= temp @kind object;
  #L1a41a4.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a41aa.  v0:= temp;
  #L1a41ac.  if v0 == 0 then goto L1a420e;
  #L1a41b0.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a41b6.  v0:= temp @kind object;
  #L1a41b8.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L1a41bc.  v1:= v4.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a41c0.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a41c6.  v1:= temp @kind object;
  #L1a41c8.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L1a41ce.  v2:= temp;
  #L1a41d0.  if v2 == 0 then goto L1a41a4;
  #L1a41d4.  v2:= v4.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a41d8.  call temp:= `isEqual`(v2) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L1a41de.  v2:= temp;
  #L1a41e0.  if v2 != 0 then goto L1a41e6;
  #L1a41e4.  goto L1a41a4;
  #L1a41e6.  v6:= new `org.simpleframework.xml.core.ValueRequiredException`;
  #L1a41ea.  v2:= 3I;
  #L1a41ec.  v2:= new `java.lang.Object`[v2];
  #L1a41f0.  v3:= 0I;
  #L1a41f2.  v2[v3]:= v0 @kind object;
  #L1a41f6.  v0:= 1I;
  #L1a41f8.  v2[v0]:= v1 @kind object;
  #L1a41fc.  v0:= 2I;
  #L1a41fe.  v2[v0]:= v5 @kind object;
  #L1a4202.  v5:= "Unable to satisfy %s for %s at %s" @kind object;
  #L1a4206.  call `<init>`(v6, v5, v2) @signature `Lorg/simpleframework/xml/core/ValueRequiredException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a420c.  throw v6;
  #L1a420e.  return @kind void;
}
procedure `void` `t`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.LabelMap` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.t:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a4220.  v0:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a4224.  v1:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a4228.  call temp:= `getType`(v0, v1, v6) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L1a422e.  v6:= temp @kind object;
  #L1a4230.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a4236.  v4:= temp @kind object;
  #L1a4238.  call temp:= `iterator`(v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1a423e.  v5:= temp @kind object;
  #L1a4240.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a4246.  v0:= temp;
  #L1a4248.  if v0 == 0 then goto L1a42ba;
  #L1a424c.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a4252.  v0:= temp @kind object;
  #L1a4254.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L1a4258.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L1a425e.  v1:= temp;
  #L1a4260.  if v1 == 0 then goto L1a429e;
  #L1a4264.  v1:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a4268.  call temp:= `isEqual`(v1) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L1a426e.  v1:= temp;
  #L1a4270.  if v1 != 0 then goto L1a4276;
  #L1a4274.  goto L1a429e;
  #L1a4276.  v5:= new `org.simpleframework.xml.core.ValueRequiredException`;
  #L1a427a.  v1:= 3I;
  #L1a427c.  v1:= new `java.lang.Object`[v1];
  #L1a4280.  v2:= 0I;
  #L1a4282.  v1[v2]:= v0 @kind object;
  #L1a4286.  v0:= 1I;
  #L1a4288.  v1[v0]:= v6 @kind object;
  #L1a428c.  v6:= 2I;
  #L1a428e.  v1[v6]:= v4 @kind object;
  #L1a4292.  v4:= "Unable to satisfy %s for %s at %s" @kind object;
  #L1a4296.  call `<init>`(v5, v4, v1) @signature `Lorg/simpleframework/xml/core/ValueRequiredException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a429c.  throw v5;
  #L1a429e.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a42a2.  call temp:= `getEmpty`(v0, v1) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L1a42a8.  v1:= temp @kind object;
  #L1a42aa.  if v1 == 0 then goto L1a4240;
  #L1a42ae.  v2:= v3.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a42b2.  call `set`(v2, v0, v1) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L1a42b8.  goto L1a4240;
  #L1a42ba.  return @kind void;
}
procedure `boolean` `u`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.u:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a3924.  v0:= v1.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a3928.  call temp:= `getSchema`(v0, v3) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L1a392e.  v3:= temp @kind object;
  #L1a3930.  call temp:= `getSection`(v3) @signature `Lorg/simpleframework/xml/core/Schema;.getSection:()Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L1a3936.  v0:= temp @kind object;
  #L1a3938.  call `A`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.A:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L1a393e.  call `z`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Composite;.z:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a3944.  call temp:= `isElement`(v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.isElement:()Z` @kind interface;
  #L1a394a.  v2:= temp;
  #L1a394c.  return v2;
}
procedure `void` `v`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.v:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a42cc.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a42d2.  v0:= temp @kind object;
  #L1a42d4.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L1a42da.  v1:= temp @kind object;
  #L1a42dc.  call temp:= `getAttribute`(v5, v1) @signature `Lorg/simpleframework/xml/core/Section;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a42e2.  v5:= temp @kind object;
  #L1a42e4.  call temp:= `getLabel`(v6, v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1a42ea.  v1:= temp @kind object;
  #L1a42ec.  if v1 != 0 then goto L1a4346;
  #L1a42f0.  v4:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a42f4.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a42fa.  v4:= temp @kind object;
  #L1a42fc.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a4300.  call temp:= `isStrict`(v6, v1) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L1a4306.  v6:= temp;
  #L1a4308.  if v6 == 0 then goto L1a434c;
  #L1a430c.  v6:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a4310.  call temp:= `isEqual`(v6) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L1a4316.  v6:= temp;
  #L1a4318.  if v6 != 0 then goto L1a431e;
  #L1a431c.  goto L1a434c;
  #L1a431e.  v6:= new `org.simpleframework.xml.core.AttributeException`;
  #L1a4322.  v1:= 3I;
  #L1a4324.  v1:= new `java.lang.Object`[v1];
  #L1a4328.  v2:= 0I;
  #L1a432a.  v1[v2]:= v5 @kind object;
  #L1a432e.  v5:= 1I;
  #L1a4330.  v1[v5]:= v4 @kind object;
  #L1a4334.  v4:= 2I;
  #L1a4336.  v1[v4]:= v0 @kind object;
  #L1a433a.  v4:= "Attribute '%s' does not exist for %s at %s" @kind object;
  #L1a433e.  call `<init>`(v6, v4, v1) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a4344.  throw v6;
  #L1a4346.  call `r`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/Composite;.r:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a434c.  return @kind void;
}
procedure `void` `w`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.w:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a4360.  call temp:= `getAttributes`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L1a4366.  v0:= temp @kind object;
  #L1a4368.  call temp:= `getAttributes`(v5) @signature `Lorg/simpleframework/xml/core/Section;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L1a436e.  v1:= temp @kind object;
  #L1a4370.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a4376.  v0:= temp @kind object;
  #L1a4378.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a437e.  v2:= temp;
  #L1a4380.  if v2 == 0 then goto L1a43a4;
  #L1a4384.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a438a.  v2:= temp @kind object;
  #L1a438c.  v2:= (`java.lang.String`) v2 @kind object;
  #L1a4390.  call temp:= `getAttribute`(v4, v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a4396.  v2:= temp @kind object;
  #L1a4398.  if v2 == 0 then goto L1a4378;
  #L1a439c.  call `v`(v3, v2, v5, v1) @signature `Lorg/simpleframework/xml/core/Composite;.v:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1a43a2.  goto L1a4378;
  #L1a43a4.  call `s`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/Composite;.s:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1a43aa.  return @kind void;
}
procedure `void` `x`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.x:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a43bc.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L1a43c2.  v0:= temp @kind object;
  #L1a43c4.  call temp:= `getPath`(v5, v0) @signature `Lorg/simpleframework/xml/core/Section;.getPath:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1a43ca.  v5:= temp @kind object;
  #L1a43cc.  call temp:= `getLabel`(v6, v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1a43d2.  v0:= temp @kind object;
  #L1a43d4.  if v0 != 0 then goto L1a43e4;
  #L1a43d8.  v0:= v3.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a43dc.  call temp:= `resolve`(v0, v5) @signature `Lorg/simpleframework/xml/core/Criteria;.resolve:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L1a43e2.  v0:= temp @kind object;
  #L1a43e4.  if v0 != 0 then goto L1a444e;
  #L1a43e8.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L1a43ee.  v0:= temp @kind object;
  #L1a43f0.  v1:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L1a43f4.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a43fa.  v1:= temp @kind object;
  #L1a43fc.  v2:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a4400.  call temp:= `isStrict`(v6, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L1a4406.  v6:= temp;
  #L1a4408.  if v6 == 0 then goto L1a4446;
  #L1a440c.  v6:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L1a4410.  call temp:= `isEqual`(v6) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L1a4416.  v6:= temp;
  #L1a4418.  if v6 != 0 then goto L1a441e;
  #L1a441c.  goto L1a4446;
  #L1a441e.  v4:= new `org.simpleframework.xml.core.ElementException`;
  #L1a4422.  v6:= 3I;
  #L1a4424.  v6:= new `java.lang.Object`[v6];
  #L1a4428.  v2:= 0I;
  #L1a442a.  v6[v2]:= v5 @kind object;
  #L1a442e.  v5:= 1I;
  #L1a4430.  v6[v5]:= v1 @kind object;
  #L1a4434.  v5:= 2I;
  #L1a4436.  v6[v5]:= v0 @kind object;
  #L1a443a.  v5:= "Element '%s' does not exist for %s at %s" @kind object;
  #L1a443e.  call `<init>`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1a4444.  throw v4;
  #L1a4446.  call `skip`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.skip:()V` @kind interface;
  #L1a444c.  goto L1a4454;
  #L1a444e.  call `B`(v3, v4, v6, v0) @signature `Lorg/simpleframework/xml/core/Composite;.B:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1a4454.  return @kind void;
}
procedure `void` `y`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.y:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a4468.  call temp:= `getElements`(v5) @signature `Lorg/simpleframework/xml/core/Section;.getElements:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L1a446e.  v0:= temp @kind object;
  #L1a4470.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a4476.  v1:= temp @kind object;
  #L1a4478.  if v1 == 0 then goto L1a44a8;
  #L1a447c.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L1a4482.  v2:= temp @kind object;
  #L1a4484.  call temp:= `getSection`(v5, v2) @signature `Lorg/simpleframework/xml/core/Section;.getSection:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L1a448a.  v2:= temp @kind object;
  #L1a448c.  if v2 == 0 then goto L1a4498;
  #L1a4490.  call `z`(v3, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.z:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a4496.  goto L1a449e;
  #L1a4498.  call `x`(v3, v1, v5, v0) @signature `Lorg/simpleframework/xml/core/Composite;.x:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1a449e.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L1a44a4.  v1:= temp @kind object;
  #L1a44a6.  goto L1a4478;
  #L1a44a8.  call `s`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.s:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L1a44ae.  return @kind void;
}
procedure `void` `z`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `org.simpleframework.xml.core.Section` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.z:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;

  #L1a44c0.  call `w`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.w:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a44c6.  call `y`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.y:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L1a44cc.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a3960.  v0:= v3.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L1a3964.  call temp:= `getInstance`(v0, v4) @signature `Lorg/simpleframework/xml/core/ObjectFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L1a396a.  v0:= temp @kind object;
  #L1a396c.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a3972.  v1:= temp @kind object;
  #L1a3974.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L1a397a.  v2:= temp;
  #L1a397c.  if v2 == 0 then goto L1a398a;
  #L1a3980.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L1a3986.  v4:= temp @kind object;
  #L1a3988.  return v4 @kind object;
  #L1a398a.  v2:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a398e.  call temp:= `isPrimitive`(v2, v1) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Ljava/lang/Class;)Z` @kind interface;
  #L1a3994.  v2:= temp;
  #L1a3996.  if v2 == 0 then goto L1a39a4;
  #L1a399a.  call temp:= `j`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.j:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;)Ljava/lang/Object;` @kind direct;
  #L1a39a0.  v4:= temp @kind object;
  #L1a39a2.  return v4 @kind object;
  #L1a39a4.  call temp:= `b`(v3, v4, v0, v1) @signature `Lorg/simpleframework/xml/core/Composite;.b:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L1a39aa.  v4:= temp @kind object;
  #L1a39ac.  return v4 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a39c0.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a39c6.  v0:= temp @kind object;
  #L1a39c8.  v1:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a39cc.  call temp:= `getSchema`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L1a39d2.  v0:= temp @kind object;
  #L1a39d4.  call temp:= `getCaller`(v0) @signature `Lorg/simpleframework/xml/core/Schema;.getCaller:()Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L1a39da.  v1:= temp @kind object;
  #L1a39dc.  call `d`(v2, v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.d:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L1a39e2.  v0:= v2.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L1a39e6.  call `commit`(v0, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.commit:(Ljava/lang/Object;)V` @kind interface;
  #L1a39ec.  call `validate`(v1, v4) @signature `Lorg/simpleframework/xml/core/Caller;.validate:(Ljava/lang/Object;)V` @kind virtual;
  #L1a39f2.  call `commit`(v1, v4) @signature `Lorg/simpleframework/xml/core/Caller;.commit:(Ljava/lang/Object;)V` @kind virtual;
  #L1a39f8.  call temp:= `k`(v2, v3, v4, v1) @signature `Lorg/simpleframework/xml/core/Composite;.k:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Caller;)Ljava/lang/Object;` @kind direct;
  #L1a39fe.  v3:= temp @kind object;
  #L1a3a00.  return v3 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a38dc.  v0:= v2.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L1a38e0.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/ObjectFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L1a38e6.  v0:= temp @kind object;
  #L1a38e8.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L1a38ee.  v1:= temp;
  #L1a38f0.  if v1 != 0 then goto L1a390e;
  #L1a38f4.  v1:= 0I;
  #L1a38f6.  call temp:= `setInstance`(v0, v1) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a38fc.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L1a3902.  v0:= temp @kind object;
  #L1a3904.  call temp:= `u`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.u:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind direct;
  #L1a390a.  v3:= temp;
  #L1a390c.  return v3;
  #L1a390e.  v3:= 1I;
  #L1a3910.  return v3;
}
procedure `void` `write`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a4554.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a455a.  v0:= temp @kind object;
  #L1a455c.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L1a4560.  call temp:= `getSchema`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L1a4566.  v0:= temp @kind object;
  #L1a4568.  call temp:= `getCaller`(v0) @signature `Lorg/simpleframework/xml/core/Schema;.getCaller:()Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L1a456e.  v1:= temp @kind object;
  #L1a4570.  call temp:= `isPrimitive`(v0) @signature `Lorg/simpleframework/xml/core/Schema;.isPrimitive:()Z` @kind interface;
  #L1a4576.  v2:= temp;
  #L1a4578.  if v2 == 0 then goto L1a4588;
  #L1a457c.  v0:= v3.`org.simpleframework.xml.core.Composite.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L1a4580.  call `write`(v0, v4, v5) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L1a4586.  goto L1a4594;
  #L1a4588.  call `persist`(v1, v5) @signature `Lorg/simpleframework/xml/core/Caller;.persist:(Ljava/lang/Object;)V` @kind virtual;
  #L1a458e.  call `C`(v3, v4, v5, v0) @signature `Lorg/simpleframework/xml/core/Composite;.C:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L1a4594.  call `complete`(v1, v5) @signature `Lorg/simpleframework/xml/core/Caller;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L1a459a.  return @kind void;
  #L1a459c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a459e.  call `complete`(v1, v5) @signature `Lorg/simpleframework/xml/core/Caller;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L1a45a4.  throw v4;
  catch `java.lang.Throwable` @[L1a4570..L1a4594] goto L1a459c;
}
