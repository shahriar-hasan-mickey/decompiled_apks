record `org.simpleframework.xml.core.AnnotationFactory` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.AnnotationFactory.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.simpleframework.xml.core.AnnotationFactory.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.AnnotationFactory` v0 @kind this, `org.simpleframework.xml.core.Detail` v1 @kind object, `org.simpleframework.xml.core.Support` v2 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1a0334.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a033a.  call temp:= `isRequired`(v1) @signature `Lorg/simpleframework/xml/core/Detail;.isRequired:()Z` @kind interface;
  #L1a0340.  v1:= temp;
  #L1a0342.  v0.`org.simpleframework.xml.core.AnnotationFactory.b` @type ^`boolean` := v1 @kind boolean;
  #L1a0346.  call temp:= `getFormat`(v2) @signature `Lorg/simpleframework/xml/core/Support;.getFormat:()Lorg/simpleframework/xml/stream/Format;` @kind virtual;
  #L1a034c.  v1:= temp @kind object;
  #L1a034e.  v0.`org.simpleframework.xml.core.AnnotationFactory.a` @type ^`org.simpleframework.xml.stream.Format` := v1 @kind object;
  #L1a0352.  return @kind void;
}
procedure `java.lang.ClassLoader` `a`(`org.simpleframework.xml.core.AnnotationFactory` v1 @kind this) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.a:()Ljava/lang/ClassLoader;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a01b0.  v0:= constclass @type ^`org.simpleframework.xml.core.AnnotationFactory` @kind object;
  #L1a01b4.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1a01ba.  v0:= temp @kind object;
  #L1a01bc.  return v0 @kind object;
}
procedure `java.lang.annotation.Annotation` `b`(`org.simpleframework.xml.core.AnnotationFactory` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.b:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a01d0.  call temp:= `a`(v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.a:()Ljava/lang/ClassLoader;` @kind direct;
  #L1a01d6.  v0:= temp @kind object;
  #L1a01d8.  call temp:= `getComponentType`(v4) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1a01de.  v1:= temp @kind object;
  #L1a01e0.  call temp:= `isArray`(v4) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1a01e6.  v2:= temp;
  #L1a01e8.  if v2 == 0 then goto L1a0214;
  #L1a01ec.  call temp:= `f`(v3, v1) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.f:(Ljava/lang/Class;)Z` @kind direct;
  #L1a01f2.  v4:= temp;
  #L1a01f4.  if v4 == 0 then goto L1a0206;
  #L1a01f8.  v4:= constclass @type ^`org.simpleframework.xml.Element` @kind object;
  #L1a01fc.  call temp:= `c`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.c:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a0202.  v4:= temp @kind object;
  #L1a0204.  return v4 @kind object;
  #L1a0206.  v4:= constclass @type ^`org.simpleframework.xml.ElementArray` @kind object;
  #L1a020a.  call temp:= `c`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.c:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a0210.  v4:= temp @kind object;
  #L1a0212.  return v4 @kind object;
  #L1a0214.  call temp:= `f`(v3, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.f:(Ljava/lang/Class;)Z` @kind direct;
  #L1a021a.  v4:= temp;
  #L1a021c.  if v4 == 0 then goto L1a023a;
  #L1a0220.  call temp:= `e`(v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.e:()Z` @kind direct;
  #L1a0226.  v4:= temp;
  #L1a0228.  if v4 == 0 then goto L1a023a;
  #L1a022c.  v4:= constclass @type ^`org.simpleframework.xml.Attribute` @kind object;
  #L1a0230.  call temp:= `c`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.c:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a0236.  v4:= temp @kind object;
  #L1a0238.  return v4 @kind object;
  #L1a023a.  v4:= constclass @type ^`org.simpleframework.xml.Element` @kind object;
  #L1a023e.  call temp:= `c`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.c:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a0244.  v4:= temp @kind object;
  #L1a0246.  return v4 @kind object;
}
procedure `java.lang.annotation.Annotation` `c`(`org.simpleframework.xml.core.AnnotationFactory` v1 @kind this, `java.lang.ClassLoader` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.c:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a02e0.  v0:= 0I;
  #L1a02e2.  call temp:= `d`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.d:(Ljava/lang/ClassLoader;Ljava/lang/Class;Z)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a02e8.  v2:= temp @kind object;
  #L1a02ea.  return v2 @kind object;
}
procedure `java.lang.annotation.Annotation` `d`(`org.simpleframework.xml.core.AnnotationFactory` v2 @kind this, `java.lang.ClassLoader` v3 @kind object, `java.lang.Class` v4 @kind object, `boolean` v5 ) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.d:(Ljava/lang/ClassLoader;Ljava/lang/Class;Z)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a02fc.  v0:= new `org.simpleframework.xml.core.AnnotationHandler`;
  #L1a0300.  v1:= v2.`org.simpleframework.xml.core.AnnotationFactory.b` @type ^`boolean` @kind boolean;
  #L1a0304.  call `<init>`(v0, v4, v1, v5) @signature `Lorg/simpleframework/xml/core/AnnotationHandler;.<init>:(Ljava/lang/Class;ZZ)V` @kind direct;
  #L1a030a.  v5:= 1I;
  #L1a030c.  v5:= new `java.lang.Class`[v5];
  #L1a0310.  v1:= 0I;
  #L1a0312.  v5[v1]:= v4 @kind object;
  #L1a0316.  call temp:= `newProxyInstance`(v3, v5, v0) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L1a031c.  v3:= temp @kind object;
  #L1a031e.  v3:= (`java.lang.annotation.Annotation`) v3 @kind object;
  #L1a0322.  return v3 @kind object;
}
procedure `boolean` `e`(`org.simpleframework.xml.core.AnnotationFactory` v3 @kind this) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a00e0.  v0:= v3.`org.simpleframework.xml.core.AnnotationFactory.a` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L1a00e4.  call temp:= `getVerbosity`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.getVerbosity:()Lorg/simpleframework/xml/stream/Verbosity;` @kind virtual;
  #L1a00ea.  v0:= temp @kind object;
  #L1a00ec.  v1:= 0I;
  #L1a00ee.  if v0 == 0 then goto L1a00fc;
  #L1a00f2.  v2:= `@@org.simpleframework.xml.stream.Verbosity.LOW` @type ^`org.simpleframework.xml.stream.Verbosity` @kind object;
  #L1a00f6.  if v0 != v2 then goto L1a00fc;
  #L1a00fa.  v1:= 1I;
  #L1a00fc.  return v1;
}
procedure `boolean` `f`(`org.simpleframework.xml.core.AnnotationFactory` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.f:(Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a0110.  v0:= constclass @type ^`java.lang.Number` @kind object;
  #L1a0114.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1a011a.  v0:= temp;
  #L1a011c.  v1:= 1I;
  #L1a011e.  if v0 == 0 then goto L1a0124;
  #L1a0122.  return v1;
  #L1a0124.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L1a0128.  if v3 != v0 then goto L1a012e;
  #L1a012c.  return v1;
  #L1a012e.  v0:= constclass @type ^`java.lang.Character` @kind object;
  #L1a0132.  if v3 != v0 then goto L1a0138;
  #L1a0136.  return v1;
  #L1a0138.  call temp:= `isPrimitive`(v3) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L1a013e.  v3:= temp;
  #L1a0140.  return v3;
}
procedure `boolean` `g`(`org.simpleframework.xml.core.AnnotationFactory` v2 @kind this, `java.lang.Class`[] v3 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.g:([Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a0154.  v0:= 0I;
  #L1a0156.  if v3 == 0 then goto L1a019c;
  #L1a015a.  v1:= length @variable v3;
  #L1a015c.  if v1 <= 0 then goto L1a019c;
  #L1a0160.  v1:= v3[v0] @kind object;
  #L1a0164.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1a016a.  v1:= temp @kind object;
  #L1a016c.  v3:= v3[v0] @kind object;
  #L1a0170.  if v1 == 0 then goto L1a0192;
  #L1a0174.  call temp:= `isEnum`(v1) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L1a017a.  v0:= temp;
  #L1a017c.  v1:= 1I;
  #L1a017e.  if v0 == 0 then goto L1a0184;
  #L1a0182.  return v1;
  #L1a0184.  call temp:= `isEnum`(v3) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L1a018a.  v0:= temp;
  #L1a018c.  if v0 == 0 then goto L1a0192;
  #L1a0190.  return v1;
  #L1a0192.  call temp:= `f`(v2, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.f:(Ljava/lang/Class;)Z` @kind direct;
  #L1a0198.  v3:= temp;
  #L1a019a.  return v3;
  #L1a019c.  return v0;
}
procedure `java.lang.annotation.Annotation` `getInstance`(`org.simpleframework.xml.core.AnnotationFactory` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a0258.  call temp:= `a`(v2) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.a:()Ljava/lang/ClassLoader;` @kind direct;
  #L1a025e.  v0:= temp @kind object;
  #L1a0260.  v1:= constclass @type ^`java.util.Map` @kind object;
  #L1a0264.  call temp:= `isAssignableFrom`(v1, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1a026a.  v1:= temp;
  #L1a026c.  if v1 == 0 then goto L1a02a6;
  #L1a0270.  call temp:= `g`(v2, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.g:([Ljava/lang/Class;)Z` @kind direct;
  #L1a0276.  v3:= temp;
  #L1a0278.  if v3 == 0 then goto L1a0298;
  #L1a027c.  call temp:= `e`(v2) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.e:()Z` @kind direct;
  #L1a0282.  v3:= temp;
  #L1a0284.  if v3 == 0 then goto L1a0298;
  #L1a0288.  v3:= constclass @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L1a028c.  v4:= 1I;
  #L1a028e.  call temp:= `d`(v2, v0, v3, v4) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.d:(Ljava/lang/ClassLoader;Ljava/lang/Class;Z)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a0294.  v3:= temp @kind object;
  #L1a0296.  return v3 @kind object;
  #L1a0298.  v3:= constclass @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L1a029c.  call temp:= `c`(v2, v0, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.c:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a02a2.  v3:= temp @kind object;
  #L1a02a4.  return v3 @kind object;
  #L1a02a6.  v4:= constclass @type ^`java.util.Collection` @kind object;
  #L1a02aa.  call temp:= `isAssignableFrom`(v4, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1a02b0.  v4:= temp;
  #L1a02b2.  if v4 == 0 then goto L1a02c4;
  #L1a02b6.  v3:= constclass @type ^`org.simpleframework.xml.ElementList` @kind object;
  #L1a02ba.  call temp:= `c`(v2, v0, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.c:(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a02c0.  v3:= temp @kind object;
  #L1a02c2.  return v3 @kind object;
  #L1a02c4.  call temp:= `b`(v2, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.b:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L1a02ca.  v3:= temp @kind object;
  #L1a02cc.  return v3 @kind object;
}
