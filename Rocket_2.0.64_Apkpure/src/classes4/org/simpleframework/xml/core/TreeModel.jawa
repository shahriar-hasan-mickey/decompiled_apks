record `org.simpleframework.xml.core.TreeModel` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Model` @kind interface {
  `org.simpleframework.xml.core.Expression` `org.simpleframework.xml.core.TreeModel.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.TreeModel.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.TreeModel.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ModelMap` `org.simpleframework.xml.core.TreeModel.d` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.TreeModel$OrderList` `org.simpleframework.xml.core.TreeModel.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Policy` `org.simpleframework.xml.core.TreeModel.f` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Detail` `org.simpleframework.xml.core.TreeModel.g` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.TreeModel.h` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.TreeModel.i` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.TreeModel.j` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.TreeModel.k` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.core.TreeModel.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.TreeModel` v6 @kind this, `org.simpleframework.xml.core.Policy` v7 @kind object, `org.simpleframework.xml.core.Detail` v8 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b42f8.  v3:= 0I;
  #L1b42fa.  v4:= 0I;
  #L1b42fc.  v5:= 1I;
  #L1b42fe.  v0:= v6 @kind object;
  #L1b4300.  v1:= v7 @kind object;
  #L1b4302.  v2:= v8 @kind object;
  #L1b4304.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L1b430a.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `org.simpleframework.xml.core.Policy` v2 @kind object, `org.simpleframework.xml.core.Detail` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b431c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b4322.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L1b4326.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L1b432c.  v1.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L1b4330.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L1b4334.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L1b433a.  v1.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L1b433e.  v0:= new `org.simpleframework.xml.core.ModelMap`;
  #L1b4342.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/core/ModelMap;.<init>:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1b4348.  v1.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` := v0 @kind object;
  #L1b434c.  v0:= new `org.simpleframework.xml.core.TreeModel$OrderList`;
  #L1b4350.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/TreeModel$OrderList;.<init>:()V` @kind direct;
  #L1b4356.  v1.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` := v0 @kind object;
  #L1b435a.  v1.`org.simpleframework.xml.core.TreeModel.g` @type ^`org.simpleframework.xml.core.Detail` := v3 @kind object;
  #L1b435e.  v1.`org.simpleframework.xml.core.TreeModel.f` @type ^`org.simpleframework.xml.core.Policy` := v2 @kind object;
  #L1b4362.  v1.`org.simpleframework.xml.core.TreeModel.i` @type ^`java.lang.String` := v5 @kind object;
  #L1b4366.  v1.`org.simpleframework.xml.core.TreeModel.l` @type ^`int` := v6;
  #L1b436a.  v1.`org.simpleframework.xml.core.TreeModel.h` @type ^`java.lang.String` := v4 @kind object;
  #L1b436e.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `a`(`org.simpleframework.xml.core.TreeModel` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.a:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b41f8.  v6:= new `org.simpleframework.xml.core.TreeModel`;
  #L1b41fc.  v1:= v7.`org.simpleframework.xml.core.TreeModel.f` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L1b4200.  v2:= v7.`org.simpleframework.xml.core.TreeModel.g` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L1b4204.  v0:= v6 @kind object;
  #L1b4206.  v3:= v8 @kind object;
  #L1b4208.  v4:= v9 @kind object;
  #L1b420a.  v5:= v10;
  #L1b420c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L1b4212.  if v8 == 0 then goto L1b422a;
  #L1b4216.  v9:= v7.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L1b421a.  call `register`(v9, v8, v6) @signature `Lorg/simpleframework/xml/core/ModelMap;.register:(Ljava/lang/String;Lorg/simpleframework/xml/core/Model;)V` @kind virtual;
  #L1b4220.  v9:= v7.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L1b4224.  call temp:= `add`(v9, v8) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b422a.  return v6 @kind object;
}
procedure `void` `b`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.b:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b455c.  v0:= v4.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b4560.  call temp:= `keySet`(v0) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L1b4566.  v0:= temp @kind object;
  #L1b4568.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b456e.  v0:= temp @kind object;
  #L1b4570.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b4576.  v1:= temp;
  #L1b4578.  if v1 == 0 then goto L1b45ce;
  #L1b457c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b4582.  v1:= temp @kind object;
  #L1b4584.  v1:= (`java.lang.String`) v1 @kind object;
  #L1b4588.  v2:= v4.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b458c.  call temp:= `get`(v2, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b4592.  v2:= temp @kind object;
  #L1b4594.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L1b4598.  if v2 == 0 then goto L1b45ac;
  #L1b459c.  v2:= v4.`org.simpleframework.xml.core.TreeModel.a` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L1b45a0.  if v2 == 0 then goto L1b4570;
  #L1b45a4.  call temp:= `getAttribute`(v2, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1b45aa.  goto L1b4570;
  #L1b45ac.  v0:= new `org.simpleframework.xml.core.AttributeException`;
  #L1b45b0.  v2:= 2I;
  #L1b45b2.  v2:= new `java.lang.Object`[v2];
  #L1b45b6.  v3:= 0I;
  #L1b45b8.  v2[v3]:= v1 @kind object;
  #L1b45bc.  v1:= 1I;
  #L1b45be.  v2[v1]:= v5 @kind object;
  #L1b45c2.  v5:= "Ordered attribute '%s' does not exist in %s" @kind object;
  #L1b45c6.  call `<init>`(v0, v5, v2) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b45cc.  throw v0;
  #L1b45ce.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.TreeModel` v7 @kind this, `java.lang.Class` v8 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.c:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b45e0.  v0:= v7.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b45e4.  call temp:= `keySet`(v0) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L1b45ea.  v0:= temp @kind object;
  #L1b45ec.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b45f2.  v0:= temp @kind object;
  #L1b45f4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b45fa.  v1:= temp;
  #L1b45fc.  if v1 == 0 then goto L1b469a;
  #L1b4600.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b4606.  v1:= temp @kind object;
  #L1b4608.  v1:= (`java.lang.String`) v1 @kind object;
  #L1b460c.  v2:= v7.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L1b4610.  call temp:= `get`(v2, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b4616.  v2:= temp @kind object;
  #L1b4618.  v2:= (`org.simpleframework.xml.core.ModelList`) v2 @kind object;
  #L1b461c.  v3:= v7.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b4620.  call temp:= `get`(v3, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b4626.  v3:= temp @kind object;
  #L1b4628.  v3:= (`org.simpleframework.xml.core.Label`) v3 @kind object;
  #L1b462c.  v4:= 1I;
  #L1b462e.  v5:= 0I;
  #L1b4630.  v6:= 2I;
  #L1b4632.  if v2 != 0 then goto L1b4658;
  #L1b4636.  if v3 == 0 then goto L1b463c;
  #L1b463a.  goto L1b4658;
  #L1b463c.  v0:= new `org.simpleframework.xml.core.ElementException`;
  #L1b4640.  v2:= new `java.lang.Object`[v6];
  #L1b4644.  v2[v5]:= v1 @kind object;
  #L1b4648.  v2[v4]:= v8 @kind object;
  #L1b464c.  v8:= "Ordered element '%s' does not exist in %s" @kind object;
  #L1b4650.  call `<init>`(v0, v8, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b4656.  throw v0;
  #L1b4658.  if v2 == 0 then goto L1b468a;
  #L1b465c.  if v3 == 0 then goto L1b468a;
  #L1b4660.  call temp:= `isEmpty`(v2) @signature `Lorg/simpleframework/xml/core/ModelList;.isEmpty:()Z` @kind virtual;
  #L1b4666.  v2:= temp;
  #L1b4668.  if v2 == 0 then goto L1b466e;
  #L1b466c.  goto L1b468a;
  #L1b466e.  v0:= new `org.simpleframework.xml.core.ElementException`;
  #L1b4672.  v2:= new `java.lang.Object`[v6];
  #L1b4676.  v2[v5]:= v1 @kind object;
  #L1b467a.  v2[v4]:= v8 @kind object;
  #L1b467e.  v8:= "Element '%s' is also a path name in %s" @kind object;
  #L1b4682.  call `<init>`(v0, v8, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b4688.  throw v0;
  #L1b468a.  v2:= v7.`org.simpleframework.xml.core.TreeModel.a` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L1b468e.  if v2 == 0 then goto L1b45f4;
  #L1b4692.  call temp:= `getElement`(v2, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1b4698.  goto L1b45f4;
  #L1b469a.  return @kind void;
}
procedure `void` `d`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.d:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b46ac.  call temp:= `getExpression`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L1b46b2.  v5:= temp @kind object;
  #L1b46b4.  v0:= v4.`org.simpleframework.xml.core.TreeModel.a` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L1b46b8.  if v0 == 0 then goto L1b4706;
  #L1b46bc.  call temp:= `getPath`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:()Ljava/lang/String;` @kind interface;
  #L1b46c2.  v0:= temp @kind object;
  #L1b46c4.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:()Ljava/lang/String;` @kind interface;
  #L1b46ca.  v5:= temp @kind object;
  #L1b46cc.  call temp:= `equals`(v0, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b46d2.  v1:= temp;
  #L1b46d4.  if v1 == 0 then goto L1b46da;
  #L1b46d8.  goto L1b470a;
  #L1b46da.  v1:= new `org.simpleframework.xml.core.PathException`;
  #L1b46de.  v2:= 3I;
  #L1b46e0.  v2:= new `java.lang.Object`[v2];
  #L1b46e4.  v3:= 0I;
  #L1b46e6.  v2[v3]:= v0 @kind object;
  #L1b46ea.  v0:= 1I;
  #L1b46ec.  v2[v0]:= v5 @kind object;
  #L1b46f0.  v5:= v4.`org.simpleframework.xml.core.TreeModel.g` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L1b46f4.  v0:= 2I;
  #L1b46f6.  v2[v0]:= v5 @kind object;
  #L1b46fa.  v5:= "Path '%s' does not match '%s' in %s" @kind object;
  #L1b46fe.  call `<init>`(v1, v5, v2) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b4704.  throw v1;
  #L1b4706.  v4.`org.simpleframework.xml.core.TreeModel.a` @type ^`org.simpleframework.xml.core.Expression` := v5 @kind object;
  #L1b470a.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.e:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b471c.  v2:= v1.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b4720.  call temp:= `iterator`(v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b4726.  v2:= temp @kind object;
  #L1b4728.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b472e.  v0:= temp;
  #L1b4730.  if v0 == 0 then goto L1b474c;
  #L1b4734.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b473a.  v0:= temp @kind object;
  #L1b473c.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L1b4740.  if v0 == 0 then goto L1b4728;
  #L1b4744.  call `d`(v1, v0) @signature `Lorg/simpleframework/xml/core/TreeModel;.d:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1b474a.  goto L1b4728;
  #L1b474c.  v2:= v1.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b4750.  call temp:= `iterator`(v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b4756.  v2:= temp @kind object;
  #L1b4758.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b475e.  v0:= temp;
  #L1b4760.  if v0 == 0 then goto L1b477c;
  #L1b4764.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b476a.  v0:= temp @kind object;
  #L1b476c.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L1b4770.  if v0 == 0 then goto L1b4758;
  #L1b4774.  call `d`(v1, v0) @signature `Lorg/simpleframework/xml/core/TreeModel;.d:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1b477a.  goto L1b4758;
  #L1b477c.  v2:= v1.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b4780.  if v2 == 0 then goto L1b478a;
  #L1b4784.  call `d`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.d:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L1b478a.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.core.TreeModel` v8 @kind this, `java.lang.Class` v9 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.f:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b479c.  v0:= v8.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L1b47a0.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ModelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b47a6.  v0:= temp @kind object;
  #L1b47a8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b47ae.  v1:= temp;
  #L1b47b0.  if v1 == 0 then goto L1b4838;
  #L1b47b4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b47ba.  v1:= temp @kind object;
  #L1b47bc.  v1:= (`org.simpleframework.xml.core.ModelList`) v1 @kind object;
  #L1b47c0.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b47c6.  v1:= temp @kind object;
  #L1b47c8.  v2:= 1I;
  #L1b47ca.  v3:= 1I;
  #L1b47cc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b47d2.  v4:= temp;
  #L1b47d4.  if v4 == 0 then goto L1b47a8;
  #L1b47d8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b47de.  v4:= temp @kind object;
  #L1b47e0.  v4:= (`org.simpleframework.xml.core.Model`) v4 @kind object;
  #L1b47e4.  if v4 == 0 then goto L1b47cc;
  #L1b47e8.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Model;.getName:()Ljava/lang/String;` @kind interface;
  #L1b47ee.  v5:= temp @kind object;
  #L1b47f0.  call temp:= `getIndex`(v4) @signature `Lorg/simpleframework/xml/core/Model;.getIndex:()I` @kind interface;
  #L1b47f6.  v6:= temp;
  #L1b47f8.  v7:= v3 + 1;
  #L1b47fc.  if v6 != v3 then goto L1b480a;
  #L1b4800.  call `validate`(v4, v9) @signature `Lorg/simpleframework/xml/core/Model;.validate:(Ljava/lang/Class;)V` @kind interface;
  #L1b4806.  v3:= v7;
  #L1b4808.  goto L1b47cc;
  #L1b480a.  v0:= new `org.simpleframework.xml.core.ElementException`;
  #L1b480e.  v1:= 3I;
  #L1b4810.  v1:= new `java.lang.Object`[v1];
  #L1b4814.  v3:= 0I;
  #L1b4816.  v1[v3]:= v5 @kind object;
  #L1b481a.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1b4820.  v3:= temp @kind object;
  #L1b4822.  v1[v2]:= v3 @kind object;
  #L1b4826.  v2:= 2I;
  #L1b4828.  v1[v2]:= v9 @kind object;
  #L1b482c.  v9:= "Path section '%s[%s]' is out of sequence in %s" @kind object;
  #L1b4830.  call `<init>`(v0, v9, v1) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b4836.  throw v0;
  #L1b4838.  return @kind void;
}
procedure `void` `g`(`org.simpleframework.xml.core.TreeModel` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.g:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b484c.  v0:= v5.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b4850.  if v0 == 0 then goto L1b48b8;
  #L1b4854.  v0:= v5.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b4858.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L1b485e.  v0:= temp;
  #L1b4860.  v1:= 1I;
  #L1b4862.  v2:= 0I;
  #L1b4864.  v3:= 2I;
  #L1b4866.  if v0 == 0 then goto L1b4898;
  #L1b486a.  call temp:= `isComposite`(v5) @signature `Lorg/simpleframework/xml/core/TreeModel;.isComposite:()Z` @kind virtual;
  #L1b4870.  v0:= temp;
  #L1b4872.  if v0 != 0 then goto L1b4878;
  #L1b4876.  goto L1b48b8;
  #L1b4878.  v0:= new `org.simpleframework.xml.core.TextException`;
  #L1b487c.  v3:= new `java.lang.Object`[v3];
  #L1b4880.  v4:= v5.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b4884.  v3[v2]:= v4 @kind object;
  #L1b4888.  v3[v1]:= v6 @kind object;
  #L1b488c.  v6:= "Text annotation %s can not be used with paths in %s" @kind object;
  #L1b4890.  call `<init>`(v0, v6, v3) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b4896.  throw v0;
  #L1b4898.  v0:= new `org.simpleframework.xml.core.TextException`;
  #L1b489c.  v3:= new `java.lang.Object`[v3];
  #L1b48a0.  v4:= v5.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b48a4.  v3[v2]:= v4 @kind object;
  #L1b48a8.  v3[v1]:= v6 @kind object;
  #L1b48ac.  v6:= "Text annotation %s used with elements in %s" @kind object;
  #L1b48b0.  call `<init>`(v0, v6, v3) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b48b6.  throw v0;
  #L1b48b8.  return @kind void;
}
procedure `org.simpleframework.xml.core.LabelMap` `getAttributes`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b41b8.  v0:= v1.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b41bc.  call temp:= `getLabels`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabels:()Lorg/simpleframework/xml/core/LabelMap;` @kind virtual;
  #L1b41c2.  v0:= temp @kind object;
  #L1b41c4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.LabelMap` `getElements`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getElements:()Lorg/simpleframework/xml/core/LabelMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b41d8.  v0:= v1.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b41dc.  call temp:= `getLabels`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabels:()Lorg/simpleframework/xml/core/LabelMap;` @kind virtual;
  #L1b41e2.  v0:= temp @kind object;
  #L1b41e4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getExpression`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b4180.  v0:= v1.`org.simpleframework.xml.core.TreeModel.a` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L1b4184.  return v0 @kind object;
}
procedure `int` `getIndex`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b40a8.  v0:= v1.`org.simpleframework.xml.core.TreeModel.l` @type ^`int`;
  #L1b40ac.  return v0;
}
procedure `org.simpleframework.xml.core.ModelMap` `getModels`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getModels:()Lorg/simpleframework/xml/core/ModelMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b42d8.  v0:= v1.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L1b42dc.  call temp:= `getModels`(v0) @signature `Lorg/simpleframework/xml/core/ModelMap;.getModels:()Lorg/simpleframework/xml/core/ModelMap;` @kind virtual;
  #L1b42e2.  v0:= temp @kind object;
  #L1b42e4.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b40c0.  v0:= v1.`org.simpleframework.xml.core.TreeModel.h` @type ^`java.lang.String` @kind object;
  #L1b40c4.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b40d8.  v0:= v1.`org.simpleframework.xml.core.TreeModel.i` @type ^`java.lang.String` @kind object;
  #L1b40dc.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getText`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getText:()Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b4198.  v0:= v1.`org.simpleframework.xml.core.TreeModel.k` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b419c.  if v0 == 0 then goto L1b41a2;
  #L1b41a0.  return v0 @kind object;
  #L1b41a2.  v0:= v1.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b41a6.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.isAttribute:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b3f80.  v0:= v1.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b3f84.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b3f8a.  v2:= temp;
  #L1b3f8c.  return v2;
}
procedure `boolean` `isComposite`(`org.simpleframework.xml.core.TreeModel` v4 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.isComposite:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b3fa0.  v0:= v4.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L1b3fa4.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ModelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b3faa.  v0:= temp @kind object;
  #L1b3fac.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b3fb2.  v1:= temp;
  #L1b3fb4.  v2:= 1I;
  #L1b3fb6.  if v1 == 0 then goto L1b3ff8;
  #L1b3fba.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b3fc0.  v1:= temp @kind object;
  #L1b3fc2.  v1:= (`org.simpleframework.xml.core.ModelList`) v1 @kind object;
  #L1b3fc6.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b3fcc.  v1:= temp @kind object;
  #L1b3fce.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b3fd4.  v3:= temp;
  #L1b3fd6.  if v3 == 0 then goto L1b3fac;
  #L1b3fda.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b3fe0.  v3:= temp @kind object;
  #L1b3fe2.  v3:= (`org.simpleframework.xml.core.Model`) v3 @kind object;
  #L1b3fe6.  if v3 == 0 then goto L1b3fce;
  #L1b3fea.  call temp:= `isEmpty`(v3) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L1b3ff0.  v3:= temp;
  #L1b3ff2.  if v3 != 0 then goto L1b3fce;
  #L1b3ff6.  return v2;
  #L1b3ff8.  v0:= v4.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L1b3ffc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L1b4002.  v0:= temp;
  #L1b4004.  v0:= v0 ^~ v2 @kind int;
  #L1b4006.  return v0;
}
procedure `boolean` `isElement`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.isElement:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b4018.  v0:= v1.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b401c.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b4022.  v2:= temp;
  #L1b4024.  return v2;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.TreeModel` v2 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b4038.  v0:= v2.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b403c.  v1:= 0I;
  #L1b403e.  if v0 == 0 then goto L1b4044;
  #L1b4042.  return v1;
  #L1b4044.  v0:= v2.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b4048.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L1b404e.  v0:= temp;
  #L1b4050.  if v0 != 0 then goto L1b4056;
  #L1b4054.  return v1;
  #L1b4056.  v0:= v2.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b405a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L1b4060.  v0:= temp;
  #L1b4062.  if v0 != 0 then goto L1b4068;
  #L1b4066.  return v1;
  #L1b4068.  call temp:= `isComposite`(v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.isComposite:()Z` @kind virtual;
  #L1b406e.  v0:= temp;
  #L1b4070.  v0:= v0 ^~ 1;
  #L1b4074.  return v0;
}
procedure `boolean` `isModel`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.isModel:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b4088.  v0:= v1.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L1b408c.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b4092.  v2:= temp;
  #L1b4094.  return v2;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.TreeModel` v3 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b4130.  v0:= new `java.util.ArrayList`;
  #L1b4134.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1b413a.  v1:= v3.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L1b413e.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b4144.  v1:= temp @kind object;
  #L1b4146.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b414c.  v2:= temp;
  #L1b414e.  if v2 == 0 then goto L1b4166;
  #L1b4152.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b4158.  v2:= temp @kind object;
  #L1b415a.  v2:= (`java.lang.String`) v2 @kind object;
  #L1b415e.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b4164.  goto L1b4146;
  #L1b4166.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b416c.  v0:= temp @kind object;
  #L1b416e.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Model` `lookup`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b423c.  v0:= v1.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L1b4240.  call temp:= `lookup`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/ModelMap;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind virtual;
  #L1b4246.  v2:= temp @kind object;
  #L1b4248.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Model` `lookup`(`org.simpleframework.xml.core.TreeModel` v3 @kind this, `org.simpleframework.xml.core.Expression` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b425c.  call temp:= `getFirst`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L1b4262.  v0:= temp @kind object;
  #L1b4264.  call temp:= `getIndex`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L1b426a.  v1:= temp;
  #L1b426c.  call temp:= `lookup`(v3, v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind virtual;
  #L1b4272.  v0:= temp @kind object;
  #L1b4274.  call temp:= `isPath`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L1b427a.  v1:= temp;
  #L1b427c.  if v1 == 0 then goto L1b429a;
  #L1b4280.  v1:= 1I;
  #L1b4282.  v2:= 0I;
  #L1b4284.  call temp:= `getPath`(v4, v1, v2) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L1b428a.  v4:= temp @kind object;
  #L1b428c.  if v0 == 0 then goto L1b429a;
  #L1b4290.  call temp:= `lookup`(v0, v4) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L1b4296.  v4:= temp @kind object;
  #L1b4298.  return v4 @kind object;
  #L1b429a.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Model` `register`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b42ac.  v0:= v1.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L1b42b0.  call temp:= `lookup`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/ModelMap;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind virtual;
  #L1b42b6.  v0:= temp @kind object;
  #L1b42b8.  if v0 != 0 then goto L1b42c6;
  #L1b42bc.  call temp:= `a`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/TreeModel;.a:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L1b42c2.  v2:= temp @kind object;
  #L1b42c4.  return v2 @kind object;
  #L1b42c6.  return v0 @kind object;
}
procedure `void` `register`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `org.simpleframework.xml.core.Label` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.register:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b4380.  call temp:= `isAttribute`(v2) @signature `Lorg/simpleframework/xml/core/Label;.isAttribute:()Z` @kind interface;
  #L1b4386.  v0:= temp;
  #L1b4388.  if v0 == 0 then goto L1b4394;
  #L1b438c.  call `registerAttribute`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerAttribute:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L1b4392.  goto L1b43ae;
  #L1b4394.  call temp:= `isText`(v2) @signature `Lorg/simpleframework/xml/core/Label;.isText:()Z` @kind interface;
  #L1b439a.  v0:= temp;
  #L1b439c.  if v0 == 0 then goto L1b43a8;
  #L1b43a0.  call `registerText`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L1b43a6.  goto L1b43ae;
  #L1b43a8.  call `registerElement`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerElement:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L1b43ae.  return @kind void;
}
procedure `void` `registerAttribute`(`org.simpleframework.xml.core.TreeModel` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerAttribute:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b43c0.  v0:= v2.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b43c4.  v1:= 0I;
  #L1b43c6.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b43cc.  return @kind void;
}
procedure `void` `registerAttribute`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerAttribute:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b43e0.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L1b43e6.  v0:= temp @kind object;
  #L1b43e8.  v1:= v4.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b43ec.  call temp:= `get`(v1, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b43f2.  v1:= temp @kind object;
  #L1b43f4.  if v1 != 0 then goto L1b4404;
  #L1b43f8.  v1:= v4.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b43fc.  call temp:= `put`(v1, v0, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b4402.  return @kind void;
  #L1b4404.  v1:= new `org.simpleframework.xml.core.AttributeException`;
  #L1b4408.  v2:= 2I;
  #L1b440a.  v2:= new `java.lang.Object`[v2];
  #L1b440e.  v3:= 0I;
  #L1b4410.  v2[v3]:= v0 @kind object;
  #L1b4414.  v0:= 1I;
  #L1b4416.  v2[v0]:= v5 @kind object;
  #L1b441a.  v5:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L1b441e.  call `<init>`(v1, v5, v2) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b4424.  throw v1;
}
procedure `void` `registerElement`(`org.simpleframework.xml.core.TreeModel` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerElement:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b4438.  v0:= v2.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L1b443c.  call temp:= `contains`(v0, v3) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b4442.  v0:= temp;
  #L1b4444.  if v0 != 0 then goto L1b4452;
  #L1b4448.  v0:= v2.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L1b444c.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b4452.  v0:= v2.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b4456.  v1:= 0I;
  #L1b4458.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b445e.  return @kind void;
}
procedure `void` `registerElement`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerElement:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b4470.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L1b4476.  v0:= temp @kind object;
  #L1b4478.  v1:= v4.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b447c.  call temp:= `get`(v1, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b4482.  v1:= temp @kind object;
  #L1b4484.  if v1 != 0 then goto L1b44be;
  #L1b4488.  v1:= v4.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L1b448c.  call temp:= `contains`(v1, v0) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b4492.  v1:= temp;
  #L1b4494.  if v1 != 0 then goto L1b44a2;
  #L1b4498.  v1:= v4.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L1b449c.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b44a2.  call temp:= `isTextList`(v5) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L1b44a8.  v1:= temp;
  #L1b44aa.  if v1 == 0 then goto L1b44b2;
  #L1b44ae.  v4.`org.simpleframework.xml.core.TreeModel.k` @type ^`org.simpleframework.xml.core.Label` := v5 @kind object;
  #L1b44b2.  v1:= v4.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L1b44b6.  call temp:= `put`(v1, v0, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b44bc.  return @kind void;
  #L1b44be.  v1:= new `org.simpleframework.xml.core.ElementException`;
  #L1b44c2.  v2:= 2I;
  #L1b44c4.  v2:= new `java.lang.Object`[v2];
  #L1b44c8.  v3:= 0I;
  #L1b44ca.  v2[v3]:= v0 @kind object;
  #L1b44ce.  v0:= 1I;
  #L1b44d0.  v2[v0]:= v5 @kind object;
  #L1b44d4.  v5:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L1b44d8.  call `<init>`(v1, v5, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b44de.  throw v1;
}
procedure `void` `registerText`(`org.simpleframework.xml.core.TreeModel` v3 @kind this, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b44f0.  v0:= v3.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1b44f4.  if v0 != 0 then goto L1b44fe;
  #L1b44f8.  v3.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` := v4 @kind object;
  #L1b44fc.  return @kind void;
  #L1b44fe.  v0:= new `org.simpleframework.xml.core.TextException`;
  #L1b4502.  v1:= 1I;
  #L1b4504.  v1:= new `java.lang.Object`[v1];
  #L1b4508.  v2:= 0I;
  #L1b450a.  v1[v2]:= v4 @kind object;
  #L1b450e.  v4:= "Duplicate text annotation on %s" @kind object;
  #L1b4512.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b4518.  throw v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.TreeModel` v3 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b40f0.  v0:= 2I;
  #L1b40f2.  v0:= new `java.lang.Object`[v0];
  #L1b40f6.  v1:= v3.`org.simpleframework.xml.core.TreeModel.h` @type ^`java.lang.String` @kind object;
  #L1b40fa.  v2:= 0I;
  #L1b40fc.  v0[v2]:= v1 @kind object;
  #L1b4100.  v1:= v3.`org.simpleframework.xml.core.TreeModel.l` @type ^`int`;
  #L1b4104.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1b410a.  v1:= temp @kind object;
  #L1b410c.  v2:= 1I;
  #L1b410e.  v0[v2]:= v1 @kind object;
  #L1b4112.  v1:= "model '%s[%s]'" @kind object;
  #L1b4116.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b411c.  v0:= temp @kind object;
  #L1b411e.  return v0 @kind object;
}
procedure `void` `validate`(`org.simpleframework.xml.core.TreeModel` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.validate:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L1b452c.  call `e`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.e:(Ljava/lang/Class;)V` @kind direct;
  #L1b4532.  call `b`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.b:(Ljava/lang/Class;)V` @kind direct;
  #L1b4538.  call `c`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.c:(Ljava/lang/Class;)V` @kind direct;
  #L1b453e.  call `f`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.f:(Ljava/lang/Class;)V` @kind direct;
  #L1b4544.  call `g`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.g:(Ljava/lang/Class;)V` @kind direct;
  #L1b454a.  return @kind void;
}
