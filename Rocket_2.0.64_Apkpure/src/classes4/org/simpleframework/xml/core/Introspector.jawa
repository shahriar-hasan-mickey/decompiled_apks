record `org.simpleframework.xml.core.Introspector` @kind class @AccessFlag PUBLIC {
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.Introspector.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Contact` `org.simpleframework.xml.core.Introspector.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.Introspector.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.Introspector.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `org.simpleframework.xml.core.Label` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1aa2ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1aa2f2.  call temp:= `getAnnotation`(v2) @signature `Lorg/simpleframework/xml/core/Contact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L1aa2f8.  v0:= temp @kind object;
  #L1aa2fa.  v1.`org.simpleframework.xml.core.Introspector.a` @type ^`java.lang.annotation.Annotation` := v0 @kind object;
  #L1aa2fe.  v1.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` := v2 @kind object;
  #L1aa302.  v1.`org.simpleframework.xml.core.Introspector.c` @type ^`org.simpleframework.xml.stream.Format` := v4 @kind object;
  #L1aa306.  v1.`org.simpleframework.xml.core.Introspector.d` @type ^`org.simpleframework.xml.core.Label` := v3 @kind object;
  #L1aa30a.  return @kind void;
}
procedure `java.lang.String` `a`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1aa0a0.  v0:= v2.`org.simpleframework.xml.core.Introspector.d` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1aa0a4.  call temp:= `getOverride`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getOverride:()Ljava/lang/String;` @kind interface;
  #L1aa0aa.  v0:= temp @kind object;
  #L1aa0ac.  call temp:= `isEmpty`(v2, v0) @signature `Lorg/simpleframework/xml/core/Introspector;.isEmpty:(Ljava/lang/String;)Z` @kind virtual;
  #L1aa0b2.  v1:= temp;
  #L1aa0b4.  if v1 != 0 then goto L1aa0ba;
  #L1aa0b8.  return v0 @kind object;
  #L1aa0ba.  v0:= v2.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L1aa0be.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Contact;.getName:()Ljava/lang/String;` @kind interface;
  #L1aa0c4.  v0:= temp @kind object;
  #L1aa0c6.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.b:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1aa150.  call temp:= `c`(v1, v2) @signature `Lorg/simpleframework/xml/core/Introspector;.c:(Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L1aa156.  v0:= temp @kind object;
  #L1aa158.  if v0 == 0 then goto L1aa15e;
  #L1aa15c.  return v0 @kind object;
  #L1aa15e.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1aa164.  v2:= temp @kind object;
  #L1aa166.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1aa16c.  v2:= temp @kind object;
  #L1aa16e.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`org.simpleframework.xml.core.Introspector` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.c:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1aa1b8.  v0:= v3 @kind object;
  #L1aa1ba.  if v0 == 0 then goto L1aa1d6;
  #L1aa1be.  call temp:= `d`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Introspector;.d:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L1aa1c4.  v1:= temp @kind object;
  #L1aa1c6.  if v1 == 0 then goto L1aa1cc;
  #L1aa1ca.  return v1 @kind object;
  #L1aa1cc.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1aa1d2.  v0:= temp @kind object;
  #L1aa1d4.  goto L1aa1ba;
  #L1aa1d6.  v3:= 0I;
  #L1aa1d8.  return v3 @kind object;
}
procedure `java.lang.String` `d`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.d:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1aa1ec.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1aa1f2.  v2:= temp @kind object;
  #L1aa1f4.  v0:= constclass @type ^`org.simpleframework.xml.Root` @kind object;
  #L1aa1f8.  call temp:= `getAnnotation`(v3, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1aa1fe.  v3:= temp @kind object;
  #L1aa200.  v3:= (`org.simpleframework.xml.Root`) v3 @kind object;
  #L1aa204.  if v3 == 0 then goto L1aa228;
  #L1aa208.  call temp:= `name`(v3) @signature `Lorg/simpleframework/xml/Root;.name:()Ljava/lang/String;` @kind interface;
  #L1aa20e.  v3:= temp @kind object;
  #L1aa210.  call temp:= `isEmpty`(v1, v3) @signature `Lorg/simpleframework/xml/core/Introspector;.isEmpty:(Ljava/lang/String;)Z` @kind virtual;
  #L1aa216.  v0:= temp;
  #L1aa218.  if v0 != 0 then goto L1aa21e;
  #L1aa21c.  return v3 @kind object;
  #L1aa21e.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1aa224.  v2:= temp @kind object;
  #L1aa226.  return v2 @kind object;
  #L1aa228.  v2:= 0I;
  #L1aa22a.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Contact` `getContact`(`org.simpleframework.xml.core.Introspector` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getContact:()Lorg/simpleframework/xml/core/Contact;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa274.  v0:= v1.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L1aa278.  return v0 @kind object;
}
procedure `org.simpleframework.xml.strategy.Type` `getDependent`(`org.simpleframework.xml.core.Introspector` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa2cc.  v0:= v1.`org.simpleframework.xml.core.Introspector.d` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1aa2d0.  call temp:= `getDependent`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @kind interface;
  #L1aa2d6.  v0:= temp @kind object;
  #L1aa2d8.  return v0 @kind object;
}
procedure `java.lang.String` `getEntry`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getEntry:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1aa0d8.  call temp:= `getDependent`(v2) @signature `Lorg/simpleframework/xml/core/Introspector;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @kind virtual;
  #L1aa0de.  v0:= temp @kind object;
  #L1aa0e0.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L1aa0e6.  v0:= temp @kind object;
  #L1aa0e8.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1aa0ee.  v1:= temp;
  #L1aa0f0.  if v1 == 0 then goto L1aa0fc;
  #L1aa0f4.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1aa0fa.  v0:= temp @kind object;
  #L1aa0fc.  call temp:= `b`(v2, v0) @signature `Lorg/simpleframework/xml/core/Introspector;.b:(Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L1aa102.  v0:= temp @kind object;
  #L1aa104.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getExpression`(`org.simpleframework.xml.core.Introspector` v4 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aa28c.  call temp:= `getPath`(v4) @signature `Lorg/simpleframework/xml/core/Introspector;.getPath:()Ljava/lang/String;` @kind virtual;
  #L1aa292.  v0:= temp @kind object;
  #L1aa294.  if v0 == 0 then goto L1aa2ac;
  #L1aa298.  v1:= new `org.simpleframework.xml.core.PathParser`;
  #L1aa29c.  v2:= v4.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L1aa2a0.  v3:= v4.`org.simpleframework.xml.core.Introspector.c` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L1aa2a4.  call `<init>`(v1, v0, v2, v3) @signature `Lorg/simpleframework/xml/core/PathParser;.<init>:(Ljava/lang/String;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L1aa2aa.  return v1 @kind object;
  #L1aa2ac.  v0:= new `org.simpleframework.xml.core.EmptyExpression`;
  #L1aa2b0.  v1:= v4.`org.simpleframework.xml.core.Introspector.c` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L1aa2b4.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L1aa2ba.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1aa118.  v0:= v2.`org.simpleframework.xml.core.Introspector.d` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1aa11c.  call temp:= `getEntry`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getEntry:()Ljava/lang/String;` @kind interface;
  #L1aa122.  v0:= temp @kind object;
  #L1aa124.  v1:= v2.`org.simpleframework.xml.core.Introspector.d` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L1aa128.  call temp:= `isInline`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L1aa12e.  v1:= temp;
  #L1aa130.  if v1 != 0 then goto L1aa13c;
  #L1aa134.  call temp:= `a`(v2) @signature `Lorg/simpleframework/xml/core/Introspector;.a:()Ljava/lang/String;` @kind direct;
  #L1aa13a.  v0:= temp @kind object;
  #L1aa13c.  return v0 @kind object;
}
procedure `java.lang.String` `getPath`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1aa180.  v0:= v2.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L1aa184.  v1:= constclass @type ^`org.simpleframework.xml.Path` @kind object;
  #L1aa188.  call temp:= `getAnnotation`(v0, v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L1aa18e.  v0:= temp @kind object;
  #L1aa190.  v0:= (`org.simpleframework.xml.Path`) v0 @kind object;
  #L1aa194.  if v0 != 0 then goto L1aa19c;
  #L1aa198.  v0:= 0I;
  #L1aa19a.  return v0 @kind object;
  #L1aa19c.  call temp:= `value`(v0) @signature `Lorg/simpleframework/xml/Path;.value:()Ljava/lang/String;` @kind interface;
  #L1aa1a2.  v0:= temp @kind object;
  #L1aa1a4.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.isEmpty:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa078.  v0:= 1I;
  #L1aa07a.  if v2 == 0 then goto L1aa08e;
  #L1aa07e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1aa084.  v2:= temp;
  #L1aa086.  if v2 != 0 then goto L1aa08c;
  #L1aa08a.  goto L1aa08e;
  #L1aa08c.  v0:= 0I;
  #L1aa08e.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.Introspector` v3 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1aa23c.  v0:= 2I;
  #L1aa23e.  v0:= new `java.lang.Object`[v0];
  #L1aa242.  v1:= v3.`org.simpleframework.xml.core.Introspector.a` @type ^`java.lang.annotation.Annotation` @kind object;
  #L1aa246.  v2:= 0I;
  #L1aa248.  v0[v2]:= v1 @kind object;
  #L1aa24c.  v1:= v3.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L1aa250.  v2:= 1I;
  #L1aa252.  v0[v2]:= v1 @kind object;
  #L1aa256.  v1:= "%s on %s" @kind object;
  #L1aa25a.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1aa260.  v0:= temp @kind object;
  #L1aa262.  return v0 @kind object;
}
