record `org.simpleframework.xml.core.Support` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.filter.Filter` @kind interface {
  `org.simpleframework.xml.core.InstanceFactory` `org.simpleframework.xml.core.Support.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ScannerFactory` `org.simpleframework.xml.core.Support.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.DetailExtractor` `org.simpleframework.xml.core.Support.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.DetailExtractor` `org.simpleframework.xml.core.Support.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.LabelExtractor` `org.simpleframework.xml.core.Support.e` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.transform.Transformer` `org.simpleframework.xml.core.Support.f` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.transform.Matcher` `org.simpleframework.xml.core.Support.g` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.filter.Filter` `org.simpleframework.xml.core.Support.h` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.Support.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Support;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b2c8c.  v0:= new `org.simpleframework.xml.filter.PlatformFilter`;
  #L1b2c90.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/filter/PlatformFilter;.<init>:()V` @kind direct;
  #L1b2c96.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L1b2c9c.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.filter.Filter` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b2cb0.  v0:= new `org.simpleframework.xml.core.EmptyMatcher`;
  #L1b2cb4.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/EmptyMatcher;.<init>:()V` @kind direct;
  #L1b2cba.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;)V` @kind direct;
  #L1b2cc0.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.filter.Filter` v2 @kind object, `org.simpleframework.xml.transform.Matcher` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b2cd4.  v0:= new `org.simpleframework.xml.stream.Format`;
  #L1b2cd8.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.<init>:()V` @kind direct;
  #L1b2cde.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L1b2ce4.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v2 @kind this, `org.simpleframework.xml.filter.Filter` v3 @kind object, `org.simpleframework.xml.transform.Matcher` v4 @kind object, `org.simpleframework.xml.stream.Format` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1b2cf8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b2cfe.  v0:= new `org.simpleframework.xml.core.DetailExtractor`;
  #L1b2d02.  v1:= `@@org.simpleframework.xml.DefaultType.FIELD` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L1b2d06.  call `<init>`(v0, v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L1b2d0c.  v2.`org.simpleframework.xml.core.Support.c` @type ^`org.simpleframework.xml.core.DetailExtractor` := v0 @kind object;
  #L1b2d10.  v0:= new `org.simpleframework.xml.transform.Transformer`;
  #L1b2d14.  call `<init>`(v0, v4) @signature `Lorg/simpleframework/xml/transform/Transformer;.<init>:(Lorg/simpleframework/xml/transform/Matcher;)V` @kind direct;
  #L1b2d1a.  v2.`org.simpleframework.xml.core.Support.f` @type ^`org.simpleframework.xml.transform.Transformer` := v0 @kind object;
  #L1b2d1e.  v0:= new `org.simpleframework.xml.core.ScannerFactory`;
  #L1b2d22.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/ScannerFactory;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1b2d28.  v2.`org.simpleframework.xml.core.Support.b` @type ^`org.simpleframework.xml.core.ScannerFactory` := v0 @kind object;
  #L1b2d2c.  v0:= new `org.simpleframework.xml.core.DetailExtractor`;
  #L1b2d30.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1b2d36.  v2.`org.simpleframework.xml.core.Support.d` @type ^`org.simpleframework.xml.core.DetailExtractor` := v0 @kind object;
  #L1b2d3a.  v0:= new `org.simpleframework.xml.core.LabelExtractor`;
  #L1b2d3e.  call `<init>`(v0, v5) @signature `Lorg/simpleframework/xml/core/LabelExtractor;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L1b2d44.  v2.`org.simpleframework.xml.core.Support.e` @type ^`org.simpleframework.xml.core.LabelExtractor` := v0 @kind object;
  #L1b2d48.  v0:= new `org.simpleframework.xml.core.InstanceFactory`;
  #L1b2d4c.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.<init>:()V` @kind direct;
  #L1b2d52.  v2.`org.simpleframework.xml.core.Support.a` @type ^`org.simpleframework.xml.core.InstanceFactory` := v0 @kind object;
  #L1b2d56.  v2.`org.simpleframework.xml.core.Support.g` @type ^`org.simpleframework.xml.transform.Matcher` := v4 @kind object;
  #L1b2d5a.  v2.`org.simpleframework.xml.core.Support.h` @type ^`org.simpleframework.xml.filter.Filter` := v3 @kind object;
  #L1b2d5e.  v2.`org.simpleframework.xml.core.Support.i` @type ^`org.simpleframework.xml.stream.Format` := v5 @kind object;
  #L1b2d62.  return @kind void;
}
procedure `java.lang.String` `a`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.a:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b29fc.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b2a02.  v0:= temp;
  #L1b2a04.  if v0 == 0 then goto L1b2a10;
  #L1b2a08.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b2a0e.  v2:= temp @kind object;
  #L1b2a10.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2a16.  v0:= temp @kind object;
  #L1b2a18.  call temp:= `isPrimitive`(v2) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L1b2a1e.  v2:= temp;
  #L1b2a20.  if v2 == 0 then goto L1b2a26;
  #L1b2a24.  return v0 @kind object;
  #L1b2a26.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1b2a2c.  v2:= temp @kind object;
  #L1b2a2e.  return v2 @kind object;
}
procedure `java.lang.Class` `getPrimitive`(`java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b295c.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b2960.  if v1 != v0 then goto L1b296a;
  #L1b2964.  v1:= constclass @type ^`java.lang.Double` @kind object;
  #L1b2968.  return v1 @kind object;
  #L1b296a.  v0:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b296e.  if v1 != v0 then goto L1b2978;
  #L1b2972.  v1:= constclass @type ^`java.lang.Float` @kind object;
  #L1b2976.  return v1 @kind object;
  #L1b2978.  v0:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b297c.  if v1 != v0 then goto L1b2986;
  #L1b2980.  v1:= constclass @type ^`java.lang.Integer` @kind object;
  #L1b2984.  return v1 @kind object;
  #L1b2986.  v0:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b298a.  if v1 != v0 then goto L1b2994;
  #L1b298e.  v1:= constclass @type ^`java.lang.Long` @kind object;
  #L1b2992.  return v1 @kind object;
  #L1b2994.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b2998.  if v1 != v0 then goto L1b29a2;
  #L1b299c.  v1:= constclass @type ^`java.lang.Boolean` @kind object;
  #L1b29a0.  return v1 @kind object;
  #L1b29a2.  v0:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b29a6.  if v1 != v0 then goto L1b29b0;
  #L1b29aa.  v1:= constclass @type ^`java.lang.Character` @kind object;
  #L1b29ae.  return v1 @kind object;
  #L1b29b0.  v0:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b29b4.  if v1 != v0 then goto L1b29be;
  #L1b29b8.  v1:= constclass @type ^`java.lang.Short` @kind object;
  #L1b29bc.  return v1 @kind object;
  #L1b29be.  v0:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b29c2.  if v1 != v0 then goto L1b29ca;
  #L1b29c6.  v1:= constclass @type ^`java.lang.Byte` @kind object;
  #L1b29ca.  return v1 @kind object;
}
procedure `boolean` `isAssignable`(`java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b2800.  call temp:= `isPrimitive`(v1) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L1b2806.  v0:= temp;
  #L1b2808.  if v0 == 0 then goto L1b2814;
  #L1b280c.  call temp:= `getPrimitive`(v1) @signature `Lorg/simpleframework/xml/core/Support;.getPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b2812.  v1:= temp @kind object;
  #L1b2814.  call temp:= `isPrimitive`(v2) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L1b281a.  v0:= temp;
  #L1b281c.  if v0 == 0 then goto L1b2828;
  #L1b2820.  call temp:= `getPrimitive`(v2) @signature `Lorg/simpleframework/xml/core/Support;.getPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b2826.  v2:= temp @kind object;
  #L1b2828.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b282e.  v1:= temp;
  #L1b2830.  return v1;
}
procedure `boolean` `isFloat`(`java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isFloat:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b2884.  v0:= constclass @type ^`java.lang.Double` @kind object;
  #L1b2888.  v1:= 1I;
  #L1b288a.  if v2 != v0 then goto L1b2890;
  #L1b288e.  return v1;
  #L1b2890.  v0:= constclass @type ^`java.lang.Float` @kind object;
  #L1b2894.  if v2 != v0 then goto L1b289a;
  #L1b2898.  return v1;
  #L1b289a.  v0:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b289e.  if v2 != v0 then goto L1b28a4;
  #L1b28a2.  return v1;
  #L1b28a4.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b28a8.  if v2 != v0 then goto L1b28ae;
  #L1b28ac.  return v1;
  #L1b28ae.  v2:= 0I;
  #L1b28b0.  return v2;
}
procedure `org.simpleframework.xml.core.Detail` `getDetail`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2b68.  v0:= 0I;
  #L1b2b6a.  call temp:= `getDetail`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L1b2b70.  v2:= temp @kind object;
  #L1b2b72.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Detail` `getDetail`(`org.simpleframework.xml.core.Support` v0 @kind this, `java.lang.Class` v1 @kind object, `org.simpleframework.xml.DefaultType` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/Detail;` @AccessFlag PUBLIC {
    temp;

  #L1b2b84.  if v2 == 0 then goto L1b2b96;
  #L1b2b88.  v2:= v0.`org.simpleframework.xml.core.Support.c` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L1b2b8c.  call temp:= `getDetail`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L1b2b92.  v1:= temp @kind object;
  #L1b2b94.  return v1 @kind object;
  #L1b2b96.  v2:= v0.`org.simpleframework.xml.core.Support.d` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L1b2b9a.  call temp:= `getDetail`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L1b2ba0.  v1:= temp @kind object;
  #L1b2ba2.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getFields`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2ad0.  v0:= 0I;
  #L1b2ad2.  call temp:= `getFields`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L1b2ad8.  v2:= temp @kind object;
  #L1b2ada.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getFields`(`org.simpleframework.xml.core.Support` v0 @kind this, `java.lang.Class` v1 @kind object, `org.simpleframework.xml.DefaultType` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;

  #L1b2aec.  if v2 == 0 then goto L1b2afe;
  #L1b2af0.  v2:= v0.`org.simpleframework.xml.core.Support.c` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L1b2af4.  call temp:= `getFields`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L1b2afa.  v1:= temp @kind object;
  #L1b2afc.  return v1 @kind object;
  #L1b2afe.  v2:= v0.`org.simpleframework.xml.core.Support.d` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L1b2b02.  call temp:= `getFields`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L1b2b08.  v1:= temp @kind object;
  #L1b2b0a.  return v1 @kind object;
}
procedure `org.simpleframework.xml.stream.Format` `getFormat`(`org.simpleframework.xml.core.Support` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Support;.getFormat:()Lorg/simpleframework/xml/stream/Format;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2c34.  v0:= v1.`org.simpleframework.xml.core.Support.i` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L1b2c38.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Instance` `getInstance`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2bb4.  v0:= v1.`org.simpleframework.xml.core.Support.a` @type ^`org.simpleframework.xml.core.InstanceFactory` @kind object;
  #L1b2bb8.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L1b2bbe.  v2:= temp @kind object;
  #L1b2bc0.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Instance` `getInstance`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.strategy.Value` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getInstance:(Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/core/Instance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2bd4.  v0:= v1.`org.simpleframework.xml.core.Support.a` @type ^`org.simpleframework.xml.core.InstanceFactory` @kind object;
  #L1b2bd8.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.getInstance:(Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L1b2bde.  v2:= temp @kind object;
  #L1b2be0.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getLabel`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2bf4.  v0:= v1.`org.simpleframework.xml.core.Support.e` @type ^`org.simpleframework.xml.core.LabelExtractor` @kind object;
  #L1b2bf8.  call temp:= `getLabel`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/LabelExtractor;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L1b2bfe.  v2:= temp @kind object;
  #L1b2c00.  return v2 @kind object;
}
procedure `java.util.List` `getLabels`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getLabels:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2ab0.  v0:= v1.`org.simpleframework.xml.core.Support.e` @type ^`org.simpleframework.xml.core.LabelExtractor` @kind object;
  #L1b2ab4.  call temp:= `getList`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/LabelExtractor;.getList:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Ljava/util/List;` @kind virtual;
  #L1b2aba.  v2:= temp @kind object;
  #L1b2abc.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getMethods`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2b1c.  v0:= 0I;
  #L1b2b1e.  call temp:= `getMethods`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.getMethods:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L1b2b24.  v2:= temp @kind object;
  #L1b2b26.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getMethods`(`org.simpleframework.xml.core.Support` v0 @kind this, `java.lang.Class` v1 @kind object, `org.simpleframework.xml.DefaultType` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getMethods:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;

  #L1b2b38.  if v2 == 0 then goto L1b2b4a;
  #L1b2b3c.  v2:= v0.`org.simpleframework.xml.core.Support.c` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L1b2b40.  call temp:= `getMethods`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L1b2b46.  v1:= temp @kind object;
  #L1b2b48.  return v1 @kind object;
  #L1b2b4a.  v2:= v0.`org.simpleframework.xml.core.Support.d` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L1b2b4e.  call temp:= `getMethods`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L1b2b54.  v1:= temp @kind object;
  #L1b2b56.  return v1 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2a40.  call temp:= `getScanner`(v1, v2) @signature `Lorg/simpleframework/xml/core/Support;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind virtual;
  #L1b2a46.  v0:= temp @kind object;
  #L1b2a48.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getName:()Ljava/lang/String;` @kind interface;
  #L1b2a4e.  v0:= temp @kind object;
  #L1b2a50.  if v0 == 0 then goto L1b2a56;
  #L1b2a54.  return v0 @kind object;
  #L1b2a56.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/core/Support;.a:(Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L1b2a5c.  v2:= temp @kind object;
  #L1b2a5e.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Scanner` `getScanner`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2c14.  v0:= v1.`org.simpleframework.xml.core.Support.b` @type ^`org.simpleframework.xml.core.ScannerFactory` @kind object;
  #L1b2c18.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/ScannerFactory;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind virtual;
  #L1b2c1e.  v2:= temp @kind object;
  #L1b2c20.  return v2 @kind object;
}
procedure `org.simpleframework.xml.stream.Style` `getStyle`(`org.simpleframework.xml.core.Support` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Support;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2c4c.  v0:= v1.`org.simpleframework.xml.core.Support.i` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L1b2c50.  call temp:= `getStyle`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind virtual;
  #L1b2c56.  v0:= temp @kind object;
  #L1b2c58.  return v0 @kind object;
}
procedure `org.simpleframework.xml.transform.Transform` `getTransform`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getTransform:(Ljava/lang/Class;)Lorg/simpleframework/xml/transform/Transform;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2c6c.  v0:= v1.`org.simpleframework.xml.core.Support.g` @type ^`org.simpleframework.xml.transform.Matcher` @kind object;
  #L1b2c70.  call temp:= `match`(v0, v2) @signature `Lorg/simpleframework/xml/transform/Matcher;.match:(Ljava/lang/Class;)Lorg/simpleframework/xml/transform/Transform;` @kind interface;
  #L1b2c76.  v2:= temp @kind object;
  #L1b2c78.  return v2 @kind object;
}
procedure `boolean` `isContainer`(`org.simpleframework.xml.core.Support` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isContainer:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b2844.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L1b2848.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b284e.  v0:= temp;
  #L1b2850.  v1:= 1I;
  #L1b2852.  if v0 == 0 then goto L1b2858;
  #L1b2856.  return v1;
  #L1b2858.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L1b285c.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2862.  v0:= temp;
  #L1b2864.  if v0 == 0 then goto L1b286a;
  #L1b2868.  return v1;
  #L1b286a.  call temp:= `isArray`(v3) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b2870.  v3:= temp;
  #L1b2872.  return v3;
}
procedure `boolean` `isPrimitive`(`org.simpleframework.xml.core.Support` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isPrimitive:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b28c4.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L1b28c8.  v1:= 1I;
  #L1b28ca.  if v3 != v0 then goto L1b28d0;
  #L1b28ce.  return v1;
  #L1b28d0.  v0:= constclass @type ^`java.lang.Float` @kind object;
  #L1b28d4.  if v3 != v0 then goto L1b28da;
  #L1b28d8.  return v1;
  #L1b28da.  v0:= constclass @type ^`java.lang.Double` @kind object;
  #L1b28de.  if v3 != v0 then goto L1b28e4;
  #L1b28e2.  return v1;
  #L1b28e4.  v0:= constclass @type ^`java.lang.Long` @kind object;
  #L1b28e8.  if v3 != v0 then goto L1b28ee;
  #L1b28ec.  return v1;
  #L1b28ee.  v0:= constclass @type ^`java.lang.Integer` @kind object;
  #L1b28f2.  if v3 != v0 then goto L1b28f8;
  #L1b28f6.  return v1;
  #L1b28f8.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L1b28fc.  if v3 != v0 then goto L1b2902;
  #L1b2900.  return v1;
  #L1b2902.  call temp:= `isEnum`(v3) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L1b2908.  v0:= temp;
  #L1b290a.  if v0 == 0 then goto L1b2910;
  #L1b290e.  return v1;
  #L1b2910.  call temp:= `isPrimitive`(v3) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L1b2916.  v0:= temp;
  #L1b2918.  if v0 == 0 then goto L1b291e;
  #L1b291c.  return v1;
  #L1b291e.  v0:= v2.`org.simpleframework.xml.core.Support.f` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L1b2922.  call temp:= `valid`(v0, v3) @signature `Lorg/simpleframework/xml/transform/Transformer;.valid:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2928.  v3:= temp;
  #L1b292a.  return v3;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.read:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b29dc.  v0:= v1.`org.simpleframework.xml.core.Support.f` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L1b29e0.  call temp:= `read`(v0, v2, v3) @signature `Lorg/simpleframework/xml/transform/Transformer;.read:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1b29e6.  v2:= temp @kind object;
  #L1b29e8.  return v2 @kind object;
}
procedure `java.lang.String` `replace`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.replace:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2a70.  v0:= v1.`org.simpleframework.xml.core.Support.h` @type ^`org.simpleframework.xml.filter.Filter` @kind object;
  #L1b2a74.  call temp:= `replace`(v0, v2) @signature `Lorg/simpleframework/xml/filter/Filter;.replace:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1b2a7a.  v2:= temp @kind object;
  #L1b2a7c.  return v2 @kind object;
}
procedure `boolean` `valid`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.valid:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b293c.  v0:= v1.`org.simpleframework.xml.core.Support.f` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L1b2940.  call temp:= `valid`(v0, v2) @signature `Lorg/simpleframework/xml/transform/Transformer;.valid:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2946.  v2:= temp;
  #L1b2948.  return v2;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.write:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2a90.  v0:= v1.`org.simpleframework.xml.core.Support.f` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L1b2a94.  call temp:= `write`(v0, v2, v3) @signature `Lorg/simpleframework/xml/transform/Transformer;.write:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L1b2a9a.  v2:= temp @kind object;
  #L1b2a9c.  return v2 @kind object;
}
