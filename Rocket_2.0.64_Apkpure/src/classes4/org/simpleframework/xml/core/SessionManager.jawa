record `org.simpleframework.xml.core.SessionManager` @kind class @AccessFlag PUBLIC {
  `java.lang.ThreadLocal` `org.simpleframework.xml.core.SessionManager.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.SessionManager` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SessionManager;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b0840.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b0846.  v0:= new `java.lang.ThreadLocal`;
  #L1b084a.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L1b0850.  v1.`org.simpleframework.xml.core.SessionManager.a` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L1b0854.  return @kind void;
}
procedure `org.simpleframework.xml.core.Session` `a`(`org.simpleframework.xml.core.SessionManager` v1 @kind this, `boolean` v2 ) @signature `Lorg/simpleframework/xml/core/SessionManager;.a:(Z)Lorg/simpleframework/xml/core/Session;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b07bc.  v0:= new `org.simpleframework.xml.core.SessionManager$Reference`;
  #L1b07c0.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.<init>:(Z)V` @kind direct;
  #L1b07c6.  v2:= v1.`org.simpleframework.xml.core.SessionManager.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L1b07ca.  call `set`(v2, v0) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L1b07d0.  call temp:= `get`(v0) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.get:()Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L1b07d6.  v2:= temp @kind object;
  #L1b07d8.  return v2 @kind object;
}
procedure `void` `close`(`org.simpleframework.xml.core.SessionManager` v3 @kind this) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b0868.  v0:= v3.`org.simpleframework.xml.core.SessionManager.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L1b086c.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L1b0872.  v0:= temp @kind object;
  #L1b0874.  v0:= (`org.simpleframework.xml.core.SessionManager$Reference`) v0 @kind object;
  #L1b0878.  if v0 == 0 then goto L1b0894;
  #L1b087c.  call temp:= `clear`(v0) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.clear:()I` @kind virtual;
  #L1b0882.  v0:= temp;
  #L1b0884.  if v0 != 0 then goto L1b0892;
  #L1b0888.  v0:= v3.`org.simpleframework.xml.core.SessionManager.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L1b088c.  call `remove`(v0) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L1b0892.  return @kind void;
  #L1b0894.  v0:= new `org.simpleframework.xml.core.PersistenceException`;
  #L1b0898.  v1:= 0I;
  #L1b089a.  v1:= new `java.lang.Object`[v1];
  #L1b089e.  v2:= "Session does not exist" @kind object;
  #L1b08a2.  call `<init>`(v0, v2, v1) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1b08a8.  throw v0;
}
procedure `org.simpleframework.xml.core.Session` `open`(`org.simpleframework.xml.core.SessionManager` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:()Lorg/simpleframework/xml/core/Session;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b07ec.  v0:= 1I;
  #L1b07ee.  call temp:= `open`(v1, v0) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:(Z)Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L1b07f4.  v0:= temp @kind object;
  #L1b07f6.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Session` `open`(`org.simpleframework.xml.core.SessionManager` v1 @kind this, `boolean` v2 ) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:(Z)Lorg/simpleframework/xml/core/Session;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b0808.  v0:= v1.`org.simpleframework.xml.core.SessionManager.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L1b080c.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L1b0812.  v0:= temp @kind object;
  #L1b0814.  v0:= (`org.simpleframework.xml.core.SessionManager$Reference`) v0 @kind object;
  #L1b0818.  if v0 == 0 then goto L1b0826;
  #L1b081c.  call temp:= `get`(v0) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.get:()Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L1b0822.  v2:= temp @kind object;
  #L1b0824.  return v2 @kind object;
  #L1b0826.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/core/SessionManager;.a:(Z)Lorg/simpleframework/xml/core/Session;` @kind direct;
  #L1b082c.  v2:= temp @kind object;
  #L1b082e.  return v2 @kind object;
}
