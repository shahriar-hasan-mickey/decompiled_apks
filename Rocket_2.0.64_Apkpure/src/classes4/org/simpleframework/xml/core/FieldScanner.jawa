record `org.simpleframework.xml.core.FieldScanner` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.ContactList` @kind class {
  `org.simpleframework.xml.core.AnnotationFactory` `org.simpleframework.xml.core.FieldScanner.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ContactMap` `org.simpleframework.xml.core.FieldScanner.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.FieldScanner.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a8cfc.  call `<init>`(v1) @signature `Lorg/simpleframework/xml/core/ContactList;.<init>:()V` @kind direct;
  #L1a8d02.  v0:= new `org.simpleframework.xml.core.AnnotationFactory`;
  #L1a8d06.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L1a8d0c.  v1.`org.simpleframework.xml.core.FieldScanner.a` @type ^`org.simpleframework.xml.core.AnnotationFactory` := v0 @kind object;
  #L1a8d10.  v0:= new `org.simpleframework.xml.core.ContactMap`;
  #L1a8d14.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/ContactMap;.<init>:()V` @kind direct;
  #L1a8d1a.  v1.`org.simpleframework.xml.core.FieldScanner.b` @type ^`org.simpleframework.xml.core.ContactMap` := v0 @kind object;
  #L1a8d1e.  v1.`org.simpleframework.xml.core.FieldScanner.c` @type ^`org.simpleframework.xml.core.Support` := v3 @kind object;
  #L1a8d22.  call `m`(v1, v2) @signature `Lorg/simpleframework/xml/core/FieldScanner;.m:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1a8d28.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.FieldScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/FieldScanner;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a8d3c.  v0:= v2.`org.simpleframework.xml.core.FieldScanner.b` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L1a8d40.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ContactMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1a8d46.  v0:= temp @kind object;
  #L1a8d48.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a8d4e.  v1:= temp;
  #L1a8d50.  if v1 == 0 then goto L1a8d68;
  #L1a8d54.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a8d5a.  v1:= temp @kind object;
  #L1a8d5c.  v1:= (`org.simpleframework.xml.core.Contact`) v1 @kind object;
  #L1a8d60.  call temp:= `add`(v2, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a8d66.  goto L1a8d48;
  #L1a8d68.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.DefaultType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a8d7c.  v0:= v1.`org.simpleframework.xml.core.FieldScanner.c` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L1a8d80.  call temp:= `getFields`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L1a8d86.  v2:= temp @kind object;
  #L1a8d88.  if v2 == 0 then goto L1a8d92;
  #L1a8d8c.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L1a8d92.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.FieldScanner` v5 @kind this, `org.simpleframework.xml.core.Detail` v6 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.c:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a8da4.  call temp:= `getFields`(v6) @signature `Lorg/simpleframework/xml/core/Detail;.getFields:()Ljava/util/List;` @kind interface;
  #L1a8daa.  v6:= temp @kind object;
  #L1a8dac.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a8db2.  v6:= temp @kind object;
  #L1a8db4.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a8dba.  v0:= temp;
  #L1a8dbc.  if v0 == 0 then goto L1a8df4;
  #L1a8dc0.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a8dc6.  v0:= temp @kind object;
  #L1a8dc8.  v0:= (`org.simpleframework.xml.core.FieldDetail`) v0 @kind object;
  #L1a8dcc.  call temp:= `getAnnotations`(v0) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1a8dd2.  v1:= temp @kind object;
  #L1a8dd4.  call temp:= `getField`(v0) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getField:()Ljava/lang/reflect/Field;` @kind virtual;
  #L1a8dda.  v0:= temp @kind object;
  #L1a8ddc.  v2:= length @variable v1;
  #L1a8dde.  v3:= 0I;
  #L1a8de0.  if v3 >= v2 then goto L1a8db4;
  #L1a8de4.  v4:= v1[v3] @kind object;
  #L1a8de8.  call `l`(v5, v0, v4, v1) @signature `Lorg/simpleframework/xml/core/FieldScanner;.l:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8dee.  v3:= v3 + 1;
  #L1a8df2.  goto L1a8de0;
  #L1a8df4.  return @kind void;
}
procedure `void` `d`(`org.simpleframework.xml.core.FieldScanner` v3 @kind this, `org.simpleframework.xml.core.Detail` v4 @kind object, `org.simpleframework.xml.DefaultType` v5 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.d:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a8e08.  call temp:= `getFields`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getFields:()Ljava/util/List;` @kind interface;
  #L1a8e0e.  v4:= temp @kind object;
  #L1a8e10.  v0:= `@@org.simpleframework.xml.DefaultType.FIELD` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L1a8e14.  if v5 != v0 then goto L1a8e70;
  #L1a8e18.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a8e1e.  v4:= temp @kind object;
  #L1a8e20.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a8e26.  v5:= temp;
  #L1a8e28.  if v5 == 0 then goto L1a8e70;
  #L1a8e2c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a8e32.  v5:= temp @kind object;
  #L1a8e34.  v5:= (`org.simpleframework.xml.core.FieldDetail`) v5 @kind object;
  #L1a8e38.  call temp:= `getAnnotations`(v5) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1a8e3e.  v0:= temp @kind object;
  #L1a8e40.  call temp:= `getField`(v5) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getField:()Ljava/lang/reflect/Field;` @kind virtual;
  #L1a8e46.  v5:= temp @kind object;
  #L1a8e48.  call temp:= `getType`(v5) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L1a8e4e.  v1:= temp @kind object;
  #L1a8e50.  call temp:= `f`(v3, v5) @signature `Lorg/simpleframework/xml/core/FieldScanner;.f:(Ljava/lang/reflect/Field;)Z` @kind direct;
  #L1a8e56.  v2:= temp;
  #L1a8e58.  if v2 != 0 then goto L1a8e20;
  #L1a8e5c.  call temp:= `h`(v3, v5) @signature `Lorg/simpleframework/xml/core/FieldScanner;.h:(Ljava/lang/reflect/Field;)Z` @kind direct;
  #L1a8e62.  v2:= temp;
  #L1a8e64.  if v2 != 0 then goto L1a8e20;
  #L1a8e68.  call `i`(v3, v5, v1, v0) @signature `Lorg/simpleframework/xml/core/FieldScanner;.i:(Ljava/lang/reflect/Field;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8e6e.  goto L1a8e20;
  #L1a8e70.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.core.FieldScanner` v2 @kind this, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Contact` v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.e:(Ljava/lang/Object;Lorg/simpleframework/xml/core/Contact;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a8e84.  v0:= v2.`org.simpleframework.xml.core.FieldScanner.b` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L1a8e88.  call temp:= `remove`(v0, v3) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a8e8e.  v0:= temp @kind object;
  #L1a8e90.  v0:= (`org.simpleframework.xml.core.Contact`) v0 @kind object;
  #L1a8e94.  if v0 == 0 then goto L1a8ea6;
  #L1a8e98.  call temp:= `g`(v2, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.g:(Lorg/simpleframework/xml/core/Contact;)Z` @kind direct;
  #L1a8e9e.  v1:= temp;
  #L1a8ea0.  if v1 == 0 then goto L1a8ea6;
  #L1a8ea4.  v4:= v0 @kind object;
  #L1a8ea6.  v0:= v2.`org.simpleframework.xml.core.FieldScanner.b` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L1a8eaa.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a8eb0.  return @kind void;
}
procedure `boolean` `f`(`org.simpleframework.xml.core.FieldScanner` v0 @kind this, `java.lang.reflect.Field` v1 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.f:(Ljava/lang/reflect/Field;)Z` @AccessFlag PRIVATE {
    temp;

  #L1a8c7c.  call temp:= `getModifiers`(v1) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L1a8c82.  v1:= temp;
  #L1a8c84.  call temp:= `isStatic`(v1) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L1a8c8a.  v1:= temp;
  #L1a8c8c.  if v1 == 0 then goto L1a8c94;
  #L1a8c90.  v1:= 1I;
  #L1a8c92.  return v1;
  #L1a8c94.  v1:= 0I;
  #L1a8c96.  return v1;
}
procedure `boolean` `g`(`org.simpleframework.xml.core.FieldScanner` v0 @kind this, `org.simpleframework.xml.core.Contact` v1 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.g:(Lorg/simpleframework/xml/core/Contact;)Z` @AccessFlag PRIVATE {
    temp;

  #L1a8ca8.  call temp:= `getAnnotation`(v1) @signature `Lorg/simpleframework/xml/core/Contact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L1a8cae.  v1:= temp @kind object;
  #L1a8cb0.  v1:= instanceof @variable v1 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L1a8cb4.  if v1 == 0 then goto L1a8cbc;
  #L1a8cb8.  v1:= 1I;
  #L1a8cba.  return v1;
  #L1a8cbc.  v1:= 0I;
  #L1a8cbe.  return v1;
}
procedure `boolean` `h`(`org.simpleframework.xml.core.FieldScanner` v0 @kind this, `java.lang.reflect.Field` v1 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.h:(Ljava/lang/reflect/Field;)Z` @AccessFlag PRIVATE {
    temp;

  #L1a8cd0.  call temp:= `getModifiers`(v1) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L1a8cd6.  v1:= temp;
  #L1a8cd8.  call temp:= `isTransient`(v1) @signature `Ljava/lang/reflect/Modifier;.isTransient:(I)Z` @kind static;
  #L1a8cde.  v1:= temp;
  #L1a8ce0.  if v1 == 0 then goto L1a8ce8;
  #L1a8ce4.  v1:= 1I;
  #L1a8ce6.  return v1;
  #L1a8ce8.  v1:= 0I;
  #L1a8cea.  return v1;
}
procedure `void` `i`(`org.simpleframework.xml.core.FieldScanner` v2 @kind this, `java.lang.reflect.Field` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.annotation.Annotation`[] v5 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.i:(Ljava/lang/reflect/Field;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a8ec4.  call temp:= `getDependents`(v3) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependents:(Ljava/lang/reflect/Field;)[Ljava/lang/Class;` @kind static;
  #L1a8eca.  v0:= temp @kind object;
  #L1a8ecc.  v1:= v2.`org.simpleframework.xml.core.FieldScanner.a` @type ^`org.simpleframework.xml.core.AnnotationFactory` @kind object;
  #L1a8ed0.  call temp:= `getInstance`(v1, v4, v0) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1a8ed6.  v4:= temp @kind object;
  #L1a8ed8.  if v4 == 0 then goto L1a8ee2;
  #L1a8edc.  call `j`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8ee2.  return @kind void;
}
procedure `void` `j`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a8ef4.  v0:= new `org.simpleframework.xml.core.FieldContact`;
  #L1a8ef8.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldContact;.<init>:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8efe.  v3:= new `org.simpleframework.xml.core.FieldScanner$FieldKey`;
  #L1a8f02.  call `<init>`(v3, v2) @signature `Lorg/simpleframework/xml/core/FieldScanner$FieldKey;.<init>:(Ljava/lang/reflect/Field;)V` @kind direct;
  #L1a8f08.  call temp:= `isAccessible`(v2) @signature `Ljava/lang/reflect/Field;.isAccessible:()Z` @kind virtual;
  #L1a8f0e.  v4:= temp;
  #L1a8f10.  if v4 != 0 then goto L1a8f1c;
  #L1a8f14.  v4:= 1I;
  #L1a8f16.  call `setAccessible`(v2, v4) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L1a8f1c.  call `e`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/FieldScanner;.e:(Ljava/lang/Object;Lorg/simpleframework/xml/core/Contact;)V` @kind direct;
  #L1a8f22.  return @kind void;
}
procedure `void` `k`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.k:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a8f34.  v3:= v1.`org.simpleframework.xml.core.FieldScanner.b` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L1a8f38.  v0:= new `org.simpleframework.xml.core.FieldScanner$FieldKey`;
  #L1a8f3c.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/FieldScanner$FieldKey;.<init>:(Ljava/lang/reflect/Field;)V` @kind direct;
  #L1a8f42.  call temp:= `remove`(v3, v0) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a8f48.  return @kind void;
}
procedure `void` `l`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.l:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1a8f5c.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Attribute` @kind boolean;
  #L1a8f60.  if v0 == 0 then goto L1a8f6a;
  #L1a8f64.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8f6a.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L1a8f6e.  if v0 == 0 then goto L1a8f78;
  #L1a8f72.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8f78.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L1a8f7c.  if v0 == 0 then goto L1a8f86;
  #L1a8f80.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8f86.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L1a8f8a.  if v0 == 0 then goto L1a8f94;
  #L1a8f8e.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8f94.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementList` @kind boolean;
  #L1a8f98.  if v0 == 0 then goto L1a8fa2;
  #L1a8f9c.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8fa2.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementArray` @kind boolean;
  #L1a8fa6.  if v0 == 0 then goto L1a8fb0;
  #L1a8faa.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8fb0.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMap` @kind boolean;
  #L1a8fb4.  if v0 == 0 then goto L1a8fbe;
  #L1a8fb8.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8fbe.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Element` @kind boolean;
  #L1a8fc2.  if v0 == 0 then goto L1a8fcc;
  #L1a8fc6.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8fcc.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Version` @kind boolean;
  #L1a8fd0.  if v0 == 0 then goto L1a8fda;
  #L1a8fd4.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8fda.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L1a8fde.  if v0 == 0 then goto L1a8fe8;
  #L1a8fe2.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8fe8.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.Transient` @kind boolean;
  #L1a8fec.  if v4 == 0 then goto L1a8ff6;
  #L1a8ff0.  call `k`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/FieldScanner;.k:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1a8ff6.  return @kind void;
}
procedure `void` `m`(`org.simpleframework.xml.core.FieldScanner` v3 @kind this, `org.simpleframework.xml.core.Detail` v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.m:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a9008.  call temp:= `getOverride`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getOverride:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L1a900e.  v0:= temp @kind object;
  #L1a9010.  call temp:= `getAccess`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getAccess:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L1a9016.  v1:= temp @kind object;
  #L1a9018.  call temp:= `getSuper`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getSuper:()Ljava/lang/Class;` @kind interface;
  #L1a901e.  v2:= temp @kind object;
  #L1a9020.  if v2 == 0 then goto L1a902a;
  #L1a9024.  call `b`(v3, v2, v0) @signature `Lorg/simpleframework/xml/core/FieldScanner;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L1a902a.  call `d`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/FieldScanner;.d:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L1a9030.  call `c`(v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.c:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L1a9036.  call `a`(v3) @signature `Lorg/simpleframework/xml/core/FieldScanner;.a:()V` @kind direct;
  #L1a903c.  return @kind void;
}
