record `org.simpleframework.xml.core.Signature` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface {
  `org.simpleframework.xml.core.ParameterMap` `org.simpleframework.xml.core.Signature.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Constructor` `org.simpleframework.xml.core.Signature.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `org.simpleframework.xml.core.Signature.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.reflect.Constructor` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b19c4.  call temp:= `getDeclaringClass`(v2) @signature `Ljava/lang/reflect/Constructor;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L1b19ca.  v0:= temp @kind object;
  #L1b19cc.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)V` @kind direct;
  #L1b19d2.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.reflect.Constructor` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b19e4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b19ea.  v0:= new `org.simpleframework.xml.core.ParameterMap`;
  #L1b19ee.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/ParameterMap;.<init>:()V` @kind direct;
  #L1b19f4.  v1.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` := v0 @kind object;
  #L1b19f8.  v1.`org.simpleframework.xml.core.Signature.b` @type ^`java.lang.reflect.Constructor` := v2 @kind object;
  #L1b19fc.  v1.`org.simpleframework.xml.core.Signature.c` @type ^`java.lang.Class` := v3 @kind object;
  #L1b1a00.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Signature` v1 @kind this, `org.simpleframework.xml.core.Signature` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Lorg/simpleframework/xml/core/Signature;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b1a14.  v0:= v2.`org.simpleframework.xml.core.Signature.b` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b1a18.  v2:= v2.`org.simpleframework.xml.core.Signature.c` @type ^`java.lang.Class` @kind object;
  #L1b1a1c.  call `<init>`(v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)V` @kind direct;
  #L1b1a22.  return @kind void;
}
procedure `void` `add`(`org.simpleframework.xml.core.Signature` v2 @kind this, `org.simpleframework.xml.core.Parameter` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.add:(Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b1a34.  call temp:= `getKey`(v3) @signature `Lorg/simpleframework/xml/core/Parameter;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1b1a3a.  v0:= temp @kind object;
  #L1b1a3c.  if v0 == 0 then goto L1b1a4a;
  #L1b1a40.  v1:= v2.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b1a44.  call temp:= `put`(v1, v0, v3) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b1a4a.  return @kind void;
}
procedure `boolean` `contains`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b17c4.  v0:= v1.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b17c8.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b17ce.  v2:= temp;
  #L1b17d0.  return v2;
}
procedure `org.simpleframework.xml.core.Signature` `copy`(`org.simpleframework.xml.core.Signature` v3 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.copy:()Lorg/simpleframework/xml/core/Signature;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b1980.  v0:= new `org.simpleframework.xml.core.Signature`;
  #L1b1984.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Lorg/simpleframework/xml/core/Signature;)V` @kind direct;
  #L1b198a.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/core/Signature;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b1990.  v1:= temp @kind object;
  #L1b1992.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b1998.  v2:= temp;
  #L1b199a.  if v2 == 0 then goto L1b19b2;
  #L1b199e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b19a4.  v2:= temp @kind object;
  #L1b19a6.  v2:= (`org.simpleframework.xml.core.Parameter`) v2 @kind object;
  #L1b19aa.  call `add`(v0, v2) @signature `Lorg/simpleframework/xml/core/Signature;.add:(Lorg/simpleframework/xml/core/Parameter;)V` @kind virtual;
  #L1b19b0.  goto L1b1992;
  #L1b19b2.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`org.simpleframework.xml.core.Signature` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.create:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b183c.  v0:= v2.`org.simpleframework.xml.core.Signature.b` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b1840.  call temp:= `isAccessible`(v0) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L1b1846.  v0:= temp;
  #L1b1848.  if v0 != 0 then goto L1b1858;
  #L1b184c.  v0:= v2.`org.simpleframework.xml.core.Signature.b` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b1850.  v1:= 1I;
  #L1b1852.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L1b1858.  v0:= v2.`org.simpleframework.xml.core.Signature.b` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b185c.  v1:= 0I;
  #L1b185e.  v1:= new `java.lang.Object`[v1];
  #L1b1862.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b1868.  v0:= temp @kind object;
  #L1b186a.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`org.simpleframework.xml.core.Signature` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.create:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b187c.  v0:= v2.`org.simpleframework.xml.core.Signature.b` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b1880.  call temp:= `isAccessible`(v0) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L1b1886.  v0:= temp;
  #L1b1888.  if v0 != 0 then goto L1b1898;
  #L1b188c.  v0:= v2.`org.simpleframework.xml.core.Signature.b` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b1890.  v1:= 1I;
  #L1b1892.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L1b1898.  v0:= v2.`org.simpleframework.xml.core.Signature.b` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b189c.  call temp:= `newInstance`(v0, v3) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b18a2.  v3:= temp @kind object;
  #L1b18a4.  return v3 @kind object;
}
procedure `org.simpleframework.xml.core.Parameter` `get`(`org.simpleframework.xml.core.Signature` v1 @kind this, `int` v2 ) @signature `Lorg/simpleframework/xml/core/Signature;.get:(I)Lorg/simpleframework/xml/core/Parameter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1918.  v0:= v1.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b191c.  call temp:= `get`(v0, v2) @signature `Lorg/simpleframework/xml/core/ParameterMap;.get:(I)Lorg/simpleframework/xml/core/Parameter;` @kind virtual;
  #L1b1922.  v2:= temp @kind object;
  #L1b1924.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Parameter` `get`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.get:(Ljava/lang/Object;)Lorg/simpleframework/xml/core/Parameter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1938.  v0:= v1.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b193c.  call temp:= `get`(v0, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b1942.  v2:= temp @kind object;
  #L1b1944.  v2:= (`org.simpleframework.xml.core.Parameter`) v2 @kind object;
  #L1b1948.  return v2 @kind object;
}
procedure `java.util.List` `getAll`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.getAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b18f8.  v0:= v1.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b18fc.  call temp:= `getAll`(v0) @signature `Lorg/simpleframework/xml/core/ParameterMap;.getAll:()Ljava/util/List;` @kind virtual;
  #L1b1902.  v0:= temp @kind object;
  #L1b1904.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1824.  v0:= v1.`org.simpleframework.xml.core.Signature.c` @type ^`java.lang.Class` @kind object;
  #L1b1828.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b17e4.  v0:= v1.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b17e8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L1b17ee.  v0:= temp;
  #L1b17f0.  return v0;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b18d8.  v0:= v1.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b18dc.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ParameterMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1b18e2.  v0:= temp @kind object;
  #L1b18e4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Parameter` `remove`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.remove:(Ljava/lang/Object;)Lorg/simpleframework/xml/core/Parameter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b195c.  v0:= v1.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b1960.  call temp:= `remove`(v0, v2) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b1966.  v2:= temp @kind object;
  #L1b1968.  v2:= (`org.simpleframework.xml.core.Parameter`) v2 @kind object;
  #L1b196c.  return v2 @kind object;
}
procedure `void` `set`(`org.simpleframework.xml.core.Signature` v1 @kind this, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Parameter` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Signature;.set:(Ljava/lang/Object;Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1a5c.  v0:= v1.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b1a60.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b1a66.  return @kind void;
}
procedure `int` `size`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1804.  v0:= v1.`org.simpleframework.xml.core.Signature.a` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L1b1808.  call temp:= `size`(v0) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L1b180e.  v0:= temp;
  #L1b1810.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.Signature` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Signature;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b18b8.  v0:= v1.`org.simpleframework.xml.core.Signature.b` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1b18bc.  call temp:= `toString`(v0) @signature `Ljava/lang/reflect/Constructor;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b18c2.  v0:= temp @kind object;
  #L1b18c4.  return v0 @kind object;
}
