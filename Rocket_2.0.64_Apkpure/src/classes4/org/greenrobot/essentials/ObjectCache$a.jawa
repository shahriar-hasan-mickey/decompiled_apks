record `org.greenrobot.essentials.ObjectCache$a` @kind class @AccessFlag  {
  `java.lang.ref.Reference` `org.greenrobot.essentials.ObjectCache$a.a` @AccessFlag FINAL;
  `java.lang.Object` `org.greenrobot.essentials.ObjectCache$a.b` @AccessFlag FINAL;
  `long` `org.greenrobot.essentials.ObjectCache$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.greenrobot.essentials.ObjectCache$a` v0 @kind this, `java.lang.ref.Reference` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/essentials/ObjectCache$a;.<init>:(Ljava/lang/ref/Reference;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L199eec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L199ef2.  v0.`org.greenrobot.essentials.ObjectCache$a.a` @type ^`java.lang.ref.Reference` := v1 @kind object;
  #L199ef6.  v0.`org.greenrobot.essentials.ObjectCache$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L199efa.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L199f00.  v1:= temp @kind wide;
  #L199f02.  v0.`org.greenrobot.essentials.ObjectCache$a.c` @type ^`long` := v1 @kind wide;
  #L199f06.  return @kind void;
}
