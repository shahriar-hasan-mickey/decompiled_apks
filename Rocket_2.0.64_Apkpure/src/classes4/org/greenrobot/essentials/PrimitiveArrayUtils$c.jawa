record `org.greenrobot.essentials.PrimitiveArrayUtils$c` @kind class @AccessFlag  extends `org.greenrobot.essentials.PrimitiveArrayUtils` @kind class {
}
global `boolean` `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `sun.misc.Unsafe` `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L19aca0.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L19aca6.  v0:= temp @kind object;
  #L19aca8.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L19acac.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19acb2.  v0:= temp;
  #L19acb4.  `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.c` @type ^`boolean` := v0 @kind boolean;
  #L19acb8.  call temp:= `c`() @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.c:()Z` @kind static;
  #L19acbe.  v0:= temp;
  #L19acc0.  `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.d` @type ^`boolean` := v0 @kind boolean;
  #L19acc4.  v1:= 0L;
  #L19acc8.  if v0 == 0 then goto L19ad0c;
  #L19accc.  call temp:= `d`() @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.d:()Lsun/misc/Unsafe;` @kind static;
  #L19acd2.  v0:= temp @kind object;
  #L19acd4.  `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.e` @type ^`sun.misc.Unsafe` := v0 @kind object;
  #L19acd8.  if v0 == 0 then goto L19ad02;
  #L19acdc.  v1:= constclass @type ^`byte`[] @kind object;
  #L19ace0.  call temp:= `arrayBaseOffset`(v0, v1) @signature `Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I` @kind virtual;
  #L19ace6.  v1:= temp;
  #L19ace8.  v1:= (`long`) v1 @kind i2l;
  #L19acea.  `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.f` @type ^`long` := v1 @kind wide;
  #L19acee.  v1:= constclass @type ^`char`[] @kind object;
  #L19acf2.  call temp:= `arrayBaseOffset`(v0, v1) @signature `Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I` @kind virtual;
  #L19acf8.  v0:= temp;
  #L19acfa.  v0:= (`long`) v0 @kind i2l;
  #L19acfc.  `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.g` @type ^`long` := v0 @kind wide;
  #L19ad00.  goto L19ad1a;
  #L19ad02.  `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.f` @type ^`long` := v1 @kind wide;
  #L19ad06.  `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.g` @type ^`long` := v1 @kind wide;
  #L19ad0a.  goto L19ad1a;
  #L19ad0c.  v0:= 0I;
  #L19ad0e.  `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.e` @type ^`sun.misc.Unsafe` := v0 @kind object;
  #L19ad12.  `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.f` @type ^`long` := v1 @kind wide;
  #L19ad16.  `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.g` @type ^`long` := v1 @kind wide;
  #L19ad1a.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.essentials.PrimitiveArrayUtils$c` v0 @kind this) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19ad2c.  call `<init>`(v0) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils;.<init>:()V` @kind direct;
  #L19ad32.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.essentials.PrimitiveArrayUtils$c` v0 @kind this, `org.greenrobot.essentials.PrimitiveArrayUtils$a` v1 @kind object) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.<init>:(Lorg/greenrobot/essentials/PrimitiveArrayUtils$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L19ad44.  call `<init>`(v0) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.<init>:()V` @kind direct;
  #L19ad4a.  return @kind void;
}
procedure `sun.misc.Unsafe` `a`() @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.a:()Lsun/misc/Unsafe;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L19aba0.  v0:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.e` @type ^`sun.misc.Unsafe` @kind object;
  #L19aba4.  return v0 @kind object;
}
procedure `boolean` `b`() @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.b:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L19a9a8.  v0:= "os.arch" @kind object;
  #L19a9ac.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19a9b2.  v0:= temp @kind object;
  #L19a9b4.  if v0 == 0 then goto L19a9cc;
  #L19a9b8.  v1:= "^(i[3-6]86|x86(_64)?|x64|amd64)$" @kind object;
  #L19a9bc.  call temp:= `matches`(v0, v1) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L19a9c2.  v0:= temp;
  #L19a9c4.  if v0 == 0 then goto L19a9cc;
  #L19a9c8.  v0:= 1I;
  #L19a9ca.  goto L19a9ce;
  #L19a9cc.  v0:= 0I;
  #L19a9ce.  return v0;
}
procedure `boolean` `c`() @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.c:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19a9e0.  v0:= "java.vendor" @kind object;
  #L19a9e4.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19a9ea.  v0:= temp @kind object;
  #L19a9ec.  v1:= 1I;
  #L19a9ee.  v2:= 0I;
  #L19a9f0.  if v0 == 0 then goto L19aa08;
  #L19a9f4.  v3:= "Android" @kind object;
  #L19a9f8.  call temp:= `contains`(v0, v3) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19a9fe.  v0:= temp;
  #L19aa00.  if v0 == 0 then goto L19aa08;
  #L19aa04.  v0:= 1I;
  #L19aa06.  goto L19aa0a;
  #L19aa08.  v0:= 0I;
  #L19aa0a.  if v0 == 0 then goto L19aa18;
  #L19aa0e.  call temp:= `b`() @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.b:()Z` @kind static;
  #L19aa14.  v0:= temp;
  #L19aa16.  return v0;
  #L19aa18.  v0:= "java.nio.Bits" @kind object;
  #L19aa1c.  call temp:= `getSystemClassLoader`() @signature `Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;` @kind static;
  #L19aa22.  v3:= temp @kind object;
  #L19aa24.  call temp:= `forName`(v0, v2, v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L19aa2a.  v0:= temp @kind object;
  #L19aa2c.  v3:= "unaligned" @kind object;
  #L19aa30.  v4:= new `java.lang.Class`[v2];
  #L19aa34.  call temp:= `getDeclaredMethod`(v0, v3, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L19aa3a.  v0:= temp @kind object;
  #L19aa3c.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L19aa42.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L19aa46.  v3:= 0I;
  #L19aa48.  v2:= new `java.lang.Object`[v2];
  #L19aa4c.  call temp:= `invoke`(v0, v3, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L19aa52.  v0:= temp @kind object;
  #L19aa54.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/Boolean;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19aa5a.  v0:= temp;
  #L19aa5c.  return v0;
  #L19aa5e.  call temp:= `b`() @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.b:()Z` @kind static;
  #L19aa64.  v0:= temp;
  #L19aa66.  return v0;
  catch `java.lang.Throwable` @[L19aa18..L19aa5c] goto L19aa5e;
}
procedure `sun.misc.Unsafe` `d`() @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.d:()Lsun/misc/Unsafe;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19abb8.  v0:= 0I;
  #L19abba.  v1:= constclass @type ^`sun.misc.Unsafe` @kind object;
  #L19abbe.  v2:= "theUnsafe" @kind object;
  #L19abc2.  call temp:= `getDeclaredField`(v1, v2) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L19abc8.  v1:= temp @kind object;
  #L19abca.  goto L19abdc;
  #L19abcc.  v1:= constclass @type ^`sun.misc.Unsafe` @kind object;
  #L19abd0.  v2:= "THE_ONE" @kind object;
  #L19abd4.  call temp:= `getDeclaredField`(v1, v2) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L19abda.  v1:= temp @kind object;
  #L19abdc.  v2:= 1I;
  #L19abde.  call `setAccessible`(v1, v2) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L19abe4.  call temp:= `get`(v1, v0) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L19abea.  v1:= temp @kind object;
  #L19abec.  v1:= (`sun.misc.Unsafe`) v1 @kind object;
  #L19abf0.  v3:= 4I;
  #L19abf2.  v3:= new `byte`[v3];
  #L19abf6.  v4:= 0I;
  #L19abf8.  v5:= -54I;
  #L19abfc.  v3[v4]:= v5 @kind byte;
  #L19ac00.  v4:= -2I;
  #L19ac02.  v3[v2]:= v4 @kind byte;
  #L19ac06.  v2:= 2I;
  #L19ac08.  v4:= -70I;
  #L19ac0c.  v3[v2]:= v4 @kind byte;
  #L19ac10.  v2:= 3I;
  #L19ac12.  v4:= -66I;
  #L19ac16.  v3[v2]:= v4 @kind byte;
  #L19ac1a.  v2:= constclass @type ^`byte`[] @kind object;
  #L19ac1e.  call temp:= `arrayBaseOffset`(v1, v2) @signature `Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I` @kind virtual;
  #L19ac24.  v2:= temp;
  #L19ac26.  v4:= (`long`) v2 @kind i2l;
  #L19ac28.  call temp:= `getInt`(v1, v3, v4) @signature `Lsun/misc/Unsafe;.getInt:(Ljava/lang/Object;J)I` @kind virtual;
  #L19ac2e.  v2:= temp;
  #L19ac30.  v3:= -889275714I;
  #L19ac36.  if v2 != v3 then goto L19ac54;
  #L19ac3a.  v2:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.c` @type ^`boolean` @kind boolean;
  #L19ac3e.  if v2 == 0 then goto L19ac44;
  #L19ac42.  return v1 @kind object;
  #L19ac44.  v1:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L19ac48.  v2:= "Big endian confusion" @kind object;
  #L19ac4c.  call `println`(v1, v2) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L19ac52.  goto L19ac76;
  #L19ac54.  v3:= -1095041334I;
  #L19ac5a.  if v2 != v3 then goto L19ac76;
  #L19ac5e.  v2:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.c` @type ^`boolean` @kind boolean;
  #L19ac62.  if v2 != 0 then goto L19ac68;
  #L19ac66.  return v1 @kind object;
  #L19ac68.  v1:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L19ac6c.  v2:= "Little endian confusion" @kind object;
  #L19ac70.  call `println`(v1, v2) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L19ac76.  return v0 @kind object;
  catch `java.util.NoSuchElementException` @[L19abba..L19abca] goto L19abcc;
  catch `java.lang.Throwable` @[L19abba..L19abca] goto L19ac76;
  catch `java.lang.Throwable` @[L19abcc..L19ac76] goto L19ac76;
}
procedure `int` `getIntBE`(`org.greenrobot.essentials.PrimitiveArrayUtils$c` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.getIntBE:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19aa84.  v0:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.e` @type ^`sun.misc.Unsafe` @kind object;
  #L19aa88.  v1:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.f` @type ^`long` @kind wide;
  #L19aa8c.  v3:= (`long`) v7 @kind i2l;
  #L19aa8e.  v1:= v1 + v3 @kind long;
  #L19aa90.  call temp:= `getInt`(v0, v6, v1) @signature `Lsun/misc/Unsafe;.getInt:(Ljava/lang/Object;J)I` @kind virtual;
  #L19aa96.  v6:= temp;
  #L19aa98.  v7:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.c` @type ^`boolean` @kind boolean;
  #L19aa9c.  if v7 == 0 then goto L19aaa2;
  #L19aaa0.  return v6;
  #L19aaa2.  call temp:= `reverseBytes`(v6) @signature `Ljava/lang/Integer;.reverseBytes:(I)I` @kind static;
  #L19aaa8.  v6:= temp;
  #L19aaaa.  return v6;
}
procedure `int` `getIntLE`(`org.greenrobot.essentials.PrimitiveArrayUtils$c` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.getIntLE:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19aabc.  v0:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.e` @type ^`sun.misc.Unsafe` @kind object;
  #L19aac0.  v1:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.f` @type ^`long` @kind wide;
  #L19aac4.  v3:= (`long`) v7 @kind i2l;
  #L19aac6.  v1:= v1 + v3 @kind long;
  #L19aac8.  call temp:= `getInt`(v0, v6, v1) @signature `Lsun/misc/Unsafe;.getInt:(Ljava/lang/Object;J)I` @kind virtual;
  #L19aace.  v6:= temp;
  #L19aad0.  v7:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.c` @type ^`boolean` @kind boolean;
  #L19aad4.  if v7 == 0 then goto L19aae0;
  #L19aad8.  call temp:= `reverseBytes`(v6) @signature `Ljava/lang/Integer;.reverseBytes:(I)I` @kind static;
  #L19aade.  v6:= temp;
  #L19aae0.  return v6;
}
procedure `int` `getIntLE`(`org.greenrobot.essentials.PrimitiveArrayUtils$c` v5 @kind this, `char`[] v6 @kind object, `int` v7 ) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.getIntLE:([CI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19aaf4.  v0:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.e` @type ^`sun.misc.Unsafe` @kind object;
  #L19aaf8.  v1:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.g` @type ^`long` @kind wide;
  #L19aafc.  v7:= v7 ^< 2;
  #L19ab00.  v3:= (`long`) v7 @kind i2l;
  #L19ab02.  v1:= v1 + v3 @kind long;
  #L19ab04.  call temp:= `getInt`(v0, v6, v1) @signature `Lsun/misc/Unsafe;.getInt:(Ljava/lang/Object;J)I` @kind virtual;
  #L19ab0a.  v6:= temp;
  #L19ab0c.  v7:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.c` @type ^`boolean` @kind boolean;
  #L19ab10.  if v7 == 0 then goto L19ab1c;
  #L19ab14.  call temp:= `reverseBytes`(v6) @signature `Ljava/lang/Integer;.reverseBytes:(I)I` @kind static;
  #L19ab1a.  v6:= temp;
  #L19ab1c.  return v6;
}
procedure `long` `getLongBE`(`org.greenrobot.essentials.PrimitiveArrayUtils$c` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.getLongBE:([BI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19ab30.  v0:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.e` @type ^`sun.misc.Unsafe` @kind object;
  #L19ab34.  v1:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.f` @type ^`long` @kind wide;
  #L19ab38.  v3:= (`long`) v7 @kind i2l;
  #L19ab3a.  v1:= v1 + v3 @kind long;
  #L19ab3c.  call temp:= `getLong`(v0, v6, v1) @signature `Lsun/misc/Unsafe;.getLong:(Ljava/lang/Object;J)J` @kind virtual;
  #L19ab42.  v6:= temp @kind wide;
  #L19ab44.  v0:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.c` @type ^`boolean` @kind boolean;
  #L19ab48.  if v0 == 0 then goto L19ab4e;
  #L19ab4c.  return v6 @kind wide;
  #L19ab4e.  call temp:= `reverseBytes`(v6) @signature `Ljava/lang/Long;.reverseBytes:(J)J` @kind static;
  #L19ab54.  v6:= temp @kind wide;
  #L19ab56.  return v6 @kind wide;
}
procedure `long` `getLongLE`(`org.greenrobot.essentials.PrimitiveArrayUtils$c` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils$c;.getLongLE:([BI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19ab68.  v0:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.e` @type ^`sun.misc.Unsafe` @kind object;
  #L19ab6c.  v1:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.f` @type ^`long` @kind wide;
  #L19ab70.  v3:= (`long`) v7 @kind i2l;
  #L19ab72.  v1:= v1 + v3 @kind long;
  #L19ab74.  call temp:= `getLong`(v0, v6, v1) @signature `Lsun/misc/Unsafe;.getLong:(Ljava/lang/Object;J)J` @kind virtual;
  #L19ab7a.  v6:= temp @kind wide;
  #L19ab7c.  v0:= `@@org.greenrobot.essentials.PrimitiveArrayUtils$c.c` @type ^`boolean` @kind boolean;
  #L19ab80.  if v0 == 0 then goto L19ab8c;
  #L19ab84.  call temp:= `reverseBytes`(v6) @signature `Ljava/lang/Long;.reverseBytes:(J)J` @kind static;
  #L19ab8a.  v6:= temp @kind wide;
  #L19ab8c.  return v6 @kind wide;
}
