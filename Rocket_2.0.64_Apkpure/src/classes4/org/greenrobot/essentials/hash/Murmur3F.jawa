record `org.greenrobot.essentials.hash.Murmur3F` @kind class @AccessFlag PUBLIC extends `org.greenrobot.essentials.hash.Checksum128` @kind interface {
  `long` `org.greenrobot.essentials.hash.Murmur3F.a` @AccessFlag PRIVATE_FINAL;
  `long` `org.greenrobot.essentials.hash.Murmur3F.b` @AccessFlag PRIVATE;
  `long` `org.greenrobot.essentials.hash.Murmur3F.c` @AccessFlag PRIVATE;
  `int` `org.greenrobot.essentials.hash.Murmur3F.d` @AccessFlag PRIVATE;
  `int` `org.greenrobot.essentials.hash.Murmur3F.e` @AccessFlag PRIVATE;
  `long` `org.greenrobot.essentials.hash.Murmur3F.f` @AccessFlag PRIVATE;
  `long` `org.greenrobot.essentials.hash.Murmur3F.g` @AccessFlag PRIVATE;
  `boolean` `org.greenrobot.essentials.hash.Murmur3F.h` @AccessFlag PRIVATE;
  `long` `org.greenrobot.essentials.hash.Murmur3F.i` @AccessFlag PRIVATE;
  `long` `org.greenrobot.essentials.hash.Murmur3F.j` @AccessFlag PRIVATE;
}
global `org.greenrobot.essentials.PrimitiveArrayUtils` `@@org.greenrobot.essentials.hash.Murmur3F.k` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19d590.  call temp:= `getInstance`() @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils;.getInstance:()Lorg/greenrobot/essentials/PrimitiveArrayUtils;` @kind static;
  #L19d596.  v0:= temp @kind object;
  #L19d598.  `@@org.greenrobot.essentials.hash.Murmur3F.k` @type ^`org.greenrobot.essentials.PrimitiveArrayUtils` := v0 @kind object;
  #L19d59c.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.essentials.hash.Murmur3F` v2 @kind this) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19d5b0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19d5b6.  v0:= 0L;
  #L19d5ba.  v2.`org.greenrobot.essentials.hash.Murmur3F.a` @type ^`long` := v0 @kind wide;
  #L19d5be.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.essentials.hash.Murmur3F` v4 @kind this, `int` v5 ) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19d5d0.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19d5d6.  v0:= (`long`) v5 @kind i2l;
  #L19d5d8.  v2:= 4294967295L;
  #L19d5e2.  v0:= v0 ^& v2 @kind long;
  #L19d5e4.  v4.`org.greenrobot.essentials.hash.Murmur3F.a` @type ^`long` := v0 @kind wide;
  #L19d5e8.  v4.`org.greenrobot.essentials.hash.Murmur3F.c` @type ^`long` := v0 @kind wide;
  #L19d5ec.  v4.`org.greenrobot.essentials.hash.Murmur3F.b` @type ^`long` := v0 @kind wide;
  #L19d5f0.  return @kind void;
}
procedure `void` `a`(`org.greenrobot.essentials.hash.Murmur3F` v9 @kind this, `long` v10 , `long` v12 ) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.a:(JJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19d604.  v0:= -8663945395140668459L;
  #L19d60e.  v10:= v10 * v0 @kind long;
  #L19d612.  v2:= 31I;
  #L19d616.  call temp:= `rotateLeft`(v10, v2) @signature `Ljava/lang/Long;.rotateLeft:(JI)J` @kind static;
  #L19d61c.  v10:= temp @kind wide;
  #L19d61e.  v3:= 5.573325460219186E62D;
  #L19d628.  v10:= v10 * v3 @kind long;
  #L19d62c.  v5:= v9.`org.greenrobot.essentials.hash.Murmur3F.b` @type ^`long` @kind wide;
  #L19d630.  v10:= v10 ^~ v5 @kind long;
  #L19d632.  v9.`org.greenrobot.essentials.hash.Murmur3F.b` @type ^`long` := v10 @kind wide;
  #L19d636.  v5:= 27I;
  #L19d63a.  call temp:= `rotateLeft`(v10, v5) @signature `Ljava/lang/Long;.rotateLeft:(JI)J` @kind static;
  #L19d640.  v10:= temp @kind wide;
  #L19d642.  v5:= v9.`org.greenrobot.essentials.hash.Murmur3F.c` @type ^`long` @kind wide;
  #L19d646.  v10:= v10 + v5 @kind long;
  #L19d648.  v5:= 5L;
  #L19d64c.  v10:= v10 * v5 @kind long;
  #L19d650.  v7:= 1390208809L;
  #L19d656.  v10:= v10 + v7 @kind long;
  #L19d658.  v9.`org.greenrobot.essentials.hash.Murmur3F.b` @type ^`long` := v10 @kind wide;
  #L19d65c.  v12:= v12 * v3 @kind long;
  #L19d660.  v10:= 33I;
  #L19d664.  call temp:= `rotateLeft`(v12, v10) @signature `Ljava/lang/Long;.rotateLeft:(JI)J` @kind static;
  #L19d66a.  v10:= temp @kind wide;
  #L19d66c.  v10:= v10 * v0 @kind long;
  #L19d670.  v12:= v9.`org.greenrobot.essentials.hash.Murmur3F.c` @type ^`long` @kind wide;
  #L19d674.  v10:= v10 ^~ v12 @kind long;
  #L19d676.  v9.`org.greenrobot.essentials.hash.Murmur3F.c` @type ^`long` := v10 @kind wide;
  #L19d67a.  call temp:= `rotateLeft`(v10, v2) @signature `Ljava/lang/Long;.rotateLeft:(JI)J` @kind static;
  #L19d680.  v10:= temp @kind wide;
  #L19d682.  v12:= v9.`org.greenrobot.essentials.hash.Murmur3F.b` @type ^`long` @kind wide;
  #L19d686.  v10:= v10 + v12 @kind long;
  #L19d688.  v10:= v10 * v5 @kind long;
  #L19d68c.  v12:= 944331445L;
  #L19d692.  v10:= v10 + v12 @kind long;
  #L19d694.  v9.`org.greenrobot.essentials.hash.Murmur3F.c` @type ^`long` := v10 @kind wide;
  #L19d698.  return @kind void;
}
procedure `void` `b`(`org.greenrobot.essentials.hash.Murmur3F` v8 @kind this) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19d6ac.  v0:= v8.`org.greenrobot.essentials.hash.Murmur3F.h` @type ^`boolean` @kind boolean;
  #L19d6b0.  if v0 != 0 then goto L19d77c;
  #L19d6b4.  v0:= 1I;
  #L19d6b6.  v8.`org.greenrobot.essentials.hash.Murmur3F.h` @type ^`boolean` := v0 @kind boolean;
  #L19d6ba.  v0:= v8.`org.greenrobot.essentials.hash.Murmur3F.b` @type ^`long` @kind wide;
  #L19d6be.  v8.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` := v0 @kind wide;
  #L19d6c2.  v0:= v8.`org.greenrobot.essentials.hash.Murmur3F.c` @type ^`long` @kind wide;
  #L19d6c6.  v8.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` := v0 @kind wide;
  #L19d6ca.  v0:= v8.`org.greenrobot.essentials.hash.Murmur3F.e` @type ^`int`;
  #L19d6ce.  if v0 <= 0 then goto L19d732;
  #L19d6d2.  v1:= 8I;
  #L19d6d6.  v2:= 5.573325460219186E62D;
  #L19d6e0.  v4:= -8663945395140668459L;
  #L19d6ea.  if v0 <= v1 then goto L19d710;
  #L19d6ee.  v0:= v8.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` @kind wide;
  #L19d6f2.  v0:= v0 * v2 @kind long;
  #L19d6f6.  v6:= 33I;
  #L19d6fa.  call temp:= `rotateLeft`(v0, v6) @signature `Ljava/lang/Long;.rotateLeft:(JI)J` @kind static;
  #L19d700.  v0:= temp @kind wide;
  #L19d702.  v0:= v0 * v4 @kind long;
  #L19d706.  v6:= v8.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` @kind wide;
  #L19d70a.  v0:= v0 ^~ v6 @kind long;
  #L19d70c.  v8.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` := v0 @kind wide;
  #L19d710.  v0:= v8.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` @kind wide;
  #L19d714.  v0:= v0 * v4 @kind long;
  #L19d718.  v4:= 31I;
  #L19d71c.  call temp:= `rotateLeft`(v0, v4) @signature `Ljava/lang/Long;.rotateLeft:(JI)J` @kind static;
  #L19d722.  v0:= temp @kind wide;
  #L19d724.  v0:= v0 * v2 @kind long;
  #L19d728.  v2:= v8.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` @kind wide;
  #L19d72c.  v0:= v0 ^~ v2 @kind long;
  #L19d72e.  v8.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` := v0 @kind wide;
  #L19d732.  v0:= v8.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` @kind wide;
  #L19d736.  v2:= v8.`org.greenrobot.essentials.hash.Murmur3F.d` @type ^`int`;
  #L19d73a.  v3:= (`long`) v2 @kind i2l;
  #L19d73c.  v0:= v0 ^~ v3 @kind long;
  #L19d73e.  v3:= v8.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` @kind wide;
  #L19d742.  v5:= (`long`) v2 @kind i2l;
  #L19d744.  v2:= v3 ^~ v5 @kind long;
  #L19d748.  v0:= v0 + v2 @kind long;
  #L19d74a.  v8.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` := v0 @kind wide;
  #L19d74e.  v2:= v2 + v0 @kind long;
  #L19d750.  v8.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` := v2 @kind wide;
  #L19d754.  call temp:= `c`(v8, v0) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.c:(J)J` @kind direct;
  #L19d75a.  v0:= temp @kind wide;
  #L19d75c.  v8.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` := v0 @kind wide;
  #L19d760.  v0:= v8.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` @kind wide;
  #L19d764.  call temp:= `c`(v8, v0) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.c:(J)J` @kind direct;
  #L19d76a.  v0:= temp @kind wide;
  #L19d76c.  v2:= v8.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` @kind wide;
  #L19d770.  v2:= v2 + v0 @kind long;
  #L19d772.  v8.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` := v2 @kind wide;
  #L19d776.  v0:= v0 + v2 @kind long;
  #L19d778.  v8.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` := v0 @kind wide;
  #L19d77c.  return @kind void;
}
procedure `long` `c`(`org.greenrobot.essentials.hash.Murmur3F` v3 @kind this, `long` v4 ) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.c:(J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L19d514.  v0:= 33I;
  #L19d518.  v1:= v4 ^>> v0 @kind long;
  #L19d51c.  v4:= v4 ^~ v1 @kind long;
  #L19d51e.  v1:= -49064778989728563L;
  #L19d528.  v4:= v4 * v1 @kind long;
  #L19d52c.  v1:= v4 ^>> v0 @kind long;
  #L19d530.  v4:= v4 ^~ v1 @kind long;
  #L19d532.  v1:= -2.902039044684214E23D;
  #L19d53c.  v4:= v4 * v1 @kind long;
  #L19d540.  v0:= v4 ^>> v0 @kind long;
  #L19d544.  v4:= v4 ^~ v0 @kind long;
  #L19d546.  return v4 @kind wide;
}
procedure `java.lang.String` `d`(`org.greenrobot.essentials.hash.Murmur3F` v1 @kind this, `long` v2 ) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.d:(J)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L19d44c.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L19d452.  v2:= temp @kind object;
  #L19d454.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19d45a.  v3:= temp;
  #L19d45c.  v0:= 16I;
  #L19d460.  if v3 >= v0 then goto L19d488;
  #L19d464.  v3:= new `java.lang.StringBuilder`;
  #L19d468.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d46e.  v0:= 48I;
  #L19d472.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d478.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d47e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d484.  v2:= temp @kind object;
  #L19d486.  goto L19d454;
  #L19d488.  return v2 @kind object;
}
procedure `long` `getValue`(`org.greenrobot.essentials.hash.Murmur3F` v2 @kind this) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.getValue:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d558.  call `b`(v2) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.b:()V` @kind direct;
  #L19d55e.  v0:= v2.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` @kind wide;
  #L19d562.  return v0 @kind wide;
}
procedure `java.math.BigInteger` `getValueBigInteger`(`org.greenrobot.essentials.hash.Murmur3F` v3 @kind this) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.getValueBigInteger:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19d4ec.  call temp:= `getValueBytesBigEndian`(v3) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.getValueBytesBigEndian:()[B` @kind virtual;
  #L19d4f2.  v0:= temp @kind object;
  #L19d4f4.  v1:= new `java.math.BigInteger`;
  #L19d4f8.  v2:= 1I;
  #L19d4fa.  call `<init>`(v1, v2, v0) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L19d500.  return v1 @kind object;
}
procedure `byte`[] `getValueBytesBigEndian`(`org.greenrobot.essentials.hash.Murmur3F` v9 @kind this) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.getValueBytesBigEndian:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19d36c.  call `b`(v9) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.b:()V` @kind direct;
  #L19d372.  v0:= 16I;
  #L19d376.  v0:= new `byte`[v0];
  #L19d37a.  v1:= 0I;
  #L19d37c.  v2:= 0I;
  #L19d37e.  v3:= 255L;
  #L19d382.  v5:= 8I;
  #L19d386.  if v2 >= v5 then goto L19d3a8;
  #L19d38a.  v5:= v9.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` @kind wide;
  #L19d38e.  v7:= v2 * 8;
  #L19d392.  v7:= v7 - 56;
  #L19d396.  v5:= v5 ^>> v7 @kind long;
  #L19d398.  v3:= v3 ^& v5 @kind long;
  #L19d39a.  v4:= (`int`) v3 @kind l2i;
  #L19d39c.  v3:= (`byte`) v4 @kind i2b;
  #L19d39e.  v0[v2]:= v3 @kind byte;
  #L19d3a2.  v2:= v2 + 1;
  #L19d3a6.  goto L19d37e;
  #L19d3a8.  if v1 >= v5 then goto L19d3ce;
  #L19d3ac.  v2:= v1 + 8;
  #L19d3b0.  v6:= v9.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` @kind wide;
  #L19d3b4.  v8:= v1 * 8;
  #L19d3b8.  v8:= v8 - 56;
  #L19d3bc.  v6:= v6 ^>> v8 @kind long;
  #L19d3be.  v6:= v6 ^& v3 @kind long;
  #L19d3c0.  v7:= (`int`) v6 @kind l2i;
  #L19d3c2.  v6:= (`byte`) v7 @kind i2b;
  #L19d3c4.  v0[v2]:= v6 @kind byte;
  #L19d3c8.  v1:= v1 + 1;
  #L19d3cc.  goto L19d3a8;
  #L19d3ce.  return v0 @kind object;
}
procedure `byte`[] `getValueBytesLittleEndian`(`org.greenrobot.essentials.hash.Murmur3F` v9 @kind this) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.getValueBytesLittleEndian:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19d3e0.  call `b`(v9) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.b:()V` @kind direct;
  #L19d3e6.  v0:= 16I;
  #L19d3ea.  v0:= new `byte`[v0];
  #L19d3ee.  v1:= 0I;
  #L19d3f0.  v2:= 0I;
  #L19d3f2.  v3:= 255L;
  #L19d3f6.  v5:= 8I;
  #L19d3fa.  if v2 >= v5 then goto L19d418;
  #L19d3fe.  v5:= v9.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` @kind wide;
  #L19d402.  v7:= v2 * 8;
  #L19d406.  v5:= v5 ^>> v7 @kind long;
  #L19d408.  v3:= v3 ^& v5 @kind long;
  #L19d40a.  v4:= (`int`) v3 @kind l2i;
  #L19d40c.  v3:= (`byte`) v4 @kind i2b;
  #L19d40e.  v0[v2]:= v3 @kind byte;
  #L19d412.  v2:= v2 + 1;
  #L19d416.  goto L19d3f2;
  #L19d418.  if v1 >= v5 then goto L19d43a;
  #L19d41c.  v2:= v1 + 8;
  #L19d420.  v6:= v9.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` @kind wide;
  #L19d424.  v8:= v1 * 8;
  #L19d428.  v6:= v6 ^>> v8 @kind long;
  #L19d42a.  v6:= v6 ^& v3 @kind long;
  #L19d42c.  v7:= (`int`) v6 @kind l2i;
  #L19d42e.  v6:= (`byte`) v7 @kind i2b;
  #L19d430.  v0[v2]:= v6 @kind byte;
  #L19d434.  v1:= v1 + 1;
  #L19d438.  goto L19d418;
  #L19d43a.  return v0 @kind object;
}
procedure `java.lang.String` `getValueHexString`(`org.greenrobot.essentials.hash.Murmur3F` v3 @kind this) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.getValueHexString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19d49c.  call `b`(v3) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.b:()V` @kind direct;
  #L19d4a2.  v0:= new `java.lang.StringBuilder`;
  #L19d4a6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d4ac.  v1:= v3.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` @kind wide;
  #L19d4b0.  call temp:= `d`(v3, v1) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.d:(J)Ljava/lang/String;` @kind direct;
  #L19d4b6.  v1:= temp @kind object;
  #L19d4b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d4be.  v1:= v3.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` @kind wide;
  #L19d4c2.  call temp:= `d`(v3, v1) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.d:(J)Ljava/lang/String;` @kind direct;
  #L19d4c8.  v1:= temp @kind object;
  #L19d4ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d4d0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d4d6.  v0:= temp @kind object;
  #L19d4d8.  return v0 @kind object;
}
procedure `long` `getValueHigh`(`org.greenrobot.essentials.hash.Murmur3F` v2 @kind this) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.getValueHigh:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d574.  call `b`(v2) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.b:()V` @kind direct;
  #L19d57a.  v0:= v2.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` @kind wide;
  #L19d57e.  return v0 @kind wide;
}
procedure `void` `reset`(`org.greenrobot.essentials.hash.Murmur3F` v2 @kind this) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d790.  v0:= v2.`org.greenrobot.essentials.hash.Murmur3F.a` @type ^`long` @kind wide;
  #L19d794.  v2.`org.greenrobot.essentials.hash.Murmur3F.c` @type ^`long` := v0 @kind wide;
  #L19d798.  v2.`org.greenrobot.essentials.hash.Murmur3F.b` @type ^`long` := v0 @kind wide;
  #L19d79c.  v0:= 0I;
  #L19d79e.  v2.`org.greenrobot.essentials.hash.Murmur3F.d` @type ^`int` := v0;
  #L19d7a2.  v2.`org.greenrobot.essentials.hash.Murmur3F.e` @type ^`int` := v0;
  #L19d7a6.  v2.`org.greenrobot.essentials.hash.Murmur3F.h` @type ^`boolean` := v0 @kind boolean;
  #L19d7aa.  v0:= 0L;
  #L19d7ae.  v2.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` := v0 @kind wide;
  #L19d7b2.  v2.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` := v0 @kind wide;
  #L19d7b6.  v2.`org.greenrobot.essentials.hash.Murmur3F.j` @type ^`long` := v0 @kind wide;
  #L19d7ba.  v2.`org.greenrobot.essentials.hash.Murmur3F.i` @type ^`long` := v0 @kind wide;
  #L19d7be.  return @kind void;
}
procedure `void` `update`(`org.greenrobot.essentials.hash.Murmur3F` v12 @kind this, `int` v13 ) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.update:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19d880.  v0:= 0I;
  #L19d882.  v12.`org.greenrobot.essentials.hash.Murmur3F.h` @type ^`boolean` := v0 @kind boolean;
  #L19d886.  v1:= v12.`org.greenrobot.essentials.hash.Murmur3F.e` @type ^`int`;
  #L19d88a.  v2:= 56I;
  #L19d88e.  v3:= 48I;
  #L19d892.  v4:= 40I;
  #L19d896.  v5:= 32I;
  #L19d89a.  v6:= 24I;
  #L19d89e.  v7:= 16I;
  #L19d8a2.  v8:= 255L;
  #L19d8a6.  goto L19da14;
  #L19d8ac.  goto L19d9e6;
  #L19d8b0.  v3:= v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` @kind wide;
  #L19d8b4.  v5:= (`long`) v13 @kind i2l;
  #L19d8b6.  v5:= v5 ^& v8 @kind long;
  #L19d8b8.  v5:= v5 ^< v2 @kind long;
  #L19d8ba.  v2:= v3 ^| v5 @kind long;
  #L19d8be.  v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` := v2 @kind wide;
  #L19d8c2.  goto L19d9e6;
  #L19d8c6.  v4:= v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` @kind wide;
  #L19d8ca.  v10:= (`long`) v13 @kind i2l;
  #L19d8cc.  v8:= v8 ^& v10 @kind long;
  #L19d8ce.  v2:= v8 ^< v3 @kind long;
  #L19d8d2.  v2:= v2 ^| v4 @kind long;
  #L19d8d4.  v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` := v2 @kind wide;
  #L19d8d8.  goto L19d9e6;
  #L19d8dc.  v2:= v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` @kind wide;
  #L19d8e0.  v5:= (`long`) v13 @kind i2l;
  #L19d8e2.  v5:= v5 ^& v8 @kind long;
  #L19d8e4.  v4:= v5 ^< v4 @kind long;
  #L19d8e8.  v2:= v2 ^| v4 @kind long;
  #L19d8ea.  v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` := v2 @kind wide;
  #L19d8ee.  goto L19d9e6;
  #L19d8f2.  v2:= v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` @kind wide;
  #L19d8f6.  v10:= (`long`) v13 @kind i2l;
  #L19d8f8.  v8:= v8 ^& v10 @kind long;
  #L19d8fa.  v4:= v8 ^< v5 @kind long;
  #L19d8fe.  v2:= v2 ^| v4 @kind long;
  #L19d900.  v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` := v2 @kind wide;
  #L19d904.  goto L19d9e6;
  #L19d908.  v2:= v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` @kind wide;
  #L19d90c.  v4:= (`long`) v13 @kind i2l;
  #L19d90e.  v4:= v4 ^& v8 @kind long;
  #L19d910.  v4:= v4 ^< v6 @kind long;
  #L19d912.  v2:= v2 ^| v4 @kind long;
  #L19d914.  v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` := v2 @kind wide;
  #L19d918.  goto L19d9e6;
  #L19d91a.  v2:= v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` @kind wide;
  #L19d91e.  v13:= v13 ^& 255;
  #L19d922.  v13:= v13 ^< v7 @kind int;
  #L19d924.  v4:= (`long`) v13 @kind i2l;
  #L19d926.  v2:= v2 ^| v4 @kind long;
  #L19d928.  v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` := v2 @kind wide;
  #L19d92c.  goto L19d9e6;
  #L19d92e.  v2:= v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` @kind wide;
  #L19d932.  v13:= v13 ^& 255;
  #L19d936.  v13:= v13 ^< 8;
  #L19d93a.  v4:= (`long`) v13 @kind i2l;
  #L19d93c.  v2:= v2 ^| v4 @kind long;
  #L19d93e.  v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` := v2 @kind wide;
  #L19d942.  goto L19d9e6;
  #L19d944.  v13:= v13 ^& 255;
  #L19d948.  v2:= (`long`) v13 @kind i2l;
  #L19d94a.  v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` := v2 @kind wide;
  #L19d94e.  goto L19d9e6;
  #L19d950.  v3:= v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` @kind wide;
  #L19d954.  v5:= (`long`) v13 @kind i2l;
  #L19d956.  v5:= v5 ^& v8 @kind long;
  #L19d958.  v5:= v5 ^< v2 @kind long;
  #L19d95a.  v2:= v3 ^| v5 @kind long;
  #L19d95e.  v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` := v2 @kind wide;
  #L19d962.  goto L19d9e6;
  #L19d964.  v4:= v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` @kind wide;
  #L19d968.  v10:= (`long`) v13 @kind i2l;
  #L19d96a.  v8:= v8 ^& v10 @kind long;
  #L19d96c.  v2:= v8 ^< v3 @kind long;
  #L19d970.  v2:= v2 ^| v4 @kind long;
  #L19d972.  v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` := v2 @kind wide;
  #L19d976.  goto L19d9e6;
  #L19d978.  v2:= v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` @kind wide;
  #L19d97c.  v5:= (`long`) v13 @kind i2l;
  #L19d97e.  v5:= v5 ^& v8 @kind long;
  #L19d980.  v4:= v5 ^< v4 @kind long;
  #L19d984.  v2:= v2 ^| v4 @kind long;
  #L19d986.  v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` := v2 @kind wide;
  #L19d98a.  goto L19d9e6;
  #L19d98c.  v2:= v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` @kind wide;
  #L19d990.  v10:= (`long`) v13 @kind i2l;
  #L19d992.  v8:= v8 ^& v10 @kind long;
  #L19d994.  v4:= v8 ^< v5 @kind long;
  #L19d998.  v2:= v2 ^| v4 @kind long;
  #L19d99a.  v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` := v2 @kind wide;
  #L19d99e.  goto L19d9e6;
  #L19d9a0.  v2:= v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` @kind wide;
  #L19d9a4.  v4:= (`long`) v13 @kind i2l;
  #L19d9a6.  v4:= v4 ^& v8 @kind long;
  #L19d9a8.  v4:= v4 ^< v6 @kind long;
  #L19d9aa.  v2:= v2 ^| v4 @kind long;
  #L19d9ac.  v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` := v2 @kind wide;
  #L19d9b0.  goto L19d9e6;
  #L19d9b2.  v2:= v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` @kind wide;
  #L19d9b6.  v13:= v13 ^& 255;
  #L19d9ba.  v13:= v13 ^< v7 @kind int;
  #L19d9bc.  v4:= (`long`) v13 @kind i2l;
  #L19d9be.  v2:= v2 ^| v4 @kind long;
  #L19d9c0.  v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` := v2 @kind wide;
  #L19d9c4.  goto L19d9e6;
  #L19d9c6.  v2:= v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` @kind wide;
  #L19d9ca.  v13:= v13 ^& 255;
  #L19d9ce.  v13:= v13 ^< 8;
  #L19d9d2.  v4:= (`long`) v13 @kind i2l;
  #L19d9d4.  v2:= v2 ^| v4 @kind long;
  #L19d9d6.  v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` := v2 @kind wide;
  #L19d9da.  goto L19d9e6;
  #L19d9dc.  v13:= v13 ^& 255;
  #L19d9e0.  v2:= (`long`) v13 @kind i2l;
  #L19d9e2.  v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` := v2 @kind wide;
  #L19d9e6.  v1:= v1 + 1;
  #L19d9ea.  v12.`org.greenrobot.essentials.hash.Murmur3F.e` @type ^`int` := v1;
  #L19d9ee.  if v1 != v7 then goto L19da04;
  #L19d9f2.  v1:= v12.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` @kind wide;
  #L19d9f6.  v3:= v12.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` @kind wide;
  #L19d9fa.  call `a`(v12, v1, v3) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.a:(JJ)V` @kind direct;
  #L19da00.  v12.`org.greenrobot.essentials.hash.Murmur3F.e` @type ^`int` := v0;
  #L19da04.  v13:= v12.`org.greenrobot.essentials.hash.Murmur3F.d` @type ^`int`;
  #L19da08.  v13:= v13 + 1;
  #L19da0c.  v12.`org.greenrobot.essentials.hash.Murmur3F.d` @type ^`int` := v13;
  #L19da10.  return @kind void;
  #L19da12.  
  #L19da14.  switch v1
                  | 0 => goto L19d9dc
                  | 1 => goto L19d9c6
                  | 2 => goto L19d9b2
                  | 3 => goto L19d9a0
                  | 4 => goto L19d98c
                  | 5 => goto L19d978
                  | 6 => goto L19d964
                  | 7 => goto L19d950
                  | 8 => goto L19d944
                  | 9 => goto L19d92e
                  | 10 => goto L19d91a
                  | 11 => goto L19d908
                  | 12 => goto L19d8f2
                  | 13 => goto L19d8dc
                  | 14 => goto L19d8c6
                  | 15 => goto L19d8b0
                  | else => goto L19d8ac;
}
procedure `void` `update`(`org.greenrobot.essentials.hash.Murmur3F` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.update:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d7d0.  v0:= length @variable v3;
  #L19d7d2.  v1:= 0I;
  #L19d7d4.  call `update`(v2, v3, v1, v0) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.update:([BII)V` @kind virtual;
  #L19d7da.  return @kind void;
}
procedure `void` `update`(`org.greenrobot.essentials.hash.Murmur3F` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.update:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19d7ec.  v0:= 0I;
  #L19d7ee.  v7.`org.greenrobot.essentials.hash.Murmur3F.h` @type ^`boolean` := v0 @kind boolean;
  #L19d7f2.  v1:= v7.`org.greenrobot.essentials.hash.Murmur3F.e` @type ^`int`;
  #L19d7f6.  if v1 == 0 then goto L19d812;
  #L19d7fa.  if v10 <= 0 then goto L19d812;
  #L19d7fe.  v1:= v8[v9] @kind byte;
  #L19d802.  call `update`(v7, v1) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.update:(I)V` @kind virtual;
  #L19d808.  v9:= v9 + 1;
  #L19d80c.  v10:= v10 + -1;
  #L19d810.  goto L19d7f2;
  #L19d812.  v1:= v10 ^& 15;
  #L19d816.  v10:= v10 + v9 @kind int;
  #L19d818.  v10:= v10 - v1 @kind int;
  #L19d81a.  v2:= v9;
  #L19d81c.  if v2 >= v10 then goto L19d848;
  #L19d820.  v3:= `@@org.greenrobot.essentials.hash.Murmur3F.k` @type ^`org.greenrobot.essentials.PrimitiveArrayUtils` @kind object;
  #L19d824.  call temp:= `getLongLE`(v3, v8, v2) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils;.getLongLE:([BI)J` @kind virtual;
  #L19d82a.  v3:= temp @kind wide;
  #L19d82c.  v5:= `@@org.greenrobot.essentials.hash.Murmur3F.k` @type ^`org.greenrobot.essentials.PrimitiveArrayUtils` @kind object;
  #L19d830.  v6:= v2 + 8;
  #L19d834.  call temp:= `getLongLE`(v5, v8, v6) @signature `Lorg/greenrobot/essentials/PrimitiveArrayUtils;.getLongLE:([BI)J` @kind virtual;
  #L19d83a.  v5:= temp @kind wide;
  #L19d83c.  call `a`(v7, v3, v5) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.a:(JJ)V` @kind direct;
  #L19d842.  v2:= v2 + 16;
  #L19d846.  goto L19d81c;
  #L19d848.  v2:= v7.`org.greenrobot.essentials.hash.Murmur3F.d` @type ^`int`;
  #L19d84c.  v9:= v10 - v9 @kind int;
  #L19d850.  v2:= v2 + v9 @kind int;
  #L19d852.  v7.`org.greenrobot.essentials.hash.Murmur3F.d` @type ^`int` := v2;
  #L19d856.  if v0 >= v1 then goto L19d86e;
  #L19d85a.  v9:= v10 + v0 @kind int;
  #L19d85e.  v9:= v8[v9] @kind byte;
  #L19d862.  call `update`(v7, v9) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.update:(I)V` @kind virtual;
  #L19d868.  v0:= v0 + 1;
  #L19d86c.  goto L19d856;
  #L19d86e.  return @kind void;
}
procedure `void` `updateLongBE`(`org.greenrobot.essentials.hash.Murmur3F` v0 @kind this, `long` v1 ) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.updateLongBE:(J)V` @AccessFlag PUBLIC {
    temp;

  #L19da6c.  call temp:= `reverseBytes`(v1) @signature `Ljava/lang/Long;.reverseBytes:(J)J` @kind static;
  #L19da72.  v1:= temp @kind wide;
  #L19da74.  call `updateLongLE`(v0, v1) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.updateLongLE:(J)V` @kind virtual;
  #L19da7a.  return @kind void;
}
procedure `void` `updateLongLE`(`org.greenrobot.essentials.hash.Murmur3F` v5 @kind this, `long` v6 ) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.updateLongLE:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19da8c.  v0:= 0I;
  #L19da8e.  v5.`org.greenrobot.essentials.hash.Murmur3F.h` @type ^`boolean` := v0 @kind boolean;
  #L19da92.  v1:= v5.`org.greenrobot.essentials.hash.Murmur3F.e` @type ^`int`;
  #L19da96.  v2:= 8I;
  #L19da9a.  if v1 == 0 then goto L19dada;
  #L19da9e.  if v1 != v2 then goto L19daa8;
  #L19daa2.  v5.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` := v6 @kind wide;
  #L19daa6.  goto L19dade;
  #L19daa8.  v6:= new `java.lang.IllegalStateException`;
  #L19daac.  v7:= new `java.lang.StringBuilder`;
  #L19dab0.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19dab6.  v0:= "Cannot mix long with other alignments than 8: " @kind object;
  #L19daba.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dac0.  v0:= v5.`org.greenrobot.essentials.hash.Murmur3F.e` @type ^`int`;
  #L19dac4.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19daca.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19dad0.  v7:= temp @kind object;
  #L19dad2.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19dad8.  throw v6;
  #L19dada.  v5.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` := v6 @kind wide;
  #L19dade.  v1:= v1 + v2 @kind int;
  #L19dae0.  v5.`org.greenrobot.essentials.hash.Murmur3F.e` @type ^`int` := v1;
  #L19dae4.  v6:= 16I;
  #L19dae8.  if v1 != v6 then goto L19dafe;
  #L19daec.  v6:= v5.`org.greenrobot.essentials.hash.Murmur3F.f` @type ^`long` @kind wide;
  #L19daf0.  v3:= v5.`org.greenrobot.essentials.hash.Murmur3F.g` @type ^`long` @kind wide;
  #L19daf4.  call `a`(v5, v6, v3) @signature `Lorg/greenrobot/essentials/hash/Murmur3F;.a:(JJ)V` @kind direct;
  #L19dafa.  v5.`org.greenrobot.essentials.hash.Murmur3F.e` @type ^`int` := v0;
  #L19dafe.  v6:= v5.`org.greenrobot.essentials.hash.Murmur3F.d` @type ^`int`;
  #L19db02.  v6:= v6 + v2 @kind int;
  #L19db04.  v5.`org.greenrobot.essentials.hash.Murmur3F.d` @type ^`int` := v6;
  #L19db08.  return @kind void;
}
