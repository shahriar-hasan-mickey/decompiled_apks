record `org.greenrobot.essentials.hash.FNV64` @kind class @AccessFlag PUBLIC extends `java.util.zip.Checksum` @kind interface {
  `long` `org.greenrobot.essentials.hash.FNV64.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.greenrobot.essentials.hash.FNV64` v2 @kind this) @signature `Lorg/greenrobot/essentials/hash/FNV64;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19cbdc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19cbe2.  v0:= -7.302176725335867E57D;
  #L19cbec.  v2.`org.greenrobot.essentials.hash.FNV64.a` @type ^`long` := v0 @kind wide;
  #L19cbf0.  return @kind void;
}
procedure `long` `getValue`(`org.greenrobot.essentials.hash.FNV64` v2 @kind this) @signature `Lorg/greenrobot/essentials/hash/FNV64;.getValue:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19cbc4.  v0:= v2.`org.greenrobot.essentials.hash.FNV64.a` @type ^`long` @kind wide;
  #L19cbc8.  return v0 @kind wide;
}
procedure `void` `reset`(`org.greenrobot.essentials.hash.FNV64` v2 @kind this) @signature `Lorg/greenrobot/essentials/hash/FNV64;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19cc04.  v0:= -7.302176725335867E57D;
  #L19cc0e.  v2.`org.greenrobot.essentials.hash.FNV64.a` @type ^`long` := v0 @kind wide;
  #L19cc12.  return @kind void;
}
procedure `void` `update`(`org.greenrobot.essentials.hash.FNV64` v6 @kind this, `int` v7 ) @signature `Lorg/greenrobot/essentials/hash/FNV64;.update:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19cc68.  v0:= v6.`org.greenrobot.essentials.hash.FNV64.a` @type ^`long` @kind wide;
  #L19cc6c.  v2:= (`long`) v7 @kind i2l;
  #L19cc6e.  v4:= 255L;
  #L19cc72.  v2:= v2 ^& v4 @kind long;
  #L19cc74.  v0:= v0 ^~ v2 @kind long;
  #L19cc76.  v2:= 1099511628211L;
  #L19cc80.  v0:= v0 * v2 @kind long;
  #L19cc84.  v6.`org.greenrobot.essentials.hash.FNV64.a` @type ^`long` := v0 @kind wide;
  #L19cc88.  return @kind void;
}
procedure `void` `update`(`org.greenrobot.essentials.hash.FNV64` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/greenrobot/essentials/hash/FNV64;.update:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19cc24.  v9:= v9 + v8 @kind int;
  #L19cc26.  if v8 >= v9 then goto L19cc54;
  #L19cc2a.  v0:= v6.`org.greenrobot.essentials.hash.FNV64.a` @type ^`long` @kind wide;
  #L19cc2e.  v2:= 255L;
  #L19cc32.  v4:= v7[v8] @kind byte;
  #L19cc36.  v4:= (`long`) v4 @kind i2l;
  #L19cc38.  v2:= v2 ^& v4 @kind long;
  #L19cc3a.  v0:= v0 ^~ v2 @kind long;
  #L19cc3c.  v2:= 1099511628211L;
  #L19cc46.  v0:= v0 * v2 @kind long;
  #L19cc4a.  v6.`org.greenrobot.essentials.hash.FNV64.a` @type ^`long` := v0 @kind wide;
  #L19cc4e.  v8:= v8 + 1;
  #L19cc52.  goto L19cc26;
  #L19cc54.  return @kind void;
}
