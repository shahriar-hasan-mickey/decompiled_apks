record `org.greenrobot.essentials.collections.LongHashSet` @kind class @AccessFlag PUBLIC {
  `org.greenrobot.essentials.collections.LongHashSet$a`[] `org.greenrobot.essentials.collections.LongHashSet.a` @AccessFlag PRIVATE;
  `int` `org.greenrobot.essentials.collections.LongHashSet.b` @AccessFlag PRIVATE;
  `int` `org.greenrobot.essentials.collections.LongHashSet.c` @AccessFlag PRIVATE;
  `int` `org.greenrobot.essentials.collections.LongHashSet.d` @AccessFlag PRIVATE_VOLATILE;
  `float` `org.greenrobot.essentials.collections.LongHashSet.e` @AccessFlag PRIVATE_VOLATILE;
}
global `int` `@@org.greenrobot.essentials.collections.LongHashSet.DEFAULT_CAPACITY` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<init>`(`org.greenrobot.essentials.collections.LongHashSet` v1 @kind this) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19c528.  v0:= 16I;
  #L19c52c.  call `<init>`(v1, v0) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.<init>:(I)V` @kind direct;
  #L19c532.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.essentials.collections.LongHashSet` v2 @kind this, `int` v3 ) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19c544.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19c54a.  v0:= 1067869798I;
  #L19c550.  v2.`org.greenrobot.essentials.collections.LongHashSet.e` @type ^`float` := v0;
  #L19c554.  v2.`org.greenrobot.essentials.collections.LongHashSet.b` @type ^`int` := v3;
  #L19c558.  v0:= (`float`) v3 @kind i2f;
  #L19c55a.  v1:= v2.`org.greenrobot.essentials.collections.LongHashSet.e` @type ^`float`;
  #L19c55e.  v0:= v0 * v1 @kind float;
  #L19c562.  v1:= 0.5F;
  #L19c566.  v0:= v0 + v1 @kind float;
  #L19c568.  v0:= (`int`) v0 @kind f2i;
  #L19c56a.  v2.`org.greenrobot.essentials.collections.LongHashSet.c` @type ^`int` := v0;
  #L19c56e.  v3:= new `org.greenrobot.essentials.collections.LongHashSet$a`[v3];
  #L19c572.  v2.`org.greenrobot.essentials.collections.LongHashSet.a` @type ^`org.greenrobot.essentials.collections.LongHashSet$a`[] := v3 @kind object;
  #L19c576.  return @kind void;
}
procedure `org.greenrobot.essentials.collections.LongHashSet` `createSynchronized`() @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.createSynchronized:()Lorg/greenrobot/essentials/collections/LongHashSet;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19c4ec.  v0:= new `org.greenrobot.essentials.collections.LongHashSet$Synchronized`;
  #L19c4f0.  v1:= 16I;
  #L19c4f4.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/essentials/collections/LongHashSet$Synchronized;.<init>:(I)V` @kind direct;
  #L19c4fa.  return v0 @kind object;
}
procedure `org.greenrobot.essentials.collections.LongHashSet` `createSynchronized`(`int` v1 ) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.createSynchronized:(I)Lorg/greenrobot/essentials/collections/LongHashSet;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19c50c.  v0:= new `org.greenrobot.essentials.collections.LongHashSet$Synchronized`;
  #L19c510.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/essentials/collections/LongHashSet$Synchronized;.<init>:(I)V` @kind direct;
  #L19c516.  return v0 @kind object;
}
procedure `boolean` `add`(`org.greenrobot.essentials.collections.LongHashSet` v6 @kind this, `long` v7 ) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.add:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19c334.  v0:= 32I;
  #L19c338.  v0:= v7 ^>> v0 @kind long;
  #L19c33c.  v1:= (`int`) v0 @kind l2i;
  #L19c33e.  v0:= (`int`) v7 @kind l2i;
  #L19c340.  v0:= v0 ^~ v1 @kind int;
  #L19c342.  v1:= 2147483647I;
  #L19c348.  v0:= v0 ^& v1 @kind int;
  #L19c34a.  v1:= v6.`org.greenrobot.essentials.collections.LongHashSet.b` @type ^`int`;
  #L19c34e.  v0:= v0 %% v1 @kind int;
  #L19c350.  v1:= v6.`org.greenrobot.essentials.collections.LongHashSet.a` @type ^`org.greenrobot.essentials.collections.LongHashSet$a`[] @kind object;
  #L19c354.  v1:= v1[v0] @kind object;
  #L19c358.  v2:= v1 @kind object;
  #L19c35a.  if v2 == 0 then goto L19c374;
  #L19c35e.  v3:= v2.`org.greenrobot.essentials.collections.LongHashSet$a.a` @type ^`long` @kind wide;
  #L19c362.  v5:= lcmp(v3, v7);
  #L19c366.  if v5 != 0 then goto L19c36e;
  #L19c36a.  v7:= 0I;
  #L19c36c.  return v7;
  #L19c36e.  v2:= v2.`org.greenrobot.essentials.collections.LongHashSet$a.b` @type ^`org.greenrobot.essentials.collections.LongHashSet$a` @kind object;
  #L19c372.  goto L19c35a;
  #L19c374.  v2:= v6.`org.greenrobot.essentials.collections.LongHashSet.a` @type ^`org.greenrobot.essentials.collections.LongHashSet$a`[] @kind object;
  #L19c378.  v3:= new `org.greenrobot.essentials.collections.LongHashSet$a`;
  #L19c37c.  call `<init>`(v3, v7, v1) @signature `Lorg/greenrobot/essentials/collections/LongHashSet$a;.<init>:(JLorg/greenrobot/essentials/collections/LongHashSet$a;)V` @kind direct;
  #L19c382.  v2[v0]:= v3 @kind object;
  #L19c386.  v7:= v6.`org.greenrobot.essentials.collections.LongHashSet.d` @type ^`int`;
  #L19c38a.  v8:= 1I;
  #L19c38c.  v7:= v7 + v8 @kind int;
  #L19c38e.  v6.`org.greenrobot.essentials.collections.LongHashSet.d` @type ^`int` := v7;
  #L19c392.  v7:= v6.`org.greenrobot.essentials.collections.LongHashSet.d` @type ^`int`;
  #L19c396.  v0:= v6.`org.greenrobot.essentials.collections.LongHashSet.c` @type ^`int`;
  #L19c39a.  if v7 <= v0 then goto L19c3ac;
  #L19c39e.  v7:= v6.`org.greenrobot.essentials.collections.LongHashSet.b` @type ^`int`;
  #L19c3a2.  v7:= v7 * 2;
  #L19c3a6.  call `setCapacity`(v6, v7) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.setCapacity:(I)V` @kind virtual;
  #L19c3ac.  return v8;
}
procedure `void` `clear`(`org.greenrobot.essentials.collections.LongHashSet` v2 @kind this) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c588.  v0:= 0I;
  #L19c58a.  v2.`org.greenrobot.essentials.collections.LongHashSet.d` @type ^`int` := v0;
  #L19c58e.  v0:= v2.`org.greenrobot.essentials.collections.LongHashSet.a` @type ^`org.greenrobot.essentials.collections.LongHashSet$a`[] @kind object;
  #L19c592.  v1:= 0I;
  #L19c594.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L19c59a.  return @kind void;
}
procedure `boolean` `contains`(`org.greenrobot.essentials.collections.LongHashSet` v4 @kind this, `long` v5 ) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.contains:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19c3c0.  v0:= 32I;
  #L19c3c4.  v0:= v5 ^>> v0 @kind long;
  #L19c3c8.  v1:= (`int`) v0 @kind l2i;
  #L19c3ca.  v0:= (`int`) v5 @kind l2i;
  #L19c3cc.  v0:= v0 ^~ v1 @kind int;
  #L19c3ce.  v1:= 2147483647I;
  #L19c3d4.  v0:= v0 ^& v1 @kind int;
  #L19c3d6.  v1:= v4.`org.greenrobot.essentials.collections.LongHashSet.b` @type ^`int`;
  #L19c3da.  v0:= v0 %% v1 @kind int;
  #L19c3dc.  v1:= v4.`org.greenrobot.essentials.collections.LongHashSet.a` @type ^`org.greenrobot.essentials.collections.LongHashSet$a`[] @kind object;
  #L19c3e0.  v0:= v1[v0] @kind object;
  #L19c3e4.  if v0 == 0 then goto L19c3fe;
  #L19c3e8.  v1:= v0.`org.greenrobot.essentials.collections.LongHashSet$a.a` @type ^`long` @kind wide;
  #L19c3ec.  v3:= lcmp(v1, v5);
  #L19c3f0.  if v3 != 0 then goto L19c3f8;
  #L19c3f4.  v5:= 1I;
  #L19c3f6.  return v5;
  #L19c3f8.  v0:= v0.`org.greenrobot.essentials.collections.LongHashSet$a.b` @type ^`org.greenrobot.essentials.collections.LongHashSet$a` @kind object;
  #L19c3fc.  goto L19c3e4;
  #L19c3fe.  v5:= 0I;
  #L19c400.  return v5;
}
procedure `long`[] `keys`(`org.greenrobot.essentials.collections.LongHashSet` v9 @kind this) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.keys:()[J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19c4a0.  v0:= v9.`org.greenrobot.essentials.collections.LongHashSet.d` @type ^`int`;
  #L19c4a4.  v0:= new `long`[v0];
  #L19c4a8.  v1:= v9.`org.greenrobot.essentials.collections.LongHashSet.a` @type ^`org.greenrobot.essentials.collections.LongHashSet$a`[] @kind object;
  #L19c4ac.  v2:= length @variable v1;
  #L19c4ae.  v3:= 0I;
  #L19c4b0.  v4:= 0I;
  #L19c4b2.  if v3 >= v2 then goto L19c4d8;
  #L19c4b6.  v5:= v1[v3] @kind object;
  #L19c4ba.  if v5 == 0 then goto L19c4d2;
  #L19c4be.  v6:= v4 + 1;
  #L19c4c2.  v7:= v5.`org.greenrobot.essentials.collections.LongHashSet$a.a` @type ^`long` @kind wide;
  #L19c4c6.  v0[v4]:= v7 @kind wide;
  #L19c4ca.  v5:= v5.`org.greenrobot.essentials.collections.LongHashSet$a.b` @type ^`org.greenrobot.essentials.collections.LongHashSet$a` @kind object;
  #L19c4ce.  v4:= v6;
  #L19c4d0.  goto L19c4ba;
  #L19c4d2.  v3:= v3 + 1;
  #L19c4d6.  goto L19c4b2;
  #L19c4d8.  return v0 @kind object;
}
procedure `boolean` `remove`(`org.greenrobot.essentials.collections.LongHashSet` v7 @kind this, `long` v8 ) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.remove:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19c414.  v0:= 32I;
  #L19c418.  v0:= v8 ^>> v0 @kind long;
  #L19c41c.  v1:= (`int`) v0 @kind l2i;
  #L19c41e.  v0:= (`int`) v8 @kind l2i;
  #L19c420.  v0:= v0 ^~ v1 @kind int;
  #L19c422.  v1:= 2147483647I;
  #L19c428.  v0:= v0 ^& v1 @kind int;
  #L19c42a.  v1:= v7.`org.greenrobot.essentials.collections.LongHashSet.b` @type ^`int`;
  #L19c42e.  v0:= v0 %% v1 @kind int;
  #L19c430.  v1:= v7.`org.greenrobot.essentials.collections.LongHashSet.a` @type ^`org.greenrobot.essentials.collections.LongHashSet$a`[] @kind object;
  #L19c434.  v1:= v1[v0] @kind object;
  #L19c438.  v2:= 0I;
  #L19c43a.  if v1 == 0 then goto L19c474;
  #L19c43e.  v3:= v1.`org.greenrobot.essentials.collections.LongHashSet$a.b` @type ^`org.greenrobot.essentials.collections.LongHashSet$a` @kind object;
  #L19c442.  v4:= v1.`org.greenrobot.essentials.collections.LongHashSet$a.a` @type ^`long` @kind wide;
  #L19c446.  v6:= lcmp(v4, v8);
  #L19c44a.  if v6 != 0 then goto L19c46e;
  #L19c44e.  if v2 != 0 then goto L19c45c;
  #L19c452.  v8:= v7.`org.greenrobot.essentials.collections.LongHashSet.a` @type ^`org.greenrobot.essentials.collections.LongHashSet$a`[] @kind object;
  #L19c456.  v8[v0]:= v3 @kind object;
  #L19c45a.  goto L19c460;
  #L19c45c.  v2.`org.greenrobot.essentials.collections.LongHashSet$a.b` @type ^`org.greenrobot.essentials.collections.LongHashSet$a` := v3 @kind object;
  #L19c460.  v8:= v7.`org.greenrobot.essentials.collections.LongHashSet.d` @type ^`int`;
  #L19c464.  v9:= 1I;
  #L19c466.  v8:= v8 - v9 @kind int;
  #L19c468.  v7.`org.greenrobot.essentials.collections.LongHashSet.d` @type ^`int` := v8;
  #L19c46c.  return v9;
  #L19c46e.  v2:= v1 @kind object;
  #L19c470.  v1:= v3 @kind object;
  #L19c472.  goto L19c43a;
  #L19c474.  v8:= 0I;
  #L19c476.  return v8;
}
procedure `void` `reserveRoom`(`org.greenrobot.essentials.collections.LongHashSet` v1 @kind this, `int` v2 ) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.reserveRoom:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c5ac.  v2:= (`float`) v2 @kind i2f;
  #L19c5ae.  v0:= v1.`org.greenrobot.essentials.collections.LongHashSet.e` @type ^`float`;
  #L19c5b2.  v2:= v2 * v0 @kind float;
  #L19c5b6.  v0:= 1067869798I;
  #L19c5bc.  v2:= v2 * v0 @kind float;
  #L19c5c0.  v0:= 0.5F;
  #L19c5c4.  v2:= v2 + v0 @kind float;
  #L19c5c6.  v2:= (`int`) v2 @kind f2i;
  #L19c5c8.  call `setCapacity`(v1, v2) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.setCapacity:(I)V` @kind virtual;
  #L19c5ce.  return @kind void;
}
procedure `void` `setCapacity`(`org.greenrobot.essentials.collections.LongHashSet` v9 @kind this, `int` v10 ) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.setCapacity:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19c5e0.  v0:= new `org.greenrobot.essentials.collections.LongHashSet$a`[v10];
  #L19c5e4.  v1:= v9.`org.greenrobot.essentials.collections.LongHashSet.a` @type ^`org.greenrobot.essentials.collections.LongHashSet$a`[] @kind object;
  #L19c5e8.  v2:= length @variable v1;
  #L19c5ea.  v3:= 0I;
  #L19c5ec.  if v3 >= v2 then goto L19c630;
  #L19c5f0.  v4:= v1[v3] @kind object;
  #L19c5f4.  if v4 == 0 then goto L19c62a;
  #L19c5f8.  v5:= v4.`org.greenrobot.essentials.collections.LongHashSet$a.a` @type ^`long` @kind wide;
  #L19c5fc.  v7:= 32I;
  #L19c600.  v7:= v5 ^>> v7 @kind long;
  #L19c604.  v8:= (`int`) v7 @kind l2i;
  #L19c606.  v6:= (`int`) v5 @kind l2i;
  #L19c608.  v5:= v8 ^~ v6 @kind int;
  #L19c60c.  v6:= 2147483647I;
  #L19c612.  v5:= v5 ^& v6 @kind int;
  #L19c614.  v5:= v5 %% v10 @kind int;
  #L19c616.  v6:= v4.`org.greenrobot.essentials.collections.LongHashSet$a.b` @type ^`org.greenrobot.essentials.collections.LongHashSet$a` @kind object;
  #L19c61a.  v7:= v0[v5] @kind object;
  #L19c61e.  v4.`org.greenrobot.essentials.collections.LongHashSet$a.b` @type ^`org.greenrobot.essentials.collections.LongHashSet$a` := v7 @kind object;
  #L19c622.  v0[v5]:= v4 @kind object;
  #L19c626.  v4:= v6 @kind object;
  #L19c628.  goto L19c5f4;
  #L19c62a.  v3:= v3 + 1;
  #L19c62e.  goto L19c5ec;
  #L19c630.  v9.`org.greenrobot.essentials.collections.LongHashSet.a` @type ^`org.greenrobot.essentials.collections.LongHashSet$a`[] := v0 @kind object;
  #L19c634.  v9.`org.greenrobot.essentials.collections.LongHashSet.b` @type ^`int` := v10;
  #L19c638.  v10:= (`float`) v10 @kind i2f;
  #L19c63a.  v0:= v9.`org.greenrobot.essentials.collections.LongHashSet.e` @type ^`float`;
  #L19c63e.  v10:= v10 * v0 @kind float;
  #L19c642.  v0:= 0.5F;
  #L19c646.  v10:= v10 + v0 @kind float;
  #L19c648.  v10:= (`int`) v10 @kind f2i;
  #L19c64a.  v9.`org.greenrobot.essentials.collections.LongHashSet.c` @type ^`int` := v10;
  #L19c64e.  return @kind void;
}
procedure `void` `setLoadFactor`(`org.greenrobot.essentials.collections.LongHashSet` v0 @kind this, `float` v1 ) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.setLoadFactor:(F)V` @AccessFlag PUBLIC {
    temp;

  #L19c660.  v0.`org.greenrobot.essentials.collections.LongHashSet.e` @type ^`float` := v1;
  #L19c664.  return @kind void;
}
procedure `int` `size`(`org.greenrobot.essentials.collections.LongHashSet` v1 @kind this) @signature `Lorg/greenrobot/essentials/collections/LongHashSet;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c488.  v0:= v1.`org.greenrobot.essentials.collections.LongHashSet.d` @type ^`int`;
  #L19c48c.  return v0;
}
