record `org.greenrobot.essentials.collections.MultimapSet` @kind class @AccessFlag PUBLIC extends `org.greenrobot.essentials.collections.AbstractMultimap` @kind class {
  `org.greenrobot.essentials.collections.MultimapSet$SetType` `org.greenrobot.essentials.collections.MultimapSet.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.essentials.collections.MultimapSet` v0 @kind this, `java.util.Map` v1 @kind object, `org.greenrobot.essentials.collections.MultimapSet$SetType` v2 @kind object) @signature `Lorg/greenrobot/essentials/collections/MultimapSet;.<init>:(Ljava/util/Map;Lorg/greenrobot/essentials/collections/MultimapSet$SetType;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L19c9bc.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/essentials/collections/AbstractMultimap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L19c9c2.  v0.`org.greenrobot.essentials.collections.MultimapSet.a` @type ^`org.greenrobot.essentials.collections.MultimapSet$SetType` := v2 @kind object;
  #L19c9c6.  return @kind void;
}
procedure `org.greenrobot.essentials.collections.MultimapSet` `create`() @signature `Lorg/greenrobot/essentials/collections/MultimapSet;.create:()Lorg/greenrobot/essentials/collections/MultimapSet;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19c974.  v0:= `@@org.greenrobot.essentials.collections.MultimapSet$SetType.REGULAR` @type ^`org.greenrobot.essentials.collections.MultimapSet$SetType` @kind object;
  #L19c978.  call temp:= `create`(v0) @signature `Lorg/greenrobot/essentials/collections/MultimapSet;.create:(Lorg/greenrobot/essentials/collections/MultimapSet$SetType;)Lorg/greenrobot/essentials/collections/MultimapSet;` @kind static;
  #L19c97e.  v0:= temp @kind object;
  #L19c980.  return v0 @kind object;
}
procedure `org.greenrobot.essentials.collections.MultimapSet` `create`(`org.greenrobot.essentials.collections.MultimapSet$SetType` v2 @kind object) @signature `Lorg/greenrobot/essentials/collections/MultimapSet;.create:(Lorg/greenrobot/essentials/collections/MultimapSet$SetType;)Lorg/greenrobot/essentials/collections/MultimapSet;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19c994.  v0:= new `org.greenrobot.essentials.collections.MultimapSet`;
  #L19c998.  v1:= new `java.util.HashMap`;
  #L19c99c.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L19c9a2.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/essentials/collections/MultimapSet;.<init>:(Ljava/util/Map;Lorg/greenrobot/essentials/collections/MultimapSet$SetType;)V` @kind direct;
  #L19c9a8.  return v0 @kind object;
}
procedure `java.util.Collection` `createNewCollection`(`org.greenrobot.essentials.collections.MultimapSet` v1 @kind this) @signature `Lorg/greenrobot/essentials/collections/MultimapSet;.createNewCollection:()Ljava/util/Collection;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L19c8dc.  call temp:= `createNewCollection`(v1) @signature `Lorg/greenrobot/essentials/collections/MultimapSet;.createNewCollection:()Ljava/util/Set;` @kind virtual;
  #L19c8e2.  v0:= temp @kind object;
  #L19c8e4.  return v0 @kind object;
}
procedure `java.util.Set` `createNewCollection`(`org.greenrobot.essentials.collections.MultimapSet` v3 @kind this) @signature `Lorg/greenrobot/essentials/collections/MultimapSet;.createNewCollection:()Ljava/util/Set;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L19c8f8.  v0:= `@@org.greenrobot.essentials.collections.MultimapSet$a.a` @type ^`int`[] @kind object;
  #L19c8fc.  v1:= v3.`org.greenrobot.essentials.collections.MultimapSet.a` @type ^`org.greenrobot.essentials.collections.MultimapSet$SetType` @kind object;
  #L19c900.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L19c906.  v1:= temp;
  #L19c908.  v0:= v0[v1];
  #L19c90c.  v1:= 1I;
  #L19c90e.  if v0 == v1 then goto L19c956;
  #L19c912.  v1:= 2I;
  #L19c914.  if v0 != v1 then goto L19c924;
  #L19c918.  v0:= new `java.util.concurrent.CopyOnWriteArraySet`;
  #L19c91c.  call `<init>`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArraySet;.<init>:()V` @kind direct;
  #L19c922.  return v0 @kind object;
  #L19c924.  v0:= new `java.lang.IllegalStateException`;
  #L19c928.  v1:= new `java.lang.StringBuilder`;
  #L19c92c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c932.  v2:= "Unknown set type: " @kind object;
  #L19c936.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c93c.  v2:= v3.`org.greenrobot.essentials.collections.MultimapSet.a` @type ^`org.greenrobot.essentials.collections.MultimapSet$SetType` @kind object;
  #L19c940.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c946.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c94c.  v1:= temp @kind object;
  #L19c94e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c954.  throw v0;
  #L19c956.  v0:= new `java.util.HashSet`;
  #L19c95a.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L19c960.  return v0 @kind object;
}
