record `org.greenrobot.essentials.collections.LongHashMap` @kind class @AccessFlag PUBLIC {
  `org.greenrobot.essentials.collections.LongHashMap$Entry`[] `org.greenrobot.essentials.collections.LongHashMap.a` @AccessFlag PRIVATE;
  `int` `org.greenrobot.essentials.collections.LongHashMap.b` @AccessFlag PRIVATE;
  `int` `org.greenrobot.essentials.collections.LongHashMap.c` @AccessFlag PRIVATE;
  `int` `org.greenrobot.essentials.collections.LongHashMap.d` @AccessFlag PRIVATE_VOLATILE;
}
global `int` `@@org.greenrobot.essentials.collections.LongHashMap.DEFAULT_CAPACITY` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<init>`(`org.greenrobot.essentials.collections.LongHashMap` v1 @kind this) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19c0a4.  v0:= 16I;
  #L19c0a8.  call `<init>`(v1, v0) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.<init>:(I)V` @kind direct;
  #L19c0ae.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.essentials.collections.LongHashMap` v1 @kind this, `int` v2 ) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19c0c0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19c0c6.  v1.`org.greenrobot.essentials.collections.LongHashMap.b` @type ^`int` := v2;
  #L19c0ca.  v0:= v2 * 4;
  #L19c0ce.  v0:= v0 / 3;
  #L19c0d2.  v1.`org.greenrobot.essentials.collections.LongHashMap.c` @type ^`int` := v0;
  #L19c0d6.  v2:= new `org.greenrobot.essentials.collections.LongHashMap$Entry`[v2];
  #L19c0da.  v1.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] := v2 @kind object;
  #L19c0de.  return @kind void;
}
procedure `org.greenrobot.essentials.collections.LongHashMap` `createSynchronized`() @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.createSynchronized:()Lorg/greenrobot/essentials/collections/LongHashMap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19c020.  v0:= new `org.greenrobot.essentials.collections.LongHashMap$Synchronized`;
  #L19c024.  v1:= 16I;
  #L19c028.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/essentials/collections/LongHashMap$Synchronized;.<init>:(I)V` @kind direct;
  #L19c02e.  return v0 @kind object;
}
procedure `org.greenrobot.essentials.collections.LongHashMap` `createSynchronized`(`int` v1 ) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.createSynchronized:(I)Lorg/greenrobot/essentials/collections/LongHashMap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19c040.  v0:= new `org.greenrobot.essentials.collections.LongHashMap$Synchronized`;
  #L19c044.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/essentials/collections/LongHashMap$Synchronized;.<init>:(I)V` @kind direct;
  #L19c04a.  return v0 @kind object;
}
procedure `void` `clear`(`org.greenrobot.essentials.collections.LongHashMap` v2 @kind this) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c0f0.  v0:= 0I;
  #L19c0f2.  v2.`org.greenrobot.essentials.collections.LongHashMap.d` @type ^`int` := v0;
  #L19c0f6.  v0:= v2.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] @kind object;
  #L19c0fa.  v1:= 0I;
  #L19c0fc.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L19c102.  return @kind void;
}
procedure `boolean` `containsKey`(`org.greenrobot.essentials.collections.LongHashMap` v4 @kind this, `long` v5 ) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.containsKey:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19be08.  v0:= 32I;
  #L19be0c.  v0:= v5 ^>> v0 @kind long;
  #L19be10.  v1:= (`int`) v0 @kind l2i;
  #L19be12.  v0:= (`int`) v5 @kind l2i;
  #L19be14.  v0:= v0 ^~ v1 @kind int;
  #L19be16.  v1:= 2147483647I;
  #L19be1c.  v0:= v0 ^& v1 @kind int;
  #L19be1e.  v1:= v4.`org.greenrobot.essentials.collections.LongHashMap.b` @type ^`int`;
  #L19be22.  v0:= v0 %% v1 @kind int;
  #L19be24.  v1:= v4.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] @kind object;
  #L19be28.  v0:= v1[v0] @kind object;
  #L19be2c.  if v0 == 0 then goto L19be46;
  #L19be30.  v1:= v0.`org.greenrobot.essentials.collections.LongHashMap$Entry.key` @type ^`long` @kind wide;
  #L19be34.  v3:= lcmp(v1, v5);
  #L19be38.  if v3 != 0 then goto L19be40;
  #L19be3c.  v5:= 1I;
  #L19be3e.  return v5;
  #L19be40.  v0:= v0.`org.greenrobot.essentials.collections.LongHashMap$Entry.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry` @kind object;
  #L19be44.  goto L19be2c;
  #L19be46.  v5:= 0I;
  #L19be48.  return v5;
}
procedure `org.greenrobot.essentials.collections.LongHashMap$Entry`[] `entries`(`org.greenrobot.essentials.collections.LongHashMap` v7 @kind this) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.entries:()[Lorg/greenrobot/essentials/collections/LongHashMap$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19c05c.  v0:= v7.`org.greenrobot.essentials.collections.LongHashMap.d` @type ^`int`;
  #L19c060.  v0:= new `org.greenrobot.essentials.collections.LongHashMap$Entry`[v0];
  #L19c064.  v1:= v7.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] @kind object;
  #L19c068.  v2:= length @variable v1;
  #L19c06a.  v3:= 0I;
  #L19c06c.  v4:= 0I;
  #L19c06e.  if v3 >= v2 then goto L19c090;
  #L19c072.  v5:= v1[v3] @kind object;
  #L19c076.  if v5 == 0 then goto L19c08a;
  #L19c07a.  v6:= v4 + 1;
  #L19c07e.  v0[v4]:= v5 @kind object;
  #L19c082.  v5:= v5.`org.greenrobot.essentials.collections.LongHashMap$Entry.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry` @kind object;
  #L19c086.  v4:= v6;
  #L19c088.  goto L19c076;
  #L19c08a.  v3:= v3 + 1;
  #L19c08e.  goto L19c06e;
  #L19c090.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`org.greenrobot.essentials.collections.LongHashMap` v4 @kind this, `long` v5 ) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.get:(J)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19be74.  v0:= 32I;
  #L19be78.  v0:= v5 ^>> v0 @kind long;
  #L19be7c.  v1:= (`int`) v0 @kind l2i;
  #L19be7e.  v0:= (`int`) v5 @kind l2i;
  #L19be80.  v0:= v0 ^~ v1 @kind int;
  #L19be82.  v1:= 2147483647I;
  #L19be88.  v0:= v0 ^& v1 @kind int;
  #L19be8a.  v1:= v4.`org.greenrobot.essentials.collections.LongHashMap.b` @type ^`int`;
  #L19be8e.  v0:= v0 %% v1 @kind int;
  #L19be90.  v1:= v4.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] @kind object;
  #L19be94.  v0:= v1[v0] @kind object;
  #L19be98.  if v0 == 0 then goto L19beb4;
  #L19be9c.  v1:= v0.`org.greenrobot.essentials.collections.LongHashMap$Entry.key` @type ^`long` @kind wide;
  #L19bea0.  v3:= lcmp(v1, v5);
  #L19bea4.  if v3 != 0 then goto L19beae;
  #L19bea8.  v5:= v0.`org.greenrobot.essentials.collections.LongHashMap$Entry.value` @type ^`java.lang.Object` @kind object;
  #L19beac.  return v5 @kind object;
  #L19beae.  v0:= v0.`org.greenrobot.essentials.collections.LongHashMap$Entry.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry` @kind object;
  #L19beb2.  goto L19be98;
  #L19beb4.  v5:= 0I;
  #L19beb6.  return v5 @kind object;
}
procedure `long`[] `keys`(`org.greenrobot.essentials.collections.LongHashMap` v9 @kind this) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.keys:()[J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19bfd4.  v0:= v9.`org.greenrobot.essentials.collections.LongHashMap.d` @type ^`int`;
  #L19bfd8.  v0:= new `long`[v0];
  #L19bfdc.  v1:= v9.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] @kind object;
  #L19bfe0.  v2:= length @variable v1;
  #L19bfe2.  v3:= 0I;
  #L19bfe4.  v4:= 0I;
  #L19bfe6.  if v3 >= v2 then goto L19c00c;
  #L19bfea.  v5:= v1[v3] @kind object;
  #L19bfee.  if v5 == 0 then goto L19c006;
  #L19bff2.  v6:= v4 + 1;
  #L19bff6.  v7:= v5.`org.greenrobot.essentials.collections.LongHashMap$Entry.key` @type ^`long` @kind wide;
  #L19bffa.  v0[v4]:= v7 @kind wide;
  #L19bffe.  v5:= v5.`org.greenrobot.essentials.collections.LongHashMap$Entry.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry` @kind object;
  #L19c002.  v4:= v6;
  #L19c004.  goto L19bfee;
  #L19c006.  v3:= v3 + 1;
  #L19c00a.  goto L19bfe6;
  #L19c00c.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`org.greenrobot.essentials.collections.LongHashMap` v6 @kind this, `long` v7 , `java.lang.Object` v9 @kind object) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.put:(JLjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19bec8.  v0:= 32I;
  #L19becc.  v0:= v7 ^>> v0 @kind long;
  #L19bed0.  v1:= (`int`) v0 @kind l2i;
  #L19bed2.  v0:= (`int`) v7 @kind l2i;
  #L19bed4.  v0:= v0 ^~ v1 @kind int;
  #L19bed6.  v1:= 2147483647I;
  #L19bedc.  v0:= v0 ^& v1 @kind int;
  #L19bede.  v1:= v6.`org.greenrobot.essentials.collections.LongHashMap.b` @type ^`int`;
  #L19bee2.  v0:= v0 %% v1 @kind int;
  #L19bee4.  v1:= v6.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] @kind object;
  #L19bee8.  v1:= v1[v0] @kind object;
  #L19beec.  v2:= v1 @kind object;
  #L19beee.  if v2 == 0 then goto L19bf0e;
  #L19bef2.  v3:= v2.`org.greenrobot.essentials.collections.LongHashMap$Entry.key` @type ^`long` @kind wide;
  #L19bef6.  v5:= lcmp(v3, v7);
  #L19befa.  if v5 != 0 then goto L19bf08;
  #L19befe.  v7:= v2.`org.greenrobot.essentials.collections.LongHashMap$Entry.value` @type ^`java.lang.Object` @kind object;
  #L19bf02.  v2.`org.greenrobot.essentials.collections.LongHashMap$Entry.value` @type ^`java.lang.Object` := v9 @kind object;
  #L19bf06.  return v7 @kind object;
  #L19bf08.  v2:= v2.`org.greenrobot.essentials.collections.LongHashMap$Entry.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry` @kind object;
  #L19bf0c.  goto L19beee;
  #L19bf0e.  v2:= v6.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] @kind object;
  #L19bf12.  v3:= new `org.greenrobot.essentials.collections.LongHashMap$Entry`;
  #L19bf16.  call `<init>`(v3, v7, v9, v1) @signature `Lorg/greenrobot/essentials/collections/LongHashMap$Entry;.<init>:(JLjava/lang/Object;Lorg/greenrobot/essentials/collections/LongHashMap$Entry;)V` @kind direct;
  #L19bf1c.  v2[v0]:= v3 @kind object;
  #L19bf20.  v7:= v6.`org.greenrobot.essentials.collections.LongHashMap.d` @type ^`int`;
  #L19bf24.  v7:= v7 + 1;
  #L19bf28.  v6.`org.greenrobot.essentials.collections.LongHashMap.d` @type ^`int` := v7;
  #L19bf2c.  v7:= v6.`org.greenrobot.essentials.collections.LongHashMap.d` @type ^`int`;
  #L19bf30.  v8:= v6.`org.greenrobot.essentials.collections.LongHashMap.c` @type ^`int`;
  #L19bf34.  if v7 <= v8 then goto L19bf46;
  #L19bf38.  v7:= v6.`org.greenrobot.essentials.collections.LongHashMap.b` @type ^`int`;
  #L19bf3c.  v7:= v7 * 2;
  #L19bf40.  call `setCapacity`(v6, v7) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.setCapacity:(I)V` @kind virtual;
  #L19bf46.  v7:= 0I;
  #L19bf48.  return v7 @kind object;
}
procedure `java.lang.Object` `remove`(`org.greenrobot.essentials.collections.LongHashMap` v8 @kind this, `long` v9 ) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.remove:(J)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19bf5c.  v0:= 32I;
  #L19bf60.  v0:= v9 ^>> v0 @kind long;
  #L19bf64.  v1:= (`int`) v0 @kind l2i;
  #L19bf66.  v0:= (`int`) v9 @kind l2i;
  #L19bf68.  v0:= v0 ^~ v1 @kind int;
  #L19bf6a.  v1:= 2147483647I;
  #L19bf70.  v0:= v0 ^& v1 @kind int;
  #L19bf72.  v1:= v8.`org.greenrobot.essentials.collections.LongHashMap.b` @type ^`int`;
  #L19bf76.  v0:= v0 %% v1 @kind int;
  #L19bf78.  v1:= v8.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] @kind object;
  #L19bf7c.  v1:= v1[v0] @kind object;
  #L19bf80.  v2:= 0I;
  #L19bf82.  v3:= v2 @kind object;
  #L19bf84.  if v1 == 0 then goto L19bfc2;
  #L19bf88.  v4:= v1.`org.greenrobot.essentials.collections.LongHashMap$Entry.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry` @kind object;
  #L19bf8c.  v5:= v1.`org.greenrobot.essentials.collections.LongHashMap$Entry.key` @type ^`long` @kind wide;
  #L19bf90.  v7:= lcmp(v5, v9);
  #L19bf94.  if v7 != 0 then goto L19bfbc;
  #L19bf98.  if v3 != 0 then goto L19bfa6;
  #L19bf9c.  v9:= v8.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] @kind object;
  #L19bfa0.  v9[v0]:= v4 @kind object;
  #L19bfa4.  goto L19bfaa;
  #L19bfa6.  v3.`org.greenrobot.essentials.collections.LongHashMap$Entry.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry` := v4 @kind object;
  #L19bfaa.  v9:= v8.`org.greenrobot.essentials.collections.LongHashMap.d` @type ^`int`;
  #L19bfae.  v9:= v9 + -1;
  #L19bfb2.  v8.`org.greenrobot.essentials.collections.LongHashMap.d` @type ^`int` := v9;
  #L19bfb6.  v9:= v1.`org.greenrobot.essentials.collections.LongHashMap$Entry.value` @type ^`java.lang.Object` @kind object;
  #L19bfba.  return v9 @kind object;
  #L19bfbc.  v3:= v1 @kind object;
  #L19bfbe.  v1:= v4 @kind object;
  #L19bfc0.  goto L19bf84;
  #L19bfc2.  return v2 @kind object;
}
procedure `void` `reserveRoom`(`org.greenrobot.essentials.collections.LongHashMap` v0 @kind this, `int` v1 ) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.reserveRoom:(I)V` @AccessFlag PUBLIC {
    temp;

  #L19c114.  v1:= v1 * 5;
  #L19c118.  v1:= v1 / 3;
  #L19c11c.  call `setCapacity`(v0, v1) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.setCapacity:(I)V` @kind virtual;
  #L19c122.  return @kind void;
}
procedure `void` `setCapacity`(`org.greenrobot.essentials.collections.LongHashMap` v9 @kind this, `int` v10 ) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.setCapacity:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19c134.  v0:= new `org.greenrobot.essentials.collections.LongHashMap$Entry`[v10];
  #L19c138.  v1:= v9.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] @kind object;
  #L19c13c.  v2:= length @variable v1;
  #L19c13e.  v3:= 0I;
  #L19c140.  if v3 >= v2 then goto L19c184;
  #L19c144.  v4:= v1[v3] @kind object;
  #L19c148.  if v4 == 0 then goto L19c17e;
  #L19c14c.  v5:= v4.`org.greenrobot.essentials.collections.LongHashMap$Entry.key` @type ^`long` @kind wide;
  #L19c150.  v7:= 32I;
  #L19c154.  v7:= v5 ^>> v7 @kind long;
  #L19c158.  v8:= (`int`) v7 @kind l2i;
  #L19c15a.  v6:= (`int`) v5 @kind l2i;
  #L19c15c.  v5:= v8 ^~ v6 @kind int;
  #L19c160.  v6:= 2147483647I;
  #L19c166.  v5:= v5 ^& v6 @kind int;
  #L19c168.  v5:= v5 %% v10 @kind int;
  #L19c16a.  v6:= v4.`org.greenrobot.essentials.collections.LongHashMap$Entry.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry` @kind object;
  #L19c16e.  v7:= v0[v5] @kind object;
  #L19c172.  v4.`org.greenrobot.essentials.collections.LongHashMap$Entry.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry` := v7 @kind object;
  #L19c176.  v0[v5]:= v4 @kind object;
  #L19c17a.  v4:= v6 @kind object;
  #L19c17c.  goto L19c148;
  #L19c17e.  v3:= v3 + 1;
  #L19c182.  goto L19c140;
  #L19c184.  v9.`org.greenrobot.essentials.collections.LongHashMap.a` @type ^`org.greenrobot.essentials.collections.LongHashMap$Entry`[] := v0 @kind object;
  #L19c188.  v9.`org.greenrobot.essentials.collections.LongHashMap.b` @type ^`int` := v10;
  #L19c18c.  v10:= v10 * 4;
  #L19c190.  v10:= v10 / 3;
  #L19c194.  v9.`org.greenrobot.essentials.collections.LongHashMap.c` @type ^`int` := v10;
  #L19c198.  return @kind void;
}
procedure `int` `size`(`org.greenrobot.essentials.collections.LongHashMap` v1 @kind this) @signature `Lorg/greenrobot/essentials/collections/LongHashMap;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19be5c.  v0:= v1.`org.greenrobot.essentials.collections.LongHashMap.d` @type ^`int`;
  #L19be60.  return v0;
}
