record `org.greenrobot.essentials.io.IoUtils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.greenrobot.essentials.io.IoUtils` v0 @kind this) @signature `Lorg/greenrobot/essentials/io/IoUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L19e9ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19e9f2.  return @kind void;
}
procedure `int` `copyAllBytes`(`java.io.InputStream` v5 @kind object, `java.io.OutputStream` v6 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.copyAllBytes:(Ljava/io/InputStream;Ljava/io/OutputStream;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19e8c0.  v0:= 8192I;
  #L19e8c4.  v0:= new `byte`[v0];
  #L19e8c8.  v1:= 0I;
  #L19e8ca.  v2:= 0I;
  #L19e8cc.  call temp:= `read`(v5, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L19e8d2.  v3:= temp;
  #L19e8d4.  v4:= -1I;
  #L19e8d6.  if v3 != v4 then goto L19e8dc;
  #L19e8da.  return v2;
  #L19e8dc.  call `write`(v6, v0, v1, v3) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L19e8e2.  v2:= v2 + v3 @kind int;
  #L19e8e4.  goto L19e8cc;
}
procedure `byte`[] `getDigest`(`java.io.InputStream` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.getDigest:(Ljava/io/InputStream;Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19e7fc.  call temp:= `getInstance`(v4) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L19e802.  v4:= temp @kind object;
  #L19e804.  v0:= 8192I;
  #L19e808.  v0:= new `byte`[v0];
  #L19e80c.  call temp:= `read`(v3, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L19e812.  v1:= temp;
  #L19e814.  v2:= -1I;
  #L19e816.  if v1 != v2 then goto L19e824;
  #L19e81a.  call temp:= `digest`(v4) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L19e820.  v3:= temp @kind object;
  #L19e822.  return v3 @kind object;
  #L19e824.  v2:= 0I;
  #L19e826.  call `update`(v4, v0, v2, v1) @signature `Ljava/security/MessageDigest;.update:([BII)V` @kind virtual;
  #L19e82c.  goto L19e80c;
  #L19e82e.  v3:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L19e830.  v4:= new `java.lang.RuntimeException`;
  #L19e834.  call `<init>`(v4, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19e83a.  throw v4;
  catch `java.security.NoSuchAlgorithmException` @[L19e7fc..L19e804] goto L19e82e;
}
procedure `java.lang.String` `getMd5`(`java.io.InputStream` v1 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.getMd5:(Ljava/io/InputStream;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e8f8.  v0:= "MD5" @kind object;
  #L19e8fc.  call temp:= `getDigest`(v1, v0) @signature `Lorg/greenrobot/essentials/io/IoUtils;.getDigest:(Ljava/io/InputStream;Ljava/lang/String;)[B` @kind static;
  #L19e902.  v1:= temp @kind object;
  #L19e904.  call temp:= `hex`(v1) @signature `Lorg/greenrobot/essentials/StringUtils;.hex:([B)Ljava/lang/String;` @kind static;
  #L19e90a.  v1:= temp @kind object;
  #L19e90c.  return v1 @kind object;
}
procedure `java.lang.String` `getSha1`(`java.io.InputStream` v1 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.getSha1:(Ljava/io/InputStream;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e920.  v0:= "SHA-1" @kind object;
  #L19e924.  call temp:= `getDigest`(v1, v0) @signature `Lorg/greenrobot/essentials/io/IoUtils;.getDigest:(Ljava/io/InputStream;Ljava/lang/String;)[B` @kind static;
  #L19e92a.  v1:= temp @kind object;
  #L19e92c.  call temp:= `hex`(v1) @signature `Lorg/greenrobot/essentials/StringUtils;.hex:([B)Ljava/lang/String;` @kind static;
  #L19e932.  v1:= temp @kind object;
  #L19e934.  return v1 @kind object;
}
procedure `java.lang.String` `getSha256`(`java.io.InputStream` v1 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.getSha256:(Ljava/io/InputStream;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e948.  v0:= "SHA-256" @kind object;
  #L19e94c.  call temp:= `getDigest`(v1, v0) @signature `Lorg/greenrobot/essentials/io/IoUtils;.getDigest:(Ljava/io/InputStream;Ljava/lang/String;)[B` @kind static;
  #L19e952.  v1:= temp @kind object;
  #L19e954.  call temp:= `hex`(v1) @signature `Lorg/greenrobot/essentials/StringUtils;.hex:([B)Ljava/lang/String;` @kind static;
  #L19e95a.  v1:= temp @kind object;
  #L19e95c.  return v1 @kind object;
}
procedure `byte`[] `readAllBytes`(`java.io.InputStream` v1 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.readAllBytes:(Ljava/io/InputStream;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e85c.  v0:= new `java.io.ByteArrayOutputStream`;
  #L19e860.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L19e866.  call temp:= `copyAllBytes`(v1, v0) @signature `Lorg/greenrobot/essentials/io/IoUtils;.copyAllBytes:(Ljava/io/InputStream;Ljava/io/OutputStream;)I` @kind static;
  #L19e86c.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L19e872.  v1:= temp @kind object;
  #L19e874.  return v1 @kind object;
}
procedure `byte`[] `readAllBytesAndClose`(`java.io.InputStream` v1 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.readAllBytesAndClose:(Ljava/io/InputStream;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e888.  call temp:= `readAllBytes`(v1) @signature `Lorg/greenrobot/essentials/io/IoUtils;.readAllBytes:(Ljava/io/InputStream;)[B` @kind static;
  #L19e88e.  v0:= temp @kind object;
  #L19e890.  call `safeClose`(v1) @signature `Lorg/greenrobot/essentials/io/IoUtils;.safeClose:(Ljava/io/Closeable;)V` @kind static;
  #L19e896.  return v0 @kind object;
  #L19e898.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19e89a.  call `safeClose`(v1) @signature `Lorg/greenrobot/essentials/io/IoUtils;.safeClose:(Ljava/io/Closeable;)V` @kind static;
  #L19e8a0.  throw v0;
  catch `java.lang.Throwable` @[L19e888..L19e890] goto L19e898;
}
procedure `java.lang.String` `readAllChars`(`java.io.Reader` v4 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.readAllChars:(Ljava/io/Reader;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19e970.  v0:= 4096I;
  #L19e974.  v0:= new `char`[v0];
  #L19e978.  v1:= new `java.lang.StringBuilder`;
  #L19e97c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e982.  call temp:= `read`(v4, v0) @signature `Ljava/io/Reader;.read:([C)I` @kind virtual;
  #L19e988.  v2:= temp;
  #L19e98a.  v3:= -1I;
  #L19e98c.  if v2 != v3 then goto L19e99a;
  #L19e990.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e996.  v4:= temp @kind object;
  #L19e998.  return v4 @kind object;
  #L19e99a.  v3:= 0I;
  #L19e99c.  call temp:= `append`(v1, v0, v3, v2) @signature `Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e9a2.  goto L19e982;
}
procedure `java.lang.String` `readAllCharsAndClose`(`java.io.Reader` v1 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.readAllCharsAndClose:(Ljava/io/Reader;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e9b4.  call temp:= `readAllChars`(v1) @signature `Lorg/greenrobot/essentials/io/IoUtils;.readAllChars:(Ljava/io/Reader;)Ljava/lang/String;` @kind static;
  #L19e9ba.  v0:= temp @kind object;
  #L19e9bc.  call `safeClose`(v1) @signature `Lorg/greenrobot/essentials/io/IoUtils;.safeClose:(Ljava/io/Closeable;)V` @kind static;
  #L19e9c2.  return v0 @kind object;
  #L19e9c4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19e9c6.  call `safeClose`(v1) @signature `Lorg/greenrobot/essentials/io/IoUtils;.safeClose:(Ljava/io/Closeable;)V` @kind static;
  #L19e9cc.  throw v0;
  catch `java.lang.Throwable` @[L19e9b4..L19e9bc] goto L19e9c4;
}
procedure `void` `safeClose`(`java.io.Closeable` v0 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.safeClose:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L19ea04.  if v0 == 0 then goto L19ea0e;
  #L19ea08.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L19ea0e.  return @kind void;
  catch `java.io.IOException` @[L19ea08..L19ea0e] goto L19ea0e;
}
procedure `void` `updateChecksum`(`java.io.InputStream` v3 @kind object, `java.util.zip.Checksum` v4 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.updateChecksum:(Ljava/io/InputStream;Ljava/util/zip/Checksum;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19ea30.  v0:= 8192I;
  #L19ea34.  v0:= new `byte`[v0];
  #L19ea38.  call temp:= `read`(v3, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L19ea3e.  v1:= temp;
  #L19ea40.  v2:= -1I;
  #L19ea42.  if v1 != v2 then goto L19ea48;
  #L19ea46.  return @kind void;
  #L19ea48.  v2:= 0I;
  #L19ea4a.  call `update`(v4, v0, v2, v1) @signature `Ljava/util/zip/Checksum;.update:([BII)V` @kind interface;
  #L19ea50.  goto L19ea38;
}
procedure `void` `writeAllCharsAndClose`(`java.io.Writer` v0 @kind object, `java.lang.CharSequence` v1 @kind object) @signature `Lorg/greenrobot/essentials/io/IoUtils;.writeAllCharsAndClose:(Ljava/io/Writer;Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L19ea64.  call temp:= `append`(v0, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L19ea6a.  call `safeClose`(v0) @signature `Lorg/greenrobot/essentials/io/IoUtils;.safeClose:(Ljava/io/Closeable;)V` @kind static;
  #L19ea70.  return @kind void;
  #L19ea72.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19ea74.  call `safeClose`(v0) @signature `Lorg/greenrobot/essentials/io/IoUtils;.safeClose:(Ljava/io/Closeable;)V` @kind static;
  #L19ea7a.  throw v1;
  catch `java.lang.Throwable` @[L19ea64..L19ea6a] goto L19ea72;
}
