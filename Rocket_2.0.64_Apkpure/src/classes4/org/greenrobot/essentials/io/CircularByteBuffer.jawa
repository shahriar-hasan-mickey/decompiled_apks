record `org.greenrobot.essentials.io.CircularByteBuffer` @kind class @AccessFlag PUBLIC {
  `byte`[] `org.greenrobot.essentials.io.CircularByteBuffer.a` @AccessFlag PRIVATE_FINAL;
  `int` `org.greenrobot.essentials.io.CircularByteBuffer.b` @AccessFlag PRIVATE_FINAL;
  `int` `org.greenrobot.essentials.io.CircularByteBuffer.c` @AccessFlag PRIVATE;
  `int` `org.greenrobot.essentials.io.CircularByteBuffer.d` @AccessFlag PRIVATE;
  `int` `org.greenrobot.essentials.io.CircularByteBuffer.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.greenrobot.essentials.io.CircularByteBuffer` v1 @kind this) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19e294.  v0:= 8192I;
  #L19e298.  call `<init>`(v1, v0) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.<init>:(I)V` @kind direct;
  #L19e29e.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.essentials.io.CircularByteBuffer` v0 @kind this, `int` v1 ) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L19e2b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19e2b6.  v0.`org.greenrobot.essentials.io.CircularByteBuffer.b` @type ^`int` := v1;
  #L19e2ba.  v1:= new `byte`[v1];
  #L19e2be.  v0.`org.greenrobot.essentials.io.CircularByteBuffer.a` @type ^`byte`[] := v1 @kind object;
  #L19e2c2.  return @kind void;
}
procedure `int` `available`(`org.greenrobot.essentials.io.CircularByteBuffer` v1 @kind this) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19df3c.  @monitorenter v1
  #L19df3e.  v0:= v1.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int`;
  #L19df42.  @monitorexit v1
  #L19df44.  return v0;
  #L19df46.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19df48.  @monitorexit v1
  #L19df4a.  throw v0;
  catch `java.lang.Throwable` @[L19df3e..L19df42] goto L19df46;
}
procedure `int` `capacity`(`org.greenrobot.essentials.io.CircularByteBuffer` v1 @kind this) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.capacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19df68.  v0:= v1.`org.greenrobot.essentials.io.CircularByteBuffer.b` @type ^`int`;
  #L19df6c.  return v0;
}
procedure `void` `clear`(`org.greenrobot.essentials.io.CircularByteBuffer` v1 @kind this) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e2d4.  @monitorenter v1
  #L19e2d6.  v0:= 0I;
  #L19e2d8.  v1.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int` := v0;
  #L19e2dc.  v1.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int` := v0;
  #L19e2e0.  v1.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int` := v0;
  #L19e2e4.  @monitorexit v1
  #L19e2e6.  return @kind void;
  #L19e2e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19e2ea.  @monitorexit v1
  #L19e2ec.  throw v0;
  catch `java.lang.Throwable` @[L19e2d8..L19e2e4] goto L19e2e8;
}
procedure `int` `free`(`org.greenrobot.essentials.io.CircularByteBuffer` v2 @kind this) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.free:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19df80.  @monitorenter v2
  #L19df82.  v0:= v2.`org.greenrobot.essentials.io.CircularByteBuffer.b` @type ^`int`;
  #L19df86.  v1:= v2.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int`;
  #L19df8a.  v0:= v0 - v1 @kind int;
  #L19df8c.  @monitorexit v2
  #L19df8e.  return v0;
  #L19df90.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19df92.  @monitorexit v2
  #L19df94.  throw v0;
  catch `java.lang.Throwable` @[L19df82..L19df8a] goto L19df90;
}
procedure `int` `get`(`org.greenrobot.essentials.io.CircularByteBuffer` v4 @kind this) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.get:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19dfb4.  @monitorenter v4
  #L19dfb6.  v0:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int`;
  #L19dfba.  if v0 != 0 then goto L19dfc4;
  #L19dfbe.  v0:= -1I;
  #L19dfc0.  @monitorexit v4
  #L19dfc2.  return v0;
  #L19dfc4.  v1:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.a` @type ^`byte`[] @kind object;
  #L19dfc8.  v2:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int`;
  #L19dfcc.  v1:= v1[v2] @kind byte;
  #L19dfd0.  v2:= v2 + 1;
  #L19dfd4.  v3:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.b` @type ^`int`;
  #L19dfd8.  v2:= v2 %% v3 @kind int;
  #L19dfda.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int` := v2;
  #L19dfde.  v0:= v0 + -1;
  #L19dfe2.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int` := v0;
  #L19dfe6.  @monitorexit v4
  #L19dfe8.  return v1;
  #L19dfea.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19dfec.  @monitorexit v4
  #L19dfee.  throw v0;
  catch `java.lang.Throwable` @[L19dfb6..L19dfba] goto L19dfea;
  catch `java.lang.Throwable` @[L19dfc4..L19dfe6] goto L19dfea;
}
procedure `int` `get`(`org.greenrobot.essentials.io.CircularByteBuffer` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.get:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e014.  v0:= length @variable v3;
  #L19e016.  v1:= 0I;
  #L19e018.  call temp:= `get`(v2, v3, v1, v0) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.get:([BII)I` @kind virtual;
  #L19e01e.  v3:= temp;
  #L19e020.  return v3;
}
procedure `int` `get`(`org.greenrobot.essentials.io.CircularByteBuffer` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.get:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19e034.  @monitorenter v4
  #L19e036.  v0:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int`;
  #L19e03a.  v1:= 0I;
  #L19e03c.  if v0 != 0 then goto L19e044;
  #L19e040.  @monitorexit v4
  #L19e042.  return v1;
  #L19e044.  v0:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int`;
  #L19e048.  v2:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int`;
  #L19e04c.  if v0 >= v2 then goto L19e052;
  #L19e050.  goto L19e056;
  #L19e052.  v2:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.b` @type ^`int`;
  #L19e056.  v2:= v2 - v0 @kind int;
  #L19e058.  call temp:= `min`(v2, v7) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L19e05e.  v0:= temp;
  #L19e060.  v2:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.a` @type ^`byte`[] @kind object;
  #L19e064.  v3:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int`;
  #L19e068.  call `arraycopy`(v2, v3, v5, v6, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19e06e.  v2:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int`;
  #L19e072.  v2:= v2 + v0 @kind int;
  #L19e074.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int` := v2;
  #L19e078.  v3:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.b` @type ^`int`;
  #L19e07c.  if v2 != v3 then goto L19e0aa;
  #L19e080.  v7:= v7 - v0 @kind int;
  #L19e082.  v2:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int`;
  #L19e086.  call temp:= `min`(v7, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L19e08c.  v7:= temp;
  #L19e08e.  if v7 <= 0 then goto L19e0a6;
  #L19e092.  v2:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.a` @type ^`byte`[] @kind object;
  #L19e096.  v6:= v6 + v0 @kind int;
  #L19e098.  call `arraycopy`(v2, v1, v5, v6, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19e09e.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int` := v7;
  #L19e0a2.  v0:= v0 + v7 @kind int;
  #L19e0a4.  goto L19e0aa;
  #L19e0a6.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int` := v1;
  #L19e0aa.  v5:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int`;
  #L19e0ae.  v5:= v5 - v0 @kind int;
  #L19e0b0.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int` := v5;
  #L19e0b4.  @monitorexit v4
  #L19e0b6.  return v0;
  #L19e0b8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19e0ba.  @monitorexit v4
  #L19e0bc.  throw v5;
  catch `java.lang.Throwable` @[L19e036..L19e03a] goto L19e0b8;
  catch `java.lang.Throwable` @[L19e044..L19e0b4] goto L19e0b8;
}
procedure `int` `peek`(`org.greenrobot.essentials.io.CircularByteBuffer` v2 @kind this) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.peek:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e0e4.  @monitorenter v2
  #L19e0e6.  v0:= v2.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int`;
  #L19e0ea.  if v0 <= 0 then goto L19e0fc;
  #L19e0ee.  v0:= v2.`org.greenrobot.essentials.io.CircularByteBuffer.a` @type ^`byte`[] @kind object;
  #L19e0f2.  v1:= v2.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int`;
  #L19e0f6.  v0:= v0[v1] @kind byte;
  #L19e0fa.  goto L19e0fe;
  #L19e0fc.  v0:= -1I;
  #L19e0fe.  @monitorexit v2
  #L19e100.  return v0;
  #L19e102.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19e104.  @monitorexit v2
  #L19e106.  throw v0;
  catch `java.lang.Throwable` @[L19e0e6..L19e0fa] goto L19e102;
}
procedure `int` `put`(`org.greenrobot.essentials.io.CircularByteBuffer` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.put:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e124.  v0:= length @variable v3;
  #L19e126.  v1:= 0I;
  #L19e128.  call temp:= `put`(v2, v3, v1, v0) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.put:([BII)I` @kind virtual;
  #L19e12e.  v3:= temp;
  #L19e130.  return v3;
}
procedure `int` `put`(`org.greenrobot.essentials.io.CircularByteBuffer` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.put:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19e144.  @monitorenter v4
  #L19e146.  v0:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int`;
  #L19e14a.  v1:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.b` @type ^`int`;
  #L19e14e.  v2:= 0I;
  #L19e150.  if v0 != v1 then goto L19e158;
  #L19e154.  @monitorexit v4
  #L19e156.  return v2;
  #L19e158.  v0:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int`;
  #L19e15c.  v3:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int`;
  #L19e160.  if v0 >= v3 then goto L19e166;
  #L19e164.  v1:= v3;
  #L19e166.  v1:= v1 - v0 @kind int;
  #L19e168.  call temp:= `min`(v1, v7) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L19e16e.  v0:= temp;
  #L19e170.  v1:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.a` @type ^`byte`[] @kind object;
  #L19e174.  v3:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int`;
  #L19e178.  call `arraycopy`(v5, v6, v1, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19e17e.  v1:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int`;
  #L19e182.  v1:= v1 + v0 @kind int;
  #L19e184.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int` := v1;
  #L19e188.  v3:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.b` @type ^`int`;
  #L19e18c.  if v1 != v3 then goto L19e1ba;
  #L19e190.  v7:= v7 - v0 @kind int;
  #L19e192.  v1:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int`;
  #L19e196.  call temp:= `min`(v7, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L19e19c.  v7:= temp;
  #L19e19e.  if v7 <= 0 then goto L19e1b6;
  #L19e1a2.  v6:= v6 + v0 @kind int;
  #L19e1a4.  v1:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.a` @type ^`byte`[] @kind object;
  #L19e1a8.  call `arraycopy`(v5, v6, v1, v2, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19e1ae.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int` := v7;
  #L19e1b2.  v0:= v0 + v7 @kind int;
  #L19e1b4.  goto L19e1ba;
  #L19e1b6.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int` := v2;
  #L19e1ba.  v5:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int`;
  #L19e1be.  v5:= v5 + v0 @kind int;
  #L19e1c0.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int` := v5;
  #L19e1c4.  @monitorexit v4
  #L19e1c6.  return v0;
  #L19e1c8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19e1ca.  @monitorexit v4
  #L19e1cc.  throw v5;
  catch `java.lang.Throwable` @[L19e146..L19e14e] goto L19e1c8;
  catch `java.lang.Throwable` @[L19e158..L19e1c4] goto L19e1c8;
}
procedure `boolean` `put`(`org.greenrobot.essentials.io.CircularByteBuffer` v4 @kind this, `byte` v5 ) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.put:(B)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19deb0.  @monitorenter v4
  #L19deb2.  v0:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int`;
  #L19deb6.  v1:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.b` @type ^`int`;
  #L19deba.  if v0 != v1 then goto L19dec4;
  #L19debe.  v5:= 0I;
  #L19dec0.  @monitorexit v4
  #L19dec2.  return v5;
  #L19dec4.  v2:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.a` @type ^`byte`[] @kind object;
  #L19dec8.  v3:= v4.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int`;
  #L19decc.  v2[v3]:= v5 @kind byte;
  #L19ded0.  v5:= 1I;
  #L19ded2.  v3:= v3 + v5 @kind int;
  #L19ded4.  v3:= v3 %% v1 @kind int;
  #L19ded6.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int` := v3;
  #L19deda.  v0:= v0 + v5 @kind int;
  #L19dedc.  v4.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int` := v0;
  #L19dee0.  @monitorexit v4
  #L19dee2.  return v5;
  #L19dee4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19dee6.  @monitorexit v4
  #L19dee8.  throw v5;
  catch `java.lang.Throwable` @[L19deb2..L19deba] goto L19dee4;
  catch `java.lang.Throwable` @[L19dec4..L19dee0] goto L19dee4;
}
procedure `byte`[] `rawBuffer`(`org.greenrobot.essentials.io.CircularByteBuffer` v1 @kind this) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.rawBuffer:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19df10.  @monitorenter v1
  #L19df12.  v0:= v1.`org.greenrobot.essentials.io.CircularByteBuffer.a` @type ^`byte`[] @kind object;
  #L19df16.  @monitorexit v1
  #L19df18.  return v0 @kind object;
  #L19df1a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19df1c.  @monitorexit v1
  #L19df1e.  throw v0;
  catch `java.lang.Throwable` @[L19df12..L19df16] goto L19df1a;
}
procedure `int` `rawIndexGet`(`org.greenrobot.essentials.io.CircularByteBuffer` v1 @kind this) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.rawIndexGet:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e1f4.  @monitorenter v1
  #L19e1f6.  v0:= v1.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int`;
  #L19e1fa.  @monitorexit v1
  #L19e1fc.  return v0;
  #L19e1fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19e200.  @monitorexit v1
  #L19e202.  throw v0;
  catch `java.lang.Throwable` @[L19e1f6..L19e1fa] goto L19e1fe;
}
procedure `int` `rawIndexPut`(`org.greenrobot.essentials.io.CircularByteBuffer` v1 @kind this) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.rawIndexPut:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e220.  @monitorenter v1
  #L19e222.  v0:= v1.`org.greenrobot.essentials.io.CircularByteBuffer.e` @type ^`int`;
  #L19e226.  @monitorexit v1
  #L19e228.  return v0;
  #L19e22a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19e22c.  @monitorexit v1
  #L19e22e.  throw v0;
  catch `java.lang.Throwable` @[L19e222..L19e226] goto L19e22a;
}
procedure `int` `skip`(`org.greenrobot.essentials.io.CircularByteBuffer` v3 @kind this, `int` v4 ) @signature `Lorg/greenrobot/essentials/io/CircularByteBuffer;.skip:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19e24c.  @monitorenter v3
  #L19e24e.  v0:= v3.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int`;
  #L19e252.  if v4 <= v0 then goto L19e258;
  #L19e256.  v4:= v0;
  #L19e258.  v1:= v3.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int`;
  #L19e25c.  v1:= v1 + v4 @kind int;
  #L19e25e.  v2:= v3.`org.greenrobot.essentials.io.CircularByteBuffer.b` @type ^`int`;
  #L19e262.  v1:= v1 %% v2 @kind int;
  #L19e264.  v3.`org.greenrobot.essentials.io.CircularByteBuffer.d` @type ^`int` := v1;
  #L19e268.  v0:= v0 - v4 @kind int;
  #L19e26a.  v3.`org.greenrobot.essentials.io.CircularByteBuffer.c` @type ^`int` := v0;
  #L19e26e.  @monitorexit v3
  #L19e270.  return v4;
  #L19e272.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19e274.  @monitorexit v3
  #L19e276.  throw v4;
  catch `java.lang.Throwable` @[L19e24e..L19e26e] goto L19e272;
}
