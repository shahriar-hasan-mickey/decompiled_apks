record `org.reactivestreams.FlowAdapters$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.Flow$Processor` @kind interface {
  `org.reactivestreams.Processor` `org.reactivestreams.FlowAdapters$b.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.reactivestreams.FlowAdapters$b` v0 @kind this, `org.reactivestreams.Processor` v1 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$b;.<init>:(Lorg/reactivestreams/Processor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L19f100.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19f106.  v0.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` := v1 @kind object;
  #L19f10a.  return @kind void;
}
procedure `void` `onComplete`(`org.reactivestreams.FlowAdapters$b` v1 @kind this) @signature `Lorg/reactivestreams/FlowAdapters$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19f11c.  v0:= v1.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L19f120.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L19f126.  return @kind void;
}
procedure `void` `onError`(`org.reactivestreams.FlowAdapters$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19f138.  v0:= v1.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L19f13c.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L19f142.  return @kind void;
}
procedure `void` `onNext`(`org.reactivestreams.FlowAdapters$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19f154.  v0:= v1.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L19f158.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L19f15e.  return @kind void;
}
procedure `void` `onSubscribe`(`org.reactivestreams.FlowAdapters$b` v2 @kind this, `java.util.concurrent.Flow$Subscription` v3 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$b;.onSubscribe:(Ljava/util/concurrent/Flow$Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19f170.  v0:= v2.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L19f174.  if v3 != 0 then goto L19f17c;
  #L19f178.  v3:= 0I;
  #L19f17a.  goto L19f188;
  #L19f17c.  v1:= new `org.reactivestreams.FlowAdapters$h`;
  #L19f180.  call `<init>`(v1, v3) @signature `Lorg/reactivestreams/FlowAdapters$h;.<init>:(Ljava/util/concurrent/Flow$Subscription;)V` @kind direct;
  #L19f186.  v3:= v1 @kind object;
  #L19f188.  call `onSubscribe`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L19f18e.  return @kind void;
}
procedure `void` `subscribe`(`org.reactivestreams.FlowAdapters$b` v2 @kind this, `java.util.concurrent.Flow$Subscriber` v3 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$b;.subscribe:(Ljava/util/concurrent/Flow$Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19f1a0.  v0:= v2.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L19f1a4.  if v3 != 0 then goto L19f1ac;
  #L19f1a8.  v3:= 0I;
  #L19f1aa.  goto L19f1b8;
  #L19f1ac.  v1:= new `org.reactivestreams.FlowAdapters$g`;
  #L19f1b0.  call `<init>`(v1, v3) @signature `Lorg/reactivestreams/FlowAdapters$g;.<init>:(Ljava/util/concurrent/Flow$Subscriber;)V` @kind direct;
  #L19f1b6.  v3:= v1 @kind object;
  #L19f1b8.  call `subscribe`(v0, v3) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L19f1be.  return @kind void;
}
