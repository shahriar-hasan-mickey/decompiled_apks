record `p0.x1` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `java.lang.CharSequence` `p0.x1.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `com.idtp.dbbl.view.TransferFragment` `p0.x1.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.text.DecimalFormat` `p0.x1.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`p0.x1` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `com.idtp.dbbl.view.TransferFragment` v2 @kind object, `java.text.DecimalFormat` v3 @kind object) @signature `Lp0/x1;.<init>:(Ljava/lang/CharSequence;Lcom/idtp/dbbl/view/TransferFragment;Ljava/text/DecimalFormat;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1be090.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1be096.  v0.`p0.x1.a` @type ^`java.lang.CharSequence` := v1 @kind object;
  #L1be09a.  v0.`p0.x1.b` @type ^`com.idtp.dbbl.view.TransferFragment` := v2 @kind object;
  #L1be09e.  v0.`p0.x1.c` @type ^`java.text.DecimalFormat` := v3 @kind object;
  #L1be0a2.  return @kind void;
}
procedure `void` `run`(`p0.x1` v3 @kind this) @signature `Lp0/x1;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1be0b4.  v0:= v3.`p0.x1.a` @type ^`java.lang.CharSequence` @kind object;
  #L1be0b8.  v1:= v3.`p0.x1.b` @type ^`com.idtp.dbbl.view.TransferFragment` @kind object;
  #L1be0bc.  v2:= v3.`p0.x1.c` @type ^`java.text.DecimalFormat` @kind object;
  #L1be0c0.  call `a`(v0, v1, v2) @signature `Lcom/idtp/dbbl/view/TransferFragment$onViewCreated$4;.a:(Ljava/lang/CharSequence;Lcom/idtp/dbbl/view/TransferFragment;Ljava/text/DecimalFormat;)V` @kind static;
  #L1be0c6.  return @kind void;
}
