record `com.google.crypto.tink.KeysetManager` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.crypto.tink.proto.Keyset$Builder` `com.google.crypto.tink.KeysetManager.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.KeysetManager` v0 @kind this, `com.google.crypto.tink.proto.Keyset$Builder` v1 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.<init>:(Lcom/google/crypto/tink/proto/Keyset$Builder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L439a48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L439a4e.  v0.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` := v1 @kind object;
  #L439a52.  return @kind void;
}
procedure `boolean` `a`(`com.google.crypto.tink.KeysetManager` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/KeysetManager;.a:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L43919c.  @monitorenter v2
  #L43919e.  v0:= v2.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4391a2.  call temp:= `getKeyList`(v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyList:()Ljava/util/List;` @kind virtual;
  #L4391a8.  v0:= temp @kind object;
  #L4391aa.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4391b0.  v0:= temp @kind object;
  #L4391b2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4391b8.  v1:= temp;
  #L4391ba.  if v1 == 0 then goto L4391dc;
  #L4391be.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4391c4.  v1:= temp @kind object;
  #L4391c6.  v1:= (`com.google.crypto.tink.proto.Keyset$Key`) v1 @kind object;
  #L4391ca.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L4391d0.  v1:= temp;
  #L4391d2.  if v1 != v3 then goto L4391b2;
  #L4391d6.  v3:= 1I;
  #L4391d8.  @monitorexit v2
  #L4391da.  return v3;
  #L4391dc.  v3:= 0I;
  #L4391de.  @monitorexit v2
  #L4391e0.  return v3;
  #L4391e2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4391e4.  @monitorexit v2
  #L4391e6.  throw v3;
  catch `java.lang.Throwable` @[L43919e..L4391d2] goto L4391e2;
}
procedure `com.google.crypto.tink.proto.Keyset$Key` `b`(`com.google.crypto.tink.KeysetManager` v3 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v4 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.b:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/proto/Keyset$Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4398b8.  @monitorenter v3
  #L4398ba.  call temp:= `newKeyData`(v4) @signature `Lcom/google/crypto/tink/Registry;.newKeyData:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/proto/KeyData;` @kind static;
  #L4398c0.  v0:= temp @kind object;
  #L4398c2.  call temp:= `c`(v3) @signature `Lcom/google/crypto/tink/KeysetManager;.c:()I` @kind direct;
  #L4398c8.  v1:= temp;
  #L4398ca.  call temp:= `getOutputPrefixType`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.getOutputPrefixType:()Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind virtual;
  #L4398d0.  v4:= temp @kind object;
  #L4398d2.  v2:= `@@com.google.crypto.tink.proto.OutputPrefixType.UNKNOWN_PREFIX` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L4398d6.  if v4 != v2 then goto L4398de;
  #L4398da.  v4:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L4398de.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.newBuilder:()Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind static;
  #L4398e4.  v2:= temp @kind object;
  #L4398e6.  call temp:= `setKeyData`(v2, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setKeyData:(Lcom/google/crypto/tink/proto/KeyData;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4398ec.  v0:= temp @kind object;
  #L4398ee.  call temp:= `setKeyId`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setKeyId:(I)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4398f4.  v0:= temp @kind object;
  #L4398f6.  v1:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4398fa.  call temp:= `setStatus`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L439900.  v0:= temp @kind object;
  #L439902.  call temp:= `setOutputPrefixType`(v0, v4) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L439908.  v4:= temp @kind object;
  #L43990a.  call temp:= `build`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L439910.  v4:= temp @kind object;
  #L439912.  v4:= (`com.google.crypto.tink.proto.Keyset$Key`) v4 @kind object;
  #L439916.  @monitorexit v3
  #L439918.  return v4 @kind object;
  #L43991a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43991c.  @monitorexit v3
  #L43991e.  throw v4;
  catch `java.lang.Throwable` @[L4398ba..L439916] goto L43991a;
}
procedure `int` `c`(`com.google.crypto.tink.KeysetManager` v2 @kind this) @signature `Lcom/google/crypto/tink/KeysetManager;.c:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L439994.  @monitorenter v2
  #L439996.  call temp:= `d`() @signature `Lcom/google/crypto/tink/KeysetManager;.d:()I` @kind static;
  #L43999c.  v0:= temp;
  #L43999e.  call temp:= `a`(v2, v0) @signature `Lcom/google/crypto/tink/KeysetManager;.a:(I)Z` @kind direct;
  #L4399a4.  v1:= temp;
  #L4399a6.  if v1 == 0 then goto L4399b4;
  #L4399aa.  call temp:= `d`() @signature `Lcom/google/crypto/tink/KeysetManager;.d:()I` @kind static;
  #L4399b0.  v0:= temp;
  #L4399b2.  goto L43999e;
  #L4399b4.  @monitorexit v2
  #L4399b6.  return v0;
  #L4399b8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4399ba.  @monitorexit v2
  #L4399bc.  throw v0;
  catch `java.lang.Throwable` @[L439996..L4399b2] goto L4399b8;
}
procedure `int` `d`() @signature `Lcom/google/crypto/tink/KeysetManager;.d:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4399dc.  v0:= new `java.security.SecureRandom`;
  #L4399e0.  call `<init>`(v0) @signature `Ljava/security/SecureRandom;.<init>:()V` @kind direct;
  #L4399e6.  v1:= 4I;
  #L4399e8.  v1:= new `byte`[v1];
  #L4399ec.  v2:= 0I;
  #L4399ee.  v3:= 0I;
  #L4399f0.  if v3 != 0 then goto L439a34;
  #L4399f4.  call `nextBytes`(v0, v1) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L4399fa.  v3:= v1[v2] @kind byte;
  #L4399fe.  v3:= v3 ^& 127;
  #L439a02.  v3:= v3 ^< 24;
  #L439a06.  v4:= 1I;
  #L439a08.  v4:= v1[v4] @kind byte;
  #L439a0c.  v4:= v4 ^& 255;
  #L439a10.  v4:= v4 ^< 16;
  #L439a14.  v3:= v3 ^| v4 @kind int;
  #L439a16.  v4:= 2I;
  #L439a18.  v4:= v1[v4] @kind byte;
  #L439a1c.  v4:= v4 ^& 255;
  #L439a20.  v4:= v4 ^< 8;
  #L439a24.  v3:= v3 ^| v4 @kind int;
  #L439a26.  v4:= 3I;
  #L439a28.  v4:= v1[v4] @kind byte;
  #L439a2c.  v4:= v4 ^& 255;
  #L439a30.  v3:= v3 ^| v4 @kind int;
  #L439a32.  goto L4399f0;
  #L439a34.  return v3;
}
procedure `com.google.crypto.tink.KeysetManager` `withEmptyKeyset`() @signature `Lcom/google/crypto/tink/KeysetManager;.withEmptyKeyset:()Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L439864.  v0:= new `com.google.crypto.tink.KeysetManager`;
  #L439868.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/Keyset;.newBuilder:()Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind static;
  #L43986e.  v1:= temp @kind object;
  #L439870.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeysetManager;.<init>:(Lcom/google/crypto/tink/proto/Keyset$Builder;)V` @kind direct;
  #L439876.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetManager` `withKeysetHandle`(`com.google.crypto.tink.KeysetHandle` v1 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.withKeysetHandle:(Lcom/google/crypto/tink/KeysetHandle;)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L439888.  v0:= new `com.google.crypto.tink.KeysetManager`;
  #L43988c.  call temp:= `f`(v1) @signature `Lcom/google/crypto/tink/KeysetHandle;.f:()Lcom/google/crypto/tink/proto/Keyset;` @kind virtual;
  #L439892.  v1:= temp @kind object;
  #L439894.  call temp:= `toBuilder`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.toBuilder:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L43989a.  v1:= temp @kind object;
  #L43989c.  v1:= (`com.google.crypto.tink.proto.Keyset$Builder`) v1 @kind object;
  #L4398a0.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeysetManager;.<init>:(Lcom/google/crypto/tink/proto/Keyset$Builder;)V` @kind direct;
  #L4398a6.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetManager` `add`(`com.google.crypto.tink.KeysetManager` v1 @kind this, `com.google.crypto.tink.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.add:(Lcom/google/crypto/tink/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439244.  @monitorenter v1
  #L439246.  call temp:= `b`(v2) @signature `Lcom/google/crypto/tink/KeyTemplate;.b:()Lcom/google/crypto/tink/proto/KeyTemplate;` @kind virtual;
  #L43924c.  v2:= temp @kind object;
  #L43924e.  v0:= 0I;
  #L439250.  call temp:= `addNewKey`(v1, v2, v0) @signature `Lcom/google/crypto/tink/KeysetManager;.addNewKey:(Lcom/google/crypto/tink/proto/KeyTemplate;Z)I` @kind virtual;
  #L439256.  @monitorexit v1
  #L439258.  return v1 @kind object;
  #L43925a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43925c.  @monitorexit v1
  #L43925e.  throw v2;
  catch `java.lang.Throwable` @[L439246..L439256] goto L43925a;
}
procedure `com.google.crypto.tink.KeysetManager` `add`(`com.google.crypto.tink.KeysetManager` v1 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.add:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43927c.  @monitorenter v1
  #L43927e.  v0:= 0I;
  #L439280.  call temp:= `addNewKey`(v1, v2, v0) @signature `Lcom/google/crypto/tink/KeysetManager;.addNewKey:(Lcom/google/crypto/tink/proto/KeyTemplate;Z)I` @kind virtual;
  #L439286.  @monitorexit v1
  #L439288.  return v1 @kind object;
  #L43928a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43928c.  @monitorexit v1
  #L43928e.  throw v2;
  catch `java.lang.Throwable` @[L439280..L439286] goto L43928a;
}
procedure `int` `addNewKey`(`com.google.crypto.tink.KeysetManager` v1 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/crypto/tink/KeysetManager;.addNewKey:(Lcom/google/crypto/tink/proto/KeyTemplate;Z)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43993c.  @monitorenter v1
  #L43993e.  call temp:= `b`(v1, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.b:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind direct;
  #L439944.  v2:= temp @kind object;
  #L439946.  v0:= v1.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43994a.  call temp:= `addKey`(v0, v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.addKey:(Lcom/google/crypto/tink/proto/Keyset$Key;)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L439950.  if v3 == 0 then goto L439966;
  #L439954.  v3:= v1.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L439958.  call temp:= `getKeyId`(v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L43995e.  v0:= temp;
  #L439960.  call temp:= `setPrimaryKeyId`(v3, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setPrimaryKeyId:(I)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L439966.  call temp:= `getKeyId`(v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L43996c.  v2:= temp;
  #L43996e.  @monitorexit v1
  #L439970.  return v2;
  #L439972.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L439974.  @monitorexit v1
  #L439976.  throw v2;
  catch `java.lang.Throwable` @[L43993e..L43996e] goto L439972;
}
procedure `com.google.crypto.tink.KeysetManager` `delete`(`com.google.crypto.tink.KeysetManager` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/KeysetManager;.delete:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4392ac.  @monitorenter v3
  #L4392ae.  v0:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4392b2.  call temp:= `getPrimaryKeyId`(v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getPrimaryKeyId:()I` @kind virtual;
  #L4392b8.  v0:= temp;
  #L4392ba.  if v4 == v0 then goto L43932a;
  #L4392be.  v0:= 0I;
  #L4392c0.  v1:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4392c4.  call temp:= `getKeyCount`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyCount:()I` @kind virtual;
  #L4392ca.  v1:= temp;
  #L4392cc.  if v0 >= v1 then goto L4392fc;
  #L4392d0.  v1:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4392d4.  call temp:= `getKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKey:(I)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind virtual;
  #L4392da.  v1:= temp @kind object;
  #L4392dc.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L4392e2.  v1:= temp;
  #L4392e4.  if v1 != v4 then goto L4392f6;
  #L4392e8.  v4:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4392ec.  call temp:= `removeKey`(v4, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.removeKey:(I)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L4392f2.  @monitorexit v3
  #L4392f4.  return v3 @kind object;
  #L4392f6.  v0:= v0 + 1;
  #L4392fa.  goto L4392c0;
  #L4392fc.  v0:= new `java.security.GeneralSecurityException`;
  #L439300.  v1:= new `java.lang.StringBuilder`;
  #L439304.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L43930a.  v2:= "key not found: " @kind object;
  #L43930e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L439314.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L43931a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L439320.  v4:= temp @kind object;
  #L439322.  call `<init>`(v0, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L439328.  throw v0;
  #L43932a.  v4:= new `java.security.GeneralSecurityException`;
  #L43932e.  v0:= "cannot delete the primary key" @kind object;
  #L439332.  call `<init>`(v4, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L439338.  throw v4;
  #L43933a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43933c.  @monitorexit v3
  #L43933e.  throw v4;
  catch `java.lang.Throwable` @[L4392ae..L4392f2] goto L43933a;
  catch `java.lang.Throwable` @[L4392fc..L43933a] goto L43933a;
}
procedure `com.google.crypto.tink.KeysetManager` `destroy`(`com.google.crypto.tink.KeysetManager` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/KeysetManager;.destroy:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L439364.  @monitorenter v4
  #L439366.  v0:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43936a.  call temp:= `getPrimaryKeyId`(v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getPrimaryKeyId:()I` @kind virtual;
  #L439370.  v0:= temp;
  #L439372.  if v5 == v0 then goto L439486;
  #L439376.  v0:= 0I;
  #L439378.  v1:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43937c.  call temp:= `getKeyCount`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyCount:()I` @kind virtual;
  #L439382.  v1:= temp;
  #L439384.  if v0 >= v1 then goto L439458;
  #L439388.  v1:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43938c.  call temp:= `getKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKey:(I)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind virtual;
  #L439392.  v1:= temp @kind object;
  #L439394.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L43939a.  v2:= temp;
  #L43939c.  if v2 != v5 then goto L439452;
  #L4393a0.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L4393a6.  v2:= temp @kind object;
  #L4393a8.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4393ac.  if v2 == v3 then goto L439418;
  #L4393b0.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L4393b6.  v2:= temp @kind object;
  #L4393b8.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.DISABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4393bc.  if v2 == v3 then goto L439418;
  #L4393c0.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L4393c6.  v2:= temp @kind object;
  #L4393c8.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.DESTROYED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4393cc.  if v2 != v3 then goto L4393d2;
  #L4393d0.  goto L439418;
  #L4393d2.  v0:= new `java.security.GeneralSecurityException`;
  #L4393d6.  v2:= new `java.lang.StringBuilder`;
  #L4393da.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4393e0.  v3:= "cannot destroy key with id " @kind object;
  #L4393e4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4393ea.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4393f0.  v5:= " and status " @kind object;
  #L4393f4.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4393fa.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L439400.  v5:= temp @kind object;
  #L439402.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L439408.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43940e.  v5:= temp @kind object;
  #L439410.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L439416.  throw v0;
  #L439418.  v5:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43941c.  call temp:= `toBuilder`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.toBuilder:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L439422.  v1:= temp @kind object;
  #L439424.  v1:= (`com.google.crypto.tink.proto.Keyset$Key$Builder`) v1 @kind object;
  #L439428.  v2:= `@@com.google.crypto.tink.proto.KeyStatusType.DESTROYED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L43942c.  call temp:= `setStatus`(v1, v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L439432.  v1:= temp @kind object;
  #L439434.  call temp:= `clearKeyData`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.clearKeyData:()Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L43943a.  v1:= temp @kind object;
  #L43943c.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L439442.  v1:= temp @kind object;
  #L439444.  v1:= (`com.google.crypto.tink.proto.Keyset$Key`) v1 @kind object;
  #L439448.  call temp:= `setKey`(v5, v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setKey:(ILcom/google/crypto/tink/proto/Keyset$Key;)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L43944e.  @monitorexit v4
  #L439450.  return v4 @kind object;
  #L439452.  v0:= v0 + 1;
  #L439456.  goto L439378;
  #L439458.  v0:= new `java.security.GeneralSecurityException`;
  #L43945c.  v1:= new `java.lang.StringBuilder`;
  #L439460.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L439466.  v2:= "key not found: " @kind object;
  #L43946a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L439470.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L439476.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43947c.  v5:= temp @kind object;
  #L43947e.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L439484.  throw v0;
  #L439486.  v5:= new `java.security.GeneralSecurityException`;
  #L43948a.  v0:= "cannot destroy the primary key" @kind object;
  #L43948e.  call `<init>`(v5, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L439494.  throw v5;
  #L439496.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L439498.  @monitorexit v4
  #L43949a.  throw v5;
  catch `java.lang.Throwable` @[L439366..L43944e] goto L439496;
  catch `java.lang.Throwable` @[L439458..L439496] goto L439496;
}
procedure `com.google.crypto.tink.KeysetManager` `disable`(`com.google.crypto.tink.KeysetManager` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/KeysetManager;.disable:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4394c0.  @monitorenter v4
  #L4394c2.  v0:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4394c6.  call temp:= `getPrimaryKeyId`(v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getPrimaryKeyId:()I` @kind virtual;
  #L4394cc.  v0:= temp;
  #L4394ce.  if v5 == v0 then goto L4395ca;
  #L4394d2.  v0:= 0I;
  #L4394d4.  v1:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4394d8.  call temp:= `getKeyCount`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyCount:()I` @kind virtual;
  #L4394de.  v1:= temp;
  #L4394e0.  if v0 >= v1 then goto L43959c;
  #L4394e4.  v1:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4394e8.  call temp:= `getKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKey:(I)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind virtual;
  #L4394ee.  v1:= temp @kind object;
  #L4394f0.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L4394f6.  v2:= temp;
  #L4394f8.  if v2 != v5 then goto L439596;
  #L4394fc.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L439502.  v2:= temp @kind object;
  #L439504.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L439508.  if v2 == v3 then goto L439564;
  #L43950c.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L439512.  v2:= temp @kind object;
  #L439514.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.DISABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L439518.  if v2 != v3 then goto L43951e;
  #L43951c.  goto L439564;
  #L43951e.  v0:= new `java.security.GeneralSecurityException`;
  #L439522.  v2:= new `java.lang.StringBuilder`;
  #L439526.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L43952c.  v3:= "cannot disable key with id " @kind object;
  #L439530.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L439536.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L43953c.  v5:= " and status " @kind object;
  #L439540.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L439546.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L43954c.  v5:= temp @kind object;
  #L43954e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L439554.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43955a.  v5:= temp @kind object;
  #L43955c.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L439562.  throw v0;
  #L439564.  v5:= v4.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L439568.  call temp:= `toBuilder`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.toBuilder:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L43956e.  v1:= temp @kind object;
  #L439570.  v1:= (`com.google.crypto.tink.proto.Keyset$Key$Builder`) v1 @kind object;
  #L439574.  v2:= `@@com.google.crypto.tink.proto.KeyStatusType.DISABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L439578.  call temp:= `setStatus`(v1, v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L43957e.  v1:= temp @kind object;
  #L439580.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L439586.  v1:= temp @kind object;
  #L439588.  v1:= (`com.google.crypto.tink.proto.Keyset$Key`) v1 @kind object;
  #L43958c.  call temp:= `setKey`(v5, v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setKey:(ILcom/google/crypto/tink/proto/Keyset$Key;)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L439592.  @monitorexit v4
  #L439594.  return v4 @kind object;
  #L439596.  v0:= v0 + 1;
  #L43959a.  goto L4394d4;
  #L43959c.  v0:= new `java.security.GeneralSecurityException`;
  #L4395a0.  v1:= new `java.lang.StringBuilder`;
  #L4395a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4395aa.  v2:= "key not found: " @kind object;
  #L4395ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4395b4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4395ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4395c0.  v5:= temp @kind object;
  #L4395c2.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4395c8.  throw v0;
  #L4395ca.  v5:= new `java.security.GeneralSecurityException`;
  #L4395ce.  v0:= "cannot disable the primary key" @kind object;
  #L4395d2.  call `<init>`(v5, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4395d8.  throw v5;
  #L4395da.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4395dc.  @monitorexit v4
  #L4395de.  throw v5;
  catch `java.lang.Throwable` @[L4394c2..L439592] goto L4395da;
  catch `java.lang.Throwable` @[L43959c..L4395da] goto L4395da;
}
procedure `com.google.crypto.tink.KeysetManager` `enable`(`com.google.crypto.tink.KeysetManager` v5 @kind this, `int` v6 ) @signature `Lcom/google/crypto/tink/KeysetManager;.enable:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L439604.  @monitorenter v5
  #L439606.  v0:= 0I;
  #L439608.  v1:= v5.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43960c.  call temp:= `getKeyCount`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyCount:()I` @kind virtual;
  #L439612.  v1:= temp;
  #L439614.  if v0 >= v1 then goto L4396cc;
  #L439618.  v1:= v5.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43961c.  call temp:= `getKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKey:(I)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind virtual;
  #L439622.  v1:= temp @kind object;
  #L439624.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L43962a.  v2:= temp;
  #L43962c.  if v2 != v6 then goto L4396c6;
  #L439630.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L439636.  v2:= temp @kind object;
  #L439638.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L43963c.  if v2 == v3 then goto L439698;
  #L439640.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L439646.  v2:= temp @kind object;
  #L439648.  v4:= `@@com.google.crypto.tink.proto.KeyStatusType.DISABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L43964c.  if v2 != v4 then goto L439652;
  #L439650.  goto L439698;
  #L439652.  v0:= new `java.security.GeneralSecurityException`;
  #L439656.  v2:= new `java.lang.StringBuilder`;
  #L43965a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L439660.  v3:= "cannot enable key with id " @kind object;
  #L439664.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43966a.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L439670.  v6:= " and status " @kind object;
  #L439674.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43967a.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L439680.  v6:= temp @kind object;
  #L439682.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L439688.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43968e.  v6:= temp @kind object;
  #L439690.  call `<init>`(v0, v6) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L439696.  throw v0;
  #L439698.  v6:= v5.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43969c.  call temp:= `toBuilder`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;.toBuilder:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L4396a2.  v1:= temp @kind object;
  #L4396a4.  v1:= (`com.google.crypto.tink.proto.Keyset$Key$Builder`) v1 @kind object;
  #L4396a8.  call temp:= `setStatus`(v1, v3) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4396ae.  v1:= temp @kind object;
  #L4396b0.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4396b6.  v1:= temp @kind object;
  #L4396b8.  v1:= (`com.google.crypto.tink.proto.Keyset$Key`) v1 @kind object;
  #L4396bc.  call temp:= `setKey`(v6, v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setKey:(ILcom/google/crypto/tink/proto/Keyset$Key;)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L4396c2.  @monitorexit v5
  #L4396c4.  return v5 @kind object;
  #L4396c6.  v0:= v0 + 1;
  #L4396ca.  goto L439608;
  #L4396cc.  v0:= new `java.security.GeneralSecurityException`;
  #L4396d0.  v1:= new `java.lang.StringBuilder`;
  #L4396d4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4396da.  v2:= "key not found: " @kind object;
  #L4396de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4396e4.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4396ea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4396f0.  v6:= temp @kind object;
  #L4396f2.  call `<init>`(v0, v6) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4396f8.  throw v0;
  #L4396fa.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4396fc.  @monitorexit v5
  #L4396fe.  throw v6;
  catch `java.lang.Throwable` @[L439608..L4396c2] goto L4396fa;
  catch `java.lang.Throwable` @[L4396cc..L4396fa] goto L4396fa;
}
procedure `com.google.crypto.tink.KeysetHandle` `getKeysetHandle`(`com.google.crypto.tink.KeysetManager` v1 @kind this) @signature `Lcom/google/crypto/tink/KeysetManager;.getKeysetHandle:()Lcom/google/crypto/tink/KeysetHandle;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439204.  @monitorenter v1
  #L439206.  v0:= v1.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43920a.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L439210.  v0:= temp @kind object;
  #L439212.  v0:= (`com.google.crypto.tink.proto.Keyset`) v0 @kind object;
  #L439216.  call temp:= `e`(v0) @signature `Lcom/google/crypto/tink/KeysetHandle;.e:(Lcom/google/crypto/tink/proto/Keyset;)Lcom/google/crypto/tink/KeysetHandle;` @kind static;
  #L43921c.  v0:= temp @kind object;
  #L43921e.  @monitorexit v1
  #L439220.  return v0 @kind object;
  #L439222.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L439224.  @monitorexit v1
  #L439226.  throw v0;
  catch `java.lang.Throwable` @[L439206..L43921e] goto L439222;
}
procedure `com.google.crypto.tink.KeysetManager` `promote`(`com.google.crypto.tink.KeysetManager` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/KeysetManager;.promote:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;

  #L439724.  @monitorenter v0
  #L439726.  call temp:= `setPrimary`(v0, v1) @signature `Lcom/google/crypto/tink/KeysetManager;.setPrimary:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L43972c.  v1:= temp @kind object;
  #L43972e.  @monitorexit v0
  #L439730.  return v1 @kind object;
  #L439732.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L439734.  @monitorexit v0
  #L439736.  throw v1;
  catch `java.lang.Throwable` @[L439726..L43972e] goto L439732;
}
procedure `com.google.crypto.tink.KeysetManager` `rotate`(`com.google.crypto.tink.KeysetManager` v1 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/KeysetManager;.rotate:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L439754.  @monitorenter v1
  #L439756.  v0:= 1I;
  #L439758.  call temp:= `addNewKey`(v1, v2, v0) @signature `Lcom/google/crypto/tink/KeysetManager;.addNewKey:(Lcom/google/crypto/tink/proto/KeyTemplate;Z)I` @kind virtual;
  #L43975e.  @monitorexit v1
  #L439760.  return v1 @kind object;
  #L439762.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L439764.  @monitorexit v1
  #L439766.  throw v2;
  catch `java.lang.Throwable` @[L439758..L43975e] goto L439762;
}
procedure `com.google.crypto.tink.KeysetManager` `setPrimary`(`com.google.crypto.tink.KeysetManager` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/KeysetManager;.setPrimary:(I)Lcom/google/crypto/tink/KeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L439784.  @monitorenter v3
  #L439786.  v0:= 0I;
  #L439788.  v1:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43978c.  call temp:= `getKeyCount`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKeyCount:()I` @kind virtual;
  #L439792.  v1:= temp;
  #L439794.  if v0 >= v1 then goto L43980a;
  #L439798.  v1:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L43979c.  call temp:= `getKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.getKey:(I)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind virtual;
  #L4397a2.  v1:= temp @kind object;
  #L4397a4.  call temp:= `getKeyId`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L4397aa.  v2:= temp;
  #L4397ac.  if v2 != v4 then goto L439804;
  #L4397b0.  call temp:= `getStatus`(v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L4397b6.  v0:= temp @kind object;
  #L4397b8.  v1:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4397bc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4397c2.  v0:= temp;
  #L4397c4.  if v0 == 0 then goto L4397d6;
  #L4397c8.  v0:= v3.`com.google.crypto.tink.KeysetManager.a` @type ^`com.google.crypto.tink.proto.Keyset$Builder` @kind object;
  #L4397cc.  call temp:= `setPrimaryKeyId`(v0, v4) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setPrimaryKeyId:(I)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L4397d2.  @monitorexit v3
  #L4397d4.  return v3 @kind object;
  #L4397d6.  v0:= new `java.security.GeneralSecurityException`;
  #L4397da.  v1:= new `java.lang.StringBuilder`;
  #L4397de.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4397e4.  v2:= "cannot set key as primary because it's not enabled: " @kind object;
  #L4397e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4397ee.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4397f4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4397fa.  v4:= temp @kind object;
  #L4397fc.  call `<init>`(v0, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L439802.  throw v0;
  #L439804.  v0:= v0 + 1;
  #L439808.  goto L439788;
  #L43980a.  v0:= new `java.security.GeneralSecurityException`;
  #L43980e.  v1:= new `java.lang.StringBuilder`;
  #L439812.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L439818.  v2:= "key not found: " @kind object;
  #L43981c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L439822.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L439828.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43982e.  v4:= temp @kind object;
  #L439830.  call `<init>`(v0, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L439836.  throw v0;
  #L439838.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43983a.  @monitorexit v3
  #L43983c.  throw v4;
  catch `java.lang.Throwable` @[L439788..L4397d2] goto L439838;
  catch `java.lang.Throwable` @[L4397d6..L439838] goto L439838;
}
