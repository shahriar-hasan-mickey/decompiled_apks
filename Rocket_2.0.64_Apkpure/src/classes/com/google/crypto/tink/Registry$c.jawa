record `com.google.crypto.tink.Registry$c` @kind class @AccessFlag  extends `com.google.crypto.tink.Registry$f` @kind interface {
  `com.google.crypto.tink.PrivateKeyTypeManager` `com.google.crypto.tink.Registry$c.a` @AccessFlag FINAL_SYNTHETIC;
  `com.google.crypto.tink.KeyTypeManager` `com.google.crypto.tink.Registry$c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.Registry$c` v0 @kind this, `com.google.crypto.tink.PrivateKeyTypeManager` v1 @kind object, `com.google.crypto.tink.KeyTypeManager` v2 @kind object) @signature `Lcom/google/crypto/tink/Registry$c;.<init>:(Lcom/google/crypto/tink/PrivateKeyTypeManager;Lcom/google/crypto/tink/KeyTypeManager;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43a510.  v0.`com.google.crypto.tink.Registry$c.a` @type ^`com.google.crypto.tink.PrivateKeyTypeManager` := v1 @kind object;
  #L43a514.  v0.`com.google.crypto.tink.Registry$c.b` @type ^`com.google.crypto.tink.KeyTypeManager` := v2 @kind object;
  #L43a518.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43a51e.  return @kind void;
}
procedure `java.lang.Class` `a`(`com.google.crypto.tink.Registry$c` v1 @kind this) @signature `Lcom/google/crypto/tink/Registry$c;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a4d0.  v0:= v1.`com.google.crypto.tink.Registry$c.b` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L43a4d4.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43a4da.  v0:= temp @kind object;
  #L43a4dc.  return v0 @kind object;
}
procedure `java.lang.Class` `b`(`com.google.crypto.tink.Registry$c` v1 @kind this) @signature `Lcom/google/crypto/tink/Registry$c;.b:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a4b0.  v0:= v1.`com.google.crypto.tink.Registry$c.a` @type ^`com.google.crypto.tink.PrivateKeyTypeManager` @kind object;
  #L43a4b4.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43a4ba.  v0:= temp @kind object;
  #L43a4bc.  return v0 @kind object;
}
procedure `java.util.Set` `c`(`com.google.crypto.tink.Registry$c` v1 @kind this) @signature `Lcom/google/crypto/tink/Registry$c;.c:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a4f0.  v0:= v1.`com.google.crypto.tink.Registry$c.a` @type ^`com.google.crypto.tink.PrivateKeyTypeManager` @kind object;
  #L43a4f4.  call temp:= `supportedPrimitives`(v0) @signature `Lcom/google/crypto/tink/KeyTypeManager;.supportedPrimitives:()Ljava/util/Set;` @kind virtual;
  #L43a4fa.  v0:= temp @kind object;
  #L43a4fc.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyManager` `d`(`com.google.crypto.tink.Registry$c` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/google/crypto/tink/Registry$c;.d:(Ljava/lang/Class;)Lcom/google/crypto/tink/KeyManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43a43c.  v0:= new `com.google.crypto.tink.PrivateKeyManagerImpl`;
  #L43a440.  v1:= v3.`com.google.crypto.tink.Registry$c.a` @type ^`com.google.crypto.tink.PrivateKeyTypeManager` @kind object;
  #L43a444.  v2:= v3.`com.google.crypto.tink.Registry$c.b` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L43a448.  call `<init>`(v0, v1, v2, v4) @signature `Lcom/google/crypto/tink/PrivateKeyManagerImpl;.<init>:(Lcom/google/crypto/tink/PrivateKeyTypeManager;Lcom/google/crypto/tink/KeyTypeManager;Ljava/lang/Class;)V` @kind direct;
  #L43a44e.  return v0 @kind object;
  #L43a450.  v4:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L43a452.  v0:= new `java.security.GeneralSecurityException`;
  #L43a456.  v1:= "Primitive type not supported" @kind object;
  #L43a45a.  call `<init>`(v0, v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L43a460.  throw v0;
  catch `java.lang.IllegalArgumentException` @[L43a43c..L43a44e] goto L43a450;
}
procedure `com.google.crypto.tink.KeyManager` `e`(`com.google.crypto.tink.Registry$c` v4 @kind this) @signature `Lcom/google/crypto/tink/Registry$c;.e:()Lcom/google/crypto/tink/KeyManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43a484.  v0:= new `com.google.crypto.tink.PrivateKeyManagerImpl`;
  #L43a488.  v1:= v4.`com.google.crypto.tink.Registry$c.a` @type ^`com.google.crypto.tink.PrivateKeyTypeManager` @kind object;
  #L43a48c.  v2:= v4.`com.google.crypto.tink.Registry$c.b` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L43a490.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.a:()Ljava/lang/Class;` @kind virtual;
  #L43a496.  v3:= temp @kind object;
  #L43a498.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/PrivateKeyManagerImpl;.<init>:(Lcom/google/crypto/tink/PrivateKeyTypeManager;Lcom/google/crypto/tink/KeyTypeManager;Ljava/lang/Class;)V` @kind direct;
  #L43a49e.  return v0 @kind object;
}
