record `com.google.crypto.tink.KeyManagerImpl` @kind class @AccessFlag PUBLIC extends `com.google.crypto.tink.KeyManager` @kind interface {
  `com.google.crypto.tink.KeyTypeManager` `com.google.crypto.tink.KeyManagerImpl.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.google.crypto.tink.KeyManagerImpl.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.KeyManagerImpl` v3 @kind this, `com.google.crypto.tink.KeyTypeManager` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.<init>:(Lcom/google/crypto/tink/KeyTypeManager;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L43848c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L438492.  call temp:= `supportedPrimitives`(v4) @signature `Lcom/google/crypto/tink/KeyTypeManager;.supportedPrimitives:()Ljava/util/Set;` @kind virtual;
  #L438498.  v0:= temp @kind object;
  #L43849a.  call temp:= `contains`(v0, v5) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4384a0.  v0:= temp;
  #L4384a2.  if v0 != 0 then goto L4384f2;
  #L4384a6.  v0:= constclass @type ^`java.lang.Void` @kind object;
  #L4384aa.  call temp:= `equals`(v0, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4384b0.  v0:= temp;
  #L4384b2.  if v0 == 0 then goto L4384b8;
  #L4384b6.  goto L4384f2;
  #L4384b8.  v0:= new `java.lang.IllegalArgumentException`;
  #L4384bc.  v1:= 2I;
  #L4384be.  v1:= new `java.lang.Object`[v1];
  #L4384c2.  v2:= 0I;
  #L4384c4.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4384ca.  v4:= temp @kind object;
  #L4384cc.  v1[v2]:= v4 @kind object;
  #L4384d0.  v4:= 1I;
  #L4384d2.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4384d8.  v5:= temp @kind object;
  #L4384da.  v1[v4]:= v5 @kind object;
  #L4384de.  v4:= "Given internalKeyMananger %s does not support primitive class %s" @kind object;
  #L4384e2.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4384e8.  v4:= temp @kind object;
  #L4384ea.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4384f0.  throw v0;
  #L4384f2.  v3.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` := v4 @kind object;
  #L4384f6.  v3.`com.google.crypto.tink.KeyManagerImpl.b` @type ^`java.lang.Class` := v5 @kind object;
  #L4384fa.  return @kind void;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.a:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4382f0.  call temp:= `b`(v0, v1, v2) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.b:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L4382f6.  v0:= temp @kind object;
  #L4382f8.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.b:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L43830c.  call temp:= `isInstance`(v2, v0) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L438312.  v2:= temp;
  #L438314.  if v2 == 0 then goto L43831a;
  #L438318.  return v0 @kind object;
  #L43831a.  v0:= new `java.security.GeneralSecurityException`;
  #L43831e.  call `<init>`(v0, v1) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L438324.  throw v0;
}
procedure `com.google.crypto.tink.KeyManagerImpl$a` `c`(`com.google.crypto.tink.KeyManagerImpl` v2 @kind this) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.c:()Lcom/google/crypto/tink/KeyManagerImpl$a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L438160.  v0:= new `com.google.crypto.tink.KeyManagerImpl$a`;
  #L438164.  v1:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L438168.  call temp:= `keyFactory`(v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @kind virtual;
  #L43816e.  v1:= temp @kind object;
  #L438170.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyManagerImpl$a;.<init>:(Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;)V` @kind direct;
  #L438176.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`com.google.crypto.tink.KeyManagerImpl` v2 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v3 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.d:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L43841c.  v0:= constclass @type ^`java.lang.Void` @kind object;
  #L438420.  v1:= v2.`com.google.crypto.tink.KeyManagerImpl.b` @type ^`java.lang.Class` @kind object;
  #L438424.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43842a.  v0:= temp;
  #L43842c.  if v0 != 0 then goto L43844c;
  #L438430.  v0:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L438434.  call `validateKey`(v0, v3) @signature `Lcom/google/crypto/tink/KeyTypeManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @kind virtual;
  #L43843a.  v0:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L43843e.  v1:= v2.`com.google.crypto.tink.KeyManagerImpl.b` @type ^`java.lang.Class` @kind object;
  #L438442.  call temp:= `getPrimitive`(v0, v3, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getPrimitive:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L438448.  v3:= temp @kind object;
  #L43844a.  return v3 @kind object;
  #L43844c.  v3:= new `java.security.GeneralSecurityException`;
  #L438450.  v0:= "Cannot create a primitive for Void" @kind object;
  #L438454.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43845a.  throw v3;
}
procedure `boolean` `doesSupport`(`com.google.crypto.tink.KeyManagerImpl` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.doesSupport:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43813c.  call temp:= `getKeyType`(v1) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L438142.  v0:= temp @kind object;
  #L438144.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43814a.  v2:= temp;
  #L43814c.  return v2;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.KeyManagerImpl` v1 @kind this) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43846c.  v0:= v1.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L438470.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L438476.  v0:= temp @kind object;
  #L438478.  return v0 @kind object;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.KeyManagerImpl` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getPrimitive:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L438338.  v0:= v3.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L43833c.  call temp:= `parseKey`(v0, v4) @signature `Lcom/google/crypto/tink/KeyTypeManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind virtual;
  #L438342.  v4:= temp @kind object;
  #L438344.  call temp:= `d`(v3, v4) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.d:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @kind direct;
  #L43834a.  v4:= temp @kind object;
  #L43834c.  return v4 @kind object;
  #L43834e.  v4:= Exception @type ^`com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @kind object;
  #L438350.  v0:= new `java.security.GeneralSecurityException`;
  #L438354.  v1:= new `java.lang.StringBuilder`;
  #L438358.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L43835e.  v2:= "Failures parsing proto of type " @kind object;
  #L438362.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L438368.  v2:= v3.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L43836c.  call temp:= `getKeyClass`(v2) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getKeyClass:()Ljava/lang/Class;` @kind virtual;
  #L438372.  v2:= temp @kind object;
  #L438374.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L43837a.  v2:= temp @kind object;
  #L43837c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L438382.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L438388.  v1:= temp @kind object;
  #L43838a.  call `<init>`(v0, v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L438390.  throw v0;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L438338..L43834c] goto L43834e;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.KeyManagerImpl` v2 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v3 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getPrimitive:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4383b4.  v0:= new `java.lang.StringBuilder`;
  #L4383b8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4383be.  v1:= "Expected proto of type " @kind object;
  #L4383c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4383c8.  v1:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L4383cc.  call temp:= `getKeyClass`(v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getKeyClass:()Ljava/lang/Class;` @kind virtual;
  #L4383d2.  v1:= temp @kind object;
  #L4383d4.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4383da.  v1:= temp @kind object;
  #L4383dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4383e2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4383e8.  v0:= temp @kind object;
  #L4383ea.  v1:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L4383ee.  call temp:= `getKeyClass`(v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getKeyClass:()Ljava/lang/Class;` @kind virtual;
  #L4383f4.  v1:= temp @kind object;
  #L4383f6.  call temp:= `b`(v3, v0, v1) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.b:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L4383fc.  v3:= temp @kind object;
  #L4383fe.  v3:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v3 @kind object;
  #L438402.  call temp:= `d`(v2, v3) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.d:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @kind direct;
  #L438408.  v3:= temp @kind object;
  #L43840a.  return v3 @kind object;
}
procedure `java.lang.Class` `getPrimitiveClass`(`com.google.crypto.tink.KeyManagerImpl` v1 @kind this) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getPrimitiveClass:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4382d8.  v0:= v1.`com.google.crypto.tink.KeyManagerImpl.b` @type ^`java.lang.Class` @kind object;
  #L4382dc.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.KeyManagerImpl` v1 @kind this) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4382b8.  v0:= v1.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L4382bc.  call temp:= `getVersion`(v0) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getVersion:()I` @kind virtual;
  #L4382c2.  v0:= temp;
  #L4382c4.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `newKey`(`com.google.crypto.tink.KeyManagerImpl` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.newKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L438214.  call temp:= `c`(v3) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.c:()Lcom/google/crypto/tink/KeyManagerImpl$a;` @kind direct;
  #L43821a.  v0:= temp @kind object;
  #L43821c.  call temp:= `b`(v0, v4) @signature `Lcom/google/crypto/tink/KeyManagerImpl$a;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind virtual;
  #L438222.  v4:= temp @kind object;
  #L438224.  return v4 @kind object;
  #L438226.  v4:= Exception @type ^`com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @kind object;
  #L438228.  v0:= new `java.security.GeneralSecurityException`;
  #L43822c.  v1:= new `java.lang.StringBuilder`;
  #L438230.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L438236.  v2:= "Failures parsing proto of type " @kind object;
  #L43823a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L438240.  v2:= v3.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L438244.  call temp:= `keyFactory`(v2) @signature `Lcom/google/crypto/tink/KeyTypeManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @kind virtual;
  #L43824a.  v2:= temp @kind object;
  #L43824c.  call temp:= `getKeyFormatClass`(v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.getKeyFormatClass:()Ljava/lang/Class;` @kind virtual;
  #L438252.  v2:= temp @kind object;
  #L438254.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L43825a.  v2:= temp @kind object;
  #L43825c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L438262.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L438268.  v1:= temp @kind object;
  #L43826a.  call `<init>`(v0, v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L438270.  throw v0;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L438214..L438224] goto L438226;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `newKey`(`com.google.crypto.tink.KeyManagerImpl` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v2 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.newKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L438294.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.c:()Lcom/google/crypto/tink/KeyManagerImpl$a;` @kind direct;
  #L43829a.  v0:= temp @kind object;
  #L43829c.  call temp:= `a`(v0, v2) @signature `Lcom/google/crypto/tink/KeyManagerImpl$a;.a:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind virtual;
  #L4382a2.  v2:= temp @kind object;
  #L4382a4.  return v2 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData` `newKeyData`(`com.google.crypto.tink.KeyManagerImpl` v2 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.newKeyData:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyData;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L438188.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.c:()Lcom/google/crypto/tink/KeyManagerImpl$a;` @kind direct;
  #L43818e.  v0:= temp @kind object;
  #L438190.  call temp:= `b`(v0, v3) @signature `Lcom/google/crypto/tink/KeyManagerImpl$a;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind virtual;
  #L438196.  v3:= temp @kind object;
  #L438198.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyData;.newBuilder:()Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind static;
  #L43819e.  v0:= temp @kind object;
  #L4381a0.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L4381a6.  v1:= temp @kind object;
  #L4381a8.  call temp:= `setTypeUrl`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L4381ae.  v0:= temp @kind object;
  #L4381b0.  call temp:= `toByteString`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind interface;
  #L4381b6.  v3:= temp @kind object;
  #L4381b8.  call temp:= `setValue`(v0, v3) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L4381be.  v3:= temp @kind object;
  #L4381c0.  v0:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L4381c4.  call temp:= `keyMaterialType`(v0) @signature `Lcom/google/crypto/tink/KeyTypeManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @kind virtual;
  #L4381ca.  v0:= temp @kind object;
  #L4381cc.  call temp:= `setKeyMaterialType`(v3, v0) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setKeyMaterialType:(Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L4381d2.  v3:= temp @kind object;
  #L4381d4.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4381da.  v3:= temp @kind object;
  #L4381dc.  v3:= (`com.google.crypto.tink.proto.KeyData`) v3 @kind object;
  #L4381e0.  return v3 @kind object;
  #L4381e2.  v3:= Exception @type ^`com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @kind object;
  #L4381e4.  v0:= new `java.security.GeneralSecurityException`;
  #L4381e8.  v1:= "Unexpected proto" @kind object;
  #L4381ec.  call `<init>`(v0, v1, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4381f2.  throw v0;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L438188..L4381e0] goto L4381e2;
}
