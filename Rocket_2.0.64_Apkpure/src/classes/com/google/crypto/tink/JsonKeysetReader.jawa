record `com.google.crypto.tink.JsonKeysetReader` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.KeysetReader` @kind interface {
  `java.io.InputStream` `com.google.crypto.tink.JsonKeysetReader.a` @AccessFlag PRIVATE_FINAL;
  `org.json.JSONObject` `com.google.crypto.tink.JsonKeysetReader.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.crypto.tink.JsonKeysetReader.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.crypto.tink.JsonKeysetReader.d` @AccessFlag PRIVATE;
}
global `java.nio.charset.Charset` `@@com.google.crypto.tink.JsonKeysetReader.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4379c4.  v0:= "UTF-8" @kind object;
  #L4379c8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L4379ce.  v0:= temp @kind object;
  #L4379d0.  `@@com.google.crypto.tink.JsonKeysetReader.e` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L4379d4.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.JsonKeysetReader` v1 @kind this, `java.io.InputStream` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Ljava/io/InputStream;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L4379e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4379ee.  v0:= 0I;
  #L4379f0.  v1.`com.google.crypto.tink.JsonKeysetReader.d` @type ^`boolean` := v0 @kind boolean;
  #L4379f4.  v1.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` := v2 @kind object;
  #L4379f8.  v1.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` := v3 @kind boolean;
  #L4379fc.  v2:= 0I;
  #L4379fe.  v1.`com.google.crypto.tink.JsonKeysetReader.b` @type ^`org.json.JSONObject` := v2 @kind object;
  #L437a02.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.JsonKeysetReader` v1 @kind this, `org.json.JSONObject` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Lorg/json/JSONObject;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L437a14.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L437a1a.  v0:= 0I;
  #L437a1c.  v1.`com.google.crypto.tink.JsonKeysetReader.d` @type ^`boolean` := v0 @kind boolean;
  #L437a20.  v1.`com.google.crypto.tink.JsonKeysetReader.b` @type ^`org.json.JSONObject` := v2 @kind object;
  #L437a24.  v2:= 0I;
  #L437a26.  v1.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` := v2 @kind object;
  #L437a2a.  v1.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` := v0 @kind boolean;
  #L437a2e.  return @kind void;
}
procedure `com.google.crypto.tink.proto.EncryptedKeyset` `a`(`com.google.crypto.tink.JsonKeysetReader` v2 @kind this, `org.json.JSONObject` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.a:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/EncryptedKeyset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L437350.  call `j`(v3) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.j:(Lorg/json/JSONObject;)V` @kind static;
  #L437356.  v0:= v2.`com.google.crypto.tink.JsonKeysetReader.d` @type ^`boolean` @kind boolean;
  #L43735a.  v1:= "encryptedKeyset" @kind object;
  #L43735e.  if v0 == 0 then goto L437374;
  #L437362.  call temp:= `getString`(v3, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L437368.  v0:= temp @kind object;
  #L43736a.  call temp:= `urlSafeDecode`(v0) @signature `Lcom/google/crypto/tink/subtle/Base64;.urlSafeDecode:(Ljava/lang/String;)[B` @kind static;
  #L437370.  v0:= temp @kind object;
  #L437372.  goto L437384;
  #L437374.  call temp:= `getString`(v3, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L43737a.  v0:= temp @kind object;
  #L43737c.  call temp:= `decode`(v0) @signature `Lcom/google/crypto/tink/subtle/Base64;.decode:(Ljava/lang/String;)[B` @kind static;
  #L437382.  v0:= temp @kind object;
  #L437384.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EncryptedKeyset;.newBuilder:()Lcom/google/crypto/tink/proto/EncryptedKeyset$Builder;` @kind static;
  #L43738a.  v1:= temp @kind object;
  #L43738c.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L437392.  v0:= temp @kind object;
  #L437394.  call temp:= `setEncryptedKeyset`(v1, v0) @signature `Lcom/google/crypto/tink/proto/EncryptedKeyset$Builder;.setEncryptedKeyset:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EncryptedKeyset$Builder;` @kind virtual;
  #L43739a.  v0:= temp @kind object;
  #L43739c.  v1:= "keysetInfo" @kind object;
  #L4373a0.  call temp:= `getJSONObject`(v3, v1) @signature `Lorg/json/JSONObject;.getJSONObject:(Ljava/lang/String;)Lorg/json/JSONObject;` @kind virtual;
  #L4373a6.  v3:= temp @kind object;
  #L4373a8.  call temp:= `i`(v3) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.i:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeysetInfo;` @kind static;
  #L4373ae.  v3:= temp @kind object;
  #L4373b0.  call temp:= `setKeysetInfo`(v0, v3) @signature `Lcom/google/crypto/tink/proto/EncryptedKeyset$Builder;.setKeysetInfo:(Lcom/google/crypto/tink/proto/KeysetInfo;)Lcom/google/crypto/tink/proto/EncryptedKeyset$Builder;` @kind virtual;
  #L4373b6.  v3:= temp @kind object;
  #L4373b8.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4373be.  v3:= temp @kind object;
  #L4373c0.  v3:= (`com.google.crypto.tink.proto.EncryptedKeyset`) v3 @kind object;
  #L4373c4.  return v3 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `b`(`java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.b:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L43753c.  v0:= "SYMMETRIC" @kind object;
  #L437540.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L437546.  v0:= temp;
  #L437548.  if v0 == 0 then goto L437552;
  #L43754c.  v3:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.SYMMETRIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L437550.  return v3 @kind object;
  #L437552.  v0:= "ASYMMETRIC_PRIVATE" @kind object;
  #L437556.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43755c.  v0:= temp;
  #L43755e.  if v0 == 0 then goto L437568;
  #L437562.  v3:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.ASYMMETRIC_PRIVATE` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L437566.  return v3 @kind object;
  #L437568.  v0:= "ASYMMETRIC_PUBLIC" @kind object;
  #L43756c.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L437572.  v0:= temp;
  #L437574.  if v0 == 0 then goto L43757e;
  #L437578.  v3:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.ASYMMETRIC_PUBLIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L43757c.  return v3 @kind object;
  #L43757e.  v0:= "REMOTE" @kind object;
  #L437582.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L437588.  v0:= temp;
  #L43758a.  if v0 == 0 then goto L437594;
  #L43758e.  v3:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.REMOTE` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L437592.  return v3 @kind object;
  #L437594.  v0:= new `org.json.JSONException`;
  #L437598.  v1:= new `java.lang.StringBuilder`;
  #L43759c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4375a2.  v2:= "unknown key material type: " @kind object;
  #L4375a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4375ac.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4375b2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4375b8.  v3:= temp @kind object;
  #L4375ba.  call `<init>`(v0, v3) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4375c0.  throw v0;
}
procedure `com.google.crypto.tink.proto.OutputPrefixType` `c`(`java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.c:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/OutputPrefixType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L43792c.  v0:= "TINK" @kind object;
  #L437930.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L437936.  v0:= temp;
  #L437938.  if v0 == 0 then goto L437942;
  #L43793c.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L437940.  return v3 @kind object;
  #L437942.  v0:= "RAW" @kind object;
  #L437946.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43794c.  v0:= temp;
  #L43794e.  if v0 == 0 then goto L437958;
  #L437952.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.RAW` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L437956.  return v3 @kind object;
  #L437958.  v0:= "LEGACY" @kind object;
  #L43795c.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L437962.  v0:= temp;
  #L437964.  if v0 == 0 then goto L43796e;
  #L437968.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.LEGACY` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L43796c.  return v3 @kind object;
  #L43796e.  v0:= "CRUNCHY" @kind object;
  #L437972.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L437978.  v0:= temp;
  #L43797a.  if v0 == 0 then goto L437984;
  #L43797e.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.CRUNCHY` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L437982.  return v3 @kind object;
  #L437984.  v0:= new `org.json.JSONException`;
  #L437988.  v1:= new `java.lang.StringBuilder`;
  #L43798c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L437992.  v2:= "unknown output prefix type: " @kind object;
  #L437996.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43799c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4379a2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4379a8.  v3:= temp @kind object;
  #L4379aa.  call `<init>`(v0, v3) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4379b0.  throw v0;
}
procedure `com.google.crypto.tink.proto.KeyStatusType` `d`(`java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.d:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyStatusType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4375d4.  v0:= "ENABLED" @kind object;
  #L4375d8.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4375de.  v0:= temp;
  #L4375e0.  if v0 == 0 then goto L4375ea;
  #L4375e4.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4375e8.  return v3 @kind object;
  #L4375ea.  v0:= "DISABLED" @kind object;
  #L4375ee.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4375f4.  v0:= temp;
  #L4375f6.  if v0 == 0 then goto L437600;
  #L4375fa.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.DISABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4375fe.  return v3 @kind object;
  #L437600.  v0:= new `org.json.JSONException`;
  #L437604.  v1:= new `java.lang.StringBuilder`;
  #L437608.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L43760e.  v2:= "unknown status: " @kind object;
  #L437612.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L437618.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43761e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L437624.  v3:= temp @kind object;
  #L437626.  call `<init>`(v0, v3) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43762c.  throw v0;
}
procedure `com.google.crypto.tink.proto.KeyData` `e`(`com.google.crypto.tink.JsonKeysetReader` v3 @kind this, `org.json.JSONObject` v4 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.e:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeyData;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4374a0.  call `l`(v4) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.l:(Lorg/json/JSONObject;)V` @kind static;
  #L4374a6.  v0:= v3.`com.google.crypto.tink.JsonKeysetReader.d` @type ^`boolean` @kind boolean;
  #L4374aa.  v1:= "value" @kind object;
  #L4374ae.  if v0 == 0 then goto L4374c4;
  #L4374b2.  call temp:= `getString`(v4, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4374b8.  v0:= temp @kind object;
  #L4374ba.  call temp:= `urlSafeDecode`(v0) @signature `Lcom/google/crypto/tink/subtle/Base64;.urlSafeDecode:(Ljava/lang/String;)[B` @kind static;
  #L4374c0.  v0:= temp @kind object;
  #L4374c2.  goto L4374d4;
  #L4374c4.  call temp:= `getString`(v4, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4374ca.  v0:= temp @kind object;
  #L4374cc.  call temp:= `decode`(v0) @signature `Lcom/google/crypto/tink/subtle/Base64;.decode:(Ljava/lang/String;)[B` @kind static;
  #L4374d2.  v0:= temp @kind object;
  #L4374d4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyData;.newBuilder:()Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind static;
  #L4374da.  v1:= temp @kind object;
  #L4374dc.  v2:= "typeUrl" @kind object;
  #L4374e0.  call temp:= `getString`(v4, v2) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4374e6.  v2:= temp @kind object;
  #L4374e8.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L4374ee.  v1:= temp @kind object;
  #L4374f0.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L4374f6.  v0:= temp @kind object;
  #L4374f8.  call temp:= `setValue`(v1, v0) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L4374fe.  v0:= temp @kind object;
  #L437500.  v1:= "keyMaterialType" @kind object;
  #L437504.  call temp:= `getString`(v4, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L43750a.  v4:= temp @kind object;
  #L43750c.  call temp:= `b`(v4) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.b:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @kind static;
  #L437512.  v4:= temp @kind object;
  #L437514.  call temp:= `setKeyMaterialType`(v0, v4) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setKeyMaterialType:(Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L43751a.  v4:= temp @kind object;
  #L43751c.  call temp:= `build`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L437522.  v4:= temp @kind object;
  #L437524.  v4:= (`com.google.crypto.tink.proto.KeyData`) v4 @kind object;
  #L437528.  return v4 @kind object;
}
procedure `com.google.crypto.tink.proto.Keyset$Key` `f`(`com.google.crypto.tink.JsonKeysetReader` v2 @kind this, `org.json.JSONObject` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.f:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/Keyset$Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L437788.  call `k`(v3) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.k:(Lorg/json/JSONObject;)V` @kind static;
  #L43778e.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.newBuilder:()Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind static;
  #L437794.  v0:= temp @kind object;
  #L437796.  v1:= "status" @kind object;
  #L43779a.  call temp:= `getString`(v3, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4377a0.  v1:= temp @kind object;
  #L4377a2.  call temp:= `d`(v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.d:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyStatusType;` @kind static;
  #L4377a8.  v1:= temp @kind object;
  #L4377aa.  call temp:= `setStatus`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4377b0.  v0:= temp @kind object;
  #L4377b2.  v1:= "keyId" @kind object;
  #L4377b6.  call temp:= `getInt`(v3, v1) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L4377bc.  v1:= temp;
  #L4377be.  call temp:= `setKeyId`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setKeyId:(I)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4377c4.  v0:= temp @kind object;
  #L4377c6.  v1:= "outputPrefixType" @kind object;
  #L4377ca.  call temp:= `getString`(v3, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4377d0.  v1:= temp @kind object;
  #L4377d2.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.c:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind static;
  #L4377d8.  v1:= temp @kind object;
  #L4377da.  call temp:= `setOutputPrefixType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4377e0.  v0:= temp @kind object;
  #L4377e2.  v1:= "keyData" @kind object;
  #L4377e6.  call temp:= `getJSONObject`(v3, v1) @signature `Lorg/json/JSONObject;.getJSONObject:(Ljava/lang/String;)Lorg/json/JSONObject;` @kind virtual;
  #L4377ec.  v3:= temp @kind object;
  #L4377ee.  call temp:= `e`(v2, v3) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.e:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeyData;` @kind direct;
  #L4377f4.  v3:= temp @kind object;
  #L4377f6.  call temp:= `setKeyData`(v0, v3) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setKeyData:(Lcom/google/crypto/tink/proto/KeyData;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4377fc.  v3:= temp @kind object;
  #L4377fe.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L437804.  v3:= temp @kind object;
  #L437806.  v3:= (`com.google.crypto.tink.proto.Keyset$Key`) v3 @kind object;
  #L43780a.  return v3 @kind object;
}
procedure `com.google.crypto.tink.proto.KeysetInfo$KeyInfo` `g`(`org.json.JSONObject` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.g:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4378a4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;.newBuilder:()Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;` @kind static;
  #L4378aa.  v0:= temp @kind object;
  #L4378ac.  v1:= "status" @kind object;
  #L4378b0.  call temp:= `getString`(v2, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4378b6.  v1:= temp @kind object;
  #L4378b8.  call temp:= `d`(v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.d:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyStatusType;` @kind static;
  #L4378be.  v1:= temp @kind object;
  #L4378c0.  call temp:= `setStatus`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;` @kind virtual;
  #L4378c6.  v0:= temp @kind object;
  #L4378c8.  v1:= "keyId" @kind object;
  #L4378cc.  call temp:= `getInt`(v2, v1) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L4378d2.  v1:= temp;
  #L4378d4.  call temp:= `setKeyId`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;.setKeyId:(I)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;` @kind virtual;
  #L4378da.  v0:= temp @kind object;
  #L4378dc.  v1:= "outputPrefixType" @kind object;
  #L4378e0.  call temp:= `getString`(v2, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4378e6.  v1:= temp @kind object;
  #L4378e8.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.c:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind static;
  #L4378ee.  v1:= temp @kind object;
  #L4378f0.  call temp:= `setOutputPrefixType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;` @kind virtual;
  #L4378f6.  v0:= temp @kind object;
  #L4378f8.  v1:= "typeUrl" @kind object;
  #L4378fc.  call temp:= `getString`(v2, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L437902.  v2:= temp @kind object;
  #L437904.  call temp:= `setTypeUrl`(v0, v2) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;` @kind virtual;
  #L43790a.  v2:= temp @kind object;
  #L43790c.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L437912.  v2:= temp @kind object;
  #L437914.  v2:= (`com.google.crypto.tink.proto.KeysetInfo$KeyInfo`) v2 @kind object;
  #L437918.  return v2 @kind object;
}
procedure `com.google.crypto.tink.proto.Keyset` `h`(`com.google.crypto.tink.JsonKeysetReader` v3 @kind this, `org.json.JSONObject` v4 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.h:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/Keyset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L437640.  call `m`(v4) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.m:(Lorg/json/JSONObject;)V` @kind static;
  #L437646.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/Keyset;.newBuilder:()Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind static;
  #L43764c.  v0:= temp @kind object;
  #L43764e.  v1:= "primaryKeyId" @kind object;
  #L437652.  call temp:= `has`(v4, v1) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L437658.  v2:= temp;
  #L43765a.  if v2 == 0 then goto L43766c;
  #L43765e.  call temp:= `getInt`(v4, v1) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L437664.  v1:= temp;
  #L437666.  call temp:= `setPrimaryKeyId`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setPrimaryKeyId:(I)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L43766c.  v1:= "key" @kind object;
  #L437670.  call temp:= `getJSONArray`(v4, v1) @signature `Lorg/json/JSONObject;.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;` @kind virtual;
  #L437676.  v4:= temp @kind object;
  #L437678.  v1:= 0I;
  #L43767a.  call temp:= `length`(v4) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L437680.  v2:= temp;
  #L437682.  if v1 >= v2 then goto L4376a2;
  #L437686.  call temp:= `getJSONObject`(v4, v1) @signature `Lorg/json/JSONArray;.getJSONObject:(I)Lorg/json/JSONObject;` @kind virtual;
  #L43768c.  v2:= temp @kind object;
  #L43768e.  call temp:= `f`(v3, v2) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.f:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind direct;
  #L437694.  v2:= temp @kind object;
  #L437696.  call temp:= `addKey`(v0, v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.addKey:(Lcom/google/crypto/tink/proto/Keyset$Key;)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L43769c.  v1:= v1 + 1;
  #L4376a0.  goto L43767a;
  #L4376a2.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4376a8.  v4:= temp @kind object;
  #L4376aa.  v4:= (`com.google.crypto.tink.proto.Keyset`) v4 @kind object;
  #L4376ae.  return v4 @kind object;
}
procedure `com.google.crypto.tink.proto.KeysetInfo` `i`(`org.json.JSONObject` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.i:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeysetInfo;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L43781c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeysetInfo;.newBuilder:()Lcom/google/crypto/tink/proto/KeysetInfo$Builder;` @kind static;
  #L437822.  v0:= temp @kind object;
  #L437824.  v1:= "primaryKeyId" @kind object;
  #L437828.  call temp:= `has`(v3, v1) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L43782e.  v2:= temp;
  #L437830.  if v2 == 0 then goto L437842;
  #L437834.  call temp:= `getInt`(v3, v1) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L43783a.  v1:= temp;
  #L43783c.  call temp:= `setPrimaryKeyId`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$Builder;.setPrimaryKeyId:(I)Lcom/google/crypto/tink/proto/KeysetInfo$Builder;` @kind virtual;
  #L437842.  v1:= "keyInfo" @kind object;
  #L437846.  call temp:= `has`(v3, v1) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L43784c.  v2:= temp;
  #L43784e.  if v2 == 0 then goto L437884;
  #L437852.  call temp:= `getJSONArray`(v3, v1) @signature `Lorg/json/JSONObject;.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;` @kind virtual;
  #L437858.  v3:= temp @kind object;
  #L43785a.  v1:= 0I;
  #L43785c.  call temp:= `length`(v3) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L437862.  v2:= temp;
  #L437864.  if v1 >= v2 then goto L437884;
  #L437868.  call temp:= `getJSONObject`(v3, v1) @signature `Lorg/json/JSONArray;.getJSONObject:(I)Lorg/json/JSONObject;` @kind virtual;
  #L43786e.  v2:= temp @kind object;
  #L437870.  call temp:= `g`(v2) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.g:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;` @kind static;
  #L437876.  v2:= temp @kind object;
  #L437878.  call temp:= `addKeyInfo`(v0, v2) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$Builder;.addKeyInfo:(Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;)Lcom/google/crypto/tink/proto/KeysetInfo$Builder;` @kind virtual;
  #L43787e.  v1:= v1 + 1;
  #L437882.  goto L43785c;
  #L437884.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43788a.  v3:= temp @kind object;
  #L43788c.  v3:= (`com.google.crypto.tink.proto.KeysetInfo`) v3 @kind object;
  #L437890.  return v3 @kind object;
}
procedure `void` `j`(`org.json.JSONObject` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.j:(Lorg/json/JSONObject;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L437a40.  v0:= "encryptedKeyset" @kind object;
  #L437a44.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L437a4a.  v1:= temp;
  #L437a4c.  if v1 == 0 then goto L437a52;
  #L437a50.  return @kind void;
  #L437a52.  v1:= new `org.json.JSONException`;
  #L437a56.  v0:= "invalid encrypted keyset" @kind object;
  #L437a5a.  call `<init>`(v1, v0) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L437a60.  throw v1;
}
procedure `void` `k`(`org.json.JSONObject` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.k:(Lorg/json/JSONObject;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L437a74.  v0:= "keyData" @kind object;
  #L437a78.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L437a7e.  v0:= temp;
  #L437a80.  if v0 == 0 then goto L437ab6;
  #L437a84.  v0:= "status" @kind object;
  #L437a88.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L437a8e.  v0:= temp;
  #L437a90.  if v0 == 0 then goto L437ab6;
  #L437a94.  v0:= "keyId" @kind object;
  #L437a98.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L437a9e.  v0:= temp;
  #L437aa0.  if v0 == 0 then goto L437ab6;
  #L437aa4.  v0:= "outputPrefixType" @kind object;
  #L437aa8.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L437aae.  v1:= temp;
  #L437ab0.  if v1 == 0 then goto L437ab6;
  #L437ab4.  return @kind void;
  #L437ab6.  v1:= new `org.json.JSONException`;
  #L437aba.  v0:= "invalid key" @kind object;
  #L437abe.  call `<init>`(v1, v0) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L437ac4.  throw v1;
}
procedure `void` `l`(`org.json.JSONObject` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.l:(Lorg/json/JSONObject;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L437ad8.  v0:= "typeUrl" @kind object;
  #L437adc.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L437ae2.  v0:= temp;
  #L437ae4.  if v0 == 0 then goto L437b0a;
  #L437ae8.  v0:= "value" @kind object;
  #L437aec.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L437af2.  v0:= temp;
  #L437af4.  if v0 == 0 then goto L437b0a;
  #L437af8.  v0:= "keyMaterialType" @kind object;
  #L437afc.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L437b02.  v1:= temp;
  #L437b04.  if v1 == 0 then goto L437b0a;
  #L437b08.  return @kind void;
  #L437b0a.  v1:= new `org.json.JSONException`;
  #L437b0e.  v0:= "invalid keyData" @kind object;
  #L437b12.  call `<init>`(v1, v0) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L437b18.  throw v1;
}
procedure `void` `m`(`org.json.JSONObject` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.m:(Lorg/json/JSONObject;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L437b2c.  v0:= "key" @kind object;
  #L437b30.  call temp:= `has`(v2, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L437b36.  v1:= temp;
  #L437b38.  if v1 == 0 then goto L437b52;
  #L437b3c.  call temp:= `getJSONArray`(v2, v0) @signature `Lorg/json/JSONObject;.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;` @kind virtual;
  #L437b42.  v2:= temp @kind object;
  #L437b44.  call temp:= `length`(v2) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L437b4a.  v2:= temp;
  #L437b4c.  if v2 == 0 then goto L437b52;
  #L437b50.  return @kind void;
  #L437b52.  v2:= new `org.json.JSONException`;
  #L437b56.  v0:= "invalid keyset" @kind object;
  #L437b5a.  call `<init>`(v2, v0) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L437b60.  throw v2;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withBytes`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withBytes:([B)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L437230.  v0:= new `com.google.crypto.tink.JsonKeysetReader`;
  #L437234.  v1:= new `java.io.ByteArrayInputStream`;
  #L437238.  call `<init>`(v1, v2) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L43723e.  v2:= 1I;
  #L437240.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Ljava/io/InputStream;Z)V` @kind direct;
  #L437246.  return v0 @kind object;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withFile`(`java.io.File` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L437258.  v0:= new `com.google.crypto.tink.JsonKeysetReader`;
  #L43725c.  v1:= new `java.io.FileInputStream`;
  #L437260.  call `<init>`(v1, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L437266.  v2:= 1I;
  #L437268.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Ljava/io/InputStream;Z)V` @kind direct;
  #L43726e.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetReader` `withInputStream`(`java.io.InputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withInputStream:(Ljava/io/InputStream;)Lcom/google/crypto/tink/KeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L437330.  v0:= new `com.google.crypto.tink.JsonKeysetReader`;
  #L437334.  v1:= 0I;
  #L437336.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Ljava/io/InputStream;Z)V` @kind direct;
  #L43733c.  return v0 @kind object;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withJsonObject`(`org.json.JSONObject` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withJsonObject:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L437280.  v0:= new `com.google.crypto.tink.JsonKeysetReader`;
  #L437284.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Lorg/json/JSONObject;)V` @kind direct;
  #L43728a.  return v0 @kind object;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withPath`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withPath:(Ljava/lang/String;)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43729c.  v0:= new `java.io.File`;
  #L4372a0.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4372a6.  call temp:= `withFile`(v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/JsonKeysetReader;` @kind static;
  #L4372ac.  v1:= temp @kind object;
  #L4372ae.  return v1 @kind object;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withPath`(`java.nio.file.Path` v0 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withPath:(Ljava/nio/file/Path;)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4372c0.  call temp:= `toFile`(v0) @signature `Ljava/nio/file/Path;.toFile:()Ljava/io/File;` @kind interface;
  #L4372c6.  v0:= temp @kind object;
  #L4372c8.  call temp:= `withFile`(v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/JsonKeysetReader;` @kind static;
  #L4372ce.  v0:= temp @kind object;
  #L4372d0.  return v0 @kind object;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withString`(`java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withString:(Ljava/lang/String;)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4372e4.  v0:= new `com.google.crypto.tink.JsonKeysetReader`;
  #L4372e8.  v1:= new `java.io.ByteArrayInputStream`;
  #L4372ec.  v2:= `@@com.google.crypto.tink.JsonKeysetReader.e` @type ^`java.nio.charset.Charset` @kind object;
  #L4372f0.  call temp:= `getBytes`(v3, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L4372f6.  v3:= temp @kind object;
  #L4372f8.  call `<init>`(v1, v3) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L4372fe.  v3:= 1I;
  #L437300.  call `<init>`(v0, v1, v3) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Ljava/io/InputStream;Z)V` @kind direct;
  #L437306.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.Keyset` `read`(`com.google.crypto.tink.JsonKeysetReader` v4 @kind this) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.read:()Lcom/google/crypto/tink/proto/Keyset;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4376c0.  v0:= v4.`com.google.crypto.tink.JsonKeysetReader.b` @type ^`org.json.JSONObject` @kind object;
  #L4376c4.  if v0 == 0 then goto L4376e8;
  #L4376c8.  call temp:= `h`(v4, v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.h:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/Keyset;` @kind direct;
  #L4376ce.  v0:= temp @kind object;
  #L4376d0.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L4376d4.  if v1 == 0 then goto L4376e6;
  #L4376d8.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L4376dc.  if v2 == 0 then goto L4376e6;
  #L4376e0.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L4376e6.  return v0 @kind object;
  #L4376e8.  v0:= new `org.json.JSONObject`;
  #L4376ec.  v1:= new `java.lang.String`;
  #L4376f0.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L4376f4.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/a;.c:(Ljava/io/InputStream;)[B` @kind static;
  #L4376fa.  v2:= temp @kind object;
  #L4376fc.  v3:= `@@com.google.crypto.tink.JsonKeysetReader.e` @type ^`java.nio.charset.Charset` @kind object;
  #L437700.  call `<init>`(v1, v2, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L437706.  call `<init>`(v0, v1) @signature `Lorg/json/JSONObject;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43770c.  call temp:= `h`(v4, v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.h:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/Keyset;` @kind direct;
  #L437712.  v0:= temp @kind object;
  #L437714.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L437718.  if v1 == 0 then goto L43772a;
  #L43771c.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L437720.  if v2 == 0 then goto L43772a;
  #L437724.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L43772a.  return v0 @kind object;
  #L43772c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L43772e.  goto L43773e;
  #L437730.  v0:= Exception @type ^`org.json.JSONException` @kind object;
  #L437732.  v1:= new `java.io.IOException`;
  #L437736.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L43773c.  throw v1;
  #L43773e.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L437742.  if v1 == 0 then goto L437754;
  #L437746.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L43774a.  if v2 == 0 then goto L437754;
  #L43774e.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L437754.  throw v0;
  catch `org.json.JSONException` @[L4376c0..L4376d0] goto L437730;
  catch `java.lang.Throwable` @[L4376c0..L4376d0] goto L43772c;
  catch `org.json.JSONException` @[L4376e8..L437714] goto L437730;
  catch `java.lang.Throwable` @[L4376e8..L437714] goto L43772c;
  catch `java.lang.Throwable` @[L437732..L43773e] goto L43772c;
}
procedure `com.google.crypto.tink.proto.EncryptedKeyset` `readEncrypted`(`com.google.crypto.tink.JsonKeysetReader` v4 @kind this) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.readEncrypted:()Lcom/google/crypto/tink/proto/EncryptedKeyset;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4373d8.  v0:= v4.`com.google.crypto.tink.JsonKeysetReader.b` @type ^`org.json.JSONObject` @kind object;
  #L4373dc.  if v0 == 0 then goto L437400;
  #L4373e0.  call temp:= `a`(v4, v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.a:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/EncryptedKeyset;` @kind direct;
  #L4373e6.  v0:= temp @kind object;
  #L4373e8.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L4373ec.  if v1 == 0 then goto L4373fe;
  #L4373f0.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L4373f4.  if v2 == 0 then goto L4373fe;
  #L4373f8.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L4373fe.  return v0 @kind object;
  #L437400.  v0:= new `org.json.JSONObject`;
  #L437404.  v1:= new `java.lang.String`;
  #L437408.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L43740c.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/a;.c:(Ljava/io/InputStream;)[B` @kind static;
  #L437412.  v2:= temp @kind object;
  #L437414.  v3:= `@@com.google.crypto.tink.JsonKeysetReader.e` @type ^`java.nio.charset.Charset` @kind object;
  #L437418.  call `<init>`(v1, v2, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L43741e.  call `<init>`(v0, v1) @signature `Lorg/json/JSONObject;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L437424.  call temp:= `a`(v4, v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.a:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/EncryptedKeyset;` @kind direct;
  #L43742a.  v0:= temp @kind object;
  #L43742c.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L437430.  if v1 == 0 then goto L437442;
  #L437434.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L437438.  if v2 == 0 then goto L437442;
  #L43743c.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L437442.  return v0 @kind object;
  #L437444.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L437446.  goto L437456;
  #L437448.  v0:= Exception @type ^`org.json.JSONException` @kind object;
  #L43744a.  v1:= new `java.io.IOException`;
  #L43744e.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L437454.  throw v1;
  #L437456.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L43745a.  if v1 == 0 then goto L43746c;
  #L43745e.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L437462.  if v2 == 0 then goto L43746c;
  #L437466.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L43746c.  throw v0;
  catch `org.json.JSONException` @[L4373d8..L4373e8] goto L437448;
  catch `java.lang.Throwable` @[L4373d8..L4373e8] goto L437444;
  catch `org.json.JSONException` @[L437400..L43742c] goto L437448;
  catch `java.lang.Throwable` @[L437400..L43742c] goto L437444;
  catch `java.lang.Throwable` @[L43744a..L437456] goto L437444;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withUrlSafeBase64`(`com.google.crypto.tink.JsonKeysetReader` v1 @kind this) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withUrlSafeBase64:()Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L437318.  v0:= 1I;
  #L43731a.  v1.`com.google.crypto.tink.JsonKeysetReader.d` @type ^`boolean` := v0 @kind boolean;
  #L43731e.  return v1 @kind object;
}
