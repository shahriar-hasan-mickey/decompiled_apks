record `com.google.crypto.tink.BinaryKeysetWriter` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.KeysetWriter` @kind interface {
  `java.io.OutputStream` `com.google.crypto.tink.BinaryKeysetWriter.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.crypto.tink.BinaryKeysetWriter.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.BinaryKeysetWriter` v0 @kind this, `java.io.OutputStream` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/crypto/tink/BinaryKeysetWriter;.<init>:(Ljava/io/OutputStream;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L436c8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L436c92.  v0.`com.google.crypto.tink.BinaryKeysetWriter.a` @type ^`java.io.OutputStream` := v1 @kind object;
  #L436c96.  v0.`com.google.crypto.tink.BinaryKeysetWriter.b` @type ^`boolean` := v2 @kind boolean;
  #L436c9a.  return @kind void;
}
procedure `com.google.crypto.tink.KeysetWriter` `withFile`(`java.io.File` v2 @kind object) @signature `Lcom/google/crypto/tink/BinaryKeysetWriter;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/KeysetWriter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L436c44.  v0:= new `com.google.crypto.tink.BinaryKeysetWriter`;
  #L436c48.  v1:= new `java.io.FileOutputStream`;
  #L436c4c.  call `<init>`(v1, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L436c52.  v2:= 1I;
  #L436c54.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/BinaryKeysetWriter;.<init>:(Ljava/io/OutputStream;Z)V` @kind direct;
  #L436c5a.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetWriter` `withOutputStream`(`java.io.OutputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/BinaryKeysetWriter;.withOutputStream:(Ljava/io/OutputStream;)Lcom/google/crypto/tink/KeysetWriter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L436c6c.  v0:= new `com.google.crypto.tink.BinaryKeysetWriter`;
  #L436c70.  v1:= 0I;
  #L436c72.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/BinaryKeysetWriter;.<init>:(Ljava/io/OutputStream;Z)V` @kind direct;
  #L436c78.  return v0 @kind object;
}
procedure `void` `write`(`com.google.crypto.tink.BinaryKeysetWriter` v1 @kind this, `com.google.crypto.tink.proto.EncryptedKeyset` v2 @kind object) @signature `Lcom/google/crypto/tink/BinaryKeysetWriter;.write:(Lcom/google/crypto/tink/proto/EncryptedKeyset;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L436cac.  v0:= v1.`com.google.crypto.tink.BinaryKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L436cb0.  call `writeTo`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.writeTo:(Ljava/io/OutputStream;)V` @kind virtual;
  #L436cb6.  v2:= v1.`com.google.crypto.tink.BinaryKeysetWriter.b` @type ^`boolean` @kind boolean;
  #L436cba.  if v2 == 0 then goto L436cc8;
  #L436cbe.  v2:= v1.`com.google.crypto.tink.BinaryKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L436cc2.  call `close`(v2) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L436cc8.  return @kind void;
  #L436cca.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L436ccc.  v0:= v1.`com.google.crypto.tink.BinaryKeysetWriter.b` @type ^`boolean` @kind boolean;
  #L436cd0.  if v0 == 0 then goto L436cde;
  #L436cd4.  v0:= v1.`com.google.crypto.tink.BinaryKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L436cd8.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L436cde.  throw v2;
  catch `java.lang.Throwable` @[L436cac..L436cb6] goto L436cca;
}
procedure `void` `write`(`com.google.crypto.tink.BinaryKeysetWriter` v1 @kind this, `com.google.crypto.tink.proto.Keyset` v2 @kind object) @signature `Lcom/google/crypto/tink/BinaryKeysetWriter;.write:(Lcom/google/crypto/tink/proto/Keyset;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L436cfc.  v0:= v1.`com.google.crypto.tink.BinaryKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L436d00.  call `writeTo`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.writeTo:(Ljava/io/OutputStream;)V` @kind virtual;
  #L436d06.  v2:= v1.`com.google.crypto.tink.BinaryKeysetWriter.b` @type ^`boolean` @kind boolean;
  #L436d0a.  if v2 == 0 then goto L436d18;
  #L436d0e.  v2:= v1.`com.google.crypto.tink.BinaryKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L436d12.  call `close`(v2) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L436d18.  return @kind void;
  #L436d1a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L436d1c.  v0:= v1.`com.google.crypto.tink.BinaryKeysetWriter.b` @type ^`boolean` @kind boolean;
  #L436d20.  if v0 == 0 then goto L436d2e;
  #L436d24.  v0:= v1.`com.google.crypto.tink.BinaryKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L436d28.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L436d2e.  throw v2;
  catch `java.lang.Throwable` @[L436cfc..L436d06] goto L436d1a;
}
