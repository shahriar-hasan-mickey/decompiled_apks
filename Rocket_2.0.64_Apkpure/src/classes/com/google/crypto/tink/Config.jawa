record `com.google.crypto.tink.Config` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.crypto.tink.Config` v0 @kind this) @signature `Lcom/google/crypto/tink/Config;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L436e9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L436ea2.  return @kind void;
}
procedure `void` `a`(`com.google.crypto.tink.proto.KeyTypeEntry` v1 @kind object) @signature `Lcom/google/crypto/tink/Config;.a:(Lcom/google/crypto/tink/proto/KeyTypeEntry;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L437020.  call temp:= `getTypeUrl`(v1) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getTypeUrl:()Ljava/lang/String;` @kind virtual;
  #L437026.  v0:= temp @kind object;
  #L437028.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L43702e.  v0:= temp;
  #L437030.  if v0 != 0 then goto L43707e;
  #L437034.  call temp:= `getPrimitiveName`(v1) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getPrimitiveName:()Ljava/lang/String;` @kind virtual;
  #L43703a.  v0:= temp @kind object;
  #L43703c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L437042.  v0:= temp;
  #L437044.  if v0 != 0 then goto L43706e;
  #L437048.  call temp:= `getCatalogueName`(v1) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L43704e.  v1:= temp @kind object;
  #L437050.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L437056.  v1:= temp;
  #L437058.  if v1 != 0 then goto L43705e;
  #L43705c.  return @kind void;
  #L43705e.  v1:= new `java.security.GeneralSecurityException`;
  #L437062.  v0:= "Missing catalogue_name." @kind object;
  #L437066.  call `<init>`(v1, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43706c.  throw v1;
  #L43706e.  v1:= new `java.security.GeneralSecurityException`;
  #L437072.  v0:= "Missing primitive_name." @kind object;
  #L437076.  call `<init>`(v1, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43707c.  throw v1;
  #L43707e.  v1:= new `java.security.GeneralSecurityException`;
  #L437082.  v0:= "Missing type_url." @kind object;
  #L437086.  call `<init>`(v1, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43708c.  throw v1;
}
procedure `com.google.crypto.tink.proto.KeyTypeEntry` `getTinkKeyTypeEntry`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `boolean` v6 ) @signature `Lcom/google/crypto/tink/Config;.getTinkKeyTypeEntry:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Lcom/google/crypto/tink/proto/KeyTypeEntry;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L436e2c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind static;
  #L436e32.  v0:= temp @kind object;
  #L436e34.  call temp:= `setPrimitiveName`(v0, v3) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;.setPrimitiveName:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind virtual;
  #L436e3a.  v3:= temp @kind object;
  #L436e3c.  v0:= new `java.lang.StringBuilder`;
  #L436e40.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L436e46.  v1:= "type.googleapis.com/google.crypto.tink." @kind object;
  #L436e4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L436e50.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L436e56.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L436e5c.  v4:= temp @kind object;
  #L436e5e.  call temp:= `setTypeUrl`(v3, v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind virtual;
  #L436e64.  v3:= temp @kind object;
  #L436e66.  call temp:= `setKeyManagerVersion`(v3, v5) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;.setKeyManagerVersion:(I)Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind virtual;
  #L436e6c.  v3:= temp @kind object;
  #L436e6e.  call temp:= `setNewKeyAllowed`(v3, v6) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;.setNewKeyAllowed:(Z)Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind virtual;
  #L436e74.  v3:= temp @kind object;
  #L436e76.  call temp:= `setCatalogueName`(v3, v2) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;.setCatalogueName:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind virtual;
  #L436e7c.  v2:= temp @kind object;
  #L436e7e.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L436e84.  v2:= temp @kind object;
  #L436e86.  v2:= (`com.google.crypto.tink.proto.KeyTypeEntry`) v2 @kind object;
  #L436e8a.  return v2 @kind object;
}
procedure `void` `register`(`com.google.crypto.tink.proto.RegistryConfig` v1 @kind object) @signature `Lcom/google/crypto/tink/Config;.register:(Lcom/google/crypto/tink/proto/RegistryConfig;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L436eb4.  call temp:= `getEntryList`(v1) @signature `Lcom/google/crypto/tink/proto/RegistryConfig;.getEntryList:()Ljava/util/List;` @kind virtual;
  #L436eba.  v1:= temp @kind object;
  #L436ebc.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L436ec2.  v1:= temp @kind object;
  #L436ec4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L436eca.  v0:= temp;
  #L436ecc.  if v0 == 0 then goto L436ee4;
  #L436ed0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L436ed6.  v0:= temp @kind object;
  #L436ed8.  v0:= (`com.google.crypto.tink.proto.KeyTypeEntry`) v0 @kind object;
  #L436edc.  call `registerKeyType`(v0) @signature `Lcom/google/crypto/tink/Config;.registerKeyType:(Lcom/google/crypto/tink/proto/KeyTypeEntry;)V` @kind static;
  #L436ee2.  goto L436ec4;
  #L436ee4.  return @kind void;
}
procedure `void` `registerKeyType`(`com.google.crypto.tink.proto.KeyTypeEntry` v4 @kind object) @signature `Lcom/google/crypto/tink/Config;.registerKeyType:(Lcom/google/crypto/tink/proto/KeyTypeEntry;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L436ef8.  call `a`(v4) @signature `Lcom/google/crypto/tink/Config;.a:(Lcom/google/crypto/tink/proto/KeyTypeEntry;)V` @kind static;
  #L436efe.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L436f04.  v0:= temp @kind object;
  #L436f06.  v1:= "TinkAead" @kind object;
  #L436f0a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L436f10.  v0:= temp;
  #L436f12.  if v0 != 0 then goto L43700c;
  #L436f16.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L436f1c.  v0:= temp @kind object;
  #L436f1e.  v1:= "TinkMac" @kind object;
  #L436f22.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L436f28.  v0:= temp;
  #L436f2a.  if v0 != 0 then goto L43700c;
  #L436f2e.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L436f34.  v0:= temp @kind object;
  #L436f36.  v1:= "TinkHybridDecrypt" @kind object;
  #L436f3a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L436f40.  v0:= temp;
  #L436f42.  if v0 != 0 then goto L43700c;
  #L436f46.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L436f4c.  v0:= temp @kind object;
  #L436f4e.  v1:= "TinkHybridEncrypt" @kind object;
  #L436f52.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L436f58.  v0:= temp;
  #L436f5a.  if v0 != 0 then goto L43700c;
  #L436f5e.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L436f64.  v0:= temp @kind object;
  #L436f66.  v1:= "TinkPublicKeySign" @kind object;
  #L436f6a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L436f70.  v0:= temp;
  #L436f72.  if v0 != 0 then goto L43700c;
  #L436f76.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L436f7c.  v0:= temp @kind object;
  #L436f7e.  v1:= "TinkPublicKeyVerify" @kind object;
  #L436f82.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L436f88.  v0:= temp;
  #L436f8a.  if v0 != 0 then goto L43700c;
  #L436f8e.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L436f94.  v0:= temp @kind object;
  #L436f96.  v1:= "TinkStreamingAead" @kind object;
  #L436f9a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L436fa0.  v0:= temp;
  #L436fa2.  if v0 != 0 then goto L43700c;
  #L436fa6.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L436fac.  v0:= temp @kind object;
  #L436fae.  v1:= "TinkDeterministicAead" @kind object;
  #L436fb2.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L436fb8.  v0:= temp;
  #L436fba.  if v0 == 0 then goto L436fc0;
  #L436fbe.  goto L43700c;
  #L436fc0.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L436fc6.  v0:= temp @kind object;
  #L436fc8.  call temp:= `getCatalogue`(v0) @signature `Lcom/google/crypto/tink/Registry;.getCatalogue:(Ljava/lang/String;)Lcom/google/crypto/tink/Catalogue;` @kind static;
  #L436fce.  v0:= temp @kind object;
  #L436fd0.  call temp:= `getPrimitiveWrapper`(v0) @signature `Lcom/google/crypto/tink/Catalogue;.getPrimitiveWrapper:()Lcom/google/crypto/tink/PrimitiveWrapper;` @kind interface;
  #L436fd6.  v1:= temp @kind object;
  #L436fd8.  call `registerPrimitiveWrapper`(v1) @signature `Lcom/google/crypto/tink/Registry;.registerPrimitiveWrapper:(Lcom/google/crypto/tink/PrimitiveWrapper;)V` @kind static;
  #L436fde.  call temp:= `getTypeUrl`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getTypeUrl:()Ljava/lang/String;` @kind virtual;
  #L436fe4.  v1:= temp @kind object;
  #L436fe6.  call temp:= `getPrimitiveName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getPrimitiveName:()Ljava/lang/String;` @kind virtual;
  #L436fec.  v2:= temp @kind object;
  #L436fee.  call temp:= `getKeyManagerVersion`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getKeyManagerVersion:()I` @kind virtual;
  #L436ff4.  v3:= temp;
  #L436ff6.  call temp:= `getKeyManager`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/Catalogue;.getKeyManager:(Ljava/lang/String;Ljava/lang/String;I)Lcom/google/crypto/tink/KeyManager;` @kind interface;
  #L436ffc.  v0:= temp @kind object;
  #L436ffe.  call temp:= `getNewKeyAllowed`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getNewKeyAllowed:()Z` @kind virtual;
  #L437004.  v4:= temp;
  #L437006.  call `registerKeyManager`(v0, v4) @signature `Lcom/google/crypto/tink/Registry;.registerKeyManager:(Lcom/google/crypto/tink/KeyManager;Z)V` @kind static;
  #L43700c.  return @kind void;
}
