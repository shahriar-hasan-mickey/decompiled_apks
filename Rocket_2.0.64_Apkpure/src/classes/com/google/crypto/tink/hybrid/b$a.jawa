record `com.google.crypto.tink.hybrid.b$a` @kind class @AccessFlag  extends `com.google.crypto.tink.HybridEncrypt` @kind interface {
  `com.google.crypto.tink.PrimitiveSet` `com.google.crypto.tink.hybrid.b$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.hybrid.b$a` v0 @kind this, `com.google.crypto.tink.PrimitiveSet` v1 @kind object) @signature `Lcom/google/crypto/tink/hybrid/b$a;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L440350.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L440356.  v0.`com.google.crypto.tink.hybrid.b$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` := v1 @kind object;
  #L44035a.  return @kind void;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.hybrid.b$a` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/hybrid/b$a;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4402f0.  v0:= 2I;
  #L4402f2.  v0:= new `byte`[][v0];
  #L4402f6.  v1:= v3.`com.google.crypto.tink.hybrid.b$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L4402fa.  call temp:= `getPrimary`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L440300.  v1:= temp @kind object;
  #L440302.  call temp:= `getIdentifier`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getIdentifier:()[B` @kind virtual;
  #L440308.  v1:= temp @kind object;
  #L44030a.  v2:= 0I;
  #L44030c.  v0[v2]:= v1 @kind object;
  #L440310.  v1:= v3.`com.google.crypto.tink.hybrid.b$a.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L440314.  call temp:= `getPrimary`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L44031a.  v1:= temp @kind object;
  #L44031c.  call temp:= `getPrimitive`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L440322.  v1:= temp @kind object;
  #L440324.  v1:= (`com.google.crypto.tink.HybridEncrypt`) v1 @kind object;
  #L440328.  call temp:= `encrypt`(v1, v4, v5) @signature `Lcom/google/crypto/tink/HybridEncrypt;.encrypt:([B[B)[B` @kind interface;
  #L44032e.  v4:= temp @kind object;
  #L440330.  v5:= 1I;
  #L440332.  v0[v5]:= v4 @kind object;
  #L440336.  call temp:= `concat`(v0) @signature `Lcom/google/crypto/tink/subtle/Bytes;.concat:([[B)[B` @kind static;
  #L44033c.  v4:= temp @kind object;
  #L44033e.  return v4 @kind object;
}
