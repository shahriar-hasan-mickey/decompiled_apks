record `com.google.crypto.tink.hybrid.a` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.hybrid.a` v4 @kind this) @signature `Lcom/google/crypto/tink/hybrid/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43fe80.  v0:= constclass @type ^`com.google.crypto.tink.proto.EciesAeadHkdfPublicKey` @kind object;
  #L43fe84.  v1:= 1I;
  #L43fe86.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L43fe8a.  v2:= new `com.google.crypto.tink.hybrid.a$a`;
  #L43fe8e.  v3:= constclass @type ^`com.google.crypto.tink.HybridEncrypt` @kind object;
  #L43fe92.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/hybrid/a$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L43fe98.  v3:= 0I;
  #L43fe9a.  v1[v3]:= v2 @kind object;
  #L43fe9e.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L43fea4.  return @kind void;
}
procedure `com.google.crypto.tink.proto.EciesAeadHkdfPublicKey` `b`(`com.google.crypto.tink.hybrid.a` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/hybrid/a;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43fdfc.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L43fe02.  v0:= temp @kind object;
  #L43fe04.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;` @kind static;
  #L43fe0a.  v2:= temp @kind object;
  #L43fe0c.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.hybrid.a` v2 @kind this, `com.google.crypto.tink.proto.EciesAeadHkdfPublicKey` v3 @kind object) @signature `Lcom/google/crypto/tink/hybrid/a;.c:(Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43feb8.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;.getVersion:()I` @kind virtual;
  #L43febe.  v0:= temp;
  #L43fec0.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/hybrid/a;.getVersion:()I` @kind virtual;
  #L43fec6.  v1:= temp;
  #L43fec8.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L43fece.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;.getParams:()Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;` @kind virtual;
  #L43fed4.  v3:= temp @kind object;
  #L43fed6.  call `d`(v3) @signature `Lcom/google/crypto/tink/hybrid/c;.d:(Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;)V` @kind static;
  #L43fedc.  return @kind void;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.hybrid.a` v1 @kind this) @signature `Lcom/google/crypto/tink/hybrid/a;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43fe68.  v0:= "type.googleapis.com/google.crypto.tink.EciesAeadHkdfPublicKey" @kind object;
  #L43fe6c.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.hybrid.a` v1 @kind this) @signature `Lcom/google/crypto/tink/hybrid/a;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43fe54.  v0:= 0I;
  #L43fe56.  return v0;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.hybrid.a` v1 @kind this) @signature `Lcom/google/crypto/tink/hybrid/a;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43fe20.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.ASYMMETRIC_PUBLIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L43fe24.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.hybrid.a` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/hybrid/a;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43fe38.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/hybrid/a;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;` @kind virtual;
  #L43fe3e.  v1:= temp @kind object;
  #L43fe40.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.hybrid.a` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/hybrid/a;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43fef0.  v1:= (`com.google.crypto.tink.proto.EciesAeadHkdfPublicKey`) v1 @kind object;
  #L43fef4.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/hybrid/a;.c:(Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;)V` @kind virtual;
  #L43fefa.  return @kind void;
}
