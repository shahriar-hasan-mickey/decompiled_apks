record `com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$a` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43f614.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L43f61a.  return @kind void;
}
procedure `com.google.crypto.tink.HybridDecrypt` `b`(`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$a` v9 @kind this, `com.google.crypto.tink.proto.EciesAeadHkdfPrivateKey` v10 @kind object) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$a;.b:(Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey;)Lcom/google/crypto/tink/HybridDecrypt;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L43f54c.  call temp:= `getPublicKey`(v10) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;` @kind virtual;
  #L43f552.  v0:= temp @kind object;
  #L43f554.  call temp:= `getParams`(v0) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPublicKey;.getParams:()Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;` @kind virtual;
  #L43f55a.  v0:= temp @kind object;
  #L43f55c.  call temp:= `getKemParams`(v0) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;.getKemParams:()Lcom/google/crypto/tink/proto/EciesHkdfKemParams;` @kind virtual;
  #L43f562.  v1:= temp @kind object;
  #L43f564.  call temp:= `getCurveType`(v1) @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams;.getCurveType:()Lcom/google/crypto/tink/proto/EllipticCurveType;` @kind virtual;
  #L43f56a.  v2:= temp @kind object;
  #L43f56c.  call temp:= `a`(v2) @signature `Lcom/google/crypto/tink/hybrid/c;.a:(Lcom/google/crypto/tink/proto/EllipticCurveType;)Lcom/google/crypto/tink/subtle/EllipticCurves$CurveType;` @kind static;
  #L43f572.  v2:= temp @kind object;
  #L43f574.  call temp:= `getKeyValue`(v10) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L43f57a.  v10:= temp @kind object;
  #L43f57c.  call temp:= `toByteArray`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L43f582.  v10:= temp @kind object;
  #L43f584.  call temp:= `getEcPrivateKey`(v2, v10) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves;.getEcPrivateKey:(Lcom/google/crypto/tink/subtle/EllipticCurves$CurveType;[B)Ljava/security/interfaces/ECPrivateKey;` @kind static;
  #L43f58a.  v4:= temp @kind object;
  #L43f58c.  v8:= new `com.google.crypto.tink.hybrid.d`;
  #L43f590.  call temp:= `getDemParams`(v0) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;.getDemParams:()Lcom/google/crypto/tink/proto/EciesAeadDemParams;` @kind virtual;
  #L43f596.  v10:= temp @kind object;
  #L43f598.  call temp:= `getAeadDem`(v10) @signature `Lcom/google/crypto/tink/proto/EciesAeadDemParams;.getAeadDem:()Lcom/google/crypto/tink/proto/KeyTemplate;` @kind virtual;
  #L43f59e.  v10:= temp @kind object;
  #L43f5a0.  call `<init>`(v8, v10) @signature `Lcom/google/crypto/tink/hybrid/d;.<init>:(Lcom/google/crypto/tink/proto/KeyTemplate;)V` @kind direct;
  #L43f5a6.  v10:= new `com.google.crypto.tink.subtle.EciesAeadHkdfHybridDecrypt`;
  #L43f5aa.  call temp:= `getHkdfSalt`(v1) @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams;.getHkdfSalt:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L43f5b0.  v2:= temp @kind object;
  #L43f5b2.  call temp:= `toByteArray`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L43f5b8.  v5:= temp @kind object;
  #L43f5ba.  call temp:= `getHkdfHashType`(v1) @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams;.getHkdfHashType:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L43f5c0.  v1:= temp @kind object;
  #L43f5c2.  call temp:= `b`(v1) @signature `Lcom/google/crypto/tink/hybrid/c;.b:(Lcom/google/crypto/tink/proto/HashType;)Ljava/lang/String;` @kind static;
  #L43f5c8.  v6:= temp @kind object;
  #L43f5ca.  call temp:= `getEcPointFormat`(v0) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;.getEcPointFormat:()Lcom/google/crypto/tink/proto/EcPointFormat;` @kind virtual;
  #L43f5d0.  v0:= temp @kind object;
  #L43f5d2.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/hybrid/c;.c:(Lcom/google/crypto/tink/proto/EcPointFormat;)Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;` @kind static;
  #L43f5d8.  v7:= temp @kind object;
  #L43f5da.  v3:= v10 @kind object;
  #L43f5dc.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lcom/google/crypto/tink/subtle/EciesAeadHkdfHybridDecrypt;.<init>:(Ljava/security/interfaces/ECPrivateKey;[BLjava/lang/String;Lcom/google/crypto/tink/subtle/EllipticCurves$PointFormatType;Lcom/google/crypto/tink/subtle/EciesAeadHkdfDemHelper;)V` @kind direct;
  #L43f5e2.  return v10 @kind object;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$a;.getPrimitive:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43f5f4.  v1:= (`com.google.crypto.tink.proto.EciesAeadHkdfPrivateKey`) v1 @kind object;
  #L43f5f8.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager$a;.b:(Lcom/google/crypto/tink/proto/EciesAeadHkdfPrivateKey;)Lcom/google/crypto/tink/HybridDecrypt;` @kind virtual;
  #L43f5fe.  v1:= temp @kind object;
  #L43f600.  return v1 @kind object;
}
