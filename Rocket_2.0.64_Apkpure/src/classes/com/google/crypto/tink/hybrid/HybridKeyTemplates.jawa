record `com.google.crypto.tink.hybrid.HybridKeyTemplates` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_CTR_HMAC_SHA256` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM_COMPRESSED_WITHOUT_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L44051c.  v0:= 0I;
  #L44051e.  v0:= new `byte`[v0];
  #L440522.  `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.a` @type ^`byte`[] := v0 @kind object;
  #L440526.  v7:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L44052a.  v8:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L44052e.  v9:= `@@com.google.crypto.tink.proto.EcPointFormat.UNCOMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L440532.  v10:= `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_GCM` @type ^`com.google.crypto.tink.proto.KeyTemplate` @kind object;
  #L440536.  v11:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L44053a.  v1:= v7 @kind object;
  #L44053c.  v2:= v8 @kind object;
  #L44053e.  v3:= v9 @kind object;
  #L440540.  v4:= v10 @kind object;
  #L440542.  v5:= v11 @kind object;
  #L440544.  v6:= v0 @kind object;
  #L440546.  call temp:= `createEciesAeadHkdfKeyTemplate`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfKeyTemplate:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;Lcom/google/crypto/tink/proto/OutputPrefixType;[B)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L44054c.  v1:= temp @kind object;
  #L44054e.  `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v1 @kind object;
  #L440552.  v3:= `@@com.google.crypto.tink.proto.EcPointFormat.COMPRESSED` @type ^`com.google.crypto.tink.proto.EcPointFormat` @kind object;
  #L440556.  v5:= `@@com.google.crypto.tink.proto.OutputPrefixType.RAW` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L44055a.  v1:= v7 @kind object;
  #L44055c.  call temp:= `createEciesAeadHkdfKeyTemplate`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfKeyTemplate:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;Lcom/google/crypto/tink/proto/OutputPrefixType;[B)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L440562.  v1:= temp @kind object;
  #L440564.  `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM_COMPRESSED_WITHOUT_PREFIX` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v1 @kind object;
  #L440568.  v4:= `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_CTR_HMAC_SHA256` @type ^`com.google.crypto.tink.proto.KeyTemplate` @kind object;
  #L44056c.  v1:= v7 @kind object;
  #L44056e.  v3:= v9 @kind object;
  #L440570.  v5:= v11 @kind object;
  #L440572.  call temp:= `createEciesAeadHkdfKeyTemplate`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfKeyTemplate:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;Lcom/google/crypto/tink/proto/OutputPrefixType;[B)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L440578.  v0:= temp @kind object;
  #L44057a.  `@@com.google.crypto.tink.hybrid.HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_CTR_HMAC_SHA256` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L44057e.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.hybrid.HybridKeyTemplates` v0 @kind this) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L440590.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L440596.  return @kind void;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createEciesAeadHkdfKeyTemplate`(`com.google.crypto.tink.proto.EllipticCurveType` v1 @kind object, `com.google.crypto.tink.proto.HashType` v2 @kind object, `com.google.crypto.tink.proto.EcPointFormat` v3 @kind object, `com.google.crypto.tink.proto.KeyTemplate` v4 @kind object, `com.google.crypto.tink.proto.OutputPrefixType` v5 @kind object, `byte`[] v6 @kind object) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfKeyTemplate:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;Lcom/google/crypto/tink/proto/OutputPrefixType;[B)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4404a0.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat$Builder;` @kind static;
  #L4404a6.  v0:= temp @kind object;
  #L4404a8.  call temp:= `createEciesAeadHkdfParams`(v1, v2, v3, v4, v6) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfParams:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;[B)Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;` @kind static;
  #L4404ae.  v1:= temp @kind object;
  #L4404b0.  call temp:= `setParams`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;)Lcom/google/crypto/tink/proto/EciesAeadHkdfKeyFormat$Builder;` @kind virtual;
  #L4404b6.  v1:= temp @kind object;
  #L4404b8.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4404be.  v1:= temp @kind object;
  #L4404c0.  v1:= (`com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat`) v1 @kind object;
  #L4404c4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L4404ca.  v2:= temp @kind object;
  #L4404cc.  v3:= new `com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager`;
  #L4404d0.  call `<init>`(v3) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager;.<init>:()V` @kind direct;
  #L4404d6.  call temp:= `getKeyType`(v3) @signature `Lcom/google/crypto/tink/hybrid/EciesAeadHkdfPrivateKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L4404dc.  v3:= temp @kind object;
  #L4404de.  call temp:= `setTypeUrl`(v2, v3) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L4404e4.  v2:= temp @kind object;
  #L4404e6.  call temp:= `setOutputPrefixType`(v2, v5) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L4404ec.  v2:= temp @kind object;
  #L4404ee.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L4404f4.  v1:= temp @kind object;
  #L4404f6.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L4404fc.  v1:= temp @kind object;
  #L4404fe.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L440504.  v1:= temp @kind object;
  #L440506.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L44050a.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.EciesAeadHkdfParams` `createEciesAeadHkdfParams`(`com.google.crypto.tink.proto.EllipticCurveType` v1 @kind object, `com.google.crypto.tink.proto.HashType` v2 @kind object, `com.google.crypto.tink.proto.EcPointFormat` v3 @kind object, `com.google.crypto.tink.proto.KeyTemplate` v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/hybrid/HybridKeyTemplates;.createEciesAeadHkdfParams:(Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EcPointFormat;Lcom/google/crypto/tink/proto/KeyTemplate;[B)Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L440410.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams;.newBuilder:()Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;` @kind static;
  #L440416.  v0:= temp @kind object;
  #L440418.  call temp:= `setCurveType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;.setCurveType:(Lcom/google/crypto/tink/proto/EllipticCurveType;)Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;` @kind virtual;
  #L44041e.  v1:= temp @kind object;
  #L440420.  call temp:= `setHkdfHashType`(v1, v2) @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;.setHkdfHashType:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;` @kind virtual;
  #L440426.  v1:= temp @kind object;
  #L440428.  call temp:= `copyFrom`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L44042e.  v2:= temp @kind object;
  #L440430.  call temp:= `setHkdfSalt`(v1, v2) @signature `Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;.setHkdfSalt:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EciesHkdfKemParams$Builder;` @kind virtual;
  #L440436.  v1:= temp @kind object;
  #L440438.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L44043e.  v1:= temp @kind object;
  #L440440.  v1:= (`com.google.crypto.tink.proto.EciesHkdfKemParams`) v1 @kind object;
  #L440444.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EciesAeadDemParams;.newBuilder:()Lcom/google/crypto/tink/proto/EciesAeadDemParams$Builder;` @kind static;
  #L44044a.  v2:= temp @kind object;
  #L44044c.  call temp:= `setAeadDem`(v2, v4) @signature `Lcom/google/crypto/tink/proto/EciesAeadDemParams$Builder;.setAeadDem:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/proto/EciesAeadDemParams$Builder;` @kind virtual;
  #L440452.  v2:= temp @kind object;
  #L440454.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L44045a.  v2:= temp @kind object;
  #L44045c.  v2:= (`com.google.crypto.tink.proto.EciesAeadDemParams`) v2 @kind object;
  #L440460.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams;.newBuilder:()Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;` @kind static;
  #L440466.  v4:= temp @kind object;
  #L440468.  call temp:= `setKemParams`(v4, v1) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;.setKemParams:(Lcom/google/crypto/tink/proto/EciesHkdfKemParams;)Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;` @kind virtual;
  #L44046e.  v1:= temp @kind object;
  #L440470.  call temp:= `setDemParams`(v1, v2) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;.setDemParams:(Lcom/google/crypto/tink/proto/EciesAeadDemParams;)Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;` @kind virtual;
  #L440476.  v1:= temp @kind object;
  #L440478.  call temp:= `setEcPointFormat`(v1, v3) @signature `Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;.setEcPointFormat:(Lcom/google/crypto/tink/proto/EcPointFormat;)Lcom/google/crypto/tink/proto/EciesAeadHkdfParams$Builder;` @kind virtual;
  #L44047e.  v1:= temp @kind object;
  #L440480.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L440486.  v1:= temp @kind object;
  #L440488.  v1:= (`com.google.crypto.tink.proto.EciesAeadHkdfParams`) v1 @kind object;
  #L44048c.  return v1 @kind object;
}
