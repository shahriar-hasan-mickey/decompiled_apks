record `com.google.crypto.tink.hybrid.d` @kind class @AccessFlag  extends `com.google.crypto.tink.subtle.EciesAeadHkdfDemHelper` @kind interface {
  `java.lang.String` `com.google.crypto.tink.hybrid.d.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.crypto.tink.hybrid.d.b` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.proto.AesGcmKey` `com.google.crypto.tink.hybrid.d.c` @AccessFlag PRIVATE;
  `com.google.crypto.tink.proto.AesCtrHmacAeadKey` `com.google.crypto.tink.hybrid.d.d` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.hybrid.d.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.hybrid.d` v3 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v4 @kind object) @signature `Lcom/google/crypto/tink/hybrid/d;.<init>:(Lcom/google/crypto/tink/proto/KeyTemplate;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L440a94.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L440a9a.  call temp:= `getTypeUrl`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.getTypeUrl:()Ljava/lang/String;` @kind virtual;
  #L440aa0.  v0:= temp @kind object;
  #L440aa2.  v3.`com.google.crypto.tink.hybrid.d.a` @type ^`java.lang.String` := v0 @kind object;
  #L440aa6.  v1:= `@@com.google.crypto.tink.aead.AeadConfig.AES_GCM_TYPE_URL` @type ^`java.lang.String` @kind object;
  #L440aaa.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L440ab0.  v1:= temp;
  #L440ab2.  if v1 == 0 then goto L440afe;
  #L440ab6.  call temp:= `getValue`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.getValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L440abc.  v0:= temp @kind object;
  #L440abe.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L440ac4.  v1:= temp @kind object;
  #L440ac6.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/proto/AesGcmKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesGcmKeyFormat;` @kind static;
  #L440acc.  v0:= temp @kind object;
  #L440ace.  call temp:= `newKey`(v4) @signature `Lcom/google/crypto/tink/Registry;.newKey:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind static;
  #L440ad4.  v4:= temp @kind object;
  #L440ad6.  v4:= (`com.google.crypto.tink.proto.AesGcmKey`) v4 @kind object;
  #L440ada.  v3.`com.google.crypto.tink.hybrid.d.c` @type ^`com.google.crypto.tink.proto.AesGcmKey` := v4 @kind object;
  #L440ade.  call temp:= `getKeySize`(v0) @signature `Lcom/google/crypto/tink/proto/AesGcmKeyFormat;.getKeySize:()I` @kind virtual;
  #L440ae4.  v4:= temp;
  #L440ae6.  v3.`com.google.crypto.tink.hybrid.d.b` @type ^`int` := v4;
  #L440aea.  goto L440b64;
  #L440aec.  v4:= Exception @type ^`com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @kind object;
  #L440aee.  v0:= new `java.security.GeneralSecurityException`;
  #L440af2.  v1:= "invalid KeyFormat protobuf, expected AesGcmKeyFormat" @kind object;
  #L440af6.  call `<init>`(v0, v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L440afc.  throw v0;
  #L440afe.  v1:= `@@com.google.crypto.tink.aead.AeadConfig.AES_CTR_HMAC_AEAD_TYPE_URL` @type ^`java.lang.String` @kind object;
  #L440b02.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L440b08.  v1:= temp;
  #L440b0a.  if v1 == 0 then goto L440b78;
  #L440b0e.  call temp:= `getValue`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.getValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L440b14.  v0:= temp @kind object;
  #L440b16.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L440b1c.  v1:= temp @kind object;
  #L440b1e.  call temp:= `parseFrom`(v0, v1) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat;` @kind static;
  #L440b24.  v0:= temp @kind object;
  #L440b26.  call temp:= `newKey`(v4) @signature `Lcom/google/crypto/tink/Registry;.newKey:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind static;
  #L440b2c.  v4:= temp @kind object;
  #L440b2e.  v4:= (`com.google.crypto.tink.proto.AesCtrHmacAeadKey`) v4 @kind object;
  #L440b32.  v3.`com.google.crypto.tink.hybrid.d.d` @type ^`com.google.crypto.tink.proto.AesCtrHmacAeadKey` := v4 @kind object;
  #L440b36.  call temp:= `getAesCtrKeyFormat`(v0) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat;.getAesCtrKeyFormat:()Lcom/google/crypto/tink/proto/AesCtrKeyFormat;` @kind virtual;
  #L440b3c.  v4:= temp @kind object;
  #L440b3e.  call temp:= `getKeySize`(v4) @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat;.getKeySize:()I` @kind virtual;
  #L440b44.  v4:= temp;
  #L440b46.  v3.`com.google.crypto.tink.hybrid.d.e` @type ^`int` := v4;
  #L440b4a.  call temp:= `getHmacKeyFormat`(v0) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat;.getHmacKeyFormat:()Lcom/google/crypto/tink/proto/HmacKeyFormat;` @kind virtual;
  #L440b50.  v4:= temp @kind object;
  #L440b52.  call temp:= `getKeySize`(v4) @signature `Lcom/google/crypto/tink/proto/HmacKeyFormat;.getKeySize:()I` @kind virtual;
  #L440b58.  v4:= temp;
  #L440b5a.  v0:= v3.`com.google.crypto.tink.hybrid.d.e` @type ^`int`;
  #L440b5e.  v0:= v0 + v4 @kind int;
  #L440b60.  v3.`com.google.crypto.tink.hybrid.d.b` @type ^`int` := v0;
  #L440b64.  return @kind void;
  #L440b66.  v4:= Exception @type ^`com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @kind object;
  #L440b68.  v0:= new `java.security.GeneralSecurityException`;
  #L440b6c.  v1:= "invalid KeyFormat protobuf, expected AesCtrHmacAeadKeyFormat" @kind object;
  #L440b70.  call `<init>`(v0, v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L440b76.  throw v0;
  #L440b78.  v4:= new `java.security.GeneralSecurityException`;
  #L440b7c.  v1:= new `java.lang.StringBuilder`;
  #L440b80.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L440b86.  v2:= "unsupported AEAD DEM key type: " @kind object;
  #L440b8a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L440b90.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L440b96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L440b9c.  v0:= temp @kind object;
  #L440b9e.  call `<init>`(v4, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L440ba4.  throw v4;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L440ab6..L440aea] goto L440aec;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L440b0e..L440b64] goto L440b66;
}
procedure `com.google.crypto.tink.Aead` `getAead`(`com.google.crypto.tink.hybrid.d` v4 @kind this, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/hybrid/d;.getAead:([B)Lcom/google/crypto/tink/Aead;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4408e8.  v0:= constclass @type ^`com.google.crypto.tink.Aead` @kind object;
  #L4408ec.  v1:= length @variable v5;
  #L4408ee.  call temp:= `getSymmetricKeySizeInBytes`(v4) @signature `Lcom/google/crypto/tink/hybrid/d;.getSymmetricKeySizeInBytes:()I` @kind virtual;
  #L4408f4.  v2:= temp;
  #L4408f6.  if v1 != v2 then goto L440a5c;
  #L4408fa.  v1:= v4.`com.google.crypto.tink.hybrid.d.a` @type ^`java.lang.String` @kind object;
  #L4408fe.  v2:= `@@com.google.crypto.tink.aead.AeadConfig.AES_GCM_TYPE_URL` @type ^`java.lang.String` @kind object;
  #L440902.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L440908.  v1:= temp;
  #L44090a.  v2:= 0I;
  #L44090c.  if v1 == 0 then goto L44095a;
  #L440910.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesGcmKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesGcmKey$Builder;` @kind static;
  #L440916.  v1:= temp @kind object;
  #L440918.  v3:= v4.`com.google.crypto.tink.hybrid.d.c` @type ^`com.google.crypto.tink.proto.AesGcmKey` @kind object;
  #L44091c.  call temp:= `mergeFrom`(v1, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L440922.  v1:= temp @kind object;
  #L440924.  v1:= (`com.google.crypto.tink.proto.AesGcmKey$Builder`) v1 @kind object;
  #L440928.  v3:= v4.`com.google.crypto.tink.hybrid.d.b` @type ^`int`;
  #L44092c.  call temp:= `copyFrom`(v5, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([BII)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L440932.  v5:= temp @kind object;
  #L440934.  call temp:= `setKeyValue`(v1, v5) @signature `Lcom/google/crypto/tink/proto/AesGcmKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesGcmKey$Builder;` @kind virtual;
  #L44093a.  v5:= temp @kind object;
  #L44093c.  call temp:= `build`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L440942.  v5:= temp @kind object;
  #L440944.  v5:= (`com.google.crypto.tink.proto.AesGcmKey`) v5 @kind object;
  #L440948.  v1:= v4.`com.google.crypto.tink.hybrid.d.a` @type ^`java.lang.String` @kind object;
  #L44094c.  call temp:= `getPrimitive`(v1, v5, v0) @signature `Lcom/google/crypto/tink/Registry;.getPrimitive:(Ljava/lang/String;Lcom/google/crypto/tink/shaded/protobuf/MessageLite;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L440952.  v5:= temp @kind object;
  #L440954.  v5:= (`com.google.crypto.tink.Aead`) v5 @kind object;
  #L440958.  return v5 @kind object;
  #L44095a.  v1:= v4.`com.google.crypto.tink.hybrid.d.a` @type ^`java.lang.String` @kind object;
  #L44095e.  v3:= `@@com.google.crypto.tink.aead.AeadConfig.AES_CTR_HMAC_AEAD_TYPE_URL` @type ^`java.lang.String` @kind object;
  #L440962.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L440968.  v1:= temp;
  #L44096a.  if v1 == 0 then goto L440a4c;
  #L44096e.  v1:= v4.`com.google.crypto.tink.hybrid.d.e` @type ^`int`;
  #L440972.  call temp:= `copyOfRange`(v5, v2, v1) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L440978.  v1:= temp @kind object;
  #L44097a.  v2:= v4.`com.google.crypto.tink.hybrid.d.e` @type ^`int`;
  #L44097e.  v3:= v4.`com.google.crypto.tink.hybrid.d.b` @type ^`int`;
  #L440982.  call temp:= `copyOfRange`(v5, v2, v3) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L440988.  v5:= temp @kind object;
  #L44098a.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrKey$Builder;` @kind static;
  #L440990.  v2:= temp @kind object;
  #L440992.  v3:= v4.`com.google.crypto.tink.hybrid.d.d` @type ^`com.google.crypto.tink.proto.AesCtrHmacAeadKey` @kind object;
  #L440996.  call temp:= `getAesCtrKey`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;.getAesCtrKey:()Lcom/google/crypto/tink/proto/AesCtrKey;` @kind virtual;
  #L44099c.  v3:= temp @kind object;
  #L44099e.  call temp:= `mergeFrom`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L4409a4.  v2:= temp @kind object;
  #L4409a6.  v2:= (`com.google.crypto.tink.proto.AesCtrKey$Builder`) v2 @kind object;
  #L4409aa.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L4409b0.  v1:= temp @kind object;
  #L4409b2.  call temp:= `setKeyValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/AesCtrKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrKey$Builder;` @kind virtual;
  #L4409b8.  v1:= temp @kind object;
  #L4409ba.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4409c0.  v1:= temp @kind object;
  #L4409c2.  v1:= (`com.google.crypto.tink.proto.AesCtrKey`) v1 @kind object;
  #L4409c6.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacKey;.newBuilder:()Lcom/google/crypto/tink/proto/HmacKey$Builder;` @kind static;
  #L4409cc.  v2:= temp @kind object;
  #L4409ce.  v3:= v4.`com.google.crypto.tink.hybrid.d.d` @type ^`com.google.crypto.tink.proto.AesCtrHmacAeadKey` @kind object;
  #L4409d2.  call temp:= `getHmacKey`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;.getHmacKey:()Lcom/google/crypto/tink/proto/HmacKey;` @kind virtual;
  #L4409d8.  v3:= temp @kind object;
  #L4409da.  call temp:= `mergeFrom`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;)Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;` @kind virtual;
  #L4409e0.  v2:= temp @kind object;
  #L4409e2.  v2:= (`com.google.crypto.tink.proto.HmacKey$Builder`) v2 @kind object;
  #L4409e6.  call temp:= `copyFrom`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L4409ec.  v5:= temp @kind object;
  #L4409ee.  call temp:= `setKeyValue`(v2, v5) @signature `Lcom/google/crypto/tink/proto/HmacKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacKey$Builder;` @kind virtual;
  #L4409f4.  v5:= temp @kind object;
  #L4409f6.  call temp:= `build`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4409fc.  v5:= temp @kind object;
  #L4409fe.  v5:= (`com.google.crypto.tink.proto.HmacKey`) v5 @kind object;
  #L440a02.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey$Builder;` @kind static;
  #L440a08.  v2:= temp @kind object;
  #L440a0a.  v3:= v4.`com.google.crypto.tink.hybrid.d.d` @type ^`com.google.crypto.tink.proto.AesCtrHmacAeadKey` @kind object;
  #L440a0e.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;.getVersion:()I` @kind virtual;
  #L440a14.  v3:= temp;
  #L440a16.  call temp:= `setVersion`(v2, v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey$Builder;` @kind virtual;
  #L440a1c.  v2:= temp @kind object;
  #L440a1e.  call temp:= `setAesCtrKey`(v2, v1) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey$Builder;.setAesCtrKey:(Lcom/google/crypto/tink/proto/AesCtrKey;)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey$Builder;` @kind virtual;
  #L440a24.  v1:= temp @kind object;
  #L440a26.  call temp:= `setHmacKey`(v1, v5) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey$Builder;.setHmacKey:(Lcom/google/crypto/tink/proto/HmacKey;)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey$Builder;` @kind virtual;
  #L440a2c.  v5:= temp @kind object;
  #L440a2e.  call temp:= `build`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L440a34.  v5:= temp @kind object;
  #L440a36.  v5:= (`com.google.crypto.tink.proto.AesCtrHmacAeadKey`) v5 @kind object;
  #L440a3a.  v1:= v4.`com.google.crypto.tink.hybrid.d.a` @type ^`java.lang.String` @kind object;
  #L440a3e.  call temp:= `getPrimitive`(v1, v5, v0) @signature `Lcom/google/crypto/tink/Registry;.getPrimitive:(Ljava/lang/String;Lcom/google/crypto/tink/shaded/protobuf/MessageLite;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L440a44.  v5:= temp @kind object;
  #L440a46.  v5:= (`com.google.crypto.tink.Aead`) v5 @kind object;
  #L440a4a.  return v5 @kind object;
  #L440a4c.  v5:= new `java.security.GeneralSecurityException`;
  #L440a50.  v0:= "unknown DEM key type" @kind object;
  #L440a54.  call `<init>`(v5, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L440a5a.  throw v5;
  #L440a5c.  v5:= new `java.security.GeneralSecurityException`;
  #L440a60.  v0:= "Symmetric key has incorrect length" @kind object;
  #L440a64.  call `<init>`(v5, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L440a6a.  throw v5;
}
procedure `int` `getSymmetricKeySizeInBytes`(`com.google.crypto.tink.hybrid.d` v1 @kind this) @signature `Lcom/google/crypto/tink/hybrid/d;.getSymmetricKeySizeInBytes:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440a7c.  v0:= v1.`com.google.crypto.tink.hybrid.d.b` @type ^`int`;
  #L440a80.  return v0;
}
