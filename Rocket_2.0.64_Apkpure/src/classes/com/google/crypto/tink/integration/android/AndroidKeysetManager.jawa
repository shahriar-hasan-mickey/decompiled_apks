record `com.google.crypto.tink.integration.android.AndroidKeysetManager` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.crypto.tink.KeysetWriter` `com.google.crypto.tink.integration.android.AndroidKeysetManager.a` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.Aead` `com.google.crypto.tink.integration.android.AndroidKeysetManager.b` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.KeysetManager` `com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.google.crypto.tink.integration.android.AndroidKeysetManager.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L4417dc.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.<init>:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L4417f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4417f6.  call temp:= `a`(v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;.a:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;)Lcom/google/crypto/tink/KeysetWriter;` @kind static;
  #L4417fc.  v0:= temp @kind object;
  #L4417fe.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.a` @type ^`com.google.crypto.tink.KeysetWriter` := v0 @kind object;
  #L441802.  call temp:= `b`(v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;.b:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;)Lcom/google/crypto/tink/Aead;` @kind static;
  #L441808.  v0:= temp @kind object;
  #L44180a.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.b` @type ^`com.google.crypto.tink.Aead` := v0 @kind object;
  #L44180e.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;.c:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;)Lcom/google/crypto/tink/KeysetManager;` @kind static;
  #L441814.  v2:= temp @kind object;
  #L441816.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L44181a.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v0 @kind this, `com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder` v1 @kind object, `com.google.crypto.tink.integration.android.AndroidKeysetManager$a` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.<init>:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L44182c.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.<init>:(Lcom/google/crypto/tink/integration/android/AndroidKeysetManager$Builder;)V` @kind direct;
  #L441832.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate$OutputPrefixType` `a`(`com.google.crypto.tink.proto.OutputPrefixType` v0 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.a:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4414e4.  call temp:= `d`(v0) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.d:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;` @kind static;
  #L4414ea.  v0:= temp @kind object;
  #L4414ec.  return v0 @kind object;
}
procedure `boolean` `b`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.b:()Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L441448.  call temp:= `e`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.e:()Z` @kind static;
  #L44144e.  v0:= temp;
  #L441450.  return v0;
}
procedure `java.lang.String` `c`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.c:()Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4417c4.  v0:= `@@com.google.crypto.tink.integration.android.AndroidKeysetManager.d` @type ^`java.lang.String` @kind object;
  #L4417c8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate$OutputPrefixType` `d`(`com.google.crypto.tink.proto.OutputPrefixType` v1 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.d:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L441500.  v0:= `@@com.google.crypto.tink.integration.android.AndroidKeysetManager$a.a` @type ^`int`[] @kind object;
  #L441504.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L44150a.  v1:= temp;
  #L44150c.  v1:= v0[v1];
  #L441510.  v0:= 1I;
  #L441512.  if v1 == v0 then goto L44154a;
  #L441516.  v0:= 2I;
  #L441518.  if v1 == v0 then goto L441544;
  #L44151c.  v0:= 3I;
  #L44151e.  if v1 == v0 then goto L44153e;
  #L441522.  v0:= 4I;
  #L441524.  if v1 != v0 then goto L44152e;
  #L441528.  v1:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.CRUNCHY` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L44152c.  return v1 @kind object;
  #L44152e.  v1:= new `java.lang.IllegalArgumentException`;
  #L441532.  v0:= "Unknown output prefix type" @kind object;
  #L441536.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L44153c.  throw v1;
  #L44153e.  v1:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L441542.  return v1 @kind object;
  #L441544.  v1:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.LEGACY` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L441548.  return v1 @kind object;
  #L44154a.  v1:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.TINK` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L44154e.  return v1 @kind object;
}
procedure `boolean` `e`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.e:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L441464.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L441468.  v1:= 23I;
  #L44146c.  if v0 < v1 then goto L441474;
  #L441470.  v0:= 1I;
  #L441472.  goto L441476;
  #L441474.  v0:= 0I;
  #L441476.  return v0;
}
procedure `boolean` `f`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.f:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4414b8.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.b` @type ^`com.google.crypto.tink.Aead` @kind object;
  #L4414bc.  if v0 == 0 then goto L4414d0;
  #L4414c0.  call temp:= `e`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.e:()Z` @kind static;
  #L4414c6.  v0:= temp;
  #L4414c8.  if v0 == 0 then goto L4414d0;
  #L4414cc.  v0:= 1I;
  #L4414ce.  goto L4414d2;
  #L4414d0.  v0:= 0I;
  #L4414d2.  return v0;
}
procedure `void` `g`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v2 @kind this, `com.google.crypto.tink.KeysetManager` v3 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L441844.  call temp:= `f`(v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.f:()Z` @kind direct;
  #L44184a.  v0:= temp;
  #L44184c.  if v0 == 0 then goto L441868;
  #L441850.  call temp:= `getKeysetHandle`(v3) @signature `Lcom/google/crypto/tink/KeysetManager;.getKeysetHandle:()Lcom/google/crypto/tink/KeysetHandle;` @kind virtual;
  #L441856.  v3:= temp @kind object;
  #L441858.  v0:= v2.`com.google.crypto.tink.integration.android.AndroidKeysetManager.a` @type ^`com.google.crypto.tink.KeysetWriter` @kind object;
  #L44185c.  v1:= v2.`com.google.crypto.tink.integration.android.AndroidKeysetManager.b` @type ^`com.google.crypto.tink.Aead` @kind object;
  #L441860.  call `write`(v3, v0, v1) @signature `Lcom/google/crypto/tink/KeysetHandle;.write:(Lcom/google/crypto/tink/KeysetWriter;Lcom/google/crypto/tink/Aead;)V` @kind virtual;
  #L441866.  goto L44187a;
  #L441868.  call temp:= `getKeysetHandle`(v3) @signature `Lcom/google/crypto/tink/KeysetManager;.getKeysetHandle:()Lcom/google/crypto/tink/KeysetHandle;` @kind virtual;
  #L44186e.  v3:= temp @kind object;
  #L441870.  v0:= v2.`com.google.crypto.tink.integration.android.AndroidKeysetManager.a` @type ^`com.google.crypto.tink.KeysetWriter` @kind object;
  #L441874.  call `write`(v3, v0) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.write:(Lcom/google/crypto/tink/KeysetHandle;Lcom/google/crypto/tink/KeysetWriter;)V` @kind static;
  #L44187a.  return @kind void;
  #L44187c.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L44187e.  v0:= new `java.security.GeneralSecurityException`;
  #L441882.  call `<init>`(v0, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L441888.  throw v0;
  catch `java.io.IOException` @[L441844..L44187a] goto L44187c;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `add`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `com.google.crypto.tink.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.add:(Lcom/google/crypto/tink/KeyTemplate;)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441594.  @monitorenter v1
  #L441596.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L44159a.  call temp:= `add`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.add:(Lcom/google/crypto/tink/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L4415a0.  v2:= temp @kind object;
  #L4415a2.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L4415a6.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L4415ac.  @monitorexit v1
  #L4415ae.  return v1 @kind object;
  #L4415b0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4415b2.  @monitorexit v1
  #L4415b4.  throw v2;
  catch `java.lang.Throwable` @[L441596..L4415ac] goto L4415b0;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `add`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.add:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4415d4.  @monitorenter v1
  #L4415d6.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L4415da.  call temp:= `add`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.add:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L4415e0.  v2:= temp @kind object;
  #L4415e2.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L4415e6.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L4415ec.  @monitorexit v1
  #L4415ee.  return v1 @kind object;
  #L4415f0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4415f2.  @monitorexit v1
  #L4415f4.  throw v2;
  catch `java.lang.Throwable` @[L4415d6..L4415ec] goto L4415f0;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `delete`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.delete:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441614.  @monitorenter v1
  #L441616.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L44161a.  call temp:= `delete`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.delete:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L441620.  v2:= temp @kind object;
  #L441622.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L441626.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L44162c.  @monitorexit v1
  #L44162e.  return v1 @kind object;
  #L441630.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L441632.  @monitorexit v1
  #L441634.  throw v2;
  catch `java.lang.Throwable` @[L441616..L44162c] goto L441630;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `destroy`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.destroy:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441654.  @monitorenter v1
  #L441656.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L44165a.  call temp:= `destroy`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.destroy:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L441660.  v2:= temp @kind object;
  #L441662.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L441666.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L44166c.  @monitorexit v1
  #L44166e.  return v1 @kind object;
  #L441670.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L441672.  @monitorexit v1
  #L441674.  throw v2;
  catch `java.lang.Throwable` @[L441656..L44166c] goto L441670;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `disable`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.disable:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441694.  @monitorenter v1
  #L441696.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L44169a.  call temp:= `disable`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.disable:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L4416a0.  v2:= temp @kind object;
  #L4416a2.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L4416a6.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L4416ac.  @monitorexit v1
  #L4416ae.  return v1 @kind object;
  #L4416b0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4416b2.  @monitorexit v1
  #L4416b4.  throw v2;
  catch `java.lang.Throwable` @[L441696..L4416ac] goto L4416b0;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `enable`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.enable:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4416d4.  @monitorenter v1
  #L4416d6.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L4416da.  call temp:= `enable`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.enable:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L4416e0.  v2:= temp @kind object;
  #L4416e2.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L4416e6.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L4416ec.  @monitorexit v1
  #L4416ee.  return v1 @kind object;
  #L4416f0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4416f2.  @monitorexit v1
  #L4416f4.  throw v2;
  catch `java.lang.Throwable` @[L4416d6..L4416ec] goto L4416f0;
}
procedure `com.google.crypto.tink.KeysetHandle` `getKeysetHandle`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.getKeysetHandle:()Lcom/google/crypto/tink/KeysetHandle;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441560.  @monitorenter v1
  #L441562.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L441566.  call temp:= `getKeysetHandle`(v0) @signature `Lcom/google/crypto/tink/KeysetManager;.getKeysetHandle:()Lcom/google/crypto/tink/KeysetHandle;` @kind virtual;
  #L44156c.  v0:= temp @kind object;
  #L44156e.  @monitorexit v1
  #L441570.  return v0 @kind object;
  #L441572.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L441574.  @monitorexit v1
  #L441576.  throw v0;
  catch `java.lang.Throwable` @[L441562..L44156e] goto L441572;
}
procedure `boolean` `isUsingKeystore`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.isUsingKeystore:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441488.  @monitorenter v1
  #L44148a.  call temp:= `f`(v1) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.f:()Z` @kind direct;
  #L441490.  v0:= temp;
  #L441492.  @monitorexit v1
  #L441494.  return v0;
  #L441496.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L441498.  @monitorexit v1
  #L44149a.  throw v0;
  catch `java.lang.Throwable` @[L44148a..L441492] goto L441496;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `promote`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.promote:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;

  #L441714.  @monitorenter v0
  #L441716.  call temp:= `setPrimary`(v0, v1) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.setPrimary:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @kind virtual;
  #L44171c.  v1:= temp @kind object;
  #L44171e.  @monitorexit v0
  #L441720.  return v1 @kind object;
  #L441722.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L441724.  @monitorexit v0
  #L441726.  throw v1;
  catch `java.lang.Throwable` @[L441716..L44171e] goto L441722;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `rotate`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.rotate:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441744.  @monitorenter v1
  #L441746.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L44174a.  call temp:= `rotate`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.rotate:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L441750.  v2:= temp @kind object;
  #L441752.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L441756.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L44175c.  @monitorexit v1
  #L44175e.  return v1 @kind object;
  #L441760.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L441762.  @monitorexit v1
  #L441764.  throw v2;
  catch `java.lang.Throwable` @[L441746..L44175c] goto L441760;
}
procedure `com.google.crypto.tink.integration.android.AndroidKeysetManager` `setPrimary`(`com.google.crypto.tink.integration.android.AndroidKeysetManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.setPrimary:(I)Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441784.  @monitorenter v1
  #L441786.  v0:= v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` @kind object;
  #L44178a.  call temp:= `setPrimary`(v0, v2) @signature `Lcom/google/crypto/tink/KeysetManager;.setPrimary:(I)Lcom/google/crypto/tink/KeysetManager;` @kind virtual;
  #L441790.  v2:= temp @kind object;
  #L441792.  v1.`com.google.crypto.tink.integration.android.AndroidKeysetManager.c` @type ^`com.google.crypto.tink.KeysetManager` := v2 @kind object;
  #L441796.  call `g`(v1, v2) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeysetManager;.g:(Lcom/google/crypto/tink/KeysetManager;)V` @kind direct;
  #L44179c.  @monitorexit v1
  #L44179e.  return v1 @kind object;
  #L4417a0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4417a2.  @monitorexit v1
  #L4417a4.  throw v2;
  catch `java.lang.Throwable` @[L441786..L44179c] goto L4417a0;
}
