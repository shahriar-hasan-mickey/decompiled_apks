record `com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.Aead` @kind interface {
  `javax.crypto.SecretKey` `com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.a` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L441a38.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L441a4c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L441a52.  v0:= "AndroidKeyStore" @kind object;
  #L441a56.  call temp:= `getInstance`(v0) @signature `Ljava/security/KeyStore;.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;` @kind static;
  #L441a5c.  v0:= temp @kind object;
  #L441a5e.  v1:= 0I;
  #L441a60.  call `load`(v0, v1) @signature `Ljava/security/KeyStore;.load:(Ljava/security/KeyStore$LoadStoreParameter;)V` @kind virtual;
  #L441a66.  call temp:= `getKey`(v0, v4, v1) @signature `Ljava/security/KeyStore;.getKey:(Ljava/lang/String;[C)Ljava/security/Key;` @kind virtual;
  #L441a6c.  v0:= temp @kind object;
  #L441a6e.  v0:= (`javax.crypto.SecretKey`) v0 @kind object;
  #L441a72.  v3.`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.a` @type ^`javax.crypto.SecretKey` := v0 @kind object;
  #L441a76.  if v0 == 0 then goto L441a7c;
  #L441a7a.  return @kind void;
  #L441a7c.  v0:= new `java.security.InvalidKeyException`;
  #L441a80.  v1:= new `java.lang.StringBuilder`;
  #L441a84.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L441a8a.  v2:= "Keystore cannot load the key with ID: " @kind object;
  #L441a8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L441a94.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L441a9a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L441aa0.  v4:= temp @kind object;
  #L441aa2.  call `<init>`(v0, v4) @signature `Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L441aa8.  throw v0;
}
procedure `void` `<init>`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v2 @kind this, `java.lang.String` v3 @kind object, `java.security.KeyStore` v4 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.<init>:(Ljava/lang/String;Ljava/security/KeyStore;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L441abc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L441ac2.  v0:= 0I;
  #L441ac4.  call temp:= `getKey`(v4, v3, v0) @signature `Ljava/security/KeyStore;.getKey:(Ljava/lang/String;[C)Ljava/security/Key;` @kind virtual;
  #L441aca.  v4:= temp @kind object;
  #L441acc.  v4:= (`javax.crypto.SecretKey`) v4 @kind object;
  #L441ad0.  v2.`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.a` @type ^`javax.crypto.SecretKey` := v4 @kind object;
  #L441ad4.  if v4 == 0 then goto L441ada;
  #L441ad8.  return @kind void;
  #L441ada.  v4:= new `java.security.InvalidKeyException`;
  #L441ade.  v0:= new `java.lang.StringBuilder`;
  #L441ae2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L441ae8.  v1:= "Keystore cannot load the key with ID: " @kind object;
  #L441aec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L441af2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L441af8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L441afe.  v3:= temp @kind object;
  #L441b00.  call `<init>`(v4, v3) @signature `Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L441b06.  throw v4;
}
procedure `byte`[] `a`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v5 @kind this, `byte`[] v6 @kind object, `byte`[] v7 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.a:([B[B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4418fc.  v0:= length @variable v6;
  #L4418fe.  v1:= 28I;
  #L441902.  if v0 < v1 then goto L441946;
  #L441906.  v0:= new `javax.crypto.spec.GCMParameterSpec`;
  #L44190a.  v1:= 128I;
  #L44190e.  v2:= 0I;
  #L441910.  v3:= 12I;
  #L441914.  call `<init>`(v0, v1, v6, v2, v3) @signature `Ljavax/crypto/spec/GCMParameterSpec;.<init>:(I[BII)V` @kind direct;
  #L44191a.  v1:= "AES/GCM/NoPadding" @kind object;
  #L44191e.  call temp:= `getInstance`(v1) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L441924.  v1:= temp @kind object;
  #L441926.  v2:= 2I;
  #L441928.  v4:= v5.`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L44192c.  call `init`(v1, v2, v4, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L441932.  call `updateAAD`(v1, v7) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L441938.  v7:= length @variable v6;
  #L44193a.  v7:= v7 - v3 @kind int;
  #L44193c.  call temp:= `doFinal`(v1, v6, v3, v7) @signature `Ljavax/crypto/Cipher;.doFinal:([BII)[B` @kind virtual;
  #L441942.  v6:= temp @kind object;
  #L441944.  return v6 @kind object;
  #L441946.  v6:= new `java.security.GeneralSecurityException`;
  #L44194a.  v7:= "ciphertext too short" @kind object;
  #L44194e.  call `<init>`(v6, v7) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L441954.  throw v6;
}
procedure `byte`[] `b`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v9 @kind this, `byte`[] v10 @kind object, `byte`[] v11 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.b:([B[B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4419b8.  v0:= length @variable v10;
  #L4419ba.  v1:= 2147483619I;
  #L4419c0.  if v0 > v1 then goto L441a18;
  #L4419c4.  v0:= length @variable v10;
  #L4419c6.  v1:= 12I;
  #L4419ca.  v0:= v0 + v1 @kind int;
  #L4419cc.  v0:= v0 + 16;
  #L4419d0.  v0:= new `byte`[v0];
  #L4419d4.  v2:= "AES/GCM/NoPadding" @kind object;
  #L4419d8.  call temp:= `getInstance`(v2) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L4419de.  v8:= temp @kind object;
  #L4419e0.  v2:= 1I;
  #L4419e2.  v3:= v9.`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L4419e6.  call `init`(v8, v2, v3) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L4419ec.  call `updateAAD`(v8, v11) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L4419f2.  v4:= 0I;
  #L4419f4.  v5:= length @variable v10;
  #L4419f6.  v7:= 12I;
  #L4419fa.  v2:= v8 @kind object;
  #L4419fc.  v3:= v10 @kind object;
  #L4419fe.  v6:= v0 @kind object;
  #L441a00.  call temp:= `doFinal`(v2, v3, v4, v5, v6, v7) @signature `Ljavax/crypto/Cipher;.doFinal:([BII[BI)I` @kind virtual;
  #L441a06.  call temp:= `getIV`(v8) @signature `Ljavax/crypto/Cipher;.getIV:()[B` @kind virtual;
  #L441a0c.  v10:= temp @kind object;
  #L441a0e.  v11:= 0I;
  #L441a10.  call `arraycopy`(v10, v11, v0, v11, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L441a16.  return v0 @kind object;
  #L441a18.  v10:= new `java.security.GeneralSecurityException`;
  #L441a1c.  v11:= "plaintext too long" @kind object;
  #L441a20.  call `<init>`(v10, v11) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L441a26.  throw v10;
}
procedure `void` `c`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.c:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L441b18.  call temp:= `random`() @signature `Ljava/lang/Math;.random:()D` @kind static;
  #L441b1e.  v0:= temp @kind wide;
  #L441b20.  v2:= 100.0D;
  #L441b24.  v0:= v0 * v2 @kind double;
  #L441b28.  v0:= (`int`) v0 @kind d2i;
  #L441b2a.  v0:= (`long`) v0 @kind i2l;
  #L441b2c.  call `sleep`(v0) @signature `Ljava/lang/Thread;.sleep:(J)V` @kind static;
  #L441b32.  return @kind void;
  catch `java.lang.InterruptedException` @[L441b2c..L441b32] goto L441b32;
}
procedure `byte`[] `decrypt`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.decrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4418ac.  call temp:= `a`(v3, v4, v5) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.a:([B[B)[B` @kind direct;
  #L4418b2.  v4:= temp @kind object;
  #L4418b4.  return v4 @kind object;
  #L4418b6.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L4418b8.  goto L4418bc;
  #L4418ba.  v0:= Exception @type ^`java.security.ProviderException` @kind object;
  #L4418bc.  v1:= `@@com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.b` @type ^`java.lang.String` @kind object;
  #L4418c0.  v2:= "encountered a potentially transient KeyStore error, will wait and retry" @kind object;
  #L4418c4.  call temp:= `w`(v1, v2, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L4418ca.  call `c`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.c:()V` @kind static;
  #L4418d0.  call temp:= `a`(v3, v4, v5) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.a:([B[B)[B` @kind direct;
  #L4418d6.  v4:= temp @kind object;
  #L4418d8.  return v4 @kind object;
  catch `java.security.ProviderException` @[L4418ac..L4418b4] goto L4418ba;
  catch `java.security.GeneralSecurityException` @[L4418ac..L4418b4] goto L4418b6;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L441968.  call temp:= `b`(v3, v4, v5) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.b:([B[B)[B` @kind direct;
  #L44196e.  v4:= temp @kind object;
  #L441970.  return v4 @kind object;
  #L441972.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L441974.  goto L441978;
  #L441976.  v0:= Exception @type ^`java.security.ProviderException` @kind object;
  #L441978.  v1:= `@@com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.b` @type ^`java.lang.String` @kind object;
  #L44197c.  v2:= "encountered a potentially transient KeyStore error, will wait and retry" @kind object;
  #L441980.  call temp:= `w`(v1, v2, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L441986.  call `c`() @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.c:()V` @kind static;
  #L44198c.  call temp:= `b`(v3, v4, v5) @signature `Lcom/google/crypto/tink/integration/android/AndroidKeystoreAesGcm;.b:([B[B)[B` @kind direct;
  #L441992.  v4:= temp @kind object;
  #L441994.  return v4 @kind object;
  catch `java.security.ProviderException` @[L441968..L441970] goto L441976;
  catch `java.security.GeneralSecurityException` @[L441968..L441970] goto L441972;
}
