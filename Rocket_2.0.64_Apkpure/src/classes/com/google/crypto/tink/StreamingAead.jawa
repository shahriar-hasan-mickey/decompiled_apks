record `com.google.crypto.tink.StreamingAead` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.nio.channels.ReadableByteChannel` `newDecryptingChannel`(`java.nio.channels.ReadableByteChannel` v0 @kind object, `byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/StreamingAead;.newDecryptingChannel:(Ljava/nio/channels/ReadableByteChannel;[B)Ljava/nio/channels/ReadableByteChannel;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.io.InputStream` `newDecryptingStream`(`java.io.InputStream` v0 @kind object, `byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/StreamingAead;.newDecryptingStream:(Ljava/io/InputStream;[B)Ljava/io/InputStream;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.nio.channels.WritableByteChannel` `newEncryptingChannel`(`java.nio.channels.WritableByteChannel` v0 @kind object, `byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/StreamingAead;.newEncryptingChannel:(Ljava/nio/channels/WritableByteChannel;[B)Ljava/nio/channels/WritableByteChannel;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.io.OutputStream` `newEncryptingStream`(`java.io.OutputStream` v0 @kind object, `byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/StreamingAead;.newEncryptingStream:(Ljava/io/OutputStream;[B)Ljava/io/OutputStream;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.nio.channels.SeekableByteChannel` `newSeekableDecryptingChannel`(`java.nio.channels.SeekableByteChannel` v0 @kind object, `byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/StreamingAead;.newSeekableDecryptingChannel:(Ljava/nio/channels/SeekableByteChannel;[B)Ljava/nio/channels/SeekableByteChannel;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
