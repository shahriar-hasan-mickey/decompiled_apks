record `com.google.crypto.tink.mac.HmacKeyManager$a` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.mac.HmacKeyManager$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4428dc.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L4428e2.  return @kind void;
}
procedure `com.google.crypto.tink.Mac` `b`(`com.google.crypto.tink.mac.HmacKeyManager$a` v4 @kind this, `com.google.crypto.tink.proto.HmacKey` v5 @kind object) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager$a;.b:(Lcom/google/crypto/tink/proto/HmacKey;)Lcom/google/crypto/tink/Mac;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4427ec.  call temp:= `getParams`(v5) @signature `Lcom/google/crypto/tink/proto/HmacKey;.getParams:()Lcom/google/crypto/tink/proto/HmacParams;` @kind virtual;
  #L4427f2.  v0:= temp @kind object;
  #L4427f4.  call temp:= `getHash`(v0) @signature `Lcom/google/crypto/tink/proto/HmacParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L4427fa.  v0:= temp @kind object;
  #L4427fc.  call temp:= `getKeyValue`(v5) @signature `Lcom/google/crypto/tink/proto/HmacKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L442802.  v1:= temp @kind object;
  #L442804.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L44280a.  v1:= temp @kind object;
  #L44280c.  v2:= new `javax.crypto.spec.SecretKeySpec`;
  #L442810.  v3:= "HMAC" @kind object;
  #L442814.  call `<init>`(v2, v1, v3) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L44281a.  call temp:= `getParams`(v5) @signature `Lcom/google/crypto/tink/proto/HmacKey;.getParams:()Lcom/google/crypto/tink/proto/HmacParams;` @kind virtual;
  #L442820.  v5:= temp @kind object;
  #L442822.  call temp:= `getTagSize`(v5) @signature `Lcom/google/crypto/tink/proto/HmacParams;.getTagSize:()I` @kind virtual;
  #L442828.  v5:= temp;
  #L44282a.  v1:= `@@com.google.crypto.tink.mac.HmacKeyManager$c.a` @type ^`int`[] @kind object;
  #L44282e.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L442834.  v0:= temp;
  #L442836.  v0:= v1[v0];
  #L44283a.  v1:= 1I;
  #L44283c.  if v0 == v1 then goto L442890;
  #L442840.  v1:= 2I;
  #L442842.  if v0 == v1 then goto L442876;
  #L442846.  v1:= 3I;
  #L442848.  if v0 != v1 then goto L442866;
  #L44284c.  v0:= new `com.google.crypto.tink.subtle.PrfMac`;
  #L442850.  v1:= new `com.google.crypto.tink.subtle.PrfHmacJce`;
  #L442854.  v3:= "HMACSHA512" @kind object;
  #L442858.  call `<init>`(v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.<init>:(Ljava/lang/String;Ljava/security/Key;)V` @kind direct;
  #L44285e.  call `<init>`(v0, v1, v5) @signature `Lcom/google/crypto/tink/subtle/PrfMac;.<init>:(Lcom/google/crypto/tink/prf/Prf;I)V` @kind direct;
  #L442864.  return v0 @kind object;
  #L442866.  v5:= new `java.security.GeneralSecurityException`;
  #L44286a.  v0:= "unknown hash" @kind object;
  #L44286e.  call `<init>`(v5, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L442874.  throw v5;
  #L442876.  v0:= new `com.google.crypto.tink.subtle.PrfMac`;
  #L44287a.  v1:= new `com.google.crypto.tink.subtle.PrfHmacJce`;
  #L44287e.  v3:= "HMACSHA256" @kind object;
  #L442882.  call `<init>`(v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.<init>:(Ljava/lang/String;Ljava/security/Key;)V` @kind direct;
  #L442888.  call `<init>`(v0, v1, v5) @signature `Lcom/google/crypto/tink/subtle/PrfMac;.<init>:(Lcom/google/crypto/tink/prf/Prf;I)V` @kind direct;
  #L44288e.  return v0 @kind object;
  #L442890.  v0:= new `com.google.crypto.tink.subtle.PrfMac`;
  #L442894.  v1:= new `com.google.crypto.tink.subtle.PrfHmacJce`;
  #L442898.  v3:= "HMACSHA1" @kind object;
  #L44289c.  call `<init>`(v1, v3, v2) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.<init>:(Ljava/lang/String;Ljava/security/Key;)V` @kind direct;
  #L4428a2.  call `<init>`(v0, v1, v5) @signature `Lcom/google/crypto/tink/subtle/PrfMac;.<init>:(Lcom/google/crypto/tink/prf/Prf;I)V` @kind direct;
  #L4428a8.  return v0 @kind object;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.mac.HmacKeyManager$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager$a;.getPrimitive:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4428bc.  v1:= (`com.google.crypto.tink.proto.HmacKey`) v1 @kind object;
  #L4428c0.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager$a;.b:(Lcom/google/crypto/tink/proto/HmacKey;)Lcom/google/crypto/tink/Mac;` @kind virtual;
  #L4428c6.  v1:= temp @kind object;
  #L4428c8.  return v1 @kind object;
}
