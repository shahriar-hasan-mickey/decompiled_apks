record `com.google.crypto.tink.mac.MacKeyTemplates` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.mac.MacKeyTemplates.AES_CMAC` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.mac.MacKeyTemplates.HMAC_SHA256_128BITTAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.mac.MacKeyTemplates.HMAC_SHA256_256BITTAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.mac.MacKeyTemplates.HMAC_SHA512_256BITTAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.mac.MacKeyTemplates.HMAC_SHA512_512BITTAG` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/mac/MacKeyTemplates;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L443104.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L443108.  v1:= 32I;
  #L44310c.  v2:= 16I;
  #L443110.  call temp:= `createHmacKeyTemplate`(v1, v2, v0) @signature `Lcom/google/crypto/tink/mac/MacKeyTemplates;.createHmacKeyTemplate:(IILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L443116.  v3:= temp @kind object;
  #L443118.  `@@com.google.crypto.tink.mac.MacKeyTemplates.HMAC_SHA256_128BITTAG` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v3 @kind object;
  #L44311c.  call temp:= `createHmacKeyTemplate`(v1, v1, v0) @signature `Lcom/google/crypto/tink/mac/MacKeyTemplates;.createHmacKeyTemplate:(IILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L443122.  v0:= temp @kind object;
  #L443124.  `@@com.google.crypto.tink.mac.MacKeyTemplates.HMAC_SHA256_256BITTAG` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L443128.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L44312c.  v3:= 64I;
  #L443130.  call temp:= `createHmacKeyTemplate`(v3, v1, v0) @signature `Lcom/google/crypto/tink/mac/MacKeyTemplates;.createHmacKeyTemplate:(IILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L443136.  v4:= temp @kind object;
  #L443138.  `@@com.google.crypto.tink.mac.MacKeyTemplates.HMAC_SHA512_256BITTAG` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v4 @kind object;
  #L44313c.  call temp:= `createHmacKeyTemplate`(v3, v3, v0) @signature `Lcom/google/crypto/tink/mac/MacKeyTemplates;.createHmacKeyTemplate:(IILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L443142.  v0:= temp @kind object;
  #L443144.  `@@com.google.crypto.tink.mac.MacKeyTemplates.HMAC_SHA512_512BITTAG` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L443148.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L44314e.  v0:= temp @kind object;
  #L443150.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCmacKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/AesCmacKeyFormat$Builder;` @kind static;
  #L443156.  v3:= temp @kind object;
  #L443158.  call temp:= `setKeySize`(v3, v1) @signature `Lcom/google/crypto/tink/proto/AesCmacKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/AesCmacKeyFormat$Builder;` @kind virtual;
  #L44315e.  v1:= temp @kind object;
  #L443160.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCmacParams;.newBuilder:()Lcom/google/crypto/tink/proto/AesCmacParams$Builder;` @kind static;
  #L443166.  v3:= temp @kind object;
  #L443168.  call temp:= `setTagSize`(v3, v2) @signature `Lcom/google/crypto/tink/proto/AesCmacParams$Builder;.setTagSize:(I)Lcom/google/crypto/tink/proto/AesCmacParams$Builder;` @kind virtual;
  #L44316e.  v2:= temp @kind object;
  #L443170.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L443176.  v2:= temp @kind object;
  #L443178.  v2:= (`com.google.crypto.tink.proto.AesCmacParams`) v2 @kind object;
  #L44317c.  call temp:= `setParams`(v1, v2) @signature `Lcom/google/crypto/tink/proto/AesCmacKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/AesCmacParams;)Lcom/google/crypto/tink/proto/AesCmacKeyFormat$Builder;` @kind virtual;
  #L443182.  v1:= temp @kind object;
  #L443184.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L44318a.  v1:= temp @kind object;
  #L44318c.  v1:= (`com.google.crypto.tink.proto.AesCmacKeyFormat`) v1 @kind object;
  #L443190.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L443196.  v1:= temp @kind object;
  #L443198.  call temp:= `setValue`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L44319e.  v0:= temp @kind object;
  #L4431a0.  v1:= new `com.google.crypto.tink.mac.AesCmacKeyManager`;
  #L4431a4.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/mac/AesCmacKeyManager;.<init>:()V` @kind direct;
  #L4431aa.  call temp:= `getKeyType`(v1) @signature `Lcom/google/crypto/tink/mac/AesCmacKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L4431b0.  v1:= temp @kind object;
  #L4431b2.  call temp:= `setTypeUrl`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L4431b8.  v0:= temp @kind object;
  #L4431ba.  v1:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L4431be.  call temp:= `setOutputPrefixType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L4431c4.  v0:= temp @kind object;
  #L4431c6.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4431cc.  v0:= temp @kind object;
  #L4431ce.  v0:= (`com.google.crypto.tink.proto.KeyTemplate`) v0 @kind object;
  #L4431d2.  `@@com.google.crypto.tink.mac.MacKeyTemplates.AES_CMAC` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L4431d6.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.mac.MacKeyTemplates` v0 @kind this) @signature `Lcom/google/crypto/tink/mac/MacKeyTemplates;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4431e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4431ee.  return @kind void;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createHmacKeyTemplate`(`int` v1 , `int` v2 , `com.google.crypto.tink.proto.HashType` v3 @kind object) @signature `Lcom/google/crypto/tink/mac/MacKeyTemplates;.createHmacKeyTemplate:(IILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L443060.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacParams;.newBuilder:()Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind static;
  #L443066.  v0:= temp @kind object;
  #L443068.  call temp:= `setHash`(v0, v3) @signature `Lcom/google/crypto/tink/proto/HmacParams$Builder;.setHash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind virtual;
  #L44306e.  v3:= temp @kind object;
  #L443070.  call temp:= `setTagSize`(v3, v2) @signature `Lcom/google/crypto/tink/proto/HmacParams$Builder;.setTagSize:(I)Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind virtual;
  #L443076.  v2:= temp @kind object;
  #L443078.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L44307e.  v2:= temp @kind object;
  #L443080.  v2:= (`com.google.crypto.tink.proto.HmacParams`) v2 @kind object;
  #L443084.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;` @kind static;
  #L44308a.  v3:= temp @kind object;
  #L44308c.  call temp:= `setParams`(v3, v2) @signature `Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/HmacParams;)Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;` @kind virtual;
  #L443092.  v2:= temp @kind object;
  #L443094.  call temp:= `setKeySize`(v2, v1) @signature `Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;` @kind virtual;
  #L44309a.  v1:= temp @kind object;
  #L44309c.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4430a2.  v1:= temp @kind object;
  #L4430a4.  v1:= (`com.google.crypto.tink.proto.HmacKeyFormat`) v1 @kind object;
  #L4430a8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L4430ae.  v2:= temp @kind object;
  #L4430b0.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L4430b6.  v1:= temp @kind object;
  #L4430b8.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L4430be.  v1:= temp @kind object;
  #L4430c0.  v2:= new `com.google.crypto.tink.mac.HmacKeyManager`;
  #L4430c4.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager;.<init>:()V` @kind direct;
  #L4430ca.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L4430d0.  v2:= temp @kind object;
  #L4430d2.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L4430d8.  v1:= temp @kind object;
  #L4430da.  v2:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L4430de.  call temp:= `setOutputPrefixType`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L4430e4.  v1:= temp @kind object;
  #L4430e6.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4430ec.  v1:= temp @kind object;
  #L4430ee.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L4430f2.  return v1 @kind object;
}
