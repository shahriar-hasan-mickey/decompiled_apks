record `com.google.crypto.tink.mac.a` @kind class @AccessFlag  extends `com.google.crypto.tink.PrimitiveWrapper` @kind interface {
}
global `java.util.logging.Logger` `@@com.google.crypto.tink.mac.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/mac/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L443518.  v0:= constclass @type ^`com.google.crypto.tink.mac.a` @kind object;
  #L44351c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L443522.  v0:= temp @kind object;
  #L443524.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L44352a.  v0:= temp @kind object;
  #L44352c.  `@@com.google.crypto.tink.mac.a.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L443530.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.mac.a` v0 @kind this) @signature `Lcom/google/crypto/tink/mac/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L443544.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44354a.  return @kind void;
}
procedure `java.util.logging.Logger` `a`() @signature `Lcom/google/crypto/tink/mac/a;.a:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L443500.  v0:= `@@com.google.crypto.tink.mac.a.a` @type ^`java.util.logging.Logger` @kind object;
  #L443504.  return v0 @kind object;
}
procedure `void` `b`() @signature `Lcom/google/crypto/tink/mac/a;.b:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L44355c.  v0:= new `com.google.crypto.tink.mac.a`;
  #L443560.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/mac/a;.<init>:()V` @kind direct;
  #L443566.  call `registerPrimitiveWrapper`(v0) @signature `Lcom/google/crypto/tink/Registry;.registerPrimitiveWrapper:(Lcom/google/crypto/tink/PrimitiveWrapper;)V` @kind static;
  #L44356c.  return @kind void;
}
procedure `com.google.crypto.tink.Mac` `c`(`com.google.crypto.tink.mac.a` v2 @kind this, `com.google.crypto.tink.PrimitiveSet` v3 @kind object) @signature `Lcom/google/crypto/tink/mac/a;.c:(Lcom/google/crypto/tink/PrimitiveSet;)Lcom/google/crypto/tink/Mac;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L443494.  v0:= new `com.google.crypto.tink.mac.a$b`;
  #L443498.  v1:= 0I;
  #L44349a.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/mac/a$b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;Lcom/google/crypto/tink/mac/a$a;)V` @kind direct;
  #L4434a0.  return v0 @kind object;
}
procedure `java.lang.Class` `getInputPrimitiveClass`(`com.google.crypto.tink.mac.a` v1 @kind this) @signature `Lcom/google/crypto/tink/mac/a;.getInputPrimitiveClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4434b4.  v0:= constclass @type ^`com.google.crypto.tink.Mac` @kind object;
  #L4434b8.  return v0 @kind object;
}
procedure `java.lang.Class` `getPrimitiveClass`(`com.google.crypto.tink.mac.a` v1 @kind this) @signature `Lcom/google/crypto/tink/mac/a;.getPrimitiveClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4434cc.  v0:= constclass @type ^`com.google.crypto.tink.Mac` @kind object;
  #L4434d0.  return v0 @kind object;
}
procedure `java.lang.Object` `wrap`(`com.google.crypto.tink.mac.a` v0 @kind this, `com.google.crypto.tink.PrimitiveSet` v1 @kind object) @signature `Lcom/google/crypto/tink/mac/a;.wrap:(Lcom/google/crypto/tink/PrimitiveSet;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4434e4.  call temp:= `c`(v0, v1) @signature `Lcom/google/crypto/tink/mac/a;.c:(Lcom/google/crypto/tink/PrimitiveSet;)Lcom/google/crypto/tink/Mac;` @kind virtual;
  #L4434ea.  v1:= temp @kind object;
  #L4434ec.  return v1 @kind object;
}
