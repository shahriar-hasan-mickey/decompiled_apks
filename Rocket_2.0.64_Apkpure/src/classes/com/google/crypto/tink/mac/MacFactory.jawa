record `com.google.crypto.tink.mac.MacFactory` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.crypto.tink.mac.MacFactory` v0 @kind this) @signature `Lcom/google/crypto/tink/mac/MacFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L443048.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44304e.  return @kind void;
}
procedure `com.google.crypto.tink.Mac` `getPrimitive`(`com.google.crypto.tink.KeysetHandle` v1 @kind object) @signature `Lcom/google/crypto/tink/mac/MacFactory;.getPrimitive:(Lcom/google/crypto/tink/KeysetHandle;)Lcom/google/crypto/tink/Mac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L442ff0.  v0:= 0I;
  #L442ff2.  call temp:= `getPrimitive`(v1, v0) @signature `Lcom/google/crypto/tink/mac/MacFactory;.getPrimitive:(Lcom/google/crypto/tink/KeysetHandle;Lcom/google/crypto/tink/KeyManager;)Lcom/google/crypto/tink/Mac;` @kind static;
  #L442ff8.  v1:= temp @kind object;
  #L442ffa.  return v1 @kind object;
}
procedure `com.google.crypto.tink.Mac` `getPrimitive`(`com.google.crypto.tink.KeysetHandle` v1 @kind object, `com.google.crypto.tink.KeyManager` v2 @kind object) @signature `Lcom/google/crypto/tink/mac/MacFactory;.getPrimitive:(Lcom/google/crypto/tink/KeysetHandle;Lcom/google/crypto/tink/KeyManager;)Lcom/google/crypto/tink/Mac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L44300c.  v0:= new `com.google.crypto.tink.mac.a`;
  #L443010.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/mac/a;.<init>:()V` @kind direct;
  #L443016.  call `registerPrimitiveWrapper`(v0) @signature `Lcom/google/crypto/tink/Registry;.registerPrimitiveWrapper:(Lcom/google/crypto/tink/PrimitiveWrapper;)V` @kind static;
  #L44301c.  v0:= constclass @type ^`com.google.crypto.tink.Mac` @kind object;
  #L443020.  call temp:= `getPrimitives`(v1, v2, v0) @signature `Lcom/google/crypto/tink/Registry;.getPrimitives:(Lcom/google/crypto/tink/KeysetHandle;Lcom/google/crypto/tink/KeyManager;Ljava/lang/Class;)Lcom/google/crypto/tink/PrimitiveSet;` @kind static;
  #L443026.  v1:= temp @kind object;
  #L443028.  call temp:= `wrap`(v1) @signature `Lcom/google/crypto/tink/Registry;.wrap:(Lcom/google/crypto/tink/PrimitiveSet;)Ljava/lang/Object;` @kind static;
  #L44302e.  v1:= temp @kind object;
  #L443030.  v1:= (`com.google.crypto.tink.Mac`) v1 @kind object;
  #L443034.  return v1 @kind object;
}
