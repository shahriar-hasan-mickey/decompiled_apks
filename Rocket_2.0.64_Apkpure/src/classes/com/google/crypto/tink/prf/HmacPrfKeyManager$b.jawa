record `com.google.crypto.tink.prf.HmacPrfKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.prf.HmacPrfKeyManager` `com.google.crypto.tink.prf.HmacPrfKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.prf.HmacPrfKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.<init>:(Lcom/google/crypto/tink/prf/HmacPrfKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4441d8.  v0.`com.google.crypto.tink.prf.HmacPrfKeyManager$b.b` @type ^`com.google.crypto.tink.prf.HmacPrfKeyManager` := v1 @kind object;
  #L4441dc.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L4441e2.  return @kind void;
}
procedure `com.google.crypto.tink.proto.HmacPrfKey` `a`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.HmacPrfKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.a:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L444024.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.newBuilder:()Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind static;
  #L44402a.  v0:= temp @kind object;
  #L44402c.  v1:= v2.`com.google.crypto.tink.prf.HmacPrfKeyManager$b.b` @type ^`com.google.crypto.tink.prf.HmacPrfKeyManager` @kind object;
  #L444030.  call temp:= `getVersion`(v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getVersion:()I` @kind virtual;
  #L444036.  v1:= temp;
  #L444038.  call temp:= `setVersion`(v0, v1) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L44403e.  v0:= temp @kind object;
  #L444040.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/HmacPrfParams;` @kind virtual;
  #L444046.  v1:= temp @kind object;
  #L444048.  call temp:= `setParams`(v0, v1) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/HmacPrfParams;)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L44404e.  v0:= temp @kind object;
  #L444050.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getKeySize:()I` @kind virtual;
  #L444056.  v3:= temp;
  #L444058.  call temp:= `randBytes`(v3) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L44405e.  v3:= temp @kind object;
  #L444060.  call temp:= `copyFrom`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L444066.  v3:= temp @kind object;
  #L444068.  call temp:= `setKeyValue`(v0, v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L44406e.  v3:= temp @kind object;
  #L444070.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L444076.  v3:= temp @kind object;
  #L444078.  v3:= (`com.google.crypto.tink.proto.HmacPrfKey`) v3 @kind object;
  #L44407c.  return v3 @kind object;
}
procedure `com.google.crypto.tink.proto.HmacPrfKey` `b`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.HmacPrfKeyFormat` v3 @kind object, `java.io.InputStream` v4 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.b:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L444090.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getVersion:()I` @kind virtual;
  #L444096.  v0:= temp;
  #L444098.  v1:= v2.`com.google.crypto.tink.prf.HmacPrfKeyManager$b.b` @type ^`com.google.crypto.tink.prf.HmacPrfKeyManager` @kind object;
  #L44409c.  call temp:= `getVersion`(v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getVersion:()I` @kind virtual;
  #L4440a2.  v1:= temp;
  #L4440a4.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L4440aa.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getKeySize:()I` @kind virtual;
  #L4440b0.  v0:= temp;
  #L4440b2.  v0:= new `byte`[v0];
  #L4440b6.  call temp:= `read`(v4, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L4440bc.  v4:= temp;
  #L4440be.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getKeySize:()I` @kind virtual;
  #L4440c4.  v1:= temp;
  #L4440c6.  if v4 != v1 then goto L444114;
  #L4440ca.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.newBuilder:()Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind static;
  #L4440d0.  v4:= temp @kind object;
  #L4440d2.  v1:= v2.`com.google.crypto.tink.prf.HmacPrfKeyManager$b.b` @type ^`com.google.crypto.tink.prf.HmacPrfKeyManager` @kind object;
  #L4440d6.  call temp:= `getVersion`(v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getVersion:()I` @kind virtual;
  #L4440dc.  v1:= temp;
  #L4440de.  call temp:= `setVersion`(v4, v1) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L4440e4.  v4:= temp @kind object;
  #L4440e6.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/HmacPrfParams;` @kind virtual;
  #L4440ec.  v3:= temp @kind object;
  #L4440ee.  call temp:= `setParams`(v4, v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/HmacPrfParams;)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L4440f4.  v3:= temp @kind object;
  #L4440f6.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L4440fc.  v4:= temp @kind object;
  #L4440fe.  call temp:= `setKeyValue`(v3, v4) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L444104.  v3:= temp @kind object;
  #L444106.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L44410c.  v3:= temp @kind object;
  #L44410e.  v3:= (`com.google.crypto.tink.proto.HmacPrfKey`) v3 @kind object;
  #L444112.  return v3 @kind object;
  #L444114.  v3:= new `java.security.GeneralSecurityException`;
  #L444118.  v4:= "Not enough pseudorandomness given" @kind object;
  #L44411c.  call `<init>`(v3, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L444122.  throw v3;
  #L444124.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L444126.  v4:= new `java.security.GeneralSecurityException`;
  #L44412a.  v0:= "Reading pseudorandomness failed" @kind object;
  #L44412e.  call `<init>`(v4, v0, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L444134.  throw v4;
  catch `java.io.IOException` @[L4440b6..L444124] goto L444124;
}
procedure `com.google.crypto.tink.proto.HmacPrfKeyFormat` `c`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.c:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444158.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L44415e.  v0:= temp @kind object;
  #L444160.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;` @kind static;
  #L444166.  v2:= temp @kind object;
  #L444168.  return v2 @kind object;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L444198.  v1:= (`com.google.crypto.tink.proto.HmacPrfKeyFormat`) v1 @kind object;
  #L44419c.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.a:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @kind virtual;
  #L4441a2.  v1:= temp @kind object;
  #L4441a4.  return v1 @kind object;
}
procedure `void` `d`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.HmacPrfKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.d:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4441f4.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getKeySize:()I` @kind virtual;
  #L4441fa.  v0:= temp;
  #L4441fc.  v1:= 16I;
  #L444200.  if v0 < v1 then goto L444214;
  #L444204.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/HmacPrfParams;` @kind virtual;
  #L44420a.  v3:= temp @kind object;
  #L44420c.  call `b`(v3) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.b:(Lcom/google/crypto/tink/proto/HmacPrfParams;)V` @kind static;
  #L444212.  return @kind void;
  #L444214.  v3:= new `java.security.GeneralSecurityException`;
  #L444218.  v0:= "key too short" @kind object;
  #L44421c.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L444222.  throw v3;
}
procedure `java.lang.Object` `deriveKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.deriveKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;Ljava/io/InputStream;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4441b8.  v1:= (`com.google.crypto.tink.proto.HmacPrfKeyFormat`) v1 @kind object;
  #L4441bc.  call temp:= `b`(v0, v1, v2) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.b:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @kind virtual;
  #L4441c2.  v1:= temp @kind object;
  #L4441c4.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L44417c.  call temp:= `c`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.c:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;` @kind virtual;
  #L444182.  v1:= temp @kind object;
  #L444184.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L444234.  v1:= (`com.google.crypto.tink.proto.HmacPrfKeyFormat`) v1 @kind object;
  #L444238.  call `d`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.d:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;)V` @kind virtual;
  #L44423e.  return @kind void;
}
