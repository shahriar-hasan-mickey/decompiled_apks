record `com.google.crypto.tink.prf.PrfConfig` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@com.google.crypto.tink.prf.PrfConfig.PRF_TYPE_URL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/prf/PrfConfig;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L444584.  v0:= new `com.google.crypto.tink.prf.HkdfPrfKeyManager`;
  #L444588.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.<init>:()V` @kind direct;
  #L44458e.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L444594.  v0:= temp @kind object;
  #L444596.  `@@com.google.crypto.tink.prf.PrfConfig.PRF_TYPE_URL` @type ^`java.lang.String` := v0 @kind object;
  #L44459a.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.prf.PrfConfig` v0 @kind this) @signature `Lcom/google/crypto/tink/prf/PrfConfig;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4445ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4445b2.  return @kind void;
}
procedure `void` `register`() @signature `Lcom/google/crypto/tink/prf/PrfConfig;.register:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4445c4.  v0:= 1I;
  #L4445c6.  call `register`(v0) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager;.register:(Z)V` @kind static;
  #L4445cc.  call `register`(v0) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.register:(Z)V` @kind static;
  #L4445d2.  call `register`(v0) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.register:(Z)V` @kind static;
  #L4445d8.  call `register`() @signature `Lcom/google/crypto/tink/prf/PrfSetWrapper;.register:()V` @kind static;
  #L4445de.  return @kind void;
}
