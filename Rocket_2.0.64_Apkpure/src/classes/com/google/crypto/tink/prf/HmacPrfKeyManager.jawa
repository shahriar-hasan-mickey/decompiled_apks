record `com.google.crypto.tink.prf.HmacPrfKeyManager` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v4 @kind this) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L444440.  v0:= constclass @type ^`com.google.crypto.tink.proto.HmacPrfKey` @kind object;
  #L444444.  v1:= 1I;
  #L444446.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L44444a.  v2:= new `com.google.crypto.tink.prf.HmacPrfKeyManager$a`;
  #L44444e.  v3:= constclass @type ^`com.google.crypto.tink.prf.Prf` @kind object;
  #L444452.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L444458.  v3:= 0I;
  #L44445a.  v1[v3]:= v2 @kind object;
  #L44445e.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L444464.  return @kind void;
}
procedure `void` `b`(`com.google.crypto.tink.proto.HmacPrfParams` v0 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.b:(Lcom/google/crypto/tink/proto/HmacPrfParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L444478.  call `d`(v0) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.d:(Lcom/google/crypto/tink/proto/HmacPrfParams;)V` @kind static;
  #L44447e.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `c`(`int` v1 , `com.google.crypto.tink.proto.HashType` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4442dc.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacPrfParams;.newBuilder:()Lcom/google/crypto/tink/proto/HmacPrfParams$Builder;` @kind static;
  #L4442e2.  v0:= temp @kind object;
  #L4442e4.  call temp:= `setHash`(v0, v2) @signature `Lcom/google/crypto/tink/proto/HmacPrfParams$Builder;.setHash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/HmacPrfParams$Builder;` @kind virtual;
  #L4442ea.  v2:= temp @kind object;
  #L4442ec.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4442f2.  v2:= temp @kind object;
  #L4442f4.  v2:= (`com.google.crypto.tink.proto.HmacPrfParams`) v2 @kind object;
  #L4442f8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/HmacPrfKeyFormat$Builder;` @kind static;
  #L4442fe.  v0:= temp @kind object;
  #L444300.  call temp:= `setParams`(v0, v2) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/HmacPrfParams;)Lcom/google/crypto/tink/proto/HmacPrfKeyFormat$Builder;` @kind virtual;
  #L444306.  v2:= temp @kind object;
  #L444308.  call temp:= `setKeySize`(v2, v1) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/HmacPrfKeyFormat$Builder;` @kind virtual;
  #L44430e.  v1:= temp @kind object;
  #L444310.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L444316.  v1:= temp @kind object;
  #L444318.  v1:= (`com.google.crypto.tink.proto.HmacPrfKeyFormat`) v1 @kind object;
  #L44431c.  v2:= new `com.google.crypto.tink.prf.HmacPrfKeyManager`;
  #L444320.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.<init>:()V` @kind direct;
  #L444326.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L44432c.  v2:= temp @kind object;
  #L44432e.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteArray:()[B` @kind virtual;
  #L444334.  v1:= temp @kind object;
  #L444336.  v0:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L44433a.  call temp:= `create`(v2, v1, v0) @signature `Lcom/google/crypto/tink/KeyTemplate;.create:(Ljava/lang/String;[BLcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L444340.  v1:= temp @kind object;
  #L444342.  return v1 @kind object;
}
procedure `void` `d`(`com.google.crypto.tink.proto.HmacPrfParams` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.d:(Lcom/google/crypto/tink/proto/HmacPrfParams;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L444530.  call temp:= `getHash`(v2) @signature `Lcom/google/crypto/tink/proto/HmacPrfParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L444536.  v0:= temp @kind object;
  #L444538.  v1:= `@@com.google.crypto.tink.proto.HashType.SHA1` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L44453c.  if v0 == v1 then goto L444572;
  #L444540.  call temp:= `getHash`(v2) @signature `Lcom/google/crypto/tink/proto/HmacPrfParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L444546.  v0:= temp @kind object;
  #L444548.  v1:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L44454c.  if v0 == v1 then goto L444572;
  #L444550.  call temp:= `getHash`(v2) @signature `Lcom/google/crypto/tink/proto/HmacPrfParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L444556.  v2:= temp @kind object;
  #L444558.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L44455c.  if v2 != v0 then goto L444562;
  #L444560.  goto L444572;
  #L444562.  v2:= new `java.security.GeneralSecurityException`;
  #L444566.  v0:= "unknown hash type" @kind object;
  #L44456a.  call `<init>`(v2, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L444570.  throw v2;
  #L444572.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `hmacSha256Template`() @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.hmacSha256Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L444354.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L444358.  v1:= 32I;
  #L44435c.  call temp:= `c`(v1, v0) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L444362.  v0:= temp @kind object;
  #L444364.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `hmacSha512Template`() @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.hmacSha512Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L444378.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L44437c.  v1:= 64I;
  #L444380.  call temp:= `c`(v1, v0) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L444386.  v0:= temp @kind object;
  #L444388.  return v0 @kind object;
}
procedure `void` `register`(`boolean` v1 ) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.register:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L444490.  v0:= new `com.google.crypto.tink.prf.HmacPrfKeyManager`;
  #L444494.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.<init>:()V` @kind direct;
  #L44449a.  call `registerKeyManager`(v0, v1) @signature `Lcom/google/crypto/tink/Registry;.registerKeyManager:(Lcom/google/crypto/tink/KeyTypeManager;Z)V` @kind static;
  #L4444a0.  return @kind void;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444428.  v0:= "type.googleapis.com/google.crypto.tink.HmacPrfKey" @kind object;
  #L44442c.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444414.  v0:= 0I;
  #L444416.  return v0;
}
procedure `com.google.crypto.tink.KeyTypeManager$KeyFactory` `keyFactory`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v2 @kind this) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44439c.  v0:= new `com.google.crypto.tink.prf.HmacPrfKeyManager$b`;
  #L4443a0.  v1:= constclass @type ^`com.google.crypto.tink.proto.HmacPrfKeyFormat` @kind object;
  #L4443a4.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.<init>:(Lcom/google/crypto/tink/prf/HmacPrfKeyManager;Ljava/lang/Class;)V` @kind direct;
  #L4443aa.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4443e0.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.SYMMETRIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L4443e4.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.HmacPrfKey` `parseKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4443bc.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L4443c2.  v0:= temp @kind object;
  #L4443c4.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @kind static;
  #L4443ca.  v2:= temp @kind object;
  #L4443cc.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4443f8.  call temp:= `parseKey`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @kind virtual;
  #L4443fe.  v1:= temp @kind object;
  #L444400.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v2 @kind this, `com.google.crypto.tink.proto.HmacPrfKey` v3 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/HmacPrfKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4444b4.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.getVersion:()I` @kind virtual;
  #L4444ba.  v0:= temp;
  #L4444bc.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getVersion:()I` @kind virtual;
  #L4444c2.  v1:= temp;
  #L4444c4.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L4444ca.  call temp:= `getKeyValue`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L4444d0.  v0:= temp @kind object;
  #L4444d2.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L4444d8.  v0:= temp;
  #L4444da.  v1:= 16I;
  #L4444de.  if v0 < v1 then goto L4444f2;
  #L4444e2.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.getParams:()Lcom/google/crypto/tink/proto/HmacPrfParams;` @kind virtual;
  #L4444e8.  v3:= temp @kind object;
  #L4444ea.  call `d`(v3) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.d:(Lcom/google/crypto/tink/proto/HmacPrfParams;)V` @kind static;
  #L4444f0.  return @kind void;
  #L4444f2.  v3:= new `java.security.GeneralSecurityException`;
  #L4444f6.  v0:= "key too short" @kind object;
  #L4444fa.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L444500.  throw v3;
}
procedure `void` `validateKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L444514.  v1:= (`com.google.crypto.tink.proto.HmacPrfKey`) v1 @kind object;
  #L444518.  call `validateKey`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/HmacPrfKey;)V` @kind virtual;
  #L44451e.  return @kind void;
}
