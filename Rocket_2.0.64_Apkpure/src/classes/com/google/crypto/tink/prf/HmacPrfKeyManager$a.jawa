record `com.google.crypto.tink.prf.HmacPrfKeyManager$a` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.prf.HmacPrfKeyManager$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44400c.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L444012.  return @kind void;
}
procedure `com.google.crypto.tink.prf.Prf` `b`(`com.google.crypto.tink.prf.HmacPrfKeyManager$a` v3 @kind this, `com.google.crypto.tink.proto.HmacPrfKey` v4 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$a;.b:(Lcom/google/crypto/tink/proto/HmacPrfKey;)Lcom/google/crypto/tink/prf/Prf;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L443f4c.  call temp:= `getParams`(v4) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.getParams:()Lcom/google/crypto/tink/proto/HmacPrfParams;` @kind virtual;
  #L443f52.  v0:= temp @kind object;
  #L443f54.  call temp:= `getHash`(v0) @signature `Lcom/google/crypto/tink/proto/HmacPrfParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L443f5a.  v0:= temp @kind object;
  #L443f5c.  call temp:= `getKeyValue`(v4) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L443f62.  v4:= temp @kind object;
  #L443f64.  call temp:= `toByteArray`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L443f6a.  v4:= temp @kind object;
  #L443f6c.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L443f70.  v2:= "HMAC" @kind object;
  #L443f74.  call `<init>`(v1, v4, v2) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L443f7a.  v4:= `@@com.google.crypto.tink.prf.HmacPrfKeyManager$c.a` @type ^`int`[] @kind object;
  #L443f7e.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L443f84.  v0:= temp;
  #L443f86.  v4:= v4[v0];
  #L443f8a.  v0:= 1I;
  #L443f8c.  if v4 == v0 then goto L443fcc;
  #L443f90.  v0:= 2I;
  #L443f92.  if v4 == v0 then goto L443fbc;
  #L443f96.  v0:= 3I;
  #L443f98.  if v4 != v0 then goto L443fac;
  #L443f9c.  v4:= new `com.google.crypto.tink.subtle.PrfHmacJce`;
  #L443fa0.  v0:= "HMACSHA512" @kind object;
  #L443fa4.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.<init>:(Ljava/lang/String;Ljava/security/Key;)V` @kind direct;
  #L443faa.  return v4 @kind object;
  #L443fac.  v4:= new `java.security.GeneralSecurityException`;
  #L443fb0.  v0:= "unknown hash" @kind object;
  #L443fb4.  call `<init>`(v4, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L443fba.  throw v4;
  #L443fbc.  v4:= new `com.google.crypto.tink.subtle.PrfHmacJce`;
  #L443fc0.  v0:= "HMACSHA256" @kind object;
  #L443fc4.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.<init>:(Ljava/lang/String;Ljava/security/Key;)V` @kind direct;
  #L443fca.  return v4 @kind object;
  #L443fcc.  v4:= new `com.google.crypto.tink.subtle.PrfHmacJce`;
  #L443fd0.  v0:= "HMACSHA1" @kind object;
  #L443fd4.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/subtle/PrfHmacJce;.<init>:(Ljava/lang/String;Ljava/security/Key;)V` @kind direct;
  #L443fda.  return v4 @kind object;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.prf.HmacPrfKeyManager$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$a;.getPrimitive:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L443fec.  v1:= (`com.google.crypto.tink.proto.HmacPrfKey`) v1 @kind object;
  #L443ff0.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$a;.b:(Lcom/google/crypto/tink/proto/HmacPrfKey;)Lcom/google/crypto/tink/prf/Prf;` @kind virtual;
  #L443ff6.  v1:= temp @kind object;
  #L443ff8.  return v1 @kind object;
}
