record `com.google.crypto.tink.JsonKeysetWriter` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.KeysetWriter` @kind interface {
  `java.io.OutputStream` `com.google.crypto.tink.JsonKeysetWriter.a` @AccessFlag PRIVATE_FINAL;
}
global `java.nio.charset.Charset` `@@com.google.crypto.tink.JsonKeysetWriter.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L437efc.  v0:= "UTF-8" @kind object;
  #L437f00.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L437f06.  v0:= temp @kind object;
  #L437f08.  `@@com.google.crypto.tink.JsonKeysetWriter.b` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L437f0c.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.JsonKeysetWriter` v0 @kind this, `java.io.OutputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.<init>:(Ljava/io/OutputStream;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L437f20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L437f26.  v0.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` := v1 @kind object;
  #L437f2a.  return @kind void;
}
procedure `org.json.JSONObject` `a`(`com.google.crypto.tink.JsonKeysetWriter` v3 @kind this, `com.google.crypto.tink.proto.EncryptedKeyset` v4 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.a:(Lcom/google/crypto/tink/proto/EncryptedKeyset;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L437c20.  v0:= new `org.json.JSONObject`;
  #L437c24.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L437c2a.  call temp:= `getEncryptedKeyset`(v4) @signature `Lcom/google/crypto/tink/proto/EncryptedKeyset;.getEncryptedKeyset:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L437c30.  v1:= temp @kind object;
  #L437c32.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L437c38.  v1:= temp @kind object;
  #L437c3a.  call temp:= `encode`(v1) @signature `Lcom/google/crypto/tink/subtle/Base64;.encode:([B)Ljava/lang/String;` @kind static;
  #L437c40.  v1:= temp @kind object;
  #L437c42.  v2:= "encryptedKeyset" @kind object;
  #L437c46.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437c4c.  v0:= temp @kind object;
  #L437c4e.  call temp:= `getKeysetInfo`(v4) @signature `Lcom/google/crypto/tink/proto/EncryptedKeyset;.getKeysetInfo:()Lcom/google/crypto/tink/proto/KeysetInfo;` @kind virtual;
  #L437c54.  v4:= temp @kind object;
  #L437c56.  call temp:= `f`(v3, v4) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.f:(Lcom/google/crypto/tink/proto/KeysetInfo;)Lorg/json/JSONObject;` @kind direct;
  #L437c5c.  v4:= temp @kind object;
  #L437c5e.  v1:= "keysetInfo" @kind object;
  #L437c62.  call temp:= `put`(v0, v1, v4) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437c68.  v4:= temp @kind object;
  #L437c6a.  return v4 @kind object;
}
procedure `org.json.JSONObject` `b`(`com.google.crypto.tink.JsonKeysetWriter` v3 @kind this, `com.google.crypto.tink.proto.KeyData` v4 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.b:(Lcom/google/crypto/tink/proto/KeyData;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L437c7c.  v0:= new `org.json.JSONObject`;
  #L437c80.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L437c86.  call temp:= `getTypeUrl`(v4) @signature `Lcom/google/crypto/tink/proto/KeyData;.getTypeUrl:()Ljava/lang/String;` @kind virtual;
  #L437c8c.  v1:= temp @kind object;
  #L437c8e.  v2:= "typeUrl" @kind object;
  #L437c92.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437c98.  v0:= temp @kind object;
  #L437c9a.  call temp:= `getValue`(v4) @signature `Lcom/google/crypto/tink/proto/KeyData;.getValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L437ca0.  v1:= temp @kind object;
  #L437ca2.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L437ca8.  v1:= temp @kind object;
  #L437caa.  call temp:= `encode`(v1) @signature `Lcom/google/crypto/tink/subtle/Base64;.encode:([B)Ljava/lang/String;` @kind static;
  #L437cb0.  v1:= temp @kind object;
  #L437cb2.  v2:= "value" @kind object;
  #L437cb6.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437cbc.  v0:= temp @kind object;
  #L437cbe.  call temp:= `getKeyMaterialType`(v4) @signature `Lcom/google/crypto/tink/proto/KeyData;.getKeyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @kind virtual;
  #L437cc4.  v4:= temp @kind object;
  #L437cc6.  call temp:= `name`(v4) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L437ccc.  v4:= temp @kind object;
  #L437cce.  v1:= "keyMaterialType" @kind object;
  #L437cd2.  call temp:= `put`(v0, v1, v4) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437cd8.  v4:= temp @kind object;
  #L437cda.  return v4 @kind object;
}
procedure `org.json.JSONObject` `c`(`com.google.crypto.tink.JsonKeysetWriter` v4 @kind this, `com.google.crypto.tink.proto.Keyset$Key` v5 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.c:(Lcom/google/crypto/tink/proto/Keyset$Key;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L437cec.  v0:= new `org.json.JSONObject`;
  #L437cf0.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L437cf6.  call temp:= `getKeyData`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyData:()Lcom/google/crypto/tink/proto/KeyData;` @kind virtual;
  #L437cfc.  v1:= temp @kind object;
  #L437cfe.  call temp:= `b`(v4, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.b:(Lcom/google/crypto/tink/proto/KeyData;)Lorg/json/JSONObject;` @kind direct;
  #L437d04.  v1:= temp @kind object;
  #L437d06.  v2:= "keyData" @kind object;
  #L437d0a.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437d10.  v0:= temp @kind object;
  #L437d12.  call temp:= `getStatus`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L437d18.  v1:= temp @kind object;
  #L437d1a.  call temp:= `name`(v1) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L437d20.  v1:= temp @kind object;
  #L437d22.  v2:= "status" @kind object;
  #L437d26.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437d2c.  v0:= temp @kind object;
  #L437d2e.  call temp:= `getKeyId`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getKeyId:()I` @kind virtual;
  #L437d34.  v1:= temp;
  #L437d36.  call temp:= `g`(v4, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.g:(I)J` @kind direct;
  #L437d3c.  v1:= temp @kind wide;
  #L437d3e.  v3:= "keyId" @kind object;
  #L437d42.  call temp:= `put`(v0, v3, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;J)Lorg/json/JSONObject;` @kind virtual;
  #L437d48.  v0:= temp @kind object;
  #L437d4a.  call temp:= `getOutputPrefixType`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.getOutputPrefixType:()Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind virtual;
  #L437d50.  v5:= temp @kind object;
  #L437d52.  call temp:= `name`(v5) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L437d58.  v5:= temp @kind object;
  #L437d5a.  v1:= "outputPrefixType" @kind object;
  #L437d5e.  call temp:= `put`(v0, v1, v5) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437d64.  v5:= temp @kind object;
  #L437d66.  return v5 @kind object;
}
procedure `org.json.JSONObject` `d`(`com.google.crypto.tink.JsonKeysetWriter` v4 @kind this, `com.google.crypto.tink.proto.Keyset` v5 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.d:(Lcom/google/crypto/tink/proto/Keyset;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L437d78.  v0:= new `org.json.JSONObject`;
  #L437d7c.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L437d82.  call temp:= `getPrimaryKeyId`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset;.getPrimaryKeyId:()I` @kind virtual;
  #L437d88.  v1:= temp;
  #L437d8a.  call temp:= `g`(v4, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.g:(I)J` @kind direct;
  #L437d90.  v1:= temp @kind wide;
  #L437d92.  v3:= "primaryKeyId" @kind object;
  #L437d96.  call temp:= `put`(v0, v3, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;J)Lorg/json/JSONObject;` @kind virtual;
  #L437d9c.  v1:= new `org.json.JSONArray`;
  #L437da0.  call `<init>`(v1) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L437da6.  call temp:= `getKeyList`(v5) @signature `Lcom/google/crypto/tink/proto/Keyset;.getKeyList:()Ljava/util/List;` @kind virtual;
  #L437dac.  v5:= temp @kind object;
  #L437dae.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L437db4.  v5:= temp @kind object;
  #L437db6.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L437dbc.  v2:= temp;
  #L437dbe.  if v2 == 0 then goto L437dde;
  #L437dc2.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L437dc8.  v2:= temp @kind object;
  #L437dca.  v2:= (`com.google.crypto.tink.proto.Keyset$Key`) v2 @kind object;
  #L437dce.  call temp:= `c`(v4, v2) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.c:(Lcom/google/crypto/tink/proto/Keyset$Key;)Lorg/json/JSONObject;` @kind direct;
  #L437dd4.  v2:= temp @kind object;
  #L437dd6.  call temp:= `put`(v1, v2) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L437ddc.  goto L437db6;
  #L437dde.  v5:= "key" @kind object;
  #L437de2.  call temp:= `put`(v0, v5, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437de8.  return v0 @kind object;
}
procedure `org.json.JSONObject` `e`(`com.google.crypto.tink.JsonKeysetWriter` v3 @kind this, `com.google.crypto.tink.proto.KeysetInfo$KeyInfo` v4 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.e:(Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L437dfc.  v0:= new `org.json.JSONObject`;
  #L437e00.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L437e06.  call temp:= `getTypeUrl`(v4) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;.getTypeUrl:()Ljava/lang/String;` @kind virtual;
  #L437e0c.  v1:= temp @kind object;
  #L437e0e.  v2:= "typeUrl" @kind object;
  #L437e12.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437e18.  v0:= temp @kind object;
  #L437e1a.  call temp:= `getStatus`(v4) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;.getStatus:()Lcom/google/crypto/tink/proto/KeyStatusType;` @kind virtual;
  #L437e20.  v1:= temp @kind object;
  #L437e22.  call temp:= `name`(v1) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L437e28.  v1:= temp @kind object;
  #L437e2a.  v2:= "status" @kind object;
  #L437e2e.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437e34.  v0:= temp @kind object;
  #L437e36.  call temp:= `getKeyId`(v4) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;.getKeyId:()I` @kind virtual;
  #L437e3c.  v1:= temp;
  #L437e3e.  v2:= "keyId" @kind object;
  #L437e42.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;I)Lorg/json/JSONObject;` @kind virtual;
  #L437e48.  v0:= temp @kind object;
  #L437e4a.  call temp:= `getOutputPrefixType`(v4) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;.getOutputPrefixType:()Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind virtual;
  #L437e50.  v4:= temp @kind object;
  #L437e52.  call temp:= `name`(v4) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L437e58.  v4:= temp @kind object;
  #L437e5a.  v1:= "outputPrefixType" @kind object;
  #L437e5e.  call temp:= `put`(v0, v1, v4) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437e64.  v4:= temp @kind object;
  #L437e66.  return v4 @kind object;
}
procedure `org.json.JSONObject` `f`(`com.google.crypto.tink.JsonKeysetWriter` v4 @kind this, `com.google.crypto.tink.proto.KeysetInfo` v5 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.f:(Lcom/google/crypto/tink/proto/KeysetInfo;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L437e78.  v0:= new `org.json.JSONObject`;
  #L437e7c.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L437e82.  call temp:= `getPrimaryKeyId`(v5) @signature `Lcom/google/crypto/tink/proto/KeysetInfo;.getPrimaryKeyId:()I` @kind virtual;
  #L437e88.  v1:= temp;
  #L437e8a.  call temp:= `g`(v4, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.g:(I)J` @kind direct;
  #L437e90.  v1:= temp @kind wide;
  #L437e92.  v3:= "primaryKeyId" @kind object;
  #L437e96.  call temp:= `put`(v0, v3, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;J)Lorg/json/JSONObject;` @kind virtual;
  #L437e9c.  v1:= new `org.json.JSONArray`;
  #L437ea0.  call `<init>`(v1) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L437ea6.  call temp:= `getKeyInfoList`(v5) @signature `Lcom/google/crypto/tink/proto/KeysetInfo;.getKeyInfoList:()Ljava/util/List;` @kind virtual;
  #L437eac.  v5:= temp @kind object;
  #L437eae.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L437eb4.  v5:= temp @kind object;
  #L437eb6.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L437ebc.  v2:= temp;
  #L437ebe.  if v2 == 0 then goto L437ede;
  #L437ec2.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L437ec8.  v2:= temp @kind object;
  #L437eca.  v2:= (`com.google.crypto.tink.proto.KeysetInfo$KeyInfo`) v2 @kind object;
  #L437ece.  call temp:= `e`(v4, v2) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.e:(Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;)Lorg/json/JSONObject;` @kind direct;
  #L437ed4.  v2:= temp @kind object;
  #L437ed6.  call temp:= `put`(v1, v2) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L437edc.  goto L437eb6;
  #L437ede.  v5:= "keyInfo" @kind object;
  #L437ee2.  call temp:= `put`(v0, v5, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L437ee8.  return v0 @kind object;
}
procedure `long` `g`(`com.google.crypto.tink.JsonKeysetWriter` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.g:(I)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L437c00.  v0:= (`long`) v5 @kind i2l;
  #L437c02.  v2:= 4294967295L;
  #L437c0c.  v0:= v0 ^& v2 @kind long;
  #L437c0e.  return v0 @kind wide;
}
procedure `com.google.crypto.tink.KeysetWriter` `withFile`(`java.io.File` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/KeysetWriter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L437b74.  v0:= new `com.google.crypto.tink.JsonKeysetWriter`;
  #L437b78.  v1:= new `java.io.FileOutputStream`;
  #L437b7c.  call `<init>`(v1, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L437b82.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L437b88.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetWriter` `withOutputStream`(`java.io.OutputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withOutputStream:(Ljava/io/OutputStream;)Lcom/google/crypto/tink/KeysetWriter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L437b9c.  v0:= new `com.google.crypto.tink.JsonKeysetWriter`;
  #L437ba0.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L437ba6.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetWriter` `withPath`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withPath:(Ljava/lang/String;)Lcom/google/crypto/tink/KeysetWriter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L437bb8.  v0:= new `java.io.File`;
  #L437bbc.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L437bc2.  call temp:= `withFile`(v0) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/KeysetWriter;` @kind static;
  #L437bc8.  v1:= temp @kind object;
  #L437bca.  return v1 @kind object;
}
procedure `com.google.crypto.tink.KeysetWriter` `withPath`(`java.nio.file.Path` v0 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withPath:(Ljava/nio/file/Path;)Lcom/google/crypto/tink/KeysetWriter;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L437bdc.  call temp:= `toFile`(v0) @signature `Ljava/nio/file/Path;.toFile:()Ljava/io/File;` @kind interface;
  #L437be2.  v0:= temp @kind object;
  #L437be4.  call temp:= `withFile`(v0) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/KeysetWriter;` @kind static;
  #L437bea.  v0:= temp @kind object;
  #L437bec.  return v0 @kind object;
}
procedure `void` `write`(`com.google.crypto.tink.JsonKeysetWriter` v2 @kind this, `com.google.crypto.tink.proto.EncryptedKeyset` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.write:(Lcom/google/crypto/tink/proto/EncryptedKeyset;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L437f3c.  v0:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L437f40.  call temp:= `a`(v2, v3) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.a:(Lcom/google/crypto/tink/proto/EncryptedKeyset;)Lorg/json/JSONObject;` @kind direct;
  #L437f46.  v3:= temp @kind object;
  #L437f48.  v1:= 4I;
  #L437f4a.  call temp:= `toString`(v3, v1) @signature `Lorg/json/JSONObject;.toString:(I)Ljava/lang/String;` @kind virtual;
  #L437f50.  v3:= temp @kind object;
  #L437f52.  v1:= `@@com.google.crypto.tink.JsonKeysetWriter.b` @type ^`java.nio.charset.Charset` @kind object;
  #L437f56.  call temp:= `getBytes`(v3, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L437f5c.  v3:= temp @kind object;
  #L437f5e.  call `write`(v0, v3) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L437f64.  v3:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L437f68.  call temp:= `lineSeparator`() @signature `Ljava/lang/System;.lineSeparator:()Ljava/lang/String;` @kind static;
  #L437f6e.  v0:= temp @kind object;
  #L437f70.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L437f76.  v0:= temp @kind object;
  #L437f78.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L437f7e.  v3:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L437f82.  call `close`(v3) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L437f88.  return @kind void;
  #L437f8a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L437f8c.  goto L437f9c;
  #L437f8e.  v3:= Exception @type ^`org.json.JSONException` @kind object;
  #L437f90.  v0:= new `java.io.IOException`;
  #L437f94.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L437f9a.  throw v0;
  #L437f9c.  v0:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L437fa0.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L437fa6.  throw v3;
  catch `org.json.JSONException` @[L437f3c..L437f7e] goto L437f8e;
  catch `java.lang.Throwable` @[L437f3c..L437f7e] goto L437f8a;
  catch `java.lang.Throwable` @[L437f90..L437f9c] goto L437f8a;
}
procedure `void` `write`(`com.google.crypto.tink.JsonKeysetWriter` v2 @kind this, `com.google.crypto.tink.proto.Keyset` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.write:(Lcom/google/crypto/tink/proto/Keyset;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L437fd0.  v0:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L437fd4.  call temp:= `d`(v2, v3) @signature `Lcom/google/crypto/tink/JsonKeysetWriter;.d:(Lcom/google/crypto/tink/proto/Keyset;)Lorg/json/JSONObject;` @kind direct;
  #L437fda.  v3:= temp @kind object;
  #L437fdc.  v1:= 4I;
  #L437fde.  call temp:= `toString`(v3, v1) @signature `Lorg/json/JSONObject;.toString:(I)Ljava/lang/String;` @kind virtual;
  #L437fe4.  v3:= temp @kind object;
  #L437fe6.  v1:= `@@com.google.crypto.tink.JsonKeysetWriter.b` @type ^`java.nio.charset.Charset` @kind object;
  #L437fea.  call temp:= `getBytes`(v3, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L437ff0.  v3:= temp @kind object;
  #L437ff2.  call `write`(v0, v3) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L437ff8.  v3:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L437ffc.  call temp:= `lineSeparator`() @signature `Ljava/lang/System;.lineSeparator:()Ljava/lang/String;` @kind static;
  #L438002.  v0:= temp @kind object;
  #L438004.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L43800a.  v0:= temp @kind object;
  #L43800c.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L438012.  v3:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L438016.  call `close`(v3) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L43801c.  return @kind void;
  #L43801e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L438020.  goto L438030;
  #L438022.  v3:= Exception @type ^`org.json.JSONException` @kind object;
  #L438024.  v0:= new `java.io.IOException`;
  #L438028.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L43802e.  throw v0;
  #L438030.  v0:= v2.`com.google.crypto.tink.JsonKeysetWriter.a` @type ^`java.io.OutputStream` @kind object;
  #L438034.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L43803a.  throw v3;
  catch `org.json.JSONException` @[L437fd0..L438012] goto L438022;
  catch `java.lang.Throwable` @[L437fd0..L438012] goto L43801e;
  catch `java.lang.Throwable` @[L438024..L438030] goto L43801e;
}
