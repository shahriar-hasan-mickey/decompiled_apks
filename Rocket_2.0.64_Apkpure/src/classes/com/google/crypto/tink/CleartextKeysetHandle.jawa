record `com.google.crypto.tink.CleartextKeysetHandle` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.crypto.tink.CleartextKeysetHandle` v0 @kind this) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L436df4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L436dfa.  return @kind void;
}
procedure `com.google.crypto.tink.KeysetHandle` `fromKeyset`(`com.google.crypto.tink.proto.Keyset` v0 @kind object) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.fromKeyset:(Lcom/google/crypto/tink/proto/Keyset;)Lcom/google/crypto/tink/KeysetHandle;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L436d4c.  call temp:= `e`(v0) @signature `Lcom/google/crypto/tink/KeysetHandle;.e:(Lcom/google/crypto/tink/proto/Keyset;)Lcom/google/crypto/tink/KeysetHandle;` @kind static;
  #L436d52.  v0:= temp @kind object;
  #L436d54.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.Keyset` `getKeyset`(`com.google.crypto.tink.KeysetHandle` v0 @kind object) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.getKeyset:(Lcom/google/crypto/tink/KeysetHandle;)Lcom/google/crypto/tink/proto/Keyset;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L436dd8.  call temp:= `f`(v0) @signature `Lcom/google/crypto/tink/KeysetHandle;.f:()Lcom/google/crypto/tink/proto/Keyset;` @kind virtual;
  #L436dde.  v0:= temp @kind object;
  #L436de0.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetHandle` `parseFrom`(`byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.parseFrom:([B)Lcom/google/crypto/tink/KeysetHandle;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L436d68.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L436d6e.  v0:= temp @kind object;
  #L436d70.  call temp:= `parseFrom`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset;.parseFrom:([BLcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/Keyset;` @kind static;
  #L436d76.  v1:= temp @kind object;
  #L436d78.  call temp:= `e`(v1) @signature `Lcom/google/crypto/tink/KeysetHandle;.e:(Lcom/google/crypto/tink/proto/Keyset;)Lcom/google/crypto/tink/KeysetHandle;` @kind static;
  #L436d7e.  v1:= temp @kind object;
  #L436d80.  return v1 @kind object;
  #L436d82.  v1:= new `java.security.GeneralSecurityException`;
  #L436d86.  v0:= "invalid keyset" @kind object;
  #L436d8a.  call `<init>`(v1, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L436d90.  throw v1;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L436d68..L436d80] goto L436d82;
}
procedure `com.google.crypto.tink.KeysetHandle` `read`(`com.google.crypto.tink.KeysetReader` v0 @kind object) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.read:(Lcom/google/crypto/tink/KeysetReader;)Lcom/google/crypto/tink/KeysetHandle;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L436db4.  call temp:= `read`(v0) @signature `Lcom/google/crypto/tink/KeysetReader;.read:()Lcom/google/crypto/tink/proto/Keyset;` @kind interface;
  #L436dba.  v0:= temp @kind object;
  #L436dbc.  call temp:= `e`(v0) @signature `Lcom/google/crypto/tink/KeysetHandle;.e:(Lcom/google/crypto/tink/proto/Keyset;)Lcom/google/crypto/tink/KeysetHandle;` @kind static;
  #L436dc2.  v0:= temp @kind object;
  #L436dc4.  return v0 @kind object;
}
procedure `void` `write`(`com.google.crypto.tink.KeysetHandle` v0 @kind object, `com.google.crypto.tink.KeysetWriter` v1 @kind object) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.write:(Lcom/google/crypto/tink/KeysetHandle;Lcom/google/crypto/tink/KeysetWriter;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L436e0c.  call temp:= `f`(v0) @signature `Lcom/google/crypto/tink/KeysetHandle;.f:()Lcom/google/crypto/tink/proto/Keyset;` @kind virtual;
  #L436e12.  v0:= temp @kind object;
  #L436e14.  call `write`(v1, v0) @signature `Lcom/google/crypto/tink/KeysetWriter;.write:(Lcom/google/crypto/tink/proto/Keyset;)V` @kind interface;
  #L436e1a.  return @kind void;
}
