record `com.google.crypto.tink.daead.AesSivKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.daead.AesSivKeyManager` `com.google.crypto.tink.daead.AesSivKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.daead.AesSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.daead.AesSivKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager$b;.<init>:(Lcom/google/crypto/tink/daead/AesSivKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43ee1c.  v0.`com.google.crypto.tink.daead.AesSivKeyManager$b.b` @type ^`com.google.crypto.tink.daead.AesSivKeyManager` := v1 @kind object;
  #L43ee20.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L43ee26.  return @kind void;
}
procedure `com.google.crypto.tink.proto.AesSivKey` `a`(`com.google.crypto.tink.daead.AesSivKeyManager$b` v1 @kind this, `com.google.crypto.tink.proto.AesSivKeyFormat` v2 @kind object) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesSivKeyFormat;)Lcom/google/crypto/tink/proto/AesSivKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43ed60.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesSivKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesSivKey$Builder;` @kind static;
  #L43ed66.  v0:= temp @kind object;
  #L43ed68.  call temp:= `getKeySize`(v2) @signature `Lcom/google/crypto/tink/proto/AesSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L43ed6e.  v2:= temp;
  #L43ed70.  call temp:= `randBytes`(v2) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L43ed76.  v2:= temp @kind object;
  #L43ed78.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L43ed7e.  v2:= temp @kind object;
  #L43ed80.  call temp:= `setKeyValue`(v0, v2) @signature `Lcom/google/crypto/tink/proto/AesSivKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesSivKey$Builder;` @kind virtual;
  #L43ed86.  v2:= temp @kind object;
  #L43ed88.  v0:= v1.`com.google.crypto.tink.daead.AesSivKeyManager$b.b` @type ^`com.google.crypto.tink.daead.AesSivKeyManager` @kind object;
  #L43ed8c.  call temp:= `getVersion`(v0) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager;.getVersion:()I` @kind virtual;
  #L43ed92.  v0:= temp;
  #L43ed94.  call temp:= `setVersion`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesSivKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/AesSivKey$Builder;` @kind virtual;
  #L43ed9a.  v2:= temp @kind object;
  #L43ed9c.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43eda2.  v2:= temp @kind object;
  #L43eda4.  v2:= (`com.google.crypto.tink.proto.AesSivKey`) v2 @kind object;
  #L43eda8.  return v2 @kind object;
}
procedure `com.google.crypto.tink.proto.AesSivKeyFormat` `b`(`com.google.crypto.tink.daead.AesSivKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesSivKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43edbc.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L43edc2.  v0:= temp @kind object;
  #L43edc4.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesSivKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesSivKeyFormat;` @kind static;
  #L43edca.  v2:= temp @kind object;
  #L43edcc.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.daead.AesSivKeyManager$b` v3 @kind this, `com.google.crypto.tink.proto.AesSivKeyFormat` v4 @kind object) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager$b;.c:(Lcom/google/crypto/tink/proto/AesSivKeyFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43ee38.  call temp:= `getKeySize`(v4) @signature `Lcom/google/crypto/tink/proto/AesSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L43ee3e.  v0:= temp;
  #L43ee40.  v1:= 64I;
  #L43ee44.  if v0 != v1 then goto L43ee4a;
  #L43ee48.  return @kind void;
  #L43ee4a.  v0:= new `java.security.InvalidAlgorithmParameterException`;
  #L43ee4e.  v1:= new `java.lang.StringBuilder`;
  #L43ee52.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L43ee58.  v2:= "invalid key size: " @kind object;
  #L43ee5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43ee62.  call temp:= `getKeySize`(v4) @signature `Lcom/google/crypto/tink/proto/AesSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L43ee68.  v4:= temp;
  #L43ee6a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L43ee70.  v4:= ". Valid keys must have 64 bytes." @kind object;
  #L43ee74.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43ee7a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43ee80.  v4:= temp @kind object;
  #L43ee82.  call `<init>`(v0, v4) @signature `Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43ee88.  throw v0;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.daead.AesSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43edfc.  v1:= (`com.google.crypto.tink.proto.AesSivKeyFormat`) v1 @kind object;
  #L43ee00.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesSivKeyFormat;)Lcom/google/crypto/tink/proto/AesSivKey;` @kind virtual;
  #L43ee06.  v1:= temp @kind object;
  #L43ee08.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.daead.AesSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43ede0.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesSivKeyFormat;` @kind virtual;
  #L43ede6.  v1:= temp @kind object;
  #L43ede8.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.daead.AesSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43ee9c.  v1:= (`com.google.crypto.tink.proto.AesSivKeyFormat`) v1 @kind object;
  #L43eea0.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/daead/AesSivKeyManager$b;.c:(Lcom/google/crypto/tink/proto/AesSivKeyFormat;)V` @kind virtual;
  #L43eea6.  return @kind void;
}
