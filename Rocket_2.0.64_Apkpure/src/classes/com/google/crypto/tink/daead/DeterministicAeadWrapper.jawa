record `com.google.crypto.tink.daead.DeterministicAeadWrapper` @kind class @AccessFlag PUBLIC extends `com.google.crypto.tink.PrimitiveWrapper` @kind interface {
}
global `java.util.logging.Logger` `@@com.google.crypto.tink.daead.DeterministicAeadWrapper.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L43f4e4.  v0:= constclass @type ^`com.google.crypto.tink.daead.DeterministicAeadWrapper` @kind object;
  #L43f4e8.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L43f4ee.  v0:= temp @kind object;
  #L43f4f0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L43f4f6.  v0:= temp @kind object;
  #L43f4f8.  `@@com.google.crypto.tink.daead.DeterministicAeadWrapper.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L43f4fc.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.daead.DeterministicAeadWrapper` v0 @kind this) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43f510.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43f516.  return @kind void;
}
procedure `java.util.logging.Logger` `a`() @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.a:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L43f4cc.  v0:= `@@com.google.crypto.tink.daead.DeterministicAeadWrapper.a` @type ^`java.util.logging.Logger` @kind object;
  #L43f4d0.  return v0 @kind object;
}
procedure `void` `register`() @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.register:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f528.  v0:= new `com.google.crypto.tink.daead.DeterministicAeadWrapper`;
  #L43f52c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.<init>:()V` @kind direct;
  #L43f532.  call `registerPrimitiveWrapper`(v0) @signature `Lcom/google/crypto/tink/Registry;.registerPrimitiveWrapper:(Lcom/google/crypto/tink/PrimitiveWrapper;)V` @kind static;
  #L43f538.  return @kind void;
}
procedure `java.lang.Class` `getInputPrimitiveClass`(`com.google.crypto.tink.daead.DeterministicAeadWrapper` v1 @kind this) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.getInputPrimitiveClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43f480.  v0:= constclass @type ^`com.google.crypto.tink.DeterministicAead` @kind object;
  #L43f484.  return v0 @kind object;
}
procedure `java.lang.Class` `getPrimitiveClass`(`com.google.crypto.tink.daead.DeterministicAeadWrapper` v1 @kind this) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.getPrimitiveClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43f498.  v0:= constclass @type ^`com.google.crypto.tink.DeterministicAead` @kind object;
  #L43f49c.  return v0 @kind object;
}
procedure `com.google.crypto.tink.DeterministicAead` `wrap`(`com.google.crypto.tink.daead.DeterministicAeadWrapper` v1 @kind this, `com.google.crypto.tink.PrimitiveSet` v2 @kind object) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.wrap:(Lcom/google/crypto/tink/PrimitiveSet;)Lcom/google/crypto/tink/DeterministicAead;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43f464.  v0:= new `com.google.crypto.tink.daead.DeterministicAeadWrapper$a`;
  #L43f468.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper$a;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @kind direct;
  #L43f46e.  return v0 @kind object;
}
procedure `java.lang.Object` `wrap`(`com.google.crypto.tink.daead.DeterministicAeadWrapper` v0 @kind this, `com.google.crypto.tink.PrimitiveSet` v1 @kind object) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.wrap:(Lcom/google/crypto/tink/PrimitiveSet;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43f4b0.  call temp:= `wrap`(v0, v1) @signature `Lcom/google/crypto/tink/daead/DeterministicAeadWrapper;.wrap:(Lcom/google/crypto/tink/PrimitiveSet;)Lcom/google/crypto/tink/DeterministicAead;` @kind virtual;
  #L43f4b6.  v1:= temp @kind object;
  #L43f4b8.  return v1 @kind object;
}
