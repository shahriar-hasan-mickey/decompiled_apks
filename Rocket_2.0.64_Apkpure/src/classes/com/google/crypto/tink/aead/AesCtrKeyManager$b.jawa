record `com.google.crypto.tink.aead.AesCtrKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.aead.AesCtrKeyManager` `com.google.crypto.tink.aead.AesCtrKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AesCtrKeyManager$b` v0 @kind this, `com.google.crypto.tink.aead.AesCtrKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.<init>:(Lcom/google/crypto/tink/aead/AesCtrKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43c9f8.  v0.`com.google.crypto.tink.aead.AesCtrKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesCtrKeyManager` := v1 @kind object;
  #L43c9fc.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L43ca02.  return @kind void;
}
procedure `com.google.crypto.tink.proto.AesCtrKey` `a`(`com.google.crypto.tink.aead.AesCtrKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.AesCtrKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesCtrKeyFormat;)Lcom/google/crypto/tink/proto/AesCtrKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43c92c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrKey$Builder;` @kind static;
  #L43c932.  v0:= temp @kind object;
  #L43c934.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/AesCtrParams;` @kind virtual;
  #L43c93a.  v1:= temp @kind object;
  #L43c93c.  call temp:= `setParams`(v0, v1) @signature `Lcom/google/crypto/tink/proto/AesCtrKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/AesCtrParams;)Lcom/google/crypto/tink/proto/AesCtrKey$Builder;` @kind virtual;
  #L43c942.  v0:= temp @kind object;
  #L43c944.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat;.getKeySize:()I` @kind virtual;
  #L43c94a.  v3:= temp;
  #L43c94c.  call temp:= `randBytes`(v3) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L43c952.  v3:= temp @kind object;
  #L43c954.  call temp:= `copyFrom`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L43c95a.  v3:= temp @kind object;
  #L43c95c.  call temp:= `setKeyValue`(v0, v3) @signature `Lcom/google/crypto/tink/proto/AesCtrKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrKey$Builder;` @kind virtual;
  #L43c962.  v3:= temp @kind object;
  #L43c964.  v0:= v2.`com.google.crypto.tink.aead.AesCtrKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesCtrKeyManager` @kind object;
  #L43c968.  call temp:= `getVersion`(v0) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.getVersion:()I` @kind virtual;
  #L43c96e.  v0:= temp;
  #L43c970.  call temp:= `setVersion`(v3, v0) @signature `Lcom/google/crypto/tink/proto/AesCtrKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/AesCtrKey$Builder;` @kind virtual;
  #L43c976.  v3:= temp @kind object;
  #L43c978.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43c97e.  v3:= temp @kind object;
  #L43c980.  v3:= (`com.google.crypto.tink.proto.AesCtrKey`) v3 @kind object;
  #L43c984.  return v3 @kind object;
}
procedure `com.google.crypto.tink.proto.AesCtrKeyFormat` `b`(`com.google.crypto.tink.aead.AesCtrKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43c998.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L43c99e.  v0:= temp @kind object;
  #L43c9a0.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesCtrKeyFormat;` @kind static;
  #L43c9a6.  v2:= temp @kind object;
  #L43c9a8.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.aead.AesCtrKeyManager$b` v1 @kind this, `com.google.crypto.tink.proto.AesCtrKeyFormat` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.c:(Lcom/google/crypto/tink/proto/AesCtrKeyFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43ca14.  call temp:= `getKeySize`(v2) @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat;.getKeySize:()I` @kind virtual;
  #L43ca1a.  v0:= temp;
  #L43ca1c.  call `validateAesKeySize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateAesKeySize:(I)V` @kind static;
  #L43ca22.  v0:= v1.`com.google.crypto.tink.aead.AesCtrKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesCtrKeyManager` @kind object;
  #L43ca26.  call temp:= `getParams`(v2) @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/AesCtrParams;` @kind virtual;
  #L43ca2c.  v2:= temp @kind object;
  #L43ca2e.  call `b`(v0, v2) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.b:(Lcom/google/crypto/tink/aead/AesCtrKeyManager;Lcom/google/crypto/tink/proto/AesCtrParams;)V` @kind static;
  #L43ca34.  return @kind void;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.aead.AesCtrKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43c9d8.  v1:= (`com.google.crypto.tink.proto.AesCtrKeyFormat`) v1 @kind object;
  #L43c9dc.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesCtrKeyFormat;)Lcom/google/crypto/tink/proto/AesCtrKey;` @kind virtual;
  #L43c9e2.  v1:= temp @kind object;
  #L43c9e4.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.aead.AesCtrKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43c9bc.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrKeyFormat;` @kind virtual;
  #L43c9c2.  v1:= temp @kind object;
  #L43c9c4.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.aead.AesCtrKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43ca48.  v1:= (`com.google.crypto.tink.proto.AesCtrKeyFormat`) v1 @kind object;
  #L43ca4c.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.c:(Lcom/google/crypto/tink/proto/AesCtrKeyFormat;)V` @kind virtual;
  #L43ca52.  return @kind void;
}
