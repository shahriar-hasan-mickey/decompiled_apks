record `com.google.crypto.tink.aead.subtle.AesGcmSiv` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.Aead` @kind interface {
  `javax.crypto.SecretKey` `com.google.crypto.tink.aead.subtle.AesGcmSiv.a` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ThreadLocal` `@@com.google.crypto.tink.aead.subtle.AesGcmSiv.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmSiv;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L43eb28.  v0:= new `com.google.crypto.tink.aead.subtle.AesGcmSiv$a`;
  #L43eb2c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmSiv$a;.<init>:()V` @kind direct;
  #L43eb32.  `@@com.google.crypto.tink.aead.subtle.AesGcmSiv.b` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L43eb36.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.subtle.AesGcmSiv` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmSiv;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L43eb48.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43eb4e.  v0:= length @variable v3;
  #L43eb50.  call `validateAesKeySize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateAesKeySize:(I)V` @kind static;
  #L43eb56.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L43eb5a.  v1:= "AES" @kind object;
  #L43eb5e.  call `<init>`(v0, v3, v1) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L43eb64.  v2.`com.google.crypto.tink.aead.subtle.AesGcmSiv.a` @type ^`javax.crypto.SecretKey` := v0 @kind object;
  #L43eb68.  return @kind void;
}
procedure `java.security.spec.AlgorithmParameterSpec` `a`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmSiv;.a:([B)Ljava/security/spec/AlgorithmParameterSpec;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L43eaa4.  v0:= length @variable v2;
  #L43eaa6.  v1:= 0I;
  #L43eaa8.  call temp:= `b`(v2, v1, v0) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmSiv;.b:([BII)Ljava/security/spec/AlgorithmParameterSpec;` @kind static;
  #L43eaae.  v2:= temp @kind object;
  #L43eab0.  return v2 @kind object;
}
procedure `java.security.spec.AlgorithmParameterSpec` `b`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmSiv;.b:([BII)Ljava/security/spec/AlgorithmParameterSpec;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L43eac4.  v0:= "javax.crypto.spec.GCMParameterSpec" @kind object;
  #L43eac8.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L43eace.  v0:= new `javax.crypto.spec.GCMParameterSpec`;
  #L43ead2.  v1:= 128I;
  #L43ead6.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ljavax/crypto/spec/GCMParameterSpec;.<init>:(I[BII)V` @kind direct;
  #L43eadc.  return v0 @kind object;
  #L43eade.  
  #L43eae0.  call temp:= `isAndroid`() @signature `Lcom/google/crypto/tink/subtle/SubtleUtil;.isAndroid:()Z` @kind static;
  #L43eae6.  v0:= temp;
  #L43eae8.  if v0 == 0 then goto L43eaf8;
  #L43eaec.  v0:= new `javax.crypto.spec.IvParameterSpec`;
  #L43eaf0.  call `<init>`(v0, v2, v3, v4) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([BII)V` @kind direct;
  #L43eaf6.  return v0 @kind object;
  #L43eaf8.  v2:= new `java.security.GeneralSecurityException`;
  #L43eafc.  v3:= "cannot use AES-GCM: javax.crypto.spec.GCMParameterSpec not found" @kind object;
  #L43eb00.  call `<init>`(v2, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43eb06.  throw v2;
  catch `java.lang.ClassNotFoundException` @[L43eac4..L43eadc] goto L43eade;
}
procedure `byte`[] `decrypt`(`com.google.crypto.tink.aead.subtle.AesGcmSiv` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmSiv;.decrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L43e924.  v0:= length @variable v7;
  #L43e926.  v1:= 28I;
  #L43e92a.  if v0 < v1 then goto L43e98e;
  #L43e92e.  v0:= 0I;
  #L43e930.  v1:= 12I;
  #L43e934.  call temp:= `b`(v7, v0, v1) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmSiv;.b:([BII)Ljava/security/spec/AlgorithmParameterSpec;` @kind static;
  #L43e93a.  v0:= temp @kind object;
  #L43e93c.  v2:= `@@com.google.crypto.tink.aead.subtle.AesGcmSiv.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L43e940.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L43e946.  v3:= temp @kind object;
  #L43e948.  v3:= (`javax.crypto.Cipher`) v3 @kind object;
  #L43e94c.  v4:= 2I;
  #L43e94e.  v5:= v6.`com.google.crypto.tink.aead.subtle.AesGcmSiv.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L43e952.  call `init`(v3, v4, v5, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L43e958.  if v8 == 0 then goto L43e974;
  #L43e95c.  v0:= length @variable v8;
  #L43e95e.  if v0 == 0 then goto L43e974;
  #L43e962.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L43e968.  v0:= temp @kind object;
  #L43e96a.  v0:= (`javax.crypto.Cipher`) v0 @kind object;
  #L43e96e.  call `updateAAD`(v0, v8) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L43e974.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L43e97a.  v8:= temp @kind object;
  #L43e97c.  v8:= (`javax.crypto.Cipher`) v8 @kind object;
  #L43e980.  v0:= length @variable v7;
  #L43e982.  v0:= v0 - v1 @kind int;
  #L43e984.  call temp:= `doFinal`(v8, v7, v1, v0) @signature `Ljavax/crypto/Cipher;.doFinal:([BII)[B` @kind virtual;
  #L43e98a.  v7:= temp @kind object;
  #L43e98c.  return v7 @kind object;
  #L43e98e.  v7:= new `java.security.GeneralSecurityException`;
  #L43e992.  v8:= "ciphertext too short" @kind object;
  #L43e996.  call `<init>`(v7, v8) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43e99c.  throw v7;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.aead.subtle.AesGcmSiv` v11 @kind this, `byte`[] v12 @kind object, `byte`[] v13 @kind object) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmSiv;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L43e9b0.  v0:= length @variable v12;
  #L43e9b2.  v1:= 2147483619I;
  #L43e9b8.  if v0 > v1 then goto L43ea84;
  #L43e9bc.  v0:= length @variable v12;
  #L43e9be.  v1:= 12I;
  #L43e9c2.  v0:= v0 + v1 @kind int;
  #L43e9c4.  v2:= 16I;
  #L43e9c8.  v0:= v0 + v2 @kind int;
  #L43e9ca.  v0:= new `byte`[v0];
  #L43e9ce.  call temp:= `randBytes`(v1) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L43e9d4.  v3:= temp @kind object;
  #L43e9d6.  v9:= 0I;
  #L43e9d8.  call `arraycopy`(v3, v9, v0, v9, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L43e9de.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmSiv;.a:([B)Ljava/security/spec/AlgorithmParameterSpec;` @kind static;
  #L43e9e4.  v1:= temp @kind object;
  #L43e9e6.  v3:= `@@com.google.crypto.tink.aead.subtle.AesGcmSiv.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L43e9ea.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L43e9f0.  v4:= temp @kind object;
  #L43e9f2.  v4:= (`javax.crypto.Cipher`) v4 @kind object;
  #L43e9f6.  v5:= v11.`com.google.crypto.tink.aead.subtle.AesGcmSiv.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L43e9fa.  v10:= 1I;
  #L43e9fc.  call `init`(v4, v10, v5, v1) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L43ea02.  if v13 == 0 then goto L43ea1e;
  #L43ea06.  v1:= length @variable v13;
  #L43ea08.  if v1 == 0 then goto L43ea1e;
  #L43ea0c.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L43ea12.  v1:= temp @kind object;
  #L43ea14.  v1:= (`javax.crypto.Cipher`) v1 @kind object;
  #L43ea18.  call `updateAAD`(v1, v13) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L43ea1e.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L43ea24.  v13:= temp @kind object;
  #L43ea26.  v3:= v13 @kind object;
  #L43ea28.  v3:= (`javax.crypto.Cipher`) v3 @kind object;
  #L43ea2c.  v5:= 0I;
  #L43ea2e.  v6:= length @variable v12;
  #L43ea30.  v8:= 12I;
  #L43ea34.  v4:= v12 @kind object;
  #L43ea36.  v7:= v0 @kind object;
  #L43ea38.  call temp:= `doFinal`(v3, v4, v5, v6, v7, v8) @signature `Ljavax/crypto/Cipher;.doFinal:([BII[BI)I` @kind virtual;
  #L43ea3e.  v13:= temp;
  #L43ea40.  v1:= length @variable v12;
  #L43ea42.  v1:= v1 + v2 @kind int;
  #L43ea44.  if v13 != v1 then goto L43ea4a;
  #L43ea48.  return v0 @kind object;
  #L43ea4a.  v12:= length @variable v12;
  #L43ea4c.  v13:= v13 - v12 @kind int;
  #L43ea4e.  v12:= new `java.security.GeneralSecurityException`;
  #L43ea52.  v0:= 2I;
  #L43ea54.  v0:= new `java.lang.Object`[v0];
  #L43ea58.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L43ea5e.  v1:= temp @kind object;
  #L43ea60.  v0[v9]:= v1 @kind object;
  #L43ea64.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L43ea6a.  v13:= temp @kind object;
  #L43ea6c.  v0[v10]:= v13 @kind object;
  #L43ea70.  v13:= "encryption failed; GCM tag must be %s bytes, but got only %s bytes" @kind object;
  #L43ea74.  call temp:= `format`(v13, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L43ea7a.  v13:= temp @kind object;
  #L43ea7c.  call `<init>`(v12, v13) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43ea82.  throw v12;
  #L43ea84.  v12:= new `java.security.GeneralSecurityException`;
  #L43ea88.  v13:= "plaintext too long" @kind object;
  #L43ea8c.  call `<init>`(v12, v13) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43ea92.  throw v12;
}
