record `com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager` @kind class @AccessFlag PUBLIC extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager` v4 @kind this) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43dc90.  v0:= constclass @type ^`com.google.crypto.tink.proto.ChaCha20Poly1305Key` @kind object;
  #L43dc94.  v1:= 1I;
  #L43dc96.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L43dc9a.  v2:= new `com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager$a`;
  #L43dc9e.  v3:= constclass @type ^`com.google.crypto.tink.Aead` @kind object;
  #L43dca2.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L43dca8.  v3:= 0I;
  #L43dcaa.  v1[v3]:= v2 @kind object;
  #L43dcae.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L43dcb4.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `chaCha20Poly1305Template`() @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.chaCha20Poly1305Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L43db6c.  v0:= new `com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager`;
  #L43db70.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.<init>:()V` @kind direct;
  #L43db76.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L43db7c.  v0:= temp @kind object;
  #L43db7e.  call temp:= `getDefaultInstance`() @signature `Lcom/google/crypto/tink/proto/ChaCha20Poly1305KeyFormat;.getDefaultInstance:()Lcom/google/crypto/tink/proto/ChaCha20Poly1305KeyFormat;` @kind static;
  #L43db84.  v1:= temp @kind object;
  #L43db86.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteArray:()[B` @kind virtual;
  #L43db8c.  v1:= temp @kind object;
  #L43db8e.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.TINK` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L43db92.  call temp:= `create`(v0, v1, v2) @signature `Lcom/google/crypto/tink/KeyTemplate;.create:(Ljava/lang/String;[BLcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L43db98.  v0:= temp @kind object;
  #L43db9a.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `rawChaCha20Poly1305Template`() @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.rawChaCha20Poly1305Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L43dbac.  v0:= new `com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager`;
  #L43dbb0.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.<init>:()V` @kind direct;
  #L43dbb6.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L43dbbc.  v0:= temp @kind object;
  #L43dbbe.  call temp:= `getDefaultInstance`() @signature `Lcom/google/crypto/tink/proto/ChaCha20Poly1305KeyFormat;.getDefaultInstance:()Lcom/google/crypto/tink/proto/ChaCha20Poly1305KeyFormat;` @kind static;
  #L43dbc4.  v1:= temp @kind object;
  #L43dbc6.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteArray:()[B` @kind virtual;
  #L43dbcc.  v1:= temp @kind object;
  #L43dbce.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L43dbd2.  call temp:= `create`(v0, v1, v2) @signature `Lcom/google/crypto/tink/KeyTemplate;.create:(Ljava/lang/String;[BLcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L43dbd8.  v0:= temp @kind object;
  #L43dbda.  return v0 @kind object;
}
procedure `void` `register`(`boolean` v1 ) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.register:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43dcc8.  v0:= new `com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager`;
  #L43dccc.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.<init>:()V` @kind direct;
  #L43dcd2.  call `registerKeyManager`(v0, v1) @signature `Lcom/google/crypto/tink/Registry;.registerKeyManager:(Lcom/google/crypto/tink/KeyTypeManager;Z)V` @kind static;
  #L43dcd8.  return @kind void;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43dc78.  v0:= "type.googleapis.com/google.crypto.tink.ChaCha20Poly1305Key" @kind object;
  #L43dc7c.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43dc64.  v0:= 0I;
  #L43dc66.  return v0;
}
procedure `com.google.crypto.tink.KeyTypeManager$KeyFactory` `keyFactory`(`com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager` v2 @kind this) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43dbec.  v0:= new `com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager$b`;
  #L43dbf0.  v1:= constclass @type ^`com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat` @kind object;
  #L43dbf4.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager$b;.<init>:(Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;Ljava/lang/Class;)V` @kind direct;
  #L43dbfa.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43dc30.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.SYMMETRIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L43dc34.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.ChaCha20Poly1305Key` `parseKey`(`com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/ChaCha20Poly1305Key;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43dc0c.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L43dc12.  v0:= temp @kind object;
  #L43dc14.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/ChaCha20Poly1305Key;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/ChaCha20Poly1305Key;` @kind static;
  #L43dc1a.  v2:= temp @kind object;
  #L43dc1c.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43dc48.  call temp:= `parseKey`(v0, v1) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/ChaCha20Poly1305Key;` @kind virtual;
  #L43dc4e.  v1:= temp @kind object;
  #L43dc50.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager` v2 @kind this, `com.google.crypto.tink.proto.ChaCha20Poly1305Key` v3 @kind object) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.validateKey:(Lcom/google/crypto/tink/proto/ChaCha20Poly1305Key;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43dcec.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/ChaCha20Poly1305Key;.getVersion:()I` @kind virtual;
  #L43dcf2.  v0:= temp;
  #L43dcf4.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.getVersion:()I` @kind virtual;
  #L43dcfa.  v1:= temp;
  #L43dcfc.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L43dd02.  call temp:= `getKeyValue`(v3) @signature `Lcom/google/crypto/tink/proto/ChaCha20Poly1305Key;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L43dd08.  v3:= temp @kind object;
  #L43dd0a.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L43dd10.  v3:= temp;
  #L43dd12.  v0:= 32I;
  #L43dd16.  if v3 != v0 then goto L43dd1c;
  #L43dd1a.  return @kind void;
  #L43dd1c.  v3:= new `java.security.GeneralSecurityException`;
  #L43dd20.  v0:= "invalid ChaCha20Poly1305Key: incorrect key length" @kind object;
  #L43dd24.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43dd2a.  throw v3;
}
procedure `void` `validateKey`(`com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43dd3c.  v1:= (`com.google.crypto.tink.proto.ChaCha20Poly1305Key`) v1 @kind object;
  #L43dd40.  call `validateKey`(v0, v1) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.validateKey:(Lcom/google/crypto/tink/proto/ChaCha20Poly1305Key;)V` @kind virtual;
  #L43dd46.  return @kind void;
}
