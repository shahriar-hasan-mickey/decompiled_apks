record `com.google.crypto.tink.aead.AeadWrapper$b` @kind class @AccessFlag  extends `com.google.crypto.tink.Aead` @kind interface {
  `com.google.crypto.tink.PrimitiveSet` `com.google.crypto.tink.aead.AeadWrapper$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AeadWrapper$b` v0 @kind this, `com.google.crypto.tink.PrimitiveSet` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadWrapper$b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43c2a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43c2ae.  v0.`com.google.crypto.tink.aead.AeadWrapper$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` := v1 @kind object;
  #L43c2b2.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AeadWrapper$b` v0 @kind this, `com.google.crypto.tink.PrimitiveSet` v1 @kind object, `com.google.crypto.tink.aead.AeadWrapper$a` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadWrapper$b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;Lcom/google/crypto/tink/aead/AeadWrapper$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L43c2c4.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AeadWrapper$b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @kind direct;
  #L43c2ca.  return @kind void;
}
procedure `byte`[] `decrypt`(`com.google.crypto.tink.aead.AeadWrapper$b` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadWrapper$b;.decrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L43c12c.  v0:= length @variable v7;
  #L43c12e.  v1:= 5I;
  #L43c130.  if v0 <= v1 then goto L43c1c6;
  #L43c134.  v0:= 0I;
  #L43c136.  call temp:= `copyOfRange`(v7, v0, v1) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L43c13c.  v0:= temp @kind object;
  #L43c13e.  v2:= length @variable v7;
  #L43c140.  call temp:= `copyOfRange`(v7, v1, v2) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L43c146.  v1:= temp @kind object;
  #L43c148.  v2:= v6.`com.google.crypto.tink.aead.AeadWrapper$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L43c14c.  call temp:= `getPrimitive`(v2, v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimitive:([B)Ljava/util/List;` @kind virtual;
  #L43c152.  v0:= temp @kind object;
  #L43c154.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43c15a.  v0:= temp @kind object;
  #L43c15c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43c162.  v2:= temp;
  #L43c164.  if v2 == 0 then goto L43c1c6;
  #L43c168.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43c16e.  v2:= temp @kind object;
  #L43c170.  v2:= (`com.google.crypto.tink.PrimitiveSet$Entry`) v2 @kind object;
  #L43c174.  call temp:= `getPrimitive`(v2) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L43c17a.  v2:= temp @kind object;
  #L43c17c.  v2:= (`com.google.crypto.tink.Aead`) v2 @kind object;
  #L43c180.  call temp:= `decrypt`(v2, v1, v8) @signature `Lcom/google/crypto/tink/Aead;.decrypt:([B[B)[B` @kind interface;
  #L43c186.  v7:= temp @kind object;
  #L43c188.  return v7 @kind object;
  #L43c18a.  v2:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L43c18c.  call temp:= `a`() @signature `Lcom/google/crypto/tink/aead/AeadWrapper;.a:()Ljava/util/logging/Logger;` @kind static;
  #L43c192.  v3:= temp @kind object;
  #L43c194.  v4:= new `java.lang.StringBuilder`;
  #L43c198.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L43c19e.  v5:= "ciphertext prefix matches a key, but cannot decrypt: " @kind object;
  #L43c1a2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43c1a8.  call temp:= `toString`(v2) @signature `Ljava/security/GeneralSecurityException;.toString:()Ljava/lang/String;` @kind virtual;
  #L43c1ae.  v2:= temp @kind object;
  #L43c1b0.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43c1b6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43c1bc.  v2:= temp @kind object;
  #L43c1be.  call `info`(v3, v2) @signature `Ljava/util/logging/Logger;.info:(Ljava/lang/String;)V` @kind virtual;
  #L43c1c4.  goto L43c15c;
  #L43c1c6.  v0:= v6.`com.google.crypto.tink.aead.AeadWrapper$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L43c1ca.  call temp:= `getRawPrimitives`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getRawPrimitives:()Ljava/util/List;` @kind virtual;
  #L43c1d0.  v0:= temp @kind object;
  #L43c1d2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43c1d8.  v0:= temp @kind object;
  #L43c1da.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43c1e0.  v1:= temp;
  #L43c1e2.  if v1 == 0 then goto L43c20c;
  #L43c1e6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43c1ec.  v1:= temp @kind object;
  #L43c1ee.  v1:= (`com.google.crypto.tink.PrimitiveSet$Entry`) v1 @kind object;
  #L43c1f2.  call temp:= `getPrimitive`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L43c1f8.  v1:= temp @kind object;
  #L43c1fa.  v1:= (`com.google.crypto.tink.Aead`) v1 @kind object;
  #L43c1fe.  call temp:= `decrypt`(v1, v7, v8) @signature `Lcom/google/crypto/tink/Aead;.decrypt:([B[B)[B` @kind interface;
  #L43c204.  v7:= temp @kind object;
  #L43c206.  return v7 @kind object;
  #L43c208.  
  #L43c20a.  goto L43c1da;
  #L43c20c.  v7:= new `java.security.GeneralSecurityException`;
  #L43c210.  v8:= "decryption failed" @kind object;
  #L43c214.  call `<init>`(v7, v8) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43c21a.  throw v7;
  catch `java.security.GeneralSecurityException` @[L43c174..L43c188] goto L43c18a;
  catch `java.security.GeneralSecurityException` @[L43c1f2..L43c206] goto L43c208;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.aead.AeadWrapper$b` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadWrapper$b;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43c248.  v0:= 2I;
  #L43c24a.  v0:= new `byte`[][v0];
  #L43c24e.  v1:= v3.`com.google.crypto.tink.aead.AeadWrapper$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L43c252.  call temp:= `getPrimary`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L43c258.  v1:= temp @kind object;
  #L43c25a.  call temp:= `getIdentifier`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getIdentifier:()[B` @kind virtual;
  #L43c260.  v1:= temp @kind object;
  #L43c262.  v2:= 0I;
  #L43c264.  v0[v2]:= v1 @kind object;
  #L43c268.  v1:= v3.`com.google.crypto.tink.aead.AeadWrapper$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L43c26c.  call temp:= `getPrimary`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L43c272.  v1:= temp @kind object;
  #L43c274.  call temp:= `getPrimitive`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L43c27a.  v1:= temp @kind object;
  #L43c27c.  v1:= (`com.google.crypto.tink.Aead`) v1 @kind object;
  #L43c280.  call temp:= `encrypt`(v1, v4, v5) @signature `Lcom/google/crypto/tink/Aead;.encrypt:([B[B)[B` @kind interface;
  #L43c286.  v4:= temp @kind object;
  #L43c288.  v5:= 1I;
  #L43c28a.  v0[v5]:= v4 @kind object;
  #L43c28e.  call temp:= `concat`(v0) @signature `Lcom/google/crypto/tink/subtle/Bytes;.concat:([[B)[B` @kind static;
  #L43c294.  v4:= temp @kind object;
  #L43c296.  return v4 @kind object;
}
