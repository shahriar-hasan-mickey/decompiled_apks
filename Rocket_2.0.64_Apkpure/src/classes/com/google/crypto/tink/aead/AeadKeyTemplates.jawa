record `com.google.crypto.tink.aead.AeadKeyTemplates` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_CTR_HMAC_SHA256` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_EAX` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_GCM` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES256_CTR_HMAC_SHA256` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES256_EAX` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES256_GCM` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.aead.AeadKeyTemplates.CHACHA20_POLY1305` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.aead.AeadKeyTemplates.XCHACHA20_POLY1305` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43c034.  v0:= 16I;
  #L43c038.  call temp:= `createAesGcmKeyTemplate`(v0) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createAesGcmKeyTemplate:(I)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L43c03e.  v1:= temp @kind object;
  #L43c040.  `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_GCM` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v1 @kind object;
  #L43c044.  v1:= 32I;
  #L43c048.  call temp:= `createAesGcmKeyTemplate`(v1) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createAesGcmKeyTemplate:(I)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L43c04e.  v2:= temp @kind object;
  #L43c050.  `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES256_GCM` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v2 @kind object;
  #L43c054.  call temp:= `createAesEaxKeyTemplate`(v0, v0) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createAesEaxKeyTemplate:(II)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L43c05a.  v2:= temp @kind object;
  #L43c05c.  `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_EAX` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v2 @kind object;
  #L43c060.  call temp:= `createAesEaxKeyTemplate`(v1, v0) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createAesEaxKeyTemplate:(II)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L43c066.  v2:= temp @kind object;
  #L43c068.  `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES256_EAX` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v2 @kind object;
  #L43c06c.  v2:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L43c070.  call temp:= `createAesCtrHmacAeadKeyTemplate`(v0, v0, v1, v0, v2) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createAesCtrHmacAeadKeyTemplate:(IIIILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L43c076.  v3:= temp @kind object;
  #L43c078.  `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES128_CTR_HMAC_SHA256` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v3 @kind object;
  #L43c07c.  call temp:= `createAesCtrHmacAeadKeyTemplate`(v1, v0, v1, v1, v2) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createAesCtrHmacAeadKeyTemplate:(IIIILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L43c082.  v0:= temp @kind object;
  #L43c084.  `@@com.google.crypto.tink.aead.AeadKeyTemplates.AES256_CTR_HMAC_SHA256` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L43c088.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L43c08e.  v0:= temp @kind object;
  #L43c090.  v1:= new `com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager`;
  #L43c094.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.<init>:()V` @kind direct;
  #L43c09a.  call temp:= `getKeyType`(v1) @signature `Lcom/google/crypto/tink/aead/ChaCha20Poly1305KeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L43c0a0.  v1:= temp @kind object;
  #L43c0a2.  call temp:= `setTypeUrl`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43c0a8.  v0:= temp @kind object;
  #L43c0aa.  v1:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L43c0ae.  call temp:= `setOutputPrefixType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43c0b4.  v0:= temp @kind object;
  #L43c0b6.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43c0bc.  v0:= temp @kind object;
  #L43c0be.  v0:= (`com.google.crypto.tink.proto.KeyTemplate`) v0 @kind object;
  #L43c0c2.  `@@com.google.crypto.tink.aead.AeadKeyTemplates.CHACHA20_POLY1305` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L43c0c6.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L43c0cc.  v0:= temp @kind object;
  #L43c0ce.  v2:= new `com.google.crypto.tink.aead.XChaCha20Poly1305KeyManager`;
  #L43c0d2.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/aead/XChaCha20Poly1305KeyManager;.<init>:()V` @kind direct;
  #L43c0d8.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/aead/XChaCha20Poly1305KeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L43c0de.  v2:= temp @kind object;
  #L43c0e0.  call temp:= `setTypeUrl`(v0, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43c0e6.  v0:= temp @kind object;
  #L43c0e8.  call temp:= `setOutputPrefixType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43c0ee.  v0:= temp @kind object;
  #L43c0f0.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43c0f6.  v0:= temp @kind object;
  #L43c0f8.  v0:= (`com.google.crypto.tink.proto.KeyTemplate`) v0 @kind object;
  #L43c0fc.  `@@com.google.crypto.tink.aead.AeadKeyTemplates.XCHACHA20_POLY1305` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L43c100.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AeadKeyTemplates` v0 @kind this) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43c114.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43c11a.  return @kind void;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createAesCtrHmacAeadKeyTemplate`(`int` v2 , `int` v3 , `int` v4 , `int` v5 , `com.google.crypto.tink.proto.HashType` v6 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createAesCtrHmacAeadKeyTemplate:(IIIILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L43bd20.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrKeyFormat$Builder;` @kind static;
  #L43bd26.  v0:= temp @kind object;
  #L43bd28.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrParams;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrParams$Builder;` @kind static;
  #L43bd2e.  v1:= temp @kind object;
  #L43bd30.  call temp:= `setIvSize`(v1, v3) @signature `Lcom/google/crypto/tink/proto/AesCtrParams$Builder;.setIvSize:(I)Lcom/google/crypto/tink/proto/AesCtrParams$Builder;` @kind virtual;
  #L43bd36.  v3:= temp @kind object;
  #L43bd38.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43bd3e.  v3:= temp @kind object;
  #L43bd40.  v3:= (`com.google.crypto.tink.proto.AesCtrParams`) v3 @kind object;
  #L43bd44.  call temp:= `setParams`(v0, v3) @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/AesCtrParams;)Lcom/google/crypto/tink/proto/AesCtrKeyFormat$Builder;` @kind virtual;
  #L43bd4a.  v3:= temp @kind object;
  #L43bd4c.  call temp:= `setKeySize`(v3, v2) @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/AesCtrKeyFormat$Builder;` @kind virtual;
  #L43bd52.  v2:= temp @kind object;
  #L43bd54.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43bd5a.  v2:= temp @kind object;
  #L43bd5c.  v2:= (`com.google.crypto.tink.proto.AesCtrKeyFormat`) v2 @kind object;
  #L43bd60.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;` @kind static;
  #L43bd66.  v3:= temp @kind object;
  #L43bd68.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacParams;.newBuilder:()Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind static;
  #L43bd6e.  v0:= temp @kind object;
  #L43bd70.  call temp:= `setHash`(v0, v6) @signature `Lcom/google/crypto/tink/proto/HmacParams$Builder;.setHash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind virtual;
  #L43bd76.  v6:= temp @kind object;
  #L43bd78.  call temp:= `setTagSize`(v6, v5) @signature `Lcom/google/crypto/tink/proto/HmacParams$Builder;.setTagSize:(I)Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind virtual;
  #L43bd7e.  v5:= temp @kind object;
  #L43bd80.  call temp:= `build`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43bd86.  v5:= temp @kind object;
  #L43bd88.  v5:= (`com.google.crypto.tink.proto.HmacParams`) v5 @kind object;
  #L43bd8c.  call temp:= `setParams`(v3, v5) @signature `Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/HmacParams;)Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;` @kind virtual;
  #L43bd92.  v3:= temp @kind object;
  #L43bd94.  call temp:= `setKeySize`(v3, v4) @signature `Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;` @kind virtual;
  #L43bd9a.  v3:= temp @kind object;
  #L43bd9c.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43bda2.  v3:= temp @kind object;
  #L43bda4.  v3:= (`com.google.crypto.tink.proto.HmacKeyFormat`) v3 @kind object;
  #L43bda8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat$Builder;` @kind static;
  #L43bdae.  v4:= temp @kind object;
  #L43bdb0.  call temp:= `setAesCtrKeyFormat`(v4, v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat$Builder;.setAesCtrKeyFormat:(Lcom/google/crypto/tink/proto/AesCtrKeyFormat;)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat$Builder;` @kind virtual;
  #L43bdb6.  v2:= temp @kind object;
  #L43bdb8.  call temp:= `setHmacKeyFormat`(v2, v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat$Builder;.setHmacKeyFormat:(Lcom/google/crypto/tink/proto/HmacKeyFormat;)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat$Builder;` @kind virtual;
  #L43bdbe.  v2:= temp @kind object;
  #L43bdc0.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43bdc6.  v2:= temp @kind object;
  #L43bdc8.  v2:= (`com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat`) v2 @kind object;
  #L43bdcc.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L43bdd2.  v3:= temp @kind object;
  #L43bdd4.  call temp:= `toByteString`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L43bdda.  v2:= temp @kind object;
  #L43bddc.  call temp:= `setValue`(v3, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43bde2.  v2:= temp @kind object;
  #L43bde4.  v3:= new `com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager`;
  #L43bde8.  call `<init>`(v3) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.<init>:()V` @kind direct;
  #L43bdee.  call temp:= `getKeyType`(v3) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L43bdf4.  v3:= temp @kind object;
  #L43bdf6.  call temp:= `setTypeUrl`(v2, v3) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43bdfc.  v2:= temp @kind object;
  #L43bdfe.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L43be02.  call temp:= `setOutputPrefixType`(v2, v3) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43be08.  v2:= temp @kind object;
  #L43be0a.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43be10.  v2:= temp @kind object;
  #L43be12.  v2:= (`com.google.crypto.tink.proto.KeyTemplate`) v2 @kind object;
  #L43be16.  return v2 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createAesEaxKeyTemplate`(`int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createAesEaxKeyTemplate:(II)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43be28.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesEaxKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/AesEaxKeyFormat$Builder;` @kind static;
  #L43be2e.  v0:= temp @kind object;
  #L43be30.  call temp:= `setKeySize`(v0, v1) @signature `Lcom/google/crypto/tink/proto/AesEaxKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/AesEaxKeyFormat$Builder;` @kind virtual;
  #L43be36.  v1:= temp @kind object;
  #L43be38.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesEaxParams;.newBuilder:()Lcom/google/crypto/tink/proto/AesEaxParams$Builder;` @kind static;
  #L43be3e.  v0:= temp @kind object;
  #L43be40.  call temp:= `setIvSize`(v0, v2) @signature `Lcom/google/crypto/tink/proto/AesEaxParams$Builder;.setIvSize:(I)Lcom/google/crypto/tink/proto/AesEaxParams$Builder;` @kind virtual;
  #L43be46.  v2:= temp @kind object;
  #L43be48.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43be4e.  v2:= temp @kind object;
  #L43be50.  v2:= (`com.google.crypto.tink.proto.AesEaxParams`) v2 @kind object;
  #L43be54.  call temp:= `setParams`(v1, v2) @signature `Lcom/google/crypto/tink/proto/AesEaxKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/AesEaxParams;)Lcom/google/crypto/tink/proto/AesEaxKeyFormat$Builder;` @kind virtual;
  #L43be5a.  v1:= temp @kind object;
  #L43be5c.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43be62.  v1:= temp @kind object;
  #L43be64.  v1:= (`com.google.crypto.tink.proto.AesEaxKeyFormat`) v1 @kind object;
  #L43be68.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L43be6e.  v2:= temp @kind object;
  #L43be70.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L43be76.  v1:= temp @kind object;
  #L43be78.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43be7e.  v1:= temp @kind object;
  #L43be80.  v2:= new `com.google.crypto.tink.aead.AesEaxKeyManager`;
  #L43be84.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager;.<init>:()V` @kind direct;
  #L43be8a.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L43be90.  v2:= temp @kind object;
  #L43be92.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43be98.  v1:= temp @kind object;
  #L43be9a.  v2:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L43be9e.  call temp:= `setOutputPrefixType`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43bea4.  v1:= temp @kind object;
  #L43bea6.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43beac.  v1:= temp @kind object;
  #L43beae.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L43beb2.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createAesGcmKeyTemplate`(`int` v1 ) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createAesGcmKeyTemplate:(I)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43bec4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesGcmKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/AesGcmKeyFormat$Builder;` @kind static;
  #L43beca.  v0:= temp @kind object;
  #L43becc.  call temp:= `setKeySize`(v0, v1) @signature `Lcom/google/crypto/tink/proto/AesGcmKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/AesGcmKeyFormat$Builder;` @kind virtual;
  #L43bed2.  v1:= temp @kind object;
  #L43bed4.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43beda.  v1:= temp @kind object;
  #L43bedc.  v1:= (`com.google.crypto.tink.proto.AesGcmKeyFormat`) v1 @kind object;
  #L43bee0.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L43bee6.  v0:= temp @kind object;
  #L43bee8.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L43beee.  v1:= temp @kind object;
  #L43bef0.  call temp:= `setValue`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43bef6.  v1:= temp @kind object;
  #L43bef8.  v0:= new `com.google.crypto.tink.aead.AesGcmKeyManager`;
  #L43befc.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/aead/AesGcmKeyManager;.<init>:()V` @kind direct;
  #L43bf02.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/aead/AesGcmKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L43bf08.  v0:= temp @kind object;
  #L43bf0a.  call temp:= `setTypeUrl`(v1, v0) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43bf10.  v1:= temp @kind object;
  #L43bf12.  v0:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L43bf16.  call temp:= `setOutputPrefixType`(v1, v0) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43bf1c.  v1:= temp @kind object;
  #L43bf1e.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43bf24.  v1:= temp @kind object;
  #L43bf26.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L43bf2a.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createKmsAeadKeyTemplate`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createKmsAeadKeyTemplate:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43bf3c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KmsAeadKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/KmsAeadKeyFormat$Builder;` @kind static;
  #L43bf42.  v0:= temp @kind object;
  #L43bf44.  call temp:= `setKeyUri`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KmsAeadKeyFormat$Builder;.setKeyUri:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KmsAeadKeyFormat$Builder;` @kind virtual;
  #L43bf4a.  v1:= temp @kind object;
  #L43bf4c.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43bf52.  v1:= temp @kind object;
  #L43bf54.  v1:= (`com.google.crypto.tink.proto.KmsAeadKeyFormat`) v1 @kind object;
  #L43bf58.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L43bf5e.  v0:= temp @kind object;
  #L43bf60.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L43bf66.  v1:= temp @kind object;
  #L43bf68.  call temp:= `setValue`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43bf6e.  v1:= temp @kind object;
  #L43bf70.  v0:= new `com.google.crypto.tink.aead.KmsAeadKeyManager`;
  #L43bf74.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/aead/KmsAeadKeyManager;.<init>:()V` @kind direct;
  #L43bf7a.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/aead/KmsAeadKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L43bf80.  v0:= temp @kind object;
  #L43bf82.  call temp:= `setTypeUrl`(v1, v0) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43bf88.  v1:= temp @kind object;
  #L43bf8a.  v0:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L43bf8e.  call temp:= `setOutputPrefixType`(v1, v0) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43bf94.  v1:= temp @kind object;
  #L43bf96.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43bf9c.  v1:= temp @kind object;
  #L43bf9e.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L43bfa2.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createKmsEnvelopeAeadKeyTemplate`(`java.lang.String` v1 @kind object, `com.google.crypto.tink.proto.KeyTemplate` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadKeyTemplates;.createKmsEnvelopeAeadKeyTemplate:(Ljava/lang/String;Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43bfb4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KmsEnvelopeAeadKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/KmsEnvelopeAeadKeyFormat$Builder;` @kind static;
  #L43bfba.  v0:= temp @kind object;
  #L43bfbc.  call temp:= `setDekTemplate`(v0, v2) @signature `Lcom/google/crypto/tink/proto/KmsEnvelopeAeadKeyFormat$Builder;.setDekTemplate:(Lcom/google/crypto/tink/proto/KeyTemplate;)Lcom/google/crypto/tink/proto/KmsEnvelopeAeadKeyFormat$Builder;` @kind virtual;
  #L43bfc2.  v2:= temp @kind object;
  #L43bfc4.  call temp:= `setKekUri`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KmsEnvelopeAeadKeyFormat$Builder;.setKekUri:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KmsEnvelopeAeadKeyFormat$Builder;` @kind virtual;
  #L43bfca.  v1:= temp @kind object;
  #L43bfcc.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43bfd2.  v1:= temp @kind object;
  #L43bfd4.  v1:= (`com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat`) v1 @kind object;
  #L43bfd8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L43bfde.  v2:= temp @kind object;
  #L43bfe0.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L43bfe6.  v1:= temp @kind object;
  #L43bfe8.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43bfee.  v1:= temp @kind object;
  #L43bff0.  v2:= new `com.google.crypto.tink.aead.KmsEnvelopeAeadKeyManager`;
  #L43bff4.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/aead/KmsEnvelopeAeadKeyManager;.<init>:()V` @kind direct;
  #L43bffa.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/aead/KmsEnvelopeAeadKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L43c000.  v2:= temp @kind object;
  #L43c002.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43c008.  v1:= temp @kind object;
  #L43c00a.  v2:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L43c00e.  call temp:= `setOutputPrefixType`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L43c014.  v1:= temp @kind object;
  #L43c016.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43c01c.  v1:= temp @kind object;
  #L43c01e.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L43c022.  return v1 @kind object;
}
