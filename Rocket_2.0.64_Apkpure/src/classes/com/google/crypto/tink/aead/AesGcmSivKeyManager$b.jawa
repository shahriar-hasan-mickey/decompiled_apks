record `com.google.crypto.tink.aead.AesGcmSivKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.aead.AesGcmSivKeyManager` `com.google.crypto.tink.aead.AesGcmSivKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.aead.AesGcmSivKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.<init>:(Lcom/google/crypto/tink/aead/AesGcmSivKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43d730.  v0.`com.google.crypto.tink.aead.AesGcmSivKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesGcmSivKeyManager` := v1 @kind object;
  #L43d734.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L43d73a.  return @kind void;
}
procedure `com.google.crypto.tink.proto.AesGcmSivKey` `a`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v1 @kind this, `com.google.crypto.tink.proto.AesGcmSivKeyFormat` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;)Lcom/google/crypto/tink/proto/AesGcmSivKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d59c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind static;
  #L43d5a2.  v0:= temp @kind object;
  #L43d5a4.  call temp:= `getKeySize`(v2) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L43d5aa.  v2:= temp;
  #L43d5ac.  call temp:= `randBytes`(v2) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L43d5b2.  v2:= temp @kind object;
  #L43d5b4.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L43d5ba.  v2:= temp @kind object;
  #L43d5bc.  call temp:= `setKeyValue`(v0, v2) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind virtual;
  #L43d5c2.  v2:= temp @kind object;
  #L43d5c4.  v0:= v1.`com.google.crypto.tink.aead.AesGcmSivKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesGcmSivKeyManager` @kind object;
  #L43d5c8.  call temp:= `getVersion`(v0) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager;.getVersion:()I` @kind virtual;
  #L43d5ce.  v0:= temp;
  #L43d5d0.  call temp:= `setVersion`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind virtual;
  #L43d5d6.  v2:= temp @kind object;
  #L43d5d8.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43d5de.  v2:= temp @kind object;
  #L43d5e0.  v2:= (`com.google.crypto.tink.proto.AesGcmSivKey`) v2 @kind object;
  #L43d5e4.  return v2 @kind object;
}
procedure `com.google.crypto.tink.proto.AesGcmSivKey` `b`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.AesGcmSivKeyFormat` v3 @kind object, `java.io.InputStream` v4 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.b:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/AesGcmSivKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43d5f8.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.getVersion:()I` @kind virtual;
  #L43d5fe.  v0:= temp;
  #L43d600.  v1:= v2.`com.google.crypto.tink.aead.AesGcmSivKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesGcmSivKeyManager` @kind object;
  #L43d604.  call temp:= `getVersion`(v1) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager;.getVersion:()I` @kind virtual;
  #L43d60a.  v1:= temp;
  #L43d60c.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L43d612.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L43d618.  v0:= temp;
  #L43d61a.  v0:= new `byte`[v0];
  #L43d61e.  call temp:= `read`(v4, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L43d624.  v4:= temp;
  #L43d626.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L43d62c.  v3:= temp;
  #L43d62e.  if v4 != v3 then goto L43d66c;
  #L43d632.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind static;
  #L43d638.  v3:= temp @kind object;
  #L43d63a.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L43d640.  v4:= temp @kind object;
  #L43d642.  call temp:= `setKeyValue`(v3, v4) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind virtual;
  #L43d648.  v3:= temp @kind object;
  #L43d64a.  v4:= v2.`com.google.crypto.tink.aead.AesGcmSivKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesGcmSivKeyManager` @kind object;
  #L43d64e.  call temp:= `getVersion`(v4) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager;.getVersion:()I` @kind virtual;
  #L43d654.  v4:= temp;
  #L43d656.  call temp:= `setVersion`(v3, v4) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind virtual;
  #L43d65c.  v3:= temp @kind object;
  #L43d65e.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43d664.  v3:= temp @kind object;
  #L43d666.  v3:= (`com.google.crypto.tink.proto.AesGcmSivKey`) v3 @kind object;
  #L43d66a.  return v3 @kind object;
  #L43d66c.  v3:= new `java.security.GeneralSecurityException`;
  #L43d670.  v4:= "Not enough pseudorandomness given" @kind object;
  #L43d674.  call `<init>`(v3, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43d67a.  throw v3;
  #L43d67c.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L43d67e.  v4:= new `java.security.GeneralSecurityException`;
  #L43d682.  v0:= "Reading pseudorandomness failed" @kind object;
  #L43d686.  call `<init>`(v4, v0, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L43d68c.  throw v4;
  catch `java.io.IOException` @[L43d61e..L43d67c] goto L43d67c;
}
procedure `com.google.crypto.tink.proto.AesGcmSivKeyFormat` `c`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.c:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d6b0.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L43d6b6.  v0:= temp @kind object;
  #L43d6b8.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;` @kind static;
  #L43d6be.  v2:= temp @kind object;
  #L43d6c0.  return v2 @kind object;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43d6f0.  v1:= (`com.google.crypto.tink.proto.AesGcmSivKeyFormat`) v1 @kind object;
  #L43d6f4.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;)Lcom/google/crypto/tink/proto/AesGcmSivKey;` @kind virtual;
  #L43d6fa.  v1:= temp @kind object;
  #L43d6fc.  return v1 @kind object;
}
procedure `void` `d`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.proto.AesGcmSivKeyFormat` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.d:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;)V` @AccessFlag PUBLIC {
    temp;

  #L43d74c.  call temp:= `getKeySize`(v1) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L43d752.  v1:= temp;
  #L43d754.  call `validateAesKeySize`(v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateAesKeySize:(I)V` @kind static;
  #L43d75a.  return @kind void;
}
procedure `java.lang.Object` `deriveKey`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.deriveKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;Ljava/io/InputStream;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43d710.  v1:= (`com.google.crypto.tink.proto.AesGcmSivKeyFormat`) v1 @kind object;
  #L43d714.  call temp:= `b`(v0, v1, v2) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.b:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/AesGcmSivKey;` @kind virtual;
  #L43d71a.  v1:= temp @kind object;
  #L43d71c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43d6d4.  call temp:= `c`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.c:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;` @kind virtual;
  #L43d6da.  v1:= temp @kind object;
  #L43d6dc.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43d76c.  v1:= (`com.google.crypto.tink.proto.AesGcmSivKeyFormat`) v1 @kind object;
  #L43d770.  call `d`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.d:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;)V` @kind virtual;
  #L43d776.  return @kind void;
}
