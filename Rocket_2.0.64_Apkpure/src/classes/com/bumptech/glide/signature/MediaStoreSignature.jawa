record `com.bumptech.glide.signature.MediaStoreSignature` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.Key` @kind interface {
  `java.lang.String` `com.bumptech.glide.signature.MediaStoreSignature.a` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.signature.MediaStoreSignature.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.signature.MediaStoreSignature.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.signature.MediaStoreSignature` v0 @kind this, `java.lang.String` v1 @kind object, `long` v2 , `int` v4 ) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.<init>:(Ljava/lang/String;JI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fdb68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fdb6e.  if v1 != 0 then goto L3fdb76;
  #L3fdb72.  v1:= "" @kind object;
  #L3fdb76.  v0.`com.bumptech.glide.signature.MediaStoreSignature.a` @type ^`java.lang.String` := v1 @kind object;
  #L3fdb7a.  v0.`com.bumptech.glide.signature.MediaStoreSignature.b` @type ^`long` := v2 @kind wide;
  #L3fdb7e.  v0.`com.bumptech.glide.signature.MediaStoreSignature.c` @type ^`int` := v4;
  #L3fdb82.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.signature.MediaStoreSignature` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fdab4.  v0:= 1I;
  #L3fdab6.  if v7 != v8 then goto L3fdabc;
  #L3fdaba.  return v0;
  #L3fdabc.  v1:= 0I;
  #L3fdabe.  if v8 == 0 then goto L3fdb14;
  #L3fdac2.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fdac8.  v2:= temp @kind object;
  #L3fdaca.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fdad0.  v3:= temp @kind object;
  #L3fdad2.  if v2 == v3 then goto L3fdad8;
  #L3fdad6.  goto L3fdb14;
  #L3fdad8.  v8:= (`com.bumptech.glide.signature.MediaStoreSignature`) v8 @kind object;
  #L3fdadc.  v2:= v7.`com.bumptech.glide.signature.MediaStoreSignature.b` @type ^`long` @kind wide;
  #L3fdae0.  v4:= v8.`com.bumptech.glide.signature.MediaStoreSignature.b` @type ^`long` @kind wide;
  #L3fdae4.  v6:= lcmp(v2, v4);
  #L3fdae8.  if v6 == 0 then goto L3fdaee;
  #L3fdaec.  return v1;
  #L3fdaee.  v2:= v7.`com.bumptech.glide.signature.MediaStoreSignature.c` @type ^`int`;
  #L3fdaf2.  v3:= v8.`com.bumptech.glide.signature.MediaStoreSignature.c` @type ^`int`;
  #L3fdaf6.  if v2 == v3 then goto L3fdafc;
  #L3fdafa.  return v1;
  #L3fdafc.  v2:= v7.`com.bumptech.glide.signature.MediaStoreSignature.a` @type ^`java.lang.String` @kind object;
  #L3fdb00.  v8:= v8.`com.bumptech.glide.signature.MediaStoreSignature.a` @type ^`java.lang.String` @kind object;
  #L3fdb04.  call temp:= `equals`(v2, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fdb0a.  v8:= temp;
  #L3fdb0c.  if v8 != 0 then goto L3fdb12;
  #L3fdb10.  return v1;
  #L3fdb12.  return v0;
  #L3fdb14.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.signature.MediaStoreSignature` v5 @kind this) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fdb28.  v0:= v5.`com.bumptech.glide.signature.MediaStoreSignature.a` @type ^`java.lang.String` @kind object;
  #L3fdb2c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3fdb32.  v0:= temp;
  #L3fdb34.  v0:= v0 * 31;
  #L3fdb38.  v1:= v5.`com.bumptech.glide.signature.MediaStoreSignature.b` @type ^`long` @kind wide;
  #L3fdb3c.  v3:= 32I;
  #L3fdb40.  v3:= v1 ^>> v3 @kind long;
  #L3fdb44.  v1:= v1 ^~ v3 @kind long;
  #L3fdb46.  v2:= (`int`) v1 @kind l2i;
  #L3fdb48.  v0:= v0 + v2 @kind int;
  #L3fdb4a.  v0:= v0 * 31;
  #L3fdb4e.  v1:= v5.`com.bumptech.glide.signature.MediaStoreSignature.c` @type ^`int`;
  #L3fdb52.  v0:= v0 + v1 @kind int;
  #L3fdb54.  return v0;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.signature.MediaStoreSignature` v3 @kind this, `java.security.MessageDigest` v4 @kind object) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fdb94.  v0:= 12I;
  #L3fdb98.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3fdb9e.  v0:= temp @kind object;
  #L3fdba0.  v1:= v3.`com.bumptech.glide.signature.MediaStoreSignature.b` @type ^`long` @kind wide;
  #L3fdba4.  call temp:= `putLong`(v0, v1) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3fdbaa.  v0:= temp @kind object;
  #L3fdbac.  v1:= v3.`com.bumptech.glide.signature.MediaStoreSignature.c` @type ^`int`;
  #L3fdbb0.  call temp:= `putInt`(v0, v1) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3fdbb6.  v0:= temp @kind object;
  #L3fdbb8.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3fdbbe.  v0:= temp @kind object;
  #L3fdbc0.  call `update`(v4, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3fdbc6.  v0:= v3.`com.bumptech.glide.signature.MediaStoreSignature.a` @type ^`java.lang.String` @kind object;
  #L3fdbca.  v1:= `@@com.bumptech.glide.load.Key.CHARSET` @type ^`java.nio.charset.Charset` @kind object;
  #L3fdbce.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3fdbd4.  v0:= temp @kind object;
  #L3fdbd6.  call `update`(v4, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3fdbdc.  return @kind void;
}
