record `com.bumptech.glide.MemoryCategory` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `float` `com.bumptech.glide.MemoryCategory.a` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.MemoryCategory` `@@com.bumptech.glide.MemoryCategory.HIGH` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.MemoryCategory` `@@com.bumptech.glide.MemoryCategory.LOW` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.MemoryCategory` `@@com.bumptech.glide.MemoryCategory.NORMAL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.MemoryCategory`[] `@@com.bumptech.glide.MemoryCategory.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/MemoryCategory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d3198.  v0:= new `com.bumptech.glide.MemoryCategory`;
  #L3d319c.  v1:= "LOW" @kind object;
  #L3d31a0.  v2:= 0I;
  #L3d31a2.  v3:= 0.5F;
  #L3d31a6.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/MemoryCategory;.<init>:(Ljava/lang/String;IF)V` @kind direct;
  #L3d31ac.  `@@com.bumptech.glide.MemoryCategory.LOW` @type ^`com.bumptech.glide.MemoryCategory` := v0 @kind object;
  #L3d31b0.  v1:= new `com.bumptech.glide.MemoryCategory`;
  #L3d31b4.  v3:= "NORMAL" @kind object;
  #L3d31b8.  v4:= 1I;
  #L3d31ba.  v5:= 1.0F;
  #L3d31be.  call `<init>`(v1, v3, v4, v5) @signature `Lcom/bumptech/glide/MemoryCategory;.<init>:(Ljava/lang/String;IF)V` @kind direct;
  #L3d31c4.  `@@com.bumptech.glide.MemoryCategory.NORMAL` @type ^`com.bumptech.glide.MemoryCategory` := v1 @kind object;
  #L3d31c8.  v3:= new `com.bumptech.glide.MemoryCategory`;
  #L3d31cc.  v5:= "HIGH" @kind object;
  #L3d31d0.  v6:= 2I;
  #L3d31d2.  v7:= 1.5F;
  #L3d31d6.  call `<init>`(v3, v5, v6, v7) @signature `Lcom/bumptech/glide/MemoryCategory;.<init>:(Ljava/lang/String;IF)V` @kind direct;
  #L3d31dc.  `@@com.bumptech.glide.MemoryCategory.HIGH` @type ^`com.bumptech.glide.MemoryCategory` := v3 @kind object;
  #L3d31e0.  v5:= 3I;
  #L3d31e2.  v5:= new `com.bumptech.glide.MemoryCategory`[v5];
  #L3d31e6.  v5[v2]:= v0 @kind object;
  #L3d31ea.  v5[v4]:= v1 @kind object;
  #L3d31ee.  v5[v6]:= v3 @kind object;
  #L3d31f2.  `@@com.bumptech.glide.MemoryCategory.b` @type ^`com.bumptech.glide.MemoryCategory`[] := v5 @kind object;
  #L3d31f6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.MemoryCategory` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `float` v3 ) @signature `Lcom/bumptech/glide/MemoryCategory;.<init>:(Ljava/lang/String;IF)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3d3208.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3d320e.  v0.`com.bumptech.glide.MemoryCategory.a` @type ^`float` := v3;
  #L3d3212.  return @kind void;
}
procedure `com.bumptech.glide.MemoryCategory` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/MemoryCategory;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/MemoryCategory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d3138.  v0:= constclass @type ^`com.bumptech.glide.MemoryCategory` @kind object;
  #L3d313c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3d3142.  v1:= temp @kind object;
  #L3d3144.  v1:= (`com.bumptech.glide.MemoryCategory`) v1 @kind object;
  #L3d3148.  return v1 @kind object;
}
procedure `com.bumptech.glide.MemoryCategory`[] `values`() @signature `Lcom/bumptech/glide/MemoryCategory;.values:()[Lcom/bumptech/glide/MemoryCategory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d315c.  v0:= `@@com.bumptech.glide.MemoryCategory.b` @type ^`com.bumptech.glide.MemoryCategory`[] @kind object;
  #L3d3160.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/MemoryCategory;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3d3166.  v0:= temp @kind object;
  #L3d3168.  v0:= (`com.bumptech.glide.MemoryCategory`[]) v0 @kind object;
  #L3d316c.  return v0 @kind object;
}
procedure `float` `getMultiplier`(`com.bumptech.glide.MemoryCategory` v1 @kind this) @signature `Lcom/bumptech/glide/MemoryCategory;.getMultiplier:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d3180.  v0:= v1.`com.bumptech.glide.MemoryCategory.a` @type ^`float`;
  #L3d3184.  return v0;
}
