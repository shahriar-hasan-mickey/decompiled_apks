record `com.bumptech.glide.GlideBuilder$b` @kind class @AccessFlag  extends `com.bumptech.glide.Glide$RequestOptionsFactory` @kind interface {
  `com.bumptech.glide.request.RequestOptions` `com.bumptech.glide.GlideBuilder$b.a` @AccessFlag FINAL_SYNTHETIC;
  `com.bumptech.glide.GlideBuilder` `com.bumptech.glide.GlideBuilder$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.GlideBuilder$b` v0 @kind this, `com.bumptech.glide.GlideBuilder` v1 @kind object, `com.bumptech.glide.request.RequestOptions` v2 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder$b;.<init>:(Lcom/bumptech/glide/GlideBuilder;Lcom/bumptech/glide/request/RequestOptions;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d12e4.  v0.`com.bumptech.glide.GlideBuilder$b.b` @type ^`com.bumptech.glide.GlideBuilder` := v1 @kind object;
  #L3d12e8.  v0.`com.bumptech.glide.GlideBuilder$b.a` @type ^`com.bumptech.glide.request.RequestOptions` := v2 @kind object;
  #L3d12ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d12f2.  return @kind void;
}
procedure `com.bumptech.glide.request.RequestOptions` `build`(`com.bumptech.glide.GlideBuilder$b` v1 @kind this) @signature `Lcom/bumptech/glide/GlideBuilder$b;.build:()Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d12bc.  v0:= v1.`com.bumptech.glide.GlideBuilder$b.a` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3d12c0.  if v0 == 0 then goto L3d12c6;
  #L3d12c4.  goto L3d12d0;
  #L3d12c6.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3d12ca.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3d12d0.  return v0 @kind object;
}
