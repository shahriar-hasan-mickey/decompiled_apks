record `com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.resource.bitmap.ImageReader` @kind interface {
  `byte`[] `com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader.c` @AccessFlag PRIVATE_FINAL;
}
procedure `android.graphics.Bitmap` `decodeBitmap`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader` v3 @kind this, `android.graphics.BitmapFactory$Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteArrayReader;.decodeBitmap:(Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eeb38.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader.a` @type ^`byte`[] @kind object;
  #L3eeb3c.  v1:= length @variable v0;
  #L3eeb3e.  v2:= 0I;
  #L3eeb40.  call temp:= `decodeByteArray`(v0, v2, v1, v4) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3eeb46.  v4:= temp @kind object;
  #L3eeb48.  return v4 @kind object;
}
procedure `int` `getImageOrientation`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteArrayReader;.getImageOrientation:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eeb88.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader.b` @type ^`java.util.List` @kind object;
  #L3eeb8c.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader.a` @type ^`byte`[] @kind object;
  #L3eeb90.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L3eeb96.  v1:= temp @kind object;
  #L3eeb98.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eeb9c.  call temp:= `getOrientation`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getOrientation:(Ljava/util/List;Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @kind static;
  #L3eeba2.  v0:= temp;
  #L3eeba4.  return v0;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getImageType`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteArrayReader;.getImageType:()Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eeb5c.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader.b` @type ^`java.util.List` @kind object;
  #L3eeb60.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader.a` @type ^`byte`[] @kind object;
  #L3eeb64.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L3eeb6a.  v1:= temp @kind object;
  #L3eeb6c.  call temp:= `getType`(v0, v1) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getType:(Ljava/util/List;Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind static;
  #L3eeb72.  v0:= temp @kind object;
  #L3eeb74.  return v0 @kind object;
}
procedure `void` `stopGrowingBuffers`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteArrayReader` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteArrayReader;.stopGrowingBuffers:()V` @AccessFlag PUBLIC {
    temp;

  #L3eebb8.  return @kind void;
}
