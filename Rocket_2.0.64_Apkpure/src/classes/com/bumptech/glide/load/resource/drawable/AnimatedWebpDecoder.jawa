record `com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder` v0 @kind this, `java.util.List` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f17c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f17ce.  v0.`com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder.a` @type ^`java.util.List` := v1 @kind object;
  #L3f17d2.  v0.`com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v2 @kind object;
  #L3f17d6.  return @kind void;
}
procedure `com.bumptech.glide.load.ResourceDecoder` `byteBufferDecoder`(`java.util.List` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.byteBufferDecoder:(Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ResourceDecoder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f1710.  v0:= new `com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder$b`;
  #L3f1714.  v1:= new `com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder`;
  #L3f1718.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @kind direct;
  #L3f171e.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder$b;.<init>:(Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;)V` @kind direct;
  #L3f1724.  return v0 @kind object;
}
procedure `boolean` `d`(`com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder` v1 @kind this, `com.bumptech.glide.load.ImageHeaderParser$ImageType` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.d:(Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f16f0.  v0:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.ANIMATED_WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3f16f4.  if v2 != v0 then goto L3f16fc;
  #L3f16f8.  v2:= 1I;
  #L3f16fa.  goto L3f16fe;
  #L3f16fc.  v2:= 0I;
  #L3f16fe.  return v2;
}
procedure `com.bumptech.glide.load.ResourceDecoder` `streamDecoder`(`java.util.List` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.streamDecoder:(Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ResourceDecoder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f1738.  v0:= new `com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder$c`;
  #L3f173c.  v1:= new `com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder`;
  #L3f1740.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @kind direct;
  #L3f1746.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder$c;.<init>:(Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;)V` @kind direct;
  #L3f174c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `a`(`com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder` v1 @kind this, `android.graphics.ImageDecoder$Source` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.Options` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.a:(Landroid/graphics/ImageDecoder$Source;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag  {
    temp;
    v0;

  #L3f1760.  v0:= new `com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener`;
  #L3f1764.  call `<init>`(v0, v3, v4, v5) @signature `Lcom/bumptech/glide/load/resource/DefaultOnHeaderDecodedListener;.<init>:(IILcom/bumptech/glide/load/Options;)V` @kind direct;
  #L3f176a.  call temp:= `decodeDrawable`(v2, v0) @signature `Landroid/graphics/ImageDecoder;.decodeDrawable:(Landroid/graphics/ImageDecoder$Source;Landroid/graphics/ImageDecoder$OnHeaderDecodedListener;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3f1770.  v2:= temp @kind object;
  #L3f1772.  v3:= instanceof @variable v2 @type ^`android.graphics.drawable.AnimatedImageDrawable` @kind boolean;
  #L3f1776.  if v3 == 0 then goto L3f178a;
  #L3f177a.  v3:= new `com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder$a`;
  #L3f177e.  v2:= (`android.graphics.drawable.AnimatedImageDrawable`) v2 @kind object;
  #L3f1782.  call `<init>`(v3, v2) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder$a;.<init>:(Landroid/graphics/drawable/AnimatedImageDrawable;)V` @kind direct;
  #L3f1788.  return v3 @kind object;
  #L3f178a.  v3:= new `java.io.IOException`;
  #L3f178e.  v4:= new `java.lang.StringBuilder`;
  #L3f1792.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f1798.  v5:= "Received unexpected drawable type for animated webp, failing: " @kind object;
  #L3f179c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f17a2.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f17a8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f17ae.  v2:= temp @kind object;
  #L3f17b0.  call `<init>`(v3, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f17b6.  throw v3;
}
procedure `boolean` `b`(`com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.b:(Ljava/io/InputStream;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f169c.  v0:= v2.`com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder.a` @type ^`java.util.List` @kind object;
  #L3f16a0.  v1:= v2.`com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3f16a4.  call temp:= `getType`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getType:(Ljava/util/List;Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind static;
  #L3f16aa.  v3:= temp @kind object;
  #L3f16ac.  call temp:= `d`(v2, v3) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.d:(Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;)Z` @kind direct;
  #L3f16b2.  v3:= temp;
  #L3f16b4.  return v3;
}
procedure `boolean` `c`(`com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.c:(Ljava/nio/ByteBuffer;)Z` @AccessFlag  {
    temp;
    v0;

  #L3f16c8.  v0:= v1.`com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder.a` @type ^`java.util.List` @kind object;
  #L3f16cc.  call temp:= `getType`(v0, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getType:(Ljava/util/List;Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind static;
  #L3f16d2.  v2:= temp @kind object;
  #L3f16d4.  call temp:= `d`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder;.d:(Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;)Z` @kind direct;
  #L3f16da.  v2:= temp;
  #L3f16dc.  return v2;
}
