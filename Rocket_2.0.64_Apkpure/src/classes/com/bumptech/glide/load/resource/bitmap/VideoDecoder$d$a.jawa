record `com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a` @kind class @AccessFlag  extends `android.media.MediaDataSource` @kind class {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a.a` @AccessFlag FINAL_SYNTHETIC;
  `com.bumptech.glide.load.resource.bitmap.VideoDecoder$d` `com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.VideoDecoder$d` v1 @kind object, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$d$a;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$d;Ljava/nio/ByteBuffer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f0e34.  v0.`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a.b` @type ^`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d` := v1 @kind object;
  #L3f0e38.  v0.`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a.a` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L3f0e3c.  call `<init>`(v0) @signature `Landroid/media/MediaDataSource;.<init>:()V` @kind direct;
  #L3f0e42.  return @kind void;
}
procedure `void` `close`(`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$d$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L3f0e54.  return @kind void;
}
procedure `long` `getSize`(`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$d$a;.getSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f0e14.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3f0e18.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L3f0e1e.  v0:= temp;
  #L3f0e20.  v0:= (`long`) v0 @kind i2l;
  #L3f0e22.  return v0 @kind wide;
}
procedure `int` `readAt`(`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a` v3 @kind this, `long` v4 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$d$a;.readAt:(J[BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f0dbc.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3f0dc0.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L3f0dc6.  v0:= temp;
  #L3f0dc8.  v0:= (`long`) v0 @kind i2l;
  #L3f0dca.  v2:= lcmp(v4, v0);
  #L3f0dce.  if v2 < 0 then goto L3f0dd6;
  #L3f0dd2.  v4:= -1I;
  #L3f0dd4.  return v4;
  #L3f0dd6.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3f0dda.  v5:= (`int`) v4 @kind l2i;
  #L3f0ddc.  call temp:= `position`(v0, v5) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3f0de2.  v4:= v3.`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3f0de6.  call temp:= `remaining`(v4) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3f0dec.  v4:= temp;
  #L3f0dee.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3f0df4.  v4:= temp;
  #L3f0df6.  v5:= v3.`com.bumptech.glide.load.resource.bitmap.VideoDecoder$d$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3f0dfa.  call temp:= `get`(v5, v6, v7, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3f0e00.  return v4;
}
