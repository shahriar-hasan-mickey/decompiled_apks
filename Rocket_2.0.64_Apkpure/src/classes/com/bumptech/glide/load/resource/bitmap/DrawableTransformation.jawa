record `com.bumptech.glide.load.resource.bitmap.DrawableTransformation` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.Transformation` @kind interface {
  `com.bumptech.glide.load.Transformation` `com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.load.resource.bitmap.DrawableTransformation.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v0 @kind this, `com.bumptech.glide.load.Transformation` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.<init>:(Lcom/bumptech/glide/load/Transformation;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ee2d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ee2da.  v0.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` := v1 @kind object;
  #L3ee2de.  v0.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.b` @type ^`boolean` := v2 @kind boolean;
  #L3ee2e2.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `a`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v0 @kind this, `android.content.Context` v1 @kind object, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.a:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;

  #L3ee1ec.  call temp:= `getResources`(v1) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3ee1f2.  v1:= temp @kind object;
  #L3ee1f4.  call temp:= `obtain`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResource;.obtain:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind static;
  #L3ee1fa.  v1:= temp @kind object;
  #L3ee1fc.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.Transformation` `asBitmapDrawable`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.asBitmapDrawable:()Lcom/bumptech/glide/load/Transformation;` @AccessFlag PUBLIC {
    temp;

  #L3ee1d8.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee1a4.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` @kind boolean;
  #L3ee1a8.  if v0 == 0 then goto L3ee1c2;
  #L3ee1ac.  v2:= (`com.bumptech.glide.load.resource.bitmap.DrawableTransformation`) v2 @kind object;
  #L3ee1b0.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3ee1b4.  v2:= v2.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3ee1b8.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ee1be.  v2:= temp;
  #L3ee1c0.  return v2;
  #L3ee1c2.  v2:= 0I;
  #L3ee1c4.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee2b4.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3ee2b8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3ee2be.  v0:= temp;
  #L3ee2c0.  return v0;
}
procedure `com.bumptech.glide.load.engine.Resource` `transform`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v2 @kind this, `android.content.Context` v3 @kind object, `com.bumptech.glide.load.engine.Resource` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.transform:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ee210.  call temp:= `get`(v3) @signature `Lcom/bumptech/glide/Glide;.get:(Landroid/content/Context;)Lcom/bumptech/glide/Glide;` @kind static;
  #L3ee216.  v0:= temp @kind object;
  #L3ee218.  call temp:= `getBitmapPool`(v0) @signature `Lcom/bumptech/glide/Glide;.getBitmapPool:()Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;` @kind virtual;
  #L3ee21e.  v0:= temp @kind object;
  #L3ee220.  call temp:= `get`(v4) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3ee226.  v1:= temp @kind object;
  #L3ee228.  v1:= (`android.graphics.drawable.Drawable`) v1 @kind object;
  #L3ee22c.  call temp:= `a`(v0, v1, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/a;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/drawable/Drawable;II)Lcom/bumptech/glide/load/engine/Resource;` @kind static;
  #L3ee232.  v0:= temp @kind object;
  #L3ee234.  if v0 != 0 then goto L3ee27a;
  #L3ee238.  v3:= v2.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.b` @type ^`boolean` @kind boolean;
  #L3ee23c.  if v3 != 0 then goto L3ee242;
  #L3ee240.  return v4 @kind object;
  #L3ee242.  v3:= new `java.lang.IllegalArgumentException`;
  #L3ee246.  v4:= new `java.lang.StringBuilder`;
  #L3ee24a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ee250.  v5:= "Unable to convert " @kind object;
  #L3ee254.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ee25a.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ee260.  v5:= " to a Bitmap" @kind object;
  #L3ee264.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ee26a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ee270.  v4:= temp @kind object;
  #L3ee272.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ee278.  throw v3;
  #L3ee27a.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3ee27e.  call temp:= `transform`(v1, v3, v0, v5, v6) @signature `Lcom/bumptech/glide/load/Transformation;.transform:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3ee284.  v5:= temp @kind object;
  #L3ee286.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ee28c.  v6:= temp;
  #L3ee28e.  if v6 == 0 then goto L3ee29a;
  #L3ee292.  call `recycle`(v5) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L3ee298.  return v4 @kind object;
  #L3ee29a.  call temp:= `a`(v2, v3, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.a:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3ee2a0.  v3:= temp @kind object;
  #L3ee2a2.  return v3 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee2f4.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3ee2f8.  call `updateDiskCacheKey`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3ee2fe.  return @kind void;
}
