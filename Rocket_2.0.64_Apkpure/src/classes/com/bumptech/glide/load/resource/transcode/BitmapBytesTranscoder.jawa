record `com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` @kind interface {
  `android.graphics.Bitmap$CompressFormat` `com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f3a14.  v0:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3f3a18.  v1:= 100I;
  #L3f3a1c.  call `<init>`(v2, v0, v1) @signature `Lcom/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder;.<init>:(Landroid/graphics/Bitmap$CompressFormat;I)V` @kind direct;
  #L3f3a22.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder` v0 @kind this, `android.graphics.Bitmap$CompressFormat` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder;.<init>:(Landroid/graphics/Bitmap$CompressFormat;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f3a34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f3a3a.  v0.`com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder.a` @type ^`android.graphics.Bitmap$CompressFormat` := v1 @kind object;
  #L3f3a3e.  v0.`com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder.b` @type ^`int` := v2;
  #L3f3a42.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `transcode`(`com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder` v3 @kind this, `com.bumptech.glide.load.engine.Resource` v4 @kind object, `com.bumptech.glide.load.Options` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder;.transcode:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f39c4.  v5:= new `java.io.ByteArrayOutputStream`;
  #L3f39c8.  call `<init>`(v5) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L3f39ce.  call temp:= `get`(v4) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3f39d4.  v0:= temp @kind object;
  #L3f39d6.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L3f39da.  v1:= v3.`com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder.a` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3f39de.  v2:= v3.`com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder.b` @type ^`int`;
  #L3f39e2.  call temp:= `compress`(v0, v1, v2, v5) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L3f39e8.  call `recycle`(v4) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L3f39ee.  v4:= new `com.bumptech.glide.load.resource.bytes.BytesResource`;
  #L3f39f2.  call temp:= `toByteArray`(v5) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L3f39f8.  v5:= temp @kind object;
  #L3f39fa.  call `<init>`(v4, v5) @signature `Lcom/bumptech/glide/load/resource/bytes/BytesResource;.<init>:([B)V` @kind direct;
  #L3f3a00.  return v4 @kind object;
}
