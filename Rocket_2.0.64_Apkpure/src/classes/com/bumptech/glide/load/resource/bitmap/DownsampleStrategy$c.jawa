record `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$c` @kind class @AccessFlag  extends `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$c` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ecb3c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;.<init>:()V` @kind direct;
  #L3ecb42.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` `getSampleSizeRounding`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$c` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$c;.getSampleSizeRounding:(IIII)Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$SampleSizeRounding;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ecad8.  call temp:= `getScaleFactor`(v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$c;.getScaleFactor:(IIII)F` @kind virtual;
  #L3ecade.  v0:= temp;
  #L3ecae0.  v1:= 1.0F;
  #L3ecae4.  v0:= fcmpl(v0, v1);
  #L3ecae8.  if v0 != 0 then goto L3ecaf2;
  #L3ecaec.  v3:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding.QUALITY` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` @kind object;
  #L3ecaf0.  goto L3ecafe;
  #L3ecaf2.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.FIT_CENTER` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3ecaf6.  call temp:= `getSampleSizeRounding`(v0, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;.getSampleSizeRounding:(IIII)Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$SampleSizeRounding;` @kind virtual;
  #L3ecafc.  v3:= temp @kind object;
  #L3ecafe.  return v3 @kind object;
}
procedure `float` `getScaleFactor`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$c` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$c;.getScaleFactor:(IIII)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ecb10.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.FIT_CENTER` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3ecb14.  call temp:= `getScaleFactor`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;.getScaleFactor:(IIII)F` @kind virtual;
  #L3ecb1a.  v2:= temp;
  #L3ecb1c.  v3:= 1.0F;
  #L3ecb20.  call temp:= `min`(v3, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3ecb26.  v2:= temp;
  #L3ecb28.  return v2;
}
