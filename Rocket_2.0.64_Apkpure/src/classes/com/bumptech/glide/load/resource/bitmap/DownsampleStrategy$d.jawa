record `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$d` @kind class @AccessFlag  extends `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$d` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ecb94.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;.<init>:()V` @kind direct;
  #L3ecb9a.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` `getSampleSizeRounding`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$d` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$d;.getSampleSizeRounding:(IIII)Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$SampleSizeRounding;` @AccessFlag PUBLIC {
    temp;

  #L3ecb54.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding.QUALITY` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` @kind object;
  #L3ecb58.  return v1 @kind object;
}
procedure `float` `getScaleFactor`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$d` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$d;.getScaleFactor:(IIII)F` @AccessFlag PUBLIC {
    temp;

  #L3ecb6c.  v3:= (`float`) v3 @kind i2f;
  #L3ecb6e.  v1:= (`float`) v1 @kind i2f;
  #L3ecb70.  v3:= v3 / v1 @kind float;
  #L3ecb72.  v1:= (`float`) v4 @kind i2f;
  #L3ecb74.  v2:= (`float`) v2 @kind i2f;
  #L3ecb76.  v1:= v1 / v2 @kind float;
  #L3ecb78.  call temp:= `max`(v3, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3ecb7e.  v1:= temp;
  #L3ecb80.  return v1;
}
