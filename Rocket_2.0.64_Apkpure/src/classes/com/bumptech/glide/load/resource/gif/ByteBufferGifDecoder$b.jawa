record `com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b` @kind class @AccessFlag  {
  `java.util.Queue` `com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/ByteBufferGifDecoder$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3f207c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f2082.  v0:= 0I;
  #L3f2084.  call temp:= `createQueue`(v0) @signature `Lcom/bumptech/glide/util/Util;.createQueue:(I)Ljava/util/Queue;` @kind static;
  #L3f208a.  v0:= temp @kind object;
  #L3f208c.  v1.`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b.a` @type ^`java.util.Queue` := v0 @kind object;
  #L3f2090.  return @kind void;
}
procedure `com.bumptech.glide.gifdecoder.GifHeaderParser` `a`(`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/ByteBufferGifDecoder$b;.a:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @AccessFlag  {
    temp;
    v0;

  #L3f202c.  @monitorenter v1
  #L3f202e.  v0:= v1.`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b.a` @type ^`java.util.Queue` @kind object;
  #L3f2032.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L3f2038.  v0:= temp @kind object;
  #L3f203a.  v0:= (`com.bumptech.glide.gifdecoder.GifHeaderParser`) v0 @kind object;
  #L3f203e.  if v0 != 0 then goto L3f204c;
  #L3f2042.  v0:= new `com.bumptech.glide.gifdecoder.GifHeaderParser`;
  #L3f2046.  call `<init>`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.<init>:()V` @kind direct;
  #L3f204c.  call temp:= `setData`(v0, v2) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.setData:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @kind virtual;
  #L3f2052.  v2:= temp @kind object;
  #L3f2054.  @monitorexit v1
  #L3f2056.  return v2 @kind object;
  #L3f2058.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f205a.  @monitorexit v1
  #L3f205c.  throw v2;
  catch `java.lang.Throwable` @[L3f202e..L3f2054] goto L3f2058;
}
procedure `void` `b`(`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b` v1 @kind this, `com.bumptech.glide.gifdecoder.GifHeaderParser` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/ByteBufferGifDecoder$b;.b:(Lcom/bumptech/glide/gifdecoder/GifHeaderParser;)V` @AccessFlag  {
    temp;
    v0;

  #L3f20a4.  @monitorenter v1
  #L3f20a6.  call `clear`(v2) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.clear:()V` @kind virtual;
  #L3f20ac.  v0:= v1.`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b.a` @type ^`java.util.Queue` @kind object;
  #L3f20b0.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L3f20b6.  @monitorexit v1
  #L3f20b8.  return @kind void;
  #L3f20ba.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f20bc.  @monitorexit v1
  #L3f20be.  throw v2;
  catch `java.lang.Throwable` @[L3f20a6..L3f20b6] goto L3f20ba;
}
