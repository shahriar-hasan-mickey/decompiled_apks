record `com.bumptech.glide.load.resource.bitmap.HardwareConfigState` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `com.bumptech.glide.load.resource.bitmap.HardwareConfigState.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.resource.bitmap.HardwareConfigState.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.resource.bitmap.HardwareConfigState.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.resource.bitmap.HardwareConfigState.d` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.resource.bitmap.HardwareConfigState.e` @AccessFlag PRIVATE;
  `java.util.concurrent.atomic.AtomicBoolean` `com.bumptech.glide.load.resource.bitmap.HardwareConfigState.f` @AccessFlag PRIVATE_FINAL;
}
global `boolean` `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.BLOCK_HARDWARE_BITMAPS_WHEN_GL_CONTEXT_MIGHT_NOT_BE_INITIALIZED` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.HARDWARE_BITMAPS_SUPPORTED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.NO_MAX_FD_COUNT` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.io.File` `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.bumptech.glide.load.resource.bitmap.HardwareConfigState` `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.h` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `int` `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.i` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eea38.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3eea3c.  v1:= 1I;
  #L3eea3e.  v2:= 0I;
  #L3eea40.  v3:= 29I;
  #L3eea44.  if v0 >= v3 then goto L3eea4c;
  #L3eea48.  v3:= 1I;
  #L3eea4a.  goto L3eea4e;
  #L3eea4c.  v3:= 0I;
  #L3eea4e.  `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.BLOCK_HARDWARE_BITMAPS_WHEN_GL_CONTEXT_MIGHT_NOT_BE_INITIALIZED` @type ^`boolean` := v3 @kind boolean;
  #L3eea52.  v3:= 26I;
  #L3eea56.  if v0 < v3 then goto L3eea5c;
  #L3eea5a.  goto L3eea5e;
  #L3eea5c.  v1:= 0I;
  #L3eea5e.  `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.HARDWARE_BITMAPS_SUPPORTED` @type ^`boolean` := v1 @kind boolean;
  #L3eea62.  v0:= new `java.io.File`;
  #L3eea66.  v1:= "/proc/self/fd" @kind object;
  #L3eea6a.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eea70.  `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.g` @type ^`java.io.File` := v0 @kind object;
  #L3eea74.  v0:= -1I;
  #L3eea76.  `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.i` @type ^`int` := v0;
  #L3eea7a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3eea8c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eea92.  v0:= 1I;
  #L3eea94.  v3.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.e` @type ^`boolean` := v0 @kind boolean;
  #L3eea98.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L3eea9c.  v1:= 0I;
  #L3eea9e.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L3eeaa4.  v3.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.f` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L3eeaa8.  call temp:= `d`() @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.d:()Z` @kind static;
  #L3eeaae.  v0:= temp;
  #L3eeab0.  v3.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.a` @type ^`boolean` := v0 @kind boolean;
  #L3eeab4.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3eeab8.  v2:= 28I;
  #L3eeabc.  if v0 < v2 then goto L3eeace;
  #L3eeac0.  v0:= 20000I;
  #L3eeac4.  v3.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.b` @type ^`int` := v0;
  #L3eeac8.  v3.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.c` @type ^`int` := v1;
  #L3eeacc.  goto L3eeade;
  #L3eeace.  v0:= 700I;
  #L3eead2.  v3.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.b` @type ^`int` := v0;
  #L3eead6.  v0:= 128I;
  #L3eeada.  v3.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.c` @type ^`int` := v0;
  #L3eeade.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ee618.  v0:= `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.BLOCK_HARDWARE_BITMAPS_WHEN_GL_CONTEXT_MIGHT_NOT_BE_INITIALIZED` @type ^`boolean` @kind boolean;
  #L3ee61c.  if v0 == 0 then goto L3ee634;
  #L3ee620.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.f` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3ee624.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L3ee62a.  v0:= temp;
  #L3ee62c.  if v0 != 0 then goto L3ee634;
  #L3ee630.  v0:= 1I;
  #L3ee632.  goto L3ee636;
  #L3ee634.  v0:= 0I;
  #L3ee636.  return v0;
}
procedure `int` `b`(`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.b:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3eea10.  v0:= `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.i` @type ^`int`;
  #L3eea14.  v1:= -1I;
  #L3eea16.  if v0 == v1 then goto L3eea20;
  #L3eea1a.  v0:= `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.i` @type ^`int`;
  #L3eea1e.  goto L3eea24;
  #L3eea20.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.b` @type ^`int`;
  #L3eea24.  return v0;
}
procedure `boolean` `c`(`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` v8 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ee648.  @monitorenter v8
  #L3ee64a.  v0:= v8.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.d` @type ^`int`;
  #L3ee64e.  v1:= 1I;
  #L3ee650.  v0:= v0 + v1 @kind int;
  #L3ee652.  v8.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.d` @type ^`int` := v0;
  #L3ee656.  v2:= 50I;
  #L3ee65a.  if v0 < v2 then goto L3ee6e0;
  #L3ee65e.  v0:= 0I;
  #L3ee660.  v8.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.d` @type ^`int` := v0;
  #L3ee664.  v2:= `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.g` @type ^`java.io.File` @kind object;
  #L3ee668.  call temp:= `list`(v2) @signature `Ljava/io/File;.list:()[Ljava/lang/String;` @kind virtual;
  #L3ee66e.  v2:= temp @kind object;
  #L3ee670.  v2:= length @variable v2;
  #L3ee672.  call temp:= `b`(v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.b:()I` @kind direct;
  #L3ee678.  v3:= temp;
  #L3ee67a.  v3:= (`long`) v3 @kind i2l;
  #L3ee67c.  v5:= (`long`) v2 @kind i2l;
  #L3ee67e.  v7:= lcmp(v5, v3);
  #L3ee682.  if v7 >= 0 then goto L3ee688;
  #L3ee686.  goto L3ee68a;
  #L3ee688.  v1:= 0I;
  #L3ee68a.  v8.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.e` @type ^`boolean` := v1 @kind boolean;
  #L3ee68e.  if v1 != 0 then goto L3ee6e0;
  #L3ee692.  v0:= "Downsampler" @kind object;
  #L3ee696.  v1:= 5I;
  #L3ee698.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ee69e.  v0:= temp;
  #L3ee6a0.  if v0 == 0 then goto L3ee6e0;
  #L3ee6a4.  v0:= "Downsampler" @kind object;
  #L3ee6a8.  v1:= new `java.lang.StringBuilder`;
  #L3ee6ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ee6b2.  v5:= "Excluding HARDWARE bitmap config because we're over the file descriptor limit, file descriptors " @kind object;
  #L3ee6b6.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ee6bc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ee6c2.  v2:= ", limit " @kind object;
  #L3ee6c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ee6cc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ee6d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ee6d8.  v1:= temp @kind object;
  #L3ee6da.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ee6e0.  v0:= v8.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.e` @type ^`boolean` @kind boolean;
  #L3ee6e4.  @monitorexit v8
  #L3ee6e6.  return v0;
  #L3ee6e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ee6ea.  @monitorexit v8
  #L3ee6ec.  throw v0;
  catch `java.lang.Throwable` @[L3ee64a..L3ee6e4] goto L3ee6e8;
}
procedure `boolean` `d`() @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.d:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3ee824.  call temp:= `e`() @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.e:()Z` @kind static;
  #L3ee82a.  v0:= temp;
  #L3ee82c.  if v0 != 0 then goto L3ee840;
  #L3ee830.  call temp:= `f`() @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.f:()Z` @kind static;
  #L3ee836.  v0:= temp;
  #L3ee838.  if v0 != 0 then goto L3ee840;
  #L3ee83c.  v0:= 1I;
  #L3ee83e.  goto L3ee842;
  #L3ee840.  v0:= 0I;
  #L3ee842.  return v0;
}
procedure `boolean` `e`() @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.e:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L3ee854.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3ee858.  v1:= 0I;
  #L3ee85a.  v2:= 26I;
  #L3ee85e.  if v0 == v2 then goto L3ee864;
  #L3ee862.  return v1;
  #L3ee864.  v3:= "SC-04J" @kind object;
  #L3ee868.  v4:= "SM-N935" @kind object;
  #L3ee86c.  v5:= "SM-J720" @kind object;
  #L3ee870.  v6:= "SM-G570F" @kind object;
  #L3ee874.  v7:= "SM-G570M" @kind object;
  #L3ee878.  v8:= "SM-G960" @kind object;
  #L3ee87c.  v9:= "SM-G965" @kind object;
  #L3ee880.  v10:= "SM-G935" @kind object;
  #L3ee884.  v11:= "SM-G930" @kind object;
  #L3ee888.  v12:= "SM-A520" @kind object;
  #L3ee88c.  v13:= "SM-A720F" @kind object;
  #L3ee890.  v14:= "moto e5" @kind object;
  #L3ee894.  v15:= "moto e5 play" @kind object;
  #L3ee898.  v16:= "moto e5 plus" @kind object;
  #L3ee89c.  v17:= "moto e5 cruise" @kind object;
  #L3ee8a0.  v18:= "moto g(6) forge" @kind object;
  #L3ee8a4.  v19:= "moto g(6) play" @kind object;
  #L3ee8a8.  temp:= new `java.lang.String`[v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19];
  #L3ee8ae.  v0:= temp @kind object;
  #L3ee8b0.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3ee8b6.  v0:= temp @kind object;
  #L3ee8b8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ee8be.  v0:= temp @kind object;
  #L3ee8c0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ee8c6.  v2:= temp;
  #L3ee8c8.  if v2 == 0 then goto L3ee8ec;
  #L3ee8cc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ee8d2.  v2:= temp @kind object;
  #L3ee8d4.  v2:= (`java.lang.String`) v2 @kind object;
  #L3ee8d8.  v3:= `@@android.os.Build.MODEL` @type ^`java.lang.String` @kind object;
  #L3ee8dc.  call temp:= `startsWith`(v3, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3ee8e2.  v2:= temp;
  #L3ee8e4.  if v2 == 0 then goto L3ee8c0;
  #L3ee8e8.  v0:= 1I;
  #L3ee8ea.  return v0;
  #L3ee8ec.  return v1;
}
procedure `boolean` `f`() @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.f:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L3ee900.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3ee904.  v1:= 27I;
  #L3ee908.  if v0 == v1 then goto L3ee910;
  #L3ee90c.  v0:= 0I;
  #L3ee90e.  return v0;
  #L3ee910.  v1:= "LG-M250" @kind object;
  #L3ee914.  v2:= "LG-M320" @kind object;
  #L3ee918.  v3:= "LG-Q710AL" @kind object;
  #L3ee91c.  v4:= "LG-Q710PL" @kind object;
  #L3ee920.  v5:= "LGM-K121K" @kind object;
  #L3ee924.  v6:= "LGM-K121L" @kind object;
  #L3ee928.  v7:= "LGM-K121S" @kind object;
  #L3ee92c.  v8:= "LGM-X320K" @kind object;
  #L3ee930.  v9:= "LGM-X320L" @kind object;
  #L3ee934.  v10:= "LGM-X320S" @kind object;
  #L3ee938.  v11:= "LGM-X401L" @kind object;
  #L3ee93c.  v12:= "LGM-X401S" @kind object;
  #L3ee940.  v13:= "LM-Q610.FG" @kind object;
  #L3ee944.  v14:= "LM-Q610.FGN" @kind object;
  #L3ee948.  v15:= "LM-Q617.FG" @kind object;
  #L3ee94c.  v16:= "LM-Q617.FGN" @kind object;
  #L3ee950.  v17:= "LM-Q710.FG" @kind object;
  #L3ee954.  v18:= "LM-Q710.FGN" @kind object;
  #L3ee958.  v19:= "LM-X220PM" @kind object;
  #L3ee95c.  v20:= "LM-X220QMA" @kind object;
  #L3ee960.  v21:= "LM-X410PM" @kind object;
  #L3ee964.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21];
  #L3ee96a.  v0:= temp @kind object;
  #L3ee96c.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3ee972.  v0:= temp @kind object;
  #L3ee974.  v1:= `@@android.os.Build.MODEL` @type ^`java.lang.String` @kind object;
  #L3ee978.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3ee97e.  v0:= temp;
  #L3ee980.  return v0;
}
procedure `com.bumptech.glide.load.resource.bitmap.HardwareConfigState` `getInstance`() @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.getInstance:()Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3ee9c0.  v0:= `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.h` @type ^`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` @kind object;
  #L3ee9c4.  if v0 != 0 then goto L3ee9ee;
  #L3ee9c8.  v0:= constclass @type ^`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` @kind object;
  #L3ee9cc.  @monitorenter v0
  #L3ee9ce.  v1:= `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.h` @type ^`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` @kind object;
  #L3ee9d2.  if v1 != 0 then goto L3ee9e4;
  #L3ee9d6.  v1:= new `com.bumptech.glide.load.resource.bitmap.HardwareConfigState`;
  #L3ee9da.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.<init>:()V` @kind direct;
  #L3ee9e0.  `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.h` @type ^`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` := v1 @kind object;
  #L3ee9e4.  @monitorexit v0
  #L3ee9e6.  goto L3ee9ee;
  #L3ee9e8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ee9ea.  @monitorexit v0
  #L3ee9ec.  throw v1;
  #L3ee9ee.  v0:= `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.h` @type ^`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` @kind object;
  #L3ee9f2.  return v0 @kind object;
  catch `java.lang.Throwable` @[L3ee9ce..L3ee9ec] goto L3ee9e8;
}
procedure `boolean` `areHardwareBitmapsBlocked`(`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.areHardwareBitmapsBlocked:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee5f0.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L3ee5f6.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.f` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3ee5fa.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L3ee600.  v0:= temp;
  #L3ee602.  v0:= v0 ^~ 1;
  #L3ee606.  return v0;
}
procedure `void` `blockHardwareBitmaps`(`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.blockHardwareBitmaps:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eeaf0.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L3eeaf6.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.f` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3eeafa.  v1:= 0I;
  #L3eeafc.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L3eeb02.  return @kind void;
}
procedure `boolean` `g`(`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` v0 @kind this, `int` v1 , `int` v2 , `android.graphics.BitmapFactory$Options` v3 @kind object, `boolean` v4 , `boolean` v5 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.g:(IILandroid/graphics/BitmapFactory$Options;ZZ)Z` @AccessFlag  {
    temp;

  #L3ee994.  call temp:= `isHardwareConfigAllowed`(v0, v1, v2, v4, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.isHardwareConfigAllowed:(IIZZ)Z` @kind virtual;
  #L3ee99a.  v1:= temp;
  #L3ee99c.  if v1 == 0 then goto L3ee9ae;
  #L3ee9a0.  v2:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3ee9a4.  v3.`android.graphics.BitmapFactory$Options.inPreferredConfig` @type ^`android.graphics.Bitmap$Config` := v2 @kind object;
  #L3ee9a8.  v2:= 0I;
  #L3ee9aa.  v3.`android.graphics.BitmapFactory$Options.inMutable` @type ^`boolean` := v2 @kind boolean;
  #L3ee9ae.  return v1;
}
procedure `boolean` `isHardwareConfigAllowed`(`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` v3 @kind this, `int` v4 , `int` v5 , `boolean` v6 , `boolean` v7 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.isHardwareConfigAllowed:(IIZZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ee70c.  v0:= 0I;
  #L3ee70e.  v1:= 2I;
  #L3ee710.  v2:= "HardwareConfig" @kind object;
  #L3ee714.  if v6 != 0 then goto L3ee730;
  #L3ee718.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ee71e.  v4:= temp;
  #L3ee720.  if v4 == 0 then goto L3ee72e;
  #L3ee724.  v4:= "Hardware config disallowed by caller" @kind object;
  #L3ee728.  call temp:= `v`(v2, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ee72e.  return v0;
  #L3ee730.  v6:= v3.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.a` @type ^`boolean` @kind boolean;
  #L3ee734.  if v6 != 0 then goto L3ee750;
  #L3ee738.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ee73e.  v4:= temp;
  #L3ee740.  if v4 == 0 then goto L3ee74e;
  #L3ee744.  v4:= "Hardware config disallowed by device model" @kind object;
  #L3ee748.  call temp:= `v`(v2, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ee74e.  return v0;
  #L3ee750.  v6:= `@@com.bumptech.glide.load.resource.bitmap.HardwareConfigState.HARDWARE_BITMAPS_SUPPORTED` @type ^`boolean` @kind boolean;
  #L3ee754.  if v6 != 0 then goto L3ee770;
  #L3ee758.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ee75e.  v4:= temp;
  #L3ee760.  if v4 == 0 then goto L3ee76e;
  #L3ee764.  v4:= "Hardware config disallowed by sdk" @kind object;
  #L3ee768.  call temp:= `v`(v2, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ee76e.  return v0;
  #L3ee770.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.a:()Z` @kind direct;
  #L3ee776.  v6:= temp;
  #L3ee778.  if v6 == 0 then goto L3ee794;
  #L3ee77c.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ee782.  v4:= temp;
  #L3ee784.  if v4 == 0 then goto L3ee792;
  #L3ee788.  v4:= "Hardware config disallowed by app state" @kind object;
  #L3ee78c.  call temp:= `v`(v2, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ee792.  return v0;
  #L3ee794.  if v7 == 0 then goto L3ee7b0;
  #L3ee798.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ee79e.  v4:= temp;
  #L3ee7a0.  if v4 == 0 then goto L3ee7ae;
  #L3ee7a4.  v4:= "Hardware config disallowed because exif orientation is required" @kind object;
  #L3ee7a8.  call temp:= `v`(v2, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ee7ae.  return v0;
  #L3ee7b0.  v6:= v3.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.c` @type ^`int`;
  #L3ee7b4.  if v4 >= v6 then goto L3ee7d0;
  #L3ee7b8.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ee7be.  v4:= temp;
  #L3ee7c0.  if v4 == 0 then goto L3ee7ce;
  #L3ee7c4.  v4:= "Hardware config disallowed because width is too small" @kind object;
  #L3ee7c8.  call temp:= `v`(v2, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ee7ce.  return v0;
  #L3ee7d0.  if v5 >= v6 then goto L3ee7ec;
  #L3ee7d4.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ee7da.  v4:= temp;
  #L3ee7dc.  if v4 == 0 then goto L3ee7ea;
  #L3ee7e0.  v4:= "Hardware config disallowed because height is too small" @kind object;
  #L3ee7e4.  call temp:= `v`(v2, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ee7ea.  return v0;
  #L3ee7ec.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.c:()Z` @kind direct;
  #L3ee7f2.  v4:= temp;
  #L3ee7f4.  if v4 != 0 then goto L3ee810;
  #L3ee7f8.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ee7fe.  v4:= temp;
  #L3ee800.  if v4 == 0 then goto L3ee80e;
  #L3ee804.  v4:= "Hardware config disallowed because there are insufficient FDs" @kind object;
  #L3ee808.  call temp:= `v`(v2, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ee80e.  return v0;
  #L3ee810.  v4:= 1I;
  #L3ee812.  return v4;
}
procedure `void` `unblockHardwareBitmaps`(`com.bumptech.glide.load.resource.bitmap.HardwareConfigState` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;.unblockHardwareBitmaps:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eeb14.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L3eeb1a.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.HardwareConfigState.f` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3eeb1e.  v1:= 1I;
  #L3eeb20.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L3eeb26.  return @kind void;
}
