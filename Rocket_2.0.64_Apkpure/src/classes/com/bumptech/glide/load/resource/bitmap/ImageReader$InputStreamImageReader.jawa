record `com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.resource.bitmap.ImageReader` @kind interface {
  `com.bumptech.glide.load.data.InputStreamRewinder` `com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader` v1 @kind this, `java.io.InputStream` v2 @kind object, `java.util.List` v3 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$InputStreamImageReader;.<init>:(Ljava/io/InputStream;Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3eeeec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eeef2.  call temp:= `checkNotNull`(v4) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3eeef8.  v0:= temp @kind object;
  #L3eeefa.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool`) v0 @kind object;
  #L3eeefe.  v1.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v0 @kind object;
  #L3eef02.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3eef08.  v3:= temp @kind object;
  #L3eef0a.  v3:= (`java.util.List`) v3 @kind object;
  #L3eef0e.  v1.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.c` @type ^`java.util.List` := v3 @kind object;
  #L3eef12.  v3:= new `com.bumptech.glide.load.data.InputStreamRewinder`;
  #L3eef16.  call `<init>`(v3, v2, v4) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @kind direct;
  #L3eef1c.  v1.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.a` @type ^`com.bumptech.glide.load.data.InputStreamRewinder` := v3 @kind object;
  #L3eef20.  return @kind void;
}
procedure `android.graphics.Bitmap` `decodeBitmap`(`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader` v2 @kind this, `android.graphics.BitmapFactory$Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$InputStreamImageReader;.decodeBitmap:(Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eee64.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.a` @type ^`com.bumptech.glide.load.data.InputStreamRewinder` @kind object;
  #L3eee68.  call temp:= `rewindAndGet`(v0) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.rewindAndGet:()Ljava/io/InputStream;` @kind virtual;
  #L3eee6e.  v0:= temp @kind object;
  #L3eee70.  v1:= 0I;
  #L3eee72.  call temp:= `decodeStream`(v0, v1, v3) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3eee78.  v3:= temp @kind object;
  #L3eee7a.  return v3 @kind object;
}
procedure `int` `getImageOrientation`(`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$InputStreamImageReader;.getImageOrientation:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eeebc.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.c` @type ^`java.util.List` @kind object;
  #L3eeec0.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.a` @type ^`com.bumptech.glide.load.data.InputStreamRewinder` @kind object;
  #L3eeec4.  call temp:= `rewindAndGet`(v1) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.rewindAndGet:()Ljava/io/InputStream;` @kind virtual;
  #L3eeeca.  v1:= temp @kind object;
  #L3eeecc.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eeed0.  call temp:= `getOrientation`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getOrientation:(Ljava/util/List;Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @kind static;
  #L3eeed6.  v0:= temp;
  #L3eeed8.  return v0;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getImageType`(`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$InputStreamImageReader;.getImageType:()Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eee8c.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.c` @type ^`java.util.List` @kind object;
  #L3eee90.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.a` @type ^`com.bumptech.glide.load.data.InputStreamRewinder` @kind object;
  #L3eee94.  call temp:= `rewindAndGet`(v1) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.rewindAndGet:()Ljava/io/InputStream;` @kind virtual;
  #L3eee9a.  v1:= temp @kind object;
  #L3eee9c.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eeea0.  call temp:= `getType`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getType:(Ljava/util/List;Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind static;
  #L3eeea6.  v0:= temp @kind object;
  #L3eeea8.  return v0 @kind object;
}
procedure `void` `stopGrowingBuffers`(`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$InputStreamImageReader;.stopGrowingBuffers:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eef34.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader.a` @type ^`com.bumptech.glide.load.data.InputStreamRewinder` @kind object;
  #L3eef38.  call `fixMarkLimits`(v0) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.fixMarkLimits:()V` @kind virtual;
  #L3eef3e.  return @kind void;
}
