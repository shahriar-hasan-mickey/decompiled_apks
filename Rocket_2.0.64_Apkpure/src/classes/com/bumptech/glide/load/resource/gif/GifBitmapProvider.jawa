record `com.bumptech.glide.load.resource.gif.GifBitmapProvider` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.resource.gif.GifBitmapProvider.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.gif.GifBitmapProvider.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.GifBitmapProvider` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifBitmapProvider;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f25d8.  v0:= 0I;
  #L3f25da.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/resource/gif/GifBitmapProvider;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @kind direct;
  #L3f25e0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.GifBitmapProvider` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifBitmapProvider;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f25f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f25fa.  v0.`com.bumptech.glide.load.resource.gif.GifBitmapProvider.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v1 @kind object;
  #L3f25fe.  v0.`com.bumptech.glide.load.resource.gif.GifBitmapProvider.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v2 @kind object;
  #L3f2602.  return @kind void;
}
procedure `android.graphics.Bitmap` `obtain`(`com.bumptech.glide.load.resource.gif.GifBitmapProvider` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifBitmapProvider;.obtain:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f2558.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifBitmapProvider.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3f255c.  call temp:= `getDirty`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.getDirty:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3f2562.  v2:= temp @kind object;
  #L3f2564.  return v2 @kind object;
}
procedure `byte`[] `obtainByteArray`(`com.bumptech.glide.load.resource.gif.GifBitmapProvider` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/gif/GifBitmapProvider;.obtainByteArray:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f2578.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifBitmapProvider.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3f257c.  if v0 != 0 then goto L3f2586;
  #L3f2580.  v3:= new `byte`[v3];
  #L3f2584.  return v3 @kind object;
  #L3f2586.  v1:= constclass @type ^`byte`[] @kind object;
  #L3f258a.  call temp:= `get`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3f2590.  v3:= temp @kind object;
  #L3f2592.  v3:= (`byte`[]) v3 @kind object;
  #L3f2596.  return v3 @kind object;
}
procedure `int`[] `obtainIntArray`(`com.bumptech.glide.load.resource.gif.GifBitmapProvider` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/gif/GifBitmapProvider;.obtainIntArray:(I)[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f25a8.  v0:= v2.`com.bumptech.glide.load.resource.gif.GifBitmapProvider.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3f25ac.  if v0 != 0 then goto L3f25b6;
  #L3f25b0.  v3:= new `int`[v3];
  #L3f25b4.  return v3 @kind object;
  #L3f25b6.  v1:= constclass @type ^`int`[] @kind object;
  #L3f25ba.  call temp:= `get`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3f25c0.  v3:= temp @kind object;
  #L3f25c2.  v3:= (`int`[]) v3 @kind object;
  #L3f25c6.  return v3 @kind object;
}
procedure `void` `release`(`com.bumptech.glide.load.resource.gif.GifBitmapProvider` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifBitmapProvider;.release:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f2614.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifBitmapProvider.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3f2618.  call `put`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3f261e.  return @kind void;
}
procedure `void` `release`(`com.bumptech.glide.load.resource.gif.GifBitmapProvider` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifBitmapProvider;.release:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f2630.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifBitmapProvider.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3f2634.  if v0 != 0 then goto L3f263a;
  #L3f2638.  return @kind void;
  #L3f263a.  call `put`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3f2640.  return @kind void;
}
procedure `void` `release`(`com.bumptech.glide.load.resource.gif.GifBitmapProvider` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifBitmapProvider;.release:([I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f2654.  v0:= v1.`com.bumptech.glide.load.resource.gif.GifBitmapProvider.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3f2658.  if v0 != 0 then goto L3f265e;
  #L3f265c.  return @kind void;
  #L3f265e.  call `put`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3f2664.  return @kind void;
}
