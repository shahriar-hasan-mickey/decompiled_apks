record `com.bumptech.glide.load.resource.bitmap.VideoDecoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceDecoder` @kind interface {
  `com.bumptech.glide.load.resource.bitmap.VideoDecoder$f` `com.bumptech.glide.load.resource.bitmap.VideoDecoder.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.resource.bitmap.VideoDecoder.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.resource.bitmap.VideoDecoder$e` `com.bumptech.glide.load.resource.bitmap.VideoDecoder.c` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.DEFAULT_FRAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.Option` `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.FRAME_OPTION` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.Option` `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.TARGET_FRAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.resource.bitmap.VideoDecoder$e` `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3f1250.  v0:= -1L;
  #L3f1254.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3f125a.  v0:= temp @kind object;
  #L3f125c.  v1:= new `com.bumptech.glide.load.resource.bitmap.VideoDecoder$a`;
  #L3f1260.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$a;.<init>:()V` @kind direct;
  #L3f1266.  v2:= "com.bumptech.glide.load.resource.bitmap.VideoBitmapDecode.TargetFrame" @kind object;
  #L3f126a.  call temp:= `disk`(v2, v0, v1) @signature `Lcom/bumptech/glide/load/Option;.disk:(Ljava/lang/String;Ljava/lang/Object;Lcom/bumptech/glide/load/Option$CacheKeyUpdater;)Lcom/bumptech/glide/load/Option;` @kind static;
  #L3f1270.  v0:= temp @kind object;
  #L3f1272.  `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.TARGET_FRAME` @type ^`com.bumptech.glide.load.Option` := v0 @kind object;
  #L3f1276.  v0:= 2I;
  #L3f1278.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f127e.  v0:= temp @kind object;
  #L3f1280.  v1:= new `com.bumptech.glide.load.resource.bitmap.VideoDecoder$b`;
  #L3f1284.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$b;.<init>:()V` @kind direct;
  #L3f128a.  v2:= "com.bumptech.glide.load.resource.bitmap.VideoBitmapDecode.FrameOption" @kind object;
  #L3f128e.  call temp:= `disk`(v2, v0, v1) @signature `Lcom/bumptech/glide/load/Option;.disk:(Ljava/lang/String;Ljava/lang/Object;Lcom/bumptech/glide/load/Option$CacheKeyUpdater;)Lcom/bumptech/glide/load/Option;` @kind static;
  #L3f1294.  v0:= temp @kind object;
  #L3f1296.  `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.FRAME_OPTION` @type ^`com.bumptech.glide.load.Option` := v0 @kind object;
  #L3f129a.  v0:= new `com.bumptech.glide.load.resource.bitmap.VideoDecoder$e`;
  #L3f129e.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$e;.<init>:()V` @kind direct;
  #L3f12a4.  `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.d` @type ^`com.bumptech.glide.load.resource.bitmap.VideoDecoder$e` := v0 @kind object;
  #L3f12a8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.VideoDecoder` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object, `com.bumptech.glide.load.resource.bitmap.VideoDecoder$f` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$f;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3f12bc.  v0:= `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.d` @type ^`com.bumptech.glide.load.resource.bitmap.VideoDecoder$e` @kind object;
  #L3f12c0.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$f;Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$e;)V` @kind direct;
  #L3f12c6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.VideoDecoder` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v1 @kind object, `com.bumptech.glide.load.resource.bitmap.VideoDecoder$f` v2 @kind object, `com.bumptech.glide.load.resource.bitmap.VideoDecoder$e` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$f;Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f12d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f12de.  v0.`com.bumptech.glide.load.resource.bitmap.VideoDecoder.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v1 @kind object;
  #L3f12e2.  v0.`com.bumptech.glide.load.resource.bitmap.VideoDecoder.a` @type ^`com.bumptech.glide.load.resource.bitmap.VideoDecoder$f` := v2 @kind object;
  #L3f12e6.  v0.`com.bumptech.glide.load.resource.bitmap.VideoDecoder.c` @type ^`com.bumptech.glide.load.resource.bitmap.VideoDecoder$e` := v3 @kind object;
  #L3f12ea.  return @kind void;
}
procedure `android.graphics.Bitmap` `a`(`android.media.MediaMetadataRetriever` v2 @kind object, `long` v3 , `int` v5 , `int` v6 , `int` v7 , `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v8 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.a:(Landroid/media/MediaMetadataRetriever;JIIILcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3f0f64.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3f0f68.  v1:= 27I;
  #L3f0f6c.  if v0 < v1 then goto L3f0f8e;
  #L3f0f70.  v0:= -2147483648I;
  #L3f0f74.  if v6 == v0 then goto L3f0f8e;
  #L3f0f78.  if v7 == v0 then goto L3f0f8e;
  #L3f0f7c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.NONE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3f0f80.  if v8 == v0 then goto L3f0f8e;
  #L3f0f84.  call temp:= `c`(v2, v3, v5, v6, v7, v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.c:(Landroid/media/MediaMetadataRetriever;JIIILcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Landroid/graphics/Bitmap;` @kind static;
  #L3f0f8a.  v6:= temp @kind object;
  #L3f0f8c.  goto L3f0f90;
  #L3f0f8e.  v6:= 0I;
  #L3f0f90.  if v6 != 0 then goto L3f0f9c;
  #L3f0f94.  call temp:= `b`(v2, v3, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.b:(Landroid/media/MediaMetadataRetriever;JI)Landroid/graphics/Bitmap;` @kind static;
  #L3f0f9a.  v6:= temp @kind object;
  #L3f0f9c.  if v6 == 0 then goto L3f0fa2;
  #L3f0fa0.  return v6 @kind object;
  #L3f0fa2.  v2:= new `com.bumptech.glide.load.resource.bitmap.VideoDecoder$h`;
  #L3f0fa6.  call `<init>`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$h;.<init>:()V` @kind direct;
  #L3f0fac.  throw v2;
}
procedure `com.bumptech.glide.load.ResourceDecoder` `asset`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.asset:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/ResourceDecoder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f10b4.  v0:= new `com.bumptech.glide.load.resource.bitmap.VideoDecoder`;
  #L3f10b8.  v1:= new `com.bumptech.glide.load.resource.bitmap.VideoDecoder$c`;
  #L3f10bc.  v2:= 0I;
  #L3f10be.  call `<init>`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$c;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$a;)V` @kind direct;
  #L3f10c4.  call `<init>`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$f;)V` @kind direct;
  #L3f10ca.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `b`(`android.media.MediaMetadataRetriever` v0 @kind object, `long` v1 , `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.b:(Landroid/media/MediaMetadataRetriever;JI)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3f0fc0.  call temp:= `getFrameAtTime`(v0, v1, v3) @signature `Landroid/media/MediaMetadataRetriever;.getFrameAtTime:(JI)Landroid/graphics/Bitmap;` @kind virtual;
  #L3f0fc6.  v0:= temp @kind object;
  #L3f0fc8.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.ResourceDecoder` `byteBuffer`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.byteBuffer:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/ResourceDecoder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f10dc.  v0:= new `com.bumptech.glide.load.resource.bitmap.VideoDecoder`;
  #L3f10e0.  v1:= new `com.bumptech.glide.load.resource.bitmap.VideoDecoder$d`;
  #L3f10e4.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$d;.<init>:()V` @kind direct;
  #L3f10ea.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$f;)V` @kind direct;
  #L3f10f0.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `c`(`android.media.MediaMetadataRetriever` v9 @kind object, `long` v10 , `int` v12 , `int` v13 , `int` v14 , `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v15 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.c:(Landroid/media/MediaMetadataRetriever;JIIILcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f0fdc.  v0:= 18I;
  #L3f0fe0.  call temp:= `extractMetadata`(v9, v0) @signature `Landroid/media/MediaMetadataRetriever;.extractMetadata:(I)Ljava/lang/String;` @kind virtual;
  #L3f0fe6.  v0:= temp @kind object;
  #L3f0fe8.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3f0fee.  v0:= temp;
  #L3f0ff0.  v1:= 19I;
  #L3f0ff4.  call temp:= `extractMetadata`(v9, v1) @signature `Landroid/media/MediaMetadataRetriever;.extractMetadata:(I)Ljava/lang/String;` @kind virtual;
  #L3f0ffa.  v1:= temp @kind object;
  #L3f0ffc.  call temp:= `parseInt`(v1) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3f1002.  v1:= temp;
  #L3f1004.  v2:= 24I;
  #L3f1008.  call temp:= `extractMetadata`(v9, v2) @signature `Landroid/media/MediaMetadataRetriever;.extractMetadata:(I)Ljava/lang/String;` @kind virtual;
  #L3f100e.  v2:= temp @kind object;
  #L3f1010.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3f1016.  v2:= temp;
  #L3f1018.  v3:= 90I;
  #L3f101c.  if v2 == v3 then goto L3f1028;
  #L3f1020.  v3:= 270I;
  #L3f1024.  if v2 != v3 then goto L3f102e;
  #L3f1028.  v8:= v1;
  #L3f102a.  v1:= v0;
  #L3f102c.  v0:= v8;
  #L3f102e.  call temp:= `getScaleFactor`(v15, v0, v1, v13, v14) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;.getScaleFactor:(IIII)F` @kind virtual;
  #L3f1034.  v13:= temp;
  #L3f1036.  v14:= (`float`) v0 @kind i2f;
  #L3f1038.  v14:= v14 * v13 @kind float;
  #L3f103c.  call temp:= `round`(v14) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3f1042.  v6:= temp;
  #L3f1044.  v14:= (`float`) v1 @kind i2f;
  #L3f1046.  v13:= v13 * v14 @kind float;
  #L3f104a.  call temp:= `round`(v13) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3f1050.  v7:= temp;
  #L3f1052.  v2:= v9 @kind object;
  #L3f1054.  v3:= v10 @kind wide;
  #L3f1056.  v5:= v12;
  #L3f1058.  call temp:= `getScaledFrameAtTime`(v2, v3, v5, v6, v7) @signature `Landroid/media/MediaMetadataRetriever;.getScaledFrameAtTime:(JIII)Landroid/graphics/Bitmap;` @kind virtual;
  #L3f105e.  v9:= temp @kind object;
  #L3f1060.  return v9 @kind object;
  #L3f1062.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f1064.  v10:= 3I;
  #L3f1066.  v11:= "VideoDecoder" @kind object;
  #L3f106a.  call temp:= `isLoggable`(v11, v10) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3f1070.  v10:= temp;
  #L3f1072.  if v10 == 0 then goto L3f1080;
  #L3f1076.  v10:= "Exception trying to decode a scaled frame on oreo+, falling back to a fullsize frame" @kind object;
  #L3f107a.  call temp:= `d`(v11, v10, v9) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3f1080.  v9:= 0I;
  #L3f1082.  return v9 @kind object;
  catch `java.lang.Throwable` @[L3f0fe0..L3f1060] goto L3f1062;
}
procedure `com.bumptech.glide.load.ResourceDecoder` `parcel`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.parcel:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/ResourceDecoder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f1104.  v0:= new `com.bumptech.glide.load.resource.bitmap.VideoDecoder`;
  #L3f1108.  v1:= new `com.bumptech.glide.load.resource.bitmap.VideoDecoder$g`;
  #L3f110c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$g;.<init>:()V` @kind direct;
  #L3f1112.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$f;)V` @kind direct;
  #L3f1118.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.VideoDecoder` v9 @kind this, `java.lang.Object` v10 @kind object, `int` v11 , `int` v12 , `com.bumptech.glide.load.Options` v13 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f112c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.TARGET_FRAME` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f1130.  call temp:= `get`(v13, v0) @signature `Lcom/bumptech/glide/load/Options;.get:(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;` @kind virtual;
  #L3f1136.  v0:= temp @kind object;
  #L3f1138.  v0:= (`java.lang.Long`) v0 @kind object;
  #L3f113c.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3f1142.  v2:= temp @kind wide;
  #L3f1144.  v0:= 0L;
  #L3f1148.  v4:= lcmp(v2, v0);
  #L3f114c.  if v4 >= 0 then goto L3f118c;
  #L3f1150.  v0:= -1L;
  #L3f1154.  v4:= lcmp(v2, v0);
  #L3f1158.  if v4 != 0 then goto L3f115e;
  #L3f115c.  goto L3f118c;
  #L3f115e.  v10:= new `java.lang.IllegalArgumentException`;
  #L3f1162.  v11:= new `java.lang.StringBuilder`;
  #L3f1166.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f116c.  v12:= "Requested frame must be non-negative, or DEFAULT_FRAME, given: " @kind object;
  #L3f1170.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1176.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f117c.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f1182.  v11:= temp @kind object;
  #L3f1184.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f118a.  throw v10;
  #L3f118c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.FRAME_OPTION` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f1190.  call temp:= `get`(v13, v0) @signature `Lcom/bumptech/glide/load/Options;.get:(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;` @kind virtual;
  #L3f1196.  v0:= temp @kind object;
  #L3f1198.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3f119c.  if v0 != 0 then goto L3f11aa;
  #L3f11a0.  v0:= 2I;
  #L3f11a2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f11a8.  v0:= temp @kind object;
  #L3f11aa.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.OPTION` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f11ae.  call temp:= `get`(v13, v1) @signature `Lcom/bumptech/glide/load/Options;.get:(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;` @kind virtual;
  #L3f11b4.  v13:= temp @kind object;
  #L3f11b6.  v13:= (`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy`) v13 @kind object;
  #L3f11ba.  if v13 != 0 then goto L3f11c2;
  #L3f11be.  v13:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.DEFAULT` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3f11c2.  v7:= v13 @kind object;
  #L3f11c4.  v13:= v9.`com.bumptech.glide.load.resource.bitmap.VideoDecoder.c` @type ^`com.bumptech.glide.load.resource.bitmap.VideoDecoder$e` @kind object;
  #L3f11c8.  call temp:= `a`(v13) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$e;.a:()Landroid/media/MediaMetadataRetriever;` @kind virtual;
  #L3f11ce.  v13:= temp @kind object;
  #L3f11d0.  v8:= 29I;
  #L3f11d4.  v1:= v9.`com.bumptech.glide.load.resource.bitmap.VideoDecoder.a` @type ^`com.bumptech.glide.load.resource.bitmap.VideoDecoder$f` @kind object;
  #L3f11d8.  call `a`(v1, v13, v10) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder$f;.a:(Landroid/media/MediaMetadataRetriever;Ljava/lang/Object;)V` @kind interface;
  #L3f11de.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3f11e4.  v4:= temp;
  #L3f11e6.  v1:= v13 @kind object;
  #L3f11e8.  v5:= v11;
  #L3f11ea.  v6:= v12;
  #L3f11ec.  call temp:= `a`(v1, v2, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.a:(Landroid/media/MediaMetadataRetriever;JIIILcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Landroid/graphics/Bitmap;` @kind static;
  #L3f11f2.  v10:= temp @kind object;
  #L3f11f4.  v11:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3f11f8.  if v11 < v8 then goto L3f1204;
  #L3f11fc.  call `close`(v13) @signature `Landroid/media/MediaMetadataRetriever;.close:()V` @kind virtual;
  #L3f1202.  goto L3f120a;
  #L3f1204.  call `release`(v13) @signature `Landroid/media/MediaMetadataRetriever;.release:()V` @kind virtual;
  #L3f120a.  v11:= v9.`com.bumptech.glide.load.resource.bitmap.VideoDecoder.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3f120e.  call temp:= `obtain`(v10, v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.obtain:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;` @kind static;
  #L3f1214.  v10:= temp @kind object;
  #L3f1216.  return v10 @kind object;
  #L3f1218.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f121a.  v11:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3f121e.  if v11 < v8 then goto L3f122a;
  #L3f1222.  call `close`(v13) @signature `Landroid/media/MediaMetadataRetriever;.close:()V` @kind virtual;
  #L3f1228.  goto L3f1230;
  #L3f122a.  call `release`(v13) @signature `Landroid/media/MediaMetadataRetriever;.release:()V` @kind virtual;
  #L3f1230.  throw v10;
  catch `java.lang.Throwable` @[L3f11d4..L3f11f4] goto L3f1218;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.VideoDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/VideoDecoder;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC {
    temp;

  #L3f10a0.  v1:= 1I;
  #L3f10a2.  return v1;
}
