record `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind class @AccessFlag PUBLIC extends `java.io.FilterInputStream` @kind class {
  `byte`[] `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @AccessFlag PRIVATE_VOLATILE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this, `java.io.InputStream` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ef844.  v0:= 65536I;
  #L3ef848.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;I)V` @kind direct;
  #L3ef84e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ef860.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3ef866.  v1:= -1I;
  #L3ef868.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v1;
  #L3ef86c.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v2 @kind object;
  #L3ef870.  v1:= constclass @type ^`byte`[] @kind object;
  #L3ef874.  call temp:= `get`(v2, v3, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3ef87a.  v1:= temp @kind object;
  #L3ef87c.  v1:= (`byte`[]) v1 @kind object;
  #L3ef880.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v1 @kind object;
  #L3ef884.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v5 @kind this, `java.io.InputStream` v6 @kind object, `byte`[] v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ef3f8.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3ef3fc.  v1:= -1I;
  #L3ef3fe.  v2:= 0I;
  #L3ef400.  if v0 == v1 then goto L3ef4a6;
  #L3ef404.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef408.  v3:= v3 - v0 @kind int;
  #L3ef40a.  v4:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L3ef40e.  if v3 < v4 then goto L3ef414;
  #L3ef412.  goto L3ef4a6;
  #L3ef414.  if v0 != 0 then goto L3ef464;
  #L3ef418.  v1:= length @variable v7;
  #L3ef41a.  if v4 <= v1 then goto L3ef464;
  #L3ef41e.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3ef422.  v3:= length @variable v7;
  #L3ef424.  if v1 != v3 then goto L3ef464;
  #L3ef428.  v0:= length @variable v7;
  #L3ef42a.  v0:= v0 * 2;
  #L3ef42e.  if v0 <= v4 then goto L3ef434;
  #L3ef432.  goto L3ef436;
  #L3ef434.  v4:= v0;
  #L3ef436.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3ef43a.  v1:= constclass @type ^`byte`[] @kind object;
  #L3ef43e.  call temp:= `get`(v0, v4, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3ef444.  v0:= temp @kind object;
  #L3ef446.  v0:= (`byte`[]) v0 @kind object;
  #L3ef44a.  v1:= length @variable v7;
  #L3ef44c.  call `arraycopy`(v7, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ef452.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v0 @kind object;
  #L3ef456.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3ef45a.  call `put`(v1, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3ef460.  v7:= v0 @kind object;
  #L3ef462.  goto L3ef472;
  #L3ef464.  if v0 <= 0 then goto L3ef472;
  #L3ef468.  v1:= length @variable v7;
  #L3ef46a.  v1:= v1 - v0 @kind int;
  #L3ef46c.  call `arraycopy`(v7, v0, v7, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ef472.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef476.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3ef47a.  v0:= v0 - v1 @kind int;
  #L3ef47c.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v0;
  #L3ef480.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v2;
  #L3ef484.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int` := v2;
  #L3ef488.  v1:= length @variable v7;
  #L3ef48a.  v1:= v1 - v0 @kind int;
  #L3ef48c.  call temp:= `read`(v6, v7, v0, v1) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3ef492.  v6:= temp;
  #L3ef494.  v7:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef498.  if v6 > 0 then goto L3ef49e;
  #L3ef49c.  goto L3ef4a0;
  #L3ef49e.  v7:= v7 + v6 @kind int;
  #L3ef4a0.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int` := v7;
  #L3ef4a4.  return v6;
  #L3ef4a6.  call temp:= `read`(v6, v7) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L3ef4ac.  v6:= temp;
  #L3ef4ae.  if v6 <= 0 then goto L3ef4be;
  #L3ef4b2.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v1;
  #L3ef4b6.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v2;
  #L3ef4ba.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int` := v6;
  #L3ef4be.  return v6;
}
procedure `java.io.IOException` `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3ef6f4.  v0:= new `java.io.IOException`;
  #L3ef6f8.  v1:= "BufferedInputStream is closed" @kind object;
  #L3ef6fc.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ef702.  throw v0;
}
procedure `int` `available`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ef398.  @monitorenter v3
  #L3ef39a.  v0:= v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3ef39e.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef3a2.  if v1 == 0 then goto L3ef3c2;
  #L3ef3a6.  if v0 == 0 then goto L3ef3c2;
  #L3ef3aa.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3ef3ae.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef3b2.  v1:= v1 - v2 @kind int;
  #L3ef3b4.  call temp:= `available`(v0) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3ef3ba.  v0:= temp;
  #L3ef3bc.  v1:= v1 + v0 @kind int;
  #L3ef3be.  @monitorexit v3
  #L3ef3c0.  return v1;
  #L3ef3c2.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3ef3c8.  v0:= temp @kind object;
  #L3ef3ca.  throw v0;
  #L3ef3cc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ef3ce.  @monitorexit v3
  #L3ef3d0.  throw v0;
  catch `java.lang.Throwable` @[L3ef39a..L3ef3bc] goto L3ef3cc;
  catch `java.lang.Throwable` @[L3ef3c2..L3ef3cc] goto L3ef3cc;
}
procedure `void` `close`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ef898.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef89c.  v1:= 0I;
  #L3ef89e.  if v0 == 0 then goto L3ef8b4;
  #L3ef8a2.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3ef8a6.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef8aa.  call `put`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3ef8b0.  v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v1 @kind object;
  #L3ef8b4.  v0:= v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3ef8b8.  v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` := v1 @kind object;
  #L3ef8bc.  if v0 == 0 then goto L3ef8c6;
  #L3ef8c0.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3ef8c6.  return @kind void;
}
procedure `void` `fixMarkLimit`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.fixMarkLimit:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef8d8.  @monitorenter v1
  #L3ef8da.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef8de.  v0:= length @variable v0;
  #L3ef8e0.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int` := v0;
  #L3ef8e4.  @monitorexit v1
  #L3ef8e6.  return @kind void;
  #L3ef8e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ef8ea.  @monitorexit v1
  #L3ef8ec.  throw v0;
  catch `java.lang.Throwable` @[L3ef8da..L3ef8e4] goto L3ef8e8;
}
procedure `void` `mark`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.mark:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef90c.  @monitorenter v1
  #L3ef90e.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L3ef912.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ef918.  v2:= temp;
  #L3ef91a.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int` := v2;
  #L3ef91e.  v2:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef922.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v2;
  #L3ef926.  @monitorexit v1
  #L3ef928.  return @kind void;
  #L3ef92a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ef92c.  @monitorexit v1
  #L3ef92e.  throw v2;
  catch `java.lang.Throwable` @[L3ef90e..L3ef926] goto L3ef92a;
}
procedure `boolean` `markSupported`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef384.  v0:= 1I;
  #L3ef386.  return v0;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v5 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ef4d0.  @monitorenter v5
  #L3ef4d2.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef4d6.  v1:= v5.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3ef4da.  if v0 == 0 then goto L3ef542;
  #L3ef4de.  if v1 == 0 then goto L3ef542;
  #L3ef4e2.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef4e6.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3ef4ea.  v4:= -1I;
  #L3ef4ec.  if v2 < v3 then goto L3ef500;
  #L3ef4f0.  call temp:= `a`(v5, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @kind direct;
  #L3ef4f6.  v1:= temp;
  #L3ef4f8.  if v1 != v4 then goto L3ef500;
  #L3ef4fc.  @monitorexit v5
  #L3ef4fe.  return v4;
  #L3ef500.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef504.  if v0 == v1 then goto L3ef51c;
  #L3ef508.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef50c.  if v0 == 0 then goto L3ef512;
  #L3ef510.  goto L3ef51c;
  #L3ef512.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3ef518.  v0:= temp @kind object;
  #L3ef51a.  throw v0;
  #L3ef51c.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3ef520.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef524.  v1:= v1 - v2 @kind int;
  #L3ef526.  if v1 <= 0 then goto L3ef53e;
  #L3ef52a.  v1:= v2 + 1;
  #L3ef52e.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L3ef532.  v0:= v0[v2] @kind byte;
  #L3ef536.  v0:= v0 ^& 255;
  #L3ef53a.  @monitorexit v5
  #L3ef53c.  return v0;
  #L3ef53e.  @monitorexit v5
  #L3ef540.  return v4;
  #L3ef542.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3ef548.  v0:= temp @kind object;
  #L3ef54a.  throw v0;
  #L3ef54c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ef54e.  @monitorexit v5
  #L3ef550.  throw v0;
  catch `java.lang.Throwable` @[L3ef4d2..L3ef4f8] goto L3ef54c;
  catch `java.lang.Throwable` @[L3ef500..L3ef536] goto L3ef54c;
  catch `java.lang.Throwable` @[L3ef542..L3ef54c] goto L3ef54c;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ef580.  @monitorenter v6
  #L3ef582.  v0:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef586.  if v0 == 0 then goto L3ef696;
  #L3ef58a.  if v9 != 0 then goto L3ef594;
  #L3ef58e.  v7:= 0I;
  #L3ef590.  @monitorexit v6
  #L3ef592.  return v7;
  #L3ef594.  v1:= v6.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3ef598.  if v1 == 0 then goto L3ef68c;
  #L3ef59c.  v2:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef5a0.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3ef5a4.  if v2 >= v3 then goto L3ef5e4;
  #L3ef5a8.  v4:= v3 - v2 @kind int;
  #L3ef5ac.  if v4 < v9 then goto L3ef5b4;
  #L3ef5b0.  v3:= v9;
  #L3ef5b2.  goto L3ef5b6;
  #L3ef5b4.  v3:= v3 - v2 @kind int;
  #L3ef5b6.  call `arraycopy`(v0, v2, v7, v8, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ef5bc.  v2:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef5c0.  v2:= v2 + v3 @kind int;
  #L3ef5c2.  v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v2;
  #L3ef5c6.  if v3 == v9 then goto L3ef5e0;
  #L3ef5ca.  call temp:= `available`(v1) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3ef5d0.  v2:= temp;
  #L3ef5d2.  if v2 != 0 then goto L3ef5d8;
  #L3ef5d6.  goto L3ef5e0;
  #L3ef5d8.  v8:= v8 + v3 @kind int;
  #L3ef5da.  v2:= v9 - v3 @kind int;
  #L3ef5de.  goto L3ef5e6;
  #L3ef5e0.  @monitorexit v6
  #L3ef5e2.  return v3;
  #L3ef5e4.  v2:= v9;
  #L3ef5e6.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3ef5ea.  v4:= -1I;
  #L3ef5ec.  if v3 != v4 then goto L3ef610;
  #L3ef5f0.  v3:= length @variable v0;
  #L3ef5f2.  if v2 < v3 then goto L3ef610;
  #L3ef5f6.  call temp:= `read`(v1, v7, v8, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3ef5fc.  v3:= temp;
  #L3ef5fe.  if v3 != v4 then goto L3ef66c;
  #L3ef602.  if v2 != v9 then goto L3ef608;
  #L3ef606.  goto L3ef60c;
  #L3ef608.  v4:= v9 - v2 @kind int;
  #L3ef60c.  @monitorexit v6
  #L3ef60e.  return v4;
  #L3ef610.  call temp:= `a`(v6, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @kind direct;
  #L3ef616.  v3:= temp;
  #L3ef618.  if v3 != v4 then goto L3ef62a;
  #L3ef61c.  if v2 != v9 then goto L3ef622;
  #L3ef620.  goto L3ef626;
  #L3ef622.  v4:= v9 - v2 @kind int;
  #L3ef626.  @monitorexit v6
  #L3ef628.  return v4;
  #L3ef62a.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef62e.  if v0 == v3 then goto L3ef646;
  #L3ef632.  v0:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef636.  if v0 == 0 then goto L3ef63c;
  #L3ef63a.  goto L3ef646;
  #L3ef63c.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3ef642.  v7:= temp @kind object;
  #L3ef644.  throw v7;
  #L3ef646.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3ef64a.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef64e.  v5:= v3 - v4 @kind int;
  #L3ef652.  if v5 < v2 then goto L3ef65a;
  #L3ef656.  v3:= v2;
  #L3ef658.  goto L3ef65c;
  #L3ef65a.  v3:= v3 - v4 @kind int;
  #L3ef65c.  call `arraycopy`(v0, v4, v7, v8, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ef662.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef666.  v4:= v4 + v3 @kind int;
  #L3ef668.  v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v4;
  #L3ef66c.  v2:= v2 - v3 @kind int;
  #L3ef66e.  if v2 != 0 then goto L3ef676;
  #L3ef672.  @monitorexit v6
  #L3ef674.  return v9;
  #L3ef676.  call temp:= `available`(v1) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3ef67c.  v4:= temp;
  #L3ef67e.  if v4 != 0 then goto L3ef688;
  #L3ef682.  v9:= v9 - v2 @kind int;
  #L3ef684.  @monitorexit v6
  #L3ef686.  return v9;
  #L3ef688.  v8:= v8 + v3 @kind int;
  #L3ef68a.  goto L3ef5e6;
  #L3ef68c.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3ef692.  v7:= temp @kind object;
  #L3ef694.  throw v7;
  #L3ef696.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3ef69c.  v7:= temp @kind object;
  #L3ef69e.  throw v7;
  #L3ef6a0.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ef6a2.  @monitorexit v6
  #L3ef6a4.  throw v7;
  catch `java.lang.Throwable` @[L3ef582..L3ef586] goto L3ef6a0;
  catch `java.lang.Throwable` @[L3ef594..L3ef5d2] goto L3ef6a0;
  catch `java.lang.Throwable` @[L3ef5e6..L3ef5fe] goto L3ef6a0;
  catch `java.lang.Throwable` @[L3ef610..L3ef618] goto L3ef6a0;
  catch `java.lang.Throwable` @[L3ef62a..L3ef66c] goto L3ef6a0;
  catch `java.lang.Throwable` @[L3ef676..L3ef67e] goto L3ef6a0;
  catch `java.lang.Throwable` @[L3ef68c..L3ef6a0] goto L3ef6a0;
}
procedure `void` `release`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.release:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ef94c.  @monitorenter v2
  #L3ef94e.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef952.  if v0 == 0 then goto L3ef96a;
  #L3ef956.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3ef95a.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef95e.  call `put`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3ef964.  v0:= 0I;
  #L3ef966.  v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v0 @kind object;
  #L3ef96a.  @monitorexit v2
  #L3ef96c.  return @kind void;
  #L3ef96e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ef970.  @monitorexit v2
  #L3ef972.  throw v0;
  catch `java.lang.Throwable` @[L3ef94e..L3ef96a] goto L3ef96e;
}
procedure `void` `reset`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ef990.  @monitorenter v3
  #L3ef992.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef996.  if v0 == 0 then goto L3ef9f2;
  #L3ef99a.  v0:= -1I;
  #L3ef99c.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3ef9a0.  if v0 == v1 then goto L3ef9ac;
  #L3ef9a4.  v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L3ef9a8.  @monitorexit v3
  #L3ef9aa.  return @kind void;
  #L3ef9ac.  v0:= new `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$a`;
  #L3ef9b0.  v1:= new `java.lang.StringBuilder`;
  #L3ef9b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ef9ba.  v2:= "Mark has been invalidated, pos: " @kind object;
  #L3ef9be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef9c4.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef9c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef9ce.  v2:= " markLimit: " @kind object;
  #L3ef9d2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef9d8.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L3ef9dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef9e2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ef9e8.  v1:= temp @kind object;
  #L3ef9ea.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ef9f0.  throw v0;
  #L3ef9f2.  v0:= new `java.io.IOException`;
  #L3ef9f6.  v1:= "Stream is closed" @kind object;
  #L3ef9fa.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3efa00.  throw v0;
  #L3efa02.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3efa04.  @monitorexit v3
  #L3efa06.  throw v0;
  catch `java.lang.Throwable` @[L3ef992..L3ef9a8] goto L3efa02;
  catch `java.lang.Throwable` @[L3ef9ac..L3efa02] goto L3efa02;
}
procedure `long` `skip`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v10 @kind this, `long` v11 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3ef714.  @monitorenter v10
  #L3ef716.  v0:= 1L;
  #L3ef71a.  v2:= 0L;
  #L3ef71e.  v4:= lcmp(v11, v0);
  #L3ef722.  if v4 >= 0 then goto L3ef72a;
  #L3ef726.  @monitorexit v10
  #L3ef728.  return v2 @kind wide;
  #L3ef72a.  v0:= v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3ef72e.  if v0 == 0 then goto L3ef7f0;
  #L3ef732.  v1:= v10.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3ef736.  if v1 == 0 then goto L3ef7e6;
  #L3ef73a.  v4:= v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3ef73e.  v5:= v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef742.  v6:= v4 - v5 @kind int;
  #L3ef746.  v6:= (`long`) v6 @kind i2l;
  #L3ef748.  v8:= lcmp(v6, v11);
  #L3ef74c.  if v8 < 0 then goto L3ef75e;
  #L3ef750.  v0:= (`long`) v5 @kind i2l;
  #L3ef752.  v0:= v0 + v11 @kind long;
  #L3ef754.  v1:= (`int`) v0 @kind l2i;
  #L3ef756.  v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L3ef75a.  @monitorexit v10
  #L3ef75c.  return v11 @kind wide;
  #L3ef75e.  v6:= (`long`) v4 @kind i2l;
  #L3ef760.  v8:= (`long`) v5 @kind i2l;
  #L3ef762.  v6:= v6 - v8 @kind long;
  #L3ef764.  v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v4;
  #L3ef768.  v4:= v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3ef76c.  v5:= -1I;
  #L3ef76e.  if v4 == v5 then goto L3ef7ca;
  #L3ef772.  v4:= v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L3ef776.  v8:= (`long`) v4 @kind i2l;
  #L3ef778.  v4:= lcmp(v11, v8);
  #L3ef77c.  if v4 > 0 then goto L3ef7ca;
  #L3ef780.  call temp:= `a`(v10, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @kind direct;
  #L3ef786.  v0:= temp;
  #L3ef788.  if v0 != v5 then goto L3ef790;
  #L3ef78c.  @monitorexit v10
  #L3ef78e.  return v6 @kind wide;
  #L3ef790.  v0:= v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3ef794.  v1:= v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3ef798.  v2:= v0 - v1 @kind int;
  #L3ef79c.  v2:= (`long`) v2 @kind i2l;
  #L3ef79e.  v4:= v11 - v6 @kind long;
  #L3ef7a2.  v8:= lcmp(v2, v4);
  #L3ef7a6.  if v8 < 0 then goto L3ef7ba;
  #L3ef7aa.  v0:= (`long`) v1 @kind i2l;
  #L3ef7ac.  v0:= v0 + v11 @kind long;
  #L3ef7ae.  v0:= v0 - v6 @kind long;
  #L3ef7b0.  v1:= (`int`) v0 @kind l2i;
  #L3ef7b2.  v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L3ef7b6.  @monitorexit v10
  #L3ef7b8.  return v11 @kind wide;
  #L3ef7ba.  v11:= (`long`) v0 @kind i2l;
  #L3ef7bc.  v6:= v6 + v11 @kind long;
  #L3ef7be.  v11:= (`long`) v1 @kind i2l;
  #L3ef7c0.  v6:= v6 - v11 @kind long;
  #L3ef7c2.  v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v0;
  #L3ef7c6.  @monitorexit v10
  #L3ef7c8.  return v6 @kind wide;
  #L3ef7ca.  v11:= v11 - v6 @kind long;
  #L3ef7cc.  call temp:= `skip`(v1, v11) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L3ef7d2.  v11:= temp @kind wide;
  #L3ef7d4.  v0:= lcmp(v11, v2);
  #L3ef7d8.  if v0 <= 0 then goto L3ef7e0;
  #L3ef7dc.  v10.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v5;
  #L3ef7e0.  v6:= v6 + v11 @kind long;
  #L3ef7e2.  @monitorexit v10
  #L3ef7e4.  return v6 @kind wide;
  #L3ef7e6.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3ef7ec.  v11:= temp @kind object;
  #L3ef7ee.  throw v11;
  #L3ef7f0.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3ef7f6.  v11:= temp @kind object;
  #L3ef7f8.  throw v11;
  #L3ef7fa.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ef7fc.  @monitorexit v10
  #L3ef7fe.  throw v11;
  catch `java.lang.Throwable` @[L3ef72a..L3ef75a] goto L3ef7fa;
  catch `java.lang.Throwable` @[L3ef764..L3ef788] goto L3ef7fa;
  catch `java.lang.Throwable` @[L3ef790..L3ef7b6] goto L3ef7fa;
  catch `java.lang.Throwable` @[L3ef7c2..L3ef7c6] goto L3ef7fa;
  catch `java.lang.Throwable` @[L3ef7cc..L3ef7e0] goto L3ef7fa;
  catch `java.lang.Throwable` @[L3ef7e6..L3ef7fa] goto L3ef7fa;
}
