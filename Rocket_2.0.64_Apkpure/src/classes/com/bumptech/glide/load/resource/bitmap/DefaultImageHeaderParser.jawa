record `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.ImageHeaderParser` @kind interface {
}
global `byte`[] `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @AccessFlag STATIC_FINAL;
global `int`[] `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ec958.  v0:= "UTF-8" @kind object;
  #L3ec95c.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3ec962.  v0:= temp @kind object;
  #L3ec964.  v1:= "Exif\u0000\u0000" @kind object;
  #L3ec968.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3ec96e.  v0:= temp @kind object;
  #L3ec970.  `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] := v0 @kind object;
  #L3ec974.  v0:= 13I;
  #L3ec978.  v0:= new `int`[v0];
  #L3ec97c.  goto L3ec988;
  #L3ec982.  `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @type ^`int`[] := v0 @kind object;
  #L3ec986.  return @kind void;
  #L3ec988.  v0:= (0I, 1I, 1I, 2I, 4I, 8I, 1I, 1I, 2I, 4I, 8I, 4I, 8I) @kind object;
  #L3ec9c3.  goto L3ec982;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ec9d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ec9da.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3ec3a0.  v0:= v0 + 2;
  #L3ec3a4.  v1:= v1 * 12;
  #L3ec3a8.  v0:= v0 + v1 @kind int;
  #L3ec3aa.  return v0;
}
procedure `int` `b`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v5 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v6 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.b:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ec3bc.  v0:= -1I;
  #L3ec3be.  call temp:= `a`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec3c4.  v1:= temp;
  #L3ec3c6.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.d:(I)Z` @kind static;
  #L3ec3cc.  v2:= temp;
  #L3ec3ce.  v3:= 3I;
  #L3ec3d0.  v4:= "DfltImageHeaderParser" @kind object;
  #L3ec3d4.  if v2 != 0 then goto L3ec40e;
  #L3ec3d8.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec3de.  v6:= temp;
  #L3ec3e0.  if v6 == 0 then goto L3ec40c;
  #L3ec3e4.  v6:= new `java.lang.StringBuilder`;
  #L3ec3e8.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec3ee.  v7:= "Parser doesn't handle magic number: " @kind object;
  #L3ec3f2.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec3f8.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec3fe.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec404.  v6:= temp @kind object;
  #L3ec406.  call temp:= `d`(v4, v6) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec40c.  return v0;
  #L3ec40e.  call temp:= `f`(v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.f:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)I` @kind direct;
  #L3ec414.  v1:= temp;
  #L3ec416.  if v1 != v0 then goto L3ec432;
  #L3ec41a.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec420.  v6:= temp;
  #L3ec422.  if v6 == 0 then goto L3ec430;
  #L3ec426.  v6:= "Failed to parse exif segment length, or exif segment not found" @kind object;
  #L3ec42a.  call temp:= `d`(v4, v6) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec430.  return v0;
  #L3ec432.  v2:= constclass @type ^`byte`[] @kind object;
  #L3ec436.  call temp:= `get`(v7, v1, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3ec43c.  v2:= temp @kind object;
  #L3ec43e.  v2:= (`byte`[]) v2 @kind object;
  #L3ec442.  call temp:= `h`(v5, v6, v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.h:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;[BI)I` @kind direct;
  #L3ec448.  v6:= temp;
  #L3ec44a.  call `put`(v7, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3ec450.  return v6;
  #L3ec452.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec454.  call `put`(v7, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3ec45a.  throw v6;
  #L3ec45c.  return v0;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3ec3be..L3ec3ce] goto L3ec45c;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3ec3d8..L3ec442] goto L3ec45c;
  catch `java.lang.Throwable` @[L3ec442..L3ec44a] goto L3ec452;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3ec44a..L3ec45c] goto L3ec45c;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `c`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v5 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.c:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ec1a4.  call temp:= `a`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec1aa.  v0:= temp;
  #L3ec1ac.  v1:= 65496I;
  #L3ec1b2.  if v0 != v1 then goto L3ec1bc;
  #L3ec1b6.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec1ba.  return v6 @kind object;
  #L3ec1bc.  v0:= v0 ^< 8;
  #L3ec1c0.  call temp:= `c`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.c:()S` @kind interface;
  #L3ec1c6.  v1:= temp;
  #L3ec1c8.  v0:= v0 ^| v1 @kind int;
  #L3ec1ca.  v1:= 4671814I;
  #L3ec1d0.  if v0 != v1 then goto L3ec1da;
  #L3ec1d4.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec1d8.  return v6 @kind object;
  #L3ec1da.  v0:= v0 ^< 8;
  #L3ec1de.  call temp:= `c`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.c:()S` @kind interface;
  #L3ec1e4.  v1:= temp;
  #L3ec1e6.  v0:= v0 ^| v1 @kind int;
  #L3ec1e8.  v1:= -1991225785I;
  #L3ec1ee.  if v0 != v1 then goto L3ec21c;
  #L3ec1f2.  v0:= 21L;
  #L3ec1f6.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3ec1fc.  call temp:= `c`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.c:()S` @kind interface;
  #L3ec202.  v6:= temp;
  #L3ec204.  v0:= 3I;
  #L3ec206.  if v6 < v0 then goto L3ec210;
  #L3ec20a.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec20e.  goto L3ec214;
  #L3ec210.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec214.  return v6 @kind object;
  #L3ec216.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec21a.  return v6 @kind object;
  #L3ec21c.  v1:= 1380533830I;
  #L3ec222.  if v0 == v1 then goto L3ec23e;
  #L3ec226.  call temp:= `i`(v5, v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.i:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;I)Z` @kind direct;
  #L3ec22c.  v6:= temp;
  #L3ec22e.  if v6 == 0 then goto L3ec238;
  #L3ec232.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.AVIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec236.  goto L3ec23c;
  #L3ec238.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec23c.  return v6 @kind object;
  #L3ec23e.  v0:= 4L;
  #L3ec242.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3ec248.  call temp:= `a`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec24e.  v2:= temp;
  #L3ec250.  v2:= v2 ^< 16;
  #L3ec254.  call temp:= `a`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec25a.  v3:= temp;
  #L3ec25c.  v2:= v2 ^| v3 @kind int;
  #L3ec25e.  v3:= 1464156752I;
  #L3ec264.  if v2 == v3 then goto L3ec26e;
  #L3ec268.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec26c.  return v6 @kind object;
  #L3ec26e.  call temp:= `a`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec274.  v2:= temp;
  #L3ec276.  v2:= v2 ^< 16;
  #L3ec27a.  call temp:= `a`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec280.  v3:= temp;
  #L3ec282.  v2:= v2 ^| v3 @kind int;
  #L3ec284.  v3:= v2 ^& -256;
  #L3ec288.  v4:= 1448097792I;
  #L3ec28e.  if v3 == v4 then goto L3ec298;
  #L3ec292.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec296.  return v6 @kind object;
  #L3ec298.  v2:= v2 ^& 255;
  #L3ec29c.  v3:= 88I;
  #L3ec2a0.  if v2 != v3 then goto L3ec2d4;
  #L3ec2a4.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3ec2aa.  call temp:= `c`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.c:()S` @kind interface;
  #L3ec2b0.  v6:= temp;
  #L3ec2b2.  v0:= v6 ^& 2;
  #L3ec2b6.  if v0 == 0 then goto L3ec2c0;
  #L3ec2ba.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.ANIMATED_WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec2be.  return v6 @kind object;
  #L3ec2c0.  v6:= v6 ^& 16;
  #L3ec2c4.  if v6 == 0 then goto L3ec2ce;
  #L3ec2c8.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec2cc.  return v6 @kind object;
  #L3ec2ce.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec2d2.  return v6 @kind object;
  #L3ec2d4.  v3:= 76I;
  #L3ec2d8.  if v2 != v3 then goto L3ec2fe;
  #L3ec2dc.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3ec2e2.  call temp:= `c`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.c:()S` @kind interface;
  #L3ec2e8.  v6:= temp;
  #L3ec2ea.  v6:= v6 ^& 8;
  #L3ec2ee.  if v6 == 0 then goto L3ec2f8;
  #L3ec2f2.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec2f6.  goto L3ec2fc;
  #L3ec2f8.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec2fc.  return v6 @kind object;
  #L3ec2fe.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec302.  return v6 @kind object;
  #L3ec304.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ec308.  return v6 @kind object;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3ec1a4..L3ec1fc] goto L3ec304;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3ec1fc..L3ec214] goto L3ec216;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3ec216..L3ec302] goto L3ec304;
}
procedure `boolean` `d`(`int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.d:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3ec064.  v0:= 65496I;
  #L3ec06a.  v1:= v2 ^& v0 @kind int;
  #L3ec06e.  if v1 == v0 then goto L3ec088;
  #L3ec072.  v0:= 19789I;
  #L3ec076.  if v2 == v0 then goto L3ec088;
  #L3ec07a.  v0:= 18761I;
  #L3ec07e.  if v2 != v0 then goto L3ec084;
  #L3ec082.  goto L3ec088;
  #L3ec084.  v2:= 0I;
  #L3ec086.  goto L3ec08a;
  #L3ec088.  v2:= 1I;
  #L3ec08a.  return v2;
}
procedure `boolean` `e`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.e:([BI)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ec09c.  v0:= 0I;
  #L3ec09e.  if v5 == 0 then goto L3ec0b0;
  #L3ec0a2.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] @kind object;
  #L3ec0a6.  v1:= length @variable v1;
  #L3ec0a8.  if v6 <= v1 then goto L3ec0b0;
  #L3ec0ac.  v6:= 1I;
  #L3ec0ae.  goto L3ec0b2;
  #L3ec0b0.  v6:= 0I;
  #L3ec0b2.  if v6 == 0 then goto L3ec0d6;
  #L3ec0b6.  v1:= 0I;
  #L3ec0b8.  v2:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] @kind object;
  #L3ec0bc.  v3:= length @variable v2;
  #L3ec0be.  if v1 >= v3 then goto L3ec0d6;
  #L3ec0c2.  v3:= v5[v1] @kind byte;
  #L3ec0c6.  v2:= v2[v1] @kind byte;
  #L3ec0ca.  if v3 == v2 then goto L3ec0d0;
  #L3ec0ce.  goto L3ec0d8;
  #L3ec0d0.  v1:= v1 + 1;
  #L3ec0d4.  goto L3ec0b8;
  #L3ec0d6.  v0:= v6;
  #L3ec0d8.  return v0;
}
procedure `int` `f`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v10 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v11 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.f:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3ec510.  call temp:= `c`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.c:()S` @kind interface;
  #L3ec516.  v0:= temp;
  #L3ec518.  v1:= 255I;
  #L3ec51c.  v2:= 3I;
  #L3ec51e.  v3:= -1I;
  #L3ec520.  v4:= "DfltImageHeaderParser" @kind object;
  #L3ec524.  if v0 == v1 then goto L3ec55e;
  #L3ec528.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec52e.  v11:= temp;
  #L3ec530.  if v11 == 0 then goto L3ec55c;
  #L3ec534.  v11:= new `java.lang.StringBuilder`;
  #L3ec538.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec53e.  v1:= "Unknown segmentId=" @kind object;
  #L3ec542.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec548.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec54e.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec554.  v11:= temp @kind object;
  #L3ec556.  call temp:= `d`(v4, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec55c.  return v3;
  #L3ec55e.  call temp:= `c`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.c:()S` @kind interface;
  #L3ec564.  v0:= temp;
  #L3ec566.  v1:= 218I;
  #L3ec56a.  if v0 != v1 then goto L3ec570;
  #L3ec56e.  return v3;
  #L3ec570.  v1:= 217I;
  #L3ec574.  if v0 != v1 then goto L3ec590;
  #L3ec578.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec57e.  v11:= temp;
  #L3ec580.  if v11 == 0 then goto L3ec58e;
  #L3ec584.  v11:= "Found MARKER_EOI in exif segment" @kind object;
  #L3ec588.  call temp:= `d`(v4, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec58e.  return v3;
  #L3ec590.  call temp:= `a`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec596.  v1:= temp;
  #L3ec598.  v1:= v1 + -2;
  #L3ec59c.  v5:= 225I;
  #L3ec5a0.  if v0 == v5 then goto L3ec60c;
  #L3ec5a4.  v5:= (`long`) v1 @kind i2l;
  #L3ec5a6.  call temp:= `skip`(v11, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3ec5ac.  v7:= temp @kind wide;
  #L3ec5ae.  v9:= lcmp(v7, v5);
  #L3ec5b2.  if v9 == 0 then goto L3ec510;
  #L3ec5b6.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec5bc.  v11:= temp;
  #L3ec5be.  if v11 == 0 then goto L3ec60a;
  #L3ec5c2.  v11:= new `java.lang.StringBuilder`;
  #L3ec5c6.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec5cc.  v2:= "Unable to skip enough data, type: " @kind object;
  #L3ec5d0.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec5d6.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec5dc.  v0:= ", wanted to skip: " @kind object;
  #L3ec5e0.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec5e6.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec5ec.  v0:= ", but actually skipped: " @kind object;
  #L3ec5f0.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec5f6.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec5fc.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec602.  v11:= temp @kind object;
  #L3ec604.  call temp:= `d`(v4, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec60a.  return v3;
  #L3ec60c.  return v1;
}
procedure `int` `g`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v12 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.g:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3ec620.  v0:= 6I;
  #L3ec622.  call temp:= `a`(v12, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L3ec628.  v1:= temp;
  #L3ec62a.  v2:= 18761I;
  #L3ec62e.  v3:= 3I;
  #L3ec630.  v4:= "DfltImageHeaderParser" @kind object;
  #L3ec634.  if v1 == v2 then goto L3ec680;
  #L3ec638.  v2:= 19789I;
  #L3ec63c.  if v1 == v2 then goto L3ec67a;
  #L3ec640.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec646.  v2:= temp;
  #L3ec648.  if v2 == 0 then goto L3ec674;
  #L3ec64c.  v2:= new `java.lang.StringBuilder`;
  #L3ec650.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec656.  v5:= "Unknown endianness = " @kind object;
  #L3ec65a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec660.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec666.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec66c.  v1:= temp @kind object;
  #L3ec66e.  call temp:= `d`(v4, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec674.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3ec678.  goto L3ec684;
  #L3ec67a.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3ec67e.  goto L3ec684;
  #L3ec680.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3ec684.  call `e`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.e:(Ljava/nio/ByteOrder;)V` @kind virtual;
  #L3ec68a.  v1:= 10I;
  #L3ec68e.  call temp:= `b`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.b:(I)I` @kind virtual;
  #L3ec694.  v1:= temp;
  #L3ec696.  v1:= v1 + v0 @kind int;
  #L3ec698.  call temp:= `a`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L3ec69e.  v0:= temp;
  #L3ec6a0.  v2:= 0I;
  #L3ec6a2.  if v2 >= v0 then goto L3ec89e;
  #L3ec6a6.  call temp:= `a`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(II)I` @kind static;
  #L3ec6ac.  v5:= temp;
  #L3ec6ae.  call temp:= `a`(v12, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L3ec6b4.  v6:= temp;
  #L3ec6b6.  v7:= 274I;
  #L3ec6ba.  if v6 == v7 then goto L3ec6c2;
  #L3ec6be.  goto L3ec896;
  #L3ec6c2.  v7:= v5 + 2;
  #L3ec6c6.  call temp:= `a`(v12, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L3ec6cc.  v7:= temp;
  #L3ec6ce.  v8:= 1I;
  #L3ec6d0.  if v7 < v8 then goto L3ec862;
  #L3ec6d4.  v8:= 12I;
  #L3ec6d8.  if v7 <= v8 then goto L3ec6e0;
  #L3ec6dc.  goto L3ec862;
  #L3ec6e0.  v8:= v5 + 4;
  #L3ec6e4.  call temp:= `b`(v12, v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.b:(I)I` @kind virtual;
  #L3ec6ea.  v8:= temp;
  #L3ec6ec.  if v8 >= 0 then goto L3ec70a;
  #L3ec6f0.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec6f6.  v5:= temp;
  #L3ec6f8.  if v5 == 0 then goto L3ec896;
  #L3ec6fc.  v5:= "Negative tiff component count" @kind object;
  #L3ec700.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec706.  goto L3ec896;
  #L3ec70a.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec710.  v9:= temp;
  #L3ec712.  v10:= " tagType=" @kind object;
  #L3ec716.  if v9 == 0 then goto L3ec76e;
  #L3ec71a.  v9:= new `java.lang.StringBuilder`;
  #L3ec71e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec724.  v11:= "Got tagIndex=" @kind object;
  #L3ec728.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec72e.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec734.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec73a.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec740.  v11:= " formatCode=" @kind object;
  #L3ec744.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec74a.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec750.  v11:= " componentCount=" @kind object;
  #L3ec754.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec75a.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec760.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec766.  v9:= temp @kind object;
  #L3ec768.  call temp:= `d`(v4, v9) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec76e.  v9:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @type ^`int`[] @kind object;
  #L3ec772.  v9:= v9[v7];
  #L3ec776.  v8:= v8 + v9 @kind int;
  #L3ec778.  v9:= 4I;
  #L3ec77a.  if v8 <= v9 then goto L3ec7b6;
  #L3ec77e.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec784.  v5:= temp;
  #L3ec786.  if v5 == 0 then goto L3ec896;
  #L3ec78a.  v5:= new `java.lang.StringBuilder`;
  #L3ec78e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec794.  v6:= "Got byte count > 4, not orientation, continuing, formatCode=" @kind object;
  #L3ec798.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec79e.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec7a4.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec7aa.  v5:= temp @kind object;
  #L3ec7ac.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec7b2.  goto L3ec896;
  #L3ec7b6.  v5:= v5 + 8;
  #L3ec7ba.  if v5 < 0 then goto L3ec820;
  #L3ec7be.  call temp:= `d`(v12) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.d:()I` @kind virtual;
  #L3ec7c4.  v7:= temp;
  #L3ec7c6.  if v5 <= v7 then goto L3ec7cc;
  #L3ec7ca.  goto L3ec820;
  #L3ec7cc.  if v8 < 0 then goto L3ec7ea;
  #L3ec7d0.  v8:= v8 + v5 @kind int;
  #L3ec7d2.  call temp:= `d`(v12) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.d:()I` @kind virtual;
  #L3ec7d8.  v7:= temp;
  #L3ec7da.  if v8 <= v7 then goto L3ec7e0;
  #L3ec7de.  goto L3ec7ea;
  #L3ec7e0.  call temp:= `a`(v12, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L3ec7e6.  v12:= temp;
  #L3ec7e8.  return v12;
  #L3ec7ea.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec7f0.  v5:= temp;
  #L3ec7f2.  if v5 == 0 then goto L3ec896;
  #L3ec7f6.  v5:= new `java.lang.StringBuilder`;
  #L3ec7fa.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec800.  v7:= "Illegal number of bytes for TI tag data tagType=" @kind object;
  #L3ec804.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec80a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec810.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec816.  v5:= temp @kind object;
  #L3ec818.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec81e.  goto L3ec896;
  #L3ec820.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec826.  v7:= temp;
  #L3ec828.  if v7 == 0 then goto L3ec896;
  #L3ec82c.  v7:= new `java.lang.StringBuilder`;
  #L3ec830.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec836.  v8:= "Illegal tagValueOffset=" @kind object;
  #L3ec83a.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec840.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec846.  call temp:= `append`(v7, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec84c.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec852.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec858.  v5:= temp @kind object;
  #L3ec85a.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec860.  goto L3ec896;
  #L3ec862.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec868.  v5:= temp;
  #L3ec86a.  if v5 == 0 then goto L3ec896;
  #L3ec86e.  v5:= new `java.lang.StringBuilder`;
  #L3ec872.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec878.  v6:= "Got invalid format code = " @kind object;
  #L3ec87c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec882.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec888.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec88e.  v5:= temp @kind object;
  #L3ec890.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec896.  v2:= v2 + 1;
  #L3ec89a.  goto L3ec6a2;
  #L3ec89e.  v12:= -1I;
  #L3ec8a0.  return v12;
}
procedure `int` `h`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v3 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v4 @kind object, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.h:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;[BI)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ec8b4.  call temp:= `b`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.b:([BI)I` @kind interface;
  #L3ec8ba.  v4:= temp;
  #L3ec8bc.  v0:= -1I;
  #L3ec8be.  v1:= 3I;
  #L3ec8c0.  v2:= "DfltImageHeaderParser" @kind object;
  #L3ec8c4.  if v4 == v6 then goto L3ec90e;
  #L3ec8c8.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec8ce.  v5:= temp;
  #L3ec8d0.  if v5 == 0 then goto L3ec90c;
  #L3ec8d4.  v5:= new `java.lang.StringBuilder`;
  #L3ec8d8.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec8de.  v1:= "Unable to read exif segment data, length: " @kind object;
  #L3ec8e2.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec8e8.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec8ee.  v6:= ", actually read: " @kind object;
  #L3ec8f2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec8f8.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec8fe.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec904.  v4:= temp @kind object;
  #L3ec906.  call temp:= `d`(v2, v4) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec90c.  return v0;
  #L3ec90e.  call temp:= `e`(v3, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.e:([BI)Z` @kind direct;
  #L3ec914.  v4:= temp;
  #L3ec916.  if v4 == 0 then goto L3ec92e;
  #L3ec91a.  v4:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b`;
  #L3ec91e.  call `<init>`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.<init>:([BI)V` @kind direct;
  #L3ec924.  call temp:= `g`(v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.g:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;)I` @kind static;
  #L3ec92a.  v4:= temp;
  #L3ec92c.  return v4;
  #L3ec92e.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ec934.  v4:= temp;
  #L3ec936.  if v4 == 0 then goto L3ec944;
  #L3ec93a.  v4:= "Missing jpeg exif preamble" @kind object;
  #L3ec93e.  call temp:= `d`(v2, v4) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec944.  return v0;
}
procedure `boolean` `i`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v7 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v8 @kind object, `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.i:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ec0ec.  call temp:= `a`(v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec0f2.  v0:= temp;
  #L3ec0f4.  v0:= v0 ^< 16;
  #L3ec0f8.  call temp:= `a`(v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec0fe.  v1:= temp;
  #L3ec100.  v0:= v0 ^| v1 @kind int;
  #L3ec102.  v1:= 0I;
  #L3ec104.  v2:= 1718909296I;
  #L3ec10a.  if v0 == v2 then goto L3ec110;
  #L3ec10e.  return v1;
  #L3ec110.  call temp:= `a`(v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec116.  v0:= temp;
  #L3ec118.  v0:= v0 ^< 16;
  #L3ec11c.  call temp:= `a`(v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec122.  v2:= temp;
  #L3ec124.  v0:= v0 ^| v2 @kind int;
  #L3ec126.  v2:= 1635150182I;
  #L3ec12c.  v3:= 1I;
  #L3ec12e.  if v0 == v2 then goto L3ec190;
  #L3ec132.  v4:= 1635150195I;
  #L3ec138.  if v0 != v4 then goto L3ec13e;
  #L3ec13c.  goto L3ec190;
  #L3ec13e.  v5:= 4L;
  #L3ec142.  call temp:= `skip`(v8, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3ec148.  v9:= v9 + -16;
  #L3ec14c.  v0:= v9 %% 4;
  #L3ec150.  if v0 == 0 then goto L3ec156;
  #L3ec154.  return v1;
  #L3ec156.  v0:= 0I;
  #L3ec158.  v5:= 5I;
  #L3ec15a.  if v0 >= v5 then goto L3ec18e;
  #L3ec15e.  if v9 <= 0 then goto L3ec18e;
  #L3ec162.  call temp:= `a`(v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec168.  v5:= temp;
  #L3ec16a.  v5:= v5 ^< 16;
  #L3ec16e.  call temp:= `a`(v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.a:()I` @kind interface;
  #L3ec174.  v6:= temp;
  #L3ec176.  v5:= v5 ^| v6 @kind int;
  #L3ec178.  if v5 == v2 then goto L3ec18c;
  #L3ec17c.  if v5 != v4 then goto L3ec182;
  #L3ec180.  goto L3ec18c;
  #L3ec182.  v0:= v0 + 1;
  #L3ec186.  v9:= v9 + -4;
  #L3ec18a.  goto L3ec158;
  #L3ec18c.  return v3;
  #L3ec18e.  return v1;
  #L3ec190.  return v3;
}
procedure `int` `getOrientation`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.io.InputStream` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getOrientation:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec498.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c`;
  #L3ec49c.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ec4a2.  v2:= temp @kind object;
  #L3ec4a4.  v2:= (`java.io.InputStream`) v2 @kind object;
  #L3ec4a8.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3ec4ae.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ec4b4.  v2:= temp @kind object;
  #L3ec4b6.  v2:= (`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool`) v2 @kind object;
  #L3ec4ba.  call temp:= `b`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.b:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @kind direct;
  #L3ec4c0.  v2:= temp;
  #L3ec4c2.  return v2;
}
procedure `int` `getOrientation`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getOrientation:(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec4d4.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a`;
  #L3ec4d8.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ec4de.  v2:= temp @kind object;
  #L3ec4e0.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L3ec4e4.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L3ec4ea.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ec4f0.  v2:= temp @kind object;
  #L3ec4f2.  v2:= (`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool`) v2 @kind object;
  #L3ec4f6.  call temp:= `b`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.b:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @kind direct;
  #L3ec4fc.  v2:= temp;
  #L3ec4fe.  return v2;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getType`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getType:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec340.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c`;
  #L3ec344.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ec34a.  v2:= temp @kind object;
  #L3ec34c.  v2:= (`java.io.InputStream`) v2 @kind object;
  #L3ec350.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3ec356.  call temp:= `c`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.c:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind direct;
  #L3ec35c.  v2:= temp @kind object;
  #L3ec35e.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getType`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getType:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec370.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a`;
  #L3ec374.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ec37a.  v2:= temp @kind object;
  #L3ec37c.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L3ec380.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L3ec386.  call temp:= `c`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.c:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind direct;
  #L3ec38c.  v2:= temp @kind object;
  #L3ec38e.  return v2 @kind object;
}
