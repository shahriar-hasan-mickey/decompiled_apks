record `com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.ResourceDecoder` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapImageDecoderResourceDecoder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3eb62c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb632.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter`;
  #L3eb636.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter;.<init>:()V` @kind direct;
  #L3eb63c.  v1.`com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v0 @kind object;
  #L3eb640.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder` v3 @kind this, `android.graphics.ImageDecoder$Source` v4 @kind object, `int` v5 , `int` v6 , `com.bumptech.glide.load.Options` v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapImageDecoderResourceDecoder;.decode:(Landroid/graphics/ImageDecoder$Source;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eb558.  v0:= new `com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener`;
  #L3eb55c.  call `<init>`(v0, v5, v6, v7) @signature `Lcom/bumptech/glide/load/resource/DefaultOnHeaderDecodedListener;.<init>:(IILcom/bumptech/glide/load/Options;)V` @kind direct;
  #L3eb562.  call temp:= `decodeBitmap`(v4, v0) @signature `Landroid/graphics/ImageDecoder;.decodeBitmap:(Landroid/graphics/ImageDecoder$Source;Landroid/graphics/ImageDecoder$OnHeaderDecodedListener;)Landroid/graphics/Bitmap;` @kind static;
  #L3eb568.  v4:= temp @kind object;
  #L3eb56a.  v7:= "BitmapImageDecoder" @kind object;
  #L3eb56e.  v0:= 2I;
  #L3eb570.  call temp:= `isLoggable`(v7, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3eb576.  v0:= temp;
  #L3eb578.  if v0 == 0 then goto L3eb5ea;
  #L3eb57c.  v0:= new `java.lang.StringBuilder`;
  #L3eb580.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3eb586.  v1:= "Decoded [" @kind object;
  #L3eb58a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb590.  call temp:= `getWidth`(v4) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3eb596.  v1:= temp;
  #L3eb598.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb59e.  v1:= "x" @kind object;
  #L3eb5a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb5a8.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3eb5ae.  v2:= temp;
  #L3eb5b0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb5b6.  v2:= "] for [" @kind object;
  #L3eb5ba.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb5c0.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb5c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb5cc.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb5d2.  v5:= "]" @kind object;
  #L3eb5d6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb5dc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3eb5e2.  v5:= temp @kind object;
  #L3eb5e4.  call temp:= `v`(v7, v5) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3eb5ea.  v5:= new `com.bumptech.glide.load.resource.bitmap.BitmapResource`;
  #L3eb5ee.  v6:= v3.`com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3eb5f2.  call `<init>`(v5, v4, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @kind direct;
  #L3eb5f8.  return v5 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapImageDecoderResourceDecoder;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3eb60c.  v1:= (`android.graphics.ImageDecoder$Source`) v1 @kind object;
  #L3eb610.  call temp:= `decode`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapImageDecoderResourceDecoder;.decode:(Landroid/graphics/ImageDecoder$Source;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L3eb616.  v1:= temp @kind object;
  #L3eb618.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder` v0 @kind this, `android.graphics.ImageDecoder$Source` v1 @kind object, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapImageDecoderResourceDecoder;.handles:(Landroid/graphics/ImageDecoder$Source;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC {
    temp;

  #L3eb524.  v1:= 1I;
  #L3eb526.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapImageDecoderResourceDecoder;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3eb538.  v1:= (`android.graphics.ImageDecoder$Source`) v1 @kind object;
  #L3eb53c.  call temp:= `handles`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapImageDecoderResourceDecoder;.handles:(Landroid/graphics/ImageDecoder$Source;Lcom/bumptech/glide/load/Options;)Z` @kind virtual;
  #L3eb542.  v1:= temp;
  #L3eb544.  return v1;
}
