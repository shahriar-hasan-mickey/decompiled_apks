record `com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceEncoder` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.ResourceEncoder` `com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v1 @kind object, `com.bumptech.glide.load.ResourceEncoder` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableEncoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/ResourceEncoder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eb018.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb01e.  v0.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v1 @kind object;
  #L3eb022.  v0.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder.b` @type ^`com.bumptech.glide.load.ResourceEncoder` := v2 @kind object;
  #L3eb026.  return @kind void;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder` v3 @kind this, `com.bumptech.glide.load.engine.Resource` v4 @kind object, `java.io.File` v5 @kind object, `com.bumptech.glide.load.Options` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableEncoder;.encode:(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eaf98.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder.b` @type ^`com.bumptech.glide.load.ResourceEncoder` @kind object;
  #L3eaf9c.  v1:= new `com.bumptech.glide.load.resource.bitmap.BitmapResource`;
  #L3eafa0.  call temp:= `get`(v4) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3eafa6.  v4:= temp @kind object;
  #L3eafa8.  v4:= (`android.graphics.drawable.BitmapDrawable`) v4 @kind object;
  #L3eafac.  call temp:= `getBitmap`(v4) @signature `Landroid/graphics/drawable/BitmapDrawable;.getBitmap:()Landroid/graphics/Bitmap;` @kind virtual;
  #L3eafb2.  v4:= temp @kind object;
  #L3eafb4.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3eafb8.  call `<init>`(v1, v4, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @kind direct;
  #L3eafbe.  call temp:= `encode`(v0, v1, v5, v6) @signature `Lcom/bumptech/glide/load/Encoder;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @kind interface;
  #L3eafc4.  v4:= temp;
  #L3eafc6.  return v4;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableEncoder;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3eafd8.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3eafdc.  call temp:= `encode`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableEncoder;.encode:(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @kind virtual;
  #L3eafe2.  v1:= temp;
  #L3eafe4.  return v1;
}
procedure `com.bumptech.glide.load.EncodeStrategy` `getEncodeStrategy`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder` v1 @kind this, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableEncoder;.getEncodeStrategy:(Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/EncodeStrategy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eaff8.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder.b` @type ^`com.bumptech.glide.load.ResourceEncoder` @kind object;
  #L3eaffc.  call temp:= `getEncodeStrategy`(v0, v2) @signature `Lcom/bumptech/glide/load/ResourceEncoder;.getEncodeStrategy:(Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/EncodeStrategy;` @kind interface;
  #L3eb002.  v2:= temp @kind object;
  #L3eb004.  return v2 @kind object;
}
