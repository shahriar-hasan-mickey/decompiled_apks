record `com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.Transformation` @kind interface {
  `com.bumptech.glide.load.Transformation` `com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` v2 @kind this, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.<init>:(Lcom/bumptech/glide/load/Transformation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3eb1dc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb1e2.  v0:= new `com.bumptech.glide.load.resource.bitmap.DrawableTransformation`;
  #L3eb1e6.  v1:= 0I;
  #L3eb1e8.  call `<init>`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.<init>:(Lcom/bumptech/glide/load/Transformation;Z)V` @kind direct;
  #L3eb1ee.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3eb1f4.  v3:= temp @kind object;
  #L3eb1f6.  v3:= (`com.bumptech.glide.load.Transformation`) v3 @kind object;
  #L3eb1fa.  v2.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` := v3 @kind object;
  #L3eb1fe.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `a`(`com.bumptech.glide.load.engine.Resource` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.a:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3eb120.  call temp:= `get`(v3) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3eb126.  v0:= temp @kind object;
  #L3eb128.  v0:= instanceof @variable v0 @type ^`android.graphics.drawable.BitmapDrawable` @kind boolean;
  #L3eb12c.  if v0 == 0 then goto L3eb132;
  #L3eb130.  return v3 @kind object;
  #L3eb132.  v0:= new `java.lang.IllegalArgumentException`;
  #L3eb136.  v1:= new `java.lang.StringBuilder`;
  #L3eb13a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3eb140.  v2:= "Wrapped transformation unexpectedly returned a non BitmapDrawable resource: " @kind object;
  #L3eb144.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb14a.  call temp:= `get`(v3) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3eb150.  v3:= temp @kind object;
  #L3eb152.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb158.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3eb15e.  v3:= temp @kind object;
  #L3eb160.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb166.  throw v0;
}
procedure `com.bumptech.glide.load.engine.Resource` `b`(`com.bumptech.glide.load.engine.Resource` v0 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.b:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3eb178.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb0ec.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` @kind boolean;
  #L3eb0f0.  if v0 == 0 then goto L3eb10a;
  #L3eb0f4.  v2:= (`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation`) v2 @kind object;
  #L3eb0f8.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3eb0fc.  v2:= v2.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3eb100.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3eb106.  v2:= temp;
  #L3eb108.  return v2;
  #L3eb10a.  v2:= 0I;
  #L3eb10c.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb1bc.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3eb1c0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3eb1c6.  v0:= temp;
  #L3eb1c8.  return v0;
}
procedure `com.bumptech.glide.load.engine.Resource` `transform`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` v1 @kind this, `android.content.Context` v2 @kind object, `com.bumptech.glide.load.engine.Resource` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.transform:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb18c.  call temp:= `b`(v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.b:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind static;
  #L3eb192.  v3:= temp @kind object;
  #L3eb194.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3eb198.  call temp:= `transform`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/Transformation;.transform:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3eb19e.  v2:= temp @kind object;
  #L3eb1a0.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.a:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind static;
  #L3eb1a6.  v2:= temp @kind object;
  #L3eb1a8.  return v2 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb210.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3eb214.  call `updateDiskCacheKey`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3eb21a.  return @kind void;
}
