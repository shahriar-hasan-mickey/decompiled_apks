record `com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.resource.bitmap.ImageReader` @kind interface {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `java.util.List` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteBufferReader;.<init>:(Ljava/nio/ByteBuffer;Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3eec74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eec7a.  v0.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.a` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L3eec7e.  v0.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.b` @type ^`java.util.List` := v2 @kind object;
  #L3eec82.  v0.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v3 @kind object;
  #L3eec86.  return @kind void;
}
procedure `java.io.InputStream` `a`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteBufferReader;.a:()Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eec4c.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3eec50.  call temp:= `rewind`(v0) @signature `Lcom/bumptech/glide/util/ByteBufferUtil;.rewind:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind static;
  #L3eec56.  v0:= temp @kind object;
  #L3eec58.  call temp:= `toStream`(v0) @signature `Lcom/bumptech/glide/util/ByteBufferUtil;.toStream:(Ljava/nio/ByteBuffer;)Ljava/io/InputStream;` @kind static;
  #L3eec5e.  v0:= temp @kind object;
  #L3eec60.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `decodeBitmap`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader` v2 @kind this, `android.graphics.BitmapFactory$Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteBufferReader;.decodeBitmap:(Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eebcc.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteBufferReader;.a:()Ljava/io/InputStream;` @kind direct;
  #L3eebd2.  v0:= temp @kind object;
  #L3eebd4.  v1:= 0I;
  #L3eebd6.  call temp:= `decodeStream`(v0, v1, v3) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3eebdc.  v3:= temp @kind object;
  #L3eebde.  return v3 @kind object;
}
procedure `int` `getImageOrientation`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteBufferReader;.getImageOrientation:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eec1c.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.b` @type ^`java.util.List` @kind object;
  #L3eec20.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3eec24.  call temp:= `rewind`(v1) @signature `Lcom/bumptech/glide/util/ByteBufferUtil;.rewind:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind static;
  #L3eec2a.  v1:= temp @kind object;
  #L3eec2c.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eec30.  call temp:= `getOrientation`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getOrientation:(Ljava/util/List;Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @kind static;
  #L3eec36.  v0:= temp;
  #L3eec38.  return v0;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getImageType`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteBufferReader;.getImageType:()Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eebf0.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.b` @type ^`java.util.List` @kind object;
  #L3eebf4.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3eebf8.  call temp:= `rewind`(v1) @signature `Lcom/bumptech/glide/util/ByteBufferUtil;.rewind:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind static;
  #L3eebfe.  v1:= temp @kind object;
  #L3eec00.  call temp:= `getType`(v0, v1) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getType:(Ljava/util/List;Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind static;
  #L3eec06.  v0:= temp @kind object;
  #L3eec08.  return v0 @kind object;
}
procedure `void` `stopGrowingBuffers`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ByteBufferReader;.stopGrowingBuffers:()V` @AccessFlag PUBLIC {
    temp;

  #L3eec98.  return @kind void;
}
