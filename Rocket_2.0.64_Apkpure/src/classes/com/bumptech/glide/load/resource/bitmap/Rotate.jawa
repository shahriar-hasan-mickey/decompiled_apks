record `com.bumptech.glide.load.resource.bitmap.Rotate` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.resource.bitmap.BitmapTransformation` @kind class {
  `int` `com.bumptech.glide.load.resource.bitmap.Rotate.a` @AccessFlag PRIVATE_FINAL;
}
global `byte`[] `@@com.bumptech.glide.load.resource.bitmap.Rotate.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/Rotate;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3efb70.  v0:= `@@com.bumptech.glide.load.Key.CHARSET` @type ^`java.nio.charset.Charset` @kind object;
  #L3efb74.  v1:= "com.bumptech.glide.load.resource.bitmap.Rotate" @kind object;
  #L3efb78.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3efb7e.  v0:= temp @kind object;
  #L3efb80.  `@@com.bumptech.glide.load.resource.bitmap.Rotate.b` @type ^`byte`[] := v0 @kind object;
  #L3efb84.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.Rotate` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/Rotate;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3efb98.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapTransformation;.<init>:()V` @kind direct;
  #L3efb9e.  v0.`com.bumptech.glide.load.resource.bitmap.Rotate.a` @type ^`int` := v1;
  #L3efba2.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.resource.bitmap.Rotate` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/Rotate;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3efb14.  v0:= instanceof @variable v3 @type ^`com.bumptech.glide.load.resource.bitmap.Rotate` @kind boolean;
  #L3efb18.  v1:= 0I;
  #L3efb1a.  if v0 == 0 then goto L3efb30;
  #L3efb1e.  v3:= (`com.bumptech.glide.load.resource.bitmap.Rotate`) v3 @kind object;
  #L3efb22.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.Rotate.a` @type ^`int`;
  #L3efb26.  v3:= v3.`com.bumptech.glide.load.resource.bitmap.Rotate.a` @type ^`int`;
  #L3efb2a.  if v0 != v3 then goto L3efb30;
  #L3efb2e.  v1:= 1I;
  #L3efb30.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.resource.bitmap.Rotate` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/Rotate;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3efb44.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.Rotate.a` @type ^`int`;
  #L3efb48.  call temp:= `hashCode`(v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(I)I` @kind static;
  #L3efb4e.  v0:= temp;
  #L3efb50.  v1:= -950519196I;
  #L3efb56.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3efb5c.  v0:= temp;
  #L3efb5e.  return v0;
}
procedure `android.graphics.Bitmap` `transform`(`com.bumptech.glide.load.resource.bitmap.Rotate` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v1 @kind object, `android.graphics.Bitmap` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/Rotate;.transform:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PROTECTED {
    temp;

  #L3efaf4.  v1:= v0.`com.bumptech.glide.load.resource.bitmap.Rotate.a` @type ^`int`;
  #L3efaf8.  call temp:= `rotateImage`(v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.rotateImage:(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @kind static;
  #L3efafe.  v1:= temp @kind object;
  #L3efb00.  return v1 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.resource.bitmap.Rotate` v2 @kind this, `java.security.MessageDigest` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/Rotate;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3efbb4.  v0:= `@@com.bumptech.glide.load.resource.bitmap.Rotate.b` @type ^`byte`[] @kind object;
  #L3efbb8.  call `update`(v3, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3efbbe.  v0:= 4I;
  #L3efbc0.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3efbc6.  v0:= temp @kind object;
  #L3efbc8.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.Rotate.a` @type ^`int`;
  #L3efbcc.  call temp:= `putInt`(v0, v1) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3efbd2.  v0:= temp @kind object;
  #L3efbd4.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3efbda.  v0:= temp @kind object;
  #L3efbdc.  call `update`(v3, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3efbe2.  return @kind void;
}
