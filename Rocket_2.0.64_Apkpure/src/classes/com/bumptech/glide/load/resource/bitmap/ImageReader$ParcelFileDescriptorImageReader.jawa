record `com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.resource.bitmap.ImageReader` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.data.ParcelFileDescriptorRewinder` `com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader` v0 @kind this, `android.os.ParcelFileDescriptor` v1 @kind object, `java.util.List` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ParcelFileDescriptorImageReader;.<init>:(Landroid/os/ParcelFileDescriptor;Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3eefd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eefd6.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3eefdc.  v3:= temp @kind object;
  #L3eefde.  v3:= (`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool`) v3 @kind object;
  #L3eefe2.  v0.`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v3 @kind object;
  #L3eefe6.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3eefec.  v2:= temp @kind object;
  #L3eefee.  v2:= (`java.util.List`) v2 @kind object;
  #L3eeff2.  v0.`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.b` @type ^`java.util.List` := v2 @kind object;
  #L3eeff6.  v2:= new `com.bumptech.glide.load.data.ParcelFileDescriptorRewinder`;
  #L3eeffa.  call `<init>`(v2, v1) @signature `Lcom/bumptech/glide/load/data/ParcelFileDescriptorRewinder;.<init>:(Landroid/os/ParcelFileDescriptor;)V` @kind direct;
  #L3ef000.  v0.`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.c` @type ^`com.bumptech.glide.load.data.ParcelFileDescriptorRewinder` := v2 @kind object;
  #L3ef004.  return @kind void;
}
procedure `android.graphics.Bitmap` `decodeBitmap`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader` v2 @kind this, `android.graphics.BitmapFactory$Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ParcelFileDescriptorImageReader;.decodeBitmap:(Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eef50.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.c` @type ^`com.bumptech.glide.load.data.ParcelFileDescriptorRewinder` @kind object;
  #L3eef54.  call temp:= `rewindAndGet`(v0) @signature `Lcom/bumptech/glide/load/data/ParcelFileDescriptorRewinder;.rewindAndGet:()Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L3eef5a.  v0:= temp @kind object;
  #L3eef5c.  call temp:= `getFileDescriptor`(v0) @signature `Landroid/os/ParcelFileDescriptor;.getFileDescriptor:()Ljava/io/FileDescriptor;` @kind virtual;
  #L3eef62.  v0:= temp @kind object;
  #L3eef64.  v1:= 0I;
  #L3eef66.  call temp:= `decodeFileDescriptor`(v0, v1, v3) @signature `Landroid/graphics/BitmapFactory;.decodeFileDescriptor:(Ljava/io/FileDescriptor;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3eef6c.  v3:= temp @kind object;
  #L3eef6e.  return v3 @kind object;
}
procedure `int` `getImageOrientation`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ParcelFileDescriptorImageReader;.getImageOrientation:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eefa8.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.b` @type ^`java.util.List` @kind object;
  #L3eefac.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.c` @type ^`com.bumptech.glide.load.data.ParcelFileDescriptorRewinder` @kind object;
  #L3eefb0.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eefb4.  call temp:= `getOrientation`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getOrientation:(Ljava/util/List;Lcom/bumptech/glide/load/data/ParcelFileDescriptorRewinder;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @kind static;
  #L3eefba.  v0:= temp;
  #L3eefbc.  return v0;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getImageType`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ParcelFileDescriptorImageReader;.getImageType:()Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eef80.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.b` @type ^`java.util.List` @kind object;
  #L3eef84.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.c` @type ^`com.bumptech.glide.load.data.ParcelFileDescriptorRewinder` @kind object;
  #L3eef88.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eef8c.  call temp:= `getType`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getType:(Ljava/util/List;Lcom/bumptech/glide/load/data/ParcelFileDescriptorRewinder;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind static;
  #L3eef92.  v0:= temp @kind object;
  #L3eef94.  return v0 @kind object;
}
procedure `void` `stopGrowingBuffers`(`com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$ParcelFileDescriptorImageReader;.stopGrowingBuffers:()V` @AccessFlag PUBLIC {
    temp;

  #L3ef018.  return @kind void;
}
