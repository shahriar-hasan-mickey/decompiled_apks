record `com.bumptech.glide.load.resource.bitmap.TransformationUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.PAINT_FLAGS` @AccessFlag PUBLIC_STATIC_FINAL;
global `android.graphics.Paint` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Paint` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Paint` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Set` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.locks.Lock` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;

  #L3f0824.  v0:= new `android.graphics.Paint`;
  #L3f0828.  v1:= 6I;
  #L3f082a.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3f0830.  `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.a` @type ^`android.graphics.Paint` := v0 @kind object;
  #L3f0834.  v0:= new `android.graphics.Paint`;
  #L3f0838.  v1:= 7I;
  #L3f083a.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3f0840.  `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.b` @type ^`android.graphics.Paint` := v0 @kind object;
  #L3f0844.  v0:= new `java.util.HashSet`;
  #L3f0848.  v2:= "XT1085" @kind object;
  #L3f084c.  v3:= "XT1092" @kind object;
  #L3f0850.  v4:= "XT1093" @kind object;
  #L3f0854.  v5:= "XT1094" @kind object;
  #L3f0858.  v6:= "XT1095" @kind object;
  #L3f085c.  v7:= "XT1096" @kind object;
  #L3f0860.  v8:= "XT1097" @kind object;
  #L3f0864.  v9:= "XT1098" @kind object;
  #L3f0868.  v10:= "XT1031" @kind object;
  #L3f086c.  v11:= "XT1028" @kind object;
  #L3f0870.  v12:= "XT937C" @kind object;
  #L3f0874.  v13:= "XT1032" @kind object;
  #L3f0878.  v14:= "XT1008" @kind object;
  #L3f087c.  v15:= "XT1033" @kind object;
  #L3f0880.  v16:= "XT1035" @kind object;
  #L3f0884.  v17:= "XT1034" @kind object;
  #L3f0888.  v18:= "XT939G" @kind object;
  #L3f088c.  v19:= "XT1039" @kind object;
  #L3f0890.  v20:= "XT1040" @kind object;
  #L3f0894.  v21:= "XT1042" @kind object;
  #L3f0898.  v22:= "XT1045" @kind object;
  #L3f089c.  v23:= "XT1063" @kind object;
  #L3f08a0.  v24:= "XT1064" @kind object;
  #L3f08a4.  v25:= "XT1068" @kind object;
  #L3f08a8.  v26:= "XT1069" @kind object;
  #L3f08ac.  v27:= "XT1072" @kind object;
  #L3f08b0.  v28:= "XT1077" @kind object;
  #L3f08b4.  v29:= "XT1078" @kind object;
  #L3f08b8.  v30:= "XT1079" @kind object;
  #L3f08bc.  temp:= new `java.lang.String`[v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30];
  #L3f08c2.  v2:= temp @kind object;
  #L3f08c4.  call temp:= `asList`(v2) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3f08ca.  v2:= temp @kind object;
  #L3f08cc.  call `<init>`(v0, v2) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3f08d2.  `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.d` @type ^`java.util.Set` := v0 @kind object;
  #L3f08d6.  v2:= `@@android.os.Build.MODEL` @type ^`java.lang.String` @kind object;
  #L3f08da.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3f08e0.  v0:= temp;
  #L3f08e2.  if v0 == 0 then goto L3f08f2;
  #L3f08e6.  v0:= new `java.util.concurrent.locks.ReentrantLock`;
  #L3f08ea.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L3f08f0.  goto L3f08fc;
  #L3f08f2.  v0:= new `com.bumptech.glide.load.resource.bitmap.TransformationUtils$d`;
  #L3f08f6.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$d;.<init>:()V` @kind direct;
  #L3f08fc.  `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` := v0 @kind object;
  #L3f0900.  v0:= new `android.graphics.Paint`;
  #L3f0904.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3f090a.  `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.c` @type ^`android.graphics.Paint` := v0 @kind object;
  #L3f090e.  v1:= new `android.graphics.PorterDuffXfermode`;
  #L3f0912.  v2:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3f0916.  call `<init>`(v1, v2) @signature `Landroid/graphics/PorterDuffXfermode;.<init>:(Landroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L3f091c.  call temp:= `setXfermode`(v0, v1) @signature `Landroid/graphics/Paint;.setXfermode:(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;` @kind virtual;
  #L3f0922.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.TransformationUtils` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f0934.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f093a.  return @kind void;
}
procedure `void` `a`(`android.graphics.Bitmap` v2 @kind object, `android.graphics.Bitmap` v3 @kind object, `android.graphics.Matrix` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.a:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3f094c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3f0950.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L3f0956.  v1:= new `android.graphics.Canvas`;
  #L3f095a.  call `<init>`(v1, v3) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3f0960.  v3:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.a` @type ^`android.graphics.Paint` @kind object;
  #L3f0964.  call `drawBitmap`(v1, v2, v4, v3) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;Landroid/graphics/Paint;)V` @kind virtual;
  #L3f096a.  call `b`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.b:(Landroid/graphics/Canvas;)V` @kind static;
  #L3f0970.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3f0976.  return @kind void;
  #L3f0978.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f097a.  v3:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3f097e.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3f0984.  throw v2;
  catch `java.lang.Throwable` @[L3f0956..L3f0970] goto L3f0978;
}
procedure `void` `b`(`android.graphics.Canvas` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.b:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3f09a4.  v0:= 0I;
  #L3f09a6.  call `setBitmap`(v1, v0) @signature `Landroid/graphics/Canvas;.setBitmap:(Landroid/graphics/Bitmap;)V` @kind virtual;
  #L3f09ac.  return @kind void;
}
procedure `android.graphics.Bitmap` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v3 @kind object, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f0434.  call temp:= `d`(v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.d:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3f043a.  v0:= temp @kind object;
  #L3f043c.  call temp:= `getConfig`(v4) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3f0442.  v1:= temp @kind object;
  #L3f0444.  call temp:= `equals`(v0, v1) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f044a.  v1:= temp;
  #L3f044c.  if v1 == 0 then goto L3f0452;
  #L3f0450.  return v4 @kind object;
  #L3f0452.  call temp:= `getWidth`(v4) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f0458.  v1:= temp;
  #L3f045a.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f0460.  v2:= temp;
  #L3f0462.  call temp:= `get`(v3, v1, v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3f0468.  v3:= temp @kind object;
  #L3f046a.  v0:= new `android.graphics.Canvas`;
  #L3f046e.  call `<init>`(v0, v3) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3f0474.  v1:= 0I;
  #L3f0476.  v2:= 0I;
  #L3f0478.  call `drawBitmap`(v0, v4, v2, v2, v1) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3f047e.  return v3 @kind object;
}
procedure `android.graphics.Bitmap` `centerCrop`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v6 @kind object, `android.graphics.Bitmap` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.centerCrop:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3efffc.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f0002.  v0:= temp;
  #L3f0004.  if v0 != v8 then goto L3f0016;
  #L3f0008.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f000e.  v0:= temp;
  #L3f0010.  if v0 != v9 then goto L3f0016;
  #L3f0014.  return v7 @kind object;
  #L3f0016.  v0:= new `android.graphics.Matrix`;
  #L3f001a.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3f0020.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f0026.  v1:= temp;
  #L3f0028.  v1:= v1 * v9 @kind int;
  #L3f002c.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f0032.  v2:= temp;
  #L3f0034.  v2:= v2 * v8 @kind int;
  #L3f0038.  v3:= 0I;
  #L3f003a.  v4:= 0.5F;
  #L3f003e.  if v1 <= v2 then goto L3f006c;
  #L3f0042.  v1:= (`float`) v9 @kind i2f;
  #L3f0044.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f004a.  v2:= temp;
  #L3f004c.  v2:= (`float`) v2 @kind i2f;
  #L3f004e.  v1:= v1 / v2 @kind float;
  #L3f0050.  v2:= (`float`) v8 @kind i2f;
  #L3f0052.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f0058.  v5:= temp;
  #L3f005a.  v5:= (`float`) v5 @kind i2f;
  #L3f005c.  v5:= v5 * v1 @kind float;
  #L3f0060.  v2:= v2 - v5 @kind float;
  #L3f0062.  v2:= v2 * v4 @kind float;
  #L3f0066.  v3:= v2;
  #L3f0068.  v2:= 0I;
  #L3f006a.  goto L3f0090;
  #L3f006c.  v1:= (`float`) v8 @kind i2f;
  #L3f006e.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f0074.  v2:= temp;
  #L3f0076.  v2:= (`float`) v2 @kind i2f;
  #L3f0078.  v1:= v1 / v2 @kind float;
  #L3f007a.  v2:= (`float`) v9 @kind i2f;
  #L3f007c.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f0082.  v5:= temp;
  #L3f0084.  v5:= (`float`) v5 @kind i2f;
  #L3f0086.  v5:= v5 * v1 @kind float;
  #L3f008a.  v2:= v2 - v5 @kind float;
  #L3f008c.  v2:= v2 * v4 @kind float;
  #L3f0090.  call `setScale`(v0, v1, v1) @signature `Landroid/graphics/Matrix;.setScale:(FF)V` @kind virtual;
  #L3f0096.  v3:= v3 + v4 @kind float;
  #L3f0098.  v1:= (`int`) v3 @kind f2i;
  #L3f009a.  v1:= (`float`) v1 @kind i2f;
  #L3f009c.  v2:= v2 + v4 @kind float;
  #L3f009e.  v2:= (`int`) v2 @kind f2i;
  #L3f00a0.  v2:= (`float`) v2 @kind i2f;
  #L3f00a2.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L3f00a8.  call temp:= `e`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.e:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3f00ae.  v1:= temp @kind object;
  #L3f00b0.  call temp:= `get`(v6, v8, v9, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3f00b6.  v6:= temp @kind object;
  #L3f00b8.  call `setAlpha`(v7, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.setAlpha:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V` @kind static;
  #L3f00be.  call `a`(v7, v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.a:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)V` @kind static;
  #L3f00c4.  return v6 @kind object;
}
procedure `android.graphics.Bitmap` `centerInside`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v3 @kind object, `android.graphics.Bitmap` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.centerInside:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f00d8.  call temp:= `getWidth`(v4) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f00de.  v0:= temp;
  #L3f00e0.  v1:= 2I;
  #L3f00e2.  v2:= "TransformationUtils" @kind object;
  #L3f00e6.  if v0 > v5 then goto L3f010e;
  #L3f00ea.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f00f0.  v0:= temp;
  #L3f00f2.  if v0 > v6 then goto L3f010e;
  #L3f00f6.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3f00fc.  v3:= temp;
  #L3f00fe.  if v3 == 0 then goto L3f010c;
  #L3f0102.  v3:= "requested target size larger or equal to input, returning input" @kind object;
  #L3f0106.  call temp:= `v`(v2, v3) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3f010c.  return v4 @kind object;
  #L3f010e.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3f0114.  v0:= temp;
  #L3f0116.  if v0 == 0 then goto L3f0124;
  #L3f011a.  v0:= "requested target size too big for input, fit centering instead" @kind object;
  #L3f011e.  call temp:= `v`(v2, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3f0124.  call temp:= `fitCenter`(v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.fitCenter:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @kind static;
  #L3f012a.  v3:= temp @kind object;
  #L3f012c.  return v3 @kind object;
}
procedure `android.graphics.Bitmap` `circleCrop`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v6 @kind object, `android.graphics.Bitmap` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.circleCrop:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f0140.  call temp:= `min`(v8, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3f0146.  v8:= temp;
  #L3f0148.  v9:= (`float`) v8 @kind i2f;
  #L3f014a.  v0:= 2.0F;
  #L3f014e.  v1:= v9 / v0 @kind float;
  #L3f0152.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f0158.  v2:= temp;
  #L3f015a.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f0160.  v3:= temp;
  #L3f0162.  v2:= (`float`) v2 @kind i2f;
  #L3f0164.  v4:= v9 / v2 @kind float;
  #L3f0168.  v3:= (`float`) v3 @kind i2f;
  #L3f016a.  v5:= v9 / v3 @kind float;
  #L3f016e.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3f0174.  v4:= temp;
  #L3f0176.  v2:= v2 * v4 @kind float;
  #L3f017a.  v4:= v4 * v3 @kind float;
  #L3f017e.  v3:= v9 - v2 @kind float;
  #L3f0182.  v3:= v3 / v0 @kind float;
  #L3f0184.  v9:= v9 - v4 @kind float;
  #L3f0186.  v9:= v9 / v0 @kind float;
  #L3f0188.  v0:= new `android.graphics.RectF`;
  #L3f018c.  v2:= v2 + v3 @kind float;
  #L3f018e.  v4:= v4 + v9 @kind float;
  #L3f0190.  call `<init>`(v0, v3, v9, v2, v4) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L3f0196.  call temp:= `c`(v6, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind static;
  #L3f019c.  v9:= temp @kind object;
  #L3f019e.  call temp:= `d`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.d:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3f01a4.  v2:= temp @kind object;
  #L3f01a6.  call temp:= `get`(v6, v8, v8, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3f01ac.  v8:= temp @kind object;
  #L3f01ae.  v2:= 1I;
  #L3f01b0.  call `setHasAlpha`(v8, v2) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3f01b6.  v2:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3f01ba.  call `lock`(v2) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L3f01c0.  v3:= new `android.graphics.Canvas`;
  #L3f01c4.  call `<init>`(v3, v8) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3f01ca.  v4:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.b` @type ^`android.graphics.Paint` @kind object;
  #L3f01ce.  call `drawCircle`(v3, v1, v1, v1, v4) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L3f01d4.  v1:= 0I;
  #L3f01d6.  v4:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.c` @type ^`android.graphics.Paint` @kind object;
  #L3f01da.  call `drawBitmap`(v3, v9, v1, v0, v4) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L3f01e0.  call `b`(v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.b:(Landroid/graphics/Canvas;)V` @kind static;
  #L3f01e6.  call `unlock`(v2) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3f01ec.  call temp:= `equals`(v9, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f01f2.  v7:= temp;
  #L3f01f4.  if v7 != 0 then goto L3f01fe;
  #L3f01f8.  call `put`(v6, v9) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3f01fe.  return v8 @kind object;
  #L3f0200.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f0202.  v7:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3f0206.  call `unlock`(v7) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3f020c.  throw v6;
  catch `java.lang.Throwable` @[L3f01c0..L3f01e6] goto L3f0200;
}
procedure `android.graphics.Bitmap$Config` `d`(`android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.d:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3f0710.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3f0714.  v1:= 26I;
  #L3f0718.  if v0 < v1 then goto L3f073a;
  #L3f071c.  v0:= `@@android.graphics.Bitmap$Config.RGBA_F16` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3f0720.  call temp:= `getConfig`(v2) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3f0726.  v2:= temp @kind object;
  #L3f0728.  call temp:= `equals`(v0, v2) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f072e.  v2:= temp;
  #L3f0730.  if v2 == 0 then goto L3f073a;
  #L3f0734.  v2:= `@@android.graphics.Bitmap$Config.RGBA_F16` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3f0738.  return v2 @kind object;
  #L3f073a.  v2:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3f073e.  return v2 @kind object;
}
procedure `android.graphics.Bitmap$Config` `e`(`android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.e:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3f0750.  call temp:= `getConfig`(v1) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3f0756.  v0:= temp @kind object;
  #L3f0758.  if v0 == 0 then goto L3f0766;
  #L3f075c.  call temp:= `getConfig`(v1) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3f0762.  v1:= temp @kind object;
  #L3f0764.  goto L3f076a;
  #L3f0766.  v1:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3f076a.  return v1 @kind object;
}
procedure `void` `f`(`int` v5 , `android.graphics.Matrix` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.f:(ILandroid/graphics/Matrix;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f09c0.  v0:= -90.0F;
  #L3f09c4.  v1:= 90.0F;
  #L3f09c8.  v2:= 180.0F;
  #L3f09cc.  v3:= 1.0F;
  #L3f09d0.  v4:= -1.0F;
  #L3f09d4.  goto L3f0a28;
  #L3f09da.  goto L3f0a24;
  #L3f09dc.  call `setRotate`(v6, v0) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3f09e2.  goto L3f0a24;
  #L3f09e4.  call `setRotate`(v6, v0) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3f09ea.  call temp:= `postScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L3f09f0.  goto L3f0a24;
  #L3f09f2.  call `setRotate`(v6, v1) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3f09f8.  goto L3f0a24;
  #L3f09fa.  call `setRotate`(v6, v1) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3f0a00.  call temp:= `postScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L3f0a06.  goto L3f0a24;
  #L3f0a08.  call `setRotate`(v6, v2) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3f0a0e.  call temp:= `postScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L3f0a14.  goto L3f0a24;
  #L3f0a16.  call `setRotate`(v6, v2) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3f0a1c.  goto L3f0a24;
  #L3f0a1e.  call `setScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.setScale:(FF)V` @kind virtual;
  #L3f0a24.  return @kind void;
  #L3f0a26.  
  #L3f0a28.  switch v5
                  | 2 => goto L3f0a1e
                  | 3 => goto L3f0a16
                  | 4 => goto L3f0a08
                  | 5 => goto L3f09fa
                  | 6 => goto L3f09f2
                  | 7 => goto L3f09e4
                  | 8 => goto L3f09dc
                  | else => goto L3f09da;
}
procedure `android.graphics.Bitmap` `fitCenter`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v6 @kind object, `android.graphics.Bitmap` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.fitCenter:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f022c.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f0232.  v0:= temp;
  #L3f0234.  v1:= 2I;
  #L3f0236.  v2:= "TransformationUtils" @kind object;
  #L3f023a.  if v0 != v8 then goto L3f0262;
  #L3f023e.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f0244.  v0:= temp;
  #L3f0246.  if v0 != v9 then goto L3f0262;
  #L3f024a.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3f0250.  v6:= temp;
  #L3f0252.  if v6 == 0 then goto L3f0260;
  #L3f0256.  v6:= "requested target size matches input, returning input" @kind object;
  #L3f025a.  call temp:= `v`(v2, v6) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3f0260.  return v7 @kind object;
  #L3f0262.  v0:= (`float`) v8 @kind i2f;
  #L3f0264.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f026a.  v3:= temp;
  #L3f026c.  v3:= (`float`) v3 @kind i2f;
  #L3f026e.  v0:= v0 / v3 @kind float;
  #L3f0270.  v3:= (`float`) v9 @kind i2f;
  #L3f0272.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f0278.  v4:= temp;
  #L3f027a.  v4:= (`float`) v4 @kind i2f;
  #L3f027c.  v3:= v3 / v4 @kind float;
  #L3f027e.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3f0284.  v0:= temp;
  #L3f0286.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f028c.  v3:= temp;
  #L3f028e.  v3:= (`float`) v3 @kind i2f;
  #L3f0290.  v3:= v3 * v0 @kind float;
  #L3f0294.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3f029a.  v3:= temp;
  #L3f029c.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f02a2.  v4:= temp;
  #L3f02a4.  v4:= (`float`) v4 @kind i2f;
  #L3f02a6.  v4:= v4 * v0 @kind float;
  #L3f02aa.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3f02b0.  v4:= temp;
  #L3f02b2.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f02b8.  v5:= temp;
  #L3f02ba.  if v5 != v3 then goto L3f02e2;
  #L3f02be.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f02c4.  v3:= temp;
  #L3f02c6.  if v3 != v4 then goto L3f02e2;
  #L3f02ca.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3f02d0.  v6:= temp;
  #L3f02d2.  if v6 == 0 then goto L3f02e0;
  #L3f02d6.  v6:= "adjusted target size matches input, returning input" @kind object;
  #L3f02da.  call temp:= `v`(v2, v6) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3f02e0.  return v7 @kind object;
  #L3f02e2.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f02e8.  v3:= temp;
  #L3f02ea.  v3:= (`float`) v3 @kind i2f;
  #L3f02ec.  v3:= v3 * v0 @kind float;
  #L3f02f0.  v3:= (`int`) v3 @kind f2i;
  #L3f02f2.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f02f8.  v4:= temp;
  #L3f02fa.  v4:= (`float`) v4 @kind i2f;
  #L3f02fc.  v4:= v4 * v0 @kind float;
  #L3f0300.  v4:= (`int`) v4 @kind f2i;
  #L3f0302.  call temp:= `e`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.e:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3f0308.  v5:= temp @kind object;
  #L3f030a.  call temp:= `get`(v6, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3f0310.  v6:= temp @kind object;
  #L3f0312.  call `setAlpha`(v7, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.setAlpha:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V` @kind static;
  #L3f0318.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3f031e.  v1:= temp;
  #L3f0320.  if v1 == 0 then goto L3f040c;
  #L3f0324.  v1:= new `java.lang.StringBuilder`;
  #L3f0328.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f032e.  v3:= "request: " @kind object;
  #L3f0332.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0338.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f033e.  v8:= "x" @kind object;
  #L3f0342.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0348.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f034e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f0354.  v9:= temp @kind object;
  #L3f0356.  call temp:= `v`(v2, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3f035c.  v9:= new `java.lang.StringBuilder`;
  #L3f0360.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f0366.  v1:= "toFit:   " @kind object;
  #L3f036a.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0370.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f0376.  v1:= temp;
  #L3f0378.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f037e.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0384.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f038a.  v1:= temp;
  #L3f038c.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0392.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f0398.  v9:= temp @kind object;
  #L3f039a.  call temp:= `v`(v2, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3f03a0.  v9:= new `java.lang.StringBuilder`;
  #L3f03a4.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f03aa.  v1:= "toReuse: " @kind object;
  #L3f03ae.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f03b4.  call temp:= `getWidth`(v6) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f03ba.  v1:= temp;
  #L3f03bc.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f03c2.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f03c8.  call temp:= `getHeight`(v6) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f03ce.  v8:= temp;
  #L3f03d0.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f03d6.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f03dc.  v8:= temp @kind object;
  #L3f03de.  call temp:= `v`(v2, v8) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3f03e4.  v8:= new `java.lang.StringBuilder`;
  #L3f03e8.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f03ee.  v9:= "minPct:   " @kind object;
  #L3f03f2.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f03f8.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f03fe.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f0404.  v8:= temp @kind object;
  #L3f0406.  call temp:= `v`(v2, v8) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3f040c.  v8:= new `android.graphics.Matrix`;
  #L3f0410.  call `<init>`(v8) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3f0416.  call `setScale`(v8, v0, v0) @signature `Landroid/graphics/Matrix;.setScale:(FF)V` @kind virtual;
  #L3f041c.  call `a`(v7, v6, v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.a:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)V` @kind static;
  #L3f0422.  return v6 @kind object;
}
procedure `android.graphics.Bitmap` `g`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v8 @kind object, `android.graphics.Bitmap` v9 @kind object, `com.bumptech.glide.load.resource.bitmap.TransformationUtils$c` v10 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$c;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f05b4.  call temp:= `d`(v9) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.d:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3f05ba.  v0:= temp @kind object;
  #L3f05bc.  call temp:= `c`(v8, v9) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind static;
  #L3f05c2.  v1:= temp @kind object;
  #L3f05c4.  call temp:= `getWidth`(v1) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f05ca.  v2:= temp;
  #L3f05cc.  call temp:= `getHeight`(v1) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f05d2.  v3:= temp;
  #L3f05d4.  call temp:= `get`(v8, v2, v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3f05da.  v0:= temp @kind object;
  #L3f05dc.  v2:= 1I;
  #L3f05de.  call `setHasAlpha`(v0, v2) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3f05e4.  v3:= new `android.graphics.BitmapShader`;
  #L3f05e8.  v4:= `@@android.graphics.Shader$TileMode.CLAMP` @type ^`android.graphics.Shader$TileMode` @kind object;
  #L3f05ec.  call `<init>`(v3, v1, v4, v4) @signature `Landroid/graphics/BitmapShader;.<init>:(Landroid/graphics/Bitmap;Landroid/graphics/Shader$TileMode;Landroid/graphics/Shader$TileMode;)V` @kind direct;
  #L3f05f2.  v4:= new `android.graphics.Paint`;
  #L3f05f6.  call `<init>`(v4) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L3f05fc.  call `setAntiAlias`(v4, v2) @signature `Landroid/graphics/Paint;.setAntiAlias:(Z)V` @kind virtual;
  #L3f0602.  call temp:= `setShader`(v4, v3) @signature `Landroid/graphics/Paint;.setShader:(Landroid/graphics/Shader;)Landroid/graphics/Shader;` @kind virtual;
  #L3f0608.  v2:= new `android.graphics.RectF`;
  #L3f060c.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f0612.  v3:= temp;
  #L3f0614.  v3:= (`float`) v3 @kind i2f;
  #L3f0616.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f061c.  v5:= temp;
  #L3f061e.  v5:= (`float`) v5 @kind i2f;
  #L3f0620.  v6:= 0I;
  #L3f0622.  call `<init>`(v2, v6, v6, v3, v5) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L3f0628.  v3:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3f062c.  call `lock`(v3) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L3f0632.  v5:= new `android.graphics.Canvas`;
  #L3f0636.  call `<init>`(v5, v0) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3f063c.  v6:= 0I;
  #L3f063e.  v7:= `@@android.graphics.PorterDuff$Mode.CLEAR` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3f0642.  call `drawColor`(v5, v6, v7) @signature `Landroid/graphics/Canvas;.drawColor:(ILandroid/graphics/PorterDuff$Mode;)V` @kind virtual;
  #L3f0648.  call `a`(v10, v5, v4, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$c;.a:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/RectF;)V` @kind interface;
  #L3f064e.  call `b`(v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.b:(Landroid/graphics/Canvas;)V` @kind static;
  #L3f0654.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3f065a.  call temp:= `equals`(v1, v9) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0660.  v9:= temp;
  #L3f0662.  if v9 != 0 then goto L3f066c;
  #L3f0666.  call `put`(v8, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3f066c.  return v0 @kind object;
  #L3f066e.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f0670.  v9:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3f0674.  call `unlock`(v9) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3f067a.  throw v8;
  catch `java.lang.Throwable` @[L3f0632..L3f0654] goto L3f066e;
}
procedure `java.util.concurrent.locks.Lock` `getBitmapDrawableLock`() @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getBitmapDrawableLock:()Ljava/util/concurrent/locks/Lock;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f080c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3f0810.  return v0 @kind object;
}
procedure `int` `getExifOrientationDegrees`(`int` v0 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getExifOrientationDegrees:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f07c0.  goto L3f07dc;
  #L3f07c6.  v0:= 0I;
  #L3f07c8.  goto L3f07da;
  #L3f07ca.  v0:= 270I;
  #L3f07ce.  goto L3f07da;
  #L3f07d0.  v0:= 90I;
  #L3f07d4.  goto L3f07da;
  #L3f07d6.  v0:= 180I;
  #L3f07da.  return v0;
  #L3f07dc.  switch v0
                  | 3 => goto L3f07d6
                  | 4 => goto L3f07d6
                  | 5 => goto L3f07d0
                  | 6 => goto L3f07d0
                  | 7 => goto L3f07ca
                  | 8 => goto L3f07ca
                  | else => goto L3f07c6;
}
procedure `boolean` `isExifOrientationRequired`(`int` v0 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.isExifOrientationRequired:(I)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f077c.  goto L3f078c;
  #L3f0782.  v0:= 0I;
  #L3f0784.  return v0;
  #L3f0786.  v0:= 1I;
  #L3f0788.  return v0;
  #L3f078a.  
  #L3f078c.  switch v0
                  | 2 => goto L3f0786
                  | 3 => goto L3f0786
                  | 4 => goto L3f0786
                  | 5 => goto L3f0786
                  | 6 => goto L3f0786
                  | 7 => goto L3f0786
                  | 8 => goto L3f0786
                  | else => goto L3f0782;
}
procedure `android.graphics.Bitmap` `rotateImage`(`android.graphics.Bitmap` v7 @kind object, `int` v8 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.rotateImage:(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f0490.  if v8 == 0 then goto L3f04e6;
  #L3f0494.  v5:= new `android.graphics.Matrix`;
  #L3f0498.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3f049e.  v8:= (`float`) v8 @kind i2f;
  #L3f04a0.  call `setRotate`(v5, v8) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3f04a6.  v1:= 0I;
  #L3f04a8.  v2:= 0I;
  #L3f04aa.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f04b0.  v3:= temp;
  #L3f04b2.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f04b8.  v4:= temp;
  #L3f04ba.  v6:= 1I;
  #L3f04bc.  v0:= v7 @kind object;
  #L3f04be.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L3f04c4.  v7:= temp @kind object;
  #L3f04c6.  goto L3f04e6;
  #L3f04c8.  v8:= Exception @type ^`java.lang.Exception` @kind object;
  #L3f04ca.  v0:= 6I;
  #L3f04cc.  v1:= "TransformationUtils" @kind object;
  #L3f04d0.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3f04d6.  v0:= temp;
  #L3f04d8.  if v0 == 0 then goto L3f04e6;
  #L3f04dc.  v0:= "Exception when trying to orient image" @kind object;
  #L3f04e0.  call temp:= `e`(v1, v0, v8) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3f04e6.  return v7 @kind object;
  catch `java.lang.Exception` @[L3f0494..L3f04c6] goto L3f04c8;
}
procedure `android.graphics.Bitmap` `rotateImageExif`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v4 @kind object, `android.graphics.Bitmap` v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.rotateImageExif:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f0508.  call temp:= `isExifOrientationRequired`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.isExifOrientationRequired:(I)Z` @kind static;
  #L3f050e.  v0:= temp;
  #L3f0510.  if v0 != 0 then goto L3f0516;
  #L3f0514.  return v5 @kind object;
  #L3f0516.  v0:= new `android.graphics.Matrix`;
  #L3f051a.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3f0520.  call `f`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.f:(ILandroid/graphics/Matrix;)V` @kind static;
  #L3f0526.  v6:= new `android.graphics.RectF`;
  #L3f052a.  call temp:= `getWidth`(v5) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3f0530.  v1:= temp;
  #L3f0532.  v1:= (`float`) v1 @kind i2f;
  #L3f0534.  call temp:= `getHeight`(v5) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3f053a.  v2:= temp;
  #L3f053c.  v2:= (`float`) v2 @kind i2f;
  #L3f053e.  v3:= 0I;
  #L3f0540.  call `<init>`(v6, v3, v3, v1, v2) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L3f0546.  call temp:= `mapRect`(v0, v6) @signature `Landroid/graphics/Matrix;.mapRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L3f054c.  call temp:= `width`(v6) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3f0552.  v1:= temp;
  #L3f0554.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3f055a.  v1:= temp;
  #L3f055c.  call temp:= `height`(v6) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3f0562.  v2:= temp;
  #L3f0564.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3f056a.  v2:= temp;
  #L3f056c.  call temp:= `e`(v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.e:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3f0572.  v3:= temp @kind object;
  #L3f0574.  call temp:= `get`(v4, v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3f057a.  v4:= temp @kind object;
  #L3f057c.  v1:= v6.`android.graphics.RectF.left` @type ^`float`;
  #L3f0580.  v1:= -v1 @kind float;
  #L3f0582.  v6:= v6.`android.graphics.RectF.top` @type ^`float`;
  #L3f0586.  v6:= -v6 @kind float;
  #L3f0588.  call temp:= `postTranslate`(v0, v1, v6) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L3f058e.  call temp:= `hasAlpha`(v5) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L3f0594.  v6:= temp;
  #L3f0596.  call `setHasAlpha`(v4, v6) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3f059c.  call `a`(v5, v4, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.a:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)V` @kind static;
  #L3f05a2.  return v4 @kind object;
}
procedure `android.graphics.Bitmap` `roundedCorners`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v1 @kind object, `android.graphics.Bitmap` v2 @kind object, `float` v3 , `float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.roundedCorners:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;FFFF)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f0698.  v0:= new `com.bumptech.glide.load.resource.bitmap.TransformationUtils$b`;
  #L3f069c.  call `<init>`(v0, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$b;.<init>:(FFFF)V` @kind direct;
  #L3f06a2.  call temp:= `g`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$c;)Landroid/graphics/Bitmap;` @kind static;
  #L3f06a8.  v1:= temp @kind object;
  #L3f06aa.  return v1 @kind object;
}
procedure `android.graphics.Bitmap` `roundedCorners`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object, `android.graphics.Bitmap` v3 @kind object, `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.roundedCorners:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f06bc.  if v4 <= 0 then goto L3f06c4;
  #L3f06c0.  v0:= 1I;
  #L3f06c2.  goto L3f06c6;
  #L3f06c4.  v0:= 0I;
  #L3f06c6.  v1:= "roundingRadius must be greater than 0." @kind object;
  #L3f06ca.  call `checkArgument`(v0, v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L3f06d0.  v0:= new `com.bumptech.glide.load.resource.bitmap.TransformationUtils$a`;
  #L3f06d4.  call `<init>`(v0, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$a;.<init>:(I)V` @kind direct;
  #L3f06da.  call temp:= `g`(v2, v3, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$c;)Landroid/graphics/Bitmap;` @kind static;
  #L3f06e0.  v2:= temp @kind object;
  #L3f06e2.  return v2 @kind object;
}
procedure `android.graphics.Bitmap` `roundedCorners`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v0 @kind object, `android.graphics.Bitmap` v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.roundedCorners:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f06f4.  call temp:= `roundedCorners`(v0, v1, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.roundedCorners:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @kind static;
  #L3f06fa.  v0:= temp @kind object;
  #L3f06fc.  return v0 @kind object;
}
procedure `void` `setAlpha`(`android.graphics.Bitmap` v0 @kind object, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.setAlpha:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f0a5c.  call temp:= `hasAlpha`(v0) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L3f0a62.  v0:= temp;
  #L3f0a64.  call `setHasAlpha`(v1, v0) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3f0a6a.  return @kind void;
}
