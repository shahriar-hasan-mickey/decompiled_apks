record `com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.resource.bitmap.ImageReader` @kind interface {
  `java.io.File` `com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.c` @AccessFlag PRIVATE_FINAL;
}
procedure `android.graphics.Bitmap` `decodeBitmap`(`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader` v4 @kind this, `android.graphics.BitmapFactory$Options` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$FileReader;.decodeBitmap:(Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eecac.  v0:= 0I;
  #L3eecae.  v1:= new `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream`;
  #L3eecb2.  v2:= new `java.io.FileInputStream`;
  #L3eecb6.  v3:= v4.`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.a` @type ^`java.io.File` @kind object;
  #L3eecba.  call `<init>`(v2, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3eecc0.  v3:= v4.`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eecc4.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @kind direct;
  #L3eecca.  call temp:= `decodeStream`(v1, v0, v5) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L3eecd0.  v5:= temp @kind object;
  #L3eecd2.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3eecd8.  return v5 @kind object;
  #L3eecda.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eecdc.  v0:= v1 @kind object;
  #L3eecde.  goto L3eece2;
  #L3eece0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eece2.  if v0 == 0 then goto L3eecec;
  #L3eece6.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3eecec.  throw v5;
  catch `java.lang.Throwable` @[L3eecae..L3eecca] goto L3eece0;
  catch `java.lang.Throwable` @[L3eecca..L3eecd2] goto L3eecda;
  catch `java.io.IOException` @[L3eecd2..L3eecd8] goto L3eecd8;
  catch `java.io.IOException` @[L3eece6..L3eecec] goto L3eecec;
}
procedure `int` `getImageOrientation`(`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader` v5 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$FileReader;.getImageOrientation:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3eedc0.  v0:= 0I;
  #L3eedc2.  v1:= new `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream`;
  #L3eedc6.  v2:= new `java.io.FileInputStream`;
  #L3eedca.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.a` @type ^`java.io.File` @kind object;
  #L3eedce.  call `<init>`(v2, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3eedd4.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eedd8.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @kind direct;
  #L3eedde.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.b` @type ^`java.util.List` @kind object;
  #L3eede2.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eede6.  call temp:= `getOrientation`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getOrientation:(Ljava/util/List;Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @kind static;
  #L3eedec.  v0:= temp;
  #L3eedee.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3eedf4.  return v0;
  #L3eedf6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eedf8.  goto L3eee02;
  #L3eedfa.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eedfc.  v4:= v1 @kind object;
  #L3eedfe.  v1:= v0 @kind object;
  #L3eee00.  v0:= v4 @kind object;
  #L3eee02.  if v1 == 0 then goto L3eee0c;
  #L3eee06.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3eee0c.  throw v0;
  catch `java.lang.Throwable` @[L3eedc2..L3eedde] goto L3eedfa;
  catch `java.lang.Throwable` @[L3eedde..L3eedee] goto L3eedf6;
  catch `java.io.IOException` @[L3eedee..L3eedf4] goto L3eedf4;
  catch `java.io.IOException` @[L3eee06..L3eee0c] goto L3eee0c;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getImageType`(`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader` v5 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$FileReader;.getImageType:()Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3eed30.  v0:= 0I;
  #L3eed32.  v1:= new `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream`;
  #L3eed36.  v2:= new `java.io.FileInputStream`;
  #L3eed3a.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.a` @type ^`java.io.File` @kind object;
  #L3eed3e.  call `<init>`(v2, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3eed44.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eed48.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @kind direct;
  #L3eed4e.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.b` @type ^`java.util.List` @kind object;
  #L3eed52.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eed56.  call temp:= `getType`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils;.getType:(Ljava/util/List;Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind static;
  #L3eed5c.  v0:= temp @kind object;
  #L3eed5e.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3eed64.  return v0 @kind object;
  #L3eed66.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eed68.  goto L3eed72;
  #L3eed6a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eed6c.  v4:= v1 @kind object;
  #L3eed6e.  v1:= v0 @kind object;
  #L3eed70.  v0:= v4 @kind object;
  #L3eed72.  if v1 == 0 then goto L3eed7c;
  #L3eed76.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3eed7c.  throw v0;
  catch `java.lang.Throwable` @[L3eed32..L3eed4e] goto L3eed6a;
  catch `java.lang.Throwable` @[L3eed4e..L3eed5e] goto L3eed66;
  catch `java.io.IOException` @[L3eed5e..L3eed64] goto L3eed64;
  catch `java.io.IOException` @[L3eed76..L3eed7c] goto L3eed7c;
}
procedure `void` `stopGrowingBuffers`(`com.bumptech.glide.load.resource.bitmap.ImageReader$FileReader` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ImageReader$FileReader;.stopGrowingBuffers:()V` @AccessFlag PUBLIC {
    temp;

  #L3eee50.  return @kind void;
}
