record `com.bumptech.glide.load.resource.bitmap.BitmapEncoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceEncoder` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.bitmap.BitmapEncoder.a` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.Option` `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_FORMAT` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.Option` `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_QUALITY` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3eb4a8.  v0:= 90I;
  #L3eb4ac.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb4b2.  v0:= temp @kind object;
  #L3eb4b4.  v1:= "com.bumptech.glide.load.resource.bitmap.BitmapEncoder.CompressionQuality" @kind object;
  #L3eb4b8.  call temp:= `memory`(v1, v0) @signature `Lcom/bumptech/glide/load/Option;.memory:(Ljava/lang/String;Ljava/lang/Object;)Lcom/bumptech/glide/load/Option;` @kind static;
  #L3eb4be.  v0:= temp @kind object;
  #L3eb4c0.  `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_QUALITY` @type ^`com.bumptech.glide.load.Option` := v0 @kind object;
  #L3eb4c4.  v0:= "com.bumptech.glide.load.resource.bitmap.BitmapEncoder.CompressionFormat" @kind object;
  #L3eb4c8.  call temp:= `memory`(v0) @signature `Lcom/bumptech/glide/load/Option;.memory:(Ljava/lang/String;)Lcom/bumptech/glide/load/Option;` @kind static;
  #L3eb4ce.  v0:= temp @kind object;
  #L3eb4d0.  `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_FORMAT` @type ^`com.bumptech.glide.load.Option` := v0 @kind object;
  #L3eb4d4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3eb4e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb4ee.  v0:= 0I;
  #L3eb4f0.  v1.`com.bumptech.glide.load.resource.bitmap.BitmapEncoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v0 @kind object;
  #L3eb4f4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eb508.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb50e.  v0.`com.bumptech.glide.load.resource.bitmap.BitmapEncoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v1 @kind object;
  #L3eb512.  return @kind void;
}
procedure `android.graphics.Bitmap$CompressFormat` `a`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v1 @kind this, `android.graphics.Bitmap` v2 @kind object, `com.bumptech.glide.load.Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.a:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/Options;)Landroid/graphics/Bitmap$CompressFormat;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eb22c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_FORMAT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3eb230.  call temp:= `get`(v3, v0) @signature `Lcom/bumptech/glide/load/Options;.get:(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;` @kind virtual;
  #L3eb236.  v3:= temp @kind object;
  #L3eb238.  v3:= (`android.graphics.Bitmap$CompressFormat`) v3 @kind object;
  #L3eb23c.  if v3 == 0 then goto L3eb242;
  #L3eb240.  return v3 @kind object;
  #L3eb242.  call temp:= `hasAlpha`(v2) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L3eb248.  v2:= temp;
  #L3eb24a.  if v2 == 0 then goto L3eb254;
  #L3eb24e.  v2:= `@@android.graphics.Bitmap$CompressFormat.PNG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3eb252.  return v2 @kind object;
  #L3eb254.  v2:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L3eb258.  return v2 @kind object;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v8 @kind this, `com.bumptech.glide.load.engine.Resource` v9 @kind object, `java.io.File` v10 @kind object, `com.bumptech.glide.load.Options` v11 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.encode:(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3eb26c.  v0:= "BitmapEncoder" @kind object;
  #L3eb270.  call temp:= `get`(v9) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3eb276.  v9:= temp @kind object;
  #L3eb278.  v9:= (`android.graphics.Bitmap`) v9 @kind object;
  #L3eb27c.  call temp:= `a`(v8, v9, v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.a:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/Options;)Landroid/graphics/Bitmap$CompressFormat;` @kind direct;
  #L3eb282.  v1:= temp @kind object;
  #L3eb284.  call temp:= `getWidth`(v9) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3eb28a.  v2:= temp;
  #L3eb28c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb292.  v2:= temp @kind object;
  #L3eb294.  call temp:= `getHeight`(v9) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3eb29a.  v3:= temp;
  #L3eb29c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb2a2.  v3:= temp @kind object;
  #L3eb2a4.  v4:= "encode: [%dx%d] %s" @kind object;
  #L3eb2a8.  call `beginSectionFormat`(v4, v2, v3, v1) @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.beginSectionFormat:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L3eb2ae.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L3eb2b4.  v2:= temp @kind wide;
  #L3eb2b6.  v4:= `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_QUALITY` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3eb2ba.  call temp:= `get`(v11, v4) @signature `Lcom/bumptech/glide/load/Options;.get:(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;` @kind virtual;
  #L3eb2c0.  v4:= temp @kind object;
  #L3eb2c2.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L3eb2c6.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3eb2cc.  v4:= temp;
  #L3eb2ce.  v5:= 0I;
  #L3eb2d0.  v6:= 0I;
  #L3eb2d2.  v7:= new `java.io.FileOutputStream`;
  #L3eb2d6.  call `<init>`(v7, v10) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3eb2dc.  v10:= v8.`com.bumptech.glide.load.resource.bitmap.BitmapEncoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eb2e0.  if v10 == 0 then goto L3eb2f6;
  #L3eb2e4.  v10:= new `com.bumptech.glide.load.data.BufferedOutputStream`;
  #L3eb2e8.  v6:= v8.`com.bumptech.glide.load.resource.bitmap.BitmapEncoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3eb2ec.  call `<init>`(v10, v7, v6) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @kind direct;
  #L3eb2f2.  v6:= v10 @kind object;
  #L3eb2f4.  goto L3eb2f8;
  #L3eb2f6.  v6:= v7 @kind object;
  #L3eb2f8.  call temp:= `compress`(v9, v1, v4, v6) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L3eb2fe.  call `close`(v6) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3eb304.  v5:= 1I;
  #L3eb306.  call `close`(v6) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3eb30c.  goto L3eb33e;
  #L3eb30e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb310.  v6:= v7 @kind object;
  #L3eb312.  goto L3eb3e0;
  #L3eb314.  v10:= Exception @type ^`java.io.IOException` @kind object;
  #L3eb316.  v6:= v7 @kind object;
  #L3eb318.  goto L3eb320;
  #L3eb31a.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb31c.  goto L3eb3e0;
  #L3eb31e.  v10:= Exception @type ^`java.io.IOException` @kind object;
  #L3eb320.  v4:= 3I;
  #L3eb322.  call temp:= `isLoggable`(v0, v4) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3eb328.  v4:= temp;
  #L3eb32a.  if v4 == 0 then goto L3eb338;
  #L3eb32e.  v4:= "Failed to encode Bitmap" @kind object;
  #L3eb332.  call temp:= `d`(v0, v4, v10) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3eb338.  if v6 == 0 then goto L3eb33e;
  #L3eb33c.  goto L3eb306;
  #L3eb33e.  v10:= 2I;
  #L3eb340.  call temp:= `isLoggable`(v0, v10) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3eb346.  v10:= temp;
  #L3eb348.  if v10 == 0 then goto L3eb3d8;
  #L3eb34c.  v10:= new `java.lang.StringBuilder`;
  #L3eb350.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3eb356.  v4:= "Compressed with type: " @kind object;
  #L3eb35a.  call temp:= `append`(v10, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb360.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb366.  v1:= " of size " @kind object;
  #L3eb36a.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb370.  call temp:= `getBitmapByteSize`(v9) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L3eb376.  v1:= temp;
  #L3eb378.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb37e.  v1:= " in " @kind object;
  #L3eb382.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb388.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3eb38e.  v1:= temp @kind wide;
  #L3eb390.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb396.  v1:= ", options format: " @kind object;
  #L3eb39a.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb3a0.  v1:= `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_FORMAT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3eb3a4.  call temp:= `get`(v11, v1) @signature `Lcom/bumptech/glide/load/Options;.get:(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;` @kind virtual;
  #L3eb3aa.  v11:= temp @kind object;
  #L3eb3ac.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb3b2.  v11:= ", hasAlpha: " @kind object;
  #L3eb3b6.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb3bc.  call temp:= `hasAlpha`(v9) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L3eb3c2.  v9:= temp;
  #L3eb3c4.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb3ca.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3eb3d0.  v9:= temp @kind object;
  #L3eb3d2.  call temp:= `v`(v0, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3eb3d8.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3eb3de.  return v5;
  #L3eb3e0.  if v6 == 0 then goto L3eb3ea;
  #L3eb3e4.  call `close`(v6) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3eb3ea.  throw v9;
  #L3eb3ec.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb3ee.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3eb3f4.  throw v9;
  catch `java.lang.Throwable` @[L3eb2ae..L3eb2ce] goto L3eb3ec;
  catch `java.io.IOException` @[L3eb2d2..L3eb2dc] goto L3eb31e;
  catch `java.lang.Throwable` @[L3eb2d2..L3eb2dc] goto L3eb31a;
  catch `java.io.IOException` @[L3eb2dc..L3eb2f2] goto L3eb314;
  catch `java.lang.Throwable` @[L3eb2dc..L3eb2f2] goto L3eb30e;
  catch `java.io.IOException` @[L3eb2f8..L3eb304] goto L3eb31e;
  catch `java.lang.Throwable` @[L3eb2f8..L3eb304] goto L3eb31a;
  catch `java.io.IOException` @[L3eb306..L3eb30c] goto L3eb33e;
  catch `java.lang.Throwable` @[L3eb306..L3eb30c] goto L3eb3ec;
  catch `java.lang.Throwable` @[L3eb322..L3eb338] goto L3eb31a;
  catch `java.lang.Throwable` @[L3eb340..L3eb3d8] goto L3eb3ec;
  catch `java.io.IOException` @[L3eb3e4..L3eb3ea] goto L3eb3ea;
  catch `java.lang.Throwable` @[L3eb3e4..L3eb3ea] goto L3eb3ec;
  catch `java.lang.Throwable` @[L3eb3ea..L3eb3ec] goto L3eb3ec;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3eb470.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3eb474.  call temp:= `encode`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.encode:(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @kind virtual;
  #L3eb47a.  v1:= temp;
  #L3eb47c.  return v1;
}
procedure `com.bumptech.glide.load.EncodeStrategy` `getEncodeStrategy`(`com.bumptech.glide.load.resource.bitmap.BitmapEncoder` v0 @kind this, `com.bumptech.glide.load.Options` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapEncoder;.getEncodeStrategy:(Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/EncodeStrategy;` @AccessFlag PUBLIC {
    temp;

  #L3eb490.  v1:= `@@com.bumptech.glide.load.EncodeStrategy.TRANSFORMED` @type ^`com.bumptech.glide.load.EncodeStrategy` @kind object;
  #L3eb494.  return v1 @kind object;
}
