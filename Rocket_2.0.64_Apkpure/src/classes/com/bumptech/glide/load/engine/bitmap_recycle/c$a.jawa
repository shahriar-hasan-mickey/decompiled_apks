record `com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind class @AccessFlag  {
  `java.lang.Object` `com.bumptech.glide.load.engine.bitmap_recycle.c$a.a` @AccessFlag FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.bitmap_recycle.c$a.b` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.c$a` `com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @AccessFlag ;
  `com.bumptech.glide.load.engine.bitmap_recycle.c$a` `com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.c$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e28c0.  v0:= 0I;
  #L3e28c2.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e28c8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.c$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e28dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e28e2.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v0 @kind object;
  #L3e28e6.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v0 @kind object;
  #L3e28ea.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L3e28ee.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.c$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2900.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.b` @type ^`java.util.List` @kind object;
  #L3e2904.  if v0 != 0 then goto L3e2916;
  #L3e2908.  v0:= new `java.util.ArrayList`;
  #L3e290c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e2912.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.b` @type ^`java.util.List` := v0 @kind object;
  #L3e2916.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.b` @type ^`java.util.List` @kind object;
  #L3e291a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e2920.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.c$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e288c.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.c:()I` @kind virtual;
  #L3e2892.  v0:= temp;
  #L3e2894.  if v0 <= 0 then goto L3e28aa;
  #L3e2898.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.b` @type ^`java.util.List` @kind object;
  #L3e289c.  v0:= v0 + -1;
  #L3e28a0.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3e28a6.  v0:= temp @kind object;
  #L3e28a8.  goto L3e28ac;
  #L3e28aa.  v0:= 0I;
  #L3e28ac.  return v0 @kind object;
}
procedure `int` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.c$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2864.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.b` @type ^`java.util.List` @kind object;
  #L3e2868.  if v0 == 0 then goto L3e2876;
  #L3e286c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e2872.  v0:= temp;
  #L3e2874.  goto L3e2878;
  #L3e2876.  v0:= 0I;
  #L3e2878.  return v0;
}
