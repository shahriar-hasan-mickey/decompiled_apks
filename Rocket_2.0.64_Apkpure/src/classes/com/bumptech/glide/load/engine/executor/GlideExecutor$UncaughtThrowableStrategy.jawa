record `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` `@@com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy.DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` `@@com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy.IGNORE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` `@@com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy.LOG` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` `@@com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy.THROW` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e5d1c.  v0:= new `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$a`;
  #L3e5d20.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy$a;.<init>:()V` @kind direct;
  #L3e5d26.  `@@com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy.IGNORE` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` := v0 @kind object;
  #L3e5d2a.  v0:= new `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$b`;
  #L3e5d2e.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy$b;.<init>:()V` @kind direct;
  #L3e5d34.  `@@com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy.LOG` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` := v0 @kind object;
  #L3e5d38.  v1:= new `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$c`;
  #L3e5d3c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy$c;.<init>:()V` @kind direct;
  #L3e5d42.  `@@com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy.THROW` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` := v1 @kind object;
  #L3e5d46.  `@@com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy.DEFAULT` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` := v0 @kind object;
  #L3e5d4a.  return @kind void;
}
procedure `void` `handle`(`java.lang.Throwable` v0 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;.handle:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
