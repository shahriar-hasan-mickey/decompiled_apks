record `com.bumptech.glide.load.engine.n$a` @kind class @AccessFlag  extends `com.bumptech.glide.util.pool.FactoryPools$Factory` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.n$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/n$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e1730.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e1736.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.n` `a`(`com.bumptech.glide.load.engine.n$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n$a;.a:()Lcom/bumptech/glide/load/engine/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e16f8.  v0:= new `com.bumptech.glide.load.engine.n`;
  #L3e16fc.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/n;.<init>:()V` @kind direct;
  #L3e1702.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`com.bumptech.glide.load.engine.n$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n$a;.create:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3e1714.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/load/engine/n$a;.a:()Lcom/bumptech/glide/load/engine/n;` @kind virtual;
  #L3e171a.  v0:= temp @kind object;
  #L3e171c.  return v0 @kind object;
}
