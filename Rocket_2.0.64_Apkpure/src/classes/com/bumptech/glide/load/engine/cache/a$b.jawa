record `com.bumptech.glide.load.engine.cache.a$b` @kind class @AccessFlag  {
  `java.util.Queue` `com.bumptech.glide.load.engine.cache.a$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.a$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/a$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e4638.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e463e.  v0:= new `java.util.ArrayDeque`;
  #L3e4642.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L3e4648.  v1.`com.bumptech.glide.load.engine.cache.a$b.a` @type ^`java.util.Queue` := v0 @kind object;
  #L3e464c.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.cache.a$a` `a`(`com.bumptech.glide.load.engine.cache.a$b` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/a$b;.a:()Lcom/bumptech/glide/load/engine/cache/a$a;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e45e4.  v0:= v2.`com.bumptech.glide.load.engine.cache.a$b.a` @type ^`java.util.Queue` @kind object;
  #L3e45e8.  @monitorenter v0
  #L3e45ea.  v1:= v2.`com.bumptech.glide.load.engine.cache.a$b.a` @type ^`java.util.Queue` @kind object;
  #L3e45ee.  call temp:= `poll`(v1) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L3e45f4.  v1:= temp @kind object;
  #L3e45f6.  v1:= (`com.bumptech.glide.load.engine.cache.a$a`) v1 @kind object;
  #L3e45fa.  @monitorexit v0
  #L3e45fc.  if v1 != 0 then goto L3e460a;
  #L3e4600.  v1:= new `com.bumptech.glide.load.engine.cache.a$a`;
  #L3e4604.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/engine/cache/a$a;.<init>:()V` @kind direct;
  #L3e460a.  return v1 @kind object;
  #L3e460c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e460e.  @monitorexit v0
  #L3e4610.  throw v1;
  catch `java.lang.Throwable` @[L3e45ea..L3e45fc] goto L3e460c;
  catch `java.lang.Throwable` @[L3e460e..L3e4610] goto L3e460c;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.cache.a$b` v3 @kind this, `com.bumptech.glide.load.engine.cache.a$a` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/a$b;.b:(Lcom/bumptech/glide/load/engine/cache/a$a;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3e4660.  v0:= v3.`com.bumptech.glide.load.engine.cache.a$b.a` @type ^`java.util.Queue` @kind object;
  #L3e4664.  @monitorenter v0
  #L3e4666.  v1:= v3.`com.bumptech.glide.load.engine.cache.a$b.a` @type ^`java.util.Queue` @kind object;
  #L3e466a.  call temp:= `size`(v1) @signature `Ljava/util/Queue;.size:()I` @kind interface;
  #L3e4670.  v1:= temp;
  #L3e4672.  v2:= 10I;
  #L3e4676.  if v1 >= v2 then goto L3e4684;
  #L3e467a.  v1:= v3.`com.bumptech.glide.load.engine.cache.a$b.a` @type ^`java.util.Queue` @kind object;
  #L3e467e.  call temp:= `offer`(v1, v4) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L3e4684.  @monitorexit v0
  #L3e4686.  return @kind void;
  #L3e4688.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e468a.  @monitorexit v0
  #L3e468c.  throw v4;
  catch `java.lang.Throwable` @[L3e4666..L3e468c] goto L3e4688;
}
