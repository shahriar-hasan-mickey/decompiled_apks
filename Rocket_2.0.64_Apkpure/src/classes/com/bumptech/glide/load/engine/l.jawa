record `com.bumptech.glide.load.engine.l` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.Resource` @kind interface {
  `boolean` `com.bumptech.glide.load.engine.l.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.load.engine.l.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Resource` `com.bumptech.glide.load.engine.l.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.l$a` `com.bumptech.glide.load.engine.l.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.l.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.l.f` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.l.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.l` v0 @kind this, `com.bumptech.glide.load.engine.Resource` v1 @kind object, `boolean` v2 , `boolean` v3 , `com.bumptech.glide.load.Key` v4 @kind object, `com.bumptech.glide.load.engine.l$a` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/l;.<init>:(Lcom/bumptech/glide/load/engine/Resource;ZZLcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/l$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e05fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e0602.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e0608.  v1:= temp @kind object;
  #L3e060a.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3e060e.  v0.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` := v1 @kind object;
  #L3e0612.  v0.`com.bumptech.glide.load.engine.l.a` @type ^`boolean` := v2 @kind boolean;
  #L3e0616.  v0.`com.bumptech.glide.load.engine.l.b` @type ^`boolean` := v3 @kind boolean;
  #L3e061a.  v0.`com.bumptech.glide.load.engine.l.e` @type ^`com.bumptech.glide.load.Key` := v4 @kind object;
  #L3e061e.  call temp:= `checkNotNull`(v5) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e0624.  v1:= temp @kind object;
  #L3e0626.  v1:= (`com.bumptech.glide.load.engine.l$a`) v1 @kind object;
  #L3e062a.  v0.`com.bumptech.glide.load.engine.l.d` @type ^`com.bumptech.glide.load.engine.l$a` := v1 @kind object;
  #L3e062e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.l` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e0640.  @monitorenter v2
  #L3e0642.  v0:= v2.`com.bumptech.glide.load.engine.l.g` @type ^`boolean` @kind boolean;
  #L3e0646.  if v0 != 0 then goto L3e065a;
  #L3e064a.  v0:= v2.`com.bumptech.glide.load.engine.l.f` @type ^`int`;
  #L3e064e.  v0:= v0 + 1;
  #L3e0652.  v2.`com.bumptech.glide.load.engine.l.f` @type ^`int` := v0;
  #L3e0656.  @monitorexit v2
  #L3e0658.  return @kind void;
  #L3e065a.  v0:= new `java.lang.IllegalStateException`;
  #L3e065e.  v1:= "Cannot acquire a recycled resource" @kind object;
  #L3e0662.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e0668.  throw v0;
  #L3e066a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e066c.  @monitorexit v2
  #L3e066e.  throw v0;
  catch `java.lang.Throwable` @[L3e0642..L3e0656] goto L3e066a;
  catch `java.lang.Throwable` @[L3e065a..L3e066a] goto L3e066a;
}
procedure `com.bumptech.glide.load.engine.Resource` `b`(`com.bumptech.glide.load.engine.l` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.b:()Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag  {
    temp;
    v0;

  #L3e04c8.  v0:= v1.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3e04cc.  return v0 @kind object;
}
procedure `boolean` `c`(`com.bumptech.glide.load.engine.l` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.c:()Z` @AccessFlag  {
    temp;
    v0;

  #L3e04b0.  v0:= v1.`com.bumptech.glide.load.engine.l.a` @type ^`boolean` @kind boolean;
  #L3e04b4.  return v0;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.l` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e070c.  @monitorenter v2
  #L3e070e.  v0:= v2.`com.bumptech.glide.load.engine.l.f` @type ^`int`;
  #L3e0712.  if v0 <= 0 then goto L3e073c;
  #L3e0716.  v1:= 1I;
  #L3e0718.  v0:= v0 - v1 @kind int;
  #L3e071a.  v2.`com.bumptech.glide.load.engine.l.f` @type ^`int` := v0;
  #L3e071e.  if v0 != 0 then goto L3e0724;
  #L3e0722.  goto L3e0726;
  #L3e0724.  v1:= 0I;
  #L3e0726.  @monitorexit v2
  #L3e0728.  if v1 == 0 then goto L3e073a;
  #L3e072c.  v0:= v2.`com.bumptech.glide.load.engine.l.d` @type ^`com.bumptech.glide.load.engine.l$a` @kind object;
  #L3e0730.  v1:= v2.`com.bumptech.glide.load.engine.l.e` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3e0734.  call `onResourceReleased`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/l$a;.onResourceReleased:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/l;)V` @kind interface;
  #L3e073a.  return @kind void;
  #L3e073c.  v0:= new `java.lang.IllegalStateException`;
  #L3e0740.  v1:= "Cannot release a recycled or not yet acquired resource" @kind object;
  #L3e0744.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e074a.  throw v0;
  #L3e074c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e074e.  @monitorexit v2
  #L3e0750.  throw v0;
  catch `java.lang.Throwable` @[L3e070e..L3e0728] goto L3e074c;
  catch `java.lang.Throwable` @[L3e073c..L3e0750] goto L3e074c;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.engine.l` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0520.  v0:= v1.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3e0524.  call temp:= `get`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3e052a.  v0:= temp @kind object;
  #L3e052c.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.load.engine.l` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0500.  v0:= v1.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3e0504.  call temp:= `getResourceClass`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.getResourceClass:()Ljava/lang/Class;` @kind interface;
  #L3e050a.  v0:= temp @kind object;
  #L3e050c.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.l` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e04e0.  v0:= v1.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3e04e4.  call temp:= `getSize`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.getSize:()I` @kind interface;
  #L3e04ea.  v0:= temp;
  #L3e04ec.  return v0;
}
procedure `void` `recycle`(`com.bumptech.glide.load.engine.l` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0694.  @monitorenter v2
  #L3e0696.  v0:= v2.`com.bumptech.glide.load.engine.l.f` @type ^`int`;
  #L3e069a.  if v0 > 0 then goto L3e06d2;
  #L3e069e.  v0:= v2.`com.bumptech.glide.load.engine.l.g` @type ^`boolean` @kind boolean;
  #L3e06a2.  if v0 != 0 then goto L3e06c2;
  #L3e06a6.  v0:= 1I;
  #L3e06a8.  v2.`com.bumptech.glide.load.engine.l.g` @type ^`boolean` := v0 @kind boolean;
  #L3e06ac.  v0:= v2.`com.bumptech.glide.load.engine.l.b` @type ^`boolean` @kind boolean;
  #L3e06b0.  if v0 == 0 then goto L3e06be;
  #L3e06b4.  v0:= v2.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3e06b8.  call `recycle`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L3e06be.  @monitorexit v2
  #L3e06c0.  return @kind void;
  #L3e06c2.  v0:= new `java.lang.IllegalStateException`;
  #L3e06c6.  v1:= "Cannot recycle a resource that has already been recycled" @kind object;
  #L3e06ca.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e06d0.  throw v0;
  #L3e06d2.  v0:= new `java.lang.IllegalStateException`;
  #L3e06d6.  v1:= "Cannot recycle a resource while it is still acquired" @kind object;
  #L3e06da.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e06e0.  throw v0;
  #L3e06e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e06e4.  @monitorexit v2
  #L3e06e6.  throw v0;
  catch `java.lang.Throwable` @[L3e0696..L3e06be] goto L3e06e2;
  catch `java.lang.Throwable` @[L3e06c2..L3e06e2] goto L3e06e2;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.l` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0540.  @monitorenter v2
  #L3e0542.  v0:= new `java.lang.StringBuilder`;
  #L3e0546.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e054c.  v1:= "EngineResource{isMemoryCacheable=" @kind object;
  #L3e0550.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0556.  v1:= v2.`com.bumptech.glide.load.engine.l.a` @type ^`boolean` @kind boolean;
  #L3e055a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0560.  v1:= ", listener=" @kind object;
  #L3e0564.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e056a.  v1:= v2.`com.bumptech.glide.load.engine.l.d` @type ^`com.bumptech.glide.load.engine.l$a` @kind object;
  #L3e056e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0574.  v1:= ", key=" @kind object;
  #L3e0578.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e057e.  v1:= v2.`com.bumptech.glide.load.engine.l.e` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3e0582.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0588.  v1:= ", acquired=" @kind object;
  #L3e058c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0592.  v1:= v2.`com.bumptech.glide.load.engine.l.f` @type ^`int`;
  #L3e0596.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e059c.  v1:= ", isRecycled=" @kind object;
  #L3e05a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e05a6.  v1:= v2.`com.bumptech.glide.load.engine.l.g` @type ^`boolean` @kind boolean;
  #L3e05aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e05b0.  v1:= ", resource=" @kind object;
  #L3e05b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e05ba.  v1:= v2.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3e05be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e05c4.  v1:= 125I;
  #L3e05c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e05ce.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e05d4.  v0:= temp @kind object;
  #L3e05d6.  @monitorexit v2
  #L3e05d8.  return v0 @kind object;
  #L3e05da.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e05dc.  @monitorexit v2
  #L3e05de.  throw v0;
  catch `java.lang.Throwable` @[L3e0542..L3e05d6] goto L3e05da;
}
