record `com.bumptech.glide.load.engine.executor.GlideExecutor$c$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.lang.Runnable` `com.bumptech.glide.load.engine.executor.GlideExecutor$c$a.a` @AccessFlag FINAL_SYNTHETIC;
  `com.bumptech.glide.load.engine.executor.GlideExecutor$c` `com.bumptech.glide.load.engine.executor.GlideExecutor$c$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.executor.GlideExecutor$c$a` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor$c` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$c$a;.<init>:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$c;Ljava/lang/Runnable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e5b2c.  v0.`com.bumptech.glide.load.engine.executor.GlideExecutor$c$a.b` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$c` := v1 @kind object;
  #L3e5b30.  v0.`com.bumptech.glide.load.engine.executor.GlideExecutor$c$a.a` @type ^`java.lang.Runnable` := v2 @kind object;
  #L3e5b34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e5b3a.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.executor.GlideExecutor$c$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$c$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e5b4c.  v0:= v2.`com.bumptech.glide.load.engine.executor.GlideExecutor$c$a.b` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$c` @kind object;
  #L3e5b50.  v0:= v0.`com.bumptech.glide.load.engine.executor.GlideExecutor$c.d` @type ^`boolean` @kind boolean;
  #L3e5b54.  if v0 == 0 then goto L3e5b80;
  #L3e5b58.  v0:= new `android.os.StrictMode$ThreadPolicy$Builder`;
  #L3e5b5c.  call `<init>`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.<init>:()V` @kind direct;
  #L3e5b62.  call temp:= `detectNetwork`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.detectNetwork:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L3e5b68.  v0:= temp @kind object;
  #L3e5b6a.  call temp:= `penaltyDeath`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.penaltyDeath:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L3e5b70.  v0:= temp @kind object;
  #L3e5b72.  call temp:= `build`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.build:()Landroid/os/StrictMode$ThreadPolicy;` @kind virtual;
  #L3e5b78.  v0:= temp @kind object;
  #L3e5b7a.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L3e5b80.  v0:= v2.`com.bumptech.glide.load.engine.executor.GlideExecutor$c$a.a` @type ^`java.lang.Runnable` @kind object;
  #L3e5b84.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3e5b8a.  goto L3e5b9c;
  #L3e5b8c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e5b8e.  v1:= v2.`com.bumptech.glide.load.engine.executor.GlideExecutor$c$a.b` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$c` @kind object;
  #L3e5b92.  v1:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor$c.c` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` @kind object;
  #L3e5b96.  call `handle`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;.handle:(Ljava/lang/Throwable;)V` @kind interface;
  #L3e5b9c.  return @kind void;
  catch `java.lang.Throwable` @[L3e5b80..L3e5b8a] goto L3e5b8c;
}
