record `com.bumptech.glide.load.engine.g$f` @kind class @AccessFlag  {
  `boolean` `com.bumptech.glide.load.engine.g$f.a` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.g$f.b` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.g$f.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.g$f` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/g$f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ddc68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ddc6e.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.g$f` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/engine/g$f;.a:(Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ddb8c.  v0:= v1.`com.bumptech.glide.load.engine.g$f.c` @type ^`boolean` @kind boolean;
  #L3ddb90.  if v0 != 0 then goto L3ddba0;
  #L3ddb94.  if v2 != 0 then goto L3ddba0;
  #L3ddb98.  v2:= v1.`com.bumptech.glide.load.engine.g$f.b` @type ^`boolean` @kind boolean;
  #L3ddb9c.  if v2 == 0 then goto L3ddbac;
  #L3ddba0.  v2:= v1.`com.bumptech.glide.load.engine.g$f.a` @type ^`boolean` @kind boolean;
  #L3ddba4.  if v2 == 0 then goto L3ddbac;
  #L3ddba8.  v2:= 1I;
  #L3ddbaa.  goto L3ddbae;
  #L3ddbac.  v2:= 0I;
  #L3ddbae.  return v2;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.g$f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g$f;.b:()Z` @AccessFlag  {
    temp;
    v0;

  #L3ddbc0.  @monitorenter v1
  #L3ddbc2.  v0:= 1I;
  #L3ddbc4.  v1.`com.bumptech.glide.load.engine.g$f.b` @type ^`boolean` := v0 @kind boolean;
  #L3ddbc8.  v0:= 0I;
  #L3ddbca.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/g$f;.a:(Z)Z` @kind direct;
  #L3ddbd0.  v0:= temp;
  #L3ddbd2.  @monitorexit v1
  #L3ddbd4.  return v0;
  #L3ddbd6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ddbd8.  @monitorexit v1
  #L3ddbda.  throw v0;
  catch `java.lang.Throwable` @[L3ddbc4..L3ddbd2] goto L3ddbd6;
}
procedure `boolean` `c`(`com.bumptech.glide.load.engine.g$f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g$f;.c:()Z` @AccessFlag  {
    temp;
    v0;

  #L3ddbf8.  @monitorenter v1
  #L3ddbfa.  v0:= 1I;
  #L3ddbfc.  v1.`com.bumptech.glide.load.engine.g$f.c` @type ^`boolean` := v0 @kind boolean;
  #L3ddc00.  v0:= 0I;
  #L3ddc02.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/g$f;.a:(Z)Z` @kind direct;
  #L3ddc08.  v0:= temp;
  #L3ddc0a.  @monitorexit v1
  #L3ddc0c.  return v0;
  #L3ddc0e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ddc10.  @monitorexit v1
  #L3ddc12.  throw v0;
  catch `java.lang.Throwable` @[L3ddbfc..L3ddc0a] goto L3ddc0e;
}
procedure `boolean` `d`(`com.bumptech.glide.load.engine.g$f` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/engine/g$f;.d:(Z)Z` @AccessFlag  {
    temp;
    v0;

  #L3ddc30.  @monitorenter v1
  #L3ddc32.  v0:= 1I;
  #L3ddc34.  v1.`com.bumptech.glide.load.engine.g$f.a` @type ^`boolean` := v0 @kind boolean;
  #L3ddc38.  call temp:= `a`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/g$f;.a:(Z)Z` @kind direct;
  #L3ddc3e.  v2:= temp;
  #L3ddc40.  @monitorexit v1
  #L3ddc42.  return v2;
  #L3ddc44.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ddc46.  @monitorexit v1
  #L3ddc48.  throw v2;
  catch `java.lang.Throwable` @[L3ddc34..L3ddc40] goto L3ddc44;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.g$f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g$f;.e:()V` @AccessFlag  {
    temp;
    v0;

  #L3ddc80.  @monitorenter v1
  #L3ddc82.  v0:= 0I;
  #L3ddc84.  v1.`com.bumptech.glide.load.engine.g$f.b` @type ^`boolean` := v0 @kind boolean;
  #L3ddc88.  v1.`com.bumptech.glide.load.engine.g$f.a` @type ^`boolean` := v0 @kind boolean;
  #L3ddc8c.  v1.`com.bumptech.glide.load.engine.g$f.c` @type ^`boolean` := v0 @kind boolean;
  #L3ddc90.  @monitorexit v1
  #L3ddc92.  return @kind void;
  #L3ddc94.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ddc96.  @monitorexit v1
  #L3ddc98.  throw v0;
  catch `java.lang.Throwable` @[L3ddc84..L3ddc90] goto L3ddc94;
}
