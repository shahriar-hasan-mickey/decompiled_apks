record `com.bumptech.glide.load.engine.f` @kind class @AccessFlag FINAL {
  `java.util.List` `com.bumptech.glide.load.engine.f.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.f.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.GlideContext` `com.bumptech.glide.load.engine.f.c` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.load.engine.f.d` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.f.e` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.f.f` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.load.engine.f.g` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.g$e` `com.bumptech.glide.load.engine.f.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Options` `com.bumptech.glide.load.engine.f.i` @AccessFlag PRIVATE;
  `java.util.Map` `com.bumptech.glide.load.engine.f.j` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.load.engine.f.k` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.f.l` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.f.m` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.f.n` @AccessFlag PRIVATE;
  `com.bumptech.glide.Priority` `com.bumptech.glide.load.engine.f.o` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.DiskCacheStrategy` `com.bumptech.glide.load.engine.f.p` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.f.q` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.f.r` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3dd7fc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dd802.  v0:= new `java.util.ArrayList`;
  #L3dd806.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3dd80c.  v1.`com.bumptech.glide.load.engine.f.a` @type ^`java.util.List` := v0 @kind object;
  #L3dd810.  v0:= new `java.util.ArrayList`;
  #L3dd814.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3dd81a.  v1.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` := v0 @kind object;
  #L3dd81e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.f` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3dd830.  v0:= 0I;
  #L3dd832.  v2.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` := v0 @kind object;
  #L3dd836.  v2.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` := v0 @kind object;
  #L3dd83a.  v2.`com.bumptech.glide.load.engine.f.n` @type ^`com.bumptech.glide.load.Key` := v0 @kind object;
  #L3dd83e.  v2.`com.bumptech.glide.load.engine.f.g` @type ^`java.lang.Class` := v0 @kind object;
  #L3dd842.  v2.`com.bumptech.glide.load.engine.f.k` @type ^`java.lang.Class` := v0 @kind object;
  #L3dd846.  v2.`com.bumptech.glide.load.engine.f.i` @type ^`com.bumptech.glide.load.Options` := v0 @kind object;
  #L3dd84a.  v2.`com.bumptech.glide.load.engine.f.o` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L3dd84e.  v2.`com.bumptech.glide.load.engine.f.j` @type ^`java.util.Map` := v0 @kind object;
  #L3dd852.  v2.`com.bumptech.glide.load.engine.f.p` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3dd856.  v0:= v2.`com.bumptech.glide.load.engine.f.a` @type ^`java.util.List` @kind object;
  #L3dd85a.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3dd860.  v0:= 0I;
  #L3dd862.  v2.`com.bumptech.glide.load.engine.f.l` @type ^`boolean` := v0 @kind boolean;
  #L3dd866.  v1:= v2.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3dd86a.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3dd870.  v2.`com.bumptech.glide.load.engine.f.m` @type ^`boolean` := v0 @kind boolean;
  #L3dd874.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `b`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.b:()Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;` @AccessFlag  {
    temp;
    v0;

  #L3dd5a0.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3dd5a4.  call temp:= `getArrayPool`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getArrayPool:()Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;` @kind virtual;
  #L3dd5aa.  v0:= temp @kind object;
  #L3dd5ac.  return v0 @kind object;
}
procedure `java.util.List` `c`(`com.bumptech.glide.load.engine.f` v8 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.c:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dd648.  v0:= v8.`com.bumptech.glide.load.engine.f.m` @type ^`boolean` @kind boolean;
  #L3dd64c.  if v0 != 0 then goto L3dd6f6;
  #L3dd650.  v0:= 1I;
  #L3dd652.  v8.`com.bumptech.glide.load.engine.f.m` @type ^`boolean` := v0 @kind boolean;
  #L3dd656.  v0:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3dd65a.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3dd660.  call temp:= `g`(v8) @signature `Lcom/bumptech/glide/load/engine/f;.g:()Ljava/util/List;` @kind virtual;
  #L3dd666.  v0:= temp @kind object;
  #L3dd668.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dd66e.  v1:= temp;
  #L3dd670.  v2:= 0I;
  #L3dd672.  v3:= 0I;
  #L3dd674.  if v3 >= v1 then goto L3dd6f6;
  #L3dd678.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dd67e.  v4:= temp @kind object;
  #L3dd680.  v4:= (`com.bumptech.glide.load.model.ModelLoader$LoadData`) v4 @kind object;
  #L3dd684.  v5:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3dd688.  v6:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd68c.  call temp:= `contains`(v5, v6) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3dd692.  v5:= temp;
  #L3dd694.  if v5 != 0 then goto L3dd6a6;
  #L3dd698.  v5:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3dd69c.  v6:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd6a0.  call temp:= `add`(v5, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3dd6a6.  v5:= 0I;
  #L3dd6a8.  v6:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.alternateKeys` @type ^`java.util.List` @kind object;
  #L3dd6ac.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dd6b2.  v6:= temp;
  #L3dd6b4.  if v5 >= v6 then goto L3dd6f0;
  #L3dd6b8.  v6:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3dd6bc.  v7:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.alternateKeys` @type ^`java.util.List` @kind object;
  #L3dd6c0.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dd6c6.  v7:= temp @kind object;
  #L3dd6c8.  call temp:= `contains`(v6, v7) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3dd6ce.  v6:= temp;
  #L3dd6d0.  if v6 != 0 then goto L3dd6ea;
  #L3dd6d4.  v6:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3dd6d8.  v7:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.alternateKeys` @type ^`java.util.List` @kind object;
  #L3dd6dc.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dd6e2.  v7:= temp @kind object;
  #L3dd6e4.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3dd6ea.  v5:= v5 + 1;
  #L3dd6ee.  goto L3dd6a8;
  #L3dd6f0.  v3:= v3 + 1;
  #L3dd6f4.  goto L3dd674;
  #L3dd6f6.  v0:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3dd6fa.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.DiskCache` `d`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.d:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @AccessFlag  {
    temp;
    v0;

  #L3dd5c0.  v0:= v1.`com.bumptech.glide.load.engine.f.h` @type ^`com.bumptech.glide.load.engine.g$e` @kind object;
  #L3dd5c4.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/g$e;.a:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind interface;
  #L3dd5ca.  v0:= temp @kind object;
  #L3dd5cc.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.DiskCacheStrategy` `e`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.e:()Lcom/bumptech/glide/load/engine/DiskCacheStrategy;` @AccessFlag  {
    temp;
    v0;

  #L3dd558.  v0:= v1.`com.bumptech.glide.load.engine.f.p` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3dd55c.  return v0 @kind object;
}
procedure `int` `f`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.f:()I` @AccessFlag  {
    temp;
    v0;

  #L3dd5e0.  v0:= v1.`com.bumptech.glide.load.engine.f.f` @type ^`int`;
  #L3dd5e4.  return v0;
}
procedure `java.util.List` `g`(`com.bumptech.glide.load.engine.f` v8 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.g:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dd70c.  v0:= v8.`com.bumptech.glide.load.engine.f.l` @type ^`boolean` @kind boolean;
  #L3dd710.  if v0 != 0 then goto L3dd782;
  #L3dd714.  v0:= 1I;
  #L3dd716.  v8.`com.bumptech.glide.load.engine.f.l` @type ^`boolean` := v0 @kind boolean;
  #L3dd71a.  v0:= v8.`com.bumptech.glide.load.engine.f.a` @type ^`java.util.List` @kind object;
  #L3dd71e.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3dd724.  v0:= v8.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3dd728.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3dd72e.  v0:= temp @kind object;
  #L3dd730.  v1:= v8.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` @kind object;
  #L3dd734.  call temp:= `getModelLoaders`(v0, v1) @signature `Lcom/bumptech/glide/Registry;.getModelLoaders:(Ljava/lang/Object;)Ljava/util/List;` @kind virtual;
  #L3dd73a.  v0:= temp @kind object;
  #L3dd73c.  v1:= 0I;
  #L3dd73e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dd744.  v2:= temp;
  #L3dd746.  if v1 >= v2 then goto L3dd782;
  #L3dd74a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dd750.  v3:= temp @kind object;
  #L3dd752.  v3:= (`com.bumptech.glide.load.model.ModelLoader`) v3 @kind object;
  #L3dd756.  v4:= v8.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` @kind object;
  #L3dd75a.  v5:= v8.`com.bumptech.glide.load.engine.f.e` @type ^`int`;
  #L3dd75e.  v6:= v8.`com.bumptech.glide.load.engine.f.f` @type ^`int`;
  #L3dd762.  v7:= v8.`com.bumptech.glide.load.engine.f.i` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3dd766.  call temp:= `buildLoadData`(v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/model/ModelLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @kind interface;
  #L3dd76c.  v3:= temp @kind object;
  #L3dd76e.  if v3 == 0 then goto L3dd77c;
  #L3dd772.  v4:= v8.`com.bumptech.glide.load.engine.f.a` @type ^`java.util.List` @kind object;
  #L3dd776.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3dd77c.  v1:= v1 + 1;
  #L3dd780.  goto L3dd746;
  #L3dd782.  v0:= v8.`com.bumptech.glide.load.engine.f.a` @type ^`java.util.List` @kind object;
  #L3dd786.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.LoadPath` `h`(`com.bumptech.glide.load.engine.f` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.h:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/LoadPath;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3dd570.  v0:= v3.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3dd574.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3dd57a.  v0:= temp @kind object;
  #L3dd57c.  v1:= v3.`com.bumptech.glide.load.engine.f.g` @type ^`java.lang.Class` @kind object;
  #L3dd580.  v2:= v3.`com.bumptech.glide.load.engine.f.k` @type ^`java.lang.Class` @kind object;
  #L3dd584.  call temp:= `getLoadPath`(v0, v4, v1, v2) @signature `Lcom/bumptech/glide/Registry;.getLoadPath:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/LoadPath;` @kind virtual;
  #L3dd58a.  v4:= temp @kind object;
  #L3dd58c.  return v4 @kind object;
}
procedure `java.lang.Class` `i`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.i:()Ljava/lang/Class;` @AccessFlag  {
    temp;
    v0;

  #L3dd610.  v0:= v1.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` @kind object;
  #L3dd614.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3dd61a.  v0:= temp @kind object;
  #L3dd61c.  return v0 @kind object;
}
procedure `java.util.List` `j`(`com.bumptech.glide.load.engine.f` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.j:(Ljava/io/File;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;

  #L3dd798.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3dd79c.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3dd7a2.  v0:= temp @kind object;
  #L3dd7a4.  call temp:= `getModelLoaders`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.getModelLoaders:(Ljava/lang/Object;)Ljava/util/List;` @kind virtual;
  #L3dd7aa.  v2:= temp @kind object;
  #L3dd7ac.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.Options` `k`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.k:()Lcom/bumptech/glide/load/Options;` @AccessFlag  {
    temp;
    v0;

  #L3dd418.  v0:= v1.`com.bumptech.glide.load.engine.f.i` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3dd41c.  return v0 @kind object;
}
procedure `com.bumptech.glide.Priority` `l`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.l:()Lcom/bumptech/glide/Priority;` @AccessFlag  {
    temp;
    v0;

  #L3dd3c0.  v0:= v1.`com.bumptech.glide.load.engine.f.o` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3dd3c4.  return v0 @kind object;
}
procedure `java.util.List` `m`(`com.bumptech.glide.load.engine.f` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.m:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dd7c0.  v0:= v4.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3dd7c4.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3dd7ca.  v0:= temp @kind object;
  #L3dd7cc.  v1:= v4.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` @kind object;
  #L3dd7d0.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3dd7d6.  v1:= temp @kind object;
  #L3dd7d8.  v2:= v4.`com.bumptech.glide.load.engine.f.g` @type ^`java.lang.Class` @kind object;
  #L3dd7dc.  v3:= v4.`com.bumptech.glide.load.engine.f.k` @type ^`java.lang.Class` @kind object;
  #L3dd7e0.  call temp:= `getRegisteredResourceClasses`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/Registry;.getRegisteredResourceClasses:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L3dd7e6.  v0:= temp @kind object;
  #L3dd7e8.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.ResourceEncoder` `n`(`com.bumptech.glide.load.engine.f` v1 @kind this, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.n:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/ResourceEncoder;` @AccessFlag  {
    temp;
    v0;

  #L3dd430.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3dd434.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3dd43a.  v0:= temp @kind object;
  #L3dd43c.  call temp:= `getResultEncoder`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.getResultEncoder:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/ResourceEncoder;` @kind virtual;
  #L3dd442.  v2:= temp @kind object;
  #L3dd444.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.data.DataRewinder` `o`(`com.bumptech.glide.load.engine.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.o:(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/DataRewinder;` @AccessFlag  {
    temp;
    v0;

  #L3dd530.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3dd534.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3dd53a.  v0:= temp @kind object;
  #L3dd53c.  call temp:= `getRewinder`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.getRewinder:(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/DataRewinder;` @kind virtual;
  #L3dd542.  v2:= temp @kind object;
  #L3dd544.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.Key` `p`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.p:()Lcom/bumptech/glide/load/Key;` @AccessFlag  {
    temp;
    v0;

  #L3dd400.  v0:= v1.`com.bumptech.glide.load.engine.f.n` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd404.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.Encoder` `q`(`com.bumptech.glide.load.engine.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.q:(Ljava/lang/Object;)Lcom/bumptech/glide/load/Encoder;` @AccessFlag  {
    temp;
    v0;

  #L3dd3d8.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3dd3dc.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3dd3e2.  v0:= temp @kind object;
  #L3dd3e4.  call temp:= `getSourceEncoder`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.getSourceEncoder:(Ljava/lang/Object;)Lcom/bumptech/glide/load/Encoder;` @kind virtual;
  #L3dd3ea.  v2:= temp @kind object;
  #L3dd3ec.  return v2 @kind object;
}
procedure `java.lang.Class` `r`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.r:()Ljava/lang/Class;` @AccessFlag  {
    temp;
    v0;

  #L3dd630.  v0:= v1.`com.bumptech.glide.load.engine.f.k` @type ^`java.lang.Class` @kind object;
  #L3dd634.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.Transformation` `s`(`com.bumptech.glide.load.engine.f` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.s:(Ljava/lang/Class;)Lcom/bumptech/glide/load/Transformation;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dd458.  v0:= v4.`com.bumptech.glide.load.engine.f.j` @type ^`java.util.Map` @kind object;
  #L3dd45c.  call temp:= `get`(v0, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3dd462.  v0:= temp @kind object;
  #L3dd464.  v0:= (`com.bumptech.glide.load.Transformation`) v0 @kind object;
  #L3dd468.  if v0 != 0 then goto L3dd4bc;
  #L3dd46c.  v1:= v4.`com.bumptech.glide.load.engine.f.j` @type ^`java.util.Map` @kind object;
  #L3dd470.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3dd476.  v1:= temp @kind object;
  #L3dd478.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dd47e.  v1:= temp @kind object;
  #L3dd480.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3dd486.  v2:= temp;
  #L3dd488.  if v2 == 0 then goto L3dd4bc;
  #L3dd48c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3dd492.  v2:= temp @kind object;
  #L3dd494.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L3dd498.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3dd49e.  v3:= temp @kind object;
  #L3dd4a0.  v3:= (`java.lang.Class`) v3 @kind object;
  #L3dd4a4.  call temp:= `isAssignableFrom`(v3, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3dd4aa.  v3:= temp;
  #L3dd4ac.  if v3 == 0 then goto L3dd480;
  #L3dd4b0.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3dd4b6.  v0:= temp @kind object;
  #L3dd4b8.  v0:= (`com.bumptech.glide.load.Transformation`) v0 @kind object;
  #L3dd4bc.  if v0 != 0 then goto L3dd51c;
  #L3dd4c0.  v0:= v4.`com.bumptech.glide.load.engine.f.j` @type ^`java.util.Map` @kind object;
  #L3dd4c4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3dd4ca.  v0:= temp;
  #L3dd4cc.  if v0 == 0 then goto L3dd512;
  #L3dd4d0.  v0:= v4.`com.bumptech.glide.load.engine.f.q` @type ^`boolean` @kind boolean;
  #L3dd4d4.  if v0 != 0 then goto L3dd4da;
  #L3dd4d8.  goto L3dd512;
  #L3dd4da.  v0:= new `java.lang.IllegalArgumentException`;
  #L3dd4de.  v1:= new `java.lang.StringBuilder`;
  #L3dd4e2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dd4e8.  v2:= "Missing transformation for " @kind object;
  #L3dd4ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd4f2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd4f8.  v5:= ". If you wish to ignore unknown resource types, use the optional transformation methods." @kind object;
  #L3dd4fc.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd502.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dd508.  v5:= temp @kind object;
  #L3dd50a.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd510.  throw v0;
  #L3dd512.  call temp:= `get`() @signature `Lcom/bumptech/glide/load/resource/UnitTransformation;.get:()Lcom/bumptech/glide/load/resource/UnitTransformation;` @kind static;
  #L3dd518.  v5:= temp @kind object;
  #L3dd51a.  return v5 @kind object;
  #L3dd51c.  return v0 @kind object;
}
procedure `int` `t`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.t:()I` @AccessFlag  {
    temp;
    v0;

  #L3dd5f8.  v0:= v1.`com.bumptech.glide.load.engine.f.e` @type ^`int`;
  #L3dd5fc.  return v0;
}
procedure `boolean` `u`(`com.bumptech.glide.load.engine.f` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.u:(Ljava/lang/Class;)Z` @AccessFlag  {
    temp;

  #L3dd30c.  call temp:= `h`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/f;.h:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/LoadPath;` @kind virtual;
  #L3dd312.  v1:= temp @kind object;
  #L3dd314.  if v1 == 0 then goto L3dd31c;
  #L3dd318.  v1:= 1I;
  #L3dd31a.  goto L3dd31e;
  #L3dd31c.  v1:= 0I;
  #L3dd31e.  return v1;
}
procedure `void` `v`(`com.bumptech.glide.load.engine.f` v0 @kind this, `com.bumptech.glide.GlideContext` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.load.Key` v3 @kind object, `int` v4 , `int` v5 , `com.bumptech.glide.load.engine.DiskCacheStrategy` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Class` v8 @kind object, `com.bumptech.glide.Priority` v9 @kind object, `com.bumptech.glide.load.Options` v10 @kind object, `java.util.Map` v11 @kind object, `boolean` v12 , `boolean` v13 , `com.bumptech.glide.load.engine.g$e` v14 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.v:(Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Lcom/bumptech/glide/load/Key;IILcom/bumptech/glide/load/engine/DiskCacheStrategy;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/Options;Ljava/util/Map;ZZLcom/bumptech/glide/load/engine/g$e;)V` @AccessFlag  {
    temp;

  #L3dd888.  v0.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` := v1 @kind object;
  #L3dd88c.  v0.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` := v2 @kind object;
  #L3dd890.  v0.`com.bumptech.glide.load.engine.f.n` @type ^`com.bumptech.glide.load.Key` := v3 @kind object;
  #L3dd894.  v0.`com.bumptech.glide.load.engine.f.e` @type ^`int` := v4;
  #L3dd898.  v0.`com.bumptech.glide.load.engine.f.f` @type ^`int` := v5;
  #L3dd89c.  v0.`com.bumptech.glide.load.engine.f.p` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v6 @kind object;
  #L3dd8a0.  v0.`com.bumptech.glide.load.engine.f.g` @type ^`java.lang.Class` := v7 @kind object;
  #L3dd8a4.  v0.`com.bumptech.glide.load.engine.f.h` @type ^`com.bumptech.glide.load.engine.g$e` := v14 @kind object;
  #L3dd8a8.  v0.`com.bumptech.glide.load.engine.f.k` @type ^`java.lang.Class` := v8 @kind object;
  #L3dd8ac.  v0.`com.bumptech.glide.load.engine.f.o` @type ^`com.bumptech.glide.Priority` := v9 @kind object;
  #L3dd8b0.  v0.`com.bumptech.glide.load.engine.f.i` @type ^`com.bumptech.glide.load.Options` := v10 @kind object;
  #L3dd8b4.  v0.`com.bumptech.glide.load.engine.f.j` @type ^`java.util.Map` := v11 @kind object;
  #L3dd8b8.  v0.`com.bumptech.glide.load.engine.f.q` @type ^`boolean` := v12 @kind boolean;
  #L3dd8bc.  v0.`com.bumptech.glide.load.engine.f.r` @type ^`boolean` := v13 @kind boolean;
  #L3dd8c0.  return @kind void;
}
procedure `boolean` `w`(`com.bumptech.glide.load.engine.f` v1 @kind this, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.w:(Lcom/bumptech/glide/load/engine/Resource;)Z` @AccessFlag  {
    temp;
    v0;

  #L3dd330.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3dd334.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3dd33a.  v0:= temp @kind object;
  #L3dd33c.  call temp:= `isResourceEncoderAvailable`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.isResourceEncoderAvailable:(Lcom/bumptech/glide/load/engine/Resource;)Z` @kind virtual;
  #L3dd342.  v2:= temp;
  #L3dd344.  return v2;
}
procedure `boolean` `x`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.x:()Z` @AccessFlag  {
    temp;
    v0;

  #L3dd358.  v0:= v1.`com.bumptech.glide.load.engine.f.r` @type ^`boolean` @kind boolean;
  #L3dd35c.  return v0;
}
procedure `boolean` `y`(`com.bumptech.glide.load.engine.f` v5 @kind this, `com.bumptech.glide.load.Key` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.y:(Lcom/bumptech/glide/load/Key;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3dd370.  call temp:= `g`(v5) @signature `Lcom/bumptech/glide/load/engine/f;.g:()Ljava/util/List;` @kind virtual;
  #L3dd376.  v0:= temp @kind object;
  #L3dd378.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dd37e.  v1:= temp;
  #L3dd380.  v2:= 0I;
  #L3dd382.  v3:= 0I;
  #L3dd384.  if v3 >= v1 then goto L3dd3ae;
  #L3dd388.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dd38e.  v4:= temp @kind object;
  #L3dd390.  v4:= (`com.bumptech.glide.load.model.ModelLoader$LoadData`) v4 @kind object;
  #L3dd394.  v4:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd398.  call temp:= `equals`(v4, v6) @signature `Lcom/bumptech/glide/load/Key;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3dd39e.  v4:= temp;
  #L3dd3a0.  if v4 == 0 then goto L3dd3a8;
  #L3dd3a4.  v6:= 1I;
  #L3dd3a6.  return v6;
  #L3dd3a8.  v3:= v3 + 1;
  #L3dd3ac.  goto L3dd384;
  #L3dd3ae.  return v2;
}
