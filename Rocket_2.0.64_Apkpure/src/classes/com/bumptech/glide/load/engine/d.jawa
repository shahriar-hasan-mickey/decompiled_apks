record `com.bumptech.glide.load.engine.d` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.Key` @kind interface {
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.d.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.d` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `com.bumptech.glide.load.Key` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/Key;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dd278.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dd27e.  v0.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3dd282.  v0.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` := v2 @kind object;
  #L3dd286.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.d` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dd1a4.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.d` @kind boolean;
  #L3dd1a8.  v1:= 0I;
  #L3dd1aa.  if v0 == 0 then goto L3dd1dc;
  #L3dd1ae.  v4:= (`com.bumptech.glide.load.engine.d`) v4 @kind object;
  #L3dd1b2.  v0:= v3.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd1b6.  v2:= v4.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd1ba.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3dd1c0.  v0:= temp;
  #L3dd1c2.  if v0 == 0 then goto L3dd1dc;
  #L3dd1c6.  v0:= v3.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd1ca.  v4:= v4.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd1ce.  call temp:= `equals`(v0, v4) @signature `Lcom/bumptech/glide/load/Key;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3dd1d4.  v4:= temp;
  #L3dd1d6.  if v4 == 0 then goto L3dd1dc;
  #L3dd1da.  v1:= 1I;
  #L3dd1dc.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.d` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dd1f0.  v0:= v2.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd1f4.  call temp:= `hashCode`(v0) @signature `Lcom/bumptech/glide/load/Key;.hashCode:()I` @kind interface;
  #L3dd1fa.  v0:= temp;
  #L3dd1fc.  v0:= v0 * 31;
  #L3dd200.  v1:= v2.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd204.  call temp:= `hashCode`(v1) @signature `Lcom/bumptech/glide/load/Key;.hashCode:()I` @kind interface;
  #L3dd20a.  v1:= temp;
  #L3dd20c.  v0:= v0 + v1 @kind int;
  #L3dd20e.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.d` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dd220.  v0:= new `java.lang.StringBuilder`;
  #L3dd224.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dd22a.  v1:= "DataCacheKey{sourceKey=" @kind object;
  #L3dd22e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd234.  v1:= v2.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd238.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd23e.  v1:= ", signature=" @kind object;
  #L3dd242.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd248.  v1:= v2.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd24c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd252.  v1:= 125I;
  #L3dd256.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd25c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dd262.  v0:= temp @kind object;
  #L3dd264.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.engine.d` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd298.  v0:= v1.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd29c.  call `updateDiskCacheKey`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3dd2a2.  v0:= v1.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dd2a6.  call `updateDiskCacheKey`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3dd2ac.  return @kind void;
}
