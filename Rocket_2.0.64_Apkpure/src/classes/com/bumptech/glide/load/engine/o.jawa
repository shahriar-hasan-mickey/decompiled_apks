record `com.bumptech.glide.load.engine.o` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.DataFetcherGenerator` @kind interface, `com.bumptech.glide.load.data.DataFetcher$DataCallback` @kind interface {
  `com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` `com.bumptech.glide.load.engine.o.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.f` `com.bumptech.glide.load.engine.o.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.o.c` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.o.d` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.o.e` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.load.engine.o.f` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.o.g` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.model.ModelLoader$LoadData` `com.bumptech.glide.load.engine.o.h` @AccessFlag PRIVATE_VOLATILE;
  `java.io.File` `com.bumptech.glide.load.engine.o.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.p` `com.bumptech.glide.load.engine.o.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.o` v1 @kind this, `com.bumptech.glide.load.engine.f` v2 @kind object, `com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/o;.<init>:(Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e1c30.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e1c36.  v0:= -1I;
  #L3e1c38.  v1.`com.bumptech.glide.load.engine.o.d` @type ^`int` := v0;
  #L3e1c3c.  v1.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` := v2 @kind object;
  #L3e1c40.  v1.`com.bumptech.glide.load.engine.o.a` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` := v3 @kind object;
  #L3e1c44.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.o` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/o;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e1944.  v0:= v2.`com.bumptech.glide.load.engine.o.g` @type ^`int`;
  #L3e1948.  v1:= v2.`com.bumptech.glide.load.engine.o.f` @type ^`java.util.List` @kind object;
  #L3e194c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e1952.  v1:= temp;
  #L3e1954.  if v0 >= v1 then goto L3e195c;
  #L3e1958.  v0:= 1I;
  #L3e195a.  goto L3e195e;
  #L3e195c.  v0:= 0I;
  #L3e195e.  return v0;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.o` v14 @kind this) @signature `Lcom/bumptech/glide/load/engine/o;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3e1970.  v0:= "ResourceCacheGenerator.startNext" @kind object;
  #L3e1974.  call `beginSection`(v0) @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.beginSection:(Ljava/lang/String;)V` @kind static;
  #L3e197a.  v0:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e197e.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/load/engine/f;.c:()Ljava/util/List;` @kind virtual;
  #L3e1984.  v0:= temp @kind object;
  #L3e1986.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e198c.  v1:= temp;
  #L3e198e.  v2:= 0I;
  #L3e1990.  if v1 == 0 then goto L3e199c;
  #L3e1994.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3e199a.  return v2;
  #L3e199c.  v1:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e19a0.  call temp:= `m`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.m:()Ljava/util/List;` @kind virtual;
  #L3e19a6.  v1:= temp @kind object;
  #L3e19a8.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e19ae.  v3:= temp;
  #L3e19b0.  if v3 == 0 then goto L3e1a2e;
  #L3e19b4.  v0:= constclass @type ^`java.io.File` @kind object;
  #L3e19b8.  v1:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e19bc.  call temp:= `r`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.r:()Ljava/lang/Class;` @kind virtual;
  #L3e19c2.  v1:= temp @kind object;
  #L3e19c4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e19ca.  v0:= temp;
  #L3e19cc.  if v0 == 0 then goto L3e19d8;
  #L3e19d0.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3e19d6.  return v2;
  #L3e19d8.  v0:= new `java.lang.IllegalStateException`;
  #L3e19dc.  v1:= new `java.lang.StringBuilder`;
  #L3e19e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e19e6.  v2:= "Failed to find any load path from " @kind object;
  #L3e19ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e19f0.  v2:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e19f4.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/load/engine/f;.i:()Ljava/lang/Class;` @kind virtual;
  #L3e19fa.  v2:= temp @kind object;
  #L3e19fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1a02.  v2:= " to " @kind object;
  #L3e1a06.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1a0c.  v2:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1a10.  call temp:= `r`(v2) @signature `Lcom/bumptech/glide/load/engine/f;.r:()Ljava/lang/Class;` @kind virtual;
  #L3e1a16.  v2:= temp @kind object;
  #L3e1a18.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1a1e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1a24.  v1:= temp @kind object;
  #L3e1a26.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e1a2c.  throw v0;
  #L3e1a2e.  v3:= v14.`com.bumptech.glide.load.engine.o.f` @type ^`java.util.List` @kind object;
  #L3e1a32.  v4:= 1I;
  #L3e1a34.  if v3 == 0 then goto L3e1afa;
  #L3e1a38.  call temp:= `b`(v14) @signature `Lcom/bumptech/glide/load/engine/o;.b:()Z` @kind direct;
  #L3e1a3e.  v3:= temp;
  #L3e1a40.  if v3 != 0 then goto L3e1a46;
  #L3e1a44.  goto L3e1afa;
  #L3e1a46.  v0:= 0I;
  #L3e1a48.  v14.`com.bumptech.glide.load.engine.o.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` := v0 @kind object;
  #L3e1a4c.  if v2 != 0 then goto L3e1af2;
  #L3e1a50.  call temp:= `b`(v14) @signature `Lcom/bumptech/glide/load/engine/o;.b:()Z` @kind direct;
  #L3e1a56.  v0:= temp;
  #L3e1a58.  if v0 == 0 then goto L3e1af2;
  #L3e1a5c.  v0:= v14.`com.bumptech.glide.load.engine.o.f` @type ^`java.util.List` @kind object;
  #L3e1a60.  v1:= v14.`com.bumptech.glide.load.engine.o.g` @type ^`int`;
  #L3e1a64.  v3:= v1 + 1;
  #L3e1a68.  v14.`com.bumptech.glide.load.engine.o.g` @type ^`int` := v3;
  #L3e1a6c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e1a72.  v0:= temp @kind object;
  #L3e1a74.  v0:= (`com.bumptech.glide.load.model.ModelLoader`) v0 @kind object;
  #L3e1a78.  v1:= v14.`com.bumptech.glide.load.engine.o.i` @type ^`java.io.File` @kind object;
  #L3e1a7c.  v3:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1a80.  call temp:= `t`(v3) @signature `Lcom/bumptech/glide/load/engine/f;.t:()I` @kind virtual;
  #L3e1a86.  v3:= temp;
  #L3e1a88.  v5:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1a8c.  call temp:= `f`(v5) @signature `Lcom/bumptech/glide/load/engine/f;.f:()I` @kind virtual;
  #L3e1a92.  v5:= temp;
  #L3e1a94.  v6:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1a98.  call temp:= `k`(v6) @signature `Lcom/bumptech/glide/load/engine/f;.k:()Lcom/bumptech/glide/load/Options;` @kind virtual;
  #L3e1a9e.  v6:= temp @kind object;
  #L3e1aa0.  call temp:= `buildLoadData`(v0, v1, v3, v5, v6) @signature `Lcom/bumptech/glide/load/model/ModelLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @kind interface;
  #L3e1aa6.  v0:= temp @kind object;
  #L3e1aa8.  v14.`com.bumptech.glide.load.engine.o.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` := v0 @kind object;
  #L3e1aac.  v0:= v14.`com.bumptech.glide.load.engine.o.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3e1ab0.  if v0 == 0 then goto L3e1a4c;
  #L3e1ab4.  v0:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1ab8.  v1:= v14.`com.bumptech.glide.load.engine.o.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3e1abc.  v1:= v1.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3e1ac0.  call temp:= `getDataClass`(v1) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L3e1ac6.  v1:= temp @kind object;
  #L3e1ac8.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/f;.u:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e1ace.  v0:= temp;
  #L3e1ad0.  if v0 == 0 then goto L3e1a4c;
  #L3e1ad4.  v0:= v14.`com.bumptech.glide.load.engine.o.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3e1ad8.  v0:= v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3e1adc.  v1:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1ae0.  call temp:= `l`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.l:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3e1ae6.  v1:= temp @kind object;
  #L3e1ae8.  call `loadData`(v0, v1, v14) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.loadData:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;)V` @kind interface;
  #L3e1aee.  v2:= 1I;
  #L3e1af0.  goto L3e1a4c;
  #L3e1af2.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3e1af8.  return v2;
  #L3e1afa.  v3:= v14.`com.bumptech.glide.load.engine.o.d` @type ^`int`;
  #L3e1afe.  v3:= v3 + v4 @kind int;
  #L3e1b00.  v14.`com.bumptech.glide.load.engine.o.d` @type ^`int` := v3;
  #L3e1b04.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e1b0a.  v5:= temp;
  #L3e1b0c.  if v3 < v5 then goto L3e1b32;
  #L3e1b10.  v3:= v14.`com.bumptech.glide.load.engine.o.c` @type ^`int`;
  #L3e1b14.  v3:= v3 + v4 @kind int;
  #L3e1b16.  v14.`com.bumptech.glide.load.engine.o.c` @type ^`int` := v3;
  #L3e1b1a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e1b20.  v4:= temp;
  #L3e1b22.  if v3 < v4 then goto L3e1b2e;
  #L3e1b26.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3e1b2c.  return v2;
  #L3e1b2e.  v14.`com.bumptech.glide.load.engine.o.d` @type ^`int` := v2;
  #L3e1b32.  v3:= v14.`com.bumptech.glide.load.engine.o.c` @type ^`int`;
  #L3e1b36.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e1b3c.  v3:= temp @kind object;
  #L3e1b3e.  v3:= (`com.bumptech.glide.load.Key`) v3 @kind object;
  #L3e1b42.  v4:= v14.`com.bumptech.glide.load.engine.o.d` @type ^`int`;
  #L3e1b46.  call temp:= `get`(v1, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e1b4c.  v4:= temp @kind object;
  #L3e1b4e.  v11:= v4 @kind object;
  #L3e1b50.  v11:= (`java.lang.Class`) v11 @kind object;
  #L3e1b54.  v4:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1b58.  call temp:= `s`(v4, v11) @signature `Lcom/bumptech/glide/load/engine/f;.s:(Ljava/lang/Class;)Lcom/bumptech/glide/load/Transformation;` @kind virtual;
  #L3e1b5e.  v10:= temp @kind object;
  #L3e1b60.  v13:= new `com.bumptech.glide.load.engine.p`;
  #L3e1b64.  v4:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1b68.  call temp:= `b`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.b:()Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;` @kind virtual;
  #L3e1b6e.  v5:= temp @kind object;
  #L3e1b70.  v4:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1b74.  call temp:= `p`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.p:()Lcom/bumptech/glide/load/Key;` @kind virtual;
  #L3e1b7a.  v7:= temp @kind object;
  #L3e1b7c.  v4:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1b80.  call temp:= `t`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.t:()I` @kind virtual;
  #L3e1b86.  v8:= temp;
  #L3e1b88.  v4:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1b8c.  call temp:= `f`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.f:()I` @kind virtual;
  #L3e1b92.  v9:= temp;
  #L3e1b94.  v4:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1b98.  call temp:= `k`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.k:()Lcom/bumptech/glide/load/Options;` @kind virtual;
  #L3e1b9e.  v12:= temp @kind object;
  #L3e1ba0.  v4:= v13 @kind object;
  #L3e1ba2.  v6:= v3 @kind object;
  #L3e1ba4.  call `<init>`(v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lcom/bumptech/glide/load/engine/p;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/Key;IILcom/bumptech/glide/load/Transformation;Ljava/lang/Class;Lcom/bumptech/glide/load/Options;)V` @kind direct;
  #L3e1baa.  v14.`com.bumptech.glide.load.engine.o.j` @type ^`com.bumptech.glide.load.engine.p` := v13 @kind object;
  #L3e1bae.  v4:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1bb2.  call temp:= `d`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.d:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind virtual;
  #L3e1bb8.  v4:= temp @kind object;
  #L3e1bba.  v5:= v14.`com.bumptech.glide.load.engine.o.j` @type ^`com.bumptech.glide.load.engine.p` @kind object;
  #L3e1bbe.  call temp:= `get`(v4, v5) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.get:(Lcom/bumptech/glide/load/Key;)Ljava/io/File;` @kind interface;
  #L3e1bc4.  v4:= temp @kind object;
  #L3e1bc6.  v14.`com.bumptech.glide.load.engine.o.i` @type ^`java.io.File` := v4 @kind object;
  #L3e1bca.  if v4 == 0 then goto L3e1a2e;
  #L3e1bce.  v14.`com.bumptech.glide.load.engine.o.e` @type ^`com.bumptech.glide.load.Key` := v3 @kind object;
  #L3e1bd2.  v3:= v14.`com.bumptech.glide.load.engine.o.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3e1bd6.  call temp:= `j`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/f;.j:(Ljava/io/File;)Ljava/util/List;` @kind virtual;
  #L3e1bdc.  v3:= temp @kind object;
  #L3e1bde.  v14.`com.bumptech.glide.load.engine.o.f` @type ^`java.util.List` := v3 @kind object;
  #L3e1be2.  v14.`com.bumptech.glide.load.engine.o.g` @type ^`int` := v2;
  #L3e1be6.  goto L3e1a2e;
  #L3e1bea.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e1bec.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3e1bf2.  throw v0;
  catch `java.lang.Throwable` @[L3e197a..L3e198e] goto L3e1bea;
  catch `java.lang.Throwable` @[L3e199c..L3e19cc] goto L3e1bea;
  catch `java.lang.Throwable` @[L3e19d8..L3e1aee] goto L3e1bea;
  catch `java.lang.Throwable` @[L3e1afa..L3e1b22] goto L3e1bea;
  catch `java.lang.Throwable` @[L3e1b2e..L3e1be6] goto L3e1bea;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.o` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/o;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1c58.  v0:= v1.`com.bumptech.glide.load.engine.o.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3e1c5c.  if v0 == 0 then goto L3e1c6a;
  #L3e1c60.  v0:= v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3e1c64.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cancel:()V` @kind interface;
  #L3e1c6a.  return @kind void;
}
procedure `void` `onDataReady`(`com.bumptech.glide.load.engine.o` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/o;.onDataReady:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e1c7c.  v0:= v6.`com.bumptech.glide.load.engine.o.a` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind object;
  #L3e1c80.  v1:= v6.`com.bumptech.glide.load.engine.o.e` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3e1c84.  v2:= v6.`com.bumptech.glide.load.engine.o.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3e1c88.  v3:= v2.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3e1c8c.  v4:= `@@com.bumptech.glide.load.DataSource.RESOURCE_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3e1c90.  v5:= v6.`com.bumptech.glide.load.engine.o.j` @type ^`com.bumptech.glide.load.engine.p` @kind object;
  #L3e1c94.  v2:= v7 @kind object;
  #L3e1c96.  call `onDataFetcherReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;.onDataFetcherReady:(Lcom/bumptech/glide/load/Key;Ljava/lang/Object;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/Key;)V` @kind interface;
  #L3e1c9c.  return @kind void;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.load.engine.o` v4 @kind this, `java.lang.Exception` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/o;.onLoadFailed:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e1cb0.  v0:= v4.`com.bumptech.glide.load.engine.o.a` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind object;
  #L3e1cb4.  v1:= v4.`com.bumptech.glide.load.engine.o.j` @type ^`com.bumptech.glide.load.engine.p` @kind object;
  #L3e1cb8.  v2:= v4.`com.bumptech.glide.load.engine.o.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3e1cbc.  v2:= v2.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3e1cc0.  v3:= `@@com.bumptech.glide.load.DataSource.RESOURCE_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3e1cc4.  call `onDataFetcherFailed`(v0, v1, v5, v2, v3) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;.onDataFetcherFailed:(Lcom/bumptech/glide/load/Key;Ljava/lang/Exception;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L3e1cca.  return @kind void;
}
