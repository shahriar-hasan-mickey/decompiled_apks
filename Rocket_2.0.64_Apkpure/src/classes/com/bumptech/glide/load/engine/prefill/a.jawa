record `com.bumptech.glide.load.engine.prefill.a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.engine.prefill.a.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.cache.MemoryCache` `com.bumptech.glide.load.engine.prefill.a.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.prefill.b` `com.bumptech.glide.load.engine.prefill.a.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.prefill.a$a` `com.bumptech.glide.load.engine.prefill.a.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.load.engine.prefill.a.e` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.bumptech.glide.load.engine.prefill.a.f` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.load.engine.prefill.a.g` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.prefill.a.h` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.load.engine.prefill.a$a` `@@com.bumptech.glide.load.engine.prefill.a.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.bumptech.glide.load.engine.prefill.a.j` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/prefill/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3e64c4.  v0:= new `com.bumptech.glide.load.engine.prefill.a$a`;
  #L3e64c8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/prefill/a$a;.<init>:()V` @kind direct;
  #L3e64ce.  `@@com.bumptech.glide.load.engine.prefill.a.i` @type ^`com.bumptech.glide.load.engine.prefill.a$a` := v0 @kind object;
  #L3e64d2.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e64d6.  v1:= 1L;
  #L3e64da.  call temp:= `toMillis`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3e64e0.  v0:= temp @kind wide;
  #L3e64e2.  `@@com.bumptech.glide.load.engine.prefill.a.j` @type ^`long` := v0 @kind wide;
  #L3e64e6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.prefill.a` v6 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v7 @kind object, `com.bumptech.glide.load.engine.cache.MemoryCache` v8 @kind object, `com.bumptech.glide.load.engine.prefill.b` v9 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/prefill/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e64f8.  v4:= `@@com.bumptech.glide.load.engine.prefill.a.i` @type ^`com.bumptech.glide.load.engine.prefill.a$a` @kind object;
  #L3e64fc.  v5:= new `android.os.Handler`;
  #L3e6500.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L3e6506.  v0:= temp @kind object;
  #L3e6508.  call `<init>`(v5, v0) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L3e650e.  v0:= v6 @kind object;
  #L3e6510.  v1:= v7 @kind object;
  #L3e6512.  v2:= v8 @kind object;
  #L3e6514.  v3:= v9 @kind object;
  #L3e6516.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/prefill/b;Lcom/bumptech/glide/load/engine/prefill/a$a;Landroid/os/Handler;)V` @kind direct;
  #L3e651c.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.prefill.a` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v3 @kind object, `com.bumptech.glide.load.engine.cache.MemoryCache` v4 @kind object, `com.bumptech.glide.load.engine.prefill.b` v5 @kind object, `com.bumptech.glide.load.engine.prefill.a$a` v6 @kind object, `android.os.Handler` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/prefill/b;Lcom/bumptech/glide/load/engine/prefill/a$a;Landroid/os/Handler;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e6530.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e6536.  v0:= new `java.util.HashSet`;
  #L3e653a.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3e6540.  v2.`com.bumptech.glide.load.engine.prefill.a.e` @type ^`java.util.Set` := v0 @kind object;
  #L3e6544.  v0:= 40L;
  #L3e6548.  v2.`com.bumptech.glide.load.engine.prefill.a.g` @type ^`long` := v0 @kind wide;
  #L3e654c.  v2.`com.bumptech.glide.load.engine.prefill.a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v3 @kind object;
  #L3e6550.  v2.`com.bumptech.glide.load.engine.prefill.a.b` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` := v4 @kind object;
  #L3e6554.  v2.`com.bumptech.glide.load.engine.prefill.a.c` @type ^`com.bumptech.glide.load.engine.prefill.b` := v5 @kind object;
  #L3e6558.  v2.`com.bumptech.glide.load.engine.prefill.a.d` @type ^`com.bumptech.glide.load.engine.prefill.a$a` := v6 @kind object;
  #L3e655c.  v2.`com.bumptech.glide.load.engine.prefill.a.f` @type ^`android.os.Handler` := v7 @kind object;
  #L3e6560.  return @kind void;
}
procedure `long` `c`(`com.bumptech.glide.load.engine.prefill.a` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.c:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6468.  v0:= v4.`com.bumptech.glide.load.engine.prefill.a.b` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3e646c.  call temp:= `getMaxSize`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.getMaxSize:()J` @kind interface;
  #L3e6472.  v0:= temp @kind wide;
  #L3e6474.  v2:= v4.`com.bumptech.glide.load.engine.prefill.a.b` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3e6478.  call temp:= `getCurrentSize`(v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.getCurrentSize:()J` @kind interface;
  #L3e647e.  v2:= temp @kind wide;
  #L3e6480.  v0:= v0 - v2 @kind long;
  #L3e6482.  return v0 @kind wide;
}
procedure `long` `d`(`com.bumptech.glide.load.engine.prefill.a` v6 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.d:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e6494.  v0:= v6.`com.bumptech.glide.load.engine.prefill.a.g` @type ^`long` @kind wide;
  #L3e6498.  v2:= 4L;
  #L3e649c.  v2:= v2 * v0 @kind long;
  #L3e64a0.  v4:= `@@com.bumptech.glide.load.engine.prefill.a.j` @type ^`long` @kind wide;
  #L3e64a4.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3e64aa.  v2:= temp @kind wide;
  #L3e64ac.  v6.`com.bumptech.glide.load.engine.prefill.a.g` @type ^`long` := v2 @kind wide;
  #L3e64b0.  return v0 @kind wide;
}
procedure `boolean` `e`(`com.bumptech.glide.load.engine.prefill.a` v3 @kind this, `long` v4 ) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.e:(J)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e6434.  v0:= v3.`com.bumptech.glide.load.engine.prefill.a.d` @type ^`com.bumptech.glide.load.engine.prefill.a$a` @kind object;
  #L3e6438.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/prefill/a$a;.a:()J` @kind virtual;
  #L3e643e.  v0:= temp @kind wide;
  #L3e6440.  v0:= v0 - v4 @kind long;
  #L3e6442.  v4:= 32L;
  #L3e6446.  v2:= lcmp(v0, v4);
  #L3e644a.  if v2 < 0 then goto L3e6452;
  #L3e644e.  v4:= 1I;
  #L3e6450.  goto L3e6454;
  #L3e6452.  v4:= 0I;
  #L3e6454.  return v4;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.prefill.a` v10 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.a:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e62a4.  v0:= v10.`com.bumptech.glide.load.engine.prefill.a.d` @type ^`com.bumptech.glide.load.engine.prefill.a$a` @kind object;
  #L3e62a8.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/prefill/a$a;.a:()J` @kind virtual;
  #L3e62ae.  v0:= temp @kind wide;
  #L3e62b0.  v2:= v10.`com.bumptech.glide.load.engine.prefill.a.c` @type ^`com.bumptech.glide.load.engine.prefill.b` @kind object;
  #L3e62b4.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/b;.a:()Z` @kind virtual;
  #L3e62ba.  v2:= temp;
  #L3e62bc.  if v2 != 0 then goto L3e6404;
  #L3e62c0.  call temp:= `e`(v10, v0) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.e:(J)Z` @kind direct;
  #L3e62c6.  v2:= temp;
  #L3e62c8.  if v2 != 0 then goto L3e6404;
  #L3e62cc.  v2:= v10.`com.bumptech.glide.load.engine.prefill.a.c` @type ^`com.bumptech.glide.load.engine.prefill.b` @kind object;
  #L3e62d0.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/b;.b:()Lcom/bumptech/glide/load/engine/prefill/PreFillType;` @kind virtual;
  #L3e62d6.  v2:= temp @kind object;
  #L3e62d8.  v3:= v10.`com.bumptech.glide.load.engine.prefill.a.e` @type ^`java.util.Set` @kind object;
  #L3e62dc.  call temp:= `contains`(v3, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e62e2.  v3:= temp;
  #L3e62e4.  if v3 != 0 then goto L3e6318;
  #L3e62e8.  v3:= v10.`com.bumptech.glide.load.engine.prefill.a.e` @type ^`java.util.Set` @kind object;
  #L3e62ec.  call temp:= `add`(v3, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e62f2.  v3:= v10.`com.bumptech.glide.load.engine.prefill.a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3e62f6.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.d:()I` @kind virtual;
  #L3e62fc.  v4:= temp;
  #L3e62fe.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.b:()I` @kind virtual;
  #L3e6304.  v5:= temp;
  #L3e6306.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.a:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e630c.  v6:= temp @kind object;
  #L3e630e.  call temp:= `getDirty`(v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.getDirty:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3e6314.  v3:= temp @kind object;
  #L3e6316.  goto L3e6338;
  #L3e6318.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.d:()I` @kind virtual;
  #L3e631e.  v3:= temp;
  #L3e6320.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.b:()I` @kind virtual;
  #L3e6326.  v4:= temp;
  #L3e6328.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.a:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e632e.  v5:= temp @kind object;
  #L3e6330.  call temp:= `createBitmap`(v3, v4, v5) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3e6336.  v3:= temp @kind object;
  #L3e6338.  call temp:= `getBitmapByteSize`(v3) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L3e633e.  v4:= temp;
  #L3e6340.  call temp:= `c`(v10) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.c:()J` @kind direct;
  #L3e6346.  v5:= temp @kind wide;
  #L3e6348.  v7:= (`long`) v4 @kind i2l;
  #L3e634a.  v9:= lcmp(v5, v7);
  #L3e634e.  if v9 < 0 then goto L3e6374;
  #L3e6352.  v5:= new `com.bumptech.glide.load.engine.prefill.a$b`;
  #L3e6356.  call `<init>`(v5) @signature `Lcom/bumptech/glide/load/engine/prefill/a$b;.<init>:()V` @kind direct;
  #L3e635c.  v6:= v10.`com.bumptech.glide.load.engine.prefill.a.b` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3e6360.  v7:= v10.`com.bumptech.glide.load.engine.prefill.a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3e6364.  call temp:= `obtain`(v3, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.obtain:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;` @kind static;
  #L3e636a.  v3:= temp @kind object;
  #L3e636c.  call temp:= `put`(v6, v5, v3) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3e6372.  goto L3e637e;
  #L3e6374.  v5:= v10.`com.bumptech.glide.load.engine.prefill.a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3e6378.  call `put`(v5, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3e637e.  v3:= 3I;
  #L3e6380.  v5:= "PreFillRunner" @kind object;
  #L3e6384.  call temp:= `isLoggable`(v5, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e638a.  v3:= temp;
  #L3e638c.  if v3 == 0 then goto L3e62b0;
  #L3e6390.  v3:= new `java.lang.StringBuilder`;
  #L3e6394.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e639a.  v6:= "allocated [" @kind object;
  #L3e639e.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e63a4.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.d:()I` @kind virtual;
  #L3e63aa.  v6:= temp;
  #L3e63ac.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e63b2.  v6:= "x" @kind object;
  #L3e63b6.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e63bc.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.b:()I` @kind virtual;
  #L3e63c2.  v6:= temp;
  #L3e63c4.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e63ca.  v6:= "] " @kind object;
  #L3e63ce.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e63d4.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.a:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e63da.  v2:= temp @kind object;
  #L3e63dc.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e63e2.  v2:= " size: " @kind object;
  #L3e63e6.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e63ec.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e63f2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e63f8.  v2:= temp @kind object;
  #L3e63fa.  call temp:= `d`(v5, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e6400.  goto L3e62b0;
  #L3e6404.  v0:= v10.`com.bumptech.glide.load.engine.prefill.a.h` @type ^`boolean` @kind boolean;
  #L3e6408.  if v0 != 0 then goto L3e6420;
  #L3e640c.  v0:= v10.`com.bumptech.glide.load.engine.prefill.a.c` @type ^`com.bumptech.glide.load.engine.prefill.b` @kind object;
  #L3e6410.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/prefill/b;.a:()Z` @kind virtual;
  #L3e6416.  v0:= temp;
  #L3e6418.  if v0 != 0 then goto L3e6420;
  #L3e641c.  v0:= 1I;
  #L3e641e.  goto L3e6422;
  #L3e6420.  v0:= 0I;
  #L3e6422.  return v0;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.prefill.a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6574.  v0:= 1I;
  #L3e6576.  v1.`com.bumptech.glide.load.engine.prefill.a.h` @type ^`boolean` := v0 @kind boolean;
  #L3e657a.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.prefill.a` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e658c.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.a:()Z` @kind virtual;
  #L3e6592.  v0:= temp;
  #L3e6594.  if v0 == 0 then goto L3e65aa;
  #L3e6598.  v0:= v3.`com.bumptech.glide.load.engine.prefill.a.f` @type ^`android.os.Handler` @kind object;
  #L3e659c.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.d:()J` @kind direct;
  #L3e65a2.  v1:= temp @kind wide;
  #L3e65a4.  call temp:= `postDelayed`(v0, v3, v1) @signature `Landroid/os/Handler;.postDelayed:(Ljava/lang/Runnable;J)Z` @kind virtual;
  #L3e65aa.  return @kind void;
}
