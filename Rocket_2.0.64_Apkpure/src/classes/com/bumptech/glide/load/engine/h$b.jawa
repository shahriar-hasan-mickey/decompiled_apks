record `com.bumptech.glide.load.engine.h$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.request.ResourceCallback` `com.bumptech.glide.load.engine.h$b.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.h` `com.bumptech.glide.load.engine.h$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$b` v0 @kind this, `com.bumptech.glide.load.engine.h` v1 @kind object, `com.bumptech.glide.request.ResourceCallback` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$b;.<init>:(Lcom/bumptech/glide/load/engine/h;Lcom/bumptech/glide/request/ResourceCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3df6a4.  v0.`com.bumptech.glide.load.engine.h$b.b` @type ^`com.bumptech.glide.load.engine.h` := v1 @kind object;
  #L3df6a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df6ae.  v0.`com.bumptech.glide.load.engine.h$b.a` @type ^`com.bumptech.glide.request.ResourceCallback` := v2 @kind object;
  #L3df6b2.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.h$b` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3df6c4.  v0:= v4.`com.bumptech.glide.load.engine.h$b.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3df6c8.  call temp:= `getLock`(v0) @signature `Lcom/bumptech/glide/request/ResourceCallback;.getLock:()Ljava/lang/Object;` @kind interface;
  #L3df6ce.  v0:= temp @kind object;
  #L3df6d0.  @monitorenter v0
  #L3df6d2.  v1:= v4.`com.bumptech.glide.load.engine.h$b.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3df6d6.  @monitorenter v1
  #L3df6d8.  v2:= v4.`com.bumptech.glide.load.engine.h$b.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3df6dc.  v2:= v2.`com.bumptech.glide.load.engine.h.a` @type ^`com.bumptech.glide.load.engine.h$e` @kind object;
  #L3df6e0.  v3:= v4.`com.bumptech.glide.load.engine.h$b.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3df6e4.  call temp:= `b`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/h$e;.b:(Lcom/bumptech/glide/request/ResourceCallback;)Z` @kind virtual;
  #L3df6ea.  v2:= temp;
  #L3df6ec.  if v2 == 0 then goto L3df71a;
  #L3df6f0.  v2:= v4.`com.bumptech.glide.load.engine.h$b.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3df6f4.  v2:= v2.`com.bumptech.glide.load.engine.h.v` @type ^`com.bumptech.glide.load.engine.l` @kind object;
  #L3df6f8.  call `a`(v2) @signature `Lcom/bumptech/glide/load/engine/l;.a:()V` @kind virtual;
  #L3df6fe.  v2:= v4.`com.bumptech.glide.load.engine.h$b.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3df702.  v3:= v4.`com.bumptech.glide.load.engine.h$b.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3df706.  call `d`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/h;.d:(Lcom/bumptech/glide/request/ResourceCallback;)V` @kind virtual;
  #L3df70c.  v2:= v4.`com.bumptech.glide.load.engine.h$b.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3df710.  v3:= v4.`com.bumptech.glide.load.engine.h$b.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3df714.  call `o`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/h;.o:(Lcom/bumptech/glide/request/ResourceCallback;)V` @kind virtual;
  #L3df71a.  v2:= v4.`com.bumptech.glide.load.engine.h$b.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3df71e.  call `f`(v2) @signature `Lcom/bumptech/glide/load/engine/h;.f:()V` @kind virtual;
  #L3df724.  @monitorexit v1
  #L3df726.  @monitorexit v0
  #L3df728.  return @kind void;
  #L3df72a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3df72c.  @monitorexit v1
  #L3df72e.  throw v2;
  #L3df730.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3df732.  @monitorexit v0
  #L3df734.  throw v1;
  catch `java.lang.Throwable` @[L3df6d2..L3df6d8] goto L3df730;
  catch `java.lang.Throwable` @[L3df6d8..L3df726] goto L3df72a;
  catch `java.lang.Throwable` @[L3df726..L3df728] goto L3df730;
  catch `java.lang.Throwable` @[L3df72c..L3df72e] goto L3df72a;
  catch `java.lang.Throwable` @[L3df72e..L3df734] goto L3df730;
}
