record `com.bumptech.glide.load.engine.g$g` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.bumptech.glide.load.engine.g$g` `@@com.bumptech.glide.load.engine.g$g.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.engine.g$g` `@@com.bumptech.glide.load.engine.g$g.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.engine.g$g` `@@com.bumptech.glide.load.engine.g$g.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.engine.g$g`[] `@@com.bumptech.glide.load.engine.g$g.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/g$g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ddd00.  v0:= new `com.bumptech.glide.load.engine.g$g`;
  #L3ddd04.  v1:= "INITIALIZE" @kind object;
  #L3ddd08.  v2:= 0I;
  #L3ddd0a.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/g$g;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ddd10.  `@@com.bumptech.glide.load.engine.g$g.a` @type ^`com.bumptech.glide.load.engine.g$g` := v0 @kind object;
  #L3ddd14.  v1:= new `com.bumptech.glide.load.engine.g$g`;
  #L3ddd18.  v3:= "SWITCH_TO_SOURCE_SERVICE" @kind object;
  #L3ddd1c.  v4:= 1I;
  #L3ddd1e.  call `<init>`(v1, v3, v4) @signature `Lcom/bumptech/glide/load/engine/g$g;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ddd24.  `@@com.bumptech.glide.load.engine.g$g.b` @type ^`com.bumptech.glide.load.engine.g$g` := v1 @kind object;
  #L3ddd28.  v3:= new `com.bumptech.glide.load.engine.g$g`;
  #L3ddd2c.  v5:= "DECODE_DATA" @kind object;
  #L3ddd30.  v6:= 2I;
  #L3ddd32.  call `<init>`(v3, v5, v6) @signature `Lcom/bumptech/glide/load/engine/g$g;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ddd38.  `@@com.bumptech.glide.load.engine.g$g.c` @type ^`com.bumptech.glide.load.engine.g$g` := v3 @kind object;
  #L3ddd3c.  v5:= 3I;
  #L3ddd3e.  v5:= new `com.bumptech.glide.load.engine.g$g`[v5];
  #L3ddd42.  v5[v2]:= v0 @kind object;
  #L3ddd46.  v5[v4]:= v1 @kind object;
  #L3ddd4a.  v5[v6]:= v3 @kind object;
  #L3ddd4e.  `@@com.bumptech.glide.load.engine.g$g.d` @type ^`com.bumptech.glide.load.engine.g$g`[] := v5 @kind object;
  #L3ddd52.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.g$g` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/g$g;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ddd64.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ddd6a.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.g$g` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/g$g;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/load/engine/g$g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ddcb8.  v0:= constclass @type ^`com.bumptech.glide.load.engine.g$g` @kind object;
  #L3ddcbc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3ddcc2.  v1:= temp @kind object;
  #L3ddcc4.  v1:= (`com.bumptech.glide.load.engine.g$g`) v1 @kind object;
  #L3ddcc8.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.g$g`[] `values`() @signature `Lcom/bumptech/glide/load/engine/g$g;.values:()[Lcom/bumptech/glide/load/engine/g$g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ddcdc.  v0:= `@@com.bumptech.glide.load.engine.g$g.d` @type ^`com.bumptech.glide.load.engine.g$g`[] @kind object;
  #L3ddce0.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/load/engine/g$g;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3ddce6.  v0:= temp @kind object;
  #L3ddce8.  v0:= (`com.bumptech.glide.load.engine.g$g`[]) v0 @kind object;
  #L3ddcec.  return v0 @kind object;
}
