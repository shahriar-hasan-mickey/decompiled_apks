record `com.bumptech.glide.load.engine.bitmap_recycle.c` @kind class @AccessFlag  {
  `com.bumptech.glide.load.engine.bitmap_recycle.c$a` `com.bumptech.glide.load.engine.bitmap_recycle.c.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e2a90.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e2a96.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.c$a`;
  #L3e2a9a.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.<init>:()V` @kind direct;
  #L3e2aa0.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.c.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v0 @kind object;
  #L3e2aa4.  v0:= new `java.util.HashMap`;
  #L3e2aa8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e2aae.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`java.util.Map` := v0 @kind object;
  #L3e2ab2.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.c$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.b:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e2ac4.  call `e`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @kind static;
  #L3e2aca.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.c.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2ace.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v0 @kind object;
  #L3e2ad2.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2ad6.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v0 @kind object;
  #L3e2ada.  call `g`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @kind static;
  #L3e2ae0.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.c$a` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e2af4.  call `e`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @kind static;
  #L3e2afa.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2afe.  v1:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2b02.  v3.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v1 @kind object;
  #L3e2b06.  v3.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v0 @kind object;
  #L3e2b0a.  call `g`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @kind static;
  #L3e2b10.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.c$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3e2b74.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2b78.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2b7c.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v1 @kind object;
  #L3e2b80.  v2:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2b84.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v0 @kind object;
  #L3e2b88.  return @kind void;
}
procedure `void` `g`(`com.bumptech.glide.load.engine.bitmap_recycle.c$a` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e2b9c.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2ba0.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v1 @kind object;
  #L3e2ba4.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2ba8.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` := v1 @kind object;
  #L3e2bac.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.e` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/e;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2934.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`java.util.Map` @kind object;
  #L3e2938.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e293e.  v0:= temp @kind object;
  #L3e2940.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.c$a`) v0 @kind object;
  #L3e2944.  if v0 != 0 then goto L3e295e;
  #L3e2948.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.c$a`;
  #L3e294c.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e2952.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`java.util.Map` @kind object;
  #L3e2956.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e295c.  goto L3e2964;
  #L3e295e.  call `a`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.a:()V` @kind interface;
  #L3e2964.  call `b`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.b:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @kind direct;
  #L3e296a.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.b:()Ljava/lang/Object;` @kind virtual;
  #L3e2970.  v3:= temp @kind object;
  #L3e2972.  return v3 @kind object;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.e` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.d:(Lcom/bumptech/glide/load/engine/bitmap_recycle/e;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2b24.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`java.util.Map` @kind object;
  #L3e2b28.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e2b2e.  v0:= temp @kind object;
  #L3e2b30.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.c$a`) v0 @kind object;
  #L3e2b34.  if v0 != 0 then goto L3e2b54;
  #L3e2b38.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.c$a`;
  #L3e2b3c.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e2b42.  call `c`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @kind direct;
  #L3e2b48.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`java.util.Map` @kind object;
  #L3e2b4c.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e2b52.  goto L3e2b5a;
  #L3e2b54.  call `a`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.a:()V` @kind interface;
  #L3e2b5a.  call `a`(v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L3e2b60.  return @kind void;
}
procedure `java.lang.Object` `f`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.f:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e2984.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.c.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2988.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e298c.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.c.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2990.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e2996.  v1:= temp;
  #L3e2998.  if v1 != 0 then goto L3e29d2;
  #L3e299c.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.b:()Ljava/lang/Object;` @kind virtual;
  #L3e29a2.  v1:= temp @kind object;
  #L3e29a4.  if v1 == 0 then goto L3e29aa;
  #L3e29a8.  return v1 @kind object;
  #L3e29aa.  call `e`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;)V` @kind static;
  #L3e29b0.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`java.util.Map` @kind object;
  #L3e29b4.  v2:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.a` @type ^`java.lang.Object` @kind object;
  #L3e29b8.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e29be.  v1:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.a` @type ^`java.lang.Object` @kind object;
  #L3e29c2.  v1:= (`com.bumptech.glide.load.engine.bitmap_recycle.e`) v1 @kind object;
  #L3e29c6.  call `a`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.a:()V` @kind interface;
  #L3e29cc.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e29d0.  goto L3e298c;
  #L3e29d2.  v0:= 0I;
  #L3e29d4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e29e8.  v0:= new `java.lang.StringBuilder`;
  #L3e29ec.  v1:= "GroupedLinkedMap( " @kind object;
  #L3e29f0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e29f6.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.c.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e29fa.  v1:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e29fe.  v2:= 0I;
  #L3e2a00.  v3:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.c.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2a04.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e2a0a.  v3:= temp;
  #L3e2a0c.  if v3 != 0 then goto L3e2a4e;
  #L3e2a10.  v2:= 1I;
  #L3e2a12.  v3:= 123I;
  #L3e2a16.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2a1c.  v3:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.a` @type ^`java.lang.Object` @kind object;
  #L3e2a20.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2a26.  v3:= 58I;
  #L3e2a2a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2a30.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c$a;.c:()I` @kind virtual;
  #L3e2a36.  v3:= temp;
  #L3e2a38.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2a3e.  v3:= "}, " @kind object;
  #L3e2a42.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2a48.  v1:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.c$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c$a` @kind object;
  #L3e2a4c.  goto L3e2a00;
  #L3e2a4e.  if v2 == 0 then goto L3e2a6c;
  #L3e2a52.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3e2a58.  v1:= temp;
  #L3e2a5a.  v1:= v1 + -2;
  #L3e2a5e.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3e2a64.  v2:= temp;
  #L3e2a66.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2a6c.  v1:= " )" @kind object;
  #L3e2a70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2a76.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2a7c.  v0:= temp @kind object;
  #L3e2a7e.  return v0 @kind object;
}
