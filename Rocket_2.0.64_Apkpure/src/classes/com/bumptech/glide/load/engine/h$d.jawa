record `com.bumptech.glide.load.engine.h$d` @kind class @AccessFlag FINAL {
  `com.bumptech.glide.request.ResourceCallback` `com.bumptech.glide.load.engine.h$d.a` @AccessFlag FINAL;
  `java.util.concurrent.Executor` `com.bumptech.glide.load.engine.h$d.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$d` v0 @kind this, `com.bumptech.glide.request.ResourceCallback` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$d;.<init>:(Lcom/bumptech/glide/request/ResourceCallback;Ljava/util/concurrent/Executor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3df80c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df812.  v0.`com.bumptech.glide.load.engine.h$d.a` @type ^`com.bumptech.glide.request.ResourceCallback` := v1 @kind object;
  #L3df816.  v0.`com.bumptech.glide.load.engine.h$d.b` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L3df81a.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.h$d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df7b8.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.engine.h$d` @kind boolean;
  #L3df7bc.  if v0 == 0 then goto L3df7d6;
  #L3df7c0.  v2:= (`com.bumptech.glide.load.engine.h$d`) v2 @kind object;
  #L3df7c4.  v0:= v1.`com.bumptech.glide.load.engine.h$d.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3df7c8.  v2:= v2.`com.bumptech.glide.load.engine.h$d.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3df7cc.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3df7d2.  v2:= temp;
  #L3df7d4.  return v2;
  #L3df7d6.  v2:= 0I;
  #L3df7d8.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.h$d` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df7ec.  v0:= v1.`com.bumptech.glide.load.engine.h$d.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3df7f0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3df7f6.  v0:= temp;
  #L3df7f8.  return v0;
}
