record `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `android.content.Context` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.a` @AccessFlag FINAL;
  `android.app.ActivityManager` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.b` @AccessFlag ;
  `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$b` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.c` @AccessFlag ;
  `float` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.d` @AccessFlag ;
  `float` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.e` @AccessFlag ;
  `float` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.f` @AccessFlag ;
  `float` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.g` @AccessFlag ;
  `int` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.h` @AccessFlag ;
}
global `int` `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.i` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e53c8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3e53cc.  v1:= 26I;
  #L3e53d0.  if v0 >= v1 then goto L3e53d8;
  #L3e53d4.  v0:= 4I;
  #L3e53d6.  goto L3e53da;
  #L3e53d8.  v0:= 1I;
  #L3e53da.  `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.i` @type ^`int` := v0;
  #L3e53de.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e53f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e53f6.  v0:= 2.0F;
  #L3e53fa.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.d` @type ^`float` := v0;
  #L3e53fe.  v0:= `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.i` @type ^`int`;
  #L3e5402.  v0:= (`float`) v0 @kind i2f;
  #L3e5404.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.e` @type ^`float` := v0;
  #L3e5408.  v0:= 1053609165I;
  #L3e540e.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.f` @type ^`float` := v0;
  #L3e5412.  v0:= 1051260355I;
  #L3e5418.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.g` @type ^`float` := v0;
  #L3e541c.  v0:= 4194304I;
  #L3e5420.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.h` @type ^`int` := v0;
  #L3e5424.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.a` @type ^`android.content.Context` := v2 @kind object;
  #L3e5428.  v0:= "activity" @kind object;
  #L3e542c.  call temp:= `getSystemService`(v2, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3e5432.  v0:= temp @kind object;
  #L3e5434.  v0:= (`android.app.ActivityManager`) v0 @kind object;
  #L3e5438.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.b` @type ^`android.app.ActivityManager` := v0 @kind object;
  #L3e543c.  v0:= new `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$a`;
  #L3e5440.  call temp:= `getResources`(v2) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3e5446.  v2:= temp @kind object;
  #L3e5448.  call temp:= `getDisplayMetrics`(v2) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L3e544e.  v2:= temp @kind object;
  #L3e5450.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$a;.<init>:(Landroid/util/DisplayMetrics;)V` @kind direct;
  #L3e5456.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.c` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$b` := v0 @kind object;
  #L3e545a.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3e545e.  v0:= 26I;
  #L3e5462.  if v2 < v0 then goto L3e547c;
  #L3e5466.  v2:= v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.b` @type ^`android.app.ActivityManager` @kind object;
  #L3e546a.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.b:(Landroid/app/ActivityManager;)Z` @kind static;
  #L3e5470.  v2:= temp;
  #L3e5472.  if v2 == 0 then goto L3e547c;
  #L3e5476.  v2:= 0I;
  #L3e5478.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.e` @type ^`float` := v2;
  #L3e547c.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator` `build`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.build:()Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e52bc.  v0:= new `com.bumptech.glide.load.engine.cache.MemorySizeCalculator`;
  #L3e52c0.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.<init>:(Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;)V` @kind direct;
  #L3e52c6.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` `setArrayPoolSize`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.setArrayPoolSize:(I)Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;` @AccessFlag PUBLIC {
    temp;

  #L3e52d8.  v0.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.h` @type ^`int` := v1;
  #L3e52dc.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` `setBitmapPoolScreens`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v2 @kind this, `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.setBitmapPoolScreens:(F)Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e52f0.  v0:= 0I;
  #L3e52f2.  v0:= fcmpl(v3, v0);
  #L3e52f6.  if v0 < 0 then goto L3e52fe;
  #L3e52fa.  v0:= 1I;
  #L3e52fc.  goto L3e5300;
  #L3e52fe.  v0:= 0I;
  #L3e5300.  v1:= "Bitmap pool screens must be greater than or equal to 0" @kind object;
  #L3e5304.  call `checkArgument`(v0, v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L3e530a.  v2.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.e` @type ^`float` := v3;
  #L3e530e.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` `setLowMemoryMaxSizeMultiplier`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v2 @kind this, `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.setLowMemoryMaxSizeMultiplier:(F)Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e5320.  v0:= 0I;
  #L3e5322.  v0:= fcmpl(v3, v0);
  #L3e5326.  if v0 < 0 then goto L3e533a;
  #L3e532a.  v0:= 1.0F;
  #L3e532e.  v0:= fcmpg(v3, v0);
  #L3e5332.  if v0 > 0 then goto L3e533a;
  #L3e5336.  v0:= 1I;
  #L3e5338.  goto L3e533c;
  #L3e533a.  v0:= 0I;
  #L3e533c.  v1:= "Low memory max size multiplier must be between 0 and 1" @kind object;
  #L3e5340.  call `checkArgument`(v0, v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L3e5346.  v2.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.g` @type ^`float` := v3;
  #L3e534a.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` `setMaxSizeMultiplier`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v2 @kind this, `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.setMaxSizeMultiplier:(F)Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e535c.  v0:= 0I;
  #L3e535e.  v0:= fcmpl(v3, v0);
  #L3e5362.  if v0 < 0 then goto L3e5376;
  #L3e5366.  v0:= 1.0F;
  #L3e536a.  v0:= fcmpg(v3, v0);
  #L3e536e.  if v0 > 0 then goto L3e5376;
  #L3e5372.  v0:= 1I;
  #L3e5374.  goto L3e5378;
  #L3e5376.  v0:= 0I;
  #L3e5378.  v1:= "Size multiplier must be between 0 and 1" @kind object;
  #L3e537c.  call `checkArgument`(v0, v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L3e5382.  v2.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.f` @type ^`float` := v3;
  #L3e5386.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` `setMemoryCacheScreens`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v2 @kind this, `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.setMemoryCacheScreens:(F)Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e5398.  v0:= 0I;
  #L3e539a.  v0:= fcmpl(v3, v0);
  #L3e539e.  if v0 < 0 then goto L3e53a6;
  #L3e53a2.  v0:= 1I;
  #L3e53a4.  goto L3e53a8;
  #L3e53a6.  v0:= 0I;
  #L3e53a8.  v1:= "Memory cache screens must be greater than or equal to 0" @kind object;
  #L3e53ac.  call `checkArgument`(v0, v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L3e53b2.  v2.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.d` @type ^`float` := v3;
  #L3e53b6.  return v2 @kind object;
}
