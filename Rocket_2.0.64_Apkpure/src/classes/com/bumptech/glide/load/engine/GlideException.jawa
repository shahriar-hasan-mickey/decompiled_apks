record `com.bumptech.glide.load.engine.GlideException` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Exception` @kind class {
  `java.util.List` `com.bumptech.glide.load.engine.GlideException.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.GlideException.b` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.DataSource` `com.bumptech.glide.load.engine.GlideException.c` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.load.engine.GlideException.d` @AccessFlag PRIVATE;
  `java.lang.String` `com.bumptech.glide.load.engine.GlideException.e` @AccessFlag PRIVATE;
  `java.lang.Exception` `com.bumptech.glide.load.engine.GlideException.f` @AccessFlag PRIVATE;
}
global `java.lang.StackTraceElement`[] `@@com.bumptech.glide.load.engine.GlideException.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.bumptech.glide.load.engine.GlideException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/GlideException;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e10b4.  v0:= 0I;
  #L3e10b6.  v0:= new `java.lang.StackTraceElement`[v0];
  #L3e10ba.  `@@com.bumptech.glide.load.engine.GlideException.g` @type ^`java.lang.StackTraceElement`[] := v0 @kind object;
  #L3e10be.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e10d0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3e10d6.  v0:= temp @kind object;
  #L3e10d8.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3e10de.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e10f0.  call temp:= `singletonList`(v2) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3e10f6.  v2:= temp @kind object;
  #L3e10f8.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3e10fe.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e1110.  call `<init>`(v0) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L3e1116.  v0.`com.bumptech.glide.load.engine.GlideException.e` @type ^`java.lang.String` := v1 @kind object;
  #L3e111a.  v1:= `@@com.bumptech.glide.load.engine.GlideException.g` @type ^`java.lang.StackTraceElement`[] @kind object;
  #L3e111e.  call `setStackTrace`(v0, v1) @signature `Ljava/lang/Exception;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L3e1124.  v0.`com.bumptech.glide.load.engine.GlideException.a` @type ^`java.util.List` := v2 @kind object;
  #L3e1128.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this, `java.lang.Throwable` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.a:(Ljava/lang/Throwable;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e113c.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.engine.GlideException` @kind boolean;
  #L3e1140.  if v0 == 0 then goto L3e1178;
  #L3e1144.  v2:= (`com.bumptech.glide.load.engine.GlideException`) v2 @kind object;
  #L3e1148.  call temp:= `getCauses`(v2) @signature `Lcom/bumptech/glide/load/engine/GlideException;.getCauses:()Ljava/util/List;` @kind virtual;
  #L3e114e.  v2:= temp @kind object;
  #L3e1150.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e1156.  v2:= temp @kind object;
  #L3e1158.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e115e.  v0:= temp;
  #L3e1160.  if v0 == 0 then goto L3e117e;
  #L3e1164.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e116a.  v0:= temp @kind object;
  #L3e116c.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L3e1170.  call `a`(v1, v0, v3) @signature `Lcom/bumptech/glide/load/engine/GlideException;.a:(Ljava/lang/Throwable;Ljava/util/List;)V` @kind direct;
  #L3e1176.  goto L3e1158;
  #L3e1178.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e117e.  return @kind void;
}
procedure `void` `b`(`java.util.List` v0 @kind object, `java.lang.Appendable` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.b:(Ljava/util/List;Ljava/lang/Appendable;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3e1190.  call `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.c:(Ljava/util/List;Ljava/lang/Appendable;)V` @kind static;
  #L3e1196.  return @kind void;
  #L3e1198.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3e119a.  v1:= new `java.lang.RuntimeException`;
  #L3e119e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3e11a4.  throw v1;
  catch `java.io.IOException` @[L3e1190..L3e1196] goto L3e1198;
}
procedure `void` `c`(`java.util.List` v5 @kind object, `java.lang.Appendable` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.c:(Ljava/util/List;Ljava/lang/Appendable;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e11c8.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e11ce.  v0:= temp;
  #L3e11d0.  v1:= 0I;
  #L3e11d2.  if v1 >= v0 then goto L3e1246;
  #L3e11d6.  v2:= "Cause (" @kind object;
  #L3e11da.  call temp:= `append`(v6, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3e11e0.  v2:= temp @kind object;
  #L3e11e2.  v3:= v1 + 1;
  #L3e11e6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3e11ec.  v4:= temp @kind object;
  #L3e11ee.  call temp:= `append`(v2, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3e11f4.  v2:= temp @kind object;
  #L3e11f6.  v4:= " of " @kind object;
  #L3e11fa.  call temp:= `append`(v2, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3e1200.  v2:= temp @kind object;
  #L3e1202.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3e1208.  v4:= temp @kind object;
  #L3e120a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3e1210.  v2:= temp @kind object;
  #L3e1212.  v4:= "): " @kind object;
  #L3e1216.  call temp:= `append`(v2, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3e121c.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e1222.  v1:= temp @kind object;
  #L3e1224.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L3e1228.  v2:= instanceof @variable v1 @type ^`com.bumptech.glide.load.engine.GlideException` @kind boolean;
  #L3e122c.  if v2 == 0 then goto L3e123c;
  #L3e1230.  v1:= (`com.bumptech.glide.load.engine.GlideException`) v1 @kind object;
  #L3e1234.  call `e`(v1, v6) @signature `Lcom/bumptech/glide/load/engine/GlideException;.e:(Ljava/lang/Appendable;)V` @kind direct;
  #L3e123a.  goto L3e1242;
  #L3e123c.  call `d`(v1, v6) @signature `Lcom/bumptech/glide/load/engine/GlideException;.d:(Ljava/lang/Throwable;Ljava/lang/Appendable;)V` @kind static;
  #L3e1242.  v1:= v3;
  #L3e1244.  goto L3e11d2;
  #L3e1246.  return @kind void;
}
procedure `void` `d`(`java.lang.Throwable` v1 @kind object, `java.lang.Appendable` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.d:(Ljava/lang/Throwable;Ljava/lang/Appendable;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e1258.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e125e.  v0:= temp @kind object;
  #L3e1260.  call temp:= `toString`(v0) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1266.  v0:= temp @kind object;
  #L3e1268.  call temp:= `append`(v2, v0) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3e126e.  v2:= temp @kind object;
  #L3e1270.  v0:= ": " @kind object;
  #L3e1274.  call temp:= `append`(v2, v0) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3e127a.  v2:= temp @kind object;
  #L3e127c.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3e1282.  v0:= temp @kind object;
  #L3e1284.  call temp:= `append`(v2, v0) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3e128a.  v2:= temp @kind object;
  #L3e128c.  v0:= 10I;
  #L3e1290.  call temp:= `append`(v2, v0) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3e1296.  return @kind void;
  #L3e1298.  v2:= new `java.lang.RuntimeException`;
  #L3e129c.  call `<init>`(v2, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3e12a2.  throw v2;
  catch `java.io.IOException` @[L3e1258..L3e1296] goto L3e1298;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.GlideException` v2 @kind this, `java.lang.Appendable` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.e:(Ljava/lang/Appendable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e1390.  call `d`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/GlideException;.d:(Ljava/lang/Throwable;Ljava/lang/Appendable;)V` @kind static;
  #L3e1396.  call temp:= `getCauses`(v2) @signature `Lcom/bumptech/glide/load/engine/GlideException;.getCauses:()Ljava/util/List;` @kind virtual;
  #L3e139c.  v0:= temp @kind object;
  #L3e139e.  v1:= new `com.bumptech.glide.load.engine.GlideException$a`;
  #L3e13a2.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/GlideException$a;.<init>:(Ljava/lang/Appendable;)V` @kind direct;
  #L3e13a8.  call `b`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.b:(Ljava/util/List;Ljava/lang/Appendable;)V` @kind static;
  #L3e13ae.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this, `com.bumptech.glide.load.Key` v2 @kind object, `com.bumptech.glide.load.DataSource` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.f:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag  {
    temp;
    v0;

  #L3e13c0.  v0:= 0I;
  #L3e13c2.  call `g`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.g:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/DataSource;Ljava/lang/Class;)V` @kind virtual;
  #L3e13c8.  return @kind void;
}
procedure `java.lang.Throwable` `fillInStackTrace`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.fillInStackTrace:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;

  #L3e1064.  return v0 @kind object;
}
procedure `void` `g`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `com.bumptech.glide.load.DataSource` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.g:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/DataSource;Ljava/lang/Class;)V` @AccessFlag  {
    temp;

  #L3e13dc.  v0.`com.bumptech.glide.load.engine.GlideException.b` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3e13e0.  v0.`com.bumptech.glide.load.engine.GlideException.c` @type ^`com.bumptech.glide.load.DataSource` := v2 @kind object;
  #L3e13e4.  v0.`com.bumptech.glide.load.engine.GlideException.d` @type ^`java.lang.Class` := v3 @kind object;
  #L3e13e8.  return @kind void;
}
procedure `java.util.List` `getCauses`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.getCauses:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1078.  v0:= v1.`com.bumptech.glide.load.engine.GlideException.a` @type ^`java.util.List` @kind object;
  #L3e107c.  return v0 @kind object;
}
procedure `java.lang.String` `getMessage`(`com.bumptech.glide.load.engine.GlideException` v5 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.getMessage:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e0ec8.  v0:= new `java.lang.StringBuilder`;
  #L3e0ecc.  v1:= 71I;
  #L3e0ed0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3e0ed6.  v1:= v5.`com.bumptech.glide.load.engine.GlideException.e` @type ^`java.lang.String` @kind object;
  #L3e0eda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0ee0.  v1:= v5.`com.bumptech.glide.load.engine.GlideException.d` @type ^`java.lang.Class` @kind object;
  #L3e0ee4.  v2:= ", " @kind object;
  #L3e0ee8.  v3:= "" @kind object;
  #L3e0eec.  if v1 == 0 then goto L3e0f14;
  #L3e0ef0.  v1:= new `java.lang.StringBuilder`;
  #L3e0ef4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0efa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0f00.  v4:= v5.`com.bumptech.glide.load.engine.GlideException.d` @type ^`java.lang.Class` @kind object;
  #L3e0f04.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0f0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0f10.  v1:= temp @kind object;
  #L3e0f12.  goto L3e0f16;
  #L3e0f14.  v1:= v3 @kind object;
  #L3e0f16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0f1c.  v1:= v5.`com.bumptech.glide.load.engine.GlideException.c` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3e0f20.  if v1 == 0 then goto L3e0f48;
  #L3e0f24.  v1:= new `java.lang.StringBuilder`;
  #L3e0f28.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0f2e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0f34.  v4:= v5.`com.bumptech.glide.load.engine.GlideException.c` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3e0f38.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0f3e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0f44.  v1:= temp @kind object;
  #L3e0f46.  goto L3e0f4a;
  #L3e0f48.  v1:= v3 @kind object;
  #L3e0f4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0f50.  v1:= v5.`com.bumptech.glide.load.engine.GlideException.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3e0f54.  if v1 == 0 then goto L3e0f7a;
  #L3e0f58.  v1:= new `java.lang.StringBuilder`;
  #L3e0f5c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0f62.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0f68.  v2:= v5.`com.bumptech.glide.load.engine.GlideException.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3e0f6c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0f72.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0f78.  v3:= temp @kind object;
  #L3e0f7a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0f80.  call temp:= `getRootCauses`(v5) @signature `Lcom/bumptech/glide/load/engine/GlideException;.getRootCauses:()Ljava/util/List;` @kind virtual;
  #L3e0f86.  v1:= temp @kind object;
  #L3e0f88.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e0f8e.  v2:= temp;
  #L3e0f90.  if v2 == 0 then goto L3e0f9e;
  #L3e0f94.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0f9a.  v0:= temp @kind object;
  #L3e0f9c.  return v0 @kind object;
  #L3e0f9e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e0fa4.  v2:= temp;
  #L3e0fa6.  v3:= 1I;
  #L3e0fa8.  if v2 != v3 then goto L3e0fb8;
  #L3e0fac.  v2:= "\nThere was 1 root cause:" @kind object;
  #L3e0fb0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0fb6.  goto L3e0fda;
  #L3e0fb8.  v2:= "\nThere were " @kind object;
  #L3e0fbc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0fc2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e0fc8.  v2:= temp;
  #L3e0fca.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0fd0.  v2:= " root causes:" @kind object;
  #L3e0fd4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0fda.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e0fe0.  v1:= temp @kind object;
  #L3e0fe2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e0fe8.  v2:= temp;
  #L3e0fea.  if v2 == 0 then goto L3e103e;
  #L3e0fee.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e0ff4.  v2:= temp @kind object;
  #L3e0ff6.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L3e0ffa.  v3:= 10I;
  #L3e0ffe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1004.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e100a.  v3:= temp @kind object;
  #L3e100c.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e1012.  v3:= temp @kind object;
  #L3e1014.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e101a.  v3:= 40I;
  #L3e101e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1024.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3e102a.  v2:= temp @kind object;
  #L3e102c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1032.  v2:= 41I;
  #L3e1036.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e103c.  goto L3e0fe2;
  #L3e103e.  v1:= "\n call GlideException#logRootCauses(String) for more detail" @kind object;
  #L3e1042.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1048.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e104e.  v0:= temp @kind object;
  #L3e1050.  return v0 @kind object;
}
procedure `java.lang.Exception` `getOrigin`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.getOrigin:()Ljava/lang/Exception;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0eb0.  v0:= v1.`com.bumptech.glide.load.engine.GlideException.f` @type ^`java.lang.Exception` @kind object;
  #L3e0eb4.  return v0 @kind object;
}
procedure `java.util.List` `getRootCauses`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.getRootCauses:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1090.  v0:= new `java.util.ArrayList`;
  #L3e1094.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e109a.  call `a`(v1, v1, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.a:(Ljava/lang/Throwable;Ljava/util/List;)V` @kind direct;
  #L3e10a0.  return v0 @kind object;
}
procedure `void` `logRootCauses`(`com.bumptech.glide.load.engine.GlideException` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.logRootCauses:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e12c4.  call temp:= `getRootCauses`(v6) @signature `Lcom/bumptech/glide/load/engine/GlideException;.getRootCauses:()Ljava/util/List;` @kind virtual;
  #L3e12ca.  v0:= temp @kind object;
  #L3e12cc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e12d2.  v1:= temp;
  #L3e12d4.  v2:= 0I;
  #L3e12d6.  if v2 >= v1 then goto L3e1330;
  #L3e12da.  v3:= new `java.lang.StringBuilder`;
  #L3e12de.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e12e4.  v4:= "Root cause (" @kind object;
  #L3e12e8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e12ee.  v4:= v2 + 1;
  #L3e12f2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e12f8.  v5:= " of " @kind object;
  #L3e12fc.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1302.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1308.  v5:= ")" @kind object;
  #L3e130c.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1312.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1318.  v3:= temp @kind object;
  #L3e131a.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e1320.  v2:= temp @kind object;
  #L3e1322.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L3e1326.  call temp:= `i`(v7, v3, v2) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3e132c.  v2:= v4;
  #L3e132e.  goto L3e12d6;
  #L3e1330.  return @kind void;
}
procedure `void` `printStackTrace`(`com.bumptech.glide.load.engine.GlideException` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/GlideException;.printStackTrace:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1344.  v0:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L3e1348.  call `printStackTrace`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.printStackTrace:(Ljava/io/PrintStream;)V` @kind virtual;
  #L3e134e.  return @kind void;
}
procedure `void` `printStackTrace`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `java.io.PrintStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.printStackTrace:(Ljava/io/PrintStream;)V` @AccessFlag PUBLIC {
    temp;

  #L3e1360.  call `e`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.e:(Ljava/lang/Appendable;)V` @kind direct;
  #L3e1366.  return @kind void;
}
procedure `void` `printStackTrace`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `java.io.PrintWriter` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.printStackTrace:(Ljava/io/PrintWriter;)V` @AccessFlag PUBLIC {
    temp;

  #L3e1378.  call `e`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.e:(Ljava/lang/Appendable;)V` @kind direct;
  #L3e137e.  return @kind void;
}
procedure `void` `setOrigin`(`com.bumptech.glide.load.engine.GlideException` v0 @kind this, `java.lang.Exception` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/GlideException;.setOrigin:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;

  #L3e13fc.  v0.`com.bumptech.glide.load.engine.GlideException.f` @type ^`java.lang.Exception` := v1 @kind object;
  #L3e1400.  return @kind void;
}
