record `com.bumptech.glide.load.engine.LoadPath` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.bumptech.glide.load.engine.LoadPath.a` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.Pools$Pool` `com.bumptech.glide.load.engine.LoadPath.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.LoadPath.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.engine.LoadPath.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.LoadPath` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `java.util.List` v4 @kind object, `androidx.core.util.Pools$Pool` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Landroidx/core/util/Pools$Pool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e1664.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e166a.  v0.`com.bumptech.glide.load.engine.LoadPath.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3e166e.  v0.`com.bumptech.glide.load.engine.LoadPath.b` @type ^`androidx.core.util.Pools$Pool` := v5 @kind object;
  #L3e1672.  call temp:= `checkNotEmpty`(v4) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotEmpty:(Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L3e1678.  v4:= temp @kind object;
  #L3e167a.  v4:= (`java.util.List`) v4 @kind object;
  #L3e167e.  v0.`com.bumptech.glide.load.engine.LoadPath.c` @type ^`java.util.List` := v4 @kind object;
  #L3e1682.  v4:= new `java.lang.StringBuilder`;
  #L3e1686.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e168c.  v5:= "Failed LoadPath{" @kind object;
  #L3e1690.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1696.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3e169c.  v1:= temp @kind object;
  #L3e169e.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e16a4.  v1:= "->" @kind object;
  #L3e16a8.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e16ae.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3e16b4.  v2:= temp @kind object;
  #L3e16b6.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e16bc.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e16c2.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3e16c8.  v1:= temp @kind object;
  #L3e16ca.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e16d0.  v1:= "}" @kind object;
  #L3e16d4.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e16da.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e16e0.  v1:= temp @kind object;
  #L3e16e2.  v0.`com.bumptech.glide.load.engine.LoadPath.d` @type ^`java.lang.String` := v1 @kind object;
  #L3e16e6.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `a`(`com.bumptech.glide.load.engine.LoadPath` v12 @kind this, `com.bumptech.glide.load.data.DataRewinder` v13 @kind object, `com.bumptech.glide.load.Options` v14 @kind object, `int` v15 , `int` v16 , `com.bumptech.glide.load.engine.DecodePath$a` v17 @kind object, `java.util.List` v18 @kind object) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.a:(Lcom/bumptech/glide/load/data/DataRewinder;Lcom/bumptech/glide/load/Options;IILcom/bumptech/glide/load/engine/DecodePath$a;Ljava/util/List;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3e1558.  v1:= v12 @kind object;
  #L3e155a.  v2:= v18 @kind object;
  #L3e155e.  v0:= v1.`com.bumptech.glide.load.engine.LoadPath.c` @type ^`java.util.List` @kind object;
  #L3e1562.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e1568.  v3:= temp;
  #L3e156a.  v0:= 0I;
  #L3e156c.  v4:= 0I;
  #L3e156e.  v4:= v0 @kind object;
  #L3e1570.  v5:= 0I;
  #L3e1572.  if v5 >= v3 then goto L3e15b8;
  #L3e1576.  v0:= v1.`com.bumptech.glide.load.engine.LoadPath.c` @type ^`java.util.List` @kind object;
  #L3e157a.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e1580.  v0:= temp @kind object;
  #L3e1582.  v6:= v0 @kind object;
  #L3e1584.  v6:= (`com.bumptech.glide.load.engine.DecodePath`) v6 @kind object;
  #L3e1588.  v7:= v13 @kind object;
  #L3e158a.  v8:= v15;
  #L3e158c.  v9:= v16;
  #L3e1590.  v10:= v14 @kind object;
  #L3e1592.  v11:= v17 @kind object;
  #L3e1596.  call temp:= `decode`(v6, v7, v8, v9, v10, v11) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.decode:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;Lcom/bumptech/glide/load/engine/DecodePath$a;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L3e159c.  v0:= temp @kind object;
  #L3e159e.  v4:= v0 @kind object;
  #L3e15a0.  goto L3e15ac;
  #L3e15a2.  v0:= Exception @type ^`com.bumptech.glide.load.engine.GlideException` @kind object;
  #L3e15a4.  v6:= v0 @kind object;
  #L3e15a6.  call temp:= `add`(v2, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e15ac.  if v4 == 0 then goto L3e15b2;
  #L3e15b0.  goto L3e15b8;
  #L3e15b2.  v5:= v5 + 1;
  #L3e15b6.  goto L3e1572;
  #L3e15b8.  if v4 == 0 then goto L3e15be;
  #L3e15bc.  return v4 @kind object;
  #L3e15be.  v0:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3e15c2.  v3:= v1.`com.bumptech.glide.load.engine.LoadPath.d` @type ^`java.lang.String` @kind object;
  #L3e15c6.  v4:= new `java.util.ArrayList`;
  #L3e15ca.  call `<init>`(v4, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3e15d0.  call `<init>`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3e15d6.  throw v0;
  catch `com.bumptech.glide.load.engine.GlideException` @[L3e1596..L3e159e] goto L3e15a2;
}
procedure `java.lang.Class` `getDataClass`(`com.bumptech.glide.load.engine.LoadPath` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e15f8.  v0:= v1.`com.bumptech.glide.load.engine.LoadPath.a` @type ^`java.lang.Class` @kind object;
  #L3e15fc.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `load`(`com.bumptech.glide.load.engine.LoadPath` v8 @kind this, `com.bumptech.glide.load.data.DataRewinder` v9 @kind object, `com.bumptech.glide.load.Options` v10 @kind object, `int` v11 , `int` v12 , `com.bumptech.glide.load.engine.DecodePath$a` v13 @kind object) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.load:(Lcom/bumptech/glide/load/data/DataRewinder;Lcom/bumptech/glide/load/Options;IILcom/bumptech/glide/load/engine/DecodePath$a;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e14f4.  v0:= v8.`com.bumptech.glide.load.engine.LoadPath.b` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3e14f8.  call temp:= `acquire`(v0) @signature `Landroidx/core/util/Pools$Pool;.acquire:()Ljava/lang/Object;` @kind interface;
  #L3e14fe.  v0:= temp @kind object;
  #L3e1500.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e1506.  v0:= temp @kind object;
  #L3e1508.  v0:= (`java.util.List`) v0 @kind object;
  #L3e150c.  v1:= v8 @kind object;
  #L3e150e.  v2:= v9 @kind object;
  #L3e1510.  v3:= v10 @kind object;
  #L3e1512.  v4:= v11;
  #L3e1514.  v5:= v12;
  #L3e1516.  v6:= v13 @kind object;
  #L3e1518.  v7:= v0 @kind object;
  #L3e151a.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.a:(Lcom/bumptech/glide/load/data/DataRewinder;Lcom/bumptech/glide/load/Options;IILcom/bumptech/glide/load/engine/DecodePath$a;Ljava/util/List;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3e1520.  v9:= temp @kind object;
  #L3e1522.  v10:= v8.`com.bumptech.glide.load.engine.LoadPath.b` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3e1526.  call temp:= `release`(v10, v0) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3e152c.  return v9 @kind object;
  #L3e152e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e1530.  v10:= v8.`com.bumptech.glide.load.engine.LoadPath.b` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3e1534.  call temp:= `release`(v10, v0) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3e153a.  throw v9;
  catch `java.lang.Throwable` @[L3e151a..L3e1522] goto L3e152e;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.LoadPath` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1610.  v0:= new `java.lang.StringBuilder`;
  #L3e1614.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e161a.  v1:= "LoadPath{decodePaths=" @kind object;
  #L3e161e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1624.  v1:= v2.`com.bumptech.glide.load.engine.LoadPath.c` @type ^`java.util.List` @kind object;
  #L3e1628.  call temp:= `toArray`(v1) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3e162e.  v1:= temp @kind object;
  #L3e1630.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e1636.  v1:= temp @kind object;
  #L3e1638.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e163e.  v1:= 125I;
  #L3e1642.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1648.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e164e.  v0:= temp @kind object;
  #L3e1650.  return v0 @kind object;
}
