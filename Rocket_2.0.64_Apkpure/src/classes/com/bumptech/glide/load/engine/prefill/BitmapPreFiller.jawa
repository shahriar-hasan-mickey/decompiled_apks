record `com.bumptech.glide.load.engine.prefill.BitmapPreFiller` @kind class @AccessFlag PUBLIC_FINAL {
  `com.bumptech.glide.load.engine.cache.MemoryCache` `com.bumptech.glide.load.engine.prefill.BitmapPreFiller.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.engine.prefill.BitmapPreFiller.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.DecodeFormat` `com.bumptech.glide.load.engine.prefill.BitmapPreFiller.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.prefill.a` `com.bumptech.glide.load.engine.prefill.BitmapPreFiller.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.prefill.BitmapPreFiller` v0 @kind this, `com.bumptech.glide.load.engine.cache.MemoryCache` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object, `com.bumptech.glide.load.DecodeFormat` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/BitmapPreFiller;.<init>:(Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/DecodeFormat;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e66a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e66aa.  v0.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.a` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` := v1 @kind object;
  #L3e66ae.  v0.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v2 @kind object;
  #L3e66b2.  v0.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.c` @type ^`com.bumptech.glide.load.DecodeFormat` := v3 @kind object;
  #L3e66b6.  return @kind void;
}
procedure `int` `b`(`com.bumptech.glide.load.engine.prefill.PreFillType` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/BitmapPreFiller;.b:(Lcom/bumptech/glide/load/engine/prefill/PreFillType;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3e6670.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.d:()I` @kind virtual;
  #L3e6676.  v0:= temp;
  #L3e6678.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.b:()I` @kind virtual;
  #L3e667e.  v1:= temp;
  #L3e6680.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.a:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e6686.  v2:= temp @kind object;
  #L3e6688.  call temp:= `getBitmapByteSize`(v0, v1, v2) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L3e668e.  v2:= temp;
  #L3e6690.  return v2;
}
procedure `com.bumptech.glide.load.engine.prefill.b` `a`(`com.bumptech.glide.load.engine.prefill.BitmapPreFiller` v7 @kind this, `com.bumptech.glide.load.engine.prefill.PreFillType`[] v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/BitmapPreFiller;.a:([Lcom/bumptech/glide/load/engine/prefill/PreFillType;)Lcom/bumptech/glide/load/engine/prefill/b;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e65bc.  v0:= v7.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.a` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3e65c0.  call temp:= `getMaxSize`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.getMaxSize:()J` @kind interface;
  #L3e65c6.  v0:= temp @kind wide;
  #L3e65c8.  v2:= v7.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.a` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3e65cc.  call temp:= `getCurrentSize`(v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.getCurrentSize:()J` @kind interface;
  #L3e65d2.  v2:= temp @kind wide;
  #L3e65d4.  v0:= v0 - v2 @kind long;
  #L3e65d6.  v2:= v7.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3e65da.  call temp:= `getMaxSize`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.getMaxSize:()J` @kind interface;
  #L3e65e0.  v2:= temp @kind wide;
  #L3e65e2.  v0:= v0 + v2 @kind long;
  #L3e65e4.  v2:= length @variable v8;
  #L3e65e6.  v3:= 0I;
  #L3e65e8.  v4:= 0I;
  #L3e65ea.  v5:= 0I;
  #L3e65ec.  if v4 >= v2 then goto L3e6604;
  #L3e65f0.  v6:= v8[v4] @kind object;
  #L3e65f4.  call temp:= `c`(v6) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.c:()I` @kind virtual;
  #L3e65fa.  v6:= temp;
  #L3e65fc.  v5:= v5 + v6 @kind int;
  #L3e65fe.  v4:= v4 + 1;
  #L3e6602.  goto L3e65ec;
  #L3e6604.  v0:= (`float`) v0 @kind l2f;
  #L3e6606.  v1:= (`float`) v5 @kind i2f;
  #L3e6608.  v0:= v0 / v1 @kind float;
  #L3e660a.  v1:= new `java.util.HashMap`;
  #L3e660e.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e6614.  v2:= length @variable v8;
  #L3e6616.  if v3 >= v2 then goto L3e6652;
  #L3e661a.  v4:= v8[v3] @kind object;
  #L3e661e.  call temp:= `c`(v4) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.c:()I` @kind virtual;
  #L3e6624.  v5:= temp;
  #L3e6626.  v5:= (`float`) v5 @kind i2f;
  #L3e6628.  v5:= v5 * v0 @kind float;
  #L3e662c.  call temp:= `round`(v5) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3e6632.  v5:= temp;
  #L3e6634.  call temp:= `b`(v4) @signature `Lcom/bumptech/glide/load/engine/prefill/BitmapPreFiller;.b:(Lcom/bumptech/glide/load/engine/prefill/PreFillType;)I` @kind static;
  #L3e663a.  v6:= temp;
  #L3e663c.  v5:= v5 / v6 @kind int;
  #L3e663e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e6644.  v5:= temp @kind object;
  #L3e6646.  call temp:= `put`(v1, v4, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e664c.  v3:= v3 + 1;
  #L3e6650.  goto L3e6616;
  #L3e6652.  v8:= new `com.bumptech.glide.load.engine.prefill.b`;
  #L3e6656.  call `<init>`(v8, v1) @signature `Lcom/bumptech/glide/load/engine/prefill/b;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L3e665c.  return v8 @kind object;
}
procedure `void` `preFill`(`com.bumptech.glide.load.engine.prefill.BitmapPreFiller` v5 @kind this, `com.bumptech.glide.load.engine.prefill.PreFillType$Builder`[] v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/BitmapPreFiller;.preFill:([Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e66c8.  v0:= v5.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.d` @type ^`com.bumptech.glide.load.engine.prefill.a` @kind object;
  #L3e66cc.  if v0 == 0 then goto L3e66d6;
  #L3e66d0.  call `b`(v0) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.b:()V` @kind virtual;
  #L3e66d6.  v0:= length @variable v6;
  #L3e66d8.  v0:= new `com.bumptech.glide.load.engine.prefill.PreFillType`[v0];
  #L3e66dc.  v1:= 0I;
  #L3e66de.  v2:= length @variable v6;
  #L3e66e0.  if v1 >= v2 then goto L3e6722;
  #L3e66e4.  v2:= v6[v1] @kind object;
  #L3e66e8.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;.b:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e66ee.  v3:= temp @kind object;
  #L3e66f0.  if v3 != 0 then goto L3e6710;
  #L3e66f4.  v3:= v5.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.c` @type ^`com.bumptech.glide.load.DecodeFormat` @kind object;
  #L3e66f8.  v4:= `@@com.bumptech.glide.load.DecodeFormat.PREFER_ARGB_8888` @type ^`com.bumptech.glide.load.DecodeFormat` @kind object;
  #L3e66fc.  if v3 != v4 then goto L3e6706;
  #L3e6700.  v3:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e6704.  goto L3e670a;
  #L3e6706.  v3:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e670a.  call temp:= `setConfig`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;.setConfig:(Landroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;` @kind virtual;
  #L3e6710.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;.a:()Lcom/bumptech/glide/load/engine/prefill/PreFillType;` @kind virtual;
  #L3e6716.  v2:= temp @kind object;
  #L3e6718.  v0[v1]:= v2 @kind object;
  #L3e671c.  v1:= v1 + 1;
  #L3e6720.  goto L3e66de;
  #L3e6722.  call temp:= `a`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/prefill/BitmapPreFiller;.a:([Lcom/bumptech/glide/load/engine/prefill/PreFillType;)Lcom/bumptech/glide/load/engine/prefill/b;` @kind virtual;
  #L3e6728.  v6:= temp @kind object;
  #L3e672a.  v0:= new `com.bumptech.glide.load.engine.prefill.a`;
  #L3e672e.  v1:= v5.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3e6732.  v2:= v5.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.a` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3e6736.  call `<init>`(v0, v1, v2, v6) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/prefill/b;)V` @kind direct;
  #L3e673c.  v5.`com.bumptech.glide.load.engine.prefill.BitmapPreFiller.d` @type ^`com.bumptech.glide.load.engine.prefill.a` := v0 @kind object;
  #L3e6740.  call `postOnUiThread`(v0) @signature `Lcom/bumptech/glide/util/Util;.postOnUiThread:(Ljava/lang/Runnable;)V` @kind static;
  #L3e6746.  return @kind void;
}
