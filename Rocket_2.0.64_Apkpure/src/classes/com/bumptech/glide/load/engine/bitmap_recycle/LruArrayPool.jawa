record `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.c` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e3114.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e311a.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.c`;
  #L3e311e.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.<init>:()V` @kind direct;
  #L3e3124.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c` := v0 @kind object;
  #L3e3128.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b`;
  #L3e312c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.<init>:()V` @kind direct;
  #L3e3132.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` := v0 @kind object;
  #L3e3136.  v0:= new `java.util.HashMap`;
  #L3e313a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e3140.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.c` @type ^`java.util.Map` := v0 @kind object;
  #L3e3144.  v0:= new `java.util.HashMap`;
  #L3e3148.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e314e.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.d` @type ^`java.util.Map` := v0 @kind object;
  #L3e3152.  v0:= 4194304I;
  #L3e3156.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int` := v0;
  #L3e315a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e316c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e3172.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.c`;
  #L3e3176.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.<init>:()V` @kind direct;
  #L3e317c.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c` := v0 @kind object;
  #L3e3180.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b`;
  #L3e3184.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.<init>:()V` @kind direct;
  #L3e318a.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` := v0 @kind object;
  #L3e318e.  v0:= new `java.util.HashMap`;
  #L3e3192.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e3198.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.c` @type ^`java.util.Map` := v0 @kind object;
  #L3e319c.  v0:= new `java.util.HashMap`;
  #L3e31a0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e31a6.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.d` @type ^`java.util.Map` := v0 @kind object;
  #L3e31aa.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int` := v2;
  #L3e31ae.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v3 @kind this, `int` v4 , `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.a:(ILjava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e31f0.  call temp:= `h`(v3, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.h:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L3e31f6.  v5:= temp @kind object;
  #L3e31f8.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e31fe.  v0:= temp @kind object;
  #L3e3200.  call temp:= `get`(v5, v0) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e3206.  v0:= temp @kind object;
  #L3e3208.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3e320c.  if v0 == 0 then goto L3e3250;
  #L3e3210.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e3216.  v1:= temp;
  #L3e3218.  v2:= 1I;
  #L3e321a.  if v1 != v2 then goto L3e322e;
  #L3e321e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e3224.  v4:= temp @kind object;
  #L3e3226.  call temp:= `remove`(v5, v4) @signature `Ljava/util/NavigableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e322c.  goto L3e324e;
  #L3e322e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e3234.  v4:= temp @kind object;
  #L3e3236.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e323c.  v0:= temp;
  #L3e323e.  v0:= v0 - v2 @kind int;
  #L3e3240.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e3246.  v0:= temp @kind object;
  #L3e3248.  call temp:= `put`(v5, v4, v0) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e324e.  return @kind void;
  #L3e3250.  v5:= new `java.lang.NullPointerException`;
  #L3e3254.  v0:= new `java.lang.StringBuilder`;
  #L3e3258.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e325e.  v1:= "Tried to decrement empty size, size: " @kind object;
  #L3e3262.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3268.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e326e.  v4:= ", this: " @kind object;
  #L3e3272.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3278.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e327e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e3284.  v4:= temp @kind object;
  #L3e3286.  call `<init>`(v5, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e328c.  throw v5;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e32a0.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int`;
  #L3e32a4.  call `c`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.c:(I)V` @kind direct;
  #L3e32aa.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v5 @kind this, `int` v6 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.c:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e32bc.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int`;
  #L3e32c0.  if v0 <= v6 then goto L3e3362;
  #L3e32c4.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c` @kind object;
  #L3e32c8.  call temp:= `f`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.f:()Ljava/lang/Object;` @kind virtual;
  #L3e32ce.  v0:= temp @kind object;
  #L3e32d0.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e32d6.  call temp:= `d`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.d:(Ljava/lang/Object;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L3e32dc.  v1:= temp @kind object;
  #L3e32de.  v2:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int`;
  #L3e32e2.  call temp:= `getArrayLength`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3e32e8.  v3:= temp;
  #L3e32ea.  call temp:= `getElementSizeInBytes`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getElementSizeInBytes:()I` @kind interface;
  #L3e32f0.  v4:= temp;
  #L3e32f2.  v3:= v3 * v4 @kind int;
  #L3e32f6.  v2:= v2 - v3 @kind int;
  #L3e32f8.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int` := v2;
  #L3e32fc.  call temp:= `getArrayLength`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3e3302.  v2:= temp;
  #L3e3304.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e330a.  v3:= temp @kind object;
  #L3e330c.  call `a`(v5, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.a:(ILjava/lang/Class;)V` @kind direct;
  #L3e3312.  call temp:= `getTag`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L3e3318.  v2:= temp @kind object;
  #L3e331a.  v3:= 2I;
  #L3e331c.  call temp:= `isLoggable`(v2, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e3322.  v2:= temp;
  #L3e3324.  if v2 == 0 then goto L3e32bc;
  #L3e3328.  call temp:= `getTag`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L3e332e.  v2:= temp @kind object;
  #L3e3330.  v3:= new `java.lang.StringBuilder`;
  #L3e3334.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e333a.  v4:= "evicted: " @kind object;
  #L3e333e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3344.  call temp:= `getArrayLength`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3e334a.  v0:= temp;
  #L3e334c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3352.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e3358.  v0:= temp @kind object;
  #L3e335a.  call temp:= `v`(v2, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e3360.  goto L3e32bc;
  #L3e3362.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.a` `d`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.d:(Ljava/lang/Object;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @AccessFlag PRIVATE {
    temp;

  #L3e2e84.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e2e8a.  v1:= temp @kind object;
  #L3e2e8c.  call temp:= `e`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.e:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L3e2e92.  v1:= temp @kind object;
  #L3e2e94.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.a` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.e:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e2ea8.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.d` @type ^`java.util.Map` @kind object;
  #L3e2eac.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e2eb2.  v0:= temp @kind object;
  #L3e2eb4.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.a`) v0 @kind object;
  #L3e2eb8.  if v0 != 0 then goto L3e2f34;
  #L3e2ebc.  v0:= constclass @type ^`int`[] @kind object;
  #L3e2ec0.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e2ec6.  v0:= temp;
  #L3e2ec8.  if v0 == 0 then goto L3e2ed8;
  #L3e2ecc.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter`;
  #L3e2ed0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/IntegerArrayAdapter;.<init>:()V` @kind direct;
  #L3e2ed6.  goto L3e2ef2;
  #L3e2ed8.  v0:= constclass @type ^`byte`[] @kind object;
  #L3e2edc.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e2ee2.  v0:= temp;
  #L3e2ee4.  if v0 == 0 then goto L3e2efe;
  #L3e2ee8.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter`;
  #L3e2eec.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ByteArrayAdapter;.<init>:()V` @kind direct;
  #L3e2ef2.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.d` @type ^`java.util.Map` @kind object;
  #L3e2ef6.  call temp:= `put`(v1, v4, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e2efc.  goto L3e2f34;
  #L3e2efe.  v0:= new `java.lang.IllegalArgumentException`;
  #L3e2f02.  v1:= new `java.lang.StringBuilder`;
  #L3e2f06.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e2f0c.  v2:= "No array pool found for: " @kind object;
  #L3e2f10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2f16.  call temp:= `getSimpleName`(v4) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3e2f1c.  v4:= temp @kind object;
  #L3e2f1e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2f24.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2f2a.  v4:= temp @kind object;
  #L3e2f2c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e2f32.  throw v0;
  #L3e2f34.  return v0 @kind object;
}
procedure `java.lang.Object` `f`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.f:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e2fc4.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c` @kind object;
  #L3e2fc8.  call temp:= `a`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/e;)Ljava/lang/Object;` @kind virtual;
  #L3e2fce.  v2:= temp @kind object;
  #L3e2fd0.  return v2 @kind object;
}
procedure `java.lang.Object` `g`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v5 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e3020.  call temp:= `e`(v5, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.e:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L3e3026.  v0:= temp @kind object;
  #L3e3028.  call temp:= `f`(v5, v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.f:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;)Ljava/lang/Object;` @kind direct;
  #L3e302e.  v1:= temp @kind object;
  #L3e3030.  if v1 == 0 then goto L3e3060;
  #L3e3034.  v2:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int`;
  #L3e3038.  call temp:= `getArrayLength`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3e303e.  v3:= temp;
  #L3e3040.  call temp:= `getElementSizeInBytes`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getElementSizeInBytes:()I` @kind interface;
  #L3e3046.  v4:= temp;
  #L3e3048.  v3:= v3 * v4 @kind int;
  #L3e304c.  v2:= v2 - v3 @kind int;
  #L3e304e.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int` := v2;
  #L3e3052.  call temp:= `getArrayLength`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3e3058.  v2:= temp;
  #L3e305a.  call `a`(v5, v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.a:(ILjava/lang/Class;)V` @kind direct;
  #L3e3060.  if v1 != 0 then goto L3e30c4;
  #L3e3064.  call temp:= `getTag`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L3e306a.  v7:= temp @kind object;
  #L3e306c.  v1:= 2I;
  #L3e306e.  call temp:= `isLoggable`(v7, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e3074.  v7:= temp;
  #L3e3076.  if v7 == 0 then goto L3e30b8;
  #L3e307a.  call temp:= `getTag`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L3e3080.  v7:= temp @kind object;
  #L3e3082.  v1:= new `java.lang.StringBuilder`;
  #L3e3086.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e308c.  v2:= "Allocated " @kind object;
  #L3e3090.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3096.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3e309a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e30a0.  v2:= " bytes" @kind object;
  #L3e30a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e30aa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e30b0.  v1:= temp @kind object;
  #L3e30b2.  call temp:= `v`(v7, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e30b8.  v6:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3e30bc.  call temp:= `newArray`(v0, v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.newArray:(I)Ljava/lang/Object;` @kind interface;
  #L3e30c2.  v1:= temp @kind object;
  #L3e30c4.  return v1 @kind object;
}
procedure `java.util.NavigableMap` `h`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.h:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e30d8.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.c` @type ^`java.util.Map` @kind object;
  #L3e30dc.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e30e2.  v0:= temp @kind object;
  #L3e30e4.  v0:= (`java.util.NavigableMap`) v0 @kind object;
  #L3e30e8.  if v0 != 0 then goto L3e3100;
  #L3e30ec.  v0:= new `java.util.TreeMap`;
  #L3e30f0.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L3e30f6.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.c` @type ^`java.util.Map` @kind object;
  #L3e30fa.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e3100.  return v0 @kind object;
}
procedure `boolean` `i`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.i:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e2df8.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int`;
  #L3e2dfc.  if v0 == 0 then goto L3e2e12;
  #L3e2e00.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int`;
  #L3e2e04.  v1:= v1 / v0 @kind int;
  #L3e2e06.  v0:= 2I;
  #L3e2e08.  if v1 < v0 then goto L3e2e0e;
  #L3e2e0c.  goto L3e2e12;
  #L3e2e0e.  v0:= 0I;
  #L3e2e10.  goto L3e2e14;
  #L3e2e12.  v0:= 1I;
  #L3e2e14.  return v0;
}
procedure `boolean` `j`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.j:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e2e28.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int`;
  #L3e2e2c.  v0:= v0 / 2;
  #L3e2e30.  if v2 > v0 then goto L3e2e38;
  #L3e2e34.  v2:= 1I;
  #L3e2e36.  goto L3e2e3a;
  #L3e2e38.  v2:= 0I;
  #L3e2e3a.  return v2;
}
procedure `boolean` `k`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `int` v2 , `java.lang.Integer` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.k:(ILjava/lang/Integer;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e2e4c.  if v3 == 0 then goto L3e2e70;
  #L3e2e50.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.i:()Z` @kind direct;
  #L3e2e56.  v0:= temp;
  #L3e2e58.  if v0 != 0 then goto L3e2e6c;
  #L3e2e5c.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e2e62.  v3:= temp;
  #L3e2e64.  v2:= v2 * 8;
  #L3e2e68.  if v3 > v2 then goto L3e2e70;
  #L3e2e6c.  v2:= 1I;
  #L3e2e6e.  goto L3e2e72;
  #L3e2e70.  v2:= 0I;
  #L3e2e72.  return v2;
}
procedure `void` `clearMemory`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.clearMemory:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e31c0.  @monitorenter v1
  #L3e31c2.  v0:= 0I;
  #L3e31c4.  call `c`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.c:(I)V` @kind direct;
  #L3e31ca.  @monitorexit v1
  #L3e31cc.  return @kind void;
  #L3e31ce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e31d0.  @monitorexit v1
  #L3e31d2.  throw v0;
  catch `java.lang.Throwable` @[L3e31c4..L3e31ca] goto L3e31ce;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v2 @kind this, `int` v3 , `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2f48.  @monitorenter v2
  #L3e2f4a.  call temp:= `h`(v2, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.h:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L3e2f50.  v0:= temp @kind object;
  #L3e2f52.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e2f58.  v1:= temp @kind object;
  #L3e2f5a.  call temp:= `ceilingKey`(v0, v1) @signature `Ljava/util/NavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e2f60.  v0:= temp @kind object;
  #L3e2f62.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3e2f66.  call temp:= `k`(v2, v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.k:(ILjava/lang/Integer;)Z` @kind direct;
  #L3e2f6c.  v1:= temp;
  #L3e2f6e.  if v1 == 0 then goto L3e2f88;
  #L3e2f72.  v3:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` @kind object;
  #L3e2f76.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e2f7c.  v0:= temp;
  #L3e2f7e.  call temp:= `e`(v3, v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;` @kind virtual;
  #L3e2f84.  v3:= temp @kind object;
  #L3e2f86.  goto L3e2f94;
  #L3e2f88.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` @kind object;
  #L3e2f8c.  call temp:= `e`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;` @kind virtual;
  #L3e2f92.  v3:= temp @kind object;
  #L3e2f94.  call temp:= `g`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L3e2f9a.  v3:= temp @kind object;
  #L3e2f9c.  @monitorexit v2
  #L3e2f9e.  return v3 @kind object;
  #L3e2fa0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e2fa2.  @monitorexit v2
  #L3e2fa4.  throw v3;
  catch `java.lang.Throwable` @[L3e2f4a..L3e2f9c] goto L3e2fa0;
}
procedure `java.lang.Object` `getExact`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `int` v2 , `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.getExact:(ILjava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2fe4.  @monitorenter v1
  #L3e2fe6.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` @kind object;
  #L3e2fea.  call temp:= `e`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;` @kind virtual;
  #L3e2ff0.  v2:= temp @kind object;
  #L3e2ff2.  call temp:= `g`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L3e2ff8.  v2:= temp @kind object;
  #L3e2ffa.  @monitorexit v1
  #L3e2ffc.  return v2 @kind object;
  #L3e2ffe.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e3000.  @monitorexit v1
  #L3e3002.  throw v2;
  catch `java.lang.Throwable` @[L3e2fe6..L3e2ffa] goto L3e2ffe;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.put:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e3374.  @monitorenter v4
  #L3e3376.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e337c.  v0:= temp @kind object;
  #L3e337e.  call temp:= `e`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.e:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L3e3384.  v1:= temp @kind object;
  #L3e3386.  call temp:= `getArrayLength`(v1, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3e338c.  v2:= temp;
  #L3e338e.  call temp:= `getElementSizeInBytes`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getElementSizeInBytes:()I` @kind interface;
  #L3e3394.  v1:= temp;
  #L3e3396.  v1:= v1 * v2 @kind int;
  #L3e339a.  call temp:= `j`(v4, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.j:(I)Z` @kind direct;
  #L3e33a0.  v3:= temp;
  #L3e33a2.  if v3 != 0 then goto L3e33aa;
  #L3e33a6.  @monitorexit v4
  #L3e33a8.  return @kind void;
  #L3e33aa.  v3:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` @kind object;
  #L3e33ae.  call temp:= `e`(v3, v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;` @kind virtual;
  #L3e33b4.  v2:= temp @kind object;
  #L3e33b6.  v3:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c` @kind object;
  #L3e33ba.  call `d`(v3, v2, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.d:(Lcom/bumptech/glide/load/engine/bitmap_recycle/e;Ljava/lang/Object;)V` @kind virtual;
  #L3e33c0.  call temp:= `h`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.h:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L3e33c6.  v5:= temp @kind object;
  #L3e33c8.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3e33cc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e33d2.  v0:= temp @kind object;
  #L3e33d4.  call temp:= `get`(v5, v0) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e33da.  v0:= temp @kind object;
  #L3e33dc.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3e33e0.  v2:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3e33e4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e33ea.  v2:= temp @kind object;
  #L3e33ec.  v3:= 1I;
  #L3e33ee.  if v0 != 0 then goto L3e33f4;
  #L3e33f2.  goto L3e33fe;
  #L3e33f4.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e33fa.  v0:= temp;
  #L3e33fc.  v3:= v3 + v0 @kind int;
  #L3e33fe.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e3404.  v0:= temp @kind object;
  #L3e3406.  call temp:= `put`(v5, v2, v0) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e340c.  v5:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int`;
  #L3e3410.  v5:= v5 + v1 @kind int;
  #L3e3412.  v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int` := v5;
  #L3e3416.  call `b`(v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.b:()V` @kind direct;
  #L3e341c.  @monitorexit v4
  #L3e341e.  return @kind void;
  #L3e3420.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e3422.  @monitorexit v4
  #L3e3424.  throw v5;
  catch `java.lang.Throwable` @[L3e3376..L3e33a2] goto L3e3420;
  catch `java.lang.Throwable` @[L3e33aa..L3e341c] goto L3e3420;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.put:(Ljava/lang/Object;Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L3e344c.  call `put`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.put:(Ljava/lang/Object;)V` @kind virtual;
  #L3e3452.  return @kind void;
}
procedure `void` `trimMemory`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.trimMemory:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e3464.  @monitorenter v1
  #L3e3466.  v0:= 40I;
  #L3e346a.  if v2 < v0 then goto L3e347a;
  #L3e346e.  call `clearMemory`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.clearMemory:()V` @kind virtual;
  #L3e3474.  goto L3e3498;
  #L3e3476.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e3478.  goto L3e349c;
  #L3e347a.  v0:= 20I;
  #L3e347e.  if v2 >= v0 then goto L3e348a;
  #L3e3482.  v0:= 15I;
  #L3e3486.  if v2 != v0 then goto L3e3498;
  #L3e348a.  v2:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int`;
  #L3e348e.  v2:= v2 / 2;
  #L3e3492.  call `c`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.c:(I)V` @kind direct;
  #L3e3498.  @monitorexit v1
  #L3e349a.  return @kind void;
  #L3e349c.  @monitorexit v1
  #L3e349e.  throw v2;
  catch `java.lang.Throwable` @[L3e346e..L3e3498] goto L3e3476;
}
