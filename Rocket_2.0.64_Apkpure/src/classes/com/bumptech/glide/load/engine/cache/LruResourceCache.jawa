record `com.bumptech.glide.load.engine.cache.LruResourceCache` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.util.LruCache` @kind class, `com.bumptech.glide.load.engine.cache.MemoryCache` @kind interface {
  `com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` `com.bumptech.glide.load.engine.cache.LruResourceCache.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `long` v1 ) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e512c.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/util/LruCache;.<init>:(J)V` @kind direct;
  #L3e5132.  return @kind void;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.engine.Resource` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.getSize:(Lcom/bumptech/glide/load/engine/Resource;)I` @AccessFlag PROTECTED {
    temp;

  #L3e50e0.  if v1 != 0 then goto L3e50f0;
  #L3e50e4.  v1:= 0I;
  #L3e50e6.  call temp:= `getSize`(v0, v1) @signature `Lcom/bumptech/glide/util/LruCache;.getSize:(Ljava/lang/Object;)I` @kind super;
  #L3e50ec.  v1:= temp;
  #L3e50ee.  return v1;
  #L3e50f0.  call temp:= `getSize`(v1) @signature `Lcom/bumptech/glide/load/engine/Resource;.getSize:()I` @kind interface;
  #L3e50f6.  v1:= temp;
  #L3e50f8.  return v1;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.getSize:(Ljava/lang/Object;)I` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3e510c.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3e5110.  call temp:= `getSize`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.getSize:(Lcom/bumptech/glide/load/engine/Resource;)I` @kind virtual;
  #L3e5116.  v1:= temp;
  #L3e5118.  return v1;
}
procedure `void` `onItemEvicted`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.onItemEvicted:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)V` @AccessFlag PROTECTED {
    temp;

  #L3e5144.  v1:= v0.`com.bumptech.glide.load.engine.cache.LruResourceCache.e` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` @kind object;
  #L3e5148.  if v1 == 0 then goto L3e5156;
  #L3e514c.  if v2 == 0 then goto L3e5156;
  #L3e5150.  call `onResourceRemoved`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener;.onResourceRemoved:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind interface;
  #L3e5156.  return @kind void;
}
procedure `void` `onItemEvicted`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.onItemEvicted:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3e5168.  v1:= (`com.bumptech.glide.load.Key`) v1 @kind object;
  #L3e516c.  v2:= (`com.bumptech.glide.load.engine.Resource`) v2 @kind object;
  #L3e5170.  call `onItemEvicted`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.onItemEvicted:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L3e5176.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `put`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e50a0.  call temp:= `put`(v0, v1, v2) @signature `Lcom/bumptech/glide/util/LruCache;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L3e50a6.  v1:= temp @kind object;
  #L3e50a8.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3e50ac.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `remove`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.remove:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e50c0.  call temp:= `remove`(v0, v1) @signature `Lcom/bumptech/glide/util/LruCache;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L3e50c6.  v1:= temp @kind object;
  #L3e50c8.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3e50cc.  return v1 @kind object;
}
procedure `void` `setResourceRemovedListener`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.setResourceRemovedListener:(Lcom/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener;)V` @AccessFlag PUBLIC {
    temp;

  #L3e5188.  v0.`com.bumptech.glide.load.engine.cache.LruResourceCache.e` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` := v1 @kind object;
  #L3e518c.  return @kind void;
}
procedure `void` `trimMemory`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v4 @kind this, `int` v5 ) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.trimMemory:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e51a0.  v0:= 40I;
  #L3e51a4.  if v5 < v0 then goto L3e51b0;
  #L3e51a8.  call `clearMemory`(v4) @signature `Lcom/bumptech/glide/util/LruCache;.clearMemory:()V` @kind virtual;
  #L3e51ae.  goto L3e51d4;
  #L3e51b0.  v0:= 20I;
  #L3e51b4.  if v5 >= v0 then goto L3e51c0;
  #L3e51b8.  v0:= 15I;
  #L3e51bc.  if v5 != v0 then goto L3e51d4;
  #L3e51c0.  call temp:= `getMaxSize`(v4) @signature `Lcom/bumptech/glide/util/LruCache;.getMaxSize:()J` @kind virtual;
  #L3e51c6.  v0:= temp @kind wide;
  #L3e51c8.  v2:= 2L;
  #L3e51cc.  v0:= v0 / v2 @kind long;
  #L3e51ce.  call `trimToSize`(v4, v0) @signature `Lcom/bumptech/glide/util/LruCache;.trimToSize:(J)V` @kind virtual;
  #L3e51d4.  return @kind void;
}
