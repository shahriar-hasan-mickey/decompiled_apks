record `com.bumptech.glide.load.engine.executor.GlideExecutor` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.ExecutorService` @kind interface {
  `java.util.concurrent.ExecutorService` `com.bumptech.glide.load.engine.executor.GlideExecutor.a` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.bumptech.glide.load.engine.executor.GlideExecutor.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.bumptech.glide.load.engine.executor.GlideExecutor.c` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3e619c.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e61a0.  v1:= 10L;
  #L3e61a4.  call temp:= `toMillis`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3e61aa.  v0:= temp @kind wide;
  #L3e61ac.  `@@com.bumptech.glide.load.engine.executor.GlideExecutor.b` @type ^`long` := v0 @kind wide;
  #L3e61b0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v0 @kind this, `java.util.concurrent.ExecutorService` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e61c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e61ca.  v0.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` := v1 @kind object;
  #L3e61ce.  return @kind void;
}
procedure `int` `calculateBestThreadCount`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.calculateBestThreadCount:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e6048.  v0:= `@@com.bumptech.glide.load.engine.executor.GlideExecutor.c` @type ^`int`;
  #L3e604c.  if v0 != 0 then goto L3e6066;
  #L3e6050.  v0:= 4I;
  #L3e6052.  call temp:= `a`() @signature `Lcom/bumptech/glide/load/engine/executor/a;.a:()I` @kind static;
  #L3e6058.  v1:= temp;
  #L3e605a.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3e6060.  v0:= temp;
  #L3e6062.  `@@com.bumptech.glide.load.engine.executor.GlideExecutor.c` @type ^`int` := v0;
  #L3e6066.  v0:= `@@com.bumptech.glide.load.engine.executor.GlideExecutor.c` @type ^`int`;
  #L3e606a.  return v0;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` `newAnimationBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newAnimationBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e5f90.  call temp:= `calculateBestThreadCount`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.calculateBestThreadCount:()I` @kind static;
  #L3e5f96.  v0:= temp;
  #L3e5f98.  v1:= 1I;
  #L3e5f9a.  v2:= 4I;
  #L3e5f9c.  if v0 < v2 then goto L3e5fa4;
  #L3e5fa0.  v0:= 2I;
  #L3e5fa2.  goto L3e5fa6;
  #L3e5fa4.  v0:= 1I;
  #L3e5fa6.  v2:= new `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder`;
  #L3e5faa.  call `<init>`(v2, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.<init>:(Z)V` @kind direct;
  #L3e5fb0.  call temp:= `setThreadCount`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setThreadCount:(I)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5fb6.  v0:= temp @kind object;
  #L3e5fb8.  v1:= "animation" @kind object;
  #L3e5fbc.  call temp:= `setName`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setName:(Ljava/lang/String;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5fc2.  v0:= temp @kind object;
  #L3e5fc4.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor` `newAnimationExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newAnimationExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5dbc.  call temp:= `newAnimationBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newAnimationBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind static;
  #L3e5dc2.  v0:= temp @kind object;
  #L3e5dc4.  call temp:= `build`(v0) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.build:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind virtual;
  #L3e5dca.  v0:= temp @kind object;
  #L3e5dcc.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor` `newAnimationExecutor`(`int` v1 , `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newAnimationExecutor:(ILcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5de0.  call temp:= `newAnimationBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newAnimationBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind static;
  #L3e5de6.  v0:= temp @kind object;
  #L3e5de8.  call temp:= `setThreadCount`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setThreadCount:(I)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5dee.  v1:= temp @kind object;
  #L3e5df0.  call temp:= `setUncaughtThrowableStrategy`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setUncaughtThrowableStrategy:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5df6.  v1:= temp @kind object;
  #L3e5df8.  call temp:= `build`(v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.build:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind virtual;
  #L3e5dfe.  v1:= temp @kind object;
  #L3e5e00.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` `newDiskCacheBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newDiskCacheBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e5fd8.  v0:= new `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder`;
  #L3e5fdc.  v1:= 1I;
  #L3e5fde.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.<init>:(Z)V` @kind direct;
  #L3e5fe4.  call temp:= `setThreadCount`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setThreadCount:(I)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5fea.  v0:= temp @kind object;
  #L3e5fec.  v1:= "disk-cache" @kind object;
  #L3e5ff0.  call temp:= `setName`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setName:(Ljava/lang/String;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5ff6.  v0:= temp @kind object;
  #L3e5ff8.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor` `newDiskCacheExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newDiskCacheExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5e14.  call temp:= `newDiskCacheBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newDiskCacheBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind static;
  #L3e5e1a.  v0:= temp @kind object;
  #L3e5e1c.  call temp:= `build`(v0) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.build:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind virtual;
  #L3e5e22.  v0:= temp @kind object;
  #L3e5e24.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor` `newDiskCacheExecutor`(`int` v1 , `java.lang.String` v2 @kind object, `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newDiskCacheExecutor:(ILjava/lang/String;Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5e64.  call temp:= `newDiskCacheBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newDiskCacheBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind static;
  #L3e5e6a.  v0:= temp @kind object;
  #L3e5e6c.  call temp:= `setThreadCount`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setThreadCount:(I)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5e72.  v1:= temp @kind object;
  #L3e5e74.  call temp:= `setName`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setName:(Ljava/lang/String;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5e7a.  v1:= temp @kind object;
  #L3e5e7c.  call temp:= `setUncaughtThrowableStrategy`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setUncaughtThrowableStrategy:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5e82.  v1:= temp @kind object;
  #L3e5e84.  call temp:= `build`(v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.build:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind virtual;
  #L3e5e8a.  v1:= temp @kind object;
  #L3e5e8c.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor` `newDiskCacheExecutor`(`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newDiskCacheExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5e38.  call temp:= `newDiskCacheBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newDiskCacheBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind static;
  #L3e5e3e.  v0:= temp @kind object;
  #L3e5e40.  call temp:= `setUncaughtThrowableStrategy`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setUncaughtThrowableStrategy:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5e46.  v1:= temp @kind object;
  #L3e5e48.  call temp:= `build`(v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.build:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind virtual;
  #L3e5e4e.  v1:= temp @kind object;
  #L3e5e50.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` `newSourceBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newSourceBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e600c.  v0:= new `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder`;
  #L3e6010.  v1:= 0I;
  #L3e6012.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.<init>:(Z)V` @kind direct;
  #L3e6018.  call temp:= `calculateBestThreadCount`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.calculateBestThreadCount:()I` @kind static;
  #L3e601e.  v1:= temp;
  #L3e6020.  call temp:= `setThreadCount`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setThreadCount:(I)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e6026.  v0:= temp @kind object;
  #L3e6028.  v1:= "source" @kind object;
  #L3e602c.  call temp:= `setName`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setName:(Ljava/lang/String;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e6032.  v0:= temp @kind object;
  #L3e6034.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor` `newSourceExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newSourceExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5ea0.  call temp:= `newSourceBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newSourceBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind static;
  #L3e5ea6.  v0:= temp @kind object;
  #L3e5ea8.  call temp:= `build`(v0) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.build:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind virtual;
  #L3e5eae.  v0:= temp @kind object;
  #L3e5eb0.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor` `newSourceExecutor`(`int` v1 , `java.lang.String` v2 @kind object, `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newSourceExecutor:(ILjava/lang/String;Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5ef0.  call temp:= `newSourceBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newSourceBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind static;
  #L3e5ef6.  v0:= temp @kind object;
  #L3e5ef8.  call temp:= `setThreadCount`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setThreadCount:(I)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5efe.  v1:= temp @kind object;
  #L3e5f00.  call temp:= `setName`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setName:(Ljava/lang/String;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5f06.  v1:= temp @kind object;
  #L3e5f08.  call temp:= `setUncaughtThrowableStrategy`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setUncaughtThrowableStrategy:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5f0e.  v1:= temp @kind object;
  #L3e5f10.  call temp:= `build`(v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.build:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind virtual;
  #L3e5f16.  v1:= temp @kind object;
  #L3e5f18.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor` `newSourceExecutor`(`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newSourceExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5ec4.  call temp:= `newSourceBuilder`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newSourceBuilder:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind static;
  #L3e5eca.  v0:= temp @kind object;
  #L3e5ecc.  call temp:= `setUncaughtThrowableStrategy`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setUncaughtThrowableStrategy:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @kind virtual;
  #L3e5ed2.  v1:= temp @kind object;
  #L3e5ed4.  call temp:= `build`(v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.build:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind virtual;
  #L3e5eda.  v1:= temp @kind object;
  #L3e5edc.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor` `newUnlimitedSourceExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newUnlimitedSourceExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3e5f2c.  v0:= new `com.bumptech.glide.load.engine.executor.GlideExecutor`;
  #L3e5f30.  v9:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L3e5f34.  v4:= `@@com.bumptech.glide.load.engine.executor.GlideExecutor.b` @type ^`long` @kind wide;
  #L3e5f38.  v6:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e5f3c.  v7:= new `java.util.concurrent.SynchronousQueue`;
  #L3e5f40.  call `<init>`(v7) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L3e5f46.  v8:= new `com.bumptech.glide.load.engine.executor.GlideExecutor$c`;
  #L3e5f4a.  v1:= new `com.bumptech.glide.load.engine.executor.GlideExecutor$b`;
  #L3e5f4e.  v2:= 0I;
  #L3e5f50.  call `<init>`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$b;.<init>:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$a;)V` @kind direct;
  #L3e5f56.  v2:= `@@com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy.DEFAULT` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` @kind object;
  #L3e5f5a.  v3:= "source-unlimited" @kind object;
  #L3e5f5e.  v10:= 0I;
  #L3e5f60.  call `<init>`(v8, v1, v3, v2, v10) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$c;.<init>:(Ljava/util/concurrent/ThreadFactory;Ljava/lang/String;Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;Z)V` @kind direct;
  #L3e5f66.  v2:= 0I;
  #L3e5f68.  v3:= 2147483647I;
  #L3e5f6e.  v1:= v9 @kind object;
  #L3e5f70.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3e5f76.  call `<init>`(v0, v9) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L3e5f7c.  return v0 @kind object;
}
procedure `boolean` `awaitTermination`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5d5c.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e5d60.  call temp:= `awaitTermination`(v0, v2, v4) @signature `Ljava/util/concurrent/ExecutorService;.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z` @kind interface;
  #L3e5d66.  v2:= temp;
  #L3e5d68.  return v2;
}
procedure `void` `execute`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e61e0.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e61e4.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3e61ea.  return @kind void;
}
procedure `java.util.List` `invokeAll`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.invokeAll:(Ljava/util/Collection;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e60dc.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e60e0.  call temp:= `invokeAll`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.invokeAll:(Ljava/util/Collection;)Ljava/util/List;` @kind interface;
  #L3e60e6.  v2:= temp @kind object;
  #L3e60e8.  return v2 @kind object;
}
procedure `java.util.List` `invokeAll`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this, `java.util.Collection` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e60fc.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e6100.  call temp:= `invokeAll`(v0, v2, v3, v5) @signature `Ljava/util/concurrent/ExecutorService;.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;` @kind interface;
  #L3e6106.  v2:= temp @kind object;
  #L3e6108.  return v2 @kind object;
}
procedure `java.lang.Object` `invokeAny`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e607c.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e6080.  call temp:= `invokeAny`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;` @kind interface;
  #L3e6086.  v2:= temp @kind object;
  #L3e6088.  return v2 @kind object;
}
procedure `java.lang.Object` `invokeAny`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this, `java.util.Collection` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e609c.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e60a0.  call temp:= `invokeAny`(v0, v2, v3, v5) @signature `Ljava/util/concurrent/ExecutorService;.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @kind interface;
  #L3e60a6.  v2:= temp @kind object;
  #L3e60a8.  return v2 @kind object;
}
procedure `boolean` `isShutdown`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.isShutdown:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5d7c.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e5d80.  call temp:= `isShutdown`(v0) @signature `Ljava/util/concurrent/ExecutorService;.isShutdown:()Z` @kind interface;
  #L3e5d86.  v0:= temp;
  #L3e5d88.  return v0;
}
procedure `boolean` `isTerminated`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.isTerminated:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5d9c.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e5da0.  call temp:= `isTerminated`(v0) @signature `Ljava/util/concurrent/ExecutorService;.isTerminated:()Z` @kind interface;
  #L3e5da6.  v0:= temp;
  #L3e5da8.  return v0;
}
procedure `void` `shutdown`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e61fc.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e6200.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ExecutorService;.shutdown:()V` @kind interface;
  #L3e6206.  return @kind void;
}
procedure `java.util.List` `shutdownNow`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.shutdownNow:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e611c.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e6120.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L3e6126.  v0:= temp @kind object;
  #L3e6128.  return v0 @kind object;
}
procedure `java.util.concurrent.Future` `submit`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e613c.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e6140.  call temp:= `submit`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;` @kind interface;
  #L3e6146.  v2:= temp @kind object;
  #L3e6148.  return v2 @kind object;
}
procedure `java.util.concurrent.Future` `submit`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this, `java.lang.Runnable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e615c.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e6160.  call temp:= `submit`(v0, v2, v3) @signature `Ljava/util/concurrent/ExecutorService;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;` @kind interface;
  #L3e6166.  v2:= temp @kind object;
  #L3e6168.  return v2 @kind object;
}
procedure `java.util.concurrent.Future` `submit`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e617c.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e6180.  call temp:= `submit`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L3e6186.  v2:= temp @kind object;
  #L3e6188.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e60bc.  v0:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e60c0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e60c6.  v0:= temp @kind object;
  #L3e60c8.  return v0 @kind object;
}
