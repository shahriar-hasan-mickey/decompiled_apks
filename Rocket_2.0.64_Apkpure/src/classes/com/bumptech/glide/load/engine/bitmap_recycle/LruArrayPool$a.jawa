record `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.bitmap_recycle.e` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @AccessFlag ;
  `java.lang.Class` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e2da4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e2daa.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` := v1 @kind object;
  #L3e2dae.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2ddc.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` @kind object;
  #L3e2de0.  call `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/e;)V` @kind virtual;
  #L3e2de6.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v0 @kind this, `int` v1 , `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.b:(ILjava/lang/Class;)V` @AccessFlag  {
    temp;

  #L3e2dc0.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int` := v1;
  #L3e2dc4.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @type ^`java.lang.Class` := v2 @kind object;
  #L3e2dc8.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e2ce0.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` @kind boolean;
  #L3e2ce4.  v1:= 0I;
  #L3e2ce6.  if v0 == 0 then goto L3e2d08;
  #L3e2cea.  v4:= (`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a`) v4 @kind object;
  #L3e2cee.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3e2cf2.  v2:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3e2cf6.  if v0 != v2 then goto L3e2d08;
  #L3e2cfa.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @type ^`java.lang.Class` @kind object;
  #L3e2cfe.  v4:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @type ^`java.lang.Class` @kind object;
  #L3e2d02.  if v0 != v4 then goto L3e2d08;
  #L3e2d06.  v1:= 1I;
  #L3e2d08.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2d1c.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3e2d20.  v0:= v0 * 31;
  #L3e2d24.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @type ^`java.lang.Class` @kind object;
  #L3e2d28.  if v1 == 0 then goto L3e2d36;
  #L3e2d2c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3e2d32.  v1:= temp;
  #L3e2d34.  goto L3e2d38;
  #L3e2d36.  v1:= 0I;
  #L3e2d38.  v0:= v0 + v1 @kind int;
  #L3e2d3a.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2d4c.  v0:= new `java.lang.StringBuilder`;
  #L3e2d50.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e2d56.  v1:= "Key{size=" @kind object;
  #L3e2d5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2d60.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3e2d64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2d6a.  v1:= "array=" @kind object;
  #L3e2d6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2d74.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @type ^`java.lang.Class` @kind object;
  #L3e2d78.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2d7e.  v1:= 125I;
  #L3e2d82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2d88.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2d8e.  v0:= temp @kind object;
  #L3e2d90.  return v0 @kind object;
}
