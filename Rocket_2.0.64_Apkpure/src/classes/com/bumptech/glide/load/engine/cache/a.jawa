record `com.bumptech.glide.load.engine.cache.a` @kind class @AccessFlag FINAL {
  `java.util.Map` `com.bumptech.glide.load.engine.cache.a.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.cache.a$b` `com.bumptech.glide.load.engine.cache.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e46d4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e46da.  v0:= new `java.util.HashMap`;
  #L3e46de.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e46e4.  v1.`com.bumptech.glide.load.engine.cache.a.a` @type ^`java.util.Map` := v0 @kind object;
  #L3e46e8.  v0:= new `com.bumptech.glide.load.engine.cache.a$b`;
  #L3e46ec.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/a$b;.<init>:()V` @kind direct;
  #L3e46f2.  v1.`com.bumptech.glide.load.engine.cache.a.b` @type ^`com.bumptech.glide.load.engine.cache.a$b` := v0 @kind object;
  #L3e46f6.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.cache.a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/a;.a:(Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e4708.  @monitorenter v2
  #L3e470a.  v0:= v2.`com.bumptech.glide.load.engine.cache.a.a` @type ^`java.util.Map` @kind object;
  #L3e470e.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e4714.  v0:= temp @kind object;
  #L3e4716.  v0:= (`com.bumptech.glide.load.engine.cache.a$a`) v0 @kind object;
  #L3e471a.  if v0 != 0 then goto L3e4734;
  #L3e471e.  v0:= v2.`com.bumptech.glide.load.engine.cache.a.b` @type ^`com.bumptech.glide.load.engine.cache.a$b` @kind object;
  #L3e4722.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/a$b;.a:()Lcom/bumptech/glide/load/engine/cache/a$a;` @kind virtual;
  #L3e4728.  v0:= temp @kind object;
  #L3e472a.  v1:= v2.`com.bumptech.glide.load.engine.cache.a.a` @type ^`java.util.Map` @kind object;
  #L3e472e.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e4734.  v3:= v0.`com.bumptech.glide.load.engine.cache.a$a.b` @type ^`int`;
  #L3e4738.  v3:= v3 + 1;
  #L3e473c.  v0.`com.bumptech.glide.load.engine.cache.a$a.b` @type ^`int` := v3;
  #L3e4740.  @monitorexit v2
  #L3e4742.  v3:= v0.`com.bumptech.glide.load.engine.cache.a$a.a` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e4746.  call `lock`(v3) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L3e474c.  return @kind void;
  #L3e474e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e4750.  @monitorexit v2
  #L3e4752.  throw v3;
  catch `java.lang.Throwable` @[L3e470a..L3e4742] goto L3e474e;
  catch `java.lang.Throwable` @[L3e4750..L3e4752] goto L3e474e;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.cache.a` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/a;.b:(Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e4778.  @monitorenter v5
  #L3e477a.  v0:= v5.`com.bumptech.glide.load.engine.cache.a.a` @type ^`java.util.Map` @kind object;
  #L3e477e.  call temp:= `get`(v0, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e4784.  v0:= temp @kind object;
  #L3e4786.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e478c.  v0:= temp @kind object;
  #L3e478e.  v0:= (`com.bumptech.glide.load.engine.cache.a$a`) v0 @kind object;
  #L3e4792.  v1:= v0.`com.bumptech.glide.load.engine.cache.a$a.b` @type ^`int`;
  #L3e4796.  v2:= 1I;
  #L3e4798.  if v1 < v2 then goto L3e482a;
  #L3e479c.  v1:= v1 - v2 @kind int;
  #L3e479e.  v0.`com.bumptech.glide.load.engine.cache.a$a.b` @type ^`int` := v1;
  #L3e47a2.  if v1 != 0 then goto L3e481c;
  #L3e47a6.  v1:= v5.`com.bumptech.glide.load.engine.cache.a.a` @type ^`java.util.Map` @kind object;
  #L3e47aa.  call temp:= `remove`(v1, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e47b0.  v1:= temp @kind object;
  #L3e47b2.  v1:= (`com.bumptech.glide.load.engine.cache.a$a`) v1 @kind object;
  #L3e47b6.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e47bc.  v2:= temp;
  #L3e47be.  if v2 == 0 then goto L3e47ce;
  #L3e47c2.  v6:= v5.`com.bumptech.glide.load.engine.cache.a.b` @type ^`com.bumptech.glide.load.engine.cache.a$b` @kind object;
  #L3e47c6.  call `b`(v6, v1) @signature `Lcom/bumptech/glide/load/engine/cache/a$b;.b:(Lcom/bumptech/glide/load/engine/cache/a$a;)V` @kind virtual;
  #L3e47cc.  goto L3e481c;
  #L3e47ce.  v2:= new `java.lang.IllegalStateException`;
  #L3e47d2.  v3:= new `java.lang.StringBuilder`;
  #L3e47d6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e47dc.  v4:= "Removed the wrong lock, expected to remove: " @kind object;
  #L3e47e0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e47e6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e47ec.  v0:= ", but actually removed: " @kind object;
  #L3e47f0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e47f6.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e47fc.  v0:= ", safeKey: " @kind object;
  #L3e4800.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4806.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e480c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e4812.  v6:= temp @kind object;
  #L3e4814.  call `<init>`(v2, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e481a.  throw v2;
  #L3e481c.  @monitorexit v5
  #L3e481e.  v6:= v0.`com.bumptech.glide.load.engine.cache.a$a.a` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e4822.  call `unlock`(v6) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3e4828.  return @kind void;
  #L3e482a.  v1:= new `java.lang.IllegalStateException`;
  #L3e482e.  v2:= new `java.lang.StringBuilder`;
  #L3e4832.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e4838.  v3:= "Cannot release a lock that is not held, safeKey: " @kind object;
  #L3e483c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4842.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4848.  v6:= ", interestedThreads: " @kind object;
  #L3e484c.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4852.  v6:= v0.`com.bumptech.glide.load.engine.cache.a$a.b` @type ^`int`;
  #L3e4856.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e485c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e4862.  v6:= temp @kind object;
  #L3e4864.  call `<init>`(v1, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e486a.  throw v1;
  #L3e486c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e486e.  @monitorexit v5
  #L3e4870.  throw v6;
  catch `java.lang.Throwable` @[L3e477a..L3e481e] goto L3e486c;
  catch `java.lang.Throwable` @[L3e482a..L3e4870] goto L3e486c;
}
