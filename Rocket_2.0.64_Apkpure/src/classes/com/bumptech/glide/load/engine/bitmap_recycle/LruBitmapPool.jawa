record `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.d` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.b` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$a` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.d` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.g` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.h` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.i` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.j` @AccessFlag PRIVATE;
}
global `android.graphics.Bitmap$Config` `@@com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e3788.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e378c.  `@@com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.k` @type ^`android.graphics.Bitmap$Config` := v0 @kind object;
  #L3e3790.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this, `long` v3 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e37a4.  call temp:= `g`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.g:()Lcom/bumptech/glide/load/engine/bitmap_recycle/d;` @kind static;
  #L3e37aa.  v0:= temp @kind object;
  #L3e37ac.  call temp:= `f`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.f:()Ljava/util/Set;` @kind static;
  #L3e37b2.  v1:= temp @kind object;
  #L3e37b4.  call `<init>`(v2, v3, v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(JLcom/bumptech/glide/load/engine/bitmap_recycle/d;Ljava/util/Set;)V` @kind direct;
  #L3e37ba.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v0 @kind this, `long` v1 , `com.bumptech.glide.load.engine.bitmap_recycle.d` v3 @kind object, `java.util.Set` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(JLcom/bumptech/glide/load/engine/bitmap_recycle/d;Ljava/util/Set;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e37cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e37d2.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.c` @type ^`long` := v1 @kind wide;
  #L3e37d6.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` := v1 @kind wide;
  #L3e37da.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` := v3 @kind object;
  #L3e37de.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.b` @type ^`java.util.Set` := v4 @kind object;
  #L3e37e2.  v1:= new `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$b`;
  #L3e37e6.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool$b;.<init>:()V` @kind direct;
  #L3e37ec.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$a` := v1 @kind object;
  #L3e37f0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v1 @kind this, `long` v2 , `java.util.Set` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(JLjava/util/Set;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e3804.  call temp:= `g`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.g:()Lcom/bumptech/glide/load/engine/bitmap_recycle/d;` @kind static;
  #L3e380a.  v0:= temp @kind object;
  #L3e380c.  call `<init>`(v1, v2, v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(JLcom/bumptech/glide/load/engine/bitmap_recycle/d;Ljava/util/Set;)V` @kind direct;
  #L3e3812.  return @kind void;
}
procedure `void` `a`(`android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.a:(Landroid/graphics/Bitmap$Config;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e3824.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3e3828.  v1:= 26I;
  #L3e382c.  if v0 >= v1 then goto L3e3832;
  #L3e3830.  return @kind void;
  #L3e3832.  v0:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e3836.  if v3 == v0 then goto L3e383c;
  #L3e383a.  return @kind void;
  #L3e383c.  v0:= new `java.lang.IllegalArgumentException`;
  #L3e3840.  v1:= new `java.lang.StringBuilder`;
  #L3e3844.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e384a.  v2:= "Cannot create a mutable Bitmap with config: " @kind object;
  #L3e384e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3854.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e385a.  v3:= ". Consider setting Downsampler#ALLOW_HARDWARE_CONFIG to false in your RequestOptions and/or in GlideBuilder.setDefaultRequestOptions" @kind object;
  #L3e385e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3864.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e386a.  v3:= temp @kind object;
  #L3e386c.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e3872.  throw v0;
}
procedure `android.graphics.Bitmap` `b`(`int` v0 , `int` v1 , `android.graphics.Bitmap$Config` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.b:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3e34fc.  if v2 == 0 then goto L3e3502;
  #L3e3500.  goto L3e3506;
  #L3e3502.  v2:= `@@com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.k` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e3506.  call temp:= `createBitmap`(v0, v1, v2) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3e350c.  v0:= temp @kind object;
  #L3e350e.  return v0 @kind object;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e38bc.  v0:= "LruBitmapPool" @kind object;
  #L3e38c0.  v1:= 2I;
  #L3e38c2.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e38c8.  v0:= temp;
  #L3e38ca.  if v0 == 0 then goto L3e38d4;
  #L3e38ce.  call `d`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.d:()V` @kind direct;
  #L3e38d4.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e38e8.  v0:= new `java.lang.StringBuilder`;
  #L3e38ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e38f2.  v1:= "Hits=" @kind object;
  #L3e38f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e38fc.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.g` @type ^`int`;
  #L3e3900.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3906.  v1:= ", misses=" @kind object;
  #L3e390a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3910.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.h` @type ^`int`;
  #L3e3914.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e391a.  v1:= ", puts=" @kind object;
  #L3e391e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3924.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.i` @type ^`int`;
  #L3e3928.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e392e.  v1:= ", evictions=" @kind object;
  #L3e3932.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3938.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.j` @type ^`int`;
  #L3e393c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3942.  v1:= ", currentSize=" @kind object;
  #L3e3946.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e394c.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3e3950.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3956.  v1:= ", maxSize=" @kind object;
  #L3e395a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3960.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` @kind wide;
  #L3e3964.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e396a.  v1:= "\nStrategy=" @kind object;
  #L3e396e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3974.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3978.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e397e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e3984.  v0:= temp @kind object;
  #L3e3986.  v1:= "LruBitmapPool" @kind object;
  #L3e398a.  call temp:= `v`(v1, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e3990.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e39a4.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` @kind wide;
  #L3e39a8.  call `k`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.k:(J)V` @kind direct;
  #L3e39ae.  return @kind void;
}
procedure `java.util.Set` `f`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.f:()Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e36bc.  v0:= new `java.util.HashSet`;
  #L3e36c0.  call temp:= `values`() @signature `Landroid/graphics/Bitmap$Config;.values:()[Landroid/graphics/Bitmap$Config;` @kind static;
  #L3e36c6.  v1:= temp @kind object;
  #L3e36c8.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3e36ce.  v1:= temp @kind object;
  #L3e36d0.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3e36d6.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3e36da.  v2:= 0I;
  #L3e36dc.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e36e2.  v2:= 26I;
  #L3e36e6.  if v1 < v2 then goto L3e36f4;
  #L3e36ea.  v1:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e36ee.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e36f4.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L3e36fa.  v0:= temp @kind object;
  #L3e36fc.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.d` `g`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.g:()Lcom/bumptech/glide/load/engine/bitmap_recycle/d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e36a0.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy`;
  #L3e36a4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.<init>:()V` @kind direct;
  #L3e36aa.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `h`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v5 @kind this, `int` v6 , `int` v7 , `android.graphics.Bitmap$Config` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.h:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e3578.  @monitorenter v5
  #L3e357a.  call `a`(v8) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.a:(Landroid/graphics/Bitmap$Config;)V` @kind static;
  #L3e3580.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3584.  if v8 == 0 then goto L3e358c;
  #L3e3588.  v1:= v8 @kind object;
  #L3e358a.  goto L3e3590;
  #L3e358c.  v1:= `@@com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.k` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e3590.  call temp:= `get`(v0, v6, v7, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3e3596.  v0:= temp @kind object;
  #L3e3598.  if v0 != 0 then goto L3e35f4;
  #L3e359c.  v1:= "LruBitmapPool" @kind object;
  #L3e35a0.  v2:= 3I;
  #L3e35a2.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e35a8.  v1:= temp;
  #L3e35aa.  if v1 == 0 then goto L3e35e6;
  #L3e35ae.  v1:= "LruBitmapPool" @kind object;
  #L3e35b2.  v2:= new `java.lang.StringBuilder`;
  #L3e35b6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e35bc.  v3:= "Missing bitmap=" @kind object;
  #L3e35c0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e35c6.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e35ca.  call temp:= `logBitmap`(v3, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.logBitmap:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind interface;
  #L3e35d0.  v3:= temp @kind object;
  #L3e35d2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e35d8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e35de.  v2:= temp @kind object;
  #L3e35e0.  call temp:= `d`(v1, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e35e6.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.h` @type ^`int`;
  #L3e35ea.  v1:= v1 + 1;
  #L3e35ee.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.h` @type ^`int` := v1;
  #L3e35f2.  goto L3e3628;
  #L3e35f4.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.g` @type ^`int`;
  #L3e35f8.  v1:= v1 + 1;
  #L3e35fc.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.g` @type ^`int` := v1;
  #L3e3600.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3e3604.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3608.  call temp:= `getSize`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.getSize:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L3e360e.  v3:= temp;
  #L3e3610.  v3:= (`long`) v3 @kind i2l;
  #L3e3612.  v1:= v1 - v3 @kind long;
  #L3e3614.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` := v1 @kind wide;
  #L3e3618.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$a` @kind object;
  #L3e361c.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool$a;.a:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3e3622.  call `j`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.j:(Landroid/graphics/Bitmap;)V` @kind static;
  #L3e3628.  v1:= "LruBitmapPool" @kind object;
  #L3e362c.  v2:= 2I;
  #L3e362e.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e3634.  v1:= temp;
  #L3e3636.  if v1 == 0 then goto L3e3672;
  #L3e363a.  v1:= "LruBitmapPool" @kind object;
  #L3e363e.  v2:= new `java.lang.StringBuilder`;
  #L3e3642.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e3648.  v3:= "Get bitmap=" @kind object;
  #L3e364c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3652.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3656.  call temp:= `logBitmap`(v3, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.logBitmap:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind interface;
  #L3e365c.  v6:= temp @kind object;
  #L3e365e.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3664.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e366a.  v6:= temp @kind object;
  #L3e366c.  call temp:= `v`(v1, v6) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e3672.  call `c`(v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.c:()V` @kind direct;
  #L3e3678.  @monitorexit v5
  #L3e367a.  return v0 @kind object;
  #L3e367c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e367e.  @monitorexit v5
  #L3e3680.  throw v6;
  catch `java.lang.Throwable` @[L3e357a..L3e3678] goto L3e367c;
}
procedure `void` `i`(`android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.i:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e39c0.  v0:= 1I;
  #L3e39c2.  call `setPremultiplied`(v1, v0) @signature `Landroid/graphics/Bitmap;.setPremultiplied:(Z)V` @kind virtual;
  #L3e39c8.  return @kind void;
}
procedure `void` `j`(`android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.j:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e39dc.  v0:= 1I;
  #L3e39de.  call `setHasAlpha`(v1, v0) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3e39e4.  call `i`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.i:(Landroid/graphics/Bitmap;)V` @kind static;
  #L3e39ea.  return @kind void;
}
procedure `void` `k`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v5 @kind this, `long` v6 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.k:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e3ca0.  @monitorenter v5
  #L3e3ca2.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3e3ca6.  v2:= lcmp(v0, v6);
  #L3e3caa.  if v2 <= 0 then goto L3e3d76;
  #L3e3cae.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3cb2.  call temp:= `removeLast`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.removeLast:()Landroid/graphics/Bitmap;` @kind interface;
  #L3e3cb8.  v0:= temp @kind object;
  #L3e3cba.  if v0 != 0 then goto L3e3cf0;
  #L3e3cbe.  v6:= "LruBitmapPool" @kind object;
  #L3e3cc2.  v7:= 5I;
  #L3e3cc4.  call temp:= `isLoggable`(v6, v7) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e3cca.  v6:= temp;
  #L3e3ccc.  if v6 == 0 then goto L3e3ce4;
  #L3e3cd0.  v6:= "LruBitmapPool" @kind object;
  #L3e3cd4.  v7:= "Size mismatch, resetting" @kind object;
  #L3e3cd8.  call temp:= `w`(v6, v7) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e3cde.  call `d`(v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.d:()V` @kind direct;
  #L3e3ce4.  v6:= 0L;
  #L3e3ce8.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` := v6 @kind wide;
  #L3e3cec.  @monitorexit v5
  #L3e3cee.  return @kind void;
  #L3e3cf0.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$a` @kind object;
  #L3e3cf4.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool$a;.a:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3e3cfa.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3e3cfe.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3d02.  call temp:= `getSize`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.getSize:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L3e3d08.  v3:= temp;
  #L3e3d0a.  v3:= (`long`) v3 @kind i2l;
  #L3e3d0c.  v1:= v1 - v3 @kind long;
  #L3e3d0e.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` := v1 @kind wide;
  #L3e3d12.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.j` @type ^`int`;
  #L3e3d16.  v1:= v1 + 1;
  #L3e3d1a.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.j` @type ^`int` := v1;
  #L3e3d1e.  v1:= "LruBitmapPool" @kind object;
  #L3e3d22.  v2:= 3I;
  #L3e3d24.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e3d2a.  v1:= temp;
  #L3e3d2c.  if v1 == 0 then goto L3e3d68;
  #L3e3d30.  v1:= "LruBitmapPool" @kind object;
  #L3e3d34.  v2:= new `java.lang.StringBuilder`;
  #L3e3d38.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e3d3e.  v3:= "Evicting bitmap=" @kind object;
  #L3e3d42.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3d48.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3d4c.  call temp:= `logBitmap`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L3e3d52.  v3:= temp @kind object;
  #L3e3d54.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3d5a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e3d60.  v2:= temp @kind object;
  #L3e3d62.  call temp:= `d`(v1, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e3d68.  call `c`(v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.c:()V` @kind direct;
  #L3e3d6e.  call `recycle`(v0) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3e3d74.  goto L3e3ca2;
  #L3e3d76.  @monitorexit v5
  #L3e3d78.  return @kind void;
  #L3e3d7a.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e3d7c.  @monitorexit v5
  #L3e3d7e.  throw v6;
  catch `java.lang.Throwable` @[L3e3ca2..L3e3cec] goto L3e3d7a;
  catch `java.lang.Throwable` @[L3e3cf0..L3e3d74] goto L3e3d7a;
}
procedure `void` `clearMemory`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.clearMemory:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e3884.  v0:= "LruBitmapPool" @kind object;
  #L3e3888.  v1:= 3I;
  #L3e388a.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e3890.  v1:= temp;
  #L3e3892.  if v1 == 0 then goto L3e38a0;
  #L3e3896.  v1:= "clearMemory" @kind object;
  #L3e389a.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e38a0.  v0:= 0L;
  #L3e38a4.  call `k`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.k:(J)V` @kind direct;
  #L3e38aa.  return @kind void;
}
procedure `long` `evictionCount`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.evictionCount:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e3710.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.j` @type ^`int`;
  #L3e3714.  v0:= (`long`) v0 @kind i2l;
  #L3e3716.  return v0 @kind wide;
}
procedure `android.graphics.Bitmap` `get`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e3520.  call temp:= `h`(v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.h:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind direct;
  #L3e3526.  v0:= temp @kind object;
  #L3e3528.  if v0 == 0 then goto L3e3536;
  #L3e352c.  v2:= 0I;
  #L3e352e.  call `eraseColor`(v0, v2) @signature `Landroid/graphics/Bitmap;.eraseColor:(I)V` @kind virtual;
  #L3e3534.  goto L3e353e;
  #L3e3536.  call temp:= `b`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.b:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3e353c.  v0:= temp @kind object;
  #L3e353e.  return v0 @kind object;
}
procedure `long` `getCurrentSize`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.getCurrentSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e3728.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3e372c.  return v0 @kind wide;
}
procedure `android.graphics.Bitmap` `getDirty`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.getDirty:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e3550.  call temp:= `h`(v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.h:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind direct;
  #L3e3556.  v0:= temp @kind object;
  #L3e3558.  if v0 != 0 then goto L3e3564;
  #L3e355c.  call temp:= `b`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.b:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3e3562.  v0:= temp @kind object;
  #L3e3564.  return v0 @kind object;
}
procedure `long` `getMaxSize`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.getMaxSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e3740.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` @kind wide;
  #L3e3744.  return v0 @kind wide;
}
procedure `long` `hitCount`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.hitCount:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e3758.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.g` @type ^`int`;
  #L3e375c.  v0:= (`long`) v0 @kind i2l;
  #L3e375e.  return v0 @kind wide;
}
procedure `long` `missCount`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.missCount:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e3770.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.h` @type ^`int`;
  #L3e3774.  v0:= (`long`) v0 @kind i2l;
  #L3e3776.  return v0 @kind wide;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v6 @kind this, `android.graphics.Bitmap` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.put:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e39fc.  @monitorenter v6
  #L3e39fe.  if v7 == 0 then goto L3e3b82;
  #L3e3a02.  call temp:= `isRecycled`(v7) @signature `Landroid/graphics/Bitmap;.isRecycled:()Z` @kind virtual;
  #L3e3a08.  v0:= temp;
  #L3e3a0a.  if v0 != 0 then goto L3e3b6e;
  #L3e3a0e.  call temp:= `isMutable`(v7) @signature `Landroid/graphics/Bitmap;.isMutable:()Z` @kind virtual;
  #L3e3a14.  v0:= temp;
  #L3e3a16.  v1:= 2I;
  #L3e3a18.  if v0 == 0 then goto L3e3ae0;
  #L3e3a1c.  v0:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3a20.  call temp:= `getSize`(v0, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.getSize:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L3e3a26.  v0:= temp;
  #L3e3a28.  v2:= (`long`) v0 @kind i2l;
  #L3e3a2a.  v4:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` @kind wide;
  #L3e3a2e.  v0:= lcmp(v2, v4);
  #L3e3a32.  if v0 > 0 then goto L3e3ae0;
  #L3e3a36.  v0:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.b` @type ^`java.util.Set` @kind object;
  #L3e3a3a.  call temp:= `getConfig`(v7) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e3a40.  v2:= temp @kind object;
  #L3e3a42.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e3a48.  v0:= temp;
  #L3e3a4a.  if v0 != 0 then goto L3e3a50;
  #L3e3a4e.  goto L3e3ae0;
  #L3e3a50.  v0:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3a54.  call temp:= `getSize`(v0, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.getSize:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L3e3a5a.  v0:= temp;
  #L3e3a5c.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3a60.  call `put`(v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3e3a66.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$a` @kind object;
  #L3e3a6a.  call `b`(v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool$a;.b:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3e3a70.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.i` @type ^`int`;
  #L3e3a74.  v2:= v2 + 1;
  #L3e3a78.  v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.i` @type ^`int` := v2;
  #L3e3a7c.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3e3a80.  v4:= (`long`) v0 @kind i2l;
  #L3e3a82.  v2:= v2 + v4 @kind long;
  #L3e3a84.  v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` := v2 @kind wide;
  #L3e3a88.  v0:= "LruBitmapPool" @kind object;
  #L3e3a8c.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e3a92.  v0:= temp;
  #L3e3a94.  if v0 == 0 then goto L3e3ad0;
  #L3e3a98.  v0:= "LruBitmapPool" @kind object;
  #L3e3a9c.  v1:= new `java.lang.StringBuilder`;
  #L3e3aa0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e3aa6.  v2:= "Put bitmap in pool=" @kind object;
  #L3e3aaa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3ab0.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3ab4.  call temp:= `logBitmap`(v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L3e3aba.  v7:= temp @kind object;
  #L3e3abc.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3ac2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e3ac8.  v7:= temp @kind object;
  #L3e3aca.  call temp:= `v`(v0, v7) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e3ad0.  call `c`(v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.c:()V` @kind direct;
  #L3e3ad6.  call `e`(v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.e:()V` @kind direct;
  #L3e3adc.  @monitorexit v6
  #L3e3ade.  return @kind void;
  #L3e3ae0.  v0:= "LruBitmapPool" @kind object;
  #L3e3ae4.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e3aea.  v0:= temp;
  #L3e3aec.  if v0 == 0 then goto L3e3b64;
  #L3e3af0.  v0:= "LruBitmapPool" @kind object;
  #L3e3af4.  v1:= new `java.lang.StringBuilder`;
  #L3e3af8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e3afe.  v2:= "Reject bitmap from pool, bitmap: " @kind object;
  #L3e3b02.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3b08.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3e3b0c.  call temp:= `logBitmap`(v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L3e3b12.  v2:= temp @kind object;
  #L3e3b14.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3b1a.  v2:= ", is mutable: " @kind object;
  #L3e3b1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3b24.  call temp:= `isMutable`(v7) @signature `Landroid/graphics/Bitmap;.isMutable:()Z` @kind virtual;
  #L3e3b2a.  v2:= temp;
  #L3e3b2c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3b32.  v2:= ", is allowed config: " @kind object;
  #L3e3b36.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3b3c.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.b` @type ^`java.util.Set` @kind object;
  #L3e3b40.  call temp:= `getConfig`(v7) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e3b46.  v3:= temp @kind object;
  #L3e3b48.  call temp:= `contains`(v2, v3) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e3b4e.  v2:= temp;
  #L3e3b50.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3b56.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e3b5c.  v1:= temp @kind object;
  #L3e3b5e.  call temp:= `v`(v0, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e3b64.  call `recycle`(v7) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3e3b6a.  @monitorexit v6
  #L3e3b6c.  return @kind void;
  #L3e3b6e.  v7:= new `java.lang.IllegalStateException`;
  #L3e3b72.  v0:= "Cannot pool recycled bitmap" @kind object;
  #L3e3b76.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e3b7c.  throw v7;
  #L3e3b7e.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e3b80.  goto L3e3b92;
  #L3e3b82.  v7:= new `java.lang.NullPointerException`;
  #L3e3b86.  v0:= "Bitmap must not be null" @kind object;
  #L3e3b8a.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e3b90.  throw v7;
  #L3e3b92.  @monitorexit v6
  #L3e3b94.  throw v7;
  catch `java.lang.Throwable` @[L3e3a02..L3e3adc] goto L3e3b7e;
  catch `java.lang.Throwable` @[L3e3ae0..L3e3b6a] goto L3e3b7e;
  catch `java.lang.Throwable` @[L3e3b6e..L3e3b92] goto L3e3b7e;
}
procedure `void` `setSizeMultiplier`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this, `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.setSizeMultiplier:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e3bc4.  @monitorenter v2
  #L3e3bc6.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.c` @type ^`long` @kind wide;
  #L3e3bca.  v0:= (`float`) v0 @kind l2f;
  #L3e3bcc.  v0:= v0 * v3 @kind float;
  #L3e3bd0.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3e3bd6.  v3:= temp;
  #L3e3bd8.  v0:= (`long`) v3 @kind i2l;
  #L3e3bda.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` := v0 @kind wide;
  #L3e3bde.  call `e`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.e:()V` @kind direct;
  #L3e3be4.  @monitorexit v2
  #L3e3be6.  return @kind void;
  #L3e3be8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e3bea.  @monitorexit v2
  #L3e3bec.  throw v3;
  catch `java.lang.Throwable` @[L3e3bc6..L3e3be4] goto L3e3be8;
}
procedure `void` `trimMemory`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v4 @kind this, `int` v5 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.trimMemory:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e3c0c.  v0:= "LruBitmapPool" @kind object;
  #L3e3c10.  v1:= 3I;
  #L3e3c12.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e3c18.  v1:= temp;
  #L3e3c1a.  if v1 == 0 then goto L3e3c46;
  #L3e3c1e.  v1:= new `java.lang.StringBuilder`;
  #L3e3c22.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e3c28.  v2:= "trimMemory, level=" @kind object;
  #L3e3c2c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3c32.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3c38.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e3c3e.  v1:= temp @kind object;
  #L3e3c40.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e3c46.  v0:= 40I;
  #L3e3c4a.  if v5 >= v0 then goto L3e3c86;
  #L3e3c4e.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3e3c52.  v1:= 23I;
  #L3e3c56.  v2:= 20I;
  #L3e3c5a.  if v0 < v1 then goto L3e3c64;
  #L3e3c5e.  if v5 < v2 then goto L3e3c64;
  #L3e3c62.  goto L3e3c86;
  #L3e3c64.  if v5 >= v2 then goto L3e3c70;
  #L3e3c68.  v0:= 15I;
  #L3e3c6c.  if v5 != v0 then goto L3e3c8c;
  #L3e3c70.  call temp:= `getMaxSize`(v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.getMaxSize:()J` @kind virtual;
  #L3e3c76.  v0:= temp @kind wide;
  #L3e3c78.  v2:= 2L;
  #L3e3c7c.  v0:= v0 / v2 @kind long;
  #L3e3c7e.  call `k`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.k:(J)V` @kind direct;
  #L3e3c84.  goto L3e3c8c;
  #L3e3c86.  call `clearMemory`(v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.clearMemory:()V` @kind virtual;
  #L3e3c8c.  return @kind void;
}
