record `com.bumptech.glide.load.engine.h$e` @kind class @AccessFlag FINAL extends `java.lang.Iterable` @kind interface {
  `java.util.List` `com.bumptech.glide.load.engine.h$e.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$e` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3df904.  v0:= new `java.util.ArrayList`;
  #L3df908.  v1:= 2I;
  #L3df90a.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3df910.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/h$e;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3df916.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$e` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$e;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3df928.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df92e.  v0.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` := v1 @kind object;
  #L3df932.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.h$d` `d`(`com.bumptech.glide.request.ResourceCallback` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$e;.d:(Lcom/bumptech/glide/request/ResourceCallback;)Lcom/bumptech/glide/load/engine/h$d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3df874.  v0:= new `com.bumptech.glide.load.engine.h$d`;
  #L3df878.  call temp:= `directExecutor`() @signature `Lcom/bumptech/glide/util/Executors;.directExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L3df87e.  v1:= temp @kind object;
  #L3df880.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/engine/h$d;.<init>:(Lcom/bumptech/glide/request/ResourceCallback;Ljava/util/concurrent/Executor;)V` @kind direct;
  #L3df886.  return v0 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.h$e` v2 @kind this, `com.bumptech.glide.request.ResourceCallback` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$e;.a:(Lcom/bumptech/glide/request/ResourceCallback;Ljava/util/concurrent/Executor;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3df944.  v0:= v2.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3df948.  v1:= new `com.bumptech.glide.load.engine.h$d`;
  #L3df94c.  call `<init>`(v1, v3, v4) @signature `Lcom/bumptech/glide/load/engine/h$d;.<init>:(Lcom/bumptech/glide/request/ResourceCallback;Ljava/util/concurrent/Executor;)V` @kind direct;
  #L3df952.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3df958.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.h$e` v1 @kind this, `com.bumptech.glide.request.ResourceCallback` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$e;.b:(Lcom/bumptech/glide/request/ResourceCallback;)Z` @AccessFlag  {
    temp;
    v0;

  #L3df82c.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3df830.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/h$e;.d:(Lcom/bumptech/glide/request/ResourceCallback;)Lcom/bumptech/glide/load/engine/h$d;` @kind static;
  #L3df836.  v2:= temp @kind object;
  #L3df838.  call temp:= `contains`(v0, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3df83e.  v2:= temp;
  #L3df840.  return v2;
}
procedure `com.bumptech.glide.load.engine.h$e` `c`(`com.bumptech.glide.load.engine.h$e` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.c:()Lcom/bumptech/glide/load/engine/h$e;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3df898.  v0:= new `com.bumptech.glide.load.engine.h$e`;
  #L3df89c.  v1:= new `java.util.ArrayList`;
  #L3df8a0.  v2:= v3.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3df8a4.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3df8aa.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/h$e;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3df8b0.  return v0 @kind object;
}
procedure `void` `clear`(`com.bumptech.glide.load.engine.h$e` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.clear:()V` @AccessFlag  {
    temp;
    v0;

  #L3df96c.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3df970.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3df976.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.h$e` v1 @kind this, `com.bumptech.glide.request.ResourceCallback` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$e;.e:(Lcom/bumptech/glide/request/ResourceCallback;)V` @AccessFlag  {
    temp;
    v0;

  #L3df988.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3df98c.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/h$e;.d:(Lcom/bumptech/glide/request/ResourceCallback;)Lcom/bumptech/glide/load/engine/h$d;` @kind static;
  #L3df992.  v2:= temp @kind object;
  #L3df994.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3df99a.  return @kind void;
}
procedure `boolean` `isEmpty`(`com.bumptech.glide.load.engine.h$e` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.isEmpty:()Z` @AccessFlag  {
    temp;
    v0;

  #L3df854.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3df858.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3df85e.  v0:= temp;
  #L3df860.  return v0;
}
procedure `java.util.Iterator` `iterator`(`com.bumptech.glide.load.engine.h$e` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df8e4.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3df8e8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3df8ee.  v0:= temp @kind object;
  #L3df8f0.  return v0 @kind object;
}
procedure `int` `size`(`com.bumptech.glide.load.engine.h$e` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.size:()I` @AccessFlag  {
    temp;
    v0;

  #L3df8c4.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3df8c8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3df8ce.  v0:= temp;
  #L3df8d0.  return v0;
}
