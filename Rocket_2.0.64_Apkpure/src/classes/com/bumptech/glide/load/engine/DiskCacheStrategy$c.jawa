record `com.bumptech.glide.load.engine.DiskCacheStrategy$c` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.DiskCacheStrategy` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.DiskCacheStrategy$c` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3df0bc.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.<init>:()V` @kind direct;
  #L3df0c2.  return @kind void;
}
procedure `boolean` `decodeCachedData`(`com.bumptech.glide.load.engine.DiskCacheStrategy$c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy$c;.decodeCachedData:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df058.  v0:= 1I;
  #L3df05a.  return v0;
}
procedure `boolean` `decodeCachedResource`(`com.bumptech.glide.load.engine.DiskCacheStrategy$c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy$c;.decodeCachedResource:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df06c.  v0:= 0I;
  #L3df06e.  return v0;
}
procedure `boolean` `isDataCacheable`(`com.bumptech.glide.load.engine.DiskCacheStrategy$c` v1 @kind this, `com.bumptech.glide.load.DataSource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy$c;.isDataCacheable:(Lcom/bumptech/glide/load/DataSource;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df080.  v0:= `@@com.bumptech.glide.load.DataSource.DATA_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3df084.  if v2 == v0 then goto L3df094;
  #L3df088.  v0:= `@@com.bumptech.glide.load.DataSource.MEMORY_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3df08c.  if v2 == v0 then goto L3df094;
  #L3df090.  v2:= 1I;
  #L3df092.  goto L3df096;
  #L3df094.  v2:= 0I;
  #L3df096.  return v2;
}
procedure `boolean` `isResourceCacheable`(`com.bumptech.glide.load.engine.DiskCacheStrategy$c` v0 @kind this, `boolean` v1 , `com.bumptech.glide.load.DataSource` v2 @kind object, `com.bumptech.glide.load.EncodeStrategy` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy$c;.isResourceCacheable:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @AccessFlag PUBLIC {
    temp;

  #L3df0a8.  v1:= 0I;
  #L3df0aa.  return v1;
}
