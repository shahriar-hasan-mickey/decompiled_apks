record `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.b` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.c` @AccessFlag PRIVATE;
  `java.util.concurrent.ThreadFactory` `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.e` @AccessFlag PRIVATE;
  `java.lang.String` `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.f` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.g` @AccessFlag PRIVATE;
}
global `long` `@@com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.NO_THREAD_TIMEOUT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` v2 @kind this, `boolean` v3 ) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.<init>:(Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e5a6c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e5a72.  v0:= new `com.bumptech.glide.load.engine.executor.GlideExecutor$b`;
  #L3e5a76.  v1:= 0I;
  #L3e5a78.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$b;.<init>:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$a;)V` @kind direct;
  #L3e5a7e.  v2.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.d` @type ^`java.util.concurrent.ThreadFactory` := v0 @kind object;
  #L3e5a82.  v0:= `@@com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy.DEFAULT` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` @kind object;
  #L3e5a86.  v2.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.e` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` := v0 @kind object;
  #L3e5a8a.  v2.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.a` @type ^`boolean` := v3 @kind boolean;
  #L3e5a8e.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor` `build`(`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` v12 @kind this) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.build:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3e5950.  v0:= v12.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.f` @type ^`java.lang.String` @kind object;
  #L3e5954.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3e595a.  v0:= temp;
  #L3e595c.  if v0 != 0 then goto L3e59c4;
  #L3e5960.  v0:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L3e5964.  v2:= v12.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.b` @type ^`int`;
  #L3e5968.  v3:= v12.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.c` @type ^`int`;
  #L3e596c.  v4:= v12.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.g` @type ^`long` @kind wide;
  #L3e5970.  v6:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e5974.  v7:= new `java.util.concurrent.PriorityBlockingQueue`;
  #L3e5978.  call `<init>`(v7) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.<init>:()V` @kind direct;
  #L3e597e.  v8:= new `com.bumptech.glide.load.engine.executor.GlideExecutor$c`;
  #L3e5982.  v1:= v12.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.d` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L3e5986.  v9:= v12.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.f` @type ^`java.lang.String` @kind object;
  #L3e598a.  v10:= v12.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.e` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` @kind object;
  #L3e598e.  v11:= v12.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.a` @type ^`boolean` @kind boolean;
  #L3e5992.  call `<init>`(v8, v1, v9, v10, v11) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$c;.<init>:(Ljava/util/concurrent/ThreadFactory;Ljava/lang/String;Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;Z)V` @kind direct;
  #L3e5998.  v1:= v0 @kind object;
  #L3e599a.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3e59a0.  v1:= v12.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.g` @type ^`long` @kind wide;
  #L3e59a4.  v3:= 0L;
  #L3e59a8.  v5:= lcmp(v1, v3);
  #L3e59ac.  if v5 == 0 then goto L3e59b8;
  #L3e59b0.  v1:= 1I;
  #L3e59b2.  call `allowCoreThreadTimeOut`(v0, v1) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.allowCoreThreadTimeOut:(Z)V` @kind virtual;
  #L3e59b8.  v1:= new `com.bumptech.glide.load.engine.executor.GlideExecutor`;
  #L3e59bc.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L3e59c2.  return v1 @kind object;
  #L3e59c4.  v0:= new `java.lang.IllegalArgumentException`;
  #L3e59c8.  v1:= new `java.lang.StringBuilder`;
  #L3e59cc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e59d2.  v2:= "Name must be non-null and non-empty, but given: " @kind object;
  #L3e59d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e59dc.  v2:= v12.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.f` @type ^`java.lang.String` @kind object;
  #L3e59e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e59e6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e59ec.  v1:= temp @kind object;
  #L3e59ee.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e59f4.  throw v0;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` `setName`(`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setName:(Ljava/lang/String;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @AccessFlag PUBLIC {
    temp;

  #L3e5a08.  v0.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.f` @type ^`java.lang.String` := v1 @kind object;
  #L3e5a0c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` `setThreadCount`(`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setThreadCount:(I)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @AccessFlag PUBLIC {
    temp;

  #L3e5a20.  v0.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.b` @type ^`int` := v1;
  #L3e5a24.  v0.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.c` @type ^`int` := v1;
  #L3e5a28.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` `setThreadTimeoutMillis`(`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` v0 @kind this, `long` v1 ) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setThreadTimeoutMillis:(J)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @AccessFlag PUBLIC {
    temp;

  #L3e5a3c.  v0.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.g` @type ^`long` := v1 @kind wide;
  #L3e5a40.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` `setUncaughtThrowableStrategy`(`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;.setUncaughtThrowableStrategy:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;` @AccessFlag PUBLIC {
    temp;

  #L3e5a54.  v0.`com.bumptech.glide.load.engine.executor.GlideExecutor$Builder.e` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` := v1 @kind object;
  #L3e5a58.  return v0 @kind object;
}
