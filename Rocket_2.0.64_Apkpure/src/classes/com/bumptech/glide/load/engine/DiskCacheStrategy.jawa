record `com.bumptech.glide.load.engine.DiskCacheStrategy` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `com.bumptech.glide.load.engine.DiskCacheStrategy` `@@com.bumptech.glide.load.engine.DiskCacheStrategy.ALL` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.engine.DiskCacheStrategy` `@@com.bumptech.glide.load.engine.DiskCacheStrategy.AUTOMATIC` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.engine.DiskCacheStrategy` `@@com.bumptech.glide.load.engine.DiskCacheStrategy.DATA` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.engine.DiskCacheStrategy` `@@com.bumptech.glide.load.engine.DiskCacheStrategy.NONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.engine.DiskCacheStrategy` `@@com.bumptech.glide.load.engine.DiskCacheStrategy.RESOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3df1e4.  v0:= new `com.bumptech.glide.load.engine.DiskCacheStrategy$a`;
  #L3df1e8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy$a;.<init>:()V` @kind direct;
  #L3df1ee.  `@@com.bumptech.glide.load.engine.DiskCacheStrategy.ALL` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3df1f2.  v0:= new `com.bumptech.glide.load.engine.DiskCacheStrategy$b`;
  #L3df1f6.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy$b;.<init>:()V` @kind direct;
  #L3df1fc.  `@@com.bumptech.glide.load.engine.DiskCacheStrategy.NONE` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3df200.  v0:= new `com.bumptech.glide.load.engine.DiskCacheStrategy$c`;
  #L3df204.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy$c;.<init>:()V` @kind direct;
  #L3df20a.  `@@com.bumptech.glide.load.engine.DiskCacheStrategy.DATA` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3df20e.  v0:= new `com.bumptech.glide.load.engine.DiskCacheStrategy$d`;
  #L3df212.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy$d;.<init>:()V` @kind direct;
  #L3df218.  `@@com.bumptech.glide.load.engine.DiskCacheStrategy.RESOURCE` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3df21c.  v0:= new `com.bumptech.glide.load.engine.DiskCacheStrategy$e`;
  #L3df220.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy$e;.<init>:()V` @kind direct;
  #L3df226.  `@@com.bumptech.glide.load.engine.DiskCacheStrategy.AUTOMATIC` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3df22a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.DiskCacheStrategy` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3df23c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df242.  return @kind void;
}
procedure `boolean` `decodeCachedData`() @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.decodeCachedData:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `decodeCachedResource`() @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.decodeCachedResource:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isDataCacheable`(`com.bumptech.glide.load.DataSource` v0 @kind object) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.isDataCacheable:(Lcom/bumptech/glide/load/DataSource;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isResourceCacheable`(`boolean` v0 , `com.bumptech.glide.load.DataSource` v1 @kind object, `com.bumptech.glide.load.EncodeStrategy` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.isResourceCacheable:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
