record `com.bumptech.glide.load.engine.h$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.request.ResourceCallback` `com.bumptech.glide.load.engine.h$a.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.h` `com.bumptech.glide.load.engine.h$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$a` v0 @kind this, `com.bumptech.glide.load.engine.h` v1 @kind object, `com.bumptech.glide.request.ResourceCallback` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$a;.<init>:(Lcom/bumptech/glide/load/engine/h;Lcom/bumptech/glide/request/ResourceCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3df5ec.  v0.`com.bumptech.glide.load.engine.h$a.b` @type ^`com.bumptech.glide.load.engine.h` := v1 @kind object;
  #L3df5f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df5f6.  v0.`com.bumptech.glide.load.engine.h$a.a` @type ^`com.bumptech.glide.request.ResourceCallback` := v2 @kind object;
  #L3df5fa.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.h$a` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3df60c.  v0:= v4.`com.bumptech.glide.load.engine.h$a.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3df610.  call temp:= `getLock`(v0) @signature `Lcom/bumptech/glide/request/ResourceCallback;.getLock:()Ljava/lang/Object;` @kind interface;
  #L3df616.  v0:= temp @kind object;
  #L3df618.  @monitorenter v0
  #L3df61a.  v1:= v4.`com.bumptech.glide.load.engine.h$a.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3df61e.  @monitorenter v1
  #L3df620.  v2:= v4.`com.bumptech.glide.load.engine.h$a.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3df624.  v2:= v2.`com.bumptech.glide.load.engine.h.a` @type ^`com.bumptech.glide.load.engine.h$e` @kind object;
  #L3df628.  v3:= v4.`com.bumptech.glide.load.engine.h$a.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3df62c.  call temp:= `b`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/h$e;.b:(Lcom/bumptech/glide/request/ResourceCallback;)Z` @kind virtual;
  #L3df632.  v2:= temp;
  #L3df634.  if v2 == 0 then goto L3df646;
  #L3df638.  v2:= v4.`com.bumptech.glide.load.engine.h$a.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3df63c.  v3:= v4.`com.bumptech.glide.load.engine.h$a.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3df640.  call `c`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/h;.c:(Lcom/bumptech/glide/request/ResourceCallback;)V` @kind virtual;
  #L3df646.  v2:= v4.`com.bumptech.glide.load.engine.h$a.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3df64a.  call `f`(v2) @signature `Lcom/bumptech/glide/load/engine/h;.f:()V` @kind virtual;
  #L3df650.  @monitorexit v1
  #L3df652.  @monitorexit v0
  #L3df654.  return @kind void;
  #L3df656.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3df658.  @monitorexit v1
  #L3df65a.  throw v2;
  #L3df65c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3df65e.  @monitorexit v0
  #L3df660.  throw v1;
  catch `java.lang.Throwable` @[L3df61a..L3df620] goto L3df65c;
  catch `java.lang.Throwable` @[L3df620..L3df652] goto L3df656;
  catch `java.lang.Throwable` @[L3df652..L3df654] goto L3df65c;
  catch `java.lang.Throwable` @[L3df658..L3df65a] goto L3df656;
  catch `java.lang.Throwable` @[L3df65a..L3df660] goto L3df65c;
}
