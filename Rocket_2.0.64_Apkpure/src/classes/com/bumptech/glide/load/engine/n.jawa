record `com.bumptech.glide.load.engine.n` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.Resource` @kind interface, `com.bumptech.glide.util.pool.FactoryPools$Poolable` @kind interface {
  `com.bumptech.glide.util.pool.StateVerifier` `com.bumptech.glide.load.engine.n.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Resource` `com.bumptech.glide.load.engine.n.b` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.n.c` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.n.d` @AccessFlag PRIVATE;
}
global `androidx.core.util.Pools$Pool` `@@com.bumptech.glide.load.engine.n.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e17f4.  v0:= new `com.bumptech.glide.load.engine.n$a`;
  #L3e17f8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/n$a;.<init>:()V` @kind direct;
  #L3e17fe.  v1:= 20I;
  #L3e1802.  call temp:= `threadSafe`(v1, v0) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.threadSafe:(ILcom/bumptech/glide/util/pool/FactoryPools$Factory;)Landroidx/core/util/Pools$Pool;` @kind static;
  #L3e1808.  v0:= temp @kind object;
  #L3e180a.  `@@com.bumptech.glide.load.engine.n.e` @type ^`androidx.core.util.Pools$Pool` := v0 @kind object;
  #L3e180e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e1820.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e1826.  call temp:= `newInstance`() @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.newInstance:()Lcom/bumptech/glide/util/pool/StateVerifier;` @kind static;
  #L3e182c.  v0:= temp @kind object;
  #L3e182e.  v1.`com.bumptech.glide.load.engine.n.a` @type ^`com.bumptech.glide.util.pool.StateVerifier` := v0 @kind object;
  #L3e1832.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.n` v1 @kind this, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/n;.a:(Lcom/bumptech/glide/load/engine/Resource;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e1844.  v0:= 0I;
  #L3e1846.  v1.`com.bumptech.glide.load.engine.n.d` @type ^`boolean` := v0 @kind boolean;
  #L3e184a.  v0:= 1I;
  #L3e184c.  v1.`com.bumptech.glide.load.engine.n.c` @type ^`boolean` := v0 @kind boolean;
  #L3e1850.  v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` := v2 @kind object;
  #L3e1854.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.n` `b`(`com.bumptech.glide.load.engine.Resource` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/n;.b:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/n;` @AccessFlag STATIC {
    temp;
    v0;

  #L3e1748.  v0:= `@@com.bumptech.glide.load.engine.n.e` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3e174c.  call temp:= `acquire`(v0) @signature `Landroidx/core/util/Pools$Pool;.acquire:()Ljava/lang/Object;` @kind interface;
  #L3e1752.  v0:= temp @kind object;
  #L3e1754.  v0:= (`com.bumptech.glide.load.engine.n`) v0 @kind object;
  #L3e1758.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e175e.  v0:= temp @kind object;
  #L3e1760.  v0:= (`com.bumptech.glide.load.engine.n`) v0 @kind object;
  #L3e1764.  call `a`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/n;.a:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind direct;
  #L3e176a.  return v0 @kind object;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e18b8.  v0:= 0I;
  #L3e18ba.  v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` := v0 @kind object;
  #L3e18be.  v0:= `@@com.bumptech.glide.load.engine.n.e` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3e18c2.  call temp:= `release`(v0, v1) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3e18c8.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.n` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e18dc.  @monitorenter v2
  #L3e18de.  v0:= v2.`com.bumptech.glide.load.engine.n.a` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3e18e2.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3e18e8.  v0:= v2.`com.bumptech.glide.load.engine.n.c` @type ^`boolean` @kind boolean;
  #L3e18ec.  if v0 == 0 then goto L3e1908;
  #L3e18f0.  v0:= 0I;
  #L3e18f2.  v2.`com.bumptech.glide.load.engine.n.c` @type ^`boolean` := v0 @kind boolean;
  #L3e18f6.  v0:= v2.`com.bumptech.glide.load.engine.n.d` @type ^`boolean` @kind boolean;
  #L3e18fa.  if v0 == 0 then goto L3e1904;
  #L3e18fe.  call `recycle`(v2) @signature `Lcom/bumptech/glide/load/engine/n;.recycle:()V` @kind virtual;
  #L3e1904.  @monitorexit v2
  #L3e1906.  return @kind void;
  #L3e1908.  v0:= new `java.lang.IllegalStateException`;
  #L3e190c.  v1:= "Already unlocked" @kind object;
  #L3e1910.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e1916.  throw v0;
  #L3e1918.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e191a.  @monitorexit v2
  #L3e191c.  throw v0;
  catch `java.lang.Throwable` @[L3e18de..L3e1904] goto L3e1918;
  catch `java.lang.Throwable` @[L3e1908..L3e1918] goto L3e1918;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e17d4.  v0:= v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3e17d8.  call temp:= `get`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3e17de.  v0:= temp @kind object;
  #L3e17e0.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e17b4.  v0:= v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3e17b8.  call temp:= `getResourceClass`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.getResourceClass:()Ljava/lang/Class;` @kind interface;
  #L3e17be.  v0:= temp @kind object;
  #L3e17c0.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1794.  v0:= v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3e1798.  call temp:= `getSize`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.getSize:()I` @kind interface;
  #L3e179e.  v0:= temp;
  #L3e17a0.  return v0;
}
procedure `com.bumptech.glide.util.pool.StateVerifier` `getVerifier`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.getVerifier:()Lcom/bumptech/glide/util/pool/StateVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e177c.  v0:= v1.`com.bumptech.glide.load.engine.n.a` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3e1780.  return v0 @kind object;
}
procedure `void` `recycle`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1868.  @monitorenter v1
  #L3e186a.  v0:= v1.`com.bumptech.glide.load.engine.n.a` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3e186e.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3e1874.  v0:= 1I;
  #L3e1876.  v1.`com.bumptech.glide.load.engine.n.d` @type ^`boolean` := v0 @kind boolean;
  #L3e187a.  v0:= v1.`com.bumptech.glide.load.engine.n.c` @type ^`boolean` @kind boolean;
  #L3e187e.  if v0 != 0 then goto L3e1892;
  #L3e1882.  v0:= v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3e1886.  call `recycle`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L3e188c.  call `c`(v1) @signature `Lcom/bumptech/glide/load/engine/n;.c:()V` @kind direct;
  #L3e1892.  @monitorexit v1
  #L3e1894.  return @kind void;
  #L3e1896.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e1898.  @monitorexit v1
  #L3e189a.  throw v0;
  catch `java.lang.Throwable` @[L3e186a..L3e1892] goto L3e1896;
}
