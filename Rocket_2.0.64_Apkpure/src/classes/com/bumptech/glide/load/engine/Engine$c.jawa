record `com.bumptech.glide.load.engine.Engine$c` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.g$e` @kind interface {
  `com.bumptech.glide.load.engine.cache.DiskCache$Factory` `com.bumptech.glide.load.engine.Engine$c.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.cache.DiskCache` `com.bumptech.glide.load.engine.Engine$c.b` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.Engine$c` v0 @kind this, `com.bumptech.glide.load.engine.cache.DiskCache$Factory` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine$c;.<init>:(Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3df528.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df52e.  v0.`com.bumptech.glide.load.engine.Engine$c.a` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` := v1 @kind object;
  #L3df532.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.cache.DiskCache` `a`(`com.bumptech.glide.load.engine.Engine$c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/Engine$c;.a:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df4c4.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3df4c8.  if v0 != 0 then goto L3df506;
  #L3df4cc.  @monitorenter v1
  #L3df4ce.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3df4d2.  if v0 != 0 then goto L3df4e6;
  #L3df4d6.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.a` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` @kind object;
  #L3df4da.  call temp:= `build`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;.build:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind interface;
  #L3df4e0.  v0:= temp @kind object;
  #L3df4e2.  v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` := v0 @kind object;
  #L3df4e6.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3df4ea.  if v0 != 0 then goto L3df4fc;
  #L3df4ee.  v0:= new `com.bumptech.glide.load.engine.cache.DiskCacheAdapter`;
  #L3df4f2.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheAdapter;.<init>:()V` @kind direct;
  #L3df4f8.  v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` := v0 @kind object;
  #L3df4fc.  @monitorexit v1
  #L3df4fe.  goto L3df506;
  #L3df500.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3df502.  @monitorexit v1
  #L3df504.  throw v0;
  #L3df506.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3df50a.  return v0 @kind object;
  catch `java.lang.Throwable` @[L3df4ce..L3df504] goto L3df500;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.Engine$c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/Engine$c;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L3df544.  @monitorenter v1
  #L3df546.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3df54a.  if v0 != 0 then goto L3df552;
  #L3df54e.  @monitorexit v1
  #L3df550.  return @kind void;
  #L3df552.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3df556.  call `clear`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.clear:()V` @kind interface;
  #L3df55c.  @monitorexit v1
  #L3df55e.  return @kind void;
  #L3df560.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3df562.  @monitorexit v1
  #L3df564.  throw v0;
  catch `java.lang.Throwable` @[L3df546..L3df54a] goto L3df560;
  catch `java.lang.Throwable` @[L3df552..L3df55c] goto L3df560;
}
