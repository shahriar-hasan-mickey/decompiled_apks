record `com.bumptech.glide.load.engine.DecodePath` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.bumptech.glide.load.engine.DecodePath.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.DecodePath.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` `com.bumptech.glide.load.engine.DecodePath.c` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.Pools$Pool` `com.bumptech.glide.load.engine.DecodePath.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.engine.DecodePath.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.DecodePath` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `java.util.List` v4 @kind object, `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` v5 @kind object, `androidx.core.util.Pools$Pool` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Landroidx/core/util/Pools$Pool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3deedc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3deee2.  v0.`com.bumptech.glide.load.engine.DecodePath.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3deee6.  v0.`com.bumptech.glide.load.engine.DecodePath.b` @type ^`java.util.List` := v4 @kind object;
  #L3deeea.  v0.`com.bumptech.glide.load.engine.DecodePath.c` @type ^`com.bumptech.glide.load.resource.transcode.ResourceTranscoder` := v5 @kind object;
  #L3deeee.  v0.`com.bumptech.glide.load.engine.DecodePath.d` @type ^`androidx.core.util.Pools$Pool` := v6 @kind object;
  #L3deef2.  v4:= new `java.lang.StringBuilder`;
  #L3deef6.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3deefc.  v5:= "Failed DecodePath{" @kind object;
  #L3def00.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3def06.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3def0c.  v1:= temp @kind object;
  #L3def0e.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3def14.  v1:= "->" @kind object;
  #L3def18.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3def1e.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3def24.  v2:= temp @kind object;
  #L3def26.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3def2c.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3def32.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3def38.  v1:= temp @kind object;
  #L3def3a.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3def40.  v1:= "}" @kind object;
  #L3def44.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3def4a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3def50.  v1:= temp @kind object;
  #L3def52.  v0.`com.bumptech.glide.load.engine.DecodePath.e` @type ^`java.lang.String` := v1 @kind object;
  #L3def56.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `a`(`com.bumptech.glide.load.engine.DecodePath` v7 @kind this, `com.bumptech.glide.load.data.DataRewinder` v8 @kind object, `int` v9 , `int` v10 , `com.bumptech.glide.load.Options` v11 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.a:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ded28.  v0:= v7.`com.bumptech.glide.load.engine.DecodePath.d` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3ded2c.  call temp:= `acquire`(v0) @signature `Landroidx/core/util/Pools$Pool;.acquire:()Ljava/lang/Object;` @kind interface;
  #L3ded32.  v0:= temp @kind object;
  #L3ded34.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ded3a.  v0:= temp @kind object;
  #L3ded3c.  v0:= (`java.util.List`) v0 @kind object;
  #L3ded40.  v1:= v7 @kind object;
  #L3ded42.  v2:= v8 @kind object;
  #L3ded44.  v3:= v9;
  #L3ded46.  v4:= v10;
  #L3ded48.  v5:= v11 @kind object;
  #L3ded4a.  v6:= v0 @kind object;
  #L3ded4c.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.b:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;Ljava/util/List;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3ded52.  v8:= temp @kind object;
  #L3ded54.  v9:= v7.`com.bumptech.glide.load.engine.DecodePath.d` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3ded58.  call temp:= `release`(v9, v0) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3ded5e.  return v8 @kind object;
  #L3ded60.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ded62.  v9:= v7.`com.bumptech.glide.load.engine.DecodePath.d` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3ded66.  call temp:= `release`(v9, v0) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3ded6c.  throw v8;
  catch `java.lang.Throwable` @[L3ded4c..L3ded54] goto L3ded60;
}
procedure `com.bumptech.glide.load.engine.Resource` `b`(`com.bumptech.glide.load.engine.DecodePath` v8 @kind this, `com.bumptech.glide.load.data.DataRewinder` v9 @kind object, `int` v10 , `int` v11 , `com.bumptech.glide.load.Options` v12 @kind object, `java.util.List` v13 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.b:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;Ljava/util/List;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ded8c.  v0:= v8.`com.bumptech.glide.load.engine.DecodePath.b` @type ^`java.util.List` @kind object;
  #L3ded90.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ded96.  v0:= temp;
  #L3ded98.  v1:= 0I;
  #L3ded9a.  v2:= 0I;
  #L3ded9c.  if v2 >= v0 then goto L3dee2c;
  #L3deda0.  v3:= v8.`com.bumptech.glide.load.engine.DecodePath.b` @type ^`java.util.List` @kind object;
  #L3deda4.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dedaa.  v3:= temp @kind object;
  #L3dedac.  v3:= (`com.bumptech.glide.load.ResourceDecoder`) v3 @kind object;
  #L3dedb0.  call temp:= `rewindAndGet`(v9) @signature `Lcom/bumptech/glide/load/data/DataRewinder;.rewindAndGet:()Ljava/lang/Object;` @kind interface;
  #L3dedb6.  v4:= temp @kind object;
  #L3dedb8.  call temp:= `handles`(v3, v4, v12) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z` @kind interface;
  #L3dedbe.  v4:= temp;
  #L3dedc0.  if v4 == 0 then goto L3dee20;
  #L3dedc4.  call temp:= `rewindAndGet`(v9) @signature `Lcom/bumptech/glide/load/data/DataRewinder;.rewindAndGet:()Ljava/lang/Object;` @kind interface;
  #L3dedca.  v4:= temp @kind object;
  #L3dedcc.  call temp:= `decode`(v3, v4, v10, v11, v12) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3dedd2.  v1:= temp @kind object;
  #L3dedd4.  goto L3dee20;
  #L3dedd6.  v4:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L3dedd8.  goto L3dede0;
  #L3dedda.  v4:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3deddc.  goto L3dede0;
  #L3dedde.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L3dede0.  v5:= 2I;
  #L3dede2.  v6:= "DecodePath" @kind object;
  #L3dede6.  call temp:= `isLoggable`(v6, v5) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3dedec.  v5:= temp;
  #L3dedee.  if v5 == 0 then goto L3dee1a;
  #L3dedf2.  v5:= new `java.lang.StringBuilder`;
  #L3dedf6.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dedfc.  v7:= "Failed to decode data for " @kind object;
  #L3dee00.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dee06.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dee0c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dee12.  v3:= temp @kind object;
  #L3dee14.  call temp:= `v`(v6, v3, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3dee1a.  call temp:= `add`(v13, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3dee20.  if v1 == 0 then goto L3dee26;
  #L3dee24.  goto L3dee2c;
  #L3dee26.  v2:= v2 + 1;
  #L3dee2a.  goto L3ded9c;
  #L3dee2c.  if v1 == 0 then goto L3dee32;
  #L3dee30.  return v1 @kind object;
  #L3dee32.  v9:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3dee36.  v10:= v8.`com.bumptech.glide.load.engine.DecodePath.e` @type ^`java.lang.String` @kind object;
  #L3dee3a.  v11:= new `java.util.ArrayList`;
  #L3dee3e.  call `<init>`(v11, v13) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3dee44.  call `<init>`(v9, v10, v11) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3dee4a.  throw v9;
  catch `java.io.IOException` @[L3dedb0..L3dedd4] goto L3dedde;
  catch `java.lang.RuntimeException` @[L3dedb0..L3dedd4] goto L3dedda;
  catch `java.lang.OutOfMemoryError` @[L3dedb0..L3dedd4] goto L3dedd6;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.engine.DecodePath` v0 @kind this, `com.bumptech.glide.load.data.DataRewinder` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object, `com.bumptech.glide.load.engine.DecodePath$a` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.decode:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;Lcom/bumptech/glide/load/engine/DecodePath$a;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;

  #L3decf8.  call temp:= `a`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.a:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3decfe.  v1:= temp @kind object;
  #L3ded00.  call temp:= `a`(v5, v1) @signature `Lcom/bumptech/glide/load/engine/DecodePath$a;.a:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3ded06.  v1:= temp @kind object;
  #L3ded08.  v2:= v0.`com.bumptech.glide.load.engine.DecodePath.c` @type ^`com.bumptech.glide.load.resource.transcode.ResourceTranscoder` @kind object;
  #L3ded0c.  call temp:= `transcode`(v2, v1, v4) @signature `Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;.transcode:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3ded12.  v1:= temp @kind object;
  #L3ded14.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.DecodePath` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dee70.  v0:= new `java.lang.StringBuilder`;
  #L3dee74.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dee7a.  v1:= "DecodePath{ dataClass=" @kind object;
  #L3dee7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dee84.  v1:= v2.`com.bumptech.glide.load.engine.DecodePath.a` @type ^`java.lang.Class` @kind object;
  #L3dee88.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dee8e.  v1:= ", decoders=" @kind object;
  #L3dee92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dee98.  v1:= v2.`com.bumptech.glide.load.engine.DecodePath.b` @type ^`java.util.List` @kind object;
  #L3dee9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3deea2.  v1:= ", transcoder=" @kind object;
  #L3deea6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3deeac.  v1:= v2.`com.bumptech.glide.load.engine.DecodePath.c` @type ^`com.bumptech.glide.load.resource.transcode.ResourceTranscoder` @kind object;
  #L3deeb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3deeb6.  v1:= 125I;
  #L3deeba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3deec0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3deec6.  v0:= temp @kind object;
  #L3deec8.  return v0 @kind object;
}
