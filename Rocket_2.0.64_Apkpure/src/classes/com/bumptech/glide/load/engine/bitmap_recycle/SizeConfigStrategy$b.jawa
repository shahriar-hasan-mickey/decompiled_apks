record `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.bitmap_recycle.e` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @AccessFlag ;
  `android.graphics.Bitmap$Config` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e3f5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e3f62.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` := v1 @kind object;
  #L3e3f66.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e3f94.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` @kind object;
  #L3e3f98.  call `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/e;)V` @kind virtual;
  #L3e3f9e.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v0 @kind this, `int` v1 , `android.graphics.Bitmap$Config` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.b:(ILandroid/graphics/Bitmap$Config;)V` @AccessFlag PUBLIC {
    temp;

  #L3e3f78.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int` := v1;
  #L3e3f7c.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @type ^`android.graphics.Bitmap$Config` := v2 @kind object;
  #L3e3f80.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e3ec4.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` @kind boolean;
  #L3e3ec8.  v1:= 0I;
  #L3e3eca.  if v0 == 0 then goto L3e3ef4;
  #L3e3ece.  v4:= (`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b`) v4 @kind object;
  #L3e3ed2.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3e3ed6.  v2:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3e3eda.  if v0 != v2 then goto L3e3ef4;
  #L3e3ede.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e3ee2.  v4:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e3ee6.  call temp:= `bothNullOrEqual`(v0, v4) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e3eec.  v4:= temp;
  #L3e3eee.  if v4 == 0 then goto L3e3ef4;
  #L3e3ef2.  v1:= 1I;
  #L3e3ef4.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e3f08.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3e3f0c.  v0:= v0 * 31;
  #L3e3f10.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e3f14.  if v1 == 0 then goto L3e3f22;
  #L3e3f18.  call temp:= `hashCode`(v1) @signature `Landroid/graphics/Bitmap$Config;.hashCode:()I` @kind virtual;
  #L3e3f1e.  v1:= temp;
  #L3e3f20.  goto L3e3f24;
  #L3e3f22.  v1:= 0I;
  #L3e3f24.  v0:= v0 + v1 @kind int;
  #L3e3f26.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e3f38.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3e3f3c.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e3f40.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.c:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L3e3f46.  v0:= temp @kind object;
  #L3e3f48.  return v0 @kind object;
}
