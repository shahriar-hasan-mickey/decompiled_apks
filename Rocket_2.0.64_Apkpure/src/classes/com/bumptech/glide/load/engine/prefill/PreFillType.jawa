record `com.bumptech.glide.load.engine.prefill.PreFillType` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `com.bumptech.glide.load.engine.prefill.PreFillType.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.prefill.PreFillType.b` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Bitmap$Config` `com.bumptech.glide.load.engine.prefill.PreFillType.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.prefill.PreFillType.d` @AccessFlag PRIVATE_FINAL;
}
global `android.graphics.Bitmap$Config` `@@com.bumptech.glide.load.engine.prefill.PreFillType.e` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e6af8.  v0:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e6afc.  `@@com.bumptech.glide.load.engine.prefill.PreFillType.e` @type ^`android.graphics.Bitmap$Config` := v0 @kind object;
  #L3e6b00.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.prefill.PreFillType` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object, `int` v5 ) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.<init>:(IILandroid/graphics/Bitmap$Config;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e6b14.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e6b1a.  v0:= "Config must not be null" @kind object;
  #L3e6b1e.  call temp:= `checkNotNull`(v4, v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3e6b24.  v4:= temp @kind object;
  #L3e6b26.  v4:= (`android.graphics.Bitmap$Config`) v4 @kind object;
  #L3e6b2a.  v1.`com.bumptech.glide.load.engine.prefill.PreFillType.c` @type ^`android.graphics.Bitmap$Config` := v4 @kind object;
  #L3e6b2e.  v1.`com.bumptech.glide.load.engine.prefill.PreFillType.a` @type ^`int` := v2;
  #L3e6b32.  v1.`com.bumptech.glide.load.engine.prefill.PreFillType.b` @type ^`int` := v3;
  #L3e6b36.  v1.`com.bumptech.glide.load.engine.prefill.PreFillType.d` @type ^`int` := v5;
  #L3e6b3a.  return @kind void;
}
procedure `android.graphics.Bitmap$Config` `a`(`com.bumptech.glide.load.engine.prefill.PreFillType` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.a:()Landroid/graphics/Bitmap$Config;` @AccessFlag  {
    temp;
    v0;

  #L3e6988.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillType.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e698c.  return v0 @kind object;
}
procedure `int` `b`(`com.bumptech.glide.load.engine.prefill.PreFillType` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.b:()I` @AccessFlag  {
    temp;
    v0;

  #L3e69f4.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillType.b` @type ^`int`;
  #L3e69f8.  return v0;
}
procedure `int` `c`(`com.bumptech.glide.load.engine.prefill.PreFillType` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.c:()I` @AccessFlag  {
    temp;
    v0;

  #L3e6a0c.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillType.d` @type ^`int`;
  #L3e6a10.  return v0;
}
procedure `int` `d`(`com.bumptech.glide.load.engine.prefill.PreFillType` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.d:()I` @AccessFlag  {
    temp;
    v0;

  #L3e6a24.  v0:= v1.`com.bumptech.glide.load.engine.prefill.PreFillType.a` @type ^`int`;
  #L3e6a28.  return v0;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.prefill.PreFillType` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e69a0.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.prefill.PreFillType` @kind boolean;
  #L3e69a4.  v1:= 0I;
  #L3e69a6.  if v0 == 0 then goto L3e69e0;
  #L3e69aa.  v4:= (`com.bumptech.glide.load.engine.prefill.PreFillType`) v4 @kind object;
  #L3e69ae.  v0:= v3.`com.bumptech.glide.load.engine.prefill.PreFillType.b` @type ^`int`;
  #L3e69b2.  v2:= v4.`com.bumptech.glide.load.engine.prefill.PreFillType.b` @type ^`int`;
  #L3e69b6.  if v0 != v2 then goto L3e69e0;
  #L3e69ba.  v0:= v3.`com.bumptech.glide.load.engine.prefill.PreFillType.a` @type ^`int`;
  #L3e69be.  v2:= v4.`com.bumptech.glide.load.engine.prefill.PreFillType.a` @type ^`int`;
  #L3e69c2.  if v0 != v2 then goto L3e69e0;
  #L3e69c6.  v0:= v3.`com.bumptech.glide.load.engine.prefill.PreFillType.d` @type ^`int`;
  #L3e69ca.  v2:= v4.`com.bumptech.glide.load.engine.prefill.PreFillType.d` @type ^`int`;
  #L3e69ce.  if v0 != v2 then goto L3e69e0;
  #L3e69d2.  v0:= v3.`com.bumptech.glide.load.engine.prefill.PreFillType.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e69d6.  v4:= v4.`com.bumptech.glide.load.engine.prefill.PreFillType.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e69da.  if v0 != v4 then goto L3e69e0;
  #L3e69de.  v1:= 1I;
  #L3e69e0.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.prefill.PreFillType` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6a3c.  v0:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.a` @type ^`int`;
  #L3e6a40.  v0:= v0 * 31;
  #L3e6a44.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.b` @type ^`int`;
  #L3e6a48.  v0:= v0 + v1 @kind int;
  #L3e6a4a.  v0:= v0 * 31;
  #L3e6a4e.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e6a52.  call temp:= `hashCode`(v1) @signature `Landroid/graphics/Bitmap$Config;.hashCode:()I` @kind virtual;
  #L3e6a58.  v1:= temp;
  #L3e6a5a.  v0:= v0 + v1 @kind int;
  #L3e6a5c.  v0:= v0 * 31;
  #L3e6a60.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.d` @type ^`int`;
  #L3e6a64.  v0:= v0 + v1 @kind int;
  #L3e6a66.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.prefill.PreFillType` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6a78.  v0:= new `java.lang.StringBuilder`;
  #L3e6a7c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e6a82.  v1:= "PreFillSize{width=" @kind object;
  #L3e6a86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6a8c.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.a` @type ^`int`;
  #L3e6a90.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6a96.  v1:= ", height=" @kind object;
  #L3e6a9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6aa0.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.b` @type ^`int`;
  #L3e6aa4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6aaa.  v1:= ", config=" @kind object;
  #L3e6aae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6ab4.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e6ab8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6abe.  v1:= ", weight=" @kind object;
  #L3e6ac2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6ac8.  v1:= v2.`com.bumptech.glide.load.engine.prefill.PreFillType.d` @type ^`int`;
  #L3e6acc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6ad2.  v1:= 125I;
  #L3e6ad6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6adc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e6ae2.  v0:= temp @kind object;
  #L3e6ae4.  return v0 @kind object;
}
