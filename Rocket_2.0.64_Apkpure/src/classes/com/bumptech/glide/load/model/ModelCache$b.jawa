record `com.bumptech.glide.load.model.ModelCache$b` @kind class @AccessFlag FINAL {
  `int` `com.bumptech.glide.load.model.ModelCache$b.a` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.model.ModelCache$b.b` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.load.model.ModelCache$b.c` @AccessFlag PRIVATE;
}
global `java.util.Queue` `@@com.bumptech.glide.load.model.ModelCache$b.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/model/ModelCache$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e8574.  v0:= 0I;
  #L3e8576.  call temp:= `createQueue`(v0) @signature `Lcom/bumptech/glide/util/Util;.createQueue:(I)Ljava/util/Queue;` @kind static;
  #L3e857c.  v0:= temp @kind object;
  #L3e857e.  `@@com.bumptech.glide.load.model.ModelCache$b.d` @type ^`java.util.Queue` := v0 @kind object;
  #L3e8582.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.ModelCache$b` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/ModelCache$b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3e8594.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e859a.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelCache$b` `a`(`java.lang.Object` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/model/ModelCache$b;.a:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/model/ModelCache$b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3e84ec.  v0:= `@@com.bumptech.glide.load.model.ModelCache$b.d` @type ^`java.util.Queue` @kind object;
  #L3e84f0.  @monitorenter v0
  #L3e84f2.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L3e84f8.  v1:= temp @kind object;
  #L3e84fa.  v1:= (`com.bumptech.glide.load.model.ModelCache$b`) v1 @kind object;
  #L3e84fe.  @monitorexit v0
  #L3e8500.  if v1 != 0 then goto L3e850e;
  #L3e8504.  v1:= new `com.bumptech.glide.load.model.ModelCache$b`;
  #L3e8508.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/model/ModelCache$b;.<init>:()V` @kind direct;
  #L3e850e.  call `b`(v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/ModelCache$b;.b:(Ljava/lang/Object;II)V` @kind direct;
  #L3e8514.  return v1 @kind object;
  #L3e8516.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8518.  @monitorexit v0
  #L3e851a.  throw v2;
  catch `java.lang.Throwable` @[L3e84f2..L3e8500] goto L3e8516;
  catch `java.lang.Throwable` @[L3e8518..L3e851a] goto L3e8516;
}
procedure `void` `b`(`com.bumptech.glide.load.model.ModelCache$b` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/model/ModelCache$b;.b:(Ljava/lang/Object;II)V` @AccessFlag PRIVATE {
    temp;

  #L3e85ac.  v0.`com.bumptech.glide.load.model.ModelCache$b.c` @type ^`java.lang.Object` := v1 @kind object;
  #L3e85b0.  v0.`com.bumptech.glide.load.model.ModelCache$b.b` @type ^`int` := v2;
  #L3e85b4.  v0.`com.bumptech.glide.load.model.ModelCache$b.a` @type ^`int` := v3;
  #L3e85b8.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.model.ModelCache$b` v2 @kind this) @signature `Lcom/bumptech/glide/load/model/ModelCache$b;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e85cc.  v0:= `@@com.bumptech.glide.load.model.ModelCache$b.d` @type ^`java.util.Queue` @kind object;
  #L3e85d0.  @monitorenter v0
  #L3e85d2.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L3e85d8.  @monitorexit v0
  #L3e85da.  return @kind void;
  #L3e85dc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e85de.  @monitorexit v0
  #L3e85e0.  throw v1;
  catch `java.lang.Throwable` @[L3e85d2..L3e85e0] goto L3e85dc;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.model.ModelCache$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelCache$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e849c.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.model.ModelCache$b` @kind boolean;
  #L3e84a0.  v1:= 0I;
  #L3e84a2.  if v0 == 0 then goto L3e84d8;
  #L3e84a6.  v4:= (`com.bumptech.glide.load.model.ModelCache$b`) v4 @kind object;
  #L3e84aa.  v0:= v3.`com.bumptech.glide.load.model.ModelCache$b.b` @type ^`int`;
  #L3e84ae.  v2:= v4.`com.bumptech.glide.load.model.ModelCache$b.b` @type ^`int`;
  #L3e84b2.  if v0 != v2 then goto L3e84d8;
  #L3e84b6.  v0:= v3.`com.bumptech.glide.load.model.ModelCache$b.a` @type ^`int`;
  #L3e84ba.  v2:= v4.`com.bumptech.glide.load.model.ModelCache$b.a` @type ^`int`;
  #L3e84be.  if v0 != v2 then goto L3e84d8;
  #L3e84c2.  v0:= v3.`com.bumptech.glide.load.model.ModelCache$b.c` @type ^`java.lang.Object` @kind object;
  #L3e84c6.  v4:= v4.`com.bumptech.glide.load.model.ModelCache$b.c` @type ^`java.lang.Object` @kind object;
  #L3e84ca.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e84d0.  v4:= temp;
  #L3e84d2.  if v4 == 0 then goto L3e84d8;
  #L3e84d6.  v1:= 1I;
  #L3e84d8.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.model.ModelCache$b` v2 @kind this) @signature `Lcom/bumptech/glide/load/model/ModelCache$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8540.  v0:= v2.`com.bumptech.glide.load.model.ModelCache$b.a` @type ^`int`;
  #L3e8544.  v0:= v0 * 31;
  #L3e8548.  v1:= v2.`com.bumptech.glide.load.model.ModelCache$b.b` @type ^`int`;
  #L3e854c.  v0:= v0 + v1 @kind int;
  #L3e854e.  v0:= v0 * 31;
  #L3e8552.  v1:= v2.`com.bumptech.glide.load.model.ModelCache$b.c` @type ^`java.lang.Object` @kind object;
  #L3e8556.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3e855c.  v1:= temp;
  #L3e855e.  v0:= v0 + v1 @kind int;
  #L3e8560.  return v0;
}
