record `com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.ModelLoaderFactory` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/stream/UrlLoader$StreamFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eaa70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eaa76.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `build`(`com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory` v3 @kind this, `com.bumptech.glide.load.model.MultiModelLoaderFactory` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/UrlLoader$StreamFactory;.build:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eaa44.  v0:= new `com.bumptech.glide.load.model.stream.UrlLoader`;
  #L3eaa48.  v1:= constclass @type ^`com.bumptech.glide.load.model.GlideUrl` @kind object;
  #L3eaa4c.  v2:= constclass @type ^`java.io.InputStream` @kind object;
  #L3eaa50.  call temp:= `build`(v4, v1, v2) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.build:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;` @kind virtual;
  #L3eaa56.  v4:= temp @kind object;
  #L3eaa58.  call `<init>`(v0, v4) @signature `Lcom/bumptech/glide/load/model/stream/UrlLoader;.<init>:(Lcom/bumptech/glide/load/model/ModelLoader;)V` @kind direct;
  #L3eaa5e.  return v0 @kind object;
}
procedure `void` `teardown`(`com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/stream/UrlLoader$StreamFactory;.teardown:()V` @AccessFlag PUBLIC {
    temp;

  #L3eaa88.  return @kind void;
}
