record `com.bumptech.glide.load.model.LazyHeaders` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.model.Headers` @kind interface {
  `java.util.Map` `com.bumptech.glide.load.model.LazyHeaders.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.model.LazyHeaders.b` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.LazyHeaders` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/LazyHeaders;.<init>:(Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e81c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e81ca.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L3e81d0.  v1:= temp @kind object;
  #L3e81d2.  v0.`com.bumptech.glide.load.model.LazyHeaders.a` @type ^`java.util.Map` := v1 @kind object;
  #L3e81d6.  return @kind void;
}
procedure `java.lang.String` `a`(`com.bumptech.glide.load.model.LazyHeaders` v5 @kind this, `java.util.List` v6 @kind object) @signature `Lcom/bumptech/glide/load/model/LazyHeaders;.a:(Ljava/util/List;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e803c.  v0:= new `java.lang.StringBuilder`;
  #L3e8040.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e8046.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e804c.  v1:= temp;
  #L3e804e.  v2:= 0I;
  #L3e8050.  if v2 >= v1 then goto L3e809a;
  #L3e8054.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e805a.  v3:= temp @kind object;
  #L3e805c.  v3:= (`com.bumptech.glide.load.model.LazyHeaderFactory`) v3 @kind object;
  #L3e8060.  call temp:= `buildHeader`(v3) @signature `Lcom/bumptech/glide/load/model/LazyHeaderFactory;.buildHeader:()Ljava/lang/String;` @kind interface;
  #L3e8066.  v3:= temp @kind object;
  #L3e8068.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3e806e.  v4:= temp;
  #L3e8070.  if v4 != 0 then goto L3e8094;
  #L3e8074.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e807a.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e8080.  v3:= temp;
  #L3e8082.  v3:= v3 + -1;
  #L3e8086.  if v2 == v3 then goto L3e8094;
  #L3e808a.  v3:= 44I;
  #L3e808e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8094.  v2:= v2 + 1;
  #L3e8098.  goto L3e8050;
  #L3e809a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e80a0.  v6:= temp @kind object;
  #L3e80a2.  return v6 @kind object;
}
procedure `java.util.Map` `b`(`com.bumptech.glide.load.model.LazyHeaders` v5 @kind this) @signature `Lcom/bumptech/glide/load/model/LazyHeaders;.b:()Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e80f8.  v0:= new `java.util.HashMap`;
  #L3e80fc.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e8102.  v1:= v5.`com.bumptech.glide.load.model.LazyHeaders.a` @type ^`java.util.Map` @kind object;
  #L3e8106.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3e810c.  v1:= temp @kind object;
  #L3e810e.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e8114.  v1:= temp @kind object;
  #L3e8116.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e811c.  v2:= temp;
  #L3e811e.  if v2 == 0 then goto L3e815e;
  #L3e8122.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e8128.  v2:= temp @kind object;
  #L3e812a.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L3e812e.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3e8134.  v3:= temp @kind object;
  #L3e8136.  v3:= (`java.util.List`) v3 @kind object;
  #L3e813a.  call temp:= `a`(v5, v3) @signature `Lcom/bumptech/glide/load/model/LazyHeaders;.a:(Ljava/util/List;)Ljava/lang/String;` @kind direct;
  #L3e8140.  v3:= temp @kind object;
  #L3e8142.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3e8148.  v4:= temp;
  #L3e814a.  if v4 != 0 then goto L3e8116;
  #L3e814e.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3e8154.  v2:= temp @kind object;
  #L3e8156.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e815c.  goto L3e8116;
  #L3e815e.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.model.LazyHeaders` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/LazyHeaders;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7fe8.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.model.LazyHeaders` @kind boolean;
  #L3e7fec.  if v0 == 0 then goto L3e8006;
  #L3e7ff0.  v2:= (`com.bumptech.glide.load.model.LazyHeaders`) v2 @kind object;
  #L3e7ff4.  v0:= v1.`com.bumptech.glide.load.model.LazyHeaders.a` @type ^`java.util.Map` @kind object;
  #L3e7ff8.  v2:= v2.`com.bumptech.glide.load.model.LazyHeaders.a` @type ^`java.util.Map` @kind object;
  #L3e7ffc.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3e8002.  v2:= temp;
  #L3e8004.  return v2;
  #L3e8006.  v2:= 0I;
  #L3e8008.  return v2;
}
procedure `java.util.Map` `getHeaders`(`com.bumptech.glide.load.model.LazyHeaders` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/LazyHeaders;.getHeaders:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8170.  v0:= v1.`com.bumptech.glide.load.model.LazyHeaders.b` @type ^`java.util.Map` @kind object;
  #L3e8174.  if v0 != 0 then goto L3e81a0;
  #L3e8178.  @monitorenter v1
  #L3e817a.  v0:= v1.`com.bumptech.glide.load.model.LazyHeaders.b` @type ^`java.util.Map` @kind object;
  #L3e817e.  if v0 != 0 then goto L3e8196;
  #L3e8182.  call temp:= `b`(v1) @signature `Lcom/bumptech/glide/load/model/LazyHeaders;.b:()Ljava/util/Map;` @kind direct;
  #L3e8188.  v0:= temp @kind object;
  #L3e818a.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L3e8190.  v0:= temp @kind object;
  #L3e8192.  v1.`com.bumptech.glide.load.model.LazyHeaders.b` @type ^`java.util.Map` := v0 @kind object;
  #L3e8196.  @monitorexit v1
  #L3e8198.  goto L3e81a0;
  #L3e819a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e819c.  @monitorexit v1
  #L3e819e.  throw v0;
  #L3e81a0.  v0:= v1.`com.bumptech.glide.load.model.LazyHeaders.b` @type ^`java.util.Map` @kind object;
  #L3e81a4.  return v0 @kind object;
  catch `java.lang.Throwable` @[L3e817a..L3e819e] goto L3e819a;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.model.LazyHeaders` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/LazyHeaders;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e801c.  v0:= v1.`com.bumptech.glide.load.model.LazyHeaders.a` @type ^`java.util.Map` @kind object;
  #L3e8020.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L3e8026.  v0:= temp;
  #L3e8028.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.model.LazyHeaders` v2 @kind this) @signature `Lcom/bumptech/glide/load/model/LazyHeaders;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e80b4.  v0:= new `java.lang.StringBuilder`;
  #L3e80b8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e80be.  v1:= "LazyHeaders{headers=" @kind object;
  #L3e80c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e80c8.  v1:= v2.`com.bumptech.glide.load.model.LazyHeaders.a` @type ^`java.util.Map` @kind object;
  #L3e80cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e80d2.  v1:= 125I;
  #L3e80d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e80dc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e80e2.  v0:= temp @kind object;
  #L3e80e4.  return v0 @kind object;
}
