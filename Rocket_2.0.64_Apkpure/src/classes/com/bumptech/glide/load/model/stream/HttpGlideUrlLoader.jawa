record `com.bumptech.glide.load.model.stream.HttpGlideUrlLoader` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.ModelLoader` @kind interface {
  `com.bumptech.glide.load.model.ModelCache` `com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.a` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.Option` `@@com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.TIMEOUT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/model/stream/HttpGlideUrlLoader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ea26c.  v0:= 2500I;
  #L3ea270.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ea276.  v0:= temp @kind object;
  #L3ea278.  v1:= "com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.Timeout" @kind object;
  #L3ea27c.  call temp:= `memory`(v1, v0) @signature `Lcom/bumptech/glide/load/Option;.memory:(Ljava/lang/String;Ljava/lang/Object;)Lcom/bumptech/glide/load/Option;` @kind static;
  #L3ea282.  v0:= temp @kind object;
  #L3ea284.  `@@com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.TIMEOUT` @type ^`com.bumptech.glide.load.Option` := v0 @kind object;
  #L3ea288.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.stream.HttpGlideUrlLoader` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/stream/HttpGlideUrlLoader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ea29c.  v0:= 0I;
  #L3ea29e.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/load/model/stream/HttpGlideUrlLoader;.<init>:(Lcom/bumptech/glide/load/model/ModelCache;)V` @kind direct;
  #L3ea2a4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.stream.HttpGlideUrlLoader` v0 @kind this, `com.bumptech.glide.load.model.ModelCache` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/HttpGlideUrlLoader;.<init>:(Lcom/bumptech/glide/load/model/ModelCache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ea2b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ea2be.  v0.`com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.a` @type ^`com.bumptech.glide.load.model.ModelCache` := v1 @kind object;
  #L3ea2c2.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.stream.HttpGlideUrlLoader` v0 @kind this, `com.bumptech.glide.load.model.GlideUrl` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/HttpGlideUrlLoader;.buildLoadData:(Lcom/bumptech/glide/load/model/GlideUrl;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC {
    temp;

  #L3ea1e4.  v2:= v0.`com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.a` @type ^`com.bumptech.glide.load.model.ModelCache` @kind object;
  #L3ea1e8.  if v2 == 0 then goto L3ea20c;
  #L3ea1ec.  v3:= 0I;
  #L3ea1ee.  call temp:= `get`(v2, v1, v3, v3) @signature `Lcom/bumptech/glide/load/model/ModelCache;.get:(Ljava/lang/Object;II)Ljava/lang/Object;` @kind virtual;
  #L3ea1f4.  v2:= temp @kind object;
  #L3ea1f6.  v2:= (`com.bumptech.glide.load.model.GlideUrl`) v2 @kind object;
  #L3ea1fa.  if v2 != 0 then goto L3ea20a;
  #L3ea1fe.  v2:= v0.`com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.a` @type ^`com.bumptech.glide.load.model.ModelCache` @kind object;
  #L3ea202.  call `put`(v2, v1, v3, v3, v1) @signature `Lcom/bumptech/glide/load/model/ModelCache;.put:(Ljava/lang/Object;IILjava/lang/Object;)V` @kind virtual;
  #L3ea208.  goto L3ea20c;
  #L3ea20a.  v1:= v2 @kind object;
  #L3ea20c.  v2:= `@@com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.TIMEOUT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3ea210.  call temp:= `get`(v4, v2) @signature `Lcom/bumptech/glide/load/Options;.get:(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;` @kind virtual;
  #L3ea216.  v2:= temp @kind object;
  #L3ea218.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L3ea21c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3ea222.  v2:= temp;
  #L3ea224.  v3:= new `com.bumptech.glide.load.model.ModelLoader$LoadData`;
  #L3ea228.  v4:= new `com.bumptech.glide.load.data.HttpUrlFetcher`;
  #L3ea22c.  call `<init>`(v4, v1, v2) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.<init>:(Lcom/bumptech/glide/load/model/GlideUrl;I)V` @kind direct;
  #L3ea232.  call `<init>`(v3, v1, v4) @signature `Lcom/bumptech/glide/load/model/ModelLoader$LoadData;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/data/DataFetcher;)V` @kind direct;
  #L3ea238.  return v3 @kind object;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.stream.HttpGlideUrlLoader` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/HttpGlideUrlLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ea24c.  v1:= (`com.bumptech.glide.load.model.GlideUrl`) v1 @kind object;
  #L3ea250.  call temp:= `buildLoadData`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/stream/HttpGlideUrlLoader;.buildLoadData:(Lcom/bumptech/glide/load/model/GlideUrl;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @kind virtual;
  #L3ea256.  v1:= temp @kind object;
  #L3ea258.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.model.stream.HttpGlideUrlLoader` v0 @kind this, `com.bumptech.glide.load.model.GlideUrl` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/HttpGlideUrlLoader;.handles:(Lcom/bumptech/glide/load/model/GlideUrl;)Z` @AccessFlag PUBLIC {
    temp;

  #L3ea1b0.  v1:= 1I;
  #L3ea1b2.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.model.stream.HttpGlideUrlLoader` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/HttpGlideUrlLoader;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ea1c4.  v1:= (`com.bumptech.glide.load.model.GlideUrl`) v1 @kind object;
  #L3ea1c8.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/model/stream/HttpGlideUrlLoader;.handles:(Lcom/bumptech/glide/load/model/GlideUrl;)Z` @kind virtual;
  #L3ea1ce.  v1:= temp;
  #L3ea1d0.  return v1;
}
