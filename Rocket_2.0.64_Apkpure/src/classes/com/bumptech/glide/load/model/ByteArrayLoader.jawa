record `com.bumptech.glide.load.model.ByteArrayLoader` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.ModelLoader` @kind interface {
  `com.bumptech.glide.load.model.ByteArrayLoader$Converter` `com.bumptech.glide.load.model.ByteArrayLoader.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.ByteArrayLoader` v0 @kind this, `com.bumptech.glide.load.model.ByteArrayLoader$Converter` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader;.<init>:(Lcom/bumptech/glide/load/model/ByteArrayLoader$Converter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e6ff8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e6ffe.  v0.`com.bumptech.glide.load.model.ByteArrayLoader.a` @type ^`com.bumptech.glide.load.model.ByteArrayLoader$Converter` := v1 @kind object;
  #L3e7002.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.ByteArrayLoader` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e6fd8.  v1:= (`byte`[]) v1 @kind object;
  #L3e6fdc.  call temp:= `buildLoadData`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader;.buildLoadData:([BIILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @kind virtual;
  #L3e6fe2.  v1:= temp @kind object;
  #L3e6fe4.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.ByteArrayLoader` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.Options` v5 @kind object) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader;.buildLoadData:([BIILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6fa4.  v3:= new `com.bumptech.glide.load.model.ModelLoader$LoadData`;
  #L3e6fa8.  v4:= new `com.bumptech.glide.signature.ObjectKey`;
  #L3e6fac.  call `<init>`(v4, v2) @signature `Lcom/bumptech/glide/signature/ObjectKey;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e6fb2.  v5:= new `com.bumptech.glide.load.model.ByteArrayLoader$a`;
  #L3e6fb6.  v0:= v1.`com.bumptech.glide.load.model.ByteArrayLoader.a` @type ^`com.bumptech.glide.load.model.ByteArrayLoader$Converter` @kind object;
  #L3e6fba.  call `<init>`(v5, v2, v0) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader$a;.<init>:([BLcom/bumptech/glide/load/model/ByteArrayLoader$Converter;)V` @kind direct;
  #L3e6fc0.  call `<init>`(v3, v4, v5) @signature `Lcom/bumptech/glide/load/model/ModelLoader$LoadData;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/data/DataFetcher;)V` @kind direct;
  #L3e6fc6.  return v3 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.model.ByteArrayLoader` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e6f84.  v1:= (`byte`[]) v1 @kind object;
  #L3e6f88.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader;.handles:([B)Z` @kind virtual;
  #L3e6f8e.  v1:= temp;
  #L3e6f90.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.model.ByteArrayLoader` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader;.handles:([B)Z` @AccessFlag PUBLIC {
    temp;

  #L3e6f70.  v1:= 1I;
  #L3e6f72.  return v1;
}
