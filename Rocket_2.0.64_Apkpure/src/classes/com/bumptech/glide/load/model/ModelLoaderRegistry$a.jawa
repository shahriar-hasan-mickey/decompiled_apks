record `com.bumptech.glide.load.model.ModelLoaderRegistry$a` @kind class @AccessFlag  {
  `java.util.Map` `com.bumptech.glide.load.model.ModelLoaderRegistry$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.ModelLoaderRegistry$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e8764.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e876a.  v0:= new `java.util.HashMap`;
  #L3e876e.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3e8774.  v1.`com.bumptech.glide.load.model.ModelLoaderRegistry$a.a` @type ^`java.util.Map` := v0 @kind object;
  #L3e8778.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.model.ModelLoaderRegistry$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e878c.  v0:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry$a.a` @type ^`java.util.Map` @kind object;
  #L3e8790.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3e8796.  return @kind void;
}
procedure `java.util.List` `b`(`com.bumptech.glide.load.model.ModelLoaderRegistry$a` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.b:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8734.  v0:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry$a.a` @type ^`java.util.Map` @kind object;
  #L3e8738.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e873e.  v2:= temp @kind object;
  #L3e8740.  v2:= (`com.bumptech.glide.load.model.ModelLoaderRegistry$a$a`) v2 @kind object;
  #L3e8744.  if v2 != 0 then goto L3e874c;
  #L3e8748.  v2:= 0I;
  #L3e874a.  goto L3e8750;
  #L3e874c.  v2:= v2.`com.bumptech.glide.load.model.ModelLoaderRegistry$a$a.a` @type ^`java.util.List` @kind object;
  #L3e8750.  return v2 @kind object;
}
procedure `void` `c`(`com.bumptech.glide.load.model.ModelLoaderRegistry$a` v2 @kind this, `java.lang.Class` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.c:(Ljava/lang/Class;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e87a8.  v0:= v2.`com.bumptech.glide.load.model.ModelLoaderRegistry$a.a` @type ^`java.util.Map` @kind object;
  #L3e87ac.  v1:= new `com.bumptech.glide.load.model.ModelLoaderRegistry$a$a`;
  #L3e87b0.  call `<init>`(v1, v4) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3e87b6.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e87bc.  v4:= temp @kind object;
  #L3e87be.  v4:= (`com.bumptech.glide.load.model.ModelLoaderRegistry$a$a`) v4 @kind object;
  #L3e87c2.  if v4 != 0 then goto L3e87c8;
  #L3e87c6.  return @kind void;
  #L3e87c8.  v4:= new `java.lang.IllegalStateException`;
  #L3e87cc.  v0:= new `java.lang.StringBuilder`;
  #L3e87d0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e87d6.  v1:= "Already cached loaders for model: " @kind object;
  #L3e87da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e87e0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e87e6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e87ec.  v3:= temp @kind object;
  #L3e87ee.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e87f4.  throw v4;
}
