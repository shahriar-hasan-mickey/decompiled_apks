record `com.bumptech.glide.load.model.ModelLoaderRegistry` @kind class @AccessFlag PUBLIC {
  `com.bumptech.glide.load.model.MultiModelLoaderFactory` `com.bumptech.glide.load.model.ModelLoaderRegistry.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.model.ModelLoaderRegistry$a` `com.bumptech.glide.load.model.ModelLoaderRegistry.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v1 @kind this, `androidx.core.util.Pools$Pool` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.<init>:(Landroidx/core/util/Pools$Pool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e8988.  v0:= new `com.bumptech.glide.load.model.MultiModelLoaderFactory`;
  #L3e898c.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.<init>:(Landroidx/core/util/Pools$Pool;)V` @kind direct;
  #L3e8992.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.<init>:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;)V` @kind direct;
  #L3e8998.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v1 @kind this, `com.bumptech.glide.load.model.MultiModelLoaderFactory` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.<init>:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3e89ac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e89b2.  v0:= new `com.bumptech.glide.load.model.ModelLoaderRegistry$a`;
  #L3e89b6.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.<init>:()V` @kind direct;
  #L3e89bc.  v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.b` @type ^`com.bumptech.glide.load.model.ModelLoaderRegistry$a` := v0 @kind object;
  #L3e89c0.  v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.a` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory` := v2 @kind object;
  #L3e89c4.  return @kind void;
}
procedure `java.lang.Class` `a`(`java.lang.Object` v0 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.a:(Ljava/lang/Object;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3e883c.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e8842.  v0:= temp @kind object;
  #L3e8844.  return v0 @kind object;
}
procedure `java.util.List` `b`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.b:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e8930.  @monitorenter v2
  #L3e8932.  v0:= v2.`com.bumptech.glide.load.model.ModelLoaderRegistry.b` @type ^`com.bumptech.glide.load.model.ModelLoaderRegistry$a` @kind object;
  #L3e8936.  call temp:= `b`(v0, v3) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.b:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L3e893c.  v0:= temp @kind object;
  #L3e893e.  if v0 != 0 then goto L3e8960;
  #L3e8942.  v0:= v2.`com.bumptech.glide.load.model.ModelLoaderRegistry.a` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory` @kind object;
  #L3e8946.  call temp:= `d`(v0, v3) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.d:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L3e894c.  v0:= temp @kind object;
  #L3e894e.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3e8954.  v0:= temp @kind object;
  #L3e8956.  v1:= v2.`com.bumptech.glide.load.model.ModelLoaderRegistry.b` @type ^`com.bumptech.glide.load.model.ModelLoaderRegistry$a` @kind object;
  #L3e895a.  call `c`(v1, v3, v0) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.c:(Ljava/lang/Class;Ljava/util/List;)V` @kind virtual;
  #L3e8960.  @monitorexit v2
  #L3e8962.  return v0 @kind object;
  #L3e8964.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8966.  @monitorexit v2
  #L3e8968.  throw v3;
  catch `java.lang.Throwable` @[L3e8932..L3e8960] goto L3e8964;
}
procedure `void` `c`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.c:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e8ad8.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e8ade.  v2:= temp @kind object;
  #L3e8ae0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e8ae6.  v0:= temp;
  #L3e8ae8.  if v0 == 0 then goto L3e8b00;
  #L3e8aec.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e8af2.  v0:= temp @kind object;
  #L3e8af4.  v0:= (`com.bumptech.glide.load.model.ModelLoaderFactory`) v0 @kind object;
  #L3e8af8.  call `teardown`(v0) @signature `Lcom/bumptech/glide/load/model/ModelLoaderFactory;.teardown:()V` @kind interface;
  #L3e8afe.  goto L3e8ae0;
  #L3e8b00.  return @kind void;
}
procedure `void` `append`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.model.ModelLoaderFactory` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.append:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e89d8.  @monitorenter v1
  #L3e89da.  v0:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.a` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory` @kind object;
  #L3e89de.  call `b`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.b:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @kind virtual;
  #L3e89e4.  v2:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.b` @type ^`com.bumptech.glide.load.model.ModelLoaderRegistry$a` @kind object;
  #L3e89e8.  call `a`(v2) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.a:()V` @kind virtual;
  #L3e89ee.  @monitorexit v1
  #L3e89f0.  return @kind void;
  #L3e89f2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e89f4.  @monitorexit v1
  #L3e89f6.  throw v2;
  catch `java.lang.Throwable` @[L3e89da..L3e89ee] goto L3e89f2;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `build`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.build:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8808.  @monitorenter v1
  #L3e880a.  v0:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.a` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory` @kind object;
  #L3e880e.  call temp:= `build`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.build:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;` @kind virtual;
  #L3e8814.  v2:= temp @kind object;
  #L3e8816.  @monitorexit v1
  #L3e8818.  return v2 @kind object;
  #L3e881a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e881c.  @monitorexit v1
  #L3e881e.  throw v2;
  catch `java.lang.Throwable` @[L3e880a..L3e8816] goto L3e881a;
}
procedure `java.util.List` `getDataClasses`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.getDataClasses:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8858.  @monitorenter v1
  #L3e885a.  v0:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.a` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory` @kind object;
  #L3e885e.  call temp:= `f`(v0, v2) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.f:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L3e8864.  v2:= temp @kind object;
  #L3e8866.  @monitorexit v1
  #L3e8868.  return v2 @kind object;
  #L3e886a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e886c.  @monitorexit v1
  #L3e886e.  throw v2;
  catch `java.lang.Throwable` @[L3e885a..L3e8866] goto L3e886a;
}
procedure `java.util.List` `getModelLoaders`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.getModelLoaders:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e888c.  call temp:= `a`(v9) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.a:(Ljava/lang/Object;)Ljava/lang/Class;` @kind static;
  #L3e8892.  v0:= temp @kind object;
  #L3e8894.  call temp:= `b`(v8, v0) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.b:(Ljava/lang/Class;)Ljava/util/List;` @kind direct;
  #L3e889a.  v0:= temp @kind object;
  #L3e889c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e88a2.  v1:= temp;
  #L3e88a4.  if v1 != 0 then goto L3e8914;
  #L3e88a8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e88ae.  v1:= temp;
  #L3e88b0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3e88b6.  v2:= temp @kind object;
  #L3e88b8.  v3:= 0I;
  #L3e88ba.  v4:= 1I;
  #L3e88bc.  v5:= 0I;
  #L3e88be.  if v5 >= v1 then goto L3e88fa;
  #L3e88c2.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e88c8.  v6:= temp @kind object;
  #L3e88ca.  v6:= (`com.bumptech.glide.load.model.ModelLoader`) v6 @kind object;
  #L3e88ce.  call temp:= `handles`(v6, v9) @signature `Lcom/bumptech/glide/load/model/ModelLoader;.handles:(Ljava/lang/Object;)Z` @kind interface;
  #L3e88d4.  v7:= temp;
  #L3e88d6.  if v7 == 0 then goto L3e88f4;
  #L3e88da.  if v4 == 0 then goto L3e88ee;
  #L3e88de.  v2:= new `java.util.ArrayList`;
  #L3e88e2.  v4:= v1 - v5 @kind int;
  #L3e88e6.  call `<init>`(v2, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3e88ec.  v4:= 0I;
  #L3e88ee.  call temp:= `add`(v2, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e88f4.  v5:= v5 + 1;
  #L3e88f8.  goto L3e88be;
  #L3e88fa.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e8900.  v1:= temp;
  #L3e8902.  if v1 != 0 then goto L3e8908;
  #L3e8906.  return v2 @kind object;
  #L3e8908.  v1:= new `com.bumptech.glide.Registry$NoModelLoaderAvailableException`;
  #L3e890c.  call `<init>`(v1, v9, v0) @signature `Lcom/bumptech/glide/Registry$NoModelLoaderAvailableException;.<init>:(Ljava/lang/Object;Ljava/util/List;)V` @kind direct;
  #L3e8912.  throw v1;
  #L3e8914.  v0:= new `com.bumptech.glide.Registry$NoModelLoaderAvailableException`;
  #L3e8918.  call `<init>`(v0, v9) @signature `Lcom/bumptech/glide/Registry$NoModelLoaderAvailableException;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e891e.  throw v0;
}
procedure `void` `prepend`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.model.ModelLoaderFactory` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.prepend:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8a14.  @monitorenter v1
  #L3e8a16.  v0:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.a` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory` @kind object;
  #L3e8a1a.  call `h`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.h:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @kind virtual;
  #L3e8a20.  v2:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.b` @type ^`com.bumptech.glide.load.model.ModelLoaderRegistry$a` @kind object;
  #L3e8a24.  call `a`(v2) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.a:()V` @kind virtual;
  #L3e8a2a.  @monitorexit v1
  #L3e8a2c.  return @kind void;
  #L3e8a2e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8a30.  @monitorexit v1
  #L3e8a32.  throw v2;
  catch `java.lang.Throwable` @[L3e8a16..L3e8a2a] goto L3e8a2e;
}
procedure `void` `remove`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.remove:(Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8a50.  @monitorenter v1
  #L3e8a52.  v0:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.a` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory` @kind object;
  #L3e8a56.  call temp:= `i`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.i:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L3e8a5c.  v2:= temp @kind object;
  #L3e8a5e.  call `c`(v1, v2) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.c:(Ljava/util/List;)V` @kind direct;
  #L3e8a64.  v2:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.b` @type ^`com.bumptech.glide.load.model.ModelLoaderRegistry$a` @kind object;
  #L3e8a68.  call `a`(v2) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.a:()V` @kind virtual;
  #L3e8a6e.  @monitorexit v1
  #L3e8a70.  return @kind void;
  #L3e8a72.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8a74.  @monitorexit v1
  #L3e8a76.  throw v2;
  catch `java.lang.Throwable` @[L3e8a52..L3e8a6e] goto L3e8a72;
}
procedure `void` `replace`(`com.bumptech.glide.load.model.ModelLoaderRegistry` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.model.ModelLoaderFactory` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.replace:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8a94.  @monitorenter v1
  #L3e8a96.  v0:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.a` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory` @kind object;
  #L3e8a9a.  call temp:= `j`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.j:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)Ljava/util/List;` @kind virtual;
  #L3e8aa0.  v2:= temp @kind object;
  #L3e8aa2.  call `c`(v1, v2) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry;.c:(Ljava/util/List;)V` @kind direct;
  #L3e8aa8.  v2:= v1.`com.bumptech.glide.load.model.ModelLoaderRegistry.b` @type ^`com.bumptech.glide.load.model.ModelLoaderRegistry$a` @kind object;
  #L3e8aac.  call `a`(v2) @signature `Lcom/bumptech/glide/load/model/ModelLoaderRegistry$a;.a:()V` @kind virtual;
  #L3e8ab2.  @monitorexit v1
  #L3e8ab4.  return @kind void;
  #L3e8ab6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8ab8.  @monitorexit v1
  #L3e8aba.  throw v2;
  catch `java.lang.Throwable` @[L3e8a96..L3e8ab2] goto L3e8ab6;
}
