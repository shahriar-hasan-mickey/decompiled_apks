record `com.bumptech.glide.load.model.StringLoader$StreamFactory` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.ModelLoaderFactory` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.StringLoader$StreamFactory` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/StringLoader$StreamFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e9944.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e994a.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `build`(`com.bumptech.glide.load.model.StringLoader$StreamFactory` v3 @kind this, `com.bumptech.glide.load.model.MultiModelLoaderFactory` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/StringLoader$StreamFactory;.build:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9918.  v0:= new `com.bumptech.glide.load.model.StringLoader`;
  #L3e991c.  v1:= constclass @type ^`android.net.Uri` @kind object;
  #L3e9920.  v2:= constclass @type ^`java.io.InputStream` @kind object;
  #L3e9924.  call temp:= `build`(v4, v1, v2) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.build:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;` @kind virtual;
  #L3e992a.  v4:= temp @kind object;
  #L3e992c.  call `<init>`(v0, v4) @signature `Lcom/bumptech/glide/load/model/StringLoader;.<init>:(Lcom/bumptech/glide/load/model/ModelLoader;)V` @kind direct;
  #L3e9932.  return v0 @kind object;
}
procedure `void` `teardown`(`com.bumptech.glide.load.model.StringLoader$StreamFactory` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/StringLoader$StreamFactory;.teardown:()V` @AccessFlag PUBLIC {
    temp;

  #L3e995c.  return @kind void;
}
