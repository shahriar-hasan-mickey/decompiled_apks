record `com.bumptech.glide.load.model.FileLoader$Factory` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.ModelLoaderFactory` @kind interface {
  `com.bumptech.glide.load.model.FileLoader$FileOpener` `com.bumptech.glide.load.model.FileLoader$Factory.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.FileLoader$Factory` v0 @kind this, `com.bumptech.glide.load.model.FileLoader$FileOpener` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/FileLoader$Factory;.<init>:(Lcom/bumptech/glide/load/model/FileLoader$FileOpener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e754c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e7552.  v0.`com.bumptech.glide.load.model.FileLoader$Factory.a` @type ^`com.bumptech.glide.load.model.FileLoader$FileOpener` := v1 @kind object;
  #L3e7556.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `build`(`com.bumptech.glide.load.model.FileLoader$Factory` v1 @kind this, `com.bumptech.glide.load.model.MultiModelLoaderFactory` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/FileLoader$Factory;.build:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e752c.  v2:= new `com.bumptech.glide.load.model.FileLoader`;
  #L3e7530.  v0:= v1.`com.bumptech.glide.load.model.FileLoader$Factory.a` @type ^`com.bumptech.glide.load.model.FileLoader$FileOpener` @kind object;
  #L3e7534.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/model/FileLoader;.<init>:(Lcom/bumptech/glide/load/model/FileLoader$FileOpener;)V` @kind direct;
  #L3e753a.  return v2 @kind object;
}
procedure `void` `teardown`(`com.bumptech.glide.load.model.FileLoader$Factory` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/FileLoader$Factory;.teardown:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3e7568.  return @kind void;
}
