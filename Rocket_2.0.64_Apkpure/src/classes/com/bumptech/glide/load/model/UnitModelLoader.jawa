record `com.bumptech.glide.load.model.UnitModelLoader` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.ModelLoader` @kind interface {
}
global `com.bumptech.glide.load.model.UnitModelLoader` `@@com.bumptech.glide.load.model.UnitModelLoader.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/model/UnitModelLoader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e9c18.  v0:= new `com.bumptech.glide.load.model.UnitModelLoader`;
  #L3e9c1c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/model/UnitModelLoader;.<init>:()V` @kind direct;
  #L3e9c22.  `@@com.bumptech.glide.load.model.UnitModelLoader.a` @type ^`com.bumptech.glide.load.model.UnitModelLoader` := v0 @kind object;
  #L3e9c26.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.UnitModelLoader` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/UnitModelLoader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e9c38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e9c3e.  return @kind void;
}
procedure `com.bumptech.glide.load.model.UnitModelLoader` `getInstance`() @signature `Lcom/bumptech/glide/load/model/UnitModelLoader;.getInstance:()Lcom/bumptech/glide/load/model/UnitModelLoader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e9c00.  v0:= `@@com.bumptech.glide.load.model.UnitModelLoader.a` @type ^`com.bumptech.glide.load.model.UnitModelLoader` @kind object;
  #L3e9c04.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.UnitModelLoader` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/UnitModelLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC {
    temp;

  #L3e9bd0.  v2:= new `com.bumptech.glide.load.model.ModelLoader$LoadData`;
  #L3e9bd4.  v3:= new `com.bumptech.glide.signature.ObjectKey`;
  #L3e9bd8.  call `<init>`(v3, v1) @signature `Lcom/bumptech/glide/signature/ObjectKey;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e9bde.  v4:= new `com.bumptech.glide.load.model.UnitModelLoader$a`;
  #L3e9be2.  call `<init>`(v4, v1) @signature `Lcom/bumptech/glide/load/model/UnitModelLoader$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e9be8.  call `<init>`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/ModelLoader$LoadData;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/data/DataFetcher;)V` @kind direct;
  #L3e9bee.  return v2 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.model.UnitModelLoader` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/UnitModelLoader;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e9bbc.  v1:= 1I;
  #L3e9bbe.  return v1;
}
