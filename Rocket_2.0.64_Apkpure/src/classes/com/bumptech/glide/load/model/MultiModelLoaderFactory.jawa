record `com.bumptech.glide.load.model.MultiModelLoaderFactory` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.bumptech.glide.load.model.MultiModelLoaderFactory.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.model.MultiModelLoaderFactory$c` `com.bumptech.glide.load.model.MultiModelLoaderFactory.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.load.model.MultiModelLoaderFactory.c` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.Pools$Pool` `com.bumptech.glide.load.model.MultiModelLoaderFactory.d` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.model.MultiModelLoaderFactory$c` `@@com.bumptech.glide.load.model.MultiModelLoaderFactory.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.bumptech.glide.load.model.ModelLoader` `@@com.bumptech.glide.load.model.MultiModelLoaderFactory.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e91b8.  v0:= new `com.bumptech.glide.load.model.MultiModelLoaderFactory$c`;
  #L3e91bc.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$c;.<init>:()V` @kind direct;
  #L3e91c2.  `@@com.bumptech.glide.load.model.MultiModelLoaderFactory.e` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory$c` := v0 @kind object;
  #L3e91c6.  v0:= new `com.bumptech.glide.load.model.MultiModelLoaderFactory$a`;
  #L3e91ca.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$a;.<init>:()V` @kind direct;
  #L3e91d0.  `@@com.bumptech.glide.load.model.MultiModelLoaderFactory.f` @type ^`com.bumptech.glide.load.model.ModelLoader` := v0 @kind object;
  #L3e91d4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v1 @kind this, `androidx.core.util.Pools$Pool` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.<init>:(Landroidx/core/util/Pools$Pool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e91e8.  v0:= `@@com.bumptech.glide.load.model.MultiModelLoaderFactory.e` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory$c` @kind object;
  #L3e91ec.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.<init>:(Landroidx/core/util/Pools$Pool;Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$c;)V` @kind direct;
  #L3e91f2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v1 @kind this, `androidx.core.util.Pools$Pool` v2 @kind object, `com.bumptech.glide.load.model.MultiModelLoaderFactory$c` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.<init>:(Landroidx/core/util/Pools$Pool;Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e9204.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e920a.  v0:= new `java.util.ArrayList`;
  #L3e920e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e9214.  v1.`com.bumptech.glide.load.model.MultiModelLoaderFactory.a` @type ^`java.util.List` := v0 @kind object;
  #L3e9218.  v0:= new `java.util.HashSet`;
  #L3e921c.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3e9222.  v1.`com.bumptech.glide.load.model.MultiModelLoaderFactory.c` @type ^`java.util.Set` := v0 @kind object;
  #L3e9226.  v1.`com.bumptech.glide.load.model.MultiModelLoaderFactory.d` @type ^`androidx.core.util.Pools$Pool` := v2 @kind object;
  #L3e922a.  v1.`com.bumptech.glide.load.model.MultiModelLoaderFactory.b` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory$c` := v3 @kind object;
  #L3e922e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.model.ModelLoaderFactory` v4 @kind object, `boolean` v5 ) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e9240.  v0:= new `com.bumptech.glide.load.model.MultiModelLoaderFactory$b`;
  #L3e9244.  call `<init>`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @kind direct;
  #L3e924a.  v2:= v1.`com.bumptech.glide.load.model.MultiModelLoaderFactory.a` @type ^`java.util.List` @kind object;
  #L3e924e.  if v5 == 0 then goto L3e925c;
  #L3e9252.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e9258.  v3:= temp;
  #L3e925a.  goto L3e925e;
  #L3e925c.  v3:= 0I;
  #L3e925e.  call `add`(v2, v3, v0) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L3e9264.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `c`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v0 @kind this, `com.bumptech.glide.load.model.MultiModelLoaderFactory$b` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.c:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PRIVATE {
    temp;

  #L3e8e50.  v1:= v1.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.c` @type ^`com.bumptech.glide.load.model.ModelLoaderFactory` @kind object;
  #L3e8e54.  call temp:= `build`(v1, v0) @signature `Lcom/bumptech/glide/load/model/ModelLoaderFactory;.build:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoader;` @kind interface;
  #L3e8e5a.  v1:= temp @kind object;
  #L3e8e5c.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e8e62.  v1:= temp @kind object;
  #L3e8e64.  v1:= (`com.bumptech.glide.load.model.ModelLoader`) v1 @kind object;
  #L3e8e68.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `e`() @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.e:()Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e8fa4.  v0:= `@@com.bumptech.glide.load.model.MultiModelLoaderFactory.f` @type ^`com.bumptech.glide.load.model.ModelLoader` @kind object;
  #L3e8fa8.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.model.ModelLoaderFactory` `g`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v0 @kind this, `com.bumptech.glide.load.model.MultiModelLoaderFactory$b` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.g:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;` @AccessFlag PRIVATE {
    temp;

  #L3e8fbc.  v1:= v1.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.c` @type ^`com.bumptech.glide.load.model.ModelLoaderFactory` @kind object;
  #L3e8fc0.  return v1 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.model.ModelLoaderFactory` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.b:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @AccessFlag  {
    temp;
    v0;

  #L3e9278.  @monitorenter v1
  #L3e927a.  v0:= 1I;
  #L3e927c.  call `a`(v1, v2, v3, v4, v0) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;Z)V` @kind direct;
  #L3e9282.  @monitorexit v1
  #L3e9284.  return @kind void;
  #L3e9286.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e9288.  @monitorexit v1
  #L3e928a.  throw v2;
  catch `java.lang.Throwable` @[L3e927c..L3e9282] goto L3e9286;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `build`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v7 @kind this, `java.lang.Class` v8 @kind object, `java.lang.Class` v9 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.build:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e8e7c.  @monitorenter v7
  #L3e8e7e.  v0:= new `java.util.ArrayList`;
  #L3e8e82.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e8e88.  v1:= v7.`com.bumptech.glide.load.model.MultiModelLoaderFactory.a` @type ^`java.util.List` @kind object;
  #L3e8e8c.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e8e92.  v1:= temp @kind object;
  #L3e8e94.  v2:= 0I;
  #L3e8e96.  v3:= 1I;
  #L3e8e98.  v4:= 0I;
  #L3e8e9a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e8ea0.  v5:= temp;
  #L3e8ea2.  if v5 == 0 then goto L3e8ef6;
  #L3e8ea6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e8eac.  v5:= temp @kind object;
  #L3e8eae.  v5:= (`com.bumptech.glide.load.model.MultiModelLoaderFactory$b`) v5 @kind object;
  #L3e8eb2.  v6:= v7.`com.bumptech.glide.load.model.MultiModelLoaderFactory.c` @type ^`java.util.Set` @kind object;
  #L3e8eb6.  call temp:= `contains`(v6, v5) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e8ebc.  v6:= temp;
  #L3e8ebe.  if v6 == 0 then goto L3e8ec6;
  #L3e8ec2.  v4:= 1I;
  #L3e8ec4.  goto L3e8e9a;
  #L3e8ec6.  call temp:= `b`(v5, v8, v9) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.b:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind virtual;
  #L3e8ecc.  v6:= temp;
  #L3e8ece.  if v6 == 0 then goto L3e8e9a;
  #L3e8ed2.  v6:= v7.`com.bumptech.glide.load.model.MultiModelLoaderFactory.c` @type ^`java.util.Set` @kind object;
  #L3e8ed6.  call temp:= `add`(v6, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e8edc.  call temp:= `c`(v7, v5) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.c:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;)Lcom/bumptech/glide/load/model/ModelLoader;` @kind direct;
  #L3e8ee2.  v6:= temp @kind object;
  #L3e8ee4.  call temp:= `add`(v0, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e8eea.  v6:= v7.`com.bumptech.glide.load.model.MultiModelLoaderFactory.c` @type ^`java.util.Set` @kind object;
  #L3e8eee.  call temp:= `remove`(v6, v5) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e8ef4.  goto L3e8e9a;
  #L3e8ef6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e8efc.  v1:= temp;
  #L3e8efe.  if v1 <= v3 then goto L3e8f16;
  #L3e8f02.  v8:= v7.`com.bumptech.glide.load.model.MultiModelLoaderFactory.b` @type ^`com.bumptech.glide.load.model.MultiModelLoaderFactory$c` @kind object;
  #L3e8f06.  v9:= v7.`com.bumptech.glide.load.model.MultiModelLoaderFactory.d` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3e8f0a.  call temp:= `a`(v8, v0, v9) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$c;.a:(Ljava/util/List;Landroidx/core/util/Pools$Pool;)Lcom/bumptech/glide/load/model/a;` @kind virtual;
  #L3e8f10.  v8:= temp @kind object;
  #L3e8f12.  @monitorexit v7
  #L3e8f14.  return v8 @kind object;
  #L3e8f16.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e8f1c.  v1:= temp;
  #L3e8f1e.  if v1 != v3 then goto L3e8f32;
  #L3e8f22.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e8f28.  v8:= temp @kind object;
  #L3e8f2a.  v8:= (`com.bumptech.glide.load.model.ModelLoader`) v8 @kind object;
  #L3e8f2e.  @monitorexit v7
  #L3e8f30.  return v8 @kind object;
  #L3e8f32.  if v4 == 0 then goto L3e8f42;
  #L3e8f36.  call temp:= `e`() @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.e:()Lcom/bumptech/glide/load/model/ModelLoader;` @kind static;
  #L3e8f3c.  v8:= temp @kind object;
  #L3e8f3e.  @monitorexit v7
  #L3e8f40.  return v8 @kind object;
  #L3e8f42.  v0:= new `com.bumptech.glide.Registry$NoModelLoaderAvailableException`;
  #L3e8f46.  call `<init>`(v0, v8, v9) @signature `Lcom/bumptech/glide/Registry$NoModelLoaderAvailableException;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L3e8f4c.  throw v0;
  #L3e8f4e.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8f50.  v9:= v7.`com.bumptech.glide.load.model.MultiModelLoaderFactory.c` @type ^`java.util.Set` @kind object;
  #L3e8f54.  call `clear`(v9) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L3e8f5a.  throw v8;
  #L3e8f5c.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8f5e.  @monitorexit v7
  #L3e8f60.  throw v8;
  catch `java.lang.Throwable` @[L3e8e7e..L3e8f12] goto L3e8f4e;
  catch `java.lang.Throwable` @[L3e8f16..L3e8f2e] goto L3e8f4e;
  catch `java.lang.Throwable` @[L3e8f36..L3e8f3e] goto L3e8f4e;
  catch `java.lang.Throwable` @[L3e8f42..L3e8f4e] goto L3e8f4e;
  catch `java.lang.Throwable` @[L3e8f50..L3e8f5c] goto L3e8f5c;
}
procedure `java.util.List` `d`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.d:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8fd4.  @monitorenter v4
  #L3e8fd6.  v0:= new `java.util.ArrayList`;
  #L3e8fda.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e8fe0.  v1:= v4.`com.bumptech.glide.load.model.MultiModelLoaderFactory.a` @type ^`java.util.List` @kind object;
  #L3e8fe4.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e8fea.  v1:= temp @kind object;
  #L3e8fec.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e8ff2.  v2:= temp;
  #L3e8ff4.  if v2 == 0 then goto L3e9046;
  #L3e8ff8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e8ffe.  v2:= temp @kind object;
  #L3e9000.  v2:= (`com.bumptech.glide.load.model.MultiModelLoaderFactory$b`) v2 @kind object;
  #L3e9004.  v3:= v4.`com.bumptech.glide.load.model.MultiModelLoaderFactory.c` @type ^`java.util.Set` @kind object;
  #L3e9008.  call temp:= `contains`(v3, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e900e.  v3:= temp;
  #L3e9010.  if v3 == 0 then goto L3e9016;
  #L3e9014.  goto L3e8fec;
  #L3e9016.  call temp:= `a`(v2, v5) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e901c.  v3:= temp;
  #L3e901e.  if v3 == 0 then goto L3e8fec;
  #L3e9022.  v3:= v4.`com.bumptech.glide.load.model.MultiModelLoaderFactory.c` @type ^`java.util.Set` @kind object;
  #L3e9026.  call temp:= `add`(v3, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e902c.  call temp:= `c`(v4, v2) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.c:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;)Lcom/bumptech/glide/load/model/ModelLoader;` @kind direct;
  #L3e9032.  v3:= temp @kind object;
  #L3e9034.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e903a.  v3:= v4.`com.bumptech.glide.load.model.MultiModelLoaderFactory.c` @type ^`java.util.Set` @kind object;
  #L3e903e.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e9044.  goto L3e8fec;
  #L3e9046.  @monitorexit v4
  #L3e9048.  return v0 @kind object;
  #L3e904a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e904c.  v0:= v4.`com.bumptech.glide.load.model.MultiModelLoaderFactory.c` @type ^`java.util.Set` @kind object;
  #L3e9050.  call `clear`(v0) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L3e9056.  throw v5;
  #L3e9058.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e905a.  @monitorexit v4
  #L3e905c.  throw v5;
  catch `java.lang.Throwable` @[L3e8fd6..L3e9044] goto L3e904a;
  catch `java.lang.Throwable` @[L3e904c..L3e9058] goto L3e9058;
}
procedure `java.util.List` `f`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.f:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e9088.  @monitorenter v4
  #L3e908a.  v0:= new `java.util.ArrayList`;
  #L3e908e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e9094.  v1:= v4.`com.bumptech.glide.load.model.MultiModelLoaderFactory.a` @type ^`java.util.List` @kind object;
  #L3e9098.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e909e.  v1:= temp @kind object;
  #L3e90a0.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e90a6.  v2:= temp;
  #L3e90a8.  if v2 == 0 then goto L3e90e0;
  #L3e90ac.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e90b2.  v2:= temp @kind object;
  #L3e90b4.  v2:= (`com.bumptech.glide.load.model.MultiModelLoaderFactory$b`) v2 @kind object;
  #L3e90b8.  v3:= v2.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.b` @type ^`java.lang.Class` @kind object;
  #L3e90bc.  call temp:= `contains`(v0, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e90c2.  v3:= temp;
  #L3e90c4.  if v3 != 0 then goto L3e90a0;
  #L3e90c8.  call temp:= `a`(v2, v5) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e90ce.  v3:= temp;
  #L3e90d0.  if v3 == 0 then goto L3e90a0;
  #L3e90d4.  v2:= v2.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.b` @type ^`java.lang.Class` @kind object;
  #L3e90d8.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e90de.  goto L3e90a0;
  #L3e90e0.  @monitorexit v4
  #L3e90e2.  return v0 @kind object;
  #L3e90e4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e90e6.  @monitorexit v4
  #L3e90e8.  throw v5;
  catch `java.lang.Throwable` @[L3e908a..L3e90de] goto L3e90e4;
}
procedure `void` `h`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.model.ModelLoaderFactory` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.h:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @AccessFlag  {
    temp;
    v0;

  #L3e92a8.  @monitorenter v1
  #L3e92aa.  v0:= 0I;
  #L3e92ac.  call `a`(v1, v2, v3, v4, v0) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;Z)V` @kind direct;
  #L3e92b2.  @monitorexit v1
  #L3e92b4.  return @kind void;
  #L3e92b6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e92b8.  @monitorexit v1
  #L3e92ba.  throw v2;
  catch `java.lang.Throwable` @[L3e92ac..L3e92b2] goto L3e92b6;
}
procedure `java.util.List` `i`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v4 @kind this, `java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.i:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e9108.  @monitorenter v4
  #L3e910a.  v0:= new `java.util.ArrayList`;
  #L3e910e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e9114.  v1:= v4.`com.bumptech.glide.load.model.MultiModelLoaderFactory.a` @type ^`java.util.List` @kind object;
  #L3e9118.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e911e.  v1:= temp @kind object;
  #L3e9120.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e9126.  v2:= temp;
  #L3e9128.  if v2 == 0 then goto L3e915a;
  #L3e912c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e9132.  v2:= temp @kind object;
  #L3e9134.  v2:= (`com.bumptech.glide.load.model.MultiModelLoaderFactory$b`) v2 @kind object;
  #L3e9138.  call temp:= `b`(v2, v5, v6) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.b:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind virtual;
  #L3e913e.  v3:= temp;
  #L3e9140.  if v3 == 0 then goto L3e9120;
  #L3e9144.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L3e914a.  call temp:= `g`(v4, v2) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.g:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;` @kind direct;
  #L3e9150.  v2:= temp @kind object;
  #L3e9152.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e9158.  goto L3e9120;
  #L3e915a.  @monitorexit v4
  #L3e915c.  return v0 @kind object;
  #L3e915e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e9160.  @monitorexit v4
  #L3e9162.  throw v5;
  catch `java.lang.Throwable` @[L3e910a..L3e9158] goto L3e915e;
}
procedure `java.util.List` `j`(`com.bumptech.glide.load.model.MultiModelLoaderFactory` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.model.ModelLoaderFactory` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.j:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;

  #L3e9180.  @monitorenter v1
  #L3e9182.  call temp:= `i`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.i:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L3e9188.  v0:= temp @kind object;
  #L3e918a.  call `b`(v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;.b:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @kind virtual;
  #L3e9190.  @monitorexit v1
  #L3e9192.  return v0 @kind object;
  #L3e9194.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e9196.  @monitorexit v1
  #L3e9198.  throw v2;
  catch `java.lang.Throwable` @[L3e9182..L3e9190] goto L3e9194;
}
