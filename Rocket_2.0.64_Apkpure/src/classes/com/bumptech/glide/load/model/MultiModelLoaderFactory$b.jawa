record `com.bumptech.glide.load.model.MultiModelLoaderFactory$b` @kind class @AccessFlag  {
  `java.lang.Class` `com.bumptech.glide.load.model.MultiModelLoaderFactory$b.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.load.model.MultiModelLoaderFactory$b.b` @AccessFlag FINAL;
  `com.bumptech.glide.load.model.ModelLoaderFactory` `com.bumptech.glide.load.model.MultiModelLoaderFactory$b.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.MultiModelLoaderFactory$b` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.model.ModelLoaderFactory` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e8df8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e8dfe.  v0.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3e8e02.  v0.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.b` @type ^`java.lang.Class` := v2 @kind object;
  #L3e8e06.  v0.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.c` @type ^`com.bumptech.glide.load.model.ModelLoaderFactory` := v3 @kind object;
  #L3e8e0a.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.model.MultiModelLoaderFactory$b` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.a:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8da4.  v0:= v1.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.a` @type ^`java.lang.Class` @kind object;
  #L3e8da8.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e8dae.  v2:= temp;
  #L3e8db0.  return v2;
}
procedure `boolean` `b`(`com.bumptech.glide.load.model.MultiModelLoaderFactory$b` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.b:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e8dc4.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e8dca.  v1:= temp;
  #L3e8dcc.  if v1 == 0 then goto L3e8de4;
  #L3e8dd0.  v1:= v0.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.b` @type ^`java.lang.Class` @kind object;
  #L3e8dd4.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e8dda.  v1:= temp;
  #L3e8ddc.  if v1 == 0 then goto L3e8de4;
  #L3e8de0.  v1:= 1I;
  #L3e8de2.  goto L3e8de6;
  #L3e8de4.  v1:= 0I;
  #L3e8de6.  return v1;
}
