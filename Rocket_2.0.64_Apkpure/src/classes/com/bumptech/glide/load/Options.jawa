record `com.bumptech.glide.load.Options` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.Key` @kind interface {
  `androidx.collection.ArrayMap` `com.bumptech.glide.load.Options.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.Options` v1 @kind this) @signature `Lcom/bumptech/glide/load/Options;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dacc4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dacca.  v0:= new `com.bumptech.glide.util.CachedHashCodeArrayMap`;
  #L3dacce.  call `<init>`(v0) @signature `Lcom/bumptech/glide/util/CachedHashCodeArrayMap;.<init>:()V` @kind direct;
  #L3dacd4.  v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` := v0 @kind object;
  #L3dacd8.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.Option` v0 @kind object, `java.lang.Object` v1 @kind object, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/Options;.a:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;Ljava/security/MessageDigest;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3dad0c.  call `update`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/Option;.update:(Ljava/lang/Object;Ljava/security/MessageDigest;)V` @kind virtual;
  #L3dad12.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.Options` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/Options;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dabd8.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.Options` @kind boolean;
  #L3dabdc.  if v0 == 0 then goto L3dabf6;
  #L3dabe0.  v2:= (`com.bumptech.glide.load.Options`) v2 @kind object;
  #L3dabe4.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dabe8.  v2:= v2.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dabec.  call temp:= `equals`(v0, v2) @signature `Landroidx/collection/SimpleArrayMap;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dabf2.  v2:= temp;
  #L3dabf4.  return v2;
  #L3dabf6.  v2:= 0I;
  #L3dabf8.  return v2;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.Options` v1 @kind this, `com.bumptech.glide.load.Option` v2 @kind object) @signature `Lcom/bumptech/glide/load/Options;.get:(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dac48.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dac4c.  call temp:= `containsKey`(v0, v2) @signature `Landroidx/collection/SimpleArrayMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dac52.  v0:= temp;
  #L3dac54.  if v0 == 0 then goto L3dac66;
  #L3dac58.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dac5c.  call temp:= `get`(v0, v2) @signature `Landroidx/collection/SimpleArrayMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3dac62.  v2:= temp @kind object;
  #L3dac64.  goto L3dac6e;
  #L3dac66.  call temp:= `getDefaultValue`(v2) @signature `Lcom/bumptech/glide/load/Option;.getDefaultValue:()Ljava/lang/Object;` @kind virtual;
  #L3dac6c.  v2:= temp @kind object;
  #L3dac6e.  return v2 @kind object;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.Options` v1 @kind this) @signature `Lcom/bumptech/glide/load/Options;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dac28.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dac2c.  call temp:= `hashCode`(v0) @signature `Landroidx/collection/SimpleArrayMap;.hashCode:()I` @kind virtual;
  #L3dac32.  v0:= temp;
  #L3dac34.  return v0;
}
procedure `void` `putAll`(`com.bumptech.glide.load.Options` v1 @kind this, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/Options;.putAll:(Lcom/bumptech/glide/load/Options;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dacec.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dacf0.  v2:= v2.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dacf4.  call `putAll`(v0, v2) @signature `Landroidx/collection/SimpleArrayMap;.putAll:(Landroidx/collection/SimpleArrayMap;)V` @kind virtual;
  #L3dacfa.  return @kind void;
}
procedure `com.bumptech.glide.load.Options` `set`(`com.bumptech.glide.load.Options` v1 @kind this, `com.bumptech.glide.load.Option` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/load/Options;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/load/Options;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dac0c.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dac10.  call temp:= `put`(v0, v2, v3) @signature `Landroidx/collection/SimpleArrayMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3dac16.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.Options` v2 @kind this) @signature `Lcom/bumptech/glide/load/Options;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dac80.  v0:= new `java.lang.StringBuilder`;
  #L3dac84.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dac8a.  v1:= "Options{values=" @kind object;
  #L3dac8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dac94.  v1:= v2.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dac98.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dac9e.  v1:= 125I;
  #L3daca2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3daca8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dacae.  v0:= temp @kind object;
  #L3dacb0.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.Options` v3 @kind this, `java.security.MessageDigest` v4 @kind object) @signature `Lcom/bumptech/glide/load/Options;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dad24.  v0:= 0I;
  #L3dad26.  v1:= v3.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dad2a.  call temp:= `size`(v1) @signature `Landroidx/collection/SimpleArrayMap;.size:()I` @kind virtual;
  #L3dad30.  v1:= temp;
  #L3dad32.  if v0 >= v1 then goto L3dad5e;
  #L3dad36.  v1:= v3.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dad3a.  call temp:= `keyAt`(v1, v0) @signature `Landroidx/collection/SimpleArrayMap;.keyAt:(I)Ljava/lang/Object;` @kind virtual;
  #L3dad40.  v1:= temp @kind object;
  #L3dad42.  v1:= (`com.bumptech.glide.load.Option`) v1 @kind object;
  #L3dad46.  v2:= v3.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3dad4a.  call temp:= `valueAt`(v2, v0) @signature `Landroidx/collection/SimpleArrayMap;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L3dad50.  v2:= temp @kind object;
  #L3dad52.  call `a`(v1, v2, v4) @signature `Lcom/bumptech/glide/load/Options;.a:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;Ljava/security/MessageDigest;)V` @kind static;
  #L3dad58.  v0:= v0 + 1;
  #L3dad5c.  goto L3dad26;
  #L3dad5e.  return @kind void;
}
