record `com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `boolean` `com.bumptech.glide.load.ImageHeaderParser$ImageType.a` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.ImageHeaderParser$ImageType`[] `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.ANIMATED_WEBP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.AVIF` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.RAW` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3da28c.  v0:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3da290.  v1:= "GIF" @kind object;
  #L3da294.  v2:= 0I;
  #L3da296.  v3:= 1I;
  #L3da298.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3da29e.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v0 @kind object;
  #L3da2a2.  v1:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3da2a6.  v4:= "JPEG" @kind object;
  #L3da2aa.  call `<init>`(v1, v4, v3, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3da2b0.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v1 @kind object;
  #L3da2b4.  v4:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3da2b8.  v5:= "RAW" @kind object;
  #L3da2bc.  v6:= 2I;
  #L3da2be.  call `<init>`(v4, v5, v6, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3da2c4.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.RAW` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v4 @kind object;
  #L3da2c8.  v5:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3da2cc.  v7:= "PNG_A" @kind object;
  #L3da2d0.  v8:= 3I;
  #L3da2d2.  call `<init>`(v5, v7, v8, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3da2d8.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v5 @kind object;
  #L3da2dc.  v7:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3da2e0.  v9:= "PNG" @kind object;
  #L3da2e4.  v10:= 4I;
  #L3da2e6.  call `<init>`(v7, v9, v10, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3da2ec.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v7 @kind object;
  #L3da2f0.  v9:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3da2f4.  v11:= "WEBP_A" @kind object;
  #L3da2f8.  v12:= 5I;
  #L3da2fa.  call `<init>`(v9, v11, v12, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3da300.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v9 @kind object;
  #L3da304.  v11:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3da308.  v13:= "WEBP" @kind object;
  #L3da30c.  v14:= 6I;
  #L3da30e.  call `<init>`(v11, v13, v14, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3da314.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v11 @kind object;
  #L3da318.  v13:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3da31c.  v15:= "ANIMATED_WEBP" @kind object;
  #L3da320.  v14:= 7I;
  #L3da322.  call `<init>`(v13, v15, v14, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3da328.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.ANIMATED_WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v13 @kind object;
  #L3da32c.  v15:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3da330.  v14:= "AVIF" @kind object;
  #L3da334.  v12:= 8I;
  #L3da338.  call `<init>`(v15, v14, v12, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3da33e.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.AVIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v15 @kind object;
  #L3da342.  v14:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3da346.  v12:= "UNKNOWN" @kind object;
  #L3da34a.  v10:= 9I;
  #L3da34e.  call `<init>`(v14, v12, v10, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3da354.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v14 @kind object;
  #L3da358.  v12:= 10I;
  #L3da35c.  v12:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`[v12];
  #L3da360.  v12[v2]:= v0 @kind object;
  #L3da364.  v12[v3]:= v1 @kind object;
  #L3da368.  v12[v6]:= v4 @kind object;
  #L3da36c.  v12[v8]:= v5 @kind object;
  #L3da370.  v0:= 4I;
  #L3da372.  v12[v0]:= v7 @kind object;
  #L3da376.  v0:= 5I;
  #L3da378.  v12[v0]:= v9 @kind object;
  #L3da37c.  v0:= 6I;
  #L3da37e.  v12[v0]:= v11 @kind object;
  #L3da382.  v0:= 7I;
  #L3da384.  v12[v0]:= v13 @kind object;
  #L3da388.  v0:= 8I;
  #L3da38c.  v12[v0]:= v15 @kind object;
  #L3da390.  v12[v10]:= v14 @kind object;
  #L3da394.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.$VALUES` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType`[] := v12 @kind object;
  #L3da398.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.ImageHeaderParser$ImageType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3da3ac.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3da3b2.  v0.`com.bumptech.glide.load.ImageHeaderParser$ImageType.a` @type ^`boolean` := v3 @kind boolean;
  #L3da3b6.  return @kind void;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3da244.  v0:= constclass @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3da248.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3da24e.  v1:= temp @kind object;
  #L3da250.  v1:= (`com.bumptech.glide.load.ImageHeaderParser$ImageType`) v1 @kind object;
  #L3da254.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType`[] `values`() @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.values:()[Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3da268.  v0:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.$VALUES` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType`[] @kind object;
  #L3da26c.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3da272.  v0:= temp @kind object;
  #L3da274.  v0:= (`com.bumptech.glide.load.ImageHeaderParser$ImageType`[]) v0 @kind object;
  #L3da278.  return v0 @kind object;
}
procedure `boolean` `hasAlpha`(`com.bumptech.glide.load.ImageHeaderParser$ImageType` v1 @kind this) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.hasAlpha:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3da1f4.  v0:= v1.`com.bumptech.glide.load.ImageHeaderParser$ImageType.a` @type ^`boolean` @kind boolean;
  #L3da1f8.  return v0;
}
procedure `boolean` `isWebp`(`com.bumptech.glide.load.ImageHeaderParser$ImageType` v3 @kind this) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.isWebp:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3da20c.  v0:= `@@com.bumptech.glide.load.ImageHeaderParser$a.a` @type ^`int`[] @kind object;
  #L3da210.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3da216.  v1:= temp;
  #L3da218.  v0:= v0[v1];
  #L3da21c.  v1:= 1I;
  #L3da21e.  if v0 == v1 then goto L3da232;
  #L3da222.  v2:= 2I;
  #L3da224.  if v0 == v2 then goto L3da232;
  #L3da228.  v2:= 3I;
  #L3da22a.  if v0 == v2 then goto L3da232;
  #L3da22e.  v0:= 0I;
  #L3da230.  return v0;
  #L3da232.  return v1;
}
