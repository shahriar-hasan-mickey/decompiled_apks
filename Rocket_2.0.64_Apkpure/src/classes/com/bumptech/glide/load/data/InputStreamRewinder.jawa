record `com.bumptech.glide.load.data.InputStreamRewinder` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.data.DataRewinder` @kind interface {
  `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` `com.bumptech.glide.load.data.InputStreamRewinder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.data.InputStreamRewinder` v1 @kind this, `java.io.InputStream` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dbe48.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dbe4e.  v0:= new `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream`;
  #L3dbe52.  call `<init>`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @kind direct;
  #L3dbe58.  v1.`com.bumptech.glide.load.data.InputStreamRewinder.a` @type ^`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` := v0 @kind object;
  #L3dbe5c.  v2:= 5242880I;
  #L3dbe60.  call `mark`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.mark:(I)V` @kind virtual;
  #L3dbe66.  return @kind void;
}
procedure `void` `cleanup`(`com.bumptech.glide.load.data.InputStreamRewinder` v1 @kind this) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.cleanup:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbe78.  v0:= v1.`com.bumptech.glide.load.data.InputStreamRewinder.a` @type ^`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind object;
  #L3dbe7c.  call `release`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.release:()V` @kind virtual;
  #L3dbe82.  return @kind void;
}
procedure `void` `fixMarkLimits`(`com.bumptech.glide.load.data.InputStreamRewinder` v1 @kind this) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.fixMarkLimits:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbe94.  v0:= v1.`com.bumptech.glide.load.data.InputStreamRewinder.a` @type ^`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind object;
  #L3dbe98.  call `fixMarkLimit`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.fixMarkLimit:()V` @kind virtual;
  #L3dbe9e.  return @kind void;
}
procedure `java.io.InputStream` `rewindAndGet`(`com.bumptech.glide.load.data.InputStreamRewinder` v1 @kind this) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.rewindAndGet:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbe0c.  v0:= v1.`com.bumptech.glide.load.data.InputStreamRewinder.a` @type ^`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind object;
  #L3dbe10.  call `reset`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.reset:()V` @kind virtual;
  #L3dbe16.  v0:= v1.`com.bumptech.glide.load.data.InputStreamRewinder.a` @type ^`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind object;
  #L3dbe1a.  return v0 @kind object;
}
procedure `java.lang.Object` `rewindAndGet`(`com.bumptech.glide.load.data.InputStreamRewinder` v1 @kind this) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.rewindAndGet:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3dbe2c.  call temp:= `rewindAndGet`(v1) @signature `Lcom/bumptech/glide/load/data/InputStreamRewinder;.rewindAndGet:()Ljava/io/InputStream;` @kind virtual;
  #L3dbe32.  v0:= temp @kind object;
  #L3dbe34.  return v0 @kind object;
}
