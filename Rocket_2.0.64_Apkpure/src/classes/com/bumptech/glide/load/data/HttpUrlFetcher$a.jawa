record `com.bumptech.glide.load.data.HttpUrlFetcher$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.data.HttpUrlFetcher$b` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.data.HttpUrlFetcher$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3db7b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3db7b6.  return @kind void;
}
procedure `java.net.HttpURLConnection` `a`(`com.bumptech.glide.load.data.HttpUrlFetcher$a` v0 @kind this, `java.net.URL` v1 @kind object) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher$a;.a:(Ljava/net/URL;)Ljava/net/HttpURLConnection;` @AccessFlag PUBLIC {
    temp;

  #L3db784.  call temp:= `openConnection`(v1) @signature `Ljava/net/URL;.openConnection:()Ljava/net/URLConnection;` @kind virtual;
  #L3db78a.  v1:= temp @kind object;
  #L3db78c.  call temp:= `instrument`(v1) @signature `Lcom/google/firebase/perf/network/FirebasePerfUrlConnection;.instrument:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3db792.  v1:= temp @kind object;
  #L3db794.  v1:= (`java.net.URLConnection`) v1 @kind object;
  #L3db798.  v1:= (`java.net.HttpURLConnection`) v1 @kind object;
  #L3db79c.  return v1 @kind object;
}
