record `com.bumptech.glide.load.data.DataRewinderRegistry$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.data.DataRewinder$Factory` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.data.DataRewinderRegistry$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/data/DataRewinderRegistry$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3db280.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3db286.  return @kind void;
}
procedure `com.bumptech.glide.load.data.DataRewinder` `build`(`com.bumptech.glide.load.data.DataRewinderRegistry$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/data/DataRewinderRegistry$a;.build:(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/DataRewinder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3db244.  v0:= new `com.bumptech.glide.load.data.DataRewinderRegistry$b`;
  #L3db248.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/data/DataRewinderRegistry$b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3db24e.  return v0 @kind object;
}
procedure `java.lang.Class` `getDataClass`(`com.bumptech.glide.load.data.DataRewinderRegistry$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/data/DataRewinderRegistry$a;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3db260.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3db264.  v1:= "Not implemented" @kind object;
  #L3db268.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3db26e.  throw v0;
}
