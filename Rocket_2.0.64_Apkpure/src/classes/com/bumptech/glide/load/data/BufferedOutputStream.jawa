record `com.bumptech.glide.load.data.BufferedOutputStream` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.OutputStream` @kind class {
  `java.io.OutputStream` `com.bumptech.glide.load.data.BufferedOutputStream.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.bumptech.glide.load.data.BufferedOutputStream.b` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.data.BufferedOutputStream.c` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.data.BufferedOutputStream.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.data.BufferedOutputStream` v1 @kind this, `java.io.OutputStream` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3db04c.  v0:= 65536I;
  #L3db050.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;I)V` @kind direct;
  #L3db056.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.data.BufferedOutputStream` v0 @kind this, `java.io.OutputStream` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3db068.  call `<init>`(v0) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L3db06e.  v0.`com.bumptech.glide.load.data.BufferedOutputStream.a` @type ^`java.io.OutputStream` := v1 @kind object;
  #L3db072.  v0.`com.bumptech.glide.load.data.BufferedOutputStream.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v2 @kind object;
  #L3db076.  v1:= constclass @type ^`byte`[] @kind object;
  #L3db07a.  call temp:= `get`(v2, v3, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3db080.  v1:= temp @kind object;
  #L3db082.  v1:= (`byte`[]) v1 @kind object;
  #L3db086.  v0.`com.bumptech.glide.load.data.BufferedOutputStream.b` @type ^`byte`[] := v1 @kind object;
  #L3db08a.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.data.BufferedOutputStream` v4 @kind this) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3db104.  v0:= v4.`com.bumptech.glide.load.data.BufferedOutputStream.d` @type ^`int`;
  #L3db108.  if v0 <= 0 then goto L3db120;
  #L3db10c.  v1:= v4.`com.bumptech.glide.load.data.BufferedOutputStream.a` @type ^`java.io.OutputStream` @kind object;
  #L3db110.  v2:= v4.`com.bumptech.glide.load.data.BufferedOutputStream.b` @type ^`byte`[] @kind object;
  #L3db114.  v3:= 0I;
  #L3db116.  call `write`(v1, v2, v3, v0) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L3db11c.  v4.`com.bumptech.glide.load.data.BufferedOutputStream.d` @type ^`int` := v3;
  #L3db120.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.data.BufferedOutputStream` v2 @kind this) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3db134.  v0:= v2.`com.bumptech.glide.load.data.BufferedOutputStream.d` @type ^`int`;
  #L3db138.  v1:= v2.`com.bumptech.glide.load.data.BufferedOutputStream.b` @type ^`byte`[] @kind object;
  #L3db13c.  v1:= length @variable v1;
  #L3db13e.  if v0 != v1 then goto L3db148;
  #L3db142.  call `a`(v2) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.a:()V` @kind direct;
  #L3db148.  return @kind void;
}
procedure `void` `release`(`com.bumptech.glide.load.data.BufferedOutputStream` v2 @kind this) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.release:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3db15c.  v0:= v2.`com.bumptech.glide.load.data.BufferedOutputStream.b` @type ^`byte`[] @kind object;
  #L3db160.  if v0 == 0 then goto L3db174;
  #L3db164.  v1:= v2.`com.bumptech.glide.load.data.BufferedOutputStream.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3db168.  call `put`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3db16e.  v0:= 0I;
  #L3db170.  v2.`com.bumptech.glide.load.data.BufferedOutputStream.b` @type ^`byte`[] := v0 @kind object;
  #L3db174.  return @kind void;
}
procedure `void` `close`(`com.bumptech.glide.load.data.BufferedOutputStream` v2 @kind this) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3db09c.  call `flush`(v2) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.flush:()V` @kind virtual;
  #L3db0a2.  v0:= v2.`com.bumptech.glide.load.data.BufferedOutputStream.a` @type ^`java.io.OutputStream` @kind object;
  #L3db0a6.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3db0ac.  call `release`(v2) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.release:()V` @kind direct;
  #L3db0b2.  return @kind void;
  #L3db0b4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3db0b6.  v1:= v2.`com.bumptech.glide.load.data.BufferedOutputStream.a` @type ^`java.io.OutputStream` @kind object;
  #L3db0ba.  call `close`(v1) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3db0c0.  throw v0;
  catch `java.lang.Throwable` @[L3db09c..L3db0a2] goto L3db0b4;
}
procedure `void` `flush`(`com.bumptech.glide.load.data.BufferedOutputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3db0e0.  call `a`(v1) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.a:()V` @kind direct;
  #L3db0e6.  v0:= v1.`com.bumptech.glide.load.data.BufferedOutputStream.a` @type ^`java.io.OutputStream` @kind object;
  #L3db0ea.  call `flush`(v0) @signature `Ljava/io/OutputStream;.flush:()V` @kind virtual;
  #L3db0f0.  return @kind void;
}
procedure `void` `write`(`com.bumptech.glide.load.data.BufferedOutputStream` v3 @kind this, `int` v4 ) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3db214.  v0:= v3.`com.bumptech.glide.load.data.BufferedOutputStream.b` @type ^`byte`[] @kind object;
  #L3db218.  v1:= v3.`com.bumptech.glide.load.data.BufferedOutputStream.d` @type ^`int`;
  #L3db21c.  v2:= v1 + 1;
  #L3db220.  v3.`com.bumptech.glide.load.data.BufferedOutputStream.d` @type ^`int` := v2;
  #L3db224.  v4:= (`byte`) v4 @kind i2b;
  #L3db226.  v0[v1]:= v4 @kind byte;
  #L3db22a.  call `b`(v3) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.b:()V` @kind direct;
  #L3db230.  return @kind void;
}
procedure `void` `write`(`com.bumptech.glide.load.data.BufferedOutputStream` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.write:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3db188.  v0:= length @variable v3;
  #L3db18a.  v1:= 0I;
  #L3db18c.  call `write`(v2, v3, v1, v0) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.write:([BII)V` @kind virtual;
  #L3db192.  return @kind void;
}
procedure `void` `write`(`com.bumptech.glide.load.data.BufferedOutputStream` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3db1a4.  v0:= 0I;
  #L3db1a6.  v1:= v8 - v0 @kind int;
  #L3db1aa.  v2:= v7 + v0 @kind int;
  #L3db1ae.  v3:= v5.`com.bumptech.glide.load.data.BufferedOutputStream.d` @type ^`int`;
  #L3db1b2.  if v3 != 0 then goto L3db1cc;
  #L3db1b6.  v4:= v5.`com.bumptech.glide.load.data.BufferedOutputStream.b` @type ^`byte`[] @kind object;
  #L3db1ba.  v4:= length @variable v4;
  #L3db1bc.  if v1 < v4 then goto L3db1cc;
  #L3db1c0.  v7:= v5.`com.bumptech.glide.load.data.BufferedOutputStream.a` @type ^`java.io.OutputStream` @kind object;
  #L3db1c4.  call `write`(v7, v6, v2, v1) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L3db1ca.  return @kind void;
  #L3db1cc.  v4:= v5.`com.bumptech.glide.load.data.BufferedOutputStream.b` @type ^`byte`[] @kind object;
  #L3db1d0.  v4:= length @variable v4;
  #L3db1d2.  v4:= v4 - v3 @kind int;
  #L3db1d4.  call temp:= `min`(v1, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3db1da.  v1:= temp;
  #L3db1dc.  v3:= v5.`com.bumptech.glide.load.data.BufferedOutputStream.b` @type ^`byte`[] @kind object;
  #L3db1e0.  v4:= v5.`com.bumptech.glide.load.data.BufferedOutputStream.d` @type ^`int`;
  #L3db1e4.  call `arraycopy`(v6, v2, v3, v4, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3db1ea.  v2:= v5.`com.bumptech.glide.load.data.BufferedOutputStream.d` @type ^`int`;
  #L3db1ee.  v2:= v2 + v1 @kind int;
  #L3db1f0.  v5.`com.bumptech.glide.load.data.BufferedOutputStream.d` @type ^`int` := v2;
  #L3db1f4.  v0:= v0 + v1 @kind int;
  #L3db1f6.  call `b`(v5) @signature `Lcom/bumptech/glide/load/data/BufferedOutputStream;.b:()V` @kind direct;
  #L3db1fc.  if v0 < v8 then goto L3db1a6;
  #L3db200.  return @kind void;
}
