record `com.bumptech.glide.load.data.HttpUrlFetcher` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.data.DataFetcher` @kind interface {
  `com.bumptech.glide.load.model.GlideUrl` `com.bumptech.glide.load.data.HttpUrlFetcher.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.data.HttpUrlFetcher.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.data.HttpUrlFetcher$b` `com.bumptech.glide.load.data.HttpUrlFetcher.c` @AccessFlag PRIVATE_FINAL;
  `java.net.HttpURLConnection` `com.bumptech.glide.load.data.HttpUrlFetcher.d` @AccessFlag PRIVATE;
  `java.io.InputStream` `com.bumptech.glide.load.data.HttpUrlFetcher.e` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.data.HttpUrlFetcher.f` @AccessFlag PRIVATE_VOLATILE;
}
global `com.bumptech.glide.load.data.HttpUrlFetcher$b` `@@com.bumptech.glide.load.data.HttpUrlFetcher.g` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dbbc4.  v0:= new `com.bumptech.glide.load.data.HttpUrlFetcher$a`;
  #L3dbbc8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher$a;.<init>:()V` @kind direct;
  #L3dbbce.  `@@com.bumptech.glide.load.data.HttpUrlFetcher.g` @type ^`com.bumptech.glide.load.data.HttpUrlFetcher$b` := v0 @kind object;
  #L3dbbd2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.data.HttpUrlFetcher` v1 @kind this, `com.bumptech.glide.load.model.GlideUrl` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.<init>:(Lcom/bumptech/glide/load/model/GlideUrl;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dbbe4.  v0:= `@@com.bumptech.glide.load.data.HttpUrlFetcher.g` @type ^`com.bumptech.glide.load.data.HttpUrlFetcher$b` @kind object;
  #L3dbbe8.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.<init>:(Lcom/bumptech/glide/load/model/GlideUrl;ILcom/bumptech/glide/load/data/HttpUrlFetcher$b;)V` @kind direct;
  #L3dbbee.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.data.HttpUrlFetcher` v0 @kind this, `com.bumptech.glide.load.model.GlideUrl` v1 @kind object, `int` v2 , `com.bumptech.glide.load.data.HttpUrlFetcher$b` v3 @kind object) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.<init>:(Lcom/bumptech/glide/load/model/GlideUrl;ILcom/bumptech/glide/load/data/HttpUrlFetcher$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dbc00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dbc06.  v0.`com.bumptech.glide.load.data.HttpUrlFetcher.a` @type ^`com.bumptech.glide.load.model.GlideUrl` := v1 @kind object;
  #L3dbc0a.  v0.`com.bumptech.glide.load.data.HttpUrlFetcher.b` @type ^`int` := v2;
  #L3dbc0e.  v0.`com.bumptech.glide.load.data.HttpUrlFetcher.c` @type ^`com.bumptech.glide.load.data.HttpUrlFetcher$b` := v3 @kind object;
  #L3dbc12.  return @kind void;
}
procedure `java.net.HttpURLConnection` `a`(`com.bumptech.glide.load.data.HttpUrlFetcher` v3 @kind this, `java.net.URL` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.a:(Ljava/net/URL;Ljava/util/Map;)Ljava/net/HttpURLConnection;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3dbb10.  v0:= 0I;
  #L3dbb12.  v1:= v3.`com.bumptech.glide.load.data.HttpUrlFetcher.c` @type ^`com.bumptech.glide.load.data.HttpUrlFetcher$b` @kind object;
  #L3dbb16.  call temp:= `a`(v1, v4) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher$b;.a:(Ljava/net/URL;)Ljava/net/HttpURLConnection;` @kind interface;
  #L3dbb1c.  v4:= temp @kind object;
  #L3dbb1e.  call temp:= `entrySet`(v5) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3dbb24.  v5:= temp @kind object;
  #L3dbb26.  call temp:= `iterator`(v5) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dbb2c.  v5:= temp @kind object;
  #L3dbb2e.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3dbb34.  v1:= temp;
  #L3dbb36.  if v1 == 0 then goto L3dbb66;
  #L3dbb3a.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3dbb40.  v1:= temp @kind object;
  #L3dbb42.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L3dbb46.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3dbb4c.  v2:= temp @kind object;
  #L3dbb4e.  v2:= (`java.lang.String`) v2 @kind object;
  #L3dbb52.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3dbb58.  v1:= temp @kind object;
  #L3dbb5a.  v1:= (`java.lang.String`) v1 @kind object;
  #L3dbb5e.  call `addRequestProperty`(v4, v2, v1) @signature `Ljava/net/HttpURLConnection;.addRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3dbb64.  goto L3dbb2e;
  #L3dbb66.  v5:= v3.`com.bumptech.glide.load.data.HttpUrlFetcher.b` @type ^`int`;
  #L3dbb6a.  call `setConnectTimeout`(v4, v5) @signature `Ljava/net/HttpURLConnection;.setConnectTimeout:(I)V` @kind virtual;
  #L3dbb70.  v5:= v3.`com.bumptech.glide.load.data.HttpUrlFetcher.b` @type ^`int`;
  #L3dbb74.  call `setReadTimeout`(v4, v5) @signature `Ljava/net/HttpURLConnection;.setReadTimeout:(I)V` @kind virtual;
  #L3dbb7a.  call `setUseCaches`(v4, v0) @signature `Ljava/net/HttpURLConnection;.setUseCaches:(Z)V` @kind virtual;
  #L3dbb80.  v5:= 1I;
  #L3dbb82.  call `setDoInput`(v4, v5) @signature `Ljava/net/HttpURLConnection;.setDoInput:(Z)V` @kind virtual;
  #L3dbb88.  call `setInstanceFollowRedirects`(v4, v0) @signature `Ljava/net/HttpURLConnection;.setInstanceFollowRedirects:(Z)V` @kind virtual;
  #L3dbb8e.  return v4 @kind object;
  #L3dbb90.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L3dbb92.  v5:= new `com.bumptech.glide.load.HttpException`;
  #L3dbb96.  v1:= "URL.openConnection threw" @kind object;
  #L3dbb9a.  call `<init>`(v5, v1, v0, v4) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind direct;
  #L3dbba0.  throw v5;
  catch `java.io.IOException` @[L3dbb12..L3dbb1e] goto L3dbb90;
}
procedure `int` `b`(`java.net.HttpURLConnection` v2 @kind object) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.b:(Ljava/net/HttpURLConnection;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3db828.  call temp:= `getResponseCode`(v2) @signature `Ljava/net/HttpURLConnection;.getResponseCode:()I` @kind virtual;
  #L3db82e.  v2:= temp;
  #L3db830.  return v2;
  #L3db832.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L3db834.  v0:= 3I;
  #L3db836.  v1:= "HttpUrlFetcher" @kind object;
  #L3db83a.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3db840.  v0:= temp;
  #L3db842.  if v0 == 0 then goto L3db850;
  #L3db846.  v0:= "Failed to get a response code" @kind object;
  #L3db84a.  call temp:= `d`(v1, v0, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3db850.  v2:= -1I;
  #L3db852.  return v2;
  catch `java.io.IOException` @[L3db828..L3db830] goto L3db832;
}
procedure `java.io.InputStream` `c`(`com.bumptech.glide.load.data.HttpUrlFetcher` v4 @kind this, `java.net.HttpURLConnection` v5 @kind object) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.c:(Ljava/net/HttpURLConnection;)Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3db874.  v0:= "HttpUrlFetcher" @kind object;
  #L3db878.  call temp:= `getContentEncoding`(v5) @signature `Ljava/net/HttpURLConnection;.getContentEncoding:()Ljava/lang/String;` @kind virtual;
  #L3db87e.  v1:= temp @kind object;
  #L3db880.  call temp:= `isEmpty`(v1) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3db886.  v1:= temp;
  #L3db888.  if v1 == 0 then goto L3db8ac;
  #L3db88c.  call temp:= `getContentLength`(v5) @signature `Ljava/net/HttpURLConnection;.getContentLength:()I` @kind virtual;
  #L3db892.  v0:= temp;
  #L3db894.  call temp:= `getInputStream`(v5) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L3db89a.  v1:= temp @kind object;
  #L3db89c.  v2:= (`long`) v0 @kind i2l;
  #L3db89e.  call temp:= `obtain`(v1, v2) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.obtain:(Ljava/io/InputStream;J)Ljava/io/InputStream;` @kind static;
  #L3db8a4.  v0:= temp @kind object;
  #L3db8a6.  v4.`com.bumptech.glide.load.data.HttpUrlFetcher.e` @type ^`java.io.InputStream` := v0 @kind object;
  #L3db8aa.  goto L3db8f6;
  #L3db8ac.  v1:= 3I;
  #L3db8ae.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3db8b4.  v1:= temp;
  #L3db8b6.  if v1 == 0 then goto L3db8ea;
  #L3db8ba.  v1:= new `java.lang.StringBuilder`;
  #L3db8be.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3db8c4.  v2:= "Got non empty content encoding: " @kind object;
  #L3db8c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db8ce.  call temp:= `getContentEncoding`(v5) @signature `Ljava/net/HttpURLConnection;.getContentEncoding:()Ljava/lang/String;` @kind virtual;
  #L3db8d4.  v2:= temp @kind object;
  #L3db8d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db8dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3db8e2.  v1:= temp @kind object;
  #L3db8e4.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3db8ea.  call temp:= `getInputStream`(v5) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L3db8f0.  v0:= temp @kind object;
  #L3db8f2.  v4.`com.bumptech.glide.load.data.HttpUrlFetcher.e` @type ^`java.io.InputStream` := v0 @kind object;
  #L3db8f6.  v5:= v4.`com.bumptech.glide.load.data.HttpUrlFetcher.e` @type ^`java.io.InputStream` @kind object;
  #L3db8fa.  return v5 @kind object;
  #L3db8fc.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3db8fe.  v1:= new `com.bumptech.glide.load.HttpException`;
  #L3db902.  call temp:= `b`(v5) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.b:(Ljava/net/HttpURLConnection;)I` @kind static;
  #L3db908.  v5:= temp;
  #L3db90a.  v2:= "Failed to obtain InputStream" @kind object;
  #L3db90e.  call `<init>`(v1, v2, v5, v0) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind direct;
  #L3db914.  throw v1;
  catch `java.io.IOException` @[L3db878..L3db8f6] goto L3db8fc;
}
procedure `boolean` `d`(`int` v1 ) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.d:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3db7c8.  v1:= v1 / 100;
  #L3db7cc.  v0:= 2I;
  #L3db7ce.  if v1 != v0 then goto L3db7d6;
  #L3db7d2.  v1:= 1I;
  #L3db7d4.  goto L3db7d8;
  #L3db7d6.  v1:= 0I;
  #L3db7d8.  return v1;
}
procedure `boolean` `e`(`int` v1 ) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.e:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3db7ec.  v1:= v1 / 100;
  #L3db7f0.  v0:= 3I;
  #L3db7f2.  if v1 != v0 then goto L3db7fa;
  #L3db7f6.  v1:= 1I;
  #L3db7f8.  goto L3db7fc;
  #L3db7fa.  v1:= 0I;
  #L3db7fc.  return v1;
}
procedure `java.io.InputStream` `f`(`com.bumptech.glide.load.data.HttpUrlFetcher` v2 @kind this, `java.net.URL` v3 @kind object, `int` v4 , `java.net.URL` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.f:(Ljava/net/URL;ILjava/net/URL;Ljava/util/Map;)Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3db938.  v0:= -1I;
  #L3db93a.  v1:= 5I;
  #L3db93c.  if v4 >= v1 then goto L3dbaa4;
  #L3db940.  if v5 == 0 then goto L3db972;
  #L3db944.  call temp:= `toURI`(v3) @signature `Ljava/net/URL;.toURI:()Ljava/net/URI;` @kind virtual;
  #L3db94a.  v1:= temp @kind object;
  #L3db94c.  call temp:= `toURI`(v5) @signature `Ljava/net/URL;.toURI:()Ljava/net/URI;` @kind virtual;
  #L3db952.  v5:= temp @kind object;
  #L3db954.  call temp:= `equals`(v1, v5) @signature `Ljava/net/URI;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3db95a.  v5:= temp;
  #L3db95c.  if v5 != 0 then goto L3db962;
  #L3db960.  goto L3db972;
  #L3db962.  v5:= new `com.bumptech.glide.load.HttpException`;
  #L3db966.  v1:= "In re-direct loop" @kind object;
  #L3db96a.  call `<init>`(v5, v1, v0) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3db970.  throw v5;
  #L3db972.  call temp:= `a`(v2, v3, v6) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.a:(Ljava/net/URL;Ljava/util/Map;)Ljava/net/HttpURLConnection;` @kind direct;
  #L3db978.  v5:= temp @kind object;
  #L3db97a.  v2.`com.bumptech.glide.load.data.HttpUrlFetcher.d` @type ^`java.net.HttpURLConnection` := v5 @kind object;
  #L3db97e.  call `connect`(v5) @signature `Ljava/net/HttpURLConnection;.connect:()V` @kind virtual;
  #L3db984.  v5:= v2.`com.bumptech.glide.load.data.HttpUrlFetcher.d` @type ^`java.net.HttpURLConnection` @kind object;
  #L3db988.  call temp:= `getInputStream`(v5) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L3db98e.  v5:= temp @kind object;
  #L3db990.  v2.`com.bumptech.glide.load.data.HttpUrlFetcher.e` @type ^`java.io.InputStream` := v5 @kind object;
  #L3db994.  v5:= v2.`com.bumptech.glide.load.data.HttpUrlFetcher.f` @type ^`boolean` @kind boolean;
  #L3db998.  if v5 == 0 then goto L3db9a0;
  #L3db99c.  v3:= 0I;
  #L3db99e.  return v3 @kind object;
  #L3db9a0.  v5:= v2.`com.bumptech.glide.load.data.HttpUrlFetcher.d` @type ^`java.net.HttpURLConnection` @kind object;
  #L3db9a4.  call temp:= `b`(v5) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.b:(Ljava/net/HttpURLConnection;)I` @kind static;
  #L3db9aa.  v5:= temp;
  #L3db9ac.  call temp:= `d`(v5) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.d:(I)Z` @kind static;
  #L3db9b2.  v1:= temp;
  #L3db9b4.  if v1 == 0 then goto L3db9c6;
  #L3db9b8.  v3:= v2.`com.bumptech.glide.load.data.HttpUrlFetcher.d` @type ^`java.net.HttpURLConnection` @kind object;
  #L3db9bc.  call temp:= `c`(v2, v3) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.c:(Ljava/net/HttpURLConnection;)Ljava/io/InputStream;` @kind direct;
  #L3db9c2.  v3:= temp @kind object;
  #L3db9c4.  return v3 @kind object;
  #L3db9c6.  call temp:= `e`(v5) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.e:(I)Z` @kind static;
  #L3db9cc.  v1:= temp;
  #L3db9ce.  if v1 == 0 then goto L3dba4c;
  #L3db9d2.  v0:= v2.`com.bumptech.glide.load.data.HttpUrlFetcher.d` @type ^`java.net.HttpURLConnection` @kind object;
  #L3db9d6.  v1:= "Location" @kind object;
  #L3db9da.  call temp:= `getHeaderField`(v0, v1) @signature `Ljava/net/HttpURLConnection;.getHeaderField:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3db9e0.  v0:= temp @kind object;
  #L3db9e2.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3db9e8.  v1:= temp;
  #L3db9ea.  if v1 != 0 then goto L3dba3c;
  #L3db9ee.  v1:= new `java.net.URL`;
  #L3db9f2.  call `<init>`(v1, v3, v0) @signature `Ljava/net/URL;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @kind direct;
  #L3db9f8.  call `cleanup`(v2) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.cleanup:()V` @kind virtual;
  #L3db9fe.  v4:= v4 + 1;
  #L3dba02.  call temp:= `f`(v2, v1, v4, v3, v6) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.f:(Ljava/net/URL;ILjava/net/URL;Ljava/util/Map;)Ljava/io/InputStream;` @kind direct;
  #L3dba08.  v3:= temp @kind object;
  #L3dba0a.  return v3 @kind object;
  #L3dba0c.  v3:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L3dba0e.  v4:= new `com.bumptech.glide.load.HttpException`;
  #L3dba12.  v6:= new `java.lang.StringBuilder`;
  #L3dba16.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dba1c.  v1:= "Bad redirect url: " @kind object;
  #L3dba20.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dba26.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dba2c.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dba32.  v6:= temp @kind object;
  #L3dba34.  call `<init>`(v4, v6, v5, v3) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind direct;
  #L3dba3a.  throw v4;
  #L3dba3c.  v3:= new `com.bumptech.glide.load.HttpException`;
  #L3dba40.  v4:= "Received empty or null redirect url" @kind object;
  #L3dba44.  call `<init>`(v3, v4, v5) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3dba4a.  throw v3;
  #L3dba4c.  if v5 != v0 then goto L3dba5c;
  #L3dba50.  v3:= new `com.bumptech.glide.load.HttpException`;
  #L3dba54.  call `<init>`(v3, v5) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(I)V` @kind direct;
  #L3dba5a.  throw v3;
  #L3dba5c.  v3:= new `com.bumptech.glide.load.HttpException`;
  #L3dba60.  v4:= v2.`com.bumptech.glide.load.data.HttpUrlFetcher.d` @type ^`java.net.HttpURLConnection` @kind object;
  #L3dba64.  call temp:= `getResponseMessage`(v4) @signature `Ljava/net/HttpURLConnection;.getResponseMessage:()Ljava/lang/String;` @kind virtual;
  #L3dba6a.  v4:= temp @kind object;
  #L3dba6c.  call `<init>`(v3, v4, v5) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3dba72.  throw v3;
  #L3dba74.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L3dba76.  v4:= new `com.bumptech.glide.load.HttpException`;
  #L3dba7a.  v6:= "Failed to get a response message" @kind object;
  #L3dba7e.  call `<init>`(v4, v6, v5, v3) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind direct;
  #L3dba84.  throw v4;
  #L3dba86.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L3dba88.  v4:= new `com.bumptech.glide.load.HttpException`;
  #L3dba8c.  v5:= v2.`com.bumptech.glide.load.data.HttpUrlFetcher.d` @type ^`java.net.HttpURLConnection` @kind object;
  #L3dba90.  call temp:= `b`(v5) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.b:(Ljava/net/HttpURLConnection;)I` @kind static;
  #L3dba96.  v5:= temp;
  #L3dba98.  v6:= "Failed to connect or obtain data" @kind object;
  #L3dba9c.  call `<init>`(v4, v6, v5, v3) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind direct;
  #L3dbaa2.  throw v4;
  #L3dbaa4.  v3:= new `com.bumptech.glide.load.HttpException`;
  #L3dbaa8.  v4:= "Too many (> 5) redirects!" @kind object;
  #L3dbaac.  call `<init>`(v3, v4, v0) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3dbab2.  throw v3;
  catch `java.net.URISyntaxException` @[L3db944..L3db972] goto L3db972;
  catch `java.io.IOException` @[L3db97e..L3db994] goto L3dba86;
  catch `java.net.MalformedURLException` @[L3db9ee..L3db9f8] goto L3dba0c;
  catch `java.io.IOException` @[L3dba5c..L3dba74] goto L3dba74;
}
procedure `void` `cancel`(`com.bumptech.glide.load.data.HttpUrlFetcher` v1 @kind this) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbc24.  v0:= 1I;
  #L3dbc26.  v1.`com.bumptech.glide.load.data.HttpUrlFetcher.f` @type ^`boolean` := v0 @kind boolean;
  #L3dbc2a.  return @kind void;
}
procedure `void` `cleanup`(`com.bumptech.glide.load.data.HttpUrlFetcher` v1 @kind this) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.cleanup:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbc3c.  v0:= v1.`com.bumptech.glide.load.data.HttpUrlFetcher.e` @type ^`java.io.InputStream` @kind object;
  #L3dbc40.  if v0 == 0 then goto L3dbc4e;
  #L3dbc44.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3dbc4a.  goto L3dbc4e;
  #L3dbc4c.  
  #L3dbc4e.  v0:= v1.`com.bumptech.glide.load.data.HttpUrlFetcher.d` @type ^`java.net.HttpURLConnection` @kind object;
  #L3dbc52.  if v0 == 0 then goto L3dbc5c;
  #L3dbc56.  call `disconnect`(v0) @signature `Ljava/net/HttpURLConnection;.disconnect:()V` @kind virtual;
  #L3dbc5c.  v0:= 0I;
  #L3dbc5e.  v1.`com.bumptech.glide.load.data.HttpUrlFetcher.d` @type ^`java.net.HttpURLConnection` := v0 @kind object;
  #L3dbc62.  return @kind void;
  catch `java.io.IOException` @[L3dbc44..L3dbc4a] goto L3dbc4c;
}
procedure `java.lang.Class` `getDataClass`(`com.bumptech.glide.load.data.HttpUrlFetcher` v1 @kind this) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbaf8.  v0:= constclass @type ^`java.io.InputStream` @kind object;
  #L3dbafc.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.DataSource` `getDataSource`(`com.bumptech.glide.load.data.HttpUrlFetcher` v1 @kind this) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.getDataSource:()Lcom/bumptech/glide/load/DataSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3db810.  v0:= `@@com.bumptech.glide.load.DataSource.REMOTE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3db814.  return v0 @kind object;
}
procedure `void` `loadData`(`com.bumptech.glide.load.data.HttpUrlFetcher` v8 @kind this, `com.bumptech.glide.Priority` v9 @kind object, `com.bumptech.glide.load.data.DataFetcher$DataCallback` v10 @kind object) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.loadData:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3dbc84.  v9:= "Finished http url fetcher fetch in " @kind object;
  #L3dbc88.  v0:= "HttpUrlFetcher" @kind object;
  #L3dbc8c.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L3dbc92.  v1:= temp @kind wide;
  #L3dbc94.  v3:= 2I;
  #L3dbc96.  v4:= v8.`com.bumptech.glide.load.data.HttpUrlFetcher.a` @type ^`com.bumptech.glide.load.model.GlideUrl` @kind object;
  #L3dbc9a.  call temp:= `toURL`(v4) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.toURL:()Ljava/net/URL;` @kind virtual;
  #L3dbca0.  v4:= temp @kind object;
  #L3dbca2.  v5:= 0I;
  #L3dbca4.  v6:= 0I;
  #L3dbca6.  v7:= v8.`com.bumptech.glide.load.data.HttpUrlFetcher.a` @type ^`com.bumptech.glide.load.model.GlideUrl` @kind object;
  #L3dbcaa.  call temp:= `getHeaders`(v7) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.getHeaders:()Ljava/util/Map;` @kind virtual;
  #L3dbcb0.  v7:= temp @kind object;
  #L3dbcb2.  call temp:= `f`(v8, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/data/HttpUrlFetcher;.f:(Ljava/net/URL;ILjava/net/URL;Ljava/util/Map;)Ljava/io/InputStream;` @kind direct;
  #L3dbcb8.  v4:= temp @kind object;
  #L3dbcba.  call `onDataReady`(v10, v4) @signature `Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;.onDataReady:(Ljava/lang/Object;)V` @kind interface;
  #L3dbcc0.  call temp:= `isLoggable`(v0, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3dbcc6.  v10:= temp;
  #L3dbcc8.  if v10 == 0 then goto L3dbd34;
  #L3dbccc.  v10:= new `java.lang.StringBuilder`;
  #L3dbcd0.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dbcd6.  goto L3dbd12;
  #L3dbcd8.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3dbcda.  goto L3dbd36;
  #L3dbcdc.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L3dbcde.  v5:= 3I;
  #L3dbce0.  call temp:= `isLoggable`(v0, v5) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3dbce6.  v5:= temp;
  #L3dbce8.  if v5 == 0 then goto L3dbcf6;
  #L3dbcec.  v5:= "Failed to load data for url" @kind object;
  #L3dbcf0.  call temp:= `d`(v0, v5, v4) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3dbcf6.  call `onLoadFailed`(v10, v4) @signature `Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;.onLoadFailed:(Ljava/lang/Exception;)V` @kind interface;
  #L3dbcfc.  call temp:= `isLoggable`(v0, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3dbd02.  v10:= temp;
  #L3dbd04.  if v10 == 0 then goto L3dbd34;
  #L3dbd08.  v10:= new `java.lang.StringBuilder`;
  #L3dbd0c.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dbd12.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dbd18.  call temp:= `getElapsedMillis`(v1) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3dbd1e.  v1:= temp @kind wide;
  #L3dbd20.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dbd26.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dbd2c.  v9:= temp @kind object;
  #L3dbd2e.  call temp:= `v`(v0, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3dbd34.  return @kind void;
  #L3dbd36.  call temp:= `isLoggable`(v0, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3dbd3c.  v3:= temp;
  #L3dbd3e.  if v3 == 0 then goto L3dbd6e;
  #L3dbd42.  v3:= new `java.lang.StringBuilder`;
  #L3dbd46.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dbd4c.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dbd52.  call temp:= `getElapsedMillis`(v1) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3dbd58.  v1:= temp @kind wide;
  #L3dbd5a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dbd60.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dbd66.  v9:= temp @kind object;
  #L3dbd68.  call temp:= `v`(v0, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3dbd6e.  throw v10;
  catch `java.io.IOException` @[L3dbc96..L3dbcc0] goto L3dbcdc;
  catch `java.lang.Throwable` @[L3dbc96..L3dbcc0] goto L3dbcd8;
  catch `java.lang.Throwable` @[L3dbce0..L3dbcfc] goto L3dbcd8;
}
