record `com.bumptech.glide.disklrucache.a$a` @kind class @AccessFlag  extends `java.io.ByteArrayOutputStream` @kind class {
  `com.bumptech.glide.disklrucache.a` `com.bumptech.glide.disklrucache.a$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.disklrucache.a$a` v0 @kind this, `com.bumptech.glide.disklrucache.a` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/disklrucache/a$a;.<init>:(Lcom/bumptech/glide/disklrucache/a;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d8018.  v0.`com.bumptech.glide.disklrucache.a$a.a` @type ^`com.bumptech.glide.disklrucache.a` := v1 @kind object;
  #L3d801c.  call `<init>`(v0, v2) @signature `Ljava/io/ByteArrayOutputStream;.<init>:(I)V` @kind direct;
  #L3d8022.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.disklrucache.a$a` v5 @kind this) @signature `Lcom/bumptech/glide/disklrucache/a$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d7fa4.  v0:= v5.`java.io.ByteArrayOutputStream.count` @type ^`int`;
  #L3d7fa8.  if v0 <= 0 then goto L3d7fc4;
  #L3d7fac.  v1:= v5.`java.io.ByteArrayOutputStream.buf` @type ^`byte`[] @kind object;
  #L3d7fb0.  v2:= v0 + -1;
  #L3d7fb4.  v1:= v1[v2] @kind byte;
  #L3d7fb8.  v2:= 13I;
  #L3d7fbc.  if v1 != v2 then goto L3d7fc4;
  #L3d7fc0.  v0:= v0 + -1;
  #L3d7fc4.  v1:= new `java.lang.String`;
  #L3d7fc8.  v2:= v5.`java.io.ByteArrayOutputStream.buf` @type ^`byte`[] @kind object;
  #L3d7fcc.  v3:= 0I;
  #L3d7fce.  v4:= v5.`com.bumptech.glide.disklrucache.a$a.a` @type ^`com.bumptech.glide.disklrucache.a` @kind object;
  #L3d7fd2.  call temp:= `a`(v4) @signature `Lcom/bumptech/glide/disklrucache/a;.a:(Lcom/bumptech/glide/disklrucache/a;)Ljava/nio/charset/Charset;` @kind static;
  #L3d7fd8.  v4:= temp @kind object;
  #L3d7fda.  call temp:= `name`(v4) @signature `Ljava/nio/charset/Charset;.name:()Ljava/lang/String;` @kind virtual;
  #L3d7fe0.  v4:= temp @kind object;
  #L3d7fe2.  call `<init>`(v1, v2, v3, v0, v4) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L3d7fe8.  return v1 @kind object;
  #L3d7fea.  v0:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L3d7fec.  v1:= new `java.lang.AssertionError`;
  #L3d7ff0.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3d7ff6.  throw v1;
  catch `java.io.UnsupportedEncodingException` @[L3d7fc4..L3d7fe8] goto L3d7fea;
}
