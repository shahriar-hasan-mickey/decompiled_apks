record `com.bumptech.glide.disklrucache.DiskLruCache$a` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `com.bumptech.glide.disklrucache.DiskLruCache` `com.bumptech.glide.disklrucache.DiskLruCache$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.disklrucache.DiskLruCache$a` v0 @kind this, `com.bumptech.glide.disklrucache.DiskLruCache` v1 @kind object) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$a;.<init>:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d65d8.  v0.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` := v1 @kind object;
  #L3d65dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d65e2.  return @kind void;
}
procedure `java.lang.Void` `a`(`com.bumptech.glide.disklrucache.DiskLruCache$a` v4 @kind this) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$a;.a:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d6564.  v0:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3d6568.  @monitorenter v0
  #L3d656a.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3d656e.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.a:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)Ljava/io/Writer;` @kind static;
  #L3d6574.  v1:= temp @kind object;
  #L3d6576.  v2:= 0I;
  #L3d6578.  if v1 != 0 then goto L3d6580;
  #L3d657c.  @monitorexit v0
  #L3d657e.  return v2 @kind object;
  #L3d6580.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3d6584.  call `e`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.e:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)V` @kind static;
  #L3d658a.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3d658e.  call temp:= `h`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.h:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)Z` @kind static;
  #L3d6594.  v1:= temp;
  #L3d6596.  if v1 == 0 then goto L3d65b0;
  #L3d659a.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3d659e.  call `i`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.i:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)V` @kind static;
  #L3d65a4.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3d65a8.  v3:= 0I;
  #L3d65aa.  call temp:= `j`(v1, v3) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.j:(Lcom/bumptech/glide/disklrucache/DiskLruCache;I)I` @kind static;
  #L3d65b0.  @monitorexit v0
  #L3d65b2.  return v2 @kind object;
  #L3d65b4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d65b6.  @monitorexit v0
  #L3d65b8.  throw v1;
  catch `java.lang.Throwable` @[L3d656a..L3d65b8] goto L3d65b4;
}
procedure `java.lang.Object` `call`(`com.bumptech.glide.disklrucache.DiskLruCache$a` v1 @kind this) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3d6548.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$a;.a:()Ljava/lang/Void;` @kind virtual;
  #L3d654e.  v0:= temp @kind object;
  #L3d6550.  return v0 @kind object;
}
