record `com.bumptech.glide.request.SingleRequest` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.request.Request` @kind interface, `com.bumptech.glide.request.target.SizeReadyCallback` @kind interface, `com.bumptech.glide.request.ResourceCallback` @kind interface {
  `int` `com.bumptech.glide.request.SingleRequest.A` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.SingleRequest.B` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.SingleRequest.C` @AccessFlag PRIVATE;
  `java.lang.RuntimeException` `com.bumptech.glide.request.SingleRequest.D` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.SingleRequest.a` @AccessFlag PRIVATE;
  `java.lang.String` `com.bumptech.glide.request.SingleRequest.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.util.pool.StateVerifier` `com.bumptech.glide.request.SingleRequest.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.request.SingleRequest.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.RequestListener` `com.bumptech.glide.request.SingleRequest.e` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.RequestCoordinator` `com.bumptech.glide.request.SingleRequest.f` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.bumptech.glide.request.SingleRequest.g` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.GlideContext` `com.bumptech.glide.request.SingleRequest.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.request.SingleRequest.i` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.request.SingleRequest.j` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.BaseRequestOptions` `com.bumptech.glide.request.SingleRequest.k` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.request.SingleRequest.l` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.request.SingleRequest.m` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.Priority` `com.bumptech.glide.request.SingleRequest.n` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.target.Target` `com.bumptech.glide.request.SingleRequest.o` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.request.SingleRequest.p` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.transition.TransitionFactory` `com.bumptech.glide.request.SingleRequest.q` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `com.bumptech.glide.request.SingleRequest.r` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Resource` `com.bumptech.glide.request.SingleRequest.s` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.Engine$LoadStatus` `com.bumptech.glide.request.SingleRequest.t` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.request.SingleRequest.u` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.Engine` `com.bumptech.glide.request.SingleRequest.v` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.request.SingleRequest$a` `com.bumptech.glide.request.SingleRequest.w` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.SingleRequest.x` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.SingleRequest.y` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.SingleRequest.z` @AccessFlag PRIVATE;
}
global `boolean` `@@com.bumptech.glide.request.SingleRequest.E` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/request/SingleRequest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f9f50.  v0:= "GlideRequest" @kind object;
  #L3f9f54.  v1:= 2I;
  #L3f9f56.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3f9f5c.  v0:= temp;
  #L3f9f5e.  `@@com.bumptech.glide.request.SingleRequest.E` @type ^`boolean` := v0 @kind boolean;
  #L3f9f62.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.SingleRequest` v3 @kind this, `android.content.Context` v4 @kind object, `com.bumptech.glide.GlideContext` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Class` v8 @kind object, `com.bumptech.glide.request.BaseRequestOptions` v9 @kind object, `int` v10 , `int` v11 , `com.bumptech.glide.Priority` v12 @kind object, `com.bumptech.glide.request.target.Target` v13 @kind object, `com.bumptech.glide.request.RequestListener` v14 @kind object, `java.util.List` v15 @kind object, `com.bumptech.glide.request.RequestCoordinator` v16 @kind object, `com.bumptech.glide.load.engine.Engine` v17 @kind object, `com.bumptech.glide.request.transition.TransitionFactory` v18 @kind object, `java.util.concurrent.Executor` v19 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/BaseRequestOptions;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/List;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/request/transition/TransitionFactory;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3f9f74.  v0:= v3 @kind object;
  #L3f9f76.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f9f7c.  v1:= `@@com.bumptech.glide.request.SingleRequest.E` @type ^`boolean` @kind boolean;
  #L3f9f80.  if v1 == 0 then goto L3f9f96;
  #L3f9f84.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L3f9f8a.  v1:= temp;
  #L3f9f8c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3f9f92.  v1:= temp @kind object;
  #L3f9f94.  goto L3f9f98;
  #L3f9f96.  v1:= 0I;
  #L3f9f98.  v0.`com.bumptech.glide.request.SingleRequest.b` @type ^`java.lang.String` := v1 @kind object;
  #L3f9f9c.  call temp:= `newInstance`() @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.newInstance:()Lcom/bumptech/glide/util/pool/StateVerifier;` @kind static;
  #L3f9fa2.  v1:= temp @kind object;
  #L3f9fa4.  v0.`com.bumptech.glide.request.SingleRequest.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` := v1 @kind object;
  #L3f9fa8.  v1:= v6 @kind object;
  #L3f9faa.  v0.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` := v1 @kind object;
  #L3f9fae.  v1:= v4 @kind object;
  #L3f9fb0.  v0.`com.bumptech.glide.request.SingleRequest.g` @type ^`android.content.Context` := v1 @kind object;
  #L3f9fb4.  v1:= v5 @kind object;
  #L3f9fb6.  v0.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.GlideContext` := v1 @kind object;
  #L3f9fba.  v2:= v7 @kind object;
  #L3f9fbc.  v0.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` := v2 @kind object;
  #L3f9fc0.  v2:= v8 @kind object;
  #L3f9fc2.  v0.`com.bumptech.glide.request.SingleRequest.j` @type ^`java.lang.Class` := v2 @kind object;
  #L3f9fc6.  v2:= v9 @kind object;
  #L3f9fc8.  v0.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` := v2 @kind object;
  #L3f9fcc.  v2:= v10;
  #L3f9fce.  v0.`com.bumptech.glide.request.SingleRequest.l` @type ^`int` := v2;
  #L3f9fd2.  v2:= v11;
  #L3f9fd4.  v0.`com.bumptech.glide.request.SingleRequest.m` @type ^`int` := v2;
  #L3f9fd8.  v2:= v12 @kind object;
  #L3f9fda.  v0.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.Priority` := v2 @kind object;
  #L3f9fde.  v2:= v13 @kind object;
  #L3f9fe0.  v0.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` := v2 @kind object;
  #L3f9fe4.  v2:= v14 @kind object;
  #L3f9fe6.  v0.`com.bumptech.glide.request.SingleRequest.e` @type ^`com.bumptech.glide.request.RequestListener` := v2 @kind object;
  #L3f9fea.  v2:= v15 @kind object;
  #L3f9fec.  v0.`com.bumptech.glide.request.SingleRequest.p` @type ^`java.util.List` := v2 @kind object;
  #L3f9ff0.  v2:= v16 @kind object;
  #L3f9ff4.  v0.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.request.RequestCoordinator` := v2 @kind object;
  #L3f9ff8.  v2:= v17 @kind object;
  #L3f9ffc.  v0.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.load.engine.Engine` := v2 @kind object;
  #L3fa000.  v2:= v18 @kind object;
  #L3fa004.  v0.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.transition.TransitionFactory` := v2 @kind object;
  #L3fa008.  v2:= v19 @kind object;
  #L3fa00c.  v0.`com.bumptech.glide.request.SingleRequest.r` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L3fa010.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.a` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa014.  v0.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` := v2 @kind object;
  #L3fa018.  v2:= v0.`com.bumptech.glide.request.SingleRequest.D` @type ^`java.lang.RuntimeException` @kind object;
  #L3fa01c.  if v2 != 0 then goto L3fa04a;
  #L3fa020.  call temp:= `getExperiments`(v5) @signature `Lcom/bumptech/glide/GlideContext;.getExperiments:()Lcom/bumptech/glide/GlideExperiments;` @kind virtual;
  #L3fa026.  v1:= temp @kind object;
  #L3fa028.  v2:= constclass @type ^`com.bumptech.glide.GlideBuilder$LogRequestOrigins` @kind object;
  #L3fa02c.  call temp:= `isEnabled`(v1, v2) @signature `Lcom/bumptech/glide/GlideExperiments;.isEnabled:(Ljava/lang/Class;)Z` @kind virtual;
  #L3fa032.  v1:= temp;
  #L3fa034.  if v1 == 0 then goto L3fa04a;
  #L3fa038.  v1:= new `java.lang.RuntimeException`;
  #L3fa03c.  v2:= "Glide request origin trace" @kind object;
  #L3fa040.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fa046.  v0.`com.bumptech.glide.request.SingleRequest.D` @type ^`java.lang.RuntimeException` := v1 @kind object;
  #L3fa04a.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fa05c.  v0:= v2.`com.bumptech.glide.request.SingleRequest.C` @type ^`boolean` @kind boolean;
  #L3fa060.  if v0 != 0 then goto L3fa066;
  #L3fa064.  return @kind void;
  #L3fa066.  v0:= new `java.lang.IllegalStateException`;
  #L3fa06a.  v1:= "You can't start or clear loads in RequestListener or Target callbacks. If you're trying to start a fallback request when a load fails, use RequestBuilder#error(RequestBuilder). Otherwise consider posting your into() or clear() calls to the main thread using a Handler instead." @kind object;
  #L3fa06e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fa074.  throw v0;
}
procedure `boolean` `b`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f9b4c.  v0:= v1.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3f9b50.  if v0 == 0 then goto L3f9b66;
  #L3f9b54.  call temp:= `canNotifyCleared`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canNotifyCleared:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3f9b5a.  v0:= temp;
  #L3f9b5c.  if v0 == 0 then goto L3f9b62;
  #L3f9b60.  goto L3f9b66;
  #L3f9b62.  v0:= 0I;
  #L3f9b64.  goto L3f9b68;
  #L3f9b66.  v0:= 1I;
  #L3f9b68.  return v0;
}
procedure `boolean` `c`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f9b7c.  v0:= v1.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3f9b80.  if v0 == 0 then goto L3f9b96;
  #L3f9b84.  call temp:= `canNotifyStatusChanged`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canNotifyStatusChanged:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3f9b8a.  v0:= temp;
  #L3f9b8c.  if v0 == 0 then goto L3f9b92;
  #L3f9b90.  goto L3f9b96;
  #L3f9b92.  v0:= 0I;
  #L3f9b94.  goto L3f9b98;
  #L3f9b96.  v0:= 1I;
  #L3f9b98.  return v0;
}
procedure `boolean` `d`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.d:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f9bac.  v0:= v1.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3f9bb0.  if v0 == 0 then goto L3f9bc6;
  #L3f9bb4.  call temp:= `canSetImage`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canSetImage:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3f9bba.  v0:= temp;
  #L3f9bbc.  if v0 == 0 then goto L3f9bc2;
  #L3f9bc0.  goto L3f9bc6;
  #L3f9bc2.  v0:= 0I;
  #L3f9bc4.  goto L3f9bc8;
  #L3f9bc6.  v0:= 1I;
  #L3f9bc8.  return v0;
}
procedure `void` `e`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fa210.  call `a`(v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:()V` @kind direct;
  #L3fa216.  v0:= v1.`com.bumptech.glide.request.SingleRequest.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3fa21a.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3fa220.  v0:= v1.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3fa224.  call `removeCallback`(v0, v1) @signature `Lcom/bumptech/glide/request/target/Target;.removeCallback:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @kind interface;
  #L3fa22a.  v0:= v1.`com.bumptech.glide.request.SingleRequest.t` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` @kind object;
  #L3fa22e.  if v0 == 0 then goto L3fa23e;
  #L3fa232.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/engine/Engine$LoadStatus;.cancel:()V` @kind virtual;
  #L3fa238.  v0:= 0I;
  #L3fa23a.  v1.`com.bumptech.glide.request.SingleRequest.t` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` := v0 @kind object;
  #L3fa23e.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.request.SingleRequest` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.f:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3fa2fc.  v0:= v3.`com.bumptech.glide.request.SingleRequest.p` @type ^`java.util.List` @kind object;
  #L3fa300.  if v0 != 0 then goto L3fa306;
  #L3fa304.  return @kind void;
  #L3fa306.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3fa30c.  v0:= temp @kind object;
  #L3fa30e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fa314.  v1:= temp;
  #L3fa316.  if v1 == 0 then goto L3fa33a;
  #L3fa31a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fa320.  v1:= temp @kind object;
  #L3fa322.  v1:= (`com.bumptech.glide.request.RequestListener`) v1 @kind object;
  #L3fa326.  v2:= instanceof @variable v1 @type ^`com.bumptech.glide.request.ExperimentalRequestListener` @kind boolean;
  #L3fa32a.  if v2 == 0 then goto L3fa30e;
  #L3fa32e.  v1:= (`com.bumptech.glide.request.ExperimentalRequestListener`) v1 @kind object;
  #L3fa332.  call `onRequestStarted`(v1, v4) @signature `Lcom/bumptech/glide/request/ExperimentalRequestListener;.onRequestStarted:(Ljava/lang/Object;)V` @kind virtual;
  #L3fa338.  goto L3fa30e;
  #L3fa33a.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `g`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.g:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f99f0.  v0:= v1.`com.bumptech.glide.request.SingleRequest.x` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f99f4.  if v0 != 0 then goto L3f9a34;
  #L3f99f8.  v0:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f99fc.  call temp:= `getErrorPlaceholder`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getErrorPlaceholder:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3f9a02.  v0:= temp @kind object;
  #L3f9a04.  v1.`com.bumptech.glide.request.SingleRequest.x` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f9a08.  if v0 != 0 then goto L3f9a34;
  #L3f9a0c.  v0:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9a10.  call temp:= `getErrorId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getErrorId:()I` @kind virtual;
  #L3f9a16.  v0:= temp;
  #L3f9a18.  if v0 <= 0 then goto L3f9a34;
  #L3f9a1c.  v0:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9a20.  call temp:= `getErrorId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getErrorId:()I` @kind virtual;
  #L3f9a26.  v0:= temp;
  #L3f9a28.  call temp:= `k`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3f9a2e.  v0:= temp @kind object;
  #L3f9a30.  v1.`com.bumptech.glide.request.SingleRequest.x` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f9a34.  v0:= v1.`com.bumptech.glide.request.SingleRequest.x` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f9a38.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `h`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.h:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f9a4c.  v0:= v1.`com.bumptech.glide.request.SingleRequest.z` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f9a50.  if v0 != 0 then goto L3f9a90;
  #L3f9a54.  v0:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9a58.  call temp:= `getFallbackDrawable`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getFallbackDrawable:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3f9a5e.  v0:= temp @kind object;
  #L3f9a60.  v1.`com.bumptech.glide.request.SingleRequest.z` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f9a64.  if v0 != 0 then goto L3f9a90;
  #L3f9a68.  v0:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9a6c.  call temp:= `getFallbackId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getFallbackId:()I` @kind virtual;
  #L3f9a72.  v0:= temp;
  #L3f9a74.  if v0 <= 0 then goto L3f9a90;
  #L3f9a78.  v0:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9a7c.  call temp:= `getFallbackId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getFallbackId:()I` @kind virtual;
  #L3f9a82.  v0:= temp;
  #L3f9a84.  call temp:= `k`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3f9a8a.  v0:= temp @kind object;
  #L3f9a8c.  v1.`com.bumptech.glide.request.SingleRequest.z` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f9a90.  v0:= v1.`com.bumptech.glide.request.SingleRequest.z` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f9a94.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `i`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.i:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f9aa8.  v0:= v1.`com.bumptech.glide.request.SingleRequest.y` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f9aac.  if v0 != 0 then goto L3f9aec;
  #L3f9ab0.  v0:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9ab4.  call temp:= `getPlaceholderDrawable`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPlaceholderDrawable:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3f9aba.  v0:= temp @kind object;
  #L3f9abc.  v1.`com.bumptech.glide.request.SingleRequest.y` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f9ac0.  if v0 != 0 then goto L3f9aec;
  #L3f9ac4.  v0:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9ac8.  call temp:= `getPlaceholderId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPlaceholderId:()I` @kind virtual;
  #L3f9ace.  v0:= temp;
  #L3f9ad0.  if v0 <= 0 then goto L3f9aec;
  #L3f9ad4.  v0:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9ad8.  call temp:= `getPlaceholderId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPlaceholderId:()I` @kind virtual;
  #L3f9ade.  v0:= temp;
  #L3f9ae0.  call temp:= `k`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3f9ae6.  v0:= temp @kind object;
  #L3f9ae8.  v1.`com.bumptech.glide.request.SingleRequest.y` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f9aec.  v0:= v1.`com.bumptech.glide.request.SingleRequest.y` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f9af0.  return v0 @kind object;
}
procedure `boolean` `j`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.j:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f9d9c.  v0:= v1.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3f9da0.  if v0 == 0 then goto L3f9dbe;
  #L3f9da4.  call temp:= `getRoot`(v0) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.getRoot:()Lcom/bumptech/glide/request/RequestCoordinator;` @kind interface;
  #L3f9daa.  v0:= temp @kind object;
  #L3f9dac.  call temp:= `isAnyResourceSet`(v0) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.isAnyResourceSet:()Z` @kind interface;
  #L3f9db2.  v0:= temp;
  #L3f9db4.  if v0 != 0 then goto L3f9dba;
  #L3f9db8.  goto L3f9dbe;
  #L3f9dba.  v0:= 0I;
  #L3f9dbc.  goto L3f9dc0;
  #L3f9dbe.  v0:= 1I;
  #L3f9dc0.  return v0;
}
procedure `android.graphics.drawable.Drawable` `k`(`com.bumptech.glide.request.SingleRequest` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:(I)Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f9b04.  v0:= v2.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9b08.  call temp:= `getTheme`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L3f9b0e.  v0:= temp @kind object;
  #L3f9b10.  if v0 == 0 then goto L3f9b22;
  #L3f9b14.  v0:= v2.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9b18.  call temp:= `getTheme`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L3f9b1e.  v0:= temp @kind object;
  #L3f9b20.  goto L3f9b2e;
  #L3f9b22.  v0:= v2.`com.bumptech.glide.request.SingleRequest.g` @type ^`android.content.Context` @kind object;
  #L3f9b26.  call temp:= `getTheme`(v0) @signature `Landroid/content/Context;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L3f9b2c.  v0:= temp @kind object;
  #L3f9b2e.  v1:= v2.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3f9b32.  call temp:= `getDrawable`(v1, v3, v0) @signature `Lcom/bumptech/glide/load/resource/drawable/DrawableDecoderCompat;.getDrawable:(Landroid/content/Context;ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3f9b38.  v3:= temp @kind object;
  #L3f9b3a.  return v3 @kind object;
}
procedure `void` `l`(`com.bumptech.glide.request.SingleRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.l:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fa34c.  v0:= new `java.lang.StringBuilder`;
  #L3fa350.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fa356.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa35c.  v2:= " this: " @kind object;
  #L3fa360.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa366.  v2:= v1.`com.bumptech.glide.request.SingleRequest.b` @type ^`java.lang.String` @kind object;
  #L3fa36a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa370.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fa376.  v2:= temp @kind object;
  #L3fa378.  v0:= "GlideRequest" @kind object;
  #L3fa37c.  call temp:= `v`(v0, v2) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fa382.  return @kind void;
}
procedure `int` `m`(`int` v1 , `float` v2 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.m:(IF)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3f9e7c.  v0:= -2147483648I;
  #L3f9e80.  if v1 != v0 then goto L3f9e86;
  #L3f9e84.  goto L3f9e94;
  #L3f9e86.  v1:= (`float`) v1 @kind i2f;
  #L3f9e88.  v2:= v2 * v1 @kind float;
  #L3f9e8c.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3f9e92.  v1:= temp;
  #L3f9e94.  return v1;
}
procedure `void` `n`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.n:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fa394.  v0:= v1.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3fa398.  if v0 == 0 then goto L3fa3a2;
  #L3fa39c.  call `onRequestFailed`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.onRequestFailed:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3fa3a2.  return @kind void;
}
procedure `void` `o`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.o:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fa3b4.  v0:= v1.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3fa3b8.  if v0 == 0 then goto L3fa3c2;
  #L3fa3bc.  call `onRequestSuccess`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.onRequestSuccess:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3fa3c2.  return @kind void;
}
procedure `com.bumptech.glide.request.SingleRequest` `obtain`(`android.content.Context` v18 @kind object, `com.bumptech.glide.GlideContext` v19 @kind object, `java.lang.Object` v20 @kind object, `java.lang.Object` v21 @kind object, `java.lang.Class` v22 @kind object, `com.bumptech.glide.request.BaseRequestOptions` v23 @kind object, `int` v24 , `int` v25 , `com.bumptech.glide.Priority` v26 @kind object, `com.bumptech.glide.request.target.Target` v27 @kind object, `com.bumptech.glide.request.RequestListener` v28 @kind object, `java.util.List` v29 @kind object, `com.bumptech.glide.request.RequestCoordinator` v30 @kind object, `com.bumptech.glide.load.engine.Engine` v31 @kind object, `com.bumptech.glide.request.transition.TransitionFactory` v32 @kind object, `java.util.concurrent.Executor` v33 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.obtain:(Landroid/content/Context;Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/BaseRequestOptions;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/List;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/request/transition/TransitionFactory;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/SingleRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L3f9e1c.  v1:= v18 @kind object;
  #L3f9e20.  v2:= v19 @kind object;
  #L3f9e24.  v3:= v20 @kind object;
  #L3f9e28.  v4:= v21 @kind object;
  #L3f9e2c.  v5:= v22 @kind object;
  #L3f9e30.  v6:= v23 @kind object;
  #L3f9e34.  v7:= v24;
  #L3f9e38.  v8:= v25;
  #L3f9e3c.  v9:= v26 @kind object;
  #L3f9e40.  v10:= v27 @kind object;
  #L3f9e44.  v11:= v28 @kind object;
  #L3f9e48.  v12:= v29 @kind object;
  #L3f9e4c.  v13:= v30 @kind object;
  #L3f9e50.  v14:= v31 @kind object;
  #L3f9e54.  v15:= v32 @kind object;
  #L3f9e58.  v16:= v33 @kind object;
  #L3f9e5c.  v17:= new `com.bumptech.glide.request.SingleRequest`;
  #L3f9e60.  v0:= v17 @kind object;
  #L3f9e64.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/bumptech/glide/request/SingleRequest;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/BaseRequestOptions;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/List;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/request/transition/TransitionFactory;Ljava/util/concurrent/Executor;)V` @kind direct;
  #L3f9e6a.  return v17 @kind object;
}
procedure `void` `p`(`com.bumptech.glide.request.SingleRequest` v8 @kind this, `com.bumptech.glide.load.engine.GlideException` v9 @kind object, `int` v10 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.p:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fa3f0.  v0:= v8.`com.bumptech.glide.request.SingleRequest.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3fa3f4.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3fa3fa.  v0:= v8.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3fa3fe.  @monitorenter v0
  #L3fa400.  v1:= v8.`com.bumptech.glide.request.SingleRequest.D` @type ^`java.lang.RuntimeException` @kind object;
  #L3fa404.  call `setOrigin`(v9, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.setOrigin:(Ljava/lang/Exception;)V` @kind virtual;
  #L3fa40a.  v1:= v8.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3fa40e.  call temp:= `getLogLevel`(v1) @signature `Lcom/bumptech/glide/GlideContext;.getLogLevel:()I` @kind virtual;
  #L3fa414.  v1:= temp;
  #L3fa416.  if v1 > v10 then goto L3fa48c;
  #L3fa41a.  v10:= "Glide" @kind object;
  #L3fa41e.  v2:= new `java.lang.StringBuilder`;
  #L3fa422.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fa428.  v3:= "Load failed for " @kind object;
  #L3fa42c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa432.  v3:= v8.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3fa436.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa43c.  v3:= " with size [" @kind object;
  #L3fa440.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa446.  v3:= v8.`com.bumptech.glide.request.SingleRequest.A` @type ^`int`;
  #L3fa44a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa450.  v3:= "x" @kind object;
  #L3fa454.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa45a.  v3:= v8.`com.bumptech.glide.request.SingleRequest.B` @type ^`int`;
  #L3fa45e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa464.  v3:= "]" @kind object;
  #L3fa468.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa46e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fa474.  v2:= temp @kind object;
  #L3fa476.  call temp:= `w`(v10, v2, v9) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3fa47c.  v10:= 4I;
  #L3fa47e.  if v1 > v10 then goto L3fa48c;
  #L3fa482.  v10:= "Glide" @kind object;
  #L3fa486.  call `logRootCauses`(v9, v10) @signature `Lcom/bumptech/glide/load/engine/GlideException;.logRootCauses:(Ljava/lang/String;)V` @kind virtual;
  #L3fa48c.  v10:= 0I;
  #L3fa48e.  v8.`com.bumptech.glide.request.SingleRequest.t` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` := v10 @kind object;
  #L3fa492.  v10:= `@@com.bumptech.glide.request.SingleRequest$a.e` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa496.  v8.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` := v10 @kind object;
  #L3fa49a.  v10:= 1I;
  #L3fa49c.  v8.`com.bumptech.glide.request.SingleRequest.C` @type ^`boolean` := v10 @kind boolean;
  #L3fa4a0.  v1:= 0I;
  #L3fa4a2.  v2:= v8.`com.bumptech.glide.request.SingleRequest.p` @type ^`java.util.List` @kind object;
  #L3fa4a6.  if v2 == 0 then goto L3fa4e8;
  #L3fa4aa.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3fa4b0.  v2:= temp @kind object;
  #L3fa4b2.  v3:= 0I;
  #L3fa4b4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fa4ba.  v4:= temp;
  #L3fa4bc.  if v4 == 0 then goto L3fa4ea;
  #L3fa4c0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fa4c6.  v4:= temp @kind object;
  #L3fa4c8.  v4:= (`com.bumptech.glide.request.RequestListener`) v4 @kind object;
  #L3fa4cc.  v5:= v8.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3fa4d0.  v6:= v8.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3fa4d4.  call temp:= `j`(v8) @signature `Lcom/bumptech/glide/request/SingleRequest;.j:()Z` @kind direct;
  #L3fa4da.  v7:= temp;
  #L3fa4dc.  call temp:= `onLoadFailed`(v4, v9, v5, v6, v7) @signature `Lcom/bumptech/glide/request/RequestListener;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Z)Z` @kind interface;
  #L3fa4e2.  v4:= temp;
  #L3fa4e4.  v3:= v3 ^| v4 @kind int;
  #L3fa4e6.  goto L3fa4b4;
  #L3fa4e8.  v3:= 0I;
  #L3fa4ea.  v2:= v8.`com.bumptech.glide.request.SingleRequest.e` @type ^`com.bumptech.glide.request.RequestListener` @kind object;
  #L3fa4ee.  if v2 == 0 then goto L3fa510;
  #L3fa4f2.  v4:= v8.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3fa4f6.  v5:= v8.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3fa4fa.  call temp:= `j`(v8) @signature `Lcom/bumptech/glide/request/SingleRequest;.j:()Z` @kind direct;
  #L3fa500.  v6:= temp;
  #L3fa502.  call temp:= `onLoadFailed`(v2, v9, v4, v5, v6) @signature `Lcom/bumptech/glide/request/RequestListener;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Z)Z` @kind interface;
  #L3fa508.  v9:= temp;
  #L3fa50a.  if v9 == 0 then goto L3fa510;
  #L3fa50e.  goto L3fa512;
  #L3fa510.  v10:= 0I;
  #L3fa512.  v9:= v3 ^| v10 @kind int;
  #L3fa516.  if v9 != 0 then goto L3fa520;
  #L3fa51a.  call `r`(v8) @signature `Lcom/bumptech/glide/request/SingleRequest;.r:()V` @kind direct;
  #L3fa520.  v8.`com.bumptech.glide.request.SingleRequest.C` @type ^`boolean` := v1 @kind boolean;
  #L3fa524.  call `n`(v8) @signature `Lcom/bumptech/glide/request/SingleRequest;.n:()V` @kind direct;
  #L3fa52a.  v9:= "GlideRequest" @kind object;
  #L3fa52e.  v10:= v8.`com.bumptech.glide.request.SingleRequest.a` @type ^`int`;
  #L3fa532.  call `endSectionAsync`(v9, v10) @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSectionAsync:(Ljava/lang/String;I)V` @kind static;
  #L3fa538.  @monitorexit v0
  #L3fa53a.  return @kind void;
  #L3fa53c.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fa53e.  v8.`com.bumptech.glide.request.SingleRequest.C` @type ^`boolean` := v1 @kind boolean;
  #L3fa542.  throw v9;
  #L3fa544.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fa546.  @monitorexit v0
  #L3fa548.  throw v9;
  catch `java.lang.Throwable` @[L3fa400..L3fa4a0] goto L3fa544;
  catch `java.lang.Throwable` @[L3fa4a2..L3fa520] goto L3fa53c;
  catch `java.lang.Throwable` @[L3fa520..L3fa548] goto L3fa544;
}
procedure `void` `q`(`com.bumptech.glide.request.SingleRequest` v9 @kind this, `com.bumptech.glide.load.engine.Resource` v10 @kind object, `java.lang.Object` v11 @kind object, `com.bumptech.glide.load.DataSource` v12 @kind object, `boolean` v13 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.q:(Lcom/bumptech/glide/load/engine/Resource;Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fa75c.  call temp:= `j`(v9) @signature `Lcom/bumptech/glide/request/SingleRequest;.j:()Z` @kind direct;
  #L3fa762.  v13:= temp;
  #L3fa764.  v0:= `@@com.bumptech.glide.request.SingleRequest$a.d` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa768.  v9.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` := v0 @kind object;
  #L3fa76c.  v9.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Resource` := v10 @kind object;
  #L3fa770.  v10:= v9.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3fa774.  call temp:= `getLogLevel`(v10) @signature `Lcom/bumptech/glide/GlideContext;.getLogLevel:()I` @kind virtual;
  #L3fa77a.  v10:= temp;
  #L3fa77c.  v0:= 3I;
  #L3fa77e.  if v10 > v0 then goto L3fa830;
  #L3fa782.  v10:= new `java.lang.StringBuilder`;
  #L3fa786.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fa78c.  v0:= "Finished loading " @kind object;
  #L3fa790.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa796.  call temp:= `getClass`(v11) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fa79c.  v0:= temp @kind object;
  #L3fa79e.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3fa7a4.  v0:= temp @kind object;
  #L3fa7a6.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa7ac.  v0:= " from " @kind object;
  #L3fa7b0.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa7b6.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa7bc.  v0:= " for " @kind object;
  #L3fa7c0.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa7c6.  v0:= v9.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3fa7ca.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa7d0.  v0:= " with size [" @kind object;
  #L3fa7d4.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa7da.  v0:= v9.`com.bumptech.glide.request.SingleRequest.A` @type ^`int`;
  #L3fa7de.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa7e4.  v0:= "x" @kind object;
  #L3fa7e8.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa7ee.  v0:= v9.`com.bumptech.glide.request.SingleRequest.B` @type ^`int`;
  #L3fa7f2.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa7f8.  v0:= "] in " @kind object;
  #L3fa7fc.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa802.  v0:= v9.`com.bumptech.glide.request.SingleRequest.u` @type ^`long` @kind wide;
  #L3fa806.  call temp:= `getElapsedMillis`(v0) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3fa80c.  v0:= temp @kind wide;
  #L3fa80e.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa814.  v0:= " ms" @kind object;
  #L3fa818.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa81e.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fa824.  v10:= temp @kind object;
  #L3fa826.  v0:= "Glide" @kind object;
  #L3fa82a.  call temp:= `d`(v0, v10) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fa830.  v10:= 1I;
  #L3fa832.  v9.`com.bumptech.glide.request.SingleRequest.C` @type ^`boolean` := v10 @kind boolean;
  #L3fa836.  v6:= 0I;
  #L3fa838.  v0:= v9.`com.bumptech.glide.request.SingleRequest.p` @type ^`java.util.List` @kind object;
  #L3fa83c.  if v0 == 0 then goto L3fa87c;
  #L3fa840.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3fa846.  v7:= temp @kind object;
  #L3fa848.  v8:= 0I;
  #L3fa84a.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fa850.  v0:= temp;
  #L3fa852.  if v0 == 0 then goto L3fa87e;
  #L3fa856.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fa85c.  v0:= temp @kind object;
  #L3fa85e.  v0:= (`com.bumptech.glide.request.RequestListener`) v0 @kind object;
  #L3fa862.  v2:= v9.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3fa866.  v3:= v9.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3fa86a.  v1:= v11 @kind object;
  #L3fa86c.  v4:= v12 @kind object;
  #L3fa86e.  v5:= v13;
  #L3fa870.  call temp:= `onResourceReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/request/RequestListener;.onResourceReady:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/load/DataSource;Z)Z` @kind interface;
  #L3fa876.  v0:= temp;
  #L3fa878.  v8:= v8 ^| v0 @kind int;
  #L3fa87a.  goto L3fa84a;
  #L3fa87c.  v8:= 0I;
  #L3fa87e.  v0:= v9.`com.bumptech.glide.request.SingleRequest.e` @type ^`com.bumptech.glide.request.RequestListener` @kind object;
  #L3fa882.  if v0 == 0 then goto L3fa8a2;
  #L3fa886.  v2:= v9.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3fa88a.  v3:= v9.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3fa88e.  v1:= v11 @kind object;
  #L3fa890.  v4:= v12 @kind object;
  #L3fa892.  v5:= v13;
  #L3fa894.  call temp:= `onResourceReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/request/RequestListener;.onResourceReady:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/load/DataSource;Z)Z` @kind interface;
  #L3fa89a.  v0:= temp;
  #L3fa89c.  if v0 == 0 then goto L3fa8a2;
  #L3fa8a0.  goto L3fa8a4;
  #L3fa8a2.  v10:= 0I;
  #L3fa8a4.  v10:= v10 ^| v8 @kind int;
  #L3fa8a6.  if v10 != 0 then goto L3fa8c0;
  #L3fa8aa.  v10:= v9.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.transition.TransitionFactory` @kind object;
  #L3fa8ae.  call temp:= `build`(v10, v12, v13) @signature `Lcom/bumptech/glide/request/transition/TransitionFactory;.build:(Lcom/bumptech/glide/load/DataSource;Z)Lcom/bumptech/glide/request/transition/Transition;` @kind interface;
  #L3fa8b4.  v10:= temp @kind object;
  #L3fa8b6.  v12:= v9.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3fa8ba.  call `onResourceReady`(v12, v11, v10) @signature `Lcom/bumptech/glide/request/target/Target;.onResourceReady:(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V` @kind interface;
  #L3fa8c0.  v9.`com.bumptech.glide.request.SingleRequest.C` @type ^`boolean` := v6 @kind boolean;
  #L3fa8c4.  call `o`(v9) @signature `Lcom/bumptech/glide/request/SingleRequest;.o:()V` @kind direct;
  #L3fa8ca.  v10:= v9.`com.bumptech.glide.request.SingleRequest.a` @type ^`int`;
  #L3fa8ce.  v11:= "GlideRequest" @kind object;
  #L3fa8d2.  call `endSectionAsync`(v11, v10) @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSectionAsync:(Ljava/lang/String;I)V` @kind static;
  #L3fa8d8.  return @kind void;
  #L3fa8da.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fa8dc.  v9.`com.bumptech.glide.request.SingleRequest.C` @type ^`boolean` := v6 @kind boolean;
  #L3fa8e0.  throw v10;
  catch `java.lang.Throwable` @[L3fa838..L3fa8c0] goto L3fa8da;
}
procedure `void` `r`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.r:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fab9c.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.c:()Z` @kind direct;
  #L3faba2.  v0:= temp;
  #L3faba4.  if v0 != 0 then goto L3fabaa;
  #L3faba8.  return @kind void;
  #L3fabaa.  v0:= 0I;
  #L3fabac.  v1:= v2.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3fabb0.  if v1 != 0 then goto L3fabbc;
  #L3fabb4.  call temp:= `h`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.h:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3fabba.  v0:= temp @kind object;
  #L3fabbc.  if v0 != 0 then goto L3fabc8;
  #L3fabc0.  call temp:= `g`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.g:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3fabc6.  v0:= temp @kind object;
  #L3fabc8.  if v0 != 0 then goto L3fabd4;
  #L3fabcc.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.i:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3fabd2.  v0:= temp @kind object;
  #L3fabd4.  v1:= v2.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3fabd8.  call `onLoadFailed`(v1, v0) @signature `Lcom/bumptech/glide/request/target/Target;.onLoadFailed:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L3fabde.  return @kind void;
}
procedure `void` `begin`(`com.bumptech.glide.request.SingleRequest` v5 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.begin:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fa088.  v0:= v5.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3fa08c.  @monitorenter v0
  #L3fa08e.  call `a`(v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:()V` @kind direct;
  #L3fa094.  v1:= v5.`com.bumptech.glide.request.SingleRequest.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3fa098.  call `throwIfRecycled`(v1) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3fa09e.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L3fa0a4.  v1:= temp @kind wide;
  #L3fa0a6.  v5.`com.bumptech.glide.request.SingleRequest.u` @type ^`long` := v1 @kind wide;
  #L3fa0aa.  v1:= v5.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3fa0ae.  if v1 != 0 then goto L3fa100;
  #L3fa0b2.  v1:= v5.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3fa0b6.  v2:= v5.`com.bumptech.glide.request.SingleRequest.m` @type ^`int`;
  #L3fa0ba.  call temp:= `isValidDimensions`(v1, v2) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L3fa0c0.  v1:= temp;
  #L3fa0c2.  if v1 == 0 then goto L3fa0d6;
  #L3fa0c6.  v1:= v5.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3fa0ca.  v5.`com.bumptech.glide.request.SingleRequest.A` @type ^`int` := v1;
  #L3fa0ce.  v1:= v5.`com.bumptech.glide.request.SingleRequest.m` @type ^`int`;
  #L3fa0d2.  v5.`com.bumptech.glide.request.SingleRequest.B` @type ^`int` := v1;
  #L3fa0d6.  call temp:= `h`(v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.h:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3fa0dc.  v1:= temp @kind object;
  #L3fa0de.  if v1 != 0 then goto L3fa0e6;
  #L3fa0e2.  v1:= 5I;
  #L3fa0e4.  goto L3fa0e8;
  #L3fa0e6.  v1:= 3I;
  #L3fa0e8.  v2:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3fa0ec.  v3:= "Received null model" @kind object;
  #L3fa0f0.  call `<init>`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fa0f6.  call `p`(v5, v2, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.p:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @kind direct;
  #L3fa0fc.  @monitorexit v0
  #L3fa0fe.  return @kind void;
  #L3fa100.  v2:= v5.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa104.  v3:= `@@com.bumptech.glide.request.SingleRequest$a.b` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa108.  if v2 == v3 then goto L3fa1de;
  #L3fa10c.  v4:= `@@com.bumptech.glide.request.SingleRequest$a.d` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa110.  if v2 != v4 then goto L3fa128;
  #L3fa114.  v1:= v5.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3fa118.  v2:= `@@com.bumptech.glide.load.DataSource.MEMORY_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3fa11c.  v3:= 0I;
  #L3fa11e.  call `onResourceReady`(v5, v1, v2, v3) @signature `Lcom/bumptech/glide/request/SingleRequest;.onResourceReady:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;Z)V` @kind virtual;
  #L3fa124.  @monitorexit v0
  #L3fa126.  return @kind void;
  #L3fa128.  call `f`(v5, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.f:(Ljava/lang/Object;)V` @kind direct;
  #L3fa12e.  v1:= "GlideRequest" @kind object;
  #L3fa132.  call temp:= `beginSectionAsync`(v1) @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.beginSectionAsync:(Ljava/lang/String;)I` @kind static;
  #L3fa138.  v1:= temp;
  #L3fa13a.  v5.`com.bumptech.glide.request.SingleRequest.a` @type ^`int` := v1;
  #L3fa13e.  v1:= `@@com.bumptech.glide.request.SingleRequest$a.c` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa142.  v5.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` := v1 @kind object;
  #L3fa146.  v2:= v5.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3fa14a.  v4:= v5.`com.bumptech.glide.request.SingleRequest.m` @type ^`int`;
  #L3fa14e.  call temp:= `isValidDimensions`(v2, v4) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L3fa154.  v2:= temp;
  #L3fa156.  if v2 == 0 then goto L3fa16a;
  #L3fa15a.  v2:= v5.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3fa15e.  v4:= v5.`com.bumptech.glide.request.SingleRequest.m` @type ^`int`;
  #L3fa162.  call `onSizeReady`(v5, v2, v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.onSizeReady:(II)V` @kind virtual;
  #L3fa168.  goto L3fa174;
  #L3fa16a.  v2:= v5.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3fa16e.  call `getSize`(v2, v5) @signature `Lcom/bumptech/glide/request/target/Target;.getSize:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @kind interface;
  #L3fa174.  v2:= v5.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa178.  if v2 == v3 then goto L3fa180;
  #L3fa17c.  if v2 != v1 then goto L3fa19e;
  #L3fa180.  call temp:= `c`(v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.c:()Z` @kind direct;
  #L3fa186.  v1:= temp;
  #L3fa188.  if v1 == 0 then goto L3fa19e;
  #L3fa18c.  v1:= v5.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3fa190.  call temp:= `i`(v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.i:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3fa196.  v2:= temp @kind object;
  #L3fa198.  call `onLoadStarted`(v1, v2) @signature `Lcom/bumptech/glide/request/target/Target;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L3fa19e.  v1:= `@@com.bumptech.glide.request.SingleRequest.E` @type ^`boolean` @kind boolean;
  #L3fa1a2.  if v1 == 0 then goto L3fa1da;
  #L3fa1a6.  v1:= new `java.lang.StringBuilder`;
  #L3fa1aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fa1b0.  v2:= "finished run method in " @kind object;
  #L3fa1b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa1ba.  v2:= v5.`com.bumptech.glide.request.SingleRequest.u` @type ^`long` @kind wide;
  #L3fa1be.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3fa1c4.  v2:= temp @kind wide;
  #L3fa1c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa1cc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fa1d2.  v1:= temp @kind object;
  #L3fa1d4.  call `l`(v5, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.l:(Ljava/lang/String;)V` @kind direct;
  #L3fa1da.  @monitorexit v0
  #L3fa1dc.  return @kind void;
  #L3fa1de.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fa1e2.  v2:= "Cannot restart a running request" @kind object;
  #L3fa1e6.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fa1ec.  throw v1;
  #L3fa1ee.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fa1f0.  @monitorexit v0
  #L3fa1f2.  throw v1;
  catch `java.lang.Throwable` @[L3fa08e..L3fa1f2] goto L3fa1ee;
}
procedure `void` `clear`(`com.bumptech.glide.request.SingleRequest` v5 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fa250.  v0:= v5.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3fa254.  @monitorenter v0
  #L3fa256.  call `a`(v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:()V` @kind direct;
  #L3fa25c.  v1:= v5.`com.bumptech.glide.request.SingleRequest.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3fa260.  call `throwIfRecycled`(v1) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3fa266.  v1:= v5.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa26a.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.f` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa26e.  if v1 != v2 then goto L3fa276;
  #L3fa272.  @monitorexit v0
  #L3fa274.  return @kind void;
  #L3fa276.  call `e`(v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.e:()V` @kind direct;
  #L3fa27c.  v1:= v5.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3fa280.  v3:= 0I;
  #L3fa282.  if v1 == 0 then goto L3fa28c;
  #L3fa286.  v5.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Resource` := v3 @kind object;
  #L3fa28a.  goto L3fa28e;
  #L3fa28c.  v1:= v3 @kind object;
  #L3fa28e.  call temp:= `b`(v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.b:()Z` @kind direct;
  #L3fa294.  v3:= temp;
  #L3fa296.  if v3 == 0 then goto L3fa2ac;
  #L3fa29a.  v3:= v5.`com.bumptech.glide.request.SingleRequest.o` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3fa29e.  call temp:= `i`(v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.i:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3fa2a4.  v4:= temp @kind object;
  #L3fa2a6.  call `onLoadCleared`(v3, v4) @signature `Lcom/bumptech/glide/request/target/Target;.onLoadCleared:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L3fa2ac.  v3:= "GlideRequest" @kind object;
  #L3fa2b0.  v4:= v5.`com.bumptech.glide.request.SingleRequest.a` @type ^`int`;
  #L3fa2b4.  call `endSectionAsync`(v3, v4) @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSectionAsync:(Ljava/lang/String;I)V` @kind static;
  #L3fa2ba.  v5.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` := v2 @kind object;
  #L3fa2be.  @monitorexit v0
  #L3fa2c0.  if v1 == 0 then goto L3fa2ce;
  #L3fa2c4.  v0:= v5.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3fa2c8.  call `release`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/Engine;.release:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L3fa2ce.  return @kind void;
  #L3fa2d0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fa2d2.  @monitorexit v0
  #L3fa2d4.  throw v1;
  catch `java.lang.Throwable` @[L3fa256..L3fa2c0] goto L3fa2d0;
  catch `java.lang.Throwable` @[L3fa2d2..L3fa2d4] goto L3fa2d0;
}
procedure `java.lang.Object` `getLock`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.getLock:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f9ea8.  v0:= v1.`com.bumptech.glide.request.SingleRequest.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3f9eac.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3f9eb2.  v0:= v1.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3f9eb6.  return v0 @kind object;
}
procedure `boolean` `isAnyResourceSet`(`com.bumptech.glide.request.SingleRequest` v3 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.isAnyResourceSet:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f9bdc.  v0:= v3.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3f9be0.  @monitorenter v0
  #L3f9be2.  v1:= v3.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3f9be6.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.d` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3f9bea.  if v1 != v2 then goto L3f9bf2;
  #L3f9bee.  v1:= 1I;
  #L3f9bf0.  goto L3f9bf4;
  #L3f9bf2.  v1:= 0I;
  #L3f9bf4.  @monitorexit v0
  #L3f9bf6.  return v1;
  #L3f9bf8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f9bfa.  @monitorexit v0
  #L3f9bfc.  throw v1;
  catch `java.lang.Throwable` @[L3f9be2..L3f9bfc] goto L3f9bf8;
}
procedure `boolean` `isCleared`(`com.bumptech.glide.request.SingleRequest` v3 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.isCleared:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f9c1c.  v0:= v3.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3f9c20.  @monitorenter v0
  #L3f9c22.  v1:= v3.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3f9c26.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.f` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3f9c2a.  if v1 != v2 then goto L3f9c32;
  #L3f9c2e.  v1:= 1I;
  #L3f9c30.  goto L3f9c34;
  #L3f9c32.  v1:= 0I;
  #L3f9c34.  @monitorexit v0
  #L3f9c36.  return v1;
  #L3f9c38.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f9c3a.  @monitorexit v0
  #L3f9c3c.  throw v1;
  catch `java.lang.Throwable` @[L3f9c22..L3f9c3c] goto L3f9c38;
}
procedure `boolean` `isComplete`(`com.bumptech.glide.request.SingleRequest` v3 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.isComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f9c5c.  v0:= v3.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3f9c60.  @monitorenter v0
  #L3f9c62.  v1:= v3.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3f9c66.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.d` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3f9c6a.  if v1 != v2 then goto L3f9c72;
  #L3f9c6e.  v1:= 1I;
  #L3f9c70.  goto L3f9c74;
  #L3f9c72.  v1:= 0I;
  #L3f9c74.  @monitorexit v0
  #L3f9c76.  return v1;
  #L3f9c78.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f9c7a.  @monitorexit v0
  #L3f9c7c.  throw v1;
  catch `java.lang.Throwable` @[L3f9c62..L3f9c7c] goto L3f9c78;
}
procedure `boolean` `isEquivalentTo`(`com.bumptech.glide.request.SingleRequest` v16 @kind this, `com.bumptech.glide.request.Request` v17 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3f9c9c.  v1:= v16 @kind object;
  #L3f9ca0.  v0:= v17 @kind object;
  #L3f9ca4.  v2:= instanceof @variable v0 @type ^`com.bumptech.glide.request.SingleRequest` @kind boolean;
  #L3f9ca8.  v3:= 0I;
  #L3f9caa.  if v2 != 0 then goto L3f9cb0;
  #L3f9cae.  return v3;
  #L3f9cb0.  v2:= v1.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3f9cb4.  @monitorenter v2
  #L3f9cb6.  v4:= v1.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3f9cba.  v5:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`int`;
  #L3f9cbe.  v6:= v1.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3f9cc2.  v7:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`java.lang.Class` @kind object;
  #L3f9cc6.  v8:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9cca.  v9:= v1.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3f9cce.  v10:= v1.`com.bumptech.glide.request.SingleRequest.p` @type ^`java.util.List` @kind object;
  #L3f9cd2.  if v10 == 0 then goto L3f9ce0;
  #L3f9cd6.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3f9cdc.  v10:= temp;
  #L3f9cde.  goto L3f9ce2;
  #L3f9ce0.  v10:= 0I;
  #L3f9ce2.  @monitorexit v2
  #L3f9ce4.  v0:= (`com.bumptech.glide.request.SingleRequest`) v0 @kind object;
  #L3f9ce8.  v11:= v0.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3f9cec.  @monitorenter v11
  #L3f9cee.  v2:= v0.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3f9cf2.  v12:= v0.`com.bumptech.glide.request.SingleRequest.m` @type ^`int`;
  #L3f9cf6.  v13:= v0.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3f9cfa.  v14:= v0.`com.bumptech.glide.request.SingleRequest.j` @type ^`java.lang.Class` @kind object;
  #L3f9cfe.  v15:= v0.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3f9d02.  v3:= v0.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3f9d06.  v0:= v0.`com.bumptech.glide.request.SingleRequest.p` @type ^`java.util.List` @kind object;
  #L3f9d0a.  if v0 == 0 then goto L3f9d18;
  #L3f9d0e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3f9d14.  v0:= temp;
  #L3f9d16.  goto L3f9d1a;
  #L3f9d18.  v0:= 0I;
  #L3f9d1a.  @monitorexit v11
  #L3f9d1c.  if v4 != v2 then goto L3f9d54;
  #L3f9d20.  if v5 != v12 then goto L3f9d54;
  #L3f9d24.  call temp:= `bothModelsNullEquivalentOrEquals`(v6, v13) @signature `Lcom/bumptech/glide/util/Util;.bothModelsNullEquivalentOrEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f9d2a.  v2:= temp;
  #L3f9d2c.  if v2 == 0 then goto L3f9d54;
  #L3f9d30.  call temp:= `equals`(v7, v14) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f9d36.  v2:= temp;
  #L3f9d38.  if v2 == 0 then goto L3f9d54;
  #L3f9d3c.  call temp:= `equals`(v8, v15) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f9d42.  v2:= temp;
  #L3f9d44.  if v2 == 0 then goto L3f9d54;
  #L3f9d48.  if v9 != v3 then goto L3f9d54;
  #L3f9d4c.  if v10 != v0 then goto L3f9d54;
  #L3f9d50.  v3:= 1I;
  #L3f9d52.  goto L3f9d56;
  #L3f9d54.  v3:= 0I;
  #L3f9d56.  return v3;
  #L3f9d58.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f9d5a.  @monitorexit v11
  #L3f9d5c.  throw v0;
  #L3f9d5e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f9d60.  @monitorexit v2
  #L3f9d62.  throw v0;
  catch `java.lang.Throwable` @[L3f9cb6..L3f9ce4] goto L3f9d5e;
  catch `java.lang.Throwable` @[L3f9cee..L3f9d1c] goto L3f9d58;
  catch `java.lang.Throwable` @[L3f9d5a..L3f9d5c] goto L3f9d58;
  catch `java.lang.Throwable` @[L3f9d60..L3f9d62] goto L3f9d5e;
}
procedure `boolean` `isRunning`(`com.bumptech.glide.request.SingleRequest` v3 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f9dd4.  v0:= v3.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3f9dd8.  @monitorenter v0
  #L3f9dda.  v1:= v3.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3f9dde.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.b` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3f9de2.  if v1 == v2 then goto L3f9df4;
  #L3f9de6.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.c` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3f9dea.  if v1 != v2 then goto L3f9df0;
  #L3f9dee.  goto L3f9df4;
  #L3f9df0.  v1:= 0I;
  #L3f9df2.  goto L3f9df6;
  #L3f9df4.  v1:= 1I;
  #L3f9df6.  @monitorexit v0
  #L3f9df8.  return v1;
  #L3f9dfa.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f9dfc.  @monitorexit v0
  #L3f9dfe.  throw v1;
  catch `java.lang.Throwable` @[L3f9dda..L3f9dfe] goto L3f9dfa;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.request.SingleRequest` v1 @kind this, `com.bumptech.glide.load.engine.GlideException` v2 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fa3d4.  v0:= 5I;
  #L3fa3d6.  call `p`(v1, v2, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.p:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @kind direct;
  #L3fa3dc.  return @kind void;
}
procedure `void` `onResourceReady`(`com.bumptech.glide.request.SingleRequest` v5 @kind this, `com.bumptech.glide.load.engine.Resource` v6 @kind object, `com.bumptech.glide.load.DataSource` v7 @kind object, `boolean` v8 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.onResourceReady:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fa57c.  v0:= v5.`com.bumptech.glide.request.SingleRequest.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3fa580.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3fa586.  v0:= 0I;
  #L3fa588.  v1:= v5.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3fa58c.  @monitorenter v1
  #L3fa58e.  v5.`com.bumptech.glide.request.SingleRequest.t` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` := v0 @kind object;
  #L3fa592.  if v6 != 0 then goto L3fa5da;
  #L3fa596.  v6:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3fa59a.  v7:= new `java.lang.StringBuilder`;
  #L3fa59e.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fa5a4.  v8:= "Expected to receive a Resource<R> with an object of " @kind object;
  #L3fa5a8.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa5ae.  v8:= v5.`com.bumptech.glide.request.SingleRequest.j` @type ^`java.lang.Class` @kind object;
  #L3fa5b2.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa5b8.  v8:= " inside, but instead got null." @kind object;
  #L3fa5bc.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa5c2.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fa5c8.  v7:= temp @kind object;
  #L3fa5ca.  call `<init>`(v6, v7) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fa5d0.  call `onLoadFailed`(v5, v6) @signature `Lcom/bumptech/glide/request/SingleRequest;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;)V` @kind virtual;
  #L3fa5d6.  @monitorexit v1
  #L3fa5d8.  return @kind void;
  #L3fa5da.  call temp:= `get`(v6) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3fa5e0.  v2:= temp @kind object;
  #L3fa5e2.  if v2 == 0 then goto L3fa63e;
  #L3fa5e6.  v3:= v5.`com.bumptech.glide.request.SingleRequest.j` @type ^`java.lang.Class` @kind object;
  #L3fa5ea.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fa5f0.  v4:= temp @kind object;
  #L3fa5f2.  call temp:= `isAssignableFrom`(v3, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3fa5f8.  v3:= temp;
  #L3fa5fa.  if v3 != 0 then goto L3fa600;
  #L3fa5fe.  goto L3fa63e;
  #L3fa600.  call temp:= `d`(v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.d:()Z` @kind direct;
  #L3fa606.  v3:= temp;
  #L3fa608.  if v3 != 0 then goto L3fa634;
  #L3fa60c.  v5.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Resource` := v0 @kind object;
  #L3fa610.  v7:= `@@com.bumptech.glide.request.SingleRequest$a.d` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa614.  v5.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` := v7 @kind object;
  #L3fa618.  v7:= "GlideRequest" @kind object;
  #L3fa61c.  v8:= v5.`com.bumptech.glide.request.SingleRequest.a` @type ^`int`;
  #L3fa620.  call `endSectionAsync`(v7, v8) @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSectionAsync:(Ljava/lang/String;I)V` @kind static;
  #L3fa626.  @monitorexit v1
  #L3fa628.  v7:= v5.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3fa62c.  call `release`(v7, v6) @signature `Lcom/bumptech/glide/load/engine/Engine;.release:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L3fa632.  return @kind void;
  #L3fa634.  call `q`(v5, v6, v2, v7, v8) @signature `Lcom/bumptech/glide/request/SingleRequest;.q:(Lcom/bumptech/glide/load/engine/Resource;Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;Z)V` @kind direct;
  #L3fa63a.  @monitorexit v1
  #L3fa63c.  return @kind void;
  #L3fa63e.  v5.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Resource` := v0 @kind object;
  #L3fa642.  v7:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3fa646.  v8:= new `java.lang.StringBuilder`;
  #L3fa64a.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fa650.  v0:= "Expected to receive an object of " @kind object;
  #L3fa654.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa65a.  v0:= v5.`com.bumptech.glide.request.SingleRequest.j` @type ^`java.lang.Class` @kind object;
  #L3fa65e.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa664.  v0:= " but instead got " @kind object;
  #L3fa668.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa66e.  if v2 == 0 then goto L3fa67c;
  #L3fa672.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fa678.  v0:= temp @kind object;
  #L3fa67a.  goto L3fa680;
  #L3fa67c.  v0:= "" @kind object;
  #L3fa680.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa686.  v0:= "{" @kind object;
  #L3fa68a.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa690.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa696.  v0:= "} inside Resource{" @kind object;
  #L3fa69a.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa6a0.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa6a6.  v0:= "}." @kind object;
  #L3fa6aa.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa6b0.  if v2 == 0 then goto L3fa6ba;
  #L3fa6b4.  v0:= "" @kind object;
  #L3fa6b8.  goto L3fa6be;
  #L3fa6ba.  v0:= " To indicate failure return a null Resource object, rather than a Resource object containing null data." @kind object;
  #L3fa6be.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa6c4.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fa6ca.  v8:= temp @kind object;
  #L3fa6cc.  call `<init>`(v7, v8) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fa6d2.  call `onLoadFailed`(v5, v7) @signature `Lcom/bumptech/glide/request/SingleRequest;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;)V` @kind virtual;
  #L3fa6d8.  @monitorexit v1
  #L3fa6da.  v7:= v5.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3fa6de.  call `release`(v7, v6) @signature `Lcom/bumptech/glide/load/engine/Engine;.release:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L3fa6e4.  return @kind void;
  #L3fa6e6.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fa6e8.  v0:= v6 @kind object;
  #L3fa6ea.  v6:= v7 @kind object;
  #L3fa6ec.  goto L3fa6f0;
  #L3fa6ee.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fa6f0.  @monitorexit v1
  #L3fa6f2.  throw v6;
  #L3fa6f4.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fa6f6.  if v0 == 0 then goto L3fa704;
  #L3fa6fa.  v7:= v5.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3fa6fe.  call `release`(v7, v0) @signature `Lcom/bumptech/glide/load/engine/Engine;.release:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L3fa704.  throw v6;
  catch `java.lang.Throwable` @[L3fa588..L3fa58e] goto L3fa6f4;
  catch `java.lang.Throwable` @[L3fa58e..L3fa608] goto L3fa6ee;
  catch `java.lang.Throwable` @[L3fa60c..L3fa628] goto L3fa6e6;
  catch `java.lang.Throwable` @[L3fa634..L3fa63c] goto L3fa6ee;
  catch `java.lang.Throwable` @[L3fa63e..L3fa6da] goto L3fa6e6;
  catch `java.lang.Throwable` @[L3fa6f0..L3fa6f2] goto L3fa6ee;
  catch `java.lang.Throwable` @[L3fa6f2..L3fa6f4] goto L3fa6f4;
}
procedure `void` `onSizeReady`(`com.bumptech.glide.request.SingleRequest` v24 @kind this, `int` v25 , `int` v26 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.onSizeReady:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L3fa900.  v15:= v24 @kind object;
  #L3fa904.  v0:= v15.`com.bumptech.glide.request.SingleRequest.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3fa908.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3fa90e.  v14:= v15.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3fa912.  @monitorenter v14
  #L3fa914.  v0:= `@@com.bumptech.glide.request.SingleRequest.E` @type ^`boolean` @kind boolean;
  #L3fa918.  if v0 == 0 then goto L3fa950;
  #L3fa91c.  v1:= new `java.lang.StringBuilder`;
  #L3fa920.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fa926.  v2:= "Got onSizeReady in " @kind object;
  #L3fa92a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa930.  v2:= v15.`com.bumptech.glide.request.SingleRequest.u` @type ^`long` @kind wide;
  #L3fa934.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3fa93a.  v2:= temp @kind wide;
  #L3fa93c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa942.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fa948.  v1:= temp @kind object;
  #L3fa94a.  call `l`(v15, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.l:(Ljava/lang/String;)V` @kind direct;
  #L3fa950.  v1:= v15.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa954.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.c` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa958.  if v1 == v2 then goto L3fa960;
  #L3fa95c.  @monitorexit v14
  #L3fa95e.  return @kind void;
  #L3fa960.  v13:= `@@com.bumptech.glide.request.SingleRequest$a.b` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3fa964.  v15.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` := v13 @kind object;
  #L3fa968.  v1:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3fa96c.  call temp:= `getSizeMultiplier`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getSizeMultiplier:()F` @kind virtual;
  #L3fa972.  v1:= temp;
  #L3fa974.  v2:= v25;
  #L3fa978.  call temp:= `m`(v2, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.m:(IF)I` @kind static;
  #L3fa97e.  v2:= temp;
  #L3fa980.  v15.`com.bumptech.glide.request.SingleRequest.A` @type ^`int` := v2;
  #L3fa984.  v2:= v26;
  #L3fa988.  call temp:= `m`(v2, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.m:(IF)I` @kind static;
  #L3fa98e.  v1:= temp;
  #L3fa990.  v15.`com.bumptech.glide.request.SingleRequest.B` @type ^`int` := v1;
  #L3fa994.  if v0 == 0 then goto L3fa9cc;
  #L3fa998.  v1:= new `java.lang.StringBuilder`;
  #L3fa99c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fa9a2.  v2:= "finished setup for calling load in " @kind object;
  #L3fa9a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa9ac.  v2:= v15.`com.bumptech.glide.request.SingleRequest.u` @type ^`long` @kind wide;
  #L3fa9b0.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3fa9b6.  v2:= temp @kind wide;
  #L3fa9b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fa9be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fa9c4.  v1:= temp @kind object;
  #L3fa9c6.  call `l`(v15, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.l:(Ljava/lang/String;)V` @kind direct;
  #L3fa9cc.  v1:= v15.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3fa9d0.  v2:= v15.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3fa9d4.  v3:= v15.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3fa9d8.  v4:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3fa9dc.  call temp:= `getSignature`(v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getSignature:()Lcom/bumptech/glide/load/Key;` @kind virtual;
  #L3fa9e2.  v4:= temp @kind object;
  #L3fa9e4.  v5:= v15.`com.bumptech.glide.request.SingleRequest.A` @type ^`int`;
  #L3fa9e8.  v6:= v15.`com.bumptech.glide.request.SingleRequest.B` @type ^`int`;
  #L3fa9ec.  v7:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3fa9f0.  call temp:= `getResourceClass`(v7) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getResourceClass:()Ljava/lang/Class;` @kind virtual;
  #L3fa9f6.  v7:= temp @kind object;
  #L3fa9f8.  v8:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`java.lang.Class` @kind object;
  #L3fa9fc.  v9:= v15.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3faa00.  v10:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3faa04.  call temp:= `getDiskCacheStrategy`(v10) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getDiskCacheStrategy:()Lcom/bumptech/glide/load/engine/DiskCacheStrategy;` @kind virtual;
  #L3faa0a.  v10:= temp @kind object;
  #L3faa0c.  v11:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3faa10.  call temp:= `getTransformations`(v11) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getTransformations:()Ljava/util/Map;` @kind virtual;
  #L3faa16.  v11:= temp @kind object;
  #L3faa18.  v12:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3faa1c.  call temp:= `isTransformationRequired`(v12) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationRequired:()Z` @kind virtual;
  #L3faa22.  v12:= temp;
  #L3faa24.  v16:= v13 @kind object;
  #L3faa28.  v13:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3faa2c.  call temp:= `a`(v13) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.a:()Z` @kind virtual;
  #L3faa32.  v13:= temp;
  #L3faa34.  v21:= v0;
  #L3faa38.  v0:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3faa3c.  call temp:= `getOptions`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOptions:()Lcom/bumptech/glide/load/Options;` @kind virtual;
  #L3faa42.  v0:= temp @kind object;
  #L3faa44.  v25:= v0 @kind object;
  #L3faa48.  v0:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3faa4c.  call temp:= `isMemoryCacheable`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isMemoryCacheable:()Z` @kind virtual;
  #L3faa52.  v0:= temp;
  #L3faa54.  v26:= v0;
  #L3faa58.  v0:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3faa5c.  call temp:= `getUseUnlimitedSourceGeneratorsPool`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getUseUnlimitedSourceGeneratorsPool:()Z` @kind virtual;
  #L3faa62.  v0:= temp;
  #L3faa64.  v17:= v0;
  #L3faa68.  v0:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3faa6c.  call temp:= `getUseAnimationPool`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getUseAnimationPool:()Z` @kind virtual;
  #L3faa72.  v0:= temp;
  #L3faa74.  v18:= v0;
  #L3faa78.  v0:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3faa7c.  call temp:= `getOnlyRetrieveFromCache`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOnlyRetrieveFromCache:()Z` @kind virtual;
  #L3faa82.  v0:= temp;
  #L3faa84.  v19:= v0;
  #L3faa88.  v0:= v15.`com.bumptech.glide.request.SingleRequest.r` @type ^`java.util.concurrent.Executor` @kind object;
  #L3faa8c.  v22:= v16 @kind object;
  #L3faa90.  v23:= v14 @kind object;
  #L3faa94.  v14:= v25 @kind object;
  #L3faa98.  v15:= v26;
  #L3faa9c.  v16:= v17;
  #L3faaa0.  v17:= v18;
  #L3faaa4.  v18:= v19;
  #L3faaa8.  v19:= v24 @kind object;
  #L3faaac.  v20:= v0 @kind object;
  #L3faab0.  call temp:= `load`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20) @signature `Lcom/bumptech/glide/load/engine/Engine;.load:(Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Lcom/bumptech/glide/load/Key;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/engine/DiskCacheStrategy;Ljava/util/Map;ZZLcom/bumptech/glide/load/Options;ZZZZLcom/bumptech/glide/request/ResourceCallback;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/load/engine/Engine$LoadStatus;` @kind virtual;
  #L3faab6.  v0:= temp @kind object;
  #L3faab8.  v1:= v24 @kind object;
  #L3faabc.  v1.`com.bumptech.glide.request.SingleRequest.t` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` := v0 @kind object;
  #L3faac0.  v0:= v1.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3faac4.  v2:= v22 @kind object;
  #L3faac8.  if v0 == v2 then goto L3faad2;
  #L3faacc.  v0:= 0I;
  #L3faace.  v1.`com.bumptech.glide.request.SingleRequest.t` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` := v0 @kind object;
  #L3faad2.  if v21 == 0 then goto L3fab0a;
  #L3faad6.  v0:= new `java.lang.StringBuilder`;
  #L3faada.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3faae0.  v2:= "finished onSizeReady in " @kind object;
  #L3faae4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3faaea.  v2:= v1.`com.bumptech.glide.request.SingleRequest.u` @type ^`long` @kind wide;
  #L3faaee.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3faaf4.  v2:= temp @kind wide;
  #L3faaf6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3faafc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fab02.  v0:= temp @kind object;
  #L3fab04.  call `l`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.l:(Ljava/lang/String;)V` @kind direct;
  #L3fab0a.  @monitorexit v23
  #L3fab0c.  return @kind void;
  #L3fab0e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fab10.  v1:= v24 @kind object;
  #L3fab14.  goto L3fab1e;
  #L3fab16.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fab18.  v23:= v14 @kind object;
  #L3fab1c.  v1:= v15 @kind object;
  #L3fab1e.  @monitorexit v23
  #L3fab20.  throw v0;
  #L3fab22.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fab24.  goto L3fab1e;
  catch `java.lang.Throwable` @[L3fa914..L3faa8c] goto L3fab16;
  catch `java.lang.Throwable` @[L3faab0..L3faab8] goto L3fab0e;
  catch `java.lang.Throwable` @[L3faabc..L3fab20] goto L3fab22;
}
procedure `void` `pause`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.pause:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fab5c.  v0:= v2.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3fab60.  @monitorenter v0
  #L3fab62.  call temp:= `isRunning`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.isRunning:()Z` @kind virtual;
  #L3fab68.  v1:= temp;
  #L3fab6a.  if v1 == 0 then goto L3fab74;
  #L3fab6e.  call `clear`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.clear:()V` @kind virtual;
  #L3fab74.  @monitorexit v0
  #L3fab76.  return @kind void;
  #L3fab78.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fab7a.  @monitorexit v0
  #L3fab7c.  throw v1;
  catch `java.lang.Throwable` @[L3fab62..L3fab7c] goto L3fab78;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.request.SingleRequest` v4 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f9ec8.  v0:= v4.`com.bumptech.glide.request.SingleRequest.d` @type ^`java.lang.Object` @kind object;
  #L3f9ecc.  @monitorenter v0
  #L3f9ece.  v1:= v4.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Object` @kind object;
  #L3f9ed2.  v2:= v4.`com.bumptech.glide.request.SingleRequest.j` @type ^`java.lang.Class` @kind object;
  #L3f9ed6.  @monitorexit v0
  #L3f9ed8.  v0:= new `java.lang.StringBuilder`;
  #L3f9edc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f9ee2.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L3f9ee8.  v3:= temp @kind object;
  #L3f9eea.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9ef0.  v3:= "[model=" @kind object;
  #L3f9ef4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9efa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9f00.  v1:= ", transcodeClass=" @kind object;
  #L3f9f04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9f0a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9f10.  v1:= "]" @kind object;
  #L3f9f14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9f1a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f9f20.  v0:= temp @kind object;
  #L3f9f22.  return v0 @kind object;
  #L3f9f24.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f9f26.  @monitorexit v0
  #L3f9f28.  throw v1;
  catch `java.lang.Throwable` @[L3f9ece..L3f9ed8] goto L3f9f24;
  catch `java.lang.Throwable` @[L3f9f26..L3f9f28] goto L3f9f24;
}
