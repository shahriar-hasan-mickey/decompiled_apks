record `com.bumptech.glide.request.ThumbnailRequestCoordinator` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.RequestCoordinator` @kind interface, `com.bumptech.glide.request.Request` @kind interface {
  `com.bumptech.glide.request.RequestCoordinator` `com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.Request` `com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.request.Request` `com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.request.RequestCoordinator$RequestState` `com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.RequestCoordinator$RequestState` `com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v1 @kind this, `java.lang.Object` v2 @kind object, `com.bumptech.glide.request.RequestCoordinator` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3faf58.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3faf5e.  v0:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.CLEARED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3faf62.  v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v0 @kind object;
  #L3faf66.  v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v0 @kind object;
  #L3faf6a.  v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` := v2 @kind object;
  #L3faf6e.  v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` := v3 @kind object;
  #L3faf72.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v1 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fae88.  v0:= v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3fae8c.  if v0 == 0 then goto L3faea2;
  #L3fae90.  call temp:= `canNotifyCleared`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canNotifyCleared:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3fae96.  v0:= temp;
  #L3fae98.  if v0 == 0 then goto L3fae9e;
  #L3fae9c.  goto L3faea2;
  #L3fae9e.  v0:= 0I;
  #L3faea0.  goto L3faea4;
  #L3faea2.  v0:= 1I;
  #L3faea4.  return v0;
}
procedure `boolean` `b`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v1 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3faeb8.  v0:= v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3faebc.  if v0 == 0 then goto L3faed2;
  #L3faec0.  call temp:= `canNotifyStatusChanged`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canNotifyStatusChanged:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3faec6.  v0:= temp;
  #L3faec8.  if v0 == 0 then goto L3faece;
  #L3faecc.  goto L3faed2;
  #L3faece.  v0:= 0I;
  #L3faed0.  goto L3faed4;
  #L3faed2.  v0:= 1I;
  #L3faed4.  return v0;
}
procedure `boolean` `c`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v1 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3faee8.  v0:= v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3faeec.  if v0 == 0 then goto L3faf02;
  #L3faef0.  call temp:= `canSetImage`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canSetImage:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3faef6.  v0:= temp;
  #L3faef8.  if v0 == 0 then goto L3faefe;
  #L3faefc.  goto L3faf02;
  #L3faefe.  v0:= 0I;
  #L3faf00.  goto L3faf04;
  #L3faf02.  v0:= 1I;
  #L3faf04.  return v0;
}
procedure `void` `begin`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v4 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.begin:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3faf84.  v0:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3faf88.  @monitorenter v0
  #L3faf8a.  v1:= 1I;
  #L3faf8c.  v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @type ^`boolean` := v1 @kind boolean;
  #L3faf90.  v1:= 0I;
  #L3faf92.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3faf96.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3faf9a.  if v2 == v3 then goto L3fafb8;
  #L3faf9e.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fafa2.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fafa6.  if v2 == v3 then goto L3fafb8;
  #L3fafaa.  v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3fafae.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fafb2.  call `begin`(v2) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3fafb8.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @type ^`boolean` @kind boolean;
  #L3fafbc.  if v2 == 0 then goto L3fafda;
  #L3fafc0.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fafc4.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fafc8.  if v2 == v3 then goto L3fafda;
  #L3fafcc.  v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3fafd0.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fafd4.  call `begin`(v2) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3fafda.  v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @type ^`boolean` := v1 @kind boolean;
  #L3fafde.  @monitorexit v0
  #L3fafe0.  return @kind void;
  #L3fafe2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fafe4.  v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @type ^`boolean` := v1 @kind boolean;
  #L3fafe8.  throw v2;
  #L3fafea.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fafec.  @monitorexit v0
  #L3fafee.  throw v1;
  catch `java.lang.Throwable` @[L3faf8c..L3faf90] goto L3fafea;
  catch `java.lang.Throwable` @[L3faf92..L3fafda] goto L3fafe2;
  catch `java.lang.Throwable` @[L3fafda..L3fafee] goto L3fafea;
}
procedure `boolean` `canNotifyCleared`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.canNotifyCleared:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fabf0.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3fabf4.  @monitorenter v0
  #L3fabf6.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.a:()Z` @kind direct;
  #L3fabfc.  v1:= temp;
  #L3fabfe.  if v1 == 0 then goto L3fac22;
  #L3fac02.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fac06.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fac0c.  v3:= temp;
  #L3fac0e.  if v3 == 0 then goto L3fac22;
  #L3fac12.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fac16.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.PAUSED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fac1a.  if v3 == v1 then goto L3fac22;
  #L3fac1e.  v3:= 1I;
  #L3fac20.  goto L3fac24;
  #L3fac22.  v3:= 0I;
  #L3fac24.  @monitorexit v0
  #L3fac26.  return v3;
  #L3fac28.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fac2a.  @monitorexit v0
  #L3fac2c.  throw v3;
  catch `java.lang.Throwable` @[L3fabf6..L3fac2c] goto L3fac28;
}
procedure `boolean` `canNotifyStatusChanged`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.canNotifyStatusChanged:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fac4c.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3fac50.  @monitorenter v0
  #L3fac52.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.b:()Z` @kind direct;
  #L3fac58.  v1:= temp;
  #L3fac5a.  if v1 == 0 then goto L3fac7e;
  #L3fac5e.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fac62.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fac68.  v3:= temp;
  #L3fac6a.  if v3 == 0 then goto L3fac7e;
  #L3fac6e.  call temp:= `isAnyResourceSet`(v2) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isAnyResourceSet:()Z` @kind virtual;
  #L3fac74.  v3:= temp;
  #L3fac76.  if v3 != 0 then goto L3fac7e;
  #L3fac7a.  v3:= 1I;
  #L3fac7c.  goto L3fac80;
  #L3fac7e.  v3:= 0I;
  #L3fac80.  @monitorexit v0
  #L3fac82.  return v3;
  #L3fac84.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fac86.  @monitorexit v0
  #L3fac88.  throw v3;
  catch `java.lang.Throwable` @[L3fac52..L3fac88] goto L3fac84;
}
procedure `boolean` `canSetImage`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.canSetImage:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3faca8.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3facac.  @monitorenter v0
  #L3facae.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.c:()Z` @kind direct;
  #L3facb4.  v1:= temp;
  #L3facb6.  if v1 == 0 then goto L3facda;
  #L3facba.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3facbe.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3facc4.  v3:= temp;
  #L3facc6.  if v3 != 0 then goto L3facd6;
  #L3facca.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3facce.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3facd2.  if v3 == v1 then goto L3facda;
  #L3facd6.  v3:= 1I;
  #L3facd8.  goto L3facdc;
  #L3facda.  v3:= 0I;
  #L3facdc.  @monitorexit v0
  #L3facde.  return v3;
  #L3face0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3face2.  @monitorexit v0
  #L3face4.  throw v3;
  catch `java.lang.Throwable` @[L3facae..L3face4] goto L3face0;
}
procedure `void` `clear`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fb020.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3fb024.  @monitorenter v0
  #L3fb026.  v1:= 0I;
  #L3fb028.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @type ^`boolean` := v1 @kind boolean;
  #L3fb02c.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.CLEARED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fb030.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3fb034.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3fb038.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fb03c.  call `clear`(v1) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3fb042.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fb046.  call `clear`(v1) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3fb04c.  @monitorexit v0
  #L3fb04e.  return @kind void;
  #L3fb050.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fb052.  @monitorexit v0
  #L3fb054.  throw v1;
  catch `java.lang.Throwable` @[L3fb028..L3fb054] goto L3fb050;
}
procedure `com.bumptech.glide.request.RequestCoordinator` `getRoot`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.getRoot:()Lcom/bumptech/glide/request/RequestCoordinator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3faf18.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3faf1c.  @monitorenter v0
  #L3faf1e.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3faf22.  if v1 == 0 then goto L3faf30;
  #L3faf26.  call temp:= `getRoot`(v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.getRoot:()Lcom/bumptech/glide/request/RequestCoordinator;` @kind interface;
  #L3faf2c.  v1:= temp @kind object;
  #L3faf2e.  goto L3faf32;
  #L3faf30.  v1:= v2 @kind object;
  #L3faf32.  @monitorexit v0
  #L3faf34.  return v1 @kind object;
  #L3faf36.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3faf38.  @monitorexit v0
  #L3faf3a.  throw v1;
  catch `java.lang.Throwable` @[L3faf1e..L3faf3a] goto L3faf36;
}
procedure `boolean` `isAnyResourceSet`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isAnyResourceSet:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fad04.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3fad08.  @monitorenter v0
  #L3fad0a.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fad0e.  call temp:= `isAnyResourceSet`(v1) @signature `Lcom/bumptech/glide/request/Request;.isAnyResourceSet:()Z` @kind interface;
  #L3fad14.  v1:= temp;
  #L3fad16.  if v1 != 0 then goto L3fad30;
  #L3fad1a.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fad1e.  call temp:= `isAnyResourceSet`(v1) @signature `Lcom/bumptech/glide/request/Request;.isAnyResourceSet:()Z` @kind interface;
  #L3fad24.  v1:= temp;
  #L3fad26.  if v1 == 0 then goto L3fad2c;
  #L3fad2a.  goto L3fad30;
  #L3fad2c.  v1:= 0I;
  #L3fad2e.  goto L3fad32;
  #L3fad30.  v1:= 1I;
  #L3fad32.  @monitorexit v0
  #L3fad34.  return v1;
  #L3fad36.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fad38.  @monitorexit v0
  #L3fad3a.  throw v1;
  catch `java.lang.Throwable` @[L3fad0a..L3fad3a] goto L3fad36;
}
procedure `boolean` `isCleared`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isCleared:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fad58.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3fad5c.  @monitorenter v0
  #L3fad5e.  v1:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fad62.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.CLEARED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fad66.  if v1 != v2 then goto L3fad6e;
  #L3fad6a.  v1:= 1I;
  #L3fad6c.  goto L3fad70;
  #L3fad6e.  v1:= 0I;
  #L3fad70.  @monitorexit v0
  #L3fad72.  return v1;
  #L3fad74.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fad76.  @monitorexit v0
  #L3fad78.  throw v1;
  catch `java.lang.Throwable` @[L3fad5e..L3fad78] goto L3fad74;
}
procedure `boolean` `isComplete`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fad98.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3fad9c.  @monitorenter v0
  #L3fad9e.  v1:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fada2.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fada6.  if v1 != v2 then goto L3fadae;
  #L3fadaa.  v1:= 1I;
  #L3fadac.  goto L3fadb0;
  #L3fadae.  v1:= 0I;
  #L3fadb0.  @monitorexit v0
  #L3fadb2.  return v1;
  #L3fadb4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fadb6.  @monitorexit v0
  #L3fadb8.  throw v1;
  catch `java.lang.Throwable` @[L3fad9e..L3fadb8] goto L3fadb4;
}
procedure `boolean` `isEquivalentTo`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v3 @kind this, `com.bumptech.glide.request.Request` v4 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fadd8.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.request.ThumbnailRequestCoordinator` @kind boolean;
  #L3faddc.  v1:= 0I;
  #L3fadde.  if v0 == 0 then goto L3fae34;
  #L3fade2.  v4:= (`com.bumptech.glide.request.ThumbnailRequestCoordinator`) v4 @kind object;
  #L3fade6.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fadea.  if v0 != 0 then goto L3fadf8;
  #L3fadee.  v0:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fadf2.  if v0 != 0 then goto L3fae34;
  #L3fadf6.  goto L3fae0c;
  #L3fadf8.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fadfc.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fae00.  call temp:= `isEquivalentTo`(v0, v2) @signature `Lcom/bumptech/glide/request/Request;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3fae06.  v0:= temp;
  #L3fae08.  if v0 == 0 then goto L3fae34;
  #L3fae0c.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fae10.  if v0 != 0 then goto L3fae1e;
  #L3fae14.  v4:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fae18.  if v4 != 0 then goto L3fae34;
  #L3fae1c.  goto L3fae32;
  #L3fae1e.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fae22.  v4:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fae26.  call temp:= `isEquivalentTo`(v0, v4) @signature `Lcom/bumptech/glide/request/Request;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3fae2c.  v4:= temp;
  #L3fae2e.  if v4 == 0 then goto L3fae34;
  #L3fae32.  v1:= 1I;
  #L3fae34.  return v1;
}
procedure `boolean` `isRunning`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fae48.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3fae4c.  @monitorenter v0
  #L3fae4e.  v1:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fae52.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fae56.  if v1 != v2 then goto L3fae5e;
  #L3fae5a.  v1:= 1I;
  #L3fae5c.  goto L3fae60;
  #L3fae5e.  v1:= 0I;
  #L3fae60.  @monitorexit v0
  #L3fae62.  return v1;
  #L3fae64.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fae66.  @monitorexit v0
  #L3fae68.  throw v1;
  catch `java.lang.Throwable` @[L3fae4e..L3fae68] goto L3fae64;
}
procedure `void` `onRequestFailed`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.onRequestFailed:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fb074.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3fb078.  @monitorenter v0
  #L3fb07a.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fb07e.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fb084.  v3:= temp;
  #L3fb086.  if v3 != 0 then goto L3fb096;
  #L3fb08a.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.FAILED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fb08e.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3fb092.  @monitorexit v0
  #L3fb094.  return @kind void;
  #L3fb096.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.FAILED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fb09a.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3fb09e.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3fb0a2.  if v3 == 0 then goto L3fb0ac;
  #L3fb0a6.  call `onRequestFailed`(v3, v2) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.onRequestFailed:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3fb0ac.  @monitorexit v0
  #L3fb0ae.  return @kind void;
  #L3fb0b0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fb0b2.  @monitorexit v0
  #L3fb0b4.  throw v3;
  catch `java.lang.Throwable` @[L3fb07a..L3fb0b4] goto L3fb0b0;
}
procedure `void` `onRequestSuccess`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.onRequestSuccess:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fb0d4.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3fb0d8.  @monitorenter v0
  #L3fb0da.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fb0de.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fb0e4.  v3:= temp;
  #L3fb0e6.  if v3 == 0 then goto L3fb0f6;
  #L3fb0ea.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fb0ee.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3fb0f2.  @monitorexit v0
  #L3fb0f4.  return @kind void;
  #L3fb0f6.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fb0fa.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3fb0fe.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3fb102.  if v3 == 0 then goto L3fb10c;
  #L3fb106.  call `onRequestSuccess`(v3, v2) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.onRequestSuccess:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3fb10c.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fb110.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/request/RequestCoordinator$RequestState;.a:()Z` @kind virtual;
  #L3fb116.  v3:= temp;
  #L3fb118.  if v3 != 0 then goto L3fb126;
  #L3fb11c.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fb120.  call `clear`(v3) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3fb126.  @monitorexit v0
  #L3fb128.  return @kind void;
  #L3fb12a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fb12c.  @monitorexit v0
  #L3fb12e.  throw v3;
  catch `java.lang.Throwable` @[L3fb0da..L3fb12e] goto L3fb12a;
}
procedure `void` `pause`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.pause:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fb14c.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3fb150.  @monitorenter v0
  #L3fb152.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fb156.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator$RequestState;.a:()Z` @kind virtual;
  #L3fb15c.  v1:= temp;
  #L3fb15e.  if v1 != 0 then goto L3fb174;
  #L3fb162.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.PAUSED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fb166.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3fb16a.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fb16e.  call `pause`(v1) @signature `Lcom/bumptech/glide/request/Request;.pause:()V` @kind interface;
  #L3fb174.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fb178.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator$RequestState;.a:()Z` @kind virtual;
  #L3fb17e.  v1:= temp;
  #L3fb180.  if v1 != 0 then goto L3fb196;
  #L3fb184.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.PAUSED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3fb188.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3fb18c.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3fb190.  call `pause`(v1) @signature `Lcom/bumptech/glide/request/Request;.pause:()V` @kind interface;
  #L3fb196.  @monitorexit v0
  #L3fb198.  return @kind void;
  #L3fb19a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fb19c.  @monitorexit v0
  #L3fb19e.  throw v1;
  catch `java.lang.Throwable` @[L3fb152..L3fb19e] goto L3fb19a;
}
procedure `void` `setRequests`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v0 @kind this, `com.bumptech.glide.request.Request` v1 @kind object, `com.bumptech.glide.request.Request` v2 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;

  #L3fb1bc.  v0.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` := v1 @kind object;
  #L3fb1c0.  v0.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` := v2 @kind object;
  #L3fb1c4.  return @kind void;
}
