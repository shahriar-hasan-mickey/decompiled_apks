record `com.bumptech.glide.request.ErrorRequestCoordinator` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.request.RequestCoordinator` @kind interface, `com.bumptech.glide.request.Request` @kind interface {
  `java.lang.Object` `com.bumptech.glide.request.ErrorRequestCoordinator.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.RequestCoordinator` `com.bumptech.glide.request.ErrorRequestCoordinator.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.Request` `com.bumptech.glide.request.ErrorRequestCoordinator.c` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.request.Request` `com.bumptech.glide.request.ErrorRequestCoordinator.d` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.request.RequestCoordinator$RequestState` `com.bumptech.glide.request.ErrorRequestCoordinator.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.RequestCoordinator$RequestState` `com.bumptech.glide.request.ErrorRequestCoordinator.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.ErrorRequestCoordinator` v1 @kind this, `java.lang.Object` v2 @kind object, `com.bumptech.glide.request.RequestCoordinator` v3 @kind object) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f8a88.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f8a8e.  v0:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.CLEARED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8a92.  v1.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v0 @kind object;
  #L3f8a96.  v1.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v0 @kind object;
  #L3f8a9a.  v1.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` := v2 @kind object;
  #L3f8a9e.  v1.`com.bumptech.glide.request.ErrorRequestCoordinator.b` @type ^`com.bumptech.glide.request.RequestCoordinator` := v3 @kind object;
  #L3f8aa2.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.request.ErrorRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.a:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f8970.  v0:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8974.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f897a.  v0:= temp;
  #L3f897c.  if v0 != 0 then goto L3f89a2;
  #L3f8980.  v0:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8984.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.FAILED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8988.  if v0 != v1 then goto L3f899e;
  #L3f898c.  v0:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8990.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f8996.  v3:= temp;
  #L3f8998.  if v3 == 0 then goto L3f899e;
  #L3f899c.  goto L3f89a2;
  #L3f899e.  v3:= 0I;
  #L3f89a0.  goto L3f89a4;
  #L3f89a2.  v3:= 1I;
  #L3f89a4.  return v3;
}
procedure `boolean` `b`(`com.bumptech.glide.request.ErrorRequestCoordinator` v1 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f89b8.  v0:= v1.`com.bumptech.glide.request.ErrorRequestCoordinator.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3f89bc.  if v0 == 0 then goto L3f89d2;
  #L3f89c0.  call temp:= `canNotifyCleared`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canNotifyCleared:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3f89c6.  v0:= temp;
  #L3f89c8.  if v0 == 0 then goto L3f89ce;
  #L3f89cc.  goto L3f89d2;
  #L3f89ce.  v0:= 0I;
  #L3f89d0.  goto L3f89d4;
  #L3f89d2.  v0:= 1I;
  #L3f89d4.  return v0;
}
procedure `boolean` `c`(`com.bumptech.glide.request.ErrorRequestCoordinator` v1 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f89e8.  v0:= v1.`com.bumptech.glide.request.ErrorRequestCoordinator.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3f89ec.  if v0 == 0 then goto L3f8a02;
  #L3f89f0.  call temp:= `canNotifyStatusChanged`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canNotifyStatusChanged:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3f89f6.  v0:= temp;
  #L3f89f8.  if v0 == 0 then goto L3f89fe;
  #L3f89fc.  goto L3f8a02;
  #L3f89fe.  v0:= 0I;
  #L3f8a00.  goto L3f8a04;
  #L3f8a02.  v0:= 1I;
  #L3f8a04.  return v0;
}
procedure `boolean` `d`(`com.bumptech.glide.request.ErrorRequestCoordinator` v1 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.d:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f8a18.  v0:= v1.`com.bumptech.glide.request.ErrorRequestCoordinator.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3f8a1c.  if v0 == 0 then goto L3f8a32;
  #L3f8a20.  call temp:= `canSetImage`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canSetImage:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3f8a26.  v0:= temp;
  #L3f8a28.  if v0 == 0 then goto L3f8a2e;
  #L3f8a2c.  goto L3f8a32;
  #L3f8a2e.  v0:= 0I;
  #L3f8a30.  goto L3f8a34;
  #L3f8a32.  v0:= 1I;
  #L3f8a34.  return v0;
}
procedure `void` `begin`(`com.bumptech.glide.request.ErrorRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.begin:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8ab4.  v0:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f8ab8.  @monitorenter v0
  #L3f8aba.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8abe.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8ac2.  if v1 == v2 then goto L3f8ad4;
  #L3f8ac6.  v3.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v2 @kind object;
  #L3f8aca.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8ace.  call `begin`(v1) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3f8ad4.  @monitorexit v0
  #L3f8ad6.  return @kind void;
  #L3f8ad8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8ada.  @monitorexit v0
  #L3f8adc.  throw v1;
  catch `java.lang.Throwable` @[L3f8aba..L3f8adc] goto L3f8ad8;
}
procedure `boolean` `canNotifyCleared`(`com.bumptech.glide.request.ErrorRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.canNotifyCleared:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8714.  v0:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f8718.  @monitorenter v0
  #L3f871a.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.b:()Z` @kind direct;
  #L3f8720.  v1:= temp;
  #L3f8722.  if v1 == 0 then goto L3f8736;
  #L3f8726.  call temp:= `a`(v2, v3) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.a:(Lcom/bumptech/glide/request/Request;)Z` @kind direct;
  #L3f872c.  v3:= temp;
  #L3f872e.  if v3 == 0 then goto L3f8736;
  #L3f8732.  v3:= 1I;
  #L3f8734.  goto L3f8738;
  #L3f8736.  v3:= 0I;
  #L3f8738.  @monitorexit v0
  #L3f873a.  return v3;
  #L3f873c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f873e.  @monitorexit v0
  #L3f8740.  throw v3;
  catch `java.lang.Throwable` @[L3f871a..L3f8740] goto L3f873c;
}
procedure `boolean` `canNotifyStatusChanged`(`com.bumptech.glide.request.ErrorRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.canNotifyStatusChanged:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8760.  v0:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f8764.  @monitorenter v0
  #L3f8766.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.c:()Z` @kind direct;
  #L3f876c.  v1:= temp;
  #L3f876e.  if v1 == 0 then goto L3f8782;
  #L3f8772.  call temp:= `a`(v2, v3) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.a:(Lcom/bumptech/glide/request/Request;)Z` @kind direct;
  #L3f8778.  v3:= temp;
  #L3f877a.  if v3 == 0 then goto L3f8782;
  #L3f877e.  v3:= 1I;
  #L3f8780.  goto L3f8784;
  #L3f8782.  v3:= 0I;
  #L3f8784.  @monitorexit v0
  #L3f8786.  return v3;
  #L3f8788.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f878a.  @monitorexit v0
  #L3f878c.  throw v3;
  catch `java.lang.Throwable` @[L3f8766..L3f878c] goto L3f8788;
}
procedure `boolean` `canSetImage`(`com.bumptech.glide.request.ErrorRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.canSetImage:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f87ac.  v0:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f87b0.  @monitorenter v0
  #L3f87b2.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.d:()Z` @kind direct;
  #L3f87b8.  v1:= temp;
  #L3f87ba.  if v1 == 0 then goto L3f87ce;
  #L3f87be.  call temp:= `a`(v2, v3) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.a:(Lcom/bumptech/glide/request/Request;)Z` @kind direct;
  #L3f87c4.  v3:= temp;
  #L3f87c6.  if v3 == 0 then goto L3f87ce;
  #L3f87ca.  v3:= 1I;
  #L3f87cc.  goto L3f87d0;
  #L3f87ce.  v3:= 0I;
  #L3f87d0.  @monitorexit v0
  #L3f87d2.  return v3;
  #L3f87d4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f87d6.  @monitorexit v0
  #L3f87d8.  throw v3;
  catch `java.lang.Throwable` @[L3f87b2..L3f87d8] goto L3f87d4;
}
procedure `void` `clear`(`com.bumptech.glide.request.ErrorRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8afc.  v0:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f8b00.  @monitorenter v0
  #L3f8b02.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.CLEARED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8b06.  v3.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3f8b0a.  v2:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8b0e.  call `clear`(v2) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3f8b14.  v2:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8b18.  if v2 == v1 then goto L3f8b2a;
  #L3f8b1c.  v3.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3f8b20.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8b24.  call `clear`(v1) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3f8b2a.  @monitorexit v0
  #L3f8b2c.  return @kind void;
  #L3f8b2e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8b30.  @monitorexit v0
  #L3f8b32.  throw v1;
  catch `java.lang.Throwable` @[L3f8b02..L3f8b32] goto L3f8b2e;
}
procedure `com.bumptech.glide.request.RequestCoordinator` `getRoot`(`com.bumptech.glide.request.ErrorRequestCoordinator` v2 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.getRoot:()Lcom/bumptech/glide/request/RequestCoordinator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8a48.  v0:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f8a4c.  @monitorenter v0
  #L3f8a4e.  v1:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3f8a52.  if v1 == 0 then goto L3f8a60;
  #L3f8a56.  call temp:= `getRoot`(v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.getRoot:()Lcom/bumptech/glide/request/RequestCoordinator;` @kind interface;
  #L3f8a5c.  v1:= temp @kind object;
  #L3f8a5e.  goto L3f8a62;
  #L3f8a60.  v1:= v2 @kind object;
  #L3f8a62.  @monitorexit v0
  #L3f8a64.  return v1 @kind object;
  #L3f8a66.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8a68.  @monitorexit v0
  #L3f8a6a.  throw v1;
  catch `java.lang.Throwable` @[L3f8a4e..L3f8a6a] goto L3f8a66;
}
procedure `boolean` `isAnyResourceSet`(`com.bumptech.glide.request.ErrorRequestCoordinator` v2 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.isAnyResourceSet:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f87f8.  v0:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f87fc.  @monitorenter v0
  #L3f87fe.  v1:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8802.  call temp:= `isAnyResourceSet`(v1) @signature `Lcom/bumptech/glide/request/Request;.isAnyResourceSet:()Z` @kind interface;
  #L3f8808.  v1:= temp;
  #L3f880a.  if v1 != 0 then goto L3f8824;
  #L3f880e.  v1:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8812.  call temp:= `isAnyResourceSet`(v1) @signature `Lcom/bumptech/glide/request/Request;.isAnyResourceSet:()Z` @kind interface;
  #L3f8818.  v1:= temp;
  #L3f881a.  if v1 == 0 then goto L3f8820;
  #L3f881e.  goto L3f8824;
  #L3f8820.  v1:= 0I;
  #L3f8822.  goto L3f8826;
  #L3f8824.  v1:= 1I;
  #L3f8826.  @monitorexit v0
  #L3f8828.  return v1;
  #L3f882a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f882c.  @monitorexit v0
  #L3f882e.  throw v1;
  catch `java.lang.Throwable` @[L3f87fe..L3f882e] goto L3f882a;
}
procedure `boolean` `isCleared`(`com.bumptech.glide.request.ErrorRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.isCleared:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f884c.  v0:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f8850.  @monitorenter v0
  #L3f8852.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8856.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.CLEARED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f885a.  if v1 != v2 then goto L3f886a;
  #L3f885e.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8862.  if v1 != v2 then goto L3f886a;
  #L3f8866.  v1:= 1I;
  #L3f8868.  goto L3f886c;
  #L3f886a.  v1:= 0I;
  #L3f886c.  @monitorexit v0
  #L3f886e.  return v1;
  #L3f8870.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8872.  @monitorexit v0
  #L3f8874.  throw v1;
  catch `java.lang.Throwable` @[L3f8852..L3f8874] goto L3f8870;
}
procedure `boolean` `isComplete`(`com.bumptech.glide.request.ErrorRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.isComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8894.  v0:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f8898.  @monitorenter v0
  #L3f889a.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f889e.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f88a2.  if v1 == v2 then goto L3f88b4;
  #L3f88a6.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f88aa.  if v1 != v2 then goto L3f88b0;
  #L3f88ae.  goto L3f88b4;
  #L3f88b0.  v1:= 0I;
  #L3f88b2.  goto L3f88b6;
  #L3f88b4.  v1:= 1I;
  #L3f88b6.  @monitorexit v0
  #L3f88b8.  return v1;
  #L3f88ba.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f88bc.  @monitorexit v0
  #L3f88be.  throw v1;
  catch `java.lang.Throwable` @[L3f889a..L3f88be] goto L3f88ba;
}
procedure `boolean` `isEquivalentTo`(`com.bumptech.glide.request.ErrorRequestCoordinator` v3 @kind this, `com.bumptech.glide.request.Request` v4 @kind object) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f88dc.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.request.ErrorRequestCoordinator` @kind boolean;
  #L3f88e0.  v1:= 0I;
  #L3f88e2.  if v0 == 0 then goto L3f8914;
  #L3f88e6.  v4:= (`com.bumptech.glide.request.ErrorRequestCoordinator`) v4 @kind object;
  #L3f88ea.  v0:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f88ee.  v2:= v4.`com.bumptech.glide.request.ErrorRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f88f2.  call temp:= `isEquivalentTo`(v0, v2) @signature `Lcom/bumptech/glide/request/Request;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3f88f8.  v0:= temp;
  #L3f88fa.  if v0 == 0 then goto L3f8914;
  #L3f88fe.  v0:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8902.  v4:= v4.`com.bumptech.glide.request.ErrorRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8906.  call temp:= `isEquivalentTo`(v0, v4) @signature `Lcom/bumptech/glide/request/Request;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3f890c.  v4:= temp;
  #L3f890e.  if v4 == 0 then goto L3f8914;
  #L3f8912.  v1:= 1I;
  #L3f8914.  return v1;
}
procedure `boolean` `isRunning`(`com.bumptech.glide.request.ErrorRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8928.  v0:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f892c.  @monitorenter v0
  #L3f892e.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8932.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8936.  if v1 == v2 then goto L3f8948;
  #L3f893a.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f893e.  if v1 != v2 then goto L3f8944;
  #L3f8942.  goto L3f8948;
  #L3f8944.  v1:= 0I;
  #L3f8946.  goto L3f894a;
  #L3f8948.  v1:= 1I;
  #L3f894a.  @monitorexit v0
  #L3f894c.  return v1;
  #L3f894e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8950.  @monitorexit v0
  #L3f8952.  throw v1;
  catch `java.lang.Throwable` @[L3f892e..L3f8952] goto L3f894e;
}
procedure `void` `onRequestFailed`(`com.bumptech.glide.request.ErrorRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.onRequestFailed:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8b50.  v0:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f8b54.  @monitorenter v0
  #L3f8b56.  v1:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8b5a.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f8b60.  v3:= temp;
  #L3f8b62.  if v3 != 0 then goto L3f8b8c;
  #L3f8b66.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.FAILED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8b6a.  v2.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3f8b6e.  v3:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8b72.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8b76.  if v3 == v1 then goto L3f8b88;
  #L3f8b7a.  v2.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3f8b7e.  v3:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8b82.  call `begin`(v3) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3f8b88.  @monitorexit v0
  #L3f8b8a.  return @kind void;
  #L3f8b8c.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.FAILED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8b90.  v2.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3f8b94.  v3:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3f8b98.  if v3 == 0 then goto L3f8ba2;
  #L3f8b9c.  call `onRequestFailed`(v3, v2) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.onRequestFailed:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3f8ba2.  @monitorexit v0
  #L3f8ba4.  return @kind void;
  #L3f8ba6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8ba8.  @monitorexit v0
  #L3f8baa.  throw v3;
  catch `java.lang.Throwable` @[L3f8b56..L3f8baa] goto L3f8ba6;
}
procedure `void` `onRequestSuccess`(`com.bumptech.glide.request.ErrorRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.onRequestSuccess:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8bc8.  v0:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f8bcc.  @monitorenter v0
  #L3f8bce.  v1:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8bd2.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f8bd8.  v1:= temp;
  #L3f8bda.  if v1 == 0 then goto L3f8be8;
  #L3f8bde.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8be2.  v2.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3f8be6.  goto L3f8c00;
  #L3f8be8.  v1:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8bec.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f8bf2.  v3:= temp;
  #L3f8bf4.  if v3 == 0 then goto L3f8c00;
  #L3f8bf8.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8bfc.  v2.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3f8c00.  v3:= v2.`com.bumptech.glide.request.ErrorRequestCoordinator.b` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3f8c04.  if v3 == 0 then goto L3f8c0e;
  #L3f8c08.  call `onRequestSuccess`(v3, v2) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.onRequestSuccess:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3f8c0e.  @monitorexit v0
  #L3f8c10.  return @kind void;
  #L3f8c12.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8c14.  @monitorexit v0
  #L3f8c16.  throw v3;
  catch `java.lang.Throwable` @[L3f8bce..L3f8c16] goto L3f8c12;
}
procedure `void` `pause`(`com.bumptech.glide.request.ErrorRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.pause:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8c34.  v0:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.a` @type ^`java.lang.Object` @kind object;
  #L3f8c38.  @monitorenter v0
  #L3f8c3a.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8c3e.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8c42.  if v1 != v2 then goto L3f8c58;
  #L3f8c46.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.PAUSED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8c4a.  v3.`com.bumptech.glide.request.ErrorRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3f8c4e.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8c52.  call `pause`(v1) @signature `Lcom/bumptech/glide/request/Request;.pause:()V` @kind interface;
  #L3f8c58.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8c5c.  if v1 != v2 then goto L3f8c72;
  #L3f8c60.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.PAUSED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3f8c64.  v3.`com.bumptech.glide.request.ErrorRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3f8c68.  v1:= v3.`com.bumptech.glide.request.ErrorRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8c6c.  call `pause`(v1) @signature `Lcom/bumptech/glide/request/Request;.pause:()V` @kind interface;
  #L3f8c72.  @monitorexit v0
  #L3f8c74.  return @kind void;
  #L3f8c76.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8c78.  @monitorexit v0
  #L3f8c7a.  throw v1;
  catch `java.lang.Throwable` @[L3f8c3a..L3f8c7a] goto L3f8c76;
}
procedure `void` `setRequests`(`com.bumptech.glide.request.ErrorRequestCoordinator` v0 @kind this, `com.bumptech.glide.request.Request` v1 @kind object, `com.bumptech.glide.request.Request` v2 @kind object) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;

  #L3f8c98.  v0.`com.bumptech.glide.request.ErrorRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` := v1 @kind object;
  #L3f8c9c.  v0.`com.bumptech.glide.request.ErrorRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` := v2 @kind object;
  #L3f8ca0.  return @kind void;
}
