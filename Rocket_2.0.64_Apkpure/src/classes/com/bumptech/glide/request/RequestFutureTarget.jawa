record `com.bumptech.glide.request.RequestFutureTarget` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.FutureTarget` @kind interface, `com.bumptech.glide.request.RequestListener` @kind interface {
  `int` `com.bumptech.glide.request.RequestFutureTarget.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.request.RequestFutureTarget.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.request.RequestFutureTarget.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.RequestFutureTarget$a` `com.bumptech.glide.request.RequestFutureTarget.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.request.RequestFutureTarget.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.Request` `com.bumptech.glide.request.RequestFutureTarget.f` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.RequestFutureTarget.g` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.RequestFutureTarget.h` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.RequestFutureTarget.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.GlideException` `com.bumptech.glide.request.RequestFutureTarget.j` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.request.RequestFutureTarget$a` `@@com.bumptech.glide.request.RequestFutureTarget.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f926c.  v0:= new `com.bumptech.glide.request.RequestFutureTarget$a`;
  #L3f9270.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$a;.<init>:()V` @kind direct;
  #L3f9276.  `@@com.bumptech.glide.request.RequestFutureTarget.k` @type ^`com.bumptech.glide.request.RequestFutureTarget$a` := v0 @kind object;
  #L3f927a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.RequestFutureTarget` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f928c.  v0:= `@@com.bumptech.glide.request.RequestFutureTarget.k` @type ^`com.bumptech.glide.request.RequestFutureTarget$a` @kind object;
  #L3f9290.  v1:= 1I;
  #L3f9292.  call `<init>`(v2, v3, v4, v1, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<init>:(IIZLcom/bumptech/glide/request/RequestFutureTarget$a;)V` @kind direct;
  #L3f9298.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `int` v1 , `int` v2 , `boolean` v3 , `com.bumptech.glide.request.RequestFutureTarget$a` v4 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<init>:(IIZLcom/bumptech/glide/request/RequestFutureTarget$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f92ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f92b2.  v0.`com.bumptech.glide.request.RequestFutureTarget.a` @type ^`int` := v1;
  #L3f92b6.  v0.`com.bumptech.glide.request.RequestFutureTarget.b` @type ^`int` := v2;
  #L3f92ba.  v0.`com.bumptech.glide.request.RequestFutureTarget.c` @type ^`boolean` := v3 @kind boolean;
  #L3f92be.  v0.`com.bumptech.glide.request.RequestFutureTarget.d` @type ^`com.bumptech.glide.request.RequestFutureTarget$a` := v4 @kind object;
  #L3f92c2.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.bumptech.glide.request.RequestFutureTarget` v5 @kind this, `java.lang.Long` v6 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.a:(Ljava/lang/Long;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f8fc4.  @monitorenter v5
  #L3f8fc6.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.c` @type ^`boolean` @kind boolean;
  #L3f8fca.  if v0 == 0 then goto L3f8fe0;
  #L3f8fce.  call temp:= `isDone`(v5) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.isDone:()Z` @kind virtual;
  #L3f8fd4.  v0:= temp;
  #L3f8fd6.  if v0 != 0 then goto L3f8fe0;
  #L3f8fda.  call `assertBackgroundThread`() @signature `Lcom/bumptech/glide/util/Util;.assertBackgroundThread:()V` @kind static;
  #L3f8fe0.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.g` @type ^`boolean` @kind boolean;
  #L3f8fe4.  if v0 != 0 then goto L3f90d2;
  #L3f8fe8.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.i` @type ^`boolean` @kind boolean;
  #L3f8fec.  if v0 != 0 then goto L3f90c2;
  #L3f8ff0.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.h` @type ^`boolean` @kind boolean;
  #L3f8ff4.  if v0 == 0 then goto L3f9000;
  #L3f8ff8.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.e` @type ^`java.lang.Object` @kind object;
  #L3f8ffc.  @monitorexit v5
  #L3f8ffe.  return v6 @kind object;
  #L3f9000.  v0:= 0L;
  #L3f9004.  if v6 != 0 then goto L3f9014;
  #L3f9008.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.d` @type ^`com.bumptech.glide.request.RequestFutureTarget$a` @kind object;
  #L3f900c.  call `b`(v6, v5, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$a;.b:(Ljava/lang/Object;J)V` @kind virtual;
  #L3f9012.  goto L3f9062;
  #L3f9014.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3f901a.  v2:= temp @kind wide;
  #L3f901c.  v4:= lcmp(v2, v0);
  #L3f9020.  if v4 <= 0 then goto L3f9062;
  #L3f9024.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3f902a.  v0:= temp @kind wide;
  #L3f902c.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3f9032.  v2:= temp @kind wide;
  #L3f9034.  v2:= v2 + v0 @kind long;
  #L3f9036.  call temp:= `isDone`(v5) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.isDone:()Z` @kind virtual;
  #L3f903c.  v6:= temp;
  #L3f903e.  if v6 != 0 then goto L3f9062;
  #L3f9042.  v6:= lcmp(v0, v2);
  #L3f9046.  if v6 >= 0 then goto L3f9062;
  #L3f904a.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.d` @type ^`com.bumptech.glide.request.RequestFutureTarget$a` @kind object;
  #L3f904e.  v0:= v2 - v0 @kind long;
  #L3f9052.  call `b`(v6, v5, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$a;.b:(Ljava/lang/Object;J)V` @kind virtual;
  #L3f9058.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3f905e.  v0:= temp @kind wide;
  #L3f9060.  goto L3f9036;
  #L3f9062.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L3f9068.  v6:= temp;
  #L3f906a.  if v6 != 0 then goto L3f90b6;
  #L3f906e.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.i` @type ^`boolean` @kind boolean;
  #L3f9072.  if v6 != 0 then goto L3f90a6;
  #L3f9076.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.g` @type ^`boolean` @kind boolean;
  #L3f907a.  if v6 != 0 then goto L3f909a;
  #L3f907e.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.h` @type ^`boolean` @kind boolean;
  #L3f9082.  if v6 == 0 then goto L3f908e;
  #L3f9086.  v6:= v5.`com.bumptech.glide.request.RequestFutureTarget.e` @type ^`java.lang.Object` @kind object;
  #L3f908a.  @monitorexit v5
  #L3f908c.  return v6 @kind object;
  #L3f908e.  v6:= new `java.util.concurrent.TimeoutException`;
  #L3f9092.  call `<init>`(v6) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L3f9098.  throw v6;
  #L3f909a.  v6:= new `java.util.concurrent.CancellationException`;
  #L3f909e.  call `<init>`(v6) @signature `Ljava/util/concurrent/CancellationException;.<init>:()V` @kind direct;
  #L3f90a4.  throw v6;
  #L3f90a6.  v6:= new `java.util.concurrent.ExecutionException`;
  #L3f90aa.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.j` @type ^`com.bumptech.glide.load.engine.GlideException` @kind object;
  #L3f90ae.  call `<init>`(v6, v0) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3f90b4.  throw v6;
  #L3f90b6.  v6:= new `java.lang.InterruptedException`;
  #L3f90ba.  call `<init>`(v6) @signature `Ljava/lang/InterruptedException;.<init>:()V` @kind direct;
  #L3f90c0.  throw v6;
  #L3f90c2.  v6:= new `java.util.concurrent.ExecutionException`;
  #L3f90c6.  v0:= v5.`com.bumptech.glide.request.RequestFutureTarget.j` @type ^`com.bumptech.glide.load.engine.GlideException` @kind object;
  #L3f90ca.  call `<init>`(v6, v0) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3f90d0.  throw v6;
  #L3f90d2.  v6:= new `java.util.concurrent.CancellationException`;
  #L3f90d6.  call `<init>`(v6) @signature `Ljava/util/concurrent/CancellationException;.<init>:()V` @kind direct;
  #L3f90dc.  throw v6;
  #L3f90de.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f90e0.  @monitorexit v5
  #L3f90e2.  throw v6;
  catch `java.lang.Throwable` @[L3f8fc6..L3f8ffc] goto L3f90de;
  catch `java.lang.Throwable` @[L3f9008..L3f908a] goto L3f90de;
  catch `java.lang.Throwable` @[L3f908e..L3f90de] goto L3f90de;
}
procedure `boolean` `cancel`(`com.bumptech.glide.request.RequestFutureTarget` v2 @kind this, `boolean` v3 ) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.cancel:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8e38.  @monitorenter v2
  #L3f8e3a.  call temp:= `isDone`(v2) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.isDone:()Z` @kind virtual;
  #L3f8e40.  v0:= temp;
  #L3f8e42.  if v0 == 0 then goto L3f8e4c;
  #L3f8e46.  v3:= 0I;
  #L3f8e48.  @monitorexit v2
  #L3f8e4a.  return v3;
  #L3f8e4c.  v0:= 1I;
  #L3f8e4e.  v2.`com.bumptech.glide.request.RequestFutureTarget.g` @type ^`boolean` := v0 @kind boolean;
  #L3f8e52.  v1:= v2.`com.bumptech.glide.request.RequestFutureTarget.d` @type ^`com.bumptech.glide.request.RequestFutureTarget$a` @kind object;
  #L3f8e56.  call `a`(v1, v2) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L3f8e5c.  v1:= 0I;
  #L3f8e5e.  if v3 == 0 then goto L3f8e6c;
  #L3f8e62.  v3:= v2.`com.bumptech.glide.request.RequestFutureTarget.f` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8e66.  v2.`com.bumptech.glide.request.RequestFutureTarget.f` @type ^`com.bumptech.glide.request.Request` := v1 @kind object;
  #L3f8e6a.  v1:= v3 @kind object;
  #L3f8e6c.  @monitorexit v2
  #L3f8e6e.  if v1 == 0 then goto L3f8e78;
  #L3f8e72.  call `clear`(v1) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3f8e78.  return v0;
  #L3f8e7a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8e7c.  @monitorexit v2
  #L3f8e7e.  throw v3;
  catch `java.lang.Throwable` @[L3f8e3a..L3f8e6e] goto L3f8e7a;
  catch `java.lang.Throwable` @[L3f8e7c..L3f8e7e] goto L3f8e7a;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.request.RequestFutureTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f9110.  v0:= 0I;
  #L3f9112.  call temp:= `a`(v2, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.a:(Ljava/lang/Long;)Ljava/lang/Object;` @kind direct;
  #L3f9118.  v0:= temp @kind object;
  #L3f911a.  return v0 @kind object;
  #L3f911c.  v0:= Exception @type ^`java.util.concurrent.TimeoutException` @kind object;
  #L3f911e.  v1:= new `java.lang.AssertionError`;
  #L3f9122.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3f9128.  throw v1;
  catch `java.util.concurrent.TimeoutException` @[L3f9112..L3f911a] goto L3f911c;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3f914c.  call temp:= `toMillis`(v3, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3f9152.  v1:= temp @kind wide;
  #L3f9154.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3f915a.  v1:= temp @kind object;
  #L3f915c.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.a:(Ljava/lang/Long;)Ljava/lang/Object;` @kind direct;
  #L3f9162.  v1:= temp @kind object;
  #L3f9164.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.Request` `getRequest`(`com.bumptech.glide.request.RequestFutureTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.getRequest:()Lcom/bumptech/glide/request/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8f98.  @monitorenter v1
  #L3f8f9a.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.f` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f8f9e.  @monitorexit v1
  #L3f8fa0.  return v0 @kind object;
  #L3f8fa2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8fa4.  @monitorexit v1
  #L3f8fa6.  throw v0;
  catch `java.lang.Throwable` @[L3f8f9a..L3f8f9e] goto L3f8fa2;
}
procedure `void` `getSize`(`com.bumptech.glide.request.RequestFutureTarget` v2 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v3 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.getSize:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f92d4.  v0:= v2.`com.bumptech.glide.request.RequestFutureTarget.a` @type ^`int`;
  #L3f92d8.  v1:= v2.`com.bumptech.glide.request.RequestFutureTarget.b` @type ^`int`;
  #L3f92dc.  call `onSizeReady`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/SizeReadyCallback;.onSizeReady:(II)V` @kind interface;
  #L3f92e2.  return @kind void;
}
procedure `boolean` `isCancelled`(`com.bumptech.glide.request.RequestFutureTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.isCancelled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8ea4.  @monitorenter v1
  #L3f8ea6.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.g` @type ^`boolean` @kind boolean;
  #L3f8eaa.  @monitorexit v1
  #L3f8eac.  return v0;
  #L3f8eae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8eb0.  @monitorexit v1
  #L3f8eb2.  throw v0;
  catch `java.lang.Throwable` @[L3f8ea6..L3f8eaa] goto L3f8eae;
}
procedure `boolean` `isDone`(`com.bumptech.glide.request.RequestFutureTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8ed0.  @monitorenter v1
  #L3f8ed2.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.g` @type ^`boolean` @kind boolean;
  #L3f8ed6.  if v0 != 0 then goto L3f8ef0;
  #L3f8eda.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.h` @type ^`boolean` @kind boolean;
  #L3f8ede.  if v0 != 0 then goto L3f8ef0;
  #L3f8ee2.  v0:= v1.`com.bumptech.glide.request.RequestFutureTarget.i` @type ^`boolean` @kind boolean;
  #L3f8ee6.  if v0 == 0 then goto L3f8eec;
  #L3f8eea.  goto L3f8ef0;
  #L3f8eec.  v0:= 0I;
  #L3f8eee.  goto L3f8ef2;
  #L3f8ef0.  v0:= 1I;
  #L3f8ef2.  @monitorexit v1
  #L3f8ef4.  return v0;
  #L3f8ef6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8ef8.  @monitorexit v1
  #L3f8efa.  throw v0;
  catch `java.lang.Throwable` @[L3f8ed2..L3f8ee6] goto L3f8ef6;
}
procedure `void` `onDestroy`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;

  #L3f92f4.  return @kind void;
}
procedure `void` `onLoadCleared`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onLoadCleared:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L3f9308.  return @kind void;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onLoadFailed:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L3f931c.  @monitorenter v0
  #L3f931e.  @monitorexit v0
  #L3f9320.  return @kind void;
}
procedure `boolean` `onLoadFailed`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `com.bumptech.glide.load.engine.GlideException` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.request.target.Target` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Z)Z` @AccessFlag PUBLIC {
    temp;

  #L3f8f18.  @monitorenter v0
  #L3f8f1a.  v2:= 1I;
  #L3f8f1c.  v0.`com.bumptech.glide.request.RequestFutureTarget.i` @type ^`boolean` := v2 @kind boolean;
  #L3f8f20.  v0.`com.bumptech.glide.request.RequestFutureTarget.j` @type ^`com.bumptech.glide.load.engine.GlideException` := v1 @kind object;
  #L3f8f24.  v1:= v0.`com.bumptech.glide.request.RequestFutureTarget.d` @type ^`com.bumptech.glide.request.RequestFutureTarget$a` @kind object;
  #L3f8f28.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L3f8f2e.  v1:= 0I;
  #L3f8f30.  @monitorexit v0
  #L3f8f32.  return v1;
  #L3f8f34.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8f36.  @monitorexit v0
  #L3f8f38.  throw v1;
  catch `java.lang.Throwable` @[L3f8f1c..L3f8f2e] goto L3f8f34;
}
procedure `void` `onLoadStarted`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L3f9334.  return @kind void;
}
procedure `void` `onResourceReady`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.request.transition.Transition` v2 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onResourceReady:(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V` @AccessFlag PUBLIC {
    temp;

  #L3f9348.  @monitorenter v0
  #L3f934a.  @monitorexit v0
  #L3f934c.  return @kind void;
}
procedure `boolean` `onResourceReady`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.request.target.Target` v3 @kind object, `com.bumptech.glide.load.DataSource` v4 @kind object, `boolean` v5 ) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onResourceReady:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/load/DataSource;Z)Z` @AccessFlag PUBLIC {
    temp;

  #L3f8f58.  @monitorenter v0
  #L3f8f5a.  v2:= 1I;
  #L3f8f5c.  v0.`com.bumptech.glide.request.RequestFutureTarget.h` @type ^`boolean` := v2 @kind boolean;
  #L3f8f60.  v0.`com.bumptech.glide.request.RequestFutureTarget.e` @type ^`java.lang.Object` := v1 @kind object;
  #L3f8f64.  v1:= v0.`com.bumptech.glide.request.RequestFutureTarget.d` @type ^`com.bumptech.glide.request.RequestFutureTarget$a` @kind object;
  #L3f8f68.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/request/RequestFutureTarget$a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L3f8f6e.  v1:= 0I;
  #L3f8f70.  @monitorexit v0
  #L3f8f72.  return v1;
  #L3f8f74.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f8f76.  @monitorexit v0
  #L3f8f78.  throw v1;
  catch `java.lang.Throwable` @[L3f8f5c..L3f8f6e] goto L3f8f74;
}
procedure `void` `onStart`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onStart:()V` @AccessFlag PUBLIC {
    temp;

  #L3f9360.  return @kind void;
}
procedure `void` `onStop`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.onStop:()V` @AccessFlag PUBLIC {
    temp;

  #L3f9374.  return @kind void;
}
procedure `void` `removeCallback`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.removeCallback:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag PUBLIC {
    temp;

  #L3f9388.  return @kind void;
}
procedure `void` `setRequest`(`com.bumptech.glide.request.RequestFutureTarget` v0 @kind this, `com.bumptech.glide.request.Request` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.setRequest:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;

  #L3f939c.  @monitorenter v0
  #L3f939e.  v0.`com.bumptech.glide.request.RequestFutureTarget.f` @type ^`com.bumptech.glide.request.Request` := v1 @kind object;
  #L3f93a2.  @monitorexit v0
  #L3f93a4.  return @kind void;
  #L3f93a6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f93a8.  @monitorexit v0
  #L3f93aa.  throw v1;
  catch `java.lang.Throwable` @[L3f939e..L3f93a2] goto L3f93a6;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.request.RequestFutureTarget` v4 @kind this) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f9178.  v0:= new `java.lang.StringBuilder`;
  #L3f917c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f9182.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L3f9188.  v1:= temp @kind object;
  #L3f918a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9190.  v1:= "[status=" @kind object;
  #L3f9194.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f919a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f91a0.  v0:= temp @kind object;
  #L3f91a2.  @monitorenter v4
  #L3f91a4.  v1:= v4.`com.bumptech.glide.request.RequestFutureTarget.g` @type ^`boolean` @kind boolean;
  #L3f91a8.  v2:= 0I;
  #L3f91aa.  if v1 == 0 then goto L3f91b4;
  #L3f91ae.  v1:= "CANCELLED" @kind object;
  #L3f91b2.  goto L3f91d8;
  #L3f91b4.  v1:= v4.`com.bumptech.glide.request.RequestFutureTarget.i` @type ^`boolean` @kind boolean;
  #L3f91b8.  if v1 == 0 then goto L3f91c2;
  #L3f91bc.  v1:= "FAILURE" @kind object;
  #L3f91c0.  goto L3f91d8;
  #L3f91c2.  v1:= v4.`com.bumptech.glide.request.RequestFutureTarget.h` @type ^`boolean` @kind boolean;
  #L3f91c6.  if v1 == 0 then goto L3f91d0;
  #L3f91ca.  v1:= "SUCCESS" @kind object;
  #L3f91ce.  goto L3f91d8;
  #L3f91d0.  v1:= "PENDING" @kind object;
  #L3f91d4.  v2:= v4.`com.bumptech.glide.request.RequestFutureTarget.f` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3f91d8.  @monitorexit v4
  #L3f91da.  if v2 == 0 then goto L3f9218;
  #L3f91de.  v3:= new `java.lang.StringBuilder`;
  #L3f91e2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f91e8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f91ee.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f91f4.  v0:= ", request=[" @kind object;
  #L3f91f8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f91fe.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9204.  v0:= "]]" @kind object;
  #L3f9208.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f920e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f9214.  v0:= temp @kind object;
  #L3f9216.  return v0 @kind object;
  #L3f9218.  v2:= new `java.lang.StringBuilder`;
  #L3f921c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f9222.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9228.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f922e.  v0:= "]" @kind object;
  #L3f9232.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9238.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f923e.  v0:= temp @kind object;
  #L3f9240.  return v0 @kind object;
  #L3f9242.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f9244.  @monitorexit v4
  #L3f9246.  throw v0;
  catch `java.lang.Throwable` @[L3f91a4..L3f91da] goto L3f9242;
  catch `java.lang.Throwable` @[L3f9244..L3f9246] goto L3f9242;
}
