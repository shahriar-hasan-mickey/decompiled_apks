record `com.bumptech.glide.request.target.CustomViewTarget$b` @kind class @AccessFlag FINAL {
  `android.view.View` `com.bumptech.glide.request.target.CustomViewTarget$b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.request.target.CustomViewTarget$b.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.request.target.CustomViewTarget$b.c` @AccessFlag ;
  `com.bumptech.glide.request.target.CustomViewTarget$b$a` `com.bumptech.glide.request.target.CustomViewTarget$b.d` @AccessFlag PRIVATE;
}
global `java.lang.Integer` `@@com.bumptech.glide.request.target.CustomViewTarget$b.e` @AccessFlag STATIC;
procedure `void` `<init>`(`com.bumptech.glide.request.target.CustomViewTarget$b` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.<init>:(Landroid/view/View;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3fb9a0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fb9a6.  v0:= new `java.util.ArrayList`;
  #L3fb9aa.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3fb9b0.  v1.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` := v0 @kind object;
  #L3fb9b4.  v1.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` := v2 @kind object;
  #L3fb9b8.  return @kind void;
}
procedure `int` `c`(`android.content.Context` v1 @kind object) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.c:(Landroid/content/Context;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fb7f0.  v0:= `@@com.bumptech.glide.request.target.CustomViewTarget$b.e` @type ^`java.lang.Integer` @kind object;
  #L3fb7f4.  if v0 != 0 then goto L3fb848;
  #L3fb7f8.  v0:= "window" @kind object;
  #L3fb7fc.  call temp:= `getSystemService`(v1, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3fb802.  v1:= temp @kind object;
  #L3fb804.  v1:= (`android.view.WindowManager`) v1 @kind object;
  #L3fb808.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3fb80e.  v1:= temp @kind object;
  #L3fb810.  v1:= (`android.view.WindowManager`) v1 @kind object;
  #L3fb814.  call temp:= `getDefaultDisplay`(v1) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L3fb81a.  v1:= temp @kind object;
  #L3fb81c.  v0:= new `android.graphics.Point`;
  #L3fb820.  call `<init>`(v0) @signature `Landroid/graphics/Point;.<init>:()V` @kind direct;
  #L3fb826.  call `getSize`(v1, v0) @signature `Landroid/view/Display;.getSize:(Landroid/graphics/Point;)V` @kind virtual;
  #L3fb82c.  v1:= v0.`android.graphics.Point.x` @type ^`int`;
  #L3fb830.  v0:= v0.`android.graphics.Point.y` @type ^`int`;
  #L3fb834.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3fb83a.  v1:= temp;
  #L3fb83c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3fb842.  v1:= temp @kind object;
  #L3fb844.  `@@com.bumptech.glide.request.target.CustomViewTarget$b.e` @type ^`java.lang.Integer` := v1 @kind object;
  #L3fb848.  v1:= `@@com.bumptech.glide.request.target.CustomViewTarget$b.e` @type ^`java.lang.Integer` @kind object;
  #L3fb84c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3fb852.  v1:= temp;
  #L3fb854.  return v1;
}
procedure `int` `e`(`com.bumptech.glide.request.target.CustomViewTarget$b` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.e:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fb868.  v0:= v4 - v5 @kind int;
  #L3fb86c.  if v0 <= 0 then goto L3fb872;
  #L3fb870.  return v0;
  #L3fb872.  v0:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.c` @type ^`boolean` @kind boolean;
  #L3fb876.  v1:= 0I;
  #L3fb878.  if v0 == 0 then goto L3fb88e;
  #L3fb87c.  v0:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb880.  call temp:= `isLayoutRequested`(v0) @signature `Landroid/view/View;.isLayoutRequested:()Z` @kind virtual;
  #L3fb886.  v0:= temp;
  #L3fb888.  if v0 == 0 then goto L3fb88e;
  #L3fb88c.  return v1;
  #L3fb88e.  v3:= v3 - v5 @kind int;
  #L3fb890.  if v3 <= 0 then goto L3fb896;
  #L3fb894.  return v3;
  #L3fb896.  v3:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb89a.  call temp:= `isLayoutRequested`(v3) @signature `Landroid/view/View;.isLayoutRequested:()Z` @kind virtual;
  #L3fb8a0.  v3:= temp;
  #L3fb8a2.  if v3 != 0 then goto L3fb8de;
  #L3fb8a6.  v3:= -2I;
  #L3fb8a8.  if v4 != v3 then goto L3fb8de;
  #L3fb8ac.  v3:= 4I;
  #L3fb8ae.  v4:= "CustomViewTarget" @kind object;
  #L3fb8b2.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3fb8b8.  v3:= temp;
  #L3fb8ba.  if v3 == 0 then goto L3fb8c8;
  #L3fb8be.  v3:= "Glide treats LayoutParams.WRAP_CONTENT as a request for an image the size of this device's screen dimensions. If you want to load the original image and are ok with the corresponding memory cost and OOMs (depending on the input size), use .override(Target.SIZE_ORIGINAL). Otherwise, use LayoutParams.MATCH_PARENT, set layout_width and layout_height to fixed dimension, or use .override() with fixed dimensions." @kind object;
  #L3fb8c2.  call temp:= `i`(v4, v3) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3fb8c8.  v3:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb8cc.  call temp:= `getContext`(v3) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3fb8d2.  v3:= temp @kind object;
  #L3fb8d4.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.c:(Landroid/content/Context;)I` @kind static;
  #L3fb8da.  v3:= temp;
  #L3fb8dc.  return v3;
  #L3fb8de.  return v1;
}
procedure `int` `f`(`com.bumptech.glide.request.target.CustomViewTarget$b` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.f:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3fb8f0.  v0:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb8f4.  call temp:= `getPaddingTop`(v0) @signature `Landroid/view/View;.getPaddingTop:()I` @kind virtual;
  #L3fb8fa.  v0:= temp;
  #L3fb8fc.  v1:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb900.  call temp:= `getPaddingBottom`(v1) @signature `Landroid/view/View;.getPaddingBottom:()I` @kind virtual;
  #L3fb906.  v1:= temp;
  #L3fb908.  v0:= v0 + v1 @kind int;
  #L3fb90a.  v1:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb90e.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3fb914.  v1:= temp @kind object;
  #L3fb916.  if v1 == 0 then goto L3fb920;
  #L3fb91a.  v1:= v1.`android.view.ViewGroup$LayoutParams.height` @type ^`int`;
  #L3fb91e.  goto L3fb922;
  #L3fb920.  v1:= 0I;
  #L3fb922.  v2:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb926.  call temp:= `getHeight`(v2) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L3fb92c.  v2:= temp;
  #L3fb92e.  call temp:= `e`(v3, v2, v1, v0) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.e:(III)I` @kind direct;
  #L3fb934.  v0:= temp;
  #L3fb936.  return v0;
}
procedure `int` `g`(`com.bumptech.glide.request.target.CustomViewTarget$b` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.g:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3fb948.  v0:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb94c.  call temp:= `getPaddingLeft`(v0) @signature `Landroid/view/View;.getPaddingLeft:()I` @kind virtual;
  #L3fb952.  v0:= temp;
  #L3fb954.  v1:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb958.  call temp:= `getPaddingRight`(v1) @signature `Landroid/view/View;.getPaddingRight:()I` @kind virtual;
  #L3fb95e.  v1:= temp;
  #L3fb960.  v0:= v0 + v1 @kind int;
  #L3fb962.  v1:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb966.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3fb96c.  v1:= temp @kind object;
  #L3fb96e.  if v1 == 0 then goto L3fb978;
  #L3fb972.  v1:= v1.`android.view.ViewGroup$LayoutParams.width` @type ^`int`;
  #L3fb976.  goto L3fb97a;
  #L3fb978.  v1:= 0I;
  #L3fb97a.  v2:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fb97e.  call temp:= `getWidth`(v2) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L3fb984.  v2:= temp;
  #L3fb986.  call temp:= `e`(v3, v2, v1, v0) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.e:(III)I` @kind direct;
  #L3fb98c.  v0:= temp;
  #L3fb98e.  return v0;
}
procedure `boolean` `h`(`com.bumptech.glide.request.target.CustomViewTarget$b` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.h:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fb798.  if v2 > 0 then goto L3fb7aa;
  #L3fb79c.  v0:= -2147483648I;
  #L3fb7a0.  if v2 != v0 then goto L3fb7a6;
  #L3fb7a4.  goto L3fb7aa;
  #L3fb7a6.  v2:= 0I;
  #L3fb7a8.  goto L3fb7ac;
  #L3fb7aa.  v2:= 1I;
  #L3fb7ac.  return v2;
}
procedure `boolean` `i`(`com.bumptech.glide.request.target.CustomViewTarget$b` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.i:(II)Z` @AccessFlag PRIVATE {
    temp;

  #L3fb7c0.  call temp:= `h`(v0, v1) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.h:(I)Z` @kind direct;
  #L3fb7c6.  v1:= temp;
  #L3fb7c8.  if v1 == 0 then goto L3fb7dc;
  #L3fb7cc.  call temp:= `h`(v0, v2) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.h:(I)Z` @kind direct;
  #L3fb7d2.  v1:= temp;
  #L3fb7d4.  if v1 == 0 then goto L3fb7dc;
  #L3fb7d8.  v1:= 1I;
  #L3fb7da.  goto L3fb7de;
  #L3fb7dc.  v1:= 0I;
  #L3fb7de.  return v1;
}
procedure `void` `j`(`com.bumptech.glide.request.target.CustomViewTarget$b` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.j:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fbad8.  v0:= new `java.util.ArrayList`;
  #L3fbadc.  v1:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3fbae0.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3fbae6.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3fbaec.  v0:= temp @kind object;
  #L3fbaee.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fbaf4.  v1:= temp;
  #L3fbaf6.  if v1 == 0 then goto L3fbb0e;
  #L3fbafa.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fbb00.  v1:= temp @kind object;
  #L3fbb02.  v1:= (`com.bumptech.glide.request.target.SizeReadyCallback`) v1 @kind object;
  #L3fbb06.  call `onSizeReady`(v1, v3, v4) @signature `Lcom/bumptech/glide/request/target/SizeReadyCallback;.onSizeReady:(II)V` @kind interface;
  #L3fbb0c.  goto L3fbaee;
  #L3fbb0e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.request.target.CustomViewTarget$b` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3fb9cc.  v0:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3fb9d0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3fb9d6.  v0:= temp;
  #L3fb9d8.  if v0 == 0 then goto L3fb9de;
  #L3fb9dc.  return @kind void;
  #L3fb9de.  call temp:= `g`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.g:()I` @kind direct;
  #L3fb9e4.  v0:= temp;
  #L3fb9e6.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.f:()I` @kind direct;
  #L3fb9ec.  v1:= temp;
  #L3fb9ee.  call temp:= `i`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.i:(II)Z` @kind direct;
  #L3fb9f4.  v2:= temp;
  #L3fb9f6.  if v2 != 0 then goto L3fb9fc;
  #L3fb9fa.  return @kind void;
  #L3fb9fc.  call `j`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.j:(II)V` @kind direct;
  #L3fba02.  call `b`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.b:()V` @kind virtual;
  #L3fba08.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.request.target.CustomViewTarget$b` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3fba1c.  v0:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fba20.  call temp:= `getViewTreeObserver`(v0) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L3fba26.  v0:= temp @kind object;
  #L3fba28.  call temp:= `isAlive`(v0) @signature `Landroid/view/ViewTreeObserver;.isAlive:()Z` @kind virtual;
  #L3fba2e.  v1:= temp;
  #L3fba30.  if v1 == 0 then goto L3fba3e;
  #L3fba34.  v1:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.d` @type ^`com.bumptech.glide.request.target.CustomViewTarget$b$a` @kind object;
  #L3fba38.  call `removeOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.removeOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L3fba3e.  v0:= 0I;
  #L3fba40.  v2.`com.bumptech.glide.request.target.CustomViewTarget$b.d` @type ^`com.bumptech.glide.request.target.CustomViewTarget$b$a` := v0 @kind object;
  #L3fba44.  v0:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3fba48.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3fba4e.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.request.target.CustomViewTarget$b` v3 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v4 @kind object) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.d:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3fba60.  call temp:= `g`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.g:()I` @kind direct;
  #L3fba66.  v0:= temp;
  #L3fba68.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.f:()I` @kind direct;
  #L3fba6e.  v1:= temp;
  #L3fba70.  call temp:= `i`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.i:(II)Z` @kind direct;
  #L3fba76.  v2:= temp;
  #L3fba78.  if v2 == 0 then goto L3fba84;
  #L3fba7c.  call `onSizeReady`(v4, v0, v1) @signature `Lcom/bumptech/glide/request/target/SizeReadyCallback;.onSizeReady:(II)V` @kind interface;
  #L3fba82.  return @kind void;
  #L3fba84.  v0:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3fba88.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3fba8e.  v0:= temp;
  #L3fba90.  if v0 != 0 then goto L3fba9e;
  #L3fba94.  v0:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3fba98.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3fba9e.  v4:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.d` @type ^`com.bumptech.glide.request.target.CustomViewTarget$b$a` @kind object;
  #L3fbaa2.  if v4 != 0 then goto L3fbac6;
  #L3fbaa6.  v4:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3fbaaa.  call temp:= `getViewTreeObserver`(v4) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L3fbab0.  v4:= temp @kind object;
  #L3fbab2.  v0:= new `com.bumptech.glide.request.target.CustomViewTarget$b$a`;
  #L3fbab6.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b$a;.<init>:(Lcom/bumptech/glide/request/target/CustomViewTarget$b;)V` @kind direct;
  #L3fbabc.  v3.`com.bumptech.glide.request.target.CustomViewTarget$b.d` @type ^`com.bumptech.glide.request.target.CustomViewTarget$b$a` := v0 @kind object;
  #L3fbac0.  call `addOnPreDrawListener`(v4, v0) @signature `Landroid/view/ViewTreeObserver;.addOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L3fbac6.  return @kind void;
}
procedure `void` `k`(`com.bumptech.glide.request.target.CustomViewTarget$b` v1 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.k:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag  {
    temp;
    v0;

  #L3fbb20.  v0:= v1.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3fbb24.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3fbb2a.  return @kind void;
}
