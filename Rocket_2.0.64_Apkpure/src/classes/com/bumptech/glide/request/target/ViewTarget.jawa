record `com.bumptech.glide.request.target.ViewTarget` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.request.target.BaseTarget` @kind class {
  `com.bumptech.glide.request.target.ViewTarget$b` `com.bumptech.glide.request.target.ViewTarget.b` @AccessFlag PRIVATE_FINAL;
  `android.view.View$OnAttachStateChangeListener` `com.bumptech.glide.request.target.ViewTarget.c` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.target.ViewTarget.d` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.target.ViewTarget.e` @AccessFlag PRIVATE;
  `android.view.View` `com.bumptech.glide.request.target.ViewTarget.view` @AccessFlag PROTECTED_FINAL;
}
global `boolean` `@@com.bumptech.glide.request.target.ViewTarget.f` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.bumptech.glide.request.target.ViewTarget.g` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/request/target/ViewTarget;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3fd030.  v0:= `@@com.bumptech.glide.R$id.glide_custom_view_target_tag` @type ^`int`;
  #L3fd034.  `@@com.bumptech.glide.request.target.ViewTarget.g` @type ^`int` := v0;
  #L3fd038.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.<init>:(Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3fd04c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/request/target/BaseTarget;.<init>:()V` @kind direct;
  #L3fd052.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3fd058.  v0:= temp @kind object;
  #L3fd05a.  v0:= (`android.view.View`) v0 @kind object;
  #L3fd05e.  v1.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` := v0 @kind object;
  #L3fd062.  v0:= new `com.bumptech.glide.request.target.ViewTarget$b`;
  #L3fd066.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.<init>:(Landroid/view/View;)V` @kind direct;
  #L3fd06c.  v1.`com.bumptech.glide.request.target.ViewTarget.b` @type ^`com.bumptech.glide.request.target.ViewTarget$b` := v0 @kind object;
  #L3fd070.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.target.ViewTarget` v0 @kind this, `android.view.View` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.<init>:(Landroid/view/View;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fd084.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.<init>:(Landroid/view/View;)V` @kind direct;
  #L3fd08a.  if v2 == 0 then goto L3fd094;
  #L3fd08e.  call temp:= `waitForLayout`(v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.waitForLayout:()Lcom/bumptech/glide/request/target/ViewTarget;` @kind virtual;
  #L3fd094.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.a:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fcfd4.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3fcfd8.  v1:= `@@com.bumptech.glide.request.target.ViewTarget.g` @type ^`int`;
  #L3fcfdc.  call temp:= `getTag`(v0, v1) @signature `Landroid/view/View;.getTag:(I)Ljava/lang/Object;` @kind virtual;
  #L3fcfe2.  v0:= temp @kind object;
  #L3fcfe4.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fd0c4.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.c` @type ^`android.view.View$OnAttachStateChangeListener` @kind object;
  #L3fd0c8.  if v0 == 0 then goto L3fd0e6;
  #L3fd0cc.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.e` @type ^`boolean` @kind boolean;
  #L3fd0d0.  if v1 == 0 then goto L3fd0d6;
  #L3fd0d4.  goto L3fd0e6;
  #L3fd0d6.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3fd0da.  call `addOnAttachStateChangeListener`(v1, v0) @signature `Landroid/view/View;.addOnAttachStateChangeListener:(Landroid/view/View$OnAttachStateChangeListener;)V` @kind virtual;
  #L3fd0e0.  v0:= 1I;
  #L3fd0e2.  v2.`com.bumptech.glide.request.target.ViewTarget.e` @type ^`boolean` := v0 @kind boolean;
  #L3fd0e6.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fd0f8.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.c` @type ^`android.view.View$OnAttachStateChangeListener` @kind object;
  #L3fd0fc.  if v0 == 0 then goto L3fd11a;
  #L3fd100.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.e` @type ^`boolean` @kind boolean;
  #L3fd104.  if v1 != 0 then goto L3fd10a;
  #L3fd108.  goto L3fd11a;
  #L3fd10a.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3fd10e.  call `removeOnAttachStateChangeListener`(v1, v0) @signature `Landroid/view/View;.removeOnAttachStateChangeListener:(Landroid/view/View$OnAttachStateChangeListener;)V` @kind virtual;
  #L3fd114.  v0:= 0I;
  #L3fd116.  v2.`com.bumptech.glide.request.target.ViewTarget.e` @type ^`boolean` := v0 @kind boolean;
  #L3fd11a.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.f:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fd210.  v0:= 1I;
  #L3fd212.  `@@com.bumptech.glide.request.target.ViewTarget.f` @type ^`boolean` := v0 @kind boolean;
  #L3fd216.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3fd21a.  v1:= `@@com.bumptech.glide.request.target.ViewTarget.g` @type ^`int`;
  #L3fd21e.  call `setTag`(v0, v1, v3) @signature `Landroid/view/View;.setTag:(ILjava/lang/Object;)V` @kind virtual;
  #L3fd224.  return @kind void;
}
procedure `void` `setTagId`(`int` v1 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.setTagId:(I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fd238.  v0:= `@@com.bumptech.glide.request.target.ViewTarget.f` @type ^`boolean` @kind boolean;
  #L3fd23c.  if v0 != 0 then goto L3fd246;
  #L3fd240.  `@@com.bumptech.glide.request.target.ViewTarget.g` @type ^`int` := v1;
  #L3fd244.  return @kind void;
  #L3fd246.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fd24a.  v0:= "You cannot set the tag id more than once or change the tag id after the first request has been made" @kind object;
  #L3fd24e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fd254.  throw v1;
}
procedure `com.bumptech.glide.request.target.ViewTarget` `clearOnDetach`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.clearOnDetach:()Lcom/bumptech/glide/request/target/ViewTarget;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fcf88.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget.c` @type ^`android.view.View$OnAttachStateChangeListener` @kind object;
  #L3fcf8c.  if v0 == 0 then goto L3fcf92;
  #L3fcf90.  return v1 @kind object;
  #L3fcf92.  v0:= new `com.bumptech.glide.request.target.ViewTarget$a`;
  #L3fcf96.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$a;.<init>:(Lcom/bumptech/glide/request/target/ViewTarget;)V` @kind direct;
  #L3fcf9c.  v1.`com.bumptech.glide.request.target.ViewTarget.c` @type ^`android.view.View$OnAttachStateChangeListener` := v0 @kind object;
  #L3fcfa0.  call `b`(v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.b:()V` @kind direct;
  #L3fcfa6.  return v1 @kind object;
}
procedure `void` `d`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3fd17c.  call temp:= `getRequest`(v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getRequest:()Lcom/bumptech/glide/request/Request;` @kind virtual;
  #L3fd182.  v0:= temp @kind object;
  #L3fd184.  if v0 == 0 then goto L3fd19a;
  #L3fd188.  v1:= 1I;
  #L3fd18a.  v2.`com.bumptech.glide.request.target.ViewTarget.d` @type ^`boolean` := v1 @kind boolean;
  #L3fd18e.  call `clear`(v0) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3fd194.  v0:= 0I;
  #L3fd196.  v2.`com.bumptech.glide.request.target.ViewTarget.d` @type ^`boolean` := v0 @kind boolean;
  #L3fd19a.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3fd1c8.  call temp:= `getRequest`(v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getRequest:()Lcom/bumptech/glide/request/Request;` @kind virtual;
  #L3fd1ce.  v0:= temp @kind object;
  #L3fd1d0.  if v0 == 0 then goto L3fd1e6;
  #L3fd1d4.  call temp:= `isCleared`(v0) @signature `Lcom/bumptech/glide/request/Request;.isCleared:()Z` @kind interface;
  #L3fd1da.  v1:= temp;
  #L3fd1dc.  if v1 == 0 then goto L3fd1e6;
  #L3fd1e0.  call `begin`(v0) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3fd1e6.  return @kind void;
}
procedure `com.bumptech.glide.request.Request` `getRequest`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getRequest:()Lcom/bumptech/glide/request/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fcf48.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.a:()Ljava/lang/Object;` @kind direct;
  #L3fcf4e.  v0:= temp @kind object;
  #L3fcf50.  if v0 == 0 then goto L3fcf72;
  #L3fcf54.  v1:= instanceof @variable v0 @type ^`com.bumptech.glide.request.Request` @kind boolean;
  #L3fcf58.  if v1 == 0 then goto L3fcf62;
  #L3fcf5c.  v0:= (`com.bumptech.glide.request.Request`) v0 @kind object;
  #L3fcf60.  goto L3fcf74;
  #L3fcf62.  v0:= new `java.lang.IllegalArgumentException`;
  #L3fcf66.  v1:= "You must not call setTag() on a view Glide is targeting" @kind object;
  #L3fcf6a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fcf70.  throw v0;
  #L3fcf72.  v0:= 0I;
  #L3fcf74.  return v0 @kind object;
}
procedure `void` `getSize`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getSize:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd0a8.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget.b` @type ^`com.bumptech.glide.request.target.ViewTarget$b` @kind object;
  #L3fd0ac.  call `d`(v0, v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.d:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @kind virtual;
  #L3fd0b2.  return @kind void;
}
procedure `android.view.View` `getView`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getView:()Landroid/view/View;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcf30.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3fcf34.  return v0 @kind object;
}
procedure `void` `onLoadCleared`(`com.bumptech.glide.request.target.ViewTarget` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.onLoadCleared:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L3fd12c.  call `onLoadCleared`(v0, v1) @signature `Lcom/bumptech/glide/request/target/BaseTarget;.onLoadCleared:(Landroid/graphics/drawable/Drawable;)V` @kind super;
  #L3fd132.  v1:= v0.`com.bumptech.glide.request.target.ViewTarget.b` @type ^`com.bumptech.glide.request.target.ViewTarget$b` @kind object;
  #L3fd136.  call `b`(v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.b:()V` @kind virtual;
  #L3fd13c.  v1:= v0.`com.bumptech.glide.request.target.ViewTarget.d` @type ^`boolean` @kind boolean;
  #L3fd140.  if v1 != 0 then goto L3fd14a;
  #L3fd144.  call `c`(v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.c:()V` @kind direct;
  #L3fd14a.  return @kind void;
}
procedure `void` `onLoadStarted`(`com.bumptech.glide.request.target.ViewTarget` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L3fd15c.  call `onLoadStarted`(v0, v1) @signature `Lcom/bumptech/glide/request/target/BaseTarget;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @kind super;
  #L3fd162.  call `b`(v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.b:()V` @kind direct;
  #L3fd168.  return @kind void;
}
procedure `void` `removeCallback`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.removeCallback:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd1ac.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget.b` @type ^`com.bumptech.glide.request.target.ViewTarget$b` @kind object;
  #L3fd1b0.  call `k`(v0, v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.k:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @kind virtual;
  #L3fd1b6.  return @kind void;
}
procedure `void` `setRequest`(`com.bumptech.glide.request.target.ViewTarget` v0 @kind this, `com.bumptech.glide.request.Request` v1 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.setRequest:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;

  #L3fd1f8.  call `f`(v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.f:(Ljava/lang/Object;)V` @kind direct;
  #L3fd1fe.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fcff8.  v0:= new `java.lang.StringBuilder`;
  #L3fcffc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fd002.  v1:= "Target for: " @kind object;
  #L3fd006.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fd00c.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3fd010.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fd016.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fd01c.  v0:= temp @kind object;
  #L3fd01e.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.target.ViewTarget` `waitForLayout`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.waitForLayout:()Lcom/bumptech/glide/request/target/ViewTarget;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fcfb8.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.b` @type ^`com.bumptech.glide.request.target.ViewTarget$b` @kind object;
  #L3fcfbc.  v1:= 1I;
  #L3fcfbe.  v0.`com.bumptech.glide.request.target.ViewTarget$b.c` @type ^`boolean` := v1 @kind boolean;
  #L3fcfc2.  return v2 @kind object;
}
