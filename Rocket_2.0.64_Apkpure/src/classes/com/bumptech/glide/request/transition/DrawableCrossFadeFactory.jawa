record `com.bumptech.glide.request.transition.DrawableCrossFadeFactory` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.transition.TransitionFactory` @kind interface {
  `int` `com.bumptech.glide.request.transition.DrawableCrossFadeFactory.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.request.transition.DrawableCrossFadeFactory.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.transition.DrawableCrossFadeTransition` `com.bumptech.glide.request.transition.DrawableCrossFadeFactory.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.transition.DrawableCrossFadeFactory` v0 @kind this, `int` v1 , `boolean` v2 ) @signature `Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory;.<init>:(IZ)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3fd430.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fd436.  v0.`com.bumptech.glide.request.transition.DrawableCrossFadeFactory.a` @type ^`int` := v1;
  #L3fd43a.  v0.`com.bumptech.glide.request.transition.DrawableCrossFadeFactory.b` @type ^`boolean` := v2 @kind boolean;
  #L3fd43e.  return @kind void;
}
procedure `com.bumptech.glide.request.transition.Transition` `a`(`com.bumptech.glide.request.transition.DrawableCrossFadeFactory` v3 @kind this) @signature `Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory;.a:()Lcom/bumptech/glide/request/transition/Transition;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3fd3fc.  v0:= v3.`com.bumptech.glide.request.transition.DrawableCrossFadeFactory.c` @type ^`com.bumptech.glide.request.transition.DrawableCrossFadeTransition` @kind object;
  #L3fd400.  if v0 != 0 then goto L3fd41a;
  #L3fd404.  v0:= new `com.bumptech.glide.request.transition.DrawableCrossFadeTransition`;
  #L3fd408.  v1:= v3.`com.bumptech.glide.request.transition.DrawableCrossFadeFactory.a` @type ^`int`;
  #L3fd40c.  v2:= v3.`com.bumptech.glide.request.transition.DrawableCrossFadeFactory.b` @type ^`boolean` @kind boolean;
  #L3fd410.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/transition/DrawableCrossFadeTransition;.<init>:(IZ)V` @kind direct;
  #L3fd416.  v3.`com.bumptech.glide.request.transition.DrawableCrossFadeFactory.c` @type ^`com.bumptech.glide.request.transition.DrawableCrossFadeTransition` := v0 @kind object;
  #L3fd41a.  v0:= v3.`com.bumptech.glide.request.transition.DrawableCrossFadeFactory.c` @type ^`com.bumptech.glide.request.transition.DrawableCrossFadeTransition` @kind object;
  #L3fd41e.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.transition.Transition` `build`(`com.bumptech.glide.request.transition.DrawableCrossFadeFactory` v0 @kind this, `com.bumptech.glide.load.DataSource` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory;.build:(Lcom/bumptech/glide/load/DataSource;Z)Lcom/bumptech/glide/request/transition/Transition;` @AccessFlag PUBLIC {
    temp;

  #L3fd3d0.  v2:= `@@com.bumptech.glide.load.DataSource.MEMORY_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3fd3d4.  if v1 != v2 then goto L3fd3e2;
  #L3fd3d8.  call temp:= `get`() @signature `Lcom/bumptech/glide/request/transition/NoTransition;.get:()Lcom/bumptech/glide/request/transition/Transition;` @kind static;
  #L3fd3de.  v1:= temp @kind object;
  #L3fd3e0.  goto L3fd3ea;
  #L3fd3e2.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory;.a:()Lcom/bumptech/glide/request/transition/Transition;` @kind direct;
  #L3fd3e8.  v1:= temp @kind object;
  #L3fd3ea.  return v1 @kind object;
}
