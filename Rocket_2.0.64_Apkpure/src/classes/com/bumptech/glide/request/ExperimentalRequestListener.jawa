record `com.bumptech.glide.request.ExperimentalRequestListener` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.request.RequestListener` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.request.ExperimentalRequestListener` v0 @kind this) @signature `Lcom/bumptech/glide/request/ExperimentalRequestListener;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f8cb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f8cba.  return @kind void;
}
procedure `void` `onRequestStarted`(`com.bumptech.glide.request.ExperimentalRequestListener` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/request/ExperimentalRequestListener;.onRequestStarted:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3f8ccc.  return @kind void;
}
procedure `boolean` `onResourceReady`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `com.bumptech.glide.request.target.Target` v2 @kind object, `com.bumptech.glide.load.DataSource` v3 @kind object, `boolean` v4 , `boolean` v5 ) @signature `Lcom/bumptech/glide/request/ExperimentalRequestListener;.onResourceReady:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/load/DataSource;ZZ)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
