record `com.bumptech.glide.request.BaseRequestOptions` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Cloneable` @kind interface {
  `int` `com.bumptech.glide.request.BaseRequestOptions.a` @AccessFlag PRIVATE;
  `float` `com.bumptech.glide.request.BaseRequestOptions.b` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.DiskCacheStrategy` `com.bumptech.glide.request.BaseRequestOptions.c` @AccessFlag PRIVATE;
  `com.bumptech.glide.Priority` `com.bumptech.glide.request.BaseRequestOptions.d` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.BaseRequestOptions.e` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.BaseRequestOptions.f` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.BaseRequestOptions.g` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.BaseRequestOptions.h` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.i` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.BaseRequestOptions.j` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.BaseRequestOptions.k` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.request.BaseRequestOptions.l` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.m` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.n` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.BaseRequestOptions.o` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.BaseRequestOptions.p` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Options` `com.bumptech.glide.request.BaseRequestOptions.q` @AccessFlag PRIVATE;
  `java.util.Map` `com.bumptech.glide.request.BaseRequestOptions.r` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.request.BaseRequestOptions.s` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.t` @AccessFlag PRIVATE;
  `android.content.res.Resources$Theme` `com.bumptech.glide.request.BaseRequestOptions.u` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.v` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.w` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.x` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.y` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f869c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f86a2.  v0:= 1.0F;
  #L3f86a6.  v2.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float` := v0;
  #L3f86aa.  v0:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.AUTOMATIC` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3f86ae.  v2.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3f86b2.  v0:= `@@com.bumptech.glide.Priority.NORMAL` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3f86b6.  v2.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L3f86ba.  v0:= 1I;
  #L3f86bc.  v2.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` := v0 @kind boolean;
  #L3f86c0.  v1:= -1I;
  #L3f86c2.  v2.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int` := v1;
  #L3f86c6.  v2.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int` := v1;
  #L3f86ca.  call temp:= `obtain`() @signature `Lcom/bumptech/glide/signature/EmptySignature;.obtain:()Lcom/bumptech/glide/signature/EmptySignature;` @kind static;
  #L3f86d0.  v1:= temp @kind object;
  #L3f86d2.  v2.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3f86d6.  v2.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` := v0 @kind boolean;
  #L3f86da.  v1:= new `com.bumptech.glide.load.Options`;
  #L3f86de.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/Options;.<init>:()V` @kind direct;
  #L3f86e4.  v2.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` := v1 @kind object;
  #L3f86e8.  v1:= new `com.bumptech.glide.util.CachedHashCodeArrayMap`;
  #L3f86ec.  call `<init>`(v1) @signature `Lcom/bumptech/glide/util/CachedHashCodeArrayMap;.<init>:()V` @kind direct;
  #L3f86f2.  v2.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` := v1 @kind object;
  #L3f86f6.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L3f86fa.  v2.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` := v1 @kind object;
  #L3f86fe.  v2.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v0 @kind boolean;
  #L3f8702.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.b:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f73ec.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f73f0.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f73f6.  v2:= temp;
  #L3f73f8.  return v2;
}
procedure `boolean` `c`(`int` v0 , `int` v1 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3f740c.  v0:= v0 ^& v1 @kind int;
  #L3f740e.  if v0 == 0 then goto L3f7416;
  #L3f7412.  v0:= 1I;
  #L3f7414.  goto L3f7418;
  #L3f7416.  v0:= 0I;
  #L3f7418.  return v0;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `d`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.d:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f7e0c.  v0:= 0I;
  #L3f7e0e.  call temp:= `g`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.g:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3f7e14.  v2:= temp @kind object;
  #L3f7e16.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `f`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.f:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f7ff0.  v0:= 1I;
  #L3f7ff2.  call temp:= `g`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.g:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3f7ff8.  v2:= temp @kind object;
  #L3f7ffa.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `g`(`com.bumptech.glide.request.BaseRequestOptions` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v1 @kind object, `com.bumptech.glide.load.Transformation` v2 @kind object, `boolean` v3 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.g:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PRIVATE {
    temp;

  #L3f800c.  if v3 == 0 then goto L3f801a;
  #L3f8010.  call temp:= `j`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8016.  v1:= temp @kind object;
  #L3f8018.  goto L3f8022;
  #L3f801a.  call temp:= `e`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.e:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8020.  v1:= temp @kind object;
  #L3f8022.  v2:= 1I;
  #L3f8024.  v1.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v2 @kind boolean;
  #L3f8028.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `h`(`com.bumptech.glide.request.BaseRequestOptions` v0 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.h:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PRIVATE {
    temp;

  #L3f803c.  return v0 @kind object;
}
procedure `boolean` `a`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.a:()Z` @AccessFlag  {
    temp;
    v0;

  #L3f73d4.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` @kind boolean;
  #L3f73d8.  return v0;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `apply`(`com.bumptech.glide.request.BaseRequestOptions` v4 @kind this, `com.bumptech.glide.request.BaseRequestOptions` v5 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f7520.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7524.  if v0 == 0 then goto L3f753a;
  #L3f7528.  call temp:= `clone`(v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f752e.  v0:= temp @kind object;
  #L3f7530.  call temp:= `apply`(v0, v5) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7536.  v5:= temp @kind object;
  #L3f7538.  return v5 @kind object;
  #L3f753a.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f753e.  v1:= 2I;
  #L3f7540.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f7546.  v0:= temp;
  #L3f7548.  if v0 == 0 then goto L3f7554;
  #L3f754c.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float`;
  #L3f7550.  v4.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float` := v0;
  #L3f7554.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7558.  v1:= 262144I;
  #L3f755c.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f7562.  v0:= temp;
  #L3f7564.  if v0 == 0 then goto L3f7570;
  #L3f7568.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` @kind boolean;
  #L3f756c.  v4.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` := v0 @kind boolean;
  #L3f7570.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7574.  v1:= 1048576I;
  #L3f7578.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f757e.  v0:= temp;
  #L3f7580.  if v0 == 0 then goto L3f758c;
  #L3f7584.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.z` @type ^`boolean` @kind boolean;
  #L3f7588.  v4.`com.bumptech.glide.request.BaseRequestOptions.z` @type ^`boolean` := v0 @kind boolean;
  #L3f758c.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7590.  v1:= 4I;
  #L3f7592.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f7598.  v0:= temp;
  #L3f759a.  if v0 == 0 then goto L3f75a6;
  #L3f759e.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3f75a2.  v4.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3f75a6.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f75aa.  v1:= 8I;
  #L3f75ae.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f75b4.  v0:= temp;
  #L3f75b6.  if v0 == 0 then goto L3f75c2;
  #L3f75ba.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3f75be.  v4.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L3f75c2.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f75c6.  v1:= 16I;
  #L3f75ca.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f75d0.  v0:= temp;
  #L3f75d2.  v1:= 0I;
  #L3f75d4.  if v0 == 0 then goto L3f75f0;
  #L3f75d8.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f75dc.  v4.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f75e0.  v4.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int` := v1;
  #L3f75e4.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f75e8.  v0:= v0 ^& -33;
  #L3f75ec.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3f75f0.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f75f4.  v2:= 32I;
  #L3f75f8.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f75fe.  v0:= temp;
  #L3f7600.  v2:= 0I;
  #L3f7602.  if v0 == 0 then goto L3f761e;
  #L3f7606.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int`;
  #L3f760a.  v4.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int` := v0;
  #L3f760e.  v4.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3f7612.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7616.  v0:= v0 ^& -17;
  #L3f761a.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3f761e.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7622.  v3:= 64I;
  #L3f7626.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f762c.  v0:= temp;
  #L3f762e.  if v0 == 0 then goto L3f764a;
  #L3f7632.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f7636.  v4.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f763a.  v4.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int` := v1;
  #L3f763e.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7642.  v0:= v0 ^& -129;
  #L3f7646.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3f764a.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f764e.  v3:= 128I;
  #L3f7652.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f7658.  v0:= temp;
  #L3f765a.  if v0 == 0 then goto L3f7676;
  #L3f765e.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int`;
  #L3f7662.  v4.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int` := v0;
  #L3f7666.  v4.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3f766a.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f766e.  v0:= v0 ^& -65;
  #L3f7672.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3f7676.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f767a.  v3:= 256I;
  #L3f767e.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f7684.  v0:= temp;
  #L3f7686.  if v0 == 0 then goto L3f7692;
  #L3f768a.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` @kind boolean;
  #L3f768e.  v4.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` := v0 @kind boolean;
  #L3f7692.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7696.  v3:= 512I;
  #L3f769a.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f76a0.  v0:= temp;
  #L3f76a2.  if v0 == 0 then goto L3f76b6;
  #L3f76a6.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3f76aa.  v4.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int` := v0;
  #L3f76ae.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3f76b2.  v4.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int` := v0;
  #L3f76b6.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f76ba.  v3:= 1024I;
  #L3f76be.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f76c4.  v0:= temp;
  #L3f76c6.  if v0 == 0 then goto L3f76d2;
  #L3f76ca.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3f76ce.  v4.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` := v0 @kind object;
  #L3f76d2.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f76d6.  v3:= 4096I;
  #L3f76da.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f76e0.  v0:= temp;
  #L3f76e2.  if v0 == 0 then goto L3f76ee;
  #L3f76e6.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` @kind object;
  #L3f76ea.  v4.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` := v0 @kind object;
  #L3f76ee.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f76f2.  v3:= 8192I;
  #L3f76f6.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f76fc.  v0:= temp;
  #L3f76fe.  if v0 == 0 then goto L3f771a;
  #L3f7702.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f7706.  v4.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f770a.  v4.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int` := v1;
  #L3f770e.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7712.  v0:= v0 ^& -16385;
  #L3f7716.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3f771a.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f771e.  v3:= 16384I;
  #L3f7722.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f7728.  v0:= temp;
  #L3f772a.  if v0 == 0 then goto L3f7746;
  #L3f772e.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int`;
  #L3f7732.  v4.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int` := v0;
  #L3f7736.  v4.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3f773a.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f773e.  v0:= v0 ^& -8193;
  #L3f7742.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3f7746.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f774a.  v2:= 32768I;
  #L3f7750.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f7756.  v0:= temp;
  #L3f7758.  if v0 == 0 then goto L3f7764;
  #L3f775c.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` @kind object;
  #L3f7760.  v4.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` := v0 @kind object;
  #L3f7764.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7768.  v2:= 65536I;
  #L3f776c.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f7772.  v0:= temp;
  #L3f7774.  if v0 == 0 then goto L3f7780;
  #L3f7778.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3f777c.  v4.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` := v0 @kind boolean;
  #L3f7780.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7784.  v2:= 131072I;
  #L3f7788.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f778e.  v0:= temp;
  #L3f7790.  if v0 == 0 then goto L3f779c;
  #L3f7794.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` @kind boolean;
  #L3f7798.  v4.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` := v0 @kind boolean;
  #L3f779c.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f77a0.  v2:= 2048I;
  #L3f77a4.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f77aa.  v0:= temp;
  #L3f77ac.  if v0 == 0 then goto L3f77c6;
  #L3f77b0.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3f77b4.  v2:= v5.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3f77b8.  call `putAll`(v0, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L3f77be.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` @kind boolean;
  #L3f77c2.  v4.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v0 @kind boolean;
  #L3f77c6.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f77ca.  v2:= 524288I;
  #L3f77ce.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3f77d4.  v0:= temp;
  #L3f77d6.  if v0 == 0 then goto L3f77e2;
  #L3f77da.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` @kind boolean;
  #L3f77de.  v4.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` := v0 @kind boolean;
  #L3f77e2.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3f77e6.  if v0 != 0 then goto L3f7812;
  #L3f77ea.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3f77ee.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3f77f4.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f77f8.  v0:= v0 ^& -2049;
  #L3f77fc.  v4.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` := v1 @kind boolean;
  #L3f7800.  v1:= -131073I;
  #L3f7806.  v0:= v0 ^& v1 @kind int;
  #L3f7808.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3f780c.  v0:= 1I;
  #L3f780e.  v4.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v0 @kind boolean;
  #L3f7812.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7816.  v1:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f781a.  v0:= v0 ^| v1 @kind int;
  #L3f781c.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3f7820.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3f7824.  v5:= v5.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3f7828.  call `putAll`(v0, v5) @signature `Lcom/bumptech/glide/load/Options;.putAll:(Lcom/bumptech/glide/load/Options;)V` @kind virtual;
  #L3f782e.  call temp:= `selfOrThrowIfLocked`(v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7834.  v5:= temp @kind object;
  #L3f7836.  return v5 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `autoClone`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.autoClone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f7848.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.t` @type ^`boolean` @kind boolean;
  #L3f784c.  if v0 == 0 then goto L3f786a;
  #L3f7850.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7854.  if v0 == 0 then goto L3f785a;
  #L3f7858.  goto L3f786a;
  #L3f785a.  v0:= new `java.lang.IllegalStateException`;
  #L3f785e.  v1:= "You cannot auto lock an already locked options object, try clone() first" @kind object;
  #L3f7862.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f7868.  throw v0;
  #L3f786a.  v0:= 1I;
  #L3f786c.  v2.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` := v0 @kind boolean;
  #L3f7870.  call temp:= `lock`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.lock:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7876.  v0:= temp @kind object;
  #L3f7878.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `centerCrop`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.centerCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f788c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_OUTSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3f7890.  v1:= new `com.bumptech.glide.load.resource.bitmap.CenterCrop`;
  #L3f7894.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CenterCrop;.<init>:()V` @kind direct;
  #L3f789a.  call temp:= `j`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f78a0.  v0:= temp @kind object;
  #L3f78a2.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `centerInside`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.centerInside:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f78b4.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_INSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3f78b8.  v1:= new `com.bumptech.glide.load.resource.bitmap.CenterInside`;
  #L3f78bc.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CenterInside;.<init>:()V` @kind direct;
  #L3f78c2.  call temp:= `f`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.f:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3f78c8.  v0:= temp @kind object;
  #L3f78ca.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `circleCrop`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.circleCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f78dc.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_INSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3f78e0.  v1:= new `com.bumptech.glide.load.resource.bitmap.CircleCrop`;
  #L3f78e4.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CircleCrop;.<init>:()V` @kind direct;
  #L3f78ea.  call temp:= `j`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f78f0.  v0:= temp @kind object;
  #L3f78f2.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `clone`(`com.bumptech.glide.request.BaseRequestOptions` v3 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f7904.  call temp:= `clone`(v3) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind super;
  #L3f790a.  v0:= temp @kind object;
  #L3f790c.  v0:= (`com.bumptech.glide.request.BaseRequestOptions`) v0 @kind object;
  #L3f7910.  v1:= new `com.bumptech.glide.load.Options`;
  #L3f7914.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/Options;.<init>:()V` @kind direct;
  #L3f791a.  v0.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` := v1 @kind object;
  #L3f791e.  v2:= v3.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3f7922.  call `putAll`(v1, v2) @signature `Lcom/bumptech/glide/load/Options;.putAll:(Lcom/bumptech/glide/load/Options;)V` @kind virtual;
  #L3f7928.  v1:= new `com.bumptech.glide.util.CachedHashCodeArrayMap`;
  #L3f792c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/util/CachedHashCodeArrayMap;.<init>:()V` @kind direct;
  #L3f7932.  v0.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` := v1 @kind object;
  #L3f7936.  v2:= v3.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3f793a.  call `putAll`(v1, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L3f7940.  v1:= 0I;
  #L3f7942.  v0.`com.bumptech.glide.request.BaseRequestOptions.t` @type ^`boolean` := v1 @kind boolean;
  #L3f7946.  v0.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` := v1 @kind boolean;
  #L3f794a.  return v0 @kind object;
  #L3f794c.  v0:= Exception @type ^`java.lang.CloneNotSupportedException` @kind object;
  #L3f794e.  v1:= new `java.lang.RuntimeException`;
  #L3f7952.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3f7958.  throw v1;
  catch `java.lang.CloneNotSupportedException` @[L3f7904..L3f794a] goto L3f794c;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f8668.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f866e.  v0:= temp @kind object;
  #L3f8670.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `decode`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.decode:(Ljava/lang/Class;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f797c.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7980.  if v0 == 0 then goto L3f7996;
  #L3f7984.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f798a.  v0:= temp @kind object;
  #L3f798c.  call temp:= `decode`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.decode:(Ljava/lang/Class;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7992.  v2:= temp @kind object;
  #L3f7994.  return v2 @kind object;
  #L3f7996.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f799c.  v2:= temp @kind object;
  #L3f799e.  v2:= (`java.lang.Class`) v2 @kind object;
  #L3f79a2.  v1.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` := v2 @kind object;
  #L3f79a6.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f79aa.  v2:= v2 ^| 4096;
  #L3f79ae.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f79b2.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f79b8.  v2:= temp @kind object;
  #L3f79ba.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `disallowHardwareConfig`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.disallowHardwareConfig:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f79cc.  v0:= `@@com.bumptech.glide.load.resource.bitmap.Downsampler.ALLOW_HARDWARE_CONFIG` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f79d0.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L3f79d4.  call temp:= `set`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f79da.  v0:= temp @kind object;
  #L3f79dc.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `diskCacheStrategy`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.engine.DiskCacheStrategy` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.diskCacheStrategy:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f79f0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f79f4.  if v0 == 0 then goto L3f7a0a;
  #L3f79f8.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f79fe.  v0:= temp @kind object;
  #L3f7a00.  call temp:= `diskCacheStrategy`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.diskCacheStrategy:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7a06.  v2:= temp @kind object;
  #L3f7a08.  return v2 @kind object;
  #L3f7a0a.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f7a10.  v2:= temp @kind object;
  #L3f7a12.  v2:= (`com.bumptech.glide.load.engine.DiskCacheStrategy`) v2 @kind object;
  #L3f7a16.  v1.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v2 @kind object;
  #L3f7a1a.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7a1e.  v2:= v2 ^| 4;
  #L3f7a22.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f7a26.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7a2c.  v2:= temp @kind object;
  #L3f7a2e.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `dontAnimate`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.dontAnimate:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f7a40.  v0:= `@@com.bumptech.glide.load.resource.gif.GifOptions.DISABLE_ANIMATION` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f7a44.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3f7a48.  call temp:= `set`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7a4e.  v0:= temp @kind object;
  #L3f7a50.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `dontTransform`(`com.bumptech.glide.request.BaseRequestOptions` v3 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.dontTransform:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f7a64.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7a68.  if v0 == 0 then goto L3f7a7e;
  #L3f7a6c.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7a72.  v0:= temp @kind object;
  #L3f7a74.  call temp:= `dontTransform`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.dontTransform:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7a7a.  v0:= temp @kind object;
  #L3f7a7c.  return v0 @kind object;
  #L3f7a7e.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3f7a82.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3f7a88.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7a8c.  v0:= v0 ^& -2049;
  #L3f7a90.  v1:= 0I;
  #L3f7a92.  v3.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` := v1 @kind boolean;
  #L3f7a96.  v2:= -131073I;
  #L3f7a9c.  v0:= v0 ^& v2 @kind int;
  #L3f7a9e.  v3.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` := v1 @kind boolean;
  #L3f7aa2.  v1:= 65536I;
  #L3f7aa6.  v0:= v0 ^| v1 @kind int;
  #L3f7aa8.  v3.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3f7aac.  v0:= 1I;
  #L3f7aae.  v3.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v0 @kind boolean;
  #L3f7ab2.  call temp:= `selfOrThrowIfLocked`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7ab8.  v0:= temp @kind object;
  #L3f7aba.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `downsample`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.downsample:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7acc.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.OPTION` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f7ad0.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f7ad6.  v2:= temp @kind object;
  #L3f7ad8.  call temp:= `set`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7ade.  v2:= temp @kind object;
  #L3f7ae0.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `e`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.e:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag FINAL {
    temp;
    v0;

  #L3f7e44.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7e48.  if v0 == 0 then goto L3f7e5e;
  #L3f7e4c.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7e52.  v0:= temp @kind object;
  #L3f7e54.  call temp:= `e`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.e:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7e5a.  v2:= temp @kind object;
  #L3f7e5c.  return v2 @kind object;
  #L3f7e5e.  call temp:= `downsample`(v1, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.downsample:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7e64.  v2:= 0I;
  #L3f7e66.  call temp:= `i`(v1, v3, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7e6c.  v2:= temp @kind object;
  #L3f7e6e.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `encodeFormat`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `android.graphics.Bitmap$CompressFormat` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.encodeFormat:(Landroid/graphics/Bitmap$CompressFormat;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7af4.  v0:= `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_FORMAT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f7af8.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f7afe.  v2:= temp @kind object;
  #L3f7b00.  call temp:= `set`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7b06.  v2:= temp @kind object;
  #L3f7b08.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `encodeQuality`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.encodeQuality:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7b1c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_QUALITY` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f7b20.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f7b26.  v2:= temp @kind object;
  #L3f7b28.  call temp:= `set`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7b2e.  v2:= temp @kind object;
  #L3f7b30.  return v2 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.request.BaseRequestOptions` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f7198.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind boolean;
  #L3f719c.  v1:= 0I;
  #L3f719e.  if v0 == 0 then goto L3f72f4;
  #L3f71a2.  v4:= (`com.bumptech.glide.request.BaseRequestOptions`) v4 @kind object;
  #L3f71a6.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float`;
  #L3f71aa.  v2:= v3.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float`;
  #L3f71ae.  call temp:= `compare`(v0, v2) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L3f71b4.  v0:= temp;
  #L3f71b6.  if v0 != 0 then goto L3f72f4;
  #L3f71ba.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int`;
  #L3f71be.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int`;
  #L3f71c2.  if v0 != v2 then goto L3f72f4;
  #L3f71c6.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f71ca.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f71ce.  call temp:= `bothNullOrEqual`(v0, v2) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f71d4.  v0:= temp;
  #L3f71d6.  if v0 == 0 then goto L3f72f4;
  #L3f71da.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int`;
  #L3f71de.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int`;
  #L3f71e2.  if v0 != v2 then goto L3f72f4;
  #L3f71e6.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f71ea.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f71ee.  call temp:= `bothNullOrEqual`(v0, v2) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f71f4.  v0:= temp;
  #L3f71f6.  if v0 == 0 then goto L3f72f4;
  #L3f71fa.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int`;
  #L3f71fe.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int`;
  #L3f7202.  if v0 != v2 then goto L3f72f4;
  #L3f7206.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f720a.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f720e.  call temp:= `bothNullOrEqual`(v0, v2) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f7214.  v0:= temp;
  #L3f7216.  if v0 == 0 then goto L3f72f4;
  #L3f721a.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` @kind boolean;
  #L3f721e.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` @kind boolean;
  #L3f7222.  if v0 != v2 then goto L3f72f4;
  #L3f7226.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3f722a.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3f722e.  if v0 != v2 then goto L3f72f4;
  #L3f7232.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3f7236.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3f723a.  if v0 != v2 then goto L3f72f4;
  #L3f723e.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` @kind boolean;
  #L3f7242.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` @kind boolean;
  #L3f7246.  if v0 != v2 then goto L3f72f4;
  #L3f724a.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3f724e.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3f7252.  if v0 != v2 then goto L3f72f4;
  #L3f7256.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` @kind boolean;
  #L3f725a.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` @kind boolean;
  #L3f725e.  if v0 != v2 then goto L3f72f4;
  #L3f7262.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` @kind boolean;
  #L3f7266.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` @kind boolean;
  #L3f726a.  if v0 != v2 then goto L3f72f4;
  #L3f726e.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3f7272.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3f7276.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f727c.  v0:= temp;
  #L3f727e.  if v0 == 0 then goto L3f72f4;
  #L3f7282.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3f7286.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3f728a.  if v0 != v2 then goto L3f72f4;
  #L3f728e.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3f7292.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3f7296.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/load/Options;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f729c.  v0:= temp;
  #L3f729e.  if v0 == 0 then goto L3f72f4;
  #L3f72a2.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3f72a6.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3f72aa.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3f72b0.  v0:= temp;
  #L3f72b2.  if v0 == 0 then goto L3f72f4;
  #L3f72b6.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` @kind object;
  #L3f72ba.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` @kind object;
  #L3f72be.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f72c4.  v0:= temp;
  #L3f72c6.  if v0 == 0 then goto L3f72f4;
  #L3f72ca.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3f72ce.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3f72d2.  call temp:= `bothNullOrEqual`(v0, v2) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f72d8.  v0:= temp;
  #L3f72da.  if v0 == 0 then goto L3f72f4;
  #L3f72de.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` @kind object;
  #L3f72e2.  v4:= v4.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` @kind object;
  #L3f72e6.  call temp:= `bothNullOrEqual`(v0, v4) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f72ec.  v4:= temp;
  #L3f72ee.  if v4 == 0 then goto L3f72f4;
  #L3f72f2.  v1:= 1I;
  #L3f72f4.  return v1;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `error`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.error:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7b94.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7b98.  if v0 == 0 then goto L3f7bae;
  #L3f7b9c.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7ba2.  v0:= temp @kind object;
  #L3f7ba4.  call temp:= `error`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.error:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7baa.  v2:= temp @kind object;
  #L3f7bac.  return v2 @kind object;
  #L3f7bae.  v1.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int` := v2;
  #L3f7bb2.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7bb6.  v2:= v2 ^| 32;
  #L3f7bba.  v0:= 0I;
  #L3f7bbc.  v1.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f7bc0.  v2:= v2 ^& -17;
  #L3f7bc4.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f7bc8.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7bce.  v2:= temp @kind object;
  #L3f7bd0.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `error`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.error:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7b44.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7b48.  if v0 == 0 then goto L3f7b5e;
  #L3f7b4c.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7b52.  v0:= temp @kind object;
  #L3f7b54.  call temp:= `error`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.error:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7b5a.  v2:= temp @kind object;
  #L3f7b5c.  return v2 @kind object;
  #L3f7b5e.  v1.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3f7b62.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7b66.  v2:= v2 ^| 16;
  #L3f7b6a.  v0:= 0I;
  #L3f7b6c.  v1.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int` := v0;
  #L3f7b70.  v2:= v2 ^& -33;
  #L3f7b74.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f7b78.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7b7e.  v2:= temp @kind object;
  #L3f7b80.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `fallback`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fallback:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7c34.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7c38.  if v0 == 0 then goto L3f7c4e;
  #L3f7c3c.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7c42.  v0:= temp @kind object;
  #L3f7c44.  call temp:= `fallback`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fallback:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7c4a.  v2:= temp @kind object;
  #L3f7c4c.  return v2 @kind object;
  #L3f7c4e.  v1.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int` := v2;
  #L3f7c52.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7c56.  v2:= v2 ^| 16384;
  #L3f7c5a.  v0:= 0I;
  #L3f7c5c.  v1.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f7c60.  v2:= v2 ^& -8193;
  #L3f7c64.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f7c68.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7c6e.  v2:= temp @kind object;
  #L3f7c70.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `fallback`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fallback:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7be4.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7be8.  if v0 == 0 then goto L3f7bfe;
  #L3f7bec.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7bf2.  v0:= temp @kind object;
  #L3f7bf4.  call temp:= `fallback`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fallback:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7bfa.  v2:= temp @kind object;
  #L3f7bfc.  return v2 @kind object;
  #L3f7bfe.  v1.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3f7c02.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7c06.  v2:= v2 ^| 8192;
  #L3f7c0a.  v0:= 0I;
  #L3f7c0c.  v1.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int` := v0;
  #L3f7c10.  v2:= v2 ^& -16385;
  #L3f7c14.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f7c18.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7c1e.  v2:= temp @kind object;
  #L3f7c20.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `fitCenter`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fitCenter:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f7c84.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.FIT_CENTER` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3f7c88.  v1:= new `com.bumptech.glide.load.resource.bitmap.FitCenter`;
  #L3f7c8c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/FitCenter;.<init>:()V` @kind direct;
  #L3f7c92.  call temp:= `f`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.f:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3f7c98.  v0:= temp @kind object;
  #L3f7c9a.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `format`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this, `com.bumptech.glide.load.DecodeFormat` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.format:(Lcom/bumptech/glide/load/DecodeFormat;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f7cac.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f7cb2.  v0:= `@@com.bumptech.glide.load.resource.bitmap.Downsampler.DECODE_FORMAT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f7cb6.  call temp:= `set`(v2, v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7cbc.  v0:= temp @kind object;
  #L3f7cbe.  v1:= `@@com.bumptech.glide.load.resource.gif.GifOptions.DECODE_FORMAT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f7cc2.  call temp:= `set`(v0, v1, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7cc8.  v3:= temp @kind object;
  #L3f7cca.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `frame`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `long` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.frame:(J)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7cdc.  v0:= `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.TARGET_FRAME` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f7ce0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3f7ce6.  v2:= temp @kind object;
  #L3f7ce8.  call temp:= `set`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7cee.  v2:= temp @kind object;
  #L3f7cf0.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.DiskCacheStrategy` `getDiskCacheStrategy`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getDiskCacheStrategy:()Lcom/bumptech/glide/load/engine/DiskCacheStrategy;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7508.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3f750c.  return v0 @kind object;
}
procedure `int` `getErrorId`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getErrorId:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f84c8.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int`;
  #L3f84cc.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getErrorPlaceholder`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getErrorPlaceholder:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7150.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f7154.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `getFallbackDrawable`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getFallbackDrawable:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7168.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f716c.  return v0 @kind object;
}
procedure `int` `getFallbackId`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getFallbackId:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f84e0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int`;
  #L3f84e4.  return v0;
}
procedure `boolean` `getOnlyRetrieveFromCache`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOnlyRetrieveFromCache:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7308.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` @kind boolean;
  #L3f730c.  return v0;
}
procedure `com.bumptech.glide.load.Options` `getOptions`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOptions:()Lcom/bumptech/glide/load/Options;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f74f0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3f74f4.  return v0 @kind object;
}
procedure `int` `getOverrideHeight`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f84f8.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3f84fc.  return v0;
}
procedure `int` `getOverrideWidth`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8510.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3f8514.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getPlaceholderDrawable`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPlaceholderDrawable:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7180.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f7184.  return v0 @kind object;
}
procedure `int` `getPlaceholderId`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPlaceholderId:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8528.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int`;
  #L3f852c.  return v0;
}
procedure `com.bumptech.glide.Priority` `getPriority`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPriority:()Lcom/bumptech/glide/Priority;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f74c0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3f74c4.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8650.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` @kind object;
  #L3f8654.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.Key` `getSignature`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getSignature:()Lcom/bumptech/glide/load/Key;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f74d8.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3f74dc.  return v0 @kind object;
}
procedure `float` `getSizeMultiplier`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getSizeMultiplier:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f84b0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float`;
  #L3f84b4.  return v0;
}
procedure `android.content.res.Resources$Theme` `getTheme`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getTheme:()Landroid/content/res/Resources$Theme;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7138.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` @kind object;
  #L3f713c.  return v0 @kind object;
}
procedure `java.util.Map` `getTransformations`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getTransformations:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f8684.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3f8688.  return v0 @kind object;
}
procedure `boolean` `getUseAnimationPool`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getUseAnimationPool:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7320.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.z` @type ^`boolean` @kind boolean;
  #L3f7324.  return v0;
}
procedure `boolean` `getUseUnlimitedSourceGeneratorsPool`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getUseUnlimitedSourceGeneratorsPool:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7338.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` @kind boolean;
  #L3f733c.  return v0;
}
procedure `int` `hashCode`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8540.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float`;
  #L3f8544.  call temp:= `hashCode`(v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(F)I` @kind static;
  #L3f854a.  v0:= temp;
  #L3f854c.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int`;
  #L3f8550.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3f8556.  v0:= temp;
  #L3f8558.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f855c.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3f8562.  v0:= temp;
  #L3f8564.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int`;
  #L3f8568.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3f856e.  v0:= temp;
  #L3f8570.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f8574.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3f857a.  v0:= temp;
  #L3f857c.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int`;
  #L3f8580.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3f8586.  v0:= temp;
  #L3f8588.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f858c.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3f8592.  v0:= temp;
  #L3f8594.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` @kind boolean;
  #L3f8598.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(ZI)I` @kind static;
  #L3f859e.  v0:= temp;
  #L3f85a0.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3f85a4.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3f85aa.  v0:= temp;
  #L3f85ac.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3f85b0.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3f85b6.  v0:= temp;
  #L3f85b8.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` @kind boolean;
  #L3f85bc.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(ZI)I` @kind static;
  #L3f85c2.  v0:= temp;
  #L3f85c4.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3f85c8.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(ZI)I` @kind static;
  #L3f85ce.  v0:= temp;
  #L3f85d0.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` @kind boolean;
  #L3f85d4.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(ZI)I` @kind static;
  #L3f85da.  v0:= temp;
  #L3f85dc.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` @kind boolean;
  #L3f85e0.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(ZI)I` @kind static;
  #L3f85e6.  v0:= temp;
  #L3f85e8.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3f85ec.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3f85f2.  v0:= temp;
  #L3f85f4.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3f85f8.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3f85fe.  v0:= temp;
  #L3f8600.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3f8604.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3f860a.  v0:= temp;
  #L3f860c.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3f8610.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3f8616.  v0:= temp;
  #L3f8618.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` @kind object;
  #L3f861c.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3f8622.  v0:= temp;
  #L3f8624.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3f8628.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3f862e.  v0:= temp;
  #L3f8630.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` @kind object;
  #L3f8634.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3f863a.  v0:= temp;
  #L3f863c.  return v0;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `i`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this, `com.bumptech.glide.load.Transformation` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f8260.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f8264.  if v0 == 0 then goto L3f827a;
  #L3f8268.  call temp:= `clone`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f826e.  v0:= temp @kind object;
  #L3f8270.  call temp:= `i`(v0, v3, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8276.  v3:= temp @kind object;
  #L3f8278.  return v3 @kind object;
  #L3f827a.  v0:= new `com.bumptech.glide.load.resource.bitmap.DrawableTransformation`;
  #L3f827e.  call `<init>`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.<init>:(Lcom/bumptech/glide/load/Transformation;Z)V` @kind direct;
  #L3f8284.  v1:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L3f8288.  call temp:= `k`(v2, v1, v3, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f828e.  v1:= constclass @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3f8292.  call temp:= `k`(v2, v1, v0, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8298.  v1:= constclass @type ^`android.graphics.drawable.BitmapDrawable` @kind object;
  #L3f829c.  call temp:= `asBitmapDrawable`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.asBitmapDrawable:()Lcom/bumptech/glide/load/Transformation;` @kind virtual;
  #L3f82a2.  v0:= temp @kind object;
  #L3f82a4.  call temp:= `k`(v2, v1, v0, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f82aa.  v0:= constclass @type ^`com.bumptech.glide.load.resource.gif.GifDrawable` @kind object;
  #L3f82ae.  v1:= new `com.bumptech.glide.load.resource.gif.GifDrawableTransformation`;
  #L3f82b2.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawableTransformation;.<init>:(Lcom/bumptech/glide/load/Transformation;)V` @kind direct;
  #L3f82b8.  call temp:= `k`(v2, v0, v1, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f82be.  call temp:= `selfOrThrowIfLocked`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f82c4.  v3:= temp @kind object;
  #L3f82c6.  return v3 @kind object;
}
procedure `boolean` `isAutoCloneEnabled`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isAutoCloneEnabled:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L3f7350.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7354.  return v0;
}
procedure `boolean` `isDiskCacheStrategySet`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isDiskCacheStrategySet:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7368.  v0:= 4I;
  #L3f736a.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.b:(I)Z` @kind direct;
  #L3f7370.  v0:= temp;
  #L3f7372.  return v0;
}
procedure `boolean` `isLocked`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isLocked:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7384.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.t` @type ^`boolean` @kind boolean;
  #L3f7388.  return v0;
}
procedure `boolean` `isMemoryCacheable`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isMemoryCacheable:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f739c.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` @kind boolean;
  #L3f73a0.  return v0;
}
procedure `boolean` `isPrioritySet`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isPrioritySet:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f73b4.  v0:= 8I;
  #L3f73b8.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.b:(I)Z` @kind direct;
  #L3f73be.  v0:= temp;
  #L3f73c0.  return v0;
}
procedure `boolean` `isSkipMemoryCacheSet`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isSkipMemoryCacheSet:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f742c.  v0:= 256I;
  #L3f7430.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.b:(I)Z` @kind direct;
  #L3f7436.  v0:= temp;
  #L3f7438.  return v0;
}
procedure `boolean` `isTransformationAllowed`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationAllowed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f744c.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3f7450.  return v0;
}
procedure `boolean` `isTransformationRequired`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationRequired:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f7464.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` @kind boolean;
  #L3f7468.  return v0;
}
procedure `boolean` `isTransformationSet`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationSet:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f747c.  v0:= 2048I;
  #L3f7480.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.b:(I)Z` @kind direct;
  #L3f7486.  v0:= temp;
  #L3f7488.  return v0;
}
procedure `boolean` `isValidOverride`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isValidOverride:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f749c.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3f74a0.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3f74a4.  call temp:= `isValidDimensions`(v0, v1) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L3f74aa.  v0:= temp;
  #L3f74ac.  return v0;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `j`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag FINAL {
    temp;
    v0;

  #L3f8324.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f8328.  if v0 == 0 then goto L3f833e;
  #L3f832c.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8332.  v0:= temp @kind object;
  #L3f8334.  call temp:= `j`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f833a.  v2:= temp @kind object;
  #L3f833c.  return v2 @kind object;
  #L3f833e.  call temp:= `downsample`(v1, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.downsample:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8344.  call temp:= `transform`(v1, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f834a.  v2:= temp @kind object;
  #L3f834c.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `k`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag  {
    temp;
    v0;

  #L3f837c.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f8380.  if v0 == 0 then goto L3f8396;
  #L3f8384.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f838a.  v0:= temp @kind object;
  #L3f838c.  call temp:= `k`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8392.  v2:= temp @kind object;
  #L3f8394.  return v2 @kind object;
  #L3f8396.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f839c.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f83a2.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3f83a6.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f83ac.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f83b0.  v2:= v2 ^| 2048;
  #L3f83b4.  v3:= 1I;
  #L3f83b6.  v1.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` := v3 @kind boolean;
  #L3f83ba.  v0:= 65536I;
  #L3f83be.  v2:= v2 ^| v0 @kind int;
  #L3f83c0.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f83c4.  v0:= 0I;
  #L3f83c6.  v1.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v0 @kind boolean;
  #L3f83ca.  if v4 == 0 then goto L3f83dc;
  #L3f83ce.  v4:= 131072I;
  #L3f83d2.  v2:= v2 ^| v4 @kind int;
  #L3f83d4.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f83d8.  v1.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` := v3 @kind boolean;
  #L3f83dc.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f83e2.  v2:= temp @kind object;
  #L3f83e4.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `lock`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.lock:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7d04.  v0:= 1I;
  #L3f7d06.  v1.`com.bumptech.glide.request.BaseRequestOptions.t` @type ^`boolean` := v0 @kind boolean;
  #L3f7d0a.  call temp:= `h`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.h:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3f7d10.  v0:= temp @kind object;
  #L3f7d12.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `onlyRetrieveFromCache`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.onlyRetrieveFromCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7d24.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7d28.  if v0 == 0 then goto L3f7d3e;
  #L3f7d2c.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7d32.  v0:= temp @kind object;
  #L3f7d34.  call temp:= `onlyRetrieveFromCache`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.onlyRetrieveFromCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7d3a.  v2:= temp @kind object;
  #L3f7d3c.  return v2 @kind object;
  #L3f7d3e.  v1.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` := v2 @kind boolean;
  #L3f7d42.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7d46.  v0:= 524288I;
  #L3f7d4a.  v2:= v2 ^| v0 @kind int;
  #L3f7d4c.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f7d50.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7d56.  v2:= temp @kind object;
  #L3f7d58.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalCenterCrop`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCenterCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f7d6c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_OUTSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3f7d70.  v1:= new `com.bumptech.glide.load.resource.bitmap.CenterCrop`;
  #L3f7d74.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CenterCrop;.<init>:()V` @kind direct;
  #L3f7d7a.  call temp:= `e`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.e:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7d80.  v0:= temp @kind object;
  #L3f7d82.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalCenterInside`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCenterInside:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f7d94.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_INSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3f7d98.  v1:= new `com.bumptech.glide.load.resource.bitmap.CenterInside`;
  #L3f7d9c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CenterInside;.<init>:()V` @kind direct;
  #L3f7da2.  call temp:= `d`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.d:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3f7da8.  v0:= temp @kind object;
  #L3f7daa.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalCircleCrop`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCircleCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f7dbc.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_OUTSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3f7dc0.  v1:= new `com.bumptech.glide.load.resource.bitmap.CircleCrop`;
  #L3f7dc4.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CircleCrop;.<init>:()V` @kind direct;
  #L3f7dca.  call temp:= `e`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.e:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7dd0.  v0:= temp @kind object;
  #L3f7dd2.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalFitCenter`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalFitCenter:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f7de4.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.FIT_CENTER` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3f7de8.  v1:= new `com.bumptech.glide.load.resource.bitmap.FitCenter`;
  #L3f7dec.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/FitCenter;.<init>:()V` @kind direct;
  #L3f7df2.  call temp:= `d`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.d:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3f7df8.  v0:= temp @kind object;
  #L3f7dfa.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalTransform`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.Transformation` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalTransform:(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7e28.  v0:= 0I;
  #L3f7e2a.  call temp:= `i`(v1, v2, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7e30.  v2:= temp @kind object;
  #L3f7e32.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalTransform`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalTransform:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7e80.  v0:= 0I;
  #L3f7e82.  call temp:= `k`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7e88.  v2:= temp @kind object;
  #L3f7e8a.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `override`(`com.bumptech.glide.request.BaseRequestOptions` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.override:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;

  #L3f7e9c.  call temp:= `override`(v0, v1, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.override:(II)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7ea2.  v1:= temp @kind object;
  #L3f7ea4.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `override`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.override:(II)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7eb8.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7ebc.  if v0 == 0 then goto L3f7ed2;
  #L3f7ec0.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7ec6.  v0:= temp @kind object;
  #L3f7ec8.  call temp:= `override`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.override:(II)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7ece.  v2:= temp @kind object;
  #L3f7ed0.  return v2 @kind object;
  #L3f7ed2.  v1.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int` := v2;
  #L3f7ed6.  v1.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int` := v3;
  #L3f7eda.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7ede.  v2:= v2 ^| 512;
  #L3f7ee2.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f7ee6.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7eec.  v2:= temp @kind object;
  #L3f7eee.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `placeholder`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.placeholder:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7f50.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7f54.  if v0 == 0 then goto L3f7f6a;
  #L3f7f58.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7f5e.  v0:= temp @kind object;
  #L3f7f60.  call temp:= `placeholder`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.placeholder:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7f66.  v2:= temp @kind object;
  #L3f7f68.  return v2 @kind object;
  #L3f7f6a.  v1.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int` := v2;
  #L3f7f6e.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7f72.  v2:= v2 ^| 128;
  #L3f7f76.  v0:= 0I;
  #L3f7f78.  v1.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3f7f7c.  v2:= v2 ^& -65;
  #L3f7f80.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f7f84.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7f8a.  v2:= temp @kind object;
  #L3f7f8c.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `placeholder`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.placeholder:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7f00.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7f04.  if v0 == 0 then goto L3f7f1a;
  #L3f7f08.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7f0e.  v0:= temp @kind object;
  #L3f7f10.  call temp:= `placeholder`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.placeholder:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7f16.  v2:= temp @kind object;
  #L3f7f18.  return v2 @kind object;
  #L3f7f1a.  v1.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3f7f1e.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7f22.  v2:= v2 ^| 64;
  #L3f7f26.  v0:= 0I;
  #L3f7f28.  v1.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int` := v0;
  #L3f7f2c.  v2:= v2 ^& -129;
  #L3f7f30.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f7f34.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7f3a.  v2:= temp @kind object;
  #L3f7f3c.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `priority`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.Priority` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.priority:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f7fa0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f7fa4.  if v0 == 0 then goto L3f7fba;
  #L3f7fa8.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7fae.  v0:= temp @kind object;
  #L3f7fb0.  call temp:= `priority`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.priority:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7fb6.  v2:= temp @kind object;
  #L3f7fb8.  return v2 @kind object;
  #L3f7fba.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f7fc0.  v2:= temp @kind object;
  #L3f7fc2.  v2:= (`com.bumptech.glide.Priority`) v2 @kind object;
  #L3f7fc6.  v1.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` := v2 @kind object;
  #L3f7fca.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f7fce.  v2:= v2 ^| 8;
  #L3f7fd2.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f7fd6.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f7fdc.  v2:= temp @kind object;
  #L3f7fde.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `selfOrThrowIfLocked`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L3f8050.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.t` @type ^`boolean` @kind boolean;
  #L3f8054.  if v0 != 0 then goto L3f8062;
  #L3f8058.  call temp:= `h`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.h:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3f805e.  v0:= temp @kind object;
  #L3f8060.  return v0 @kind object;
  #L3f8062.  v0:= new `java.lang.IllegalStateException`;
  #L3f8066.  v1:= "You cannot modify locked T, consider clone()" @kind object;
  #L3f806a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f8070.  throw v0;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `set`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.Option` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8084.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f8088.  if v0 == 0 then goto L3f809e;
  #L3f808c.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8092.  v0:= temp @kind object;
  #L3f8094.  call temp:= `set`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f809a.  v2:= temp @kind object;
  #L3f809c.  return v2 @kind object;
  #L3f809e.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f80a4.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f80aa.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3f80ae.  call temp:= `set`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/Options;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/load/Options;` @kind virtual;
  #L3f80b4.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f80ba.  v2:= temp @kind object;
  #L3f80bc.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `signature`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.Key` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.signature:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f80d0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f80d4.  if v0 == 0 then goto L3f80ea;
  #L3f80d8.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f80de.  v0:= temp @kind object;
  #L3f80e0.  call temp:= `signature`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.signature:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f80e6.  v2:= temp @kind object;
  #L3f80e8.  return v2 @kind object;
  #L3f80ea.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f80f0.  v2:= temp @kind object;
  #L3f80f2.  v2:= (`com.bumptech.glide.load.Key`) v2 @kind object;
  #L3f80f6.  v1.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` := v2 @kind object;
  #L3f80fa.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f80fe.  v2:= v2 ^| 1024;
  #L3f8102.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f8106.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f810c.  v2:= temp @kind object;
  #L3f810e.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `sizeMultiplier`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `float` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.sizeMultiplier:(F)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8120.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f8124.  if v0 == 0 then goto L3f813a;
  #L3f8128.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f812e.  v0:= temp @kind object;
  #L3f8130.  call temp:= `sizeMultiplier`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.sizeMultiplier:(F)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8136.  v2:= temp @kind object;
  #L3f8138.  return v2 @kind object;
  #L3f813a.  v0:= 0I;
  #L3f813c.  v0:= fcmpg(v2, v0);
  #L3f8140.  if v0 < 0 then goto L3f816a;
  #L3f8144.  v0:= 1.0F;
  #L3f8148.  v0:= fcmpl(v2, v0);
  #L3f814c.  if v0 > 0 then goto L3f816a;
  #L3f8150.  v1.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float` := v2;
  #L3f8154.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f8158.  v2:= v2 ^| 2;
  #L3f815c.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f8160.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8166.  v2:= temp @kind object;
  #L3f8168.  return v2 @kind object;
  #L3f816a.  v2:= new `java.lang.IllegalArgumentException`;
  #L3f816e.  v0:= "sizeMultiplier must be between 0 and 1" @kind object;
  #L3f8172.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f8178.  throw v2;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `skipMemoryCache`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this, `boolean` v3 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.skipMemoryCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f818c.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f8190.  v1:= 1I;
  #L3f8192.  if v0 == 0 then goto L3f81a8;
  #L3f8196.  call temp:= `clone`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f819c.  v3:= temp @kind object;
  #L3f819e.  call temp:= `skipMemoryCache`(v3, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.skipMemoryCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f81a4.  v3:= temp @kind object;
  #L3f81a6.  return v3 @kind object;
  #L3f81a8.  v3:= v3 ^~ v1 @kind int;
  #L3f81aa.  v2.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` := v3 @kind boolean;
  #L3f81ae.  v3:= v2.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f81b2.  v3:= v3 ^| 256;
  #L3f81b6.  v2.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v3;
  #L3f81ba.  call temp:= `selfOrThrowIfLocked`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f81c0.  v3:= temp @kind object;
  #L3f81c2.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `theme`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `android.content.res.Resources$Theme` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.theme:(Landroid/content/res/Resources$Theme;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f81d4.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f81d8.  if v0 == 0 then goto L3f81ee;
  #L3f81dc.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f81e2.  v0:= temp @kind object;
  #L3f81e4.  call temp:= `theme`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.theme:(Landroid/content/res/Resources$Theme;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f81ea.  v2:= temp @kind object;
  #L3f81ec.  return v2 @kind object;
  #L3f81ee.  v1.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` := v2 @kind object;
  #L3f81f2.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f81f6.  v0:= 32768I;
  #L3f81fc.  v2:= v2 ^| v0 @kind int;
  #L3f81fe.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f8202.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8208.  v2:= temp @kind object;
  #L3f820a.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `timeout`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.timeout:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f821c.  v0:= `@@com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.TIMEOUT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3f8220.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f8226.  v2:= temp @kind object;
  #L3f8228.  call temp:= `set`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f822e.  v2:= temp @kind object;
  #L3f8230.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `transform`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.Transformation` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8244.  v0:= 1I;
  #L3f8246.  call temp:= `i`(v1, v2, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f824c.  v2:= temp @kind object;
  #L3f824e.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `transform`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8360.  v0:= 1I;
  #L3f8362.  call temp:= `k`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8368.  v2:= temp @kind object;
  #L3f836a.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `transform`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this, `com.bumptech.glide.load.Transformation`[] v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:([Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f82d8.  v0:= length @variable v3;
  #L3f82da.  v1:= 1I;
  #L3f82dc.  if v0 <= v1 then goto L3f82f4;
  #L3f82e0.  v0:= new `com.bumptech.glide.load.MultiTransformation`;
  #L3f82e4.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/MultiTransformation;.<init>:([Lcom/bumptech/glide/load/Transformation;)V` @kind direct;
  #L3f82ea.  call temp:= `i`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f82f0.  v3:= temp @kind object;
  #L3f82f2.  return v3 @kind object;
  #L3f82f4.  v0:= length @variable v3;
  #L3f82f6.  if v0 != v1 then goto L3f830a;
  #L3f82fa.  v0:= 0I;
  #L3f82fc.  v3:= v3[v0] @kind object;
  #L3f8300.  call temp:= `transform`(v2, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8306.  v3:= temp @kind object;
  #L3f8308.  return v3 @kind object;
  #L3f830a.  call temp:= `selfOrThrowIfLocked`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8310.  v3:= temp @kind object;
  #L3f8312.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `transforms`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.Transformation`[] v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transforms:([Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f83f8.  v0:= new `com.bumptech.glide.load.MultiTransformation`;
  #L3f83fc.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/MultiTransformation;.<init>:([Lcom/bumptech/glide/load/Transformation;)V` @kind direct;
  #L3f8402.  v2:= 1I;
  #L3f8404.  call temp:= `i`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f840a.  v2:= temp @kind object;
  #L3f840c.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `useAnimationPool`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.useAnimationPool:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8420.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f8424.  if v0 == 0 then goto L3f843a;
  #L3f8428.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f842e.  v0:= temp @kind object;
  #L3f8430.  call temp:= `useAnimationPool`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.useAnimationPool:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8436.  v2:= temp @kind object;
  #L3f8438.  return v2 @kind object;
  #L3f843a.  v1.`com.bumptech.glide.request.BaseRequestOptions.z` @type ^`boolean` := v2 @kind boolean;
  #L3f843e.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f8442.  v0:= 1048576I;
  #L3f8446.  v2:= v2 ^| v0 @kind int;
  #L3f8448.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f844c.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8452.  v2:= temp @kind object;
  #L3f8454.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `useUnlimitedSourceGeneratorsPool`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.useUnlimitedSourceGeneratorsPool:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8468.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3f846c.  if v0 == 0 then goto L3f8482;
  #L3f8470.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f8476.  v0:= temp @kind object;
  #L3f8478.  call temp:= `useUnlimitedSourceGeneratorsPool`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.useUnlimitedSourceGeneratorsPool:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f847e.  v2:= temp @kind object;
  #L3f8480.  return v2 @kind object;
  #L3f8482.  v1.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` := v2 @kind boolean;
  #L3f8486.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3f848a.  v0:= 262144I;
  #L3f848e.  v2:= v2 ^| v0 @kind int;
  #L3f8490.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3f8494.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3f849a.  v2:= temp @kind object;
  #L3f849c.  return v2 @kind object;
}
