record `com.bumptech.glide.gifdecoder.GifHeader` @kind class @AccessFlag PUBLIC {
  `int`[] `com.bumptech.glide.gifdecoder.GifHeader.a` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.b` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.c` @AccessFlag ;
  `com.bumptech.glide.gifdecoder.a` `com.bumptech.glide.gifdecoder.GifHeader.d` @AccessFlag ;
  `java.util.List` `com.bumptech.glide.gifdecoder.GifHeader.e` @AccessFlag FINAL;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.f` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.g` @AccessFlag ;
  `boolean` `com.bumptech.glide.gifdecoder.GifHeader.h` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.i` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.j` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.k` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.l` @AccessFlag ;
  `int` `com.bumptech.glide.gifdecoder.GifHeader.m` @AccessFlag ;
}
global `int` `@@com.bumptech.glide.gifdecoder.GifHeader.NETSCAPE_LOOP_COUNT_DOES_NOT_EXIST` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifHeader.NETSCAPE_LOOP_COUNT_FOREVER` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.gifdecoder.GifHeader` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d8d04.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d8d0a.  v0:= 0I;
  #L3d8d0c.  v1.`com.bumptech.glide.gifdecoder.GifHeader.a` @type ^`int`[] := v0 @kind object;
  #L3d8d10.  v0:= 0I;
  #L3d8d12.  v1.`com.bumptech.glide.gifdecoder.GifHeader.b` @type ^`int` := v0;
  #L3d8d16.  v1.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int` := v0;
  #L3d8d1a.  v0:= new `java.util.ArrayList`;
  #L3d8d1e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3d8d24.  v1.`com.bumptech.glide.gifdecoder.GifHeader.e` @type ^`java.util.List` := v0 @kind object;
  #L3d8d28.  v0:= -1I;
  #L3d8d2a.  v1.`com.bumptech.glide.gifdecoder.GifHeader.m` @type ^`int` := v0;
  #L3d8d2e.  return @kind void;
}
procedure `int` `getHeight`(`com.bumptech.glide.gifdecoder.GifHeader` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.getHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8ca4.  v0:= v1.`com.bumptech.glide.gifdecoder.GifHeader.g` @type ^`int`;
  #L3d8ca8.  return v0;
}
procedure `int` `getNumFrames`(`com.bumptech.glide.gifdecoder.GifHeader` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.getNumFrames:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8cbc.  v0:= v1.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3d8cc0.  return v0;
}
procedure `int` `getStatus`(`com.bumptech.glide.gifdecoder.GifHeader` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.getStatus:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8cd4.  v0:= v1.`com.bumptech.glide.gifdecoder.GifHeader.b` @type ^`int`;
  #L3d8cd8.  return v0;
}
procedure `int` `getWidth`(`com.bumptech.glide.gifdecoder.GifHeader` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.getWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8cec.  v0:= v1.`com.bumptech.glide.gifdecoder.GifHeader.f` @type ^`int`;
  #L3d8cf0.  return v0;
}
