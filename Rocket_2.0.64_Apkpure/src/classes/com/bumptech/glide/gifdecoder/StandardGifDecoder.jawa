record `com.bumptech.glide.gifdecoder.StandardGifDecoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.gifdecoder.GifDecoder` @kind interface {
  `int`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @AccessFlag PRIVATE;
  `int`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` `com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @AccessFlag PRIVATE_FINAL;
  `java.nio.ByteBuffer` `com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.gifdecoder.GifHeaderParser` `com.bumptech.glide.gifdecoder.StandardGifDecoder.f` @AccessFlag PRIVATE;
  `short`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.g` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.h` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.i` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @AccessFlag PRIVATE;
  `int`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @AccessFlag PRIVATE;
  `com.bumptech.glide.gifdecoder.GifHeader` `com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @AccessFlag PRIVATE;
  `android.graphics.Bitmap` `com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.gifdecoder.StandardGifDecoder.o` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @AccessFlag PRIVATE;
  `java.lang.Boolean` `com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @AccessFlag PRIVATE;
  `android.graphics.Bitmap$Config` `com.bumptech.glide.gifdecoder.StandardGifDecoder.u` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L3d9578.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this, `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` v2 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d958c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d9592.  v0:= 256I;
  #L3d9596.  v0:= new `int`[v0];
  #L3d959a.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.b` @type ^`int`[] := v0 @kind object;
  #L3d959e.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d95a2.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.u` @type ^`android.graphics.Bitmap$Config` := v0 @kind object;
  #L3d95a6.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` := v2 @kind object;
  #L3d95aa.  v2:= new `com.bumptech.glide.gifdecoder.GifHeader`;
  #L3d95ae.  call `<init>`(v2) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.<init>:()V` @kind direct;
  #L3d95b4.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v2 @kind object;
  #L3d95b8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this, `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` v2 @kind object, `com.bumptech.glide.gifdecoder.GifHeader` v3 @kind object, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d95cc.  v0:= 1I;
  #L3d95ce.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @kind direct;
  #L3d95d4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v0 @kind this, `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` v1 @kind object, `com.bumptech.glide.gifdecoder.GifHeader` v2 @kind object, `java.nio.ByteBuffer` v3 @kind object, `int` v4 ) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d95e8.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;)V` @kind direct;
  #L3d95ee.  call `setData`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @kind virtual;
  #L3d95f4.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v9 @kind this, `int` v10 , `int` v11 , `int` v12 ) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.a:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d9160.  v0:= 0I;
  #L3d9162.  v1:= v10;
  #L3d9164.  v2:= 0I;
  #L3d9166.  v3:= 0I;
  #L3d9168.  v4:= 0I;
  #L3d916a.  v5:= 0I;
  #L3d916c.  v6:= 0I;
  #L3d916e.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3d9172.  v7:= v7 + v10 @kind int;
  #L3d9174.  if v1 >= v7 then goto L3d91c8;
  #L3d9178.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3d917c.  v8:= length @variable v7;
  #L3d917e.  if v1 >= v8 then goto L3d91c8;
  #L3d9182.  if v1 >= v11 then goto L3d91c8;
  #L3d9186.  v7:= v7[v1] @kind byte;
  #L3d918a.  v7:= v7 ^& 255;
  #L3d918e.  v8:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] @kind object;
  #L3d9192.  v7:= v8[v7];
  #L3d9196.  if v7 == 0 then goto L3d91c2;
  #L3d919a.  v8:= v7 ^> 24;
  #L3d919e.  v8:= v8 ^& 255;
  #L3d91a2.  v2:= v2 + v8 @kind int;
  #L3d91a4.  v8:= v7 ^> 16;
  #L3d91a8.  v8:= v8 ^& 255;
  #L3d91ac.  v3:= v3 + v8 @kind int;
  #L3d91ae.  v8:= v7 ^> 8;
  #L3d91b2.  v8:= v8 ^& 255;
  #L3d91b6.  v4:= v4 + v8 @kind int;
  #L3d91b8.  v7:= v7 ^& 255;
  #L3d91bc.  v5:= v5 + v7 @kind int;
  #L3d91be.  v6:= v6 + 1;
  #L3d91c2.  v1:= v1 + 1;
  #L3d91c6.  goto L3d916e;
  #L3d91c8.  v10:= v10 + v12 @kind int;
  #L3d91ca.  v12:= v10;
  #L3d91cc.  v1:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3d91d0.  v1:= v1 + v10 @kind int;
  #L3d91d2.  if v12 >= v1 then goto L3d9226;
  #L3d91d6.  v1:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3d91da.  v7:= length @variable v1;
  #L3d91dc.  if v12 >= v7 then goto L3d9226;
  #L3d91e0.  if v12 >= v11 then goto L3d9226;
  #L3d91e4.  v1:= v1[v12] @kind byte;
  #L3d91e8.  v1:= v1 ^& 255;
  #L3d91ec.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] @kind object;
  #L3d91f0.  v1:= v7[v1];
  #L3d91f4.  if v1 == 0 then goto L3d9220;
  #L3d91f8.  v7:= v1 ^> 24;
  #L3d91fc.  v7:= v7 ^& 255;
  #L3d9200.  v2:= v2 + v7 @kind int;
  #L3d9202.  v7:= v1 ^> 16;
  #L3d9206.  v7:= v7 ^& 255;
  #L3d920a.  v3:= v3 + v7 @kind int;
  #L3d920c.  v7:= v1 ^> 8;
  #L3d9210.  v7:= v7 ^& 255;
  #L3d9214.  v4:= v4 + v7 @kind int;
  #L3d9216.  v1:= v1 ^& 255;
  #L3d921a.  v5:= v5 + v1 @kind int;
  #L3d921c.  v6:= v6 + 1;
  #L3d9220.  v12:= v12 + 1;
  #L3d9224.  goto L3d91cc;
  #L3d9226.  if v6 != 0 then goto L3d922c;
  #L3d922a.  return v0;
  #L3d922c.  v2:= v2 / v6 @kind int;
  #L3d922e.  v10:= v2 ^< 24;
  #L3d9232.  v3:= v3 / v6 @kind int;
  #L3d9234.  v11:= v3 ^< 16;
  #L3d9238.  v10:= v10 ^| v11 @kind int;
  #L3d923a.  v4:= v4 / v6 @kind int;
  #L3d923c.  v11:= v4 ^< 8;
  #L3d9240.  v10:= v10 ^| v11 @kind int;
  #L3d9242.  v5:= v5 / v6 @kind int;
  #L3d9244.  v10:= v10 ^| v5 @kind int;
  #L3d9246.  return v10;
}
procedure `void` `b`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v23 @kind this, `com.bumptech.glide.gifdecoder.a` v24 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.b:(Lcom/bumptech/glide/gifdecoder/a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L3d969c.  v0:= v23 @kind object;
  #L3d96a0.  v1:= v24 @kind object;
  #L3d96a4.  v2:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] @kind object;
  #L3d96a8.  v3:= v1.`com.bumptech.glide.gifdecoder.a.d` @type ^`int`;
  #L3d96ac.  v4:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3d96b0.  v3:= v3 / v4 @kind int;
  #L3d96b2.  v5:= v1.`com.bumptech.glide.gifdecoder.a.b` @type ^`int`;
  #L3d96b6.  v5:= v5 / v4 @kind int;
  #L3d96b8.  v6:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3d96bc.  v6:= v6 / v4 @kind int;
  #L3d96be.  v7:= v1.`com.bumptech.glide.gifdecoder.a.a` @type ^`int`;
  #L3d96c2.  v7:= v7 / v4 @kind int;
  #L3d96c4.  v8:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d96c8.  if v8 != 0 then goto L3d96d0;
  #L3d96cc.  v8:= 1I;
  #L3d96ce.  goto L3d96d2;
  #L3d96d0.  v8:= 0I;
  #L3d96d2.  v11:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3d96d6.  v12:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3d96da.  v13:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3d96de.  v14:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] @kind object;
  #L3d96e2.  v15:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` @kind object;
  #L3d96e6.  v16:= 8I;
  #L3d96ea.  v9:= 0I;
  #L3d96ec.  v10:= 0I;
  #L3d96ee.  v18:= 1I;
  #L3d96f2.  if v9 >= v3 then goto L3d984c;
  #L3d96f6.  v19:= v15 @kind object;
  #L3d96fa.  v15:= v1.`com.bumptech.glide.gifdecoder.a.e` @type ^`boolean` @kind boolean;
  #L3d96fe.  if v15 == 0 then goto L3d9754;
  #L3d9702.  v15:= 2I;
  #L3d9704.  if v10 < v3 then goto L3d974a;
  #L3d9708.  v21:= v3;
  #L3d970c.  v3:= v18 + 1;
  #L3d9710.  if v3 == v15 then goto L3d9740;
  #L3d9714.  v15:= 3I;
  #L3d9716.  if v3 == v15 then goto L3d9732;
  #L3d971a.  v15:= 4I;
  #L3d971c.  if v3 == v15 then goto L3d9726;
  #L3d9720.  v18:= v3;
  #L3d9724.  goto L3d974e;
  #L3d9726.  v18:= v3;
  #L3d972a.  v10:= 1I;
  #L3d972c.  v16:= 2I;
  #L3d9730.  goto L3d974e;
  #L3d9732.  v15:= 4I;
  #L3d9734.  v18:= v3;
  #L3d9738.  v10:= 2I;
  #L3d973a.  v16:= 4I;
  #L3d973e.  goto L3d974e;
  #L3d9740.  v15:= 4I;
  #L3d9742.  v18:= v3;
  #L3d9746.  v10:= 4I;
  #L3d9748.  goto L3d974e;
  #L3d974a.  v21:= v3;
  #L3d974e.  v3:= v10 + v16 @kind int;
  #L3d9752.  goto L3d975c;
  #L3d9754.  v21:= v3;
  #L3d9758.  v3:= v10;
  #L3d975a.  v10:= v9;
  #L3d975c.  v10:= v10 + v5 @kind int;
  #L3d975e.  v15:= 1I;
  #L3d9760.  if v4 != v15 then goto L3d976a;
  #L3d9764.  v17:= 1I;
  #L3d9768.  goto L3d976e;
  #L3d976a.  v17:= 0I;
  #L3d976e.  if v10 >= v12 then goto L3d9824;
  #L3d9772.  v10:= v10 * v11 @kind int;
  #L3d9776.  v20:= v10 + v7 @kind int;
  #L3d977a.  v15:= v20 + v6 @kind int;
  #L3d977e.  v10:= v10 + v11 @kind int;
  #L3d9780.  if v10 >= v15 then goto L3d9786;
  #L3d9784.  v15:= v10;
  #L3d9786.  v10:= v9 * v4 @kind int;
  #L3d978a.  v22:= v3;
  #L3d978e.  v3:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3d9792.  v10:= v10 * v3 @kind int;
  #L3d9796.  if v17 == 0 then goto L3d97d8;
  #L3d979a.  v3:= v20;
  #L3d979e.  if v3 >= v15 then goto L3d9828;
  #L3d97a2.  v17:= v5;
  #L3d97a6.  v5:= v13[v10] @kind byte;
  #L3d97aa.  v5:= v5 ^& 255;
  #L3d97ae.  v5:= v14[v5];
  #L3d97b2.  if v5 == 0 then goto L3d97bc;
  #L3d97b6.  v2[v3]:= v5;
  #L3d97ba.  goto L3d97cc;
  #L3d97bc.  if v8 == 0 then goto L3d97cc;
  #L3d97c0.  if v19 != 0 then goto L3d97cc;
  #L3d97c4.  v5:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3d97c8.  v19:= v5 @kind object;
  #L3d97cc.  v10:= v10 + v4 @kind int;
  #L3d97ce.  v3:= v3 + 1;
  #L3d97d2.  v5:= v17;
  #L3d97d6.  goto L3d979e;
  #L3d97d8.  v17:= v5;
  #L3d97dc.  v3:= v15 - v20 @kind int;
  #L3d97e0.  v3:= v3 * v4 @kind int;
  #L3d97e4.  v3:= v3 + v10 @kind int;
  #L3d97e6.  v5:= v20;
  #L3d97ea.  v20:= v6;
  #L3d97ee.  if v5 >= v15 then goto L3d9830;
  #L3d97f2.  v6:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3d97f6.  call temp:= `a`(v0, v10, v3, v6) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.a:(III)I` @kind direct;
  #L3d97fc.  v6:= temp;
  #L3d97fe.  if v6 == 0 then goto L3d9808;
  #L3d9802.  v2[v5]:= v6;
  #L3d9806.  goto L3d9818;
  #L3d9808.  if v8 == 0 then goto L3d9818;
  #L3d980c.  if v19 != 0 then goto L3d9818;
  #L3d9810.  v6:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3d9814.  v19:= v6 @kind object;
  #L3d9818.  v10:= v10 + v4 @kind int;
  #L3d981a.  v5:= v5 + 1;
  #L3d981e.  v6:= v20;
  #L3d9822.  goto L3d97ea;
  #L3d9824.  v22:= v3;
  #L3d9828.  v17:= v5;
  #L3d982c.  v20:= v6;
  #L3d9830.  v15:= v19 @kind object;
  #L3d9834.  v9:= v9 + 1;
  #L3d9838.  v5:= v17;
  #L3d983c.  v6:= v20;
  #L3d9840.  v3:= v21;
  #L3d9844.  v10:= v22;
  #L3d9848.  goto L3d96f2;
  #L3d984c.  v19:= v15 @kind object;
  #L3d9850.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` @kind object;
  #L3d9854.  if v1 != 0 then goto L3d9874;
  #L3d9858.  if v19 != 0 then goto L3d9860;
  #L3d985c.  v9:= 0I;
  #L3d985e.  goto L3d9868;
  #L3d9860.  call temp:= `booleanValue`(v19) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3d9866.  v9:= temp;
  #L3d9868.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3d986e.  v1:= temp @kind object;
  #L3d9870.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` := v1 @kind object;
  #L3d9874.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v18 @kind this, `com.bumptech.glide.gifdecoder.a` v19 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.c:(Lcom/bumptech/glide/gifdecoder/a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L3d9888.  v0:= v18 @kind object;
  #L3d988c.  v1:= v19 @kind object;
  #L3d9890.  v2:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] @kind object;
  #L3d9894.  v3:= v1.`com.bumptech.glide.gifdecoder.a.d` @type ^`int`;
  #L3d9898.  v4:= v1.`com.bumptech.glide.gifdecoder.a.b` @type ^`int`;
  #L3d989c.  v5:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3d98a0.  v6:= v1.`com.bumptech.glide.gifdecoder.a.a` @type ^`int`;
  #L3d98a4.  v7:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d98a8.  if v7 != 0 then goto L3d98b0;
  #L3d98ac.  v7:= 1I;
  #L3d98ae.  goto L3d98b2;
  #L3d98b0.  v7:= 0I;
  #L3d98b2.  v10:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3d98b6.  v11:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3d98ba.  v12:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] @kind object;
  #L3d98be.  v14:= 0I;
  #L3d98c0.  v15:= -1I;
  #L3d98c2.  if v14 >= v3 then goto L3d9930;
  #L3d98c6.  v16:= v14 + v4 @kind int;
  #L3d98ca.  v16:= v16 * v10 @kind int;
  #L3d98ce.  v17:= v16 + v6 @kind int;
  #L3d98d2.  v8:= v17 + v5 @kind int;
  #L3d98d6.  v9:= v16 + v10 @kind int;
  #L3d98da.  if v9 >= v8 then goto L3d98e0;
  #L3d98de.  v8:= v9;
  #L3d98e0.  v9:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3d98e4.  v9:= v9 * v14 @kind int;
  #L3d98e8.  v13:= v17;
  #L3d98ec.  if v13 >= v8 then goto L3d9922;
  #L3d98f0.  v1:= v11[v9] @kind byte;
  #L3d98f4.  v17:= v3;
  #L3d98f8.  v3:= v1 ^& 255;
  #L3d98fc.  if v3 == v15 then goto L3d9910;
  #L3d9900.  v3:= v12[v3];
  #L3d9904.  if v3 == 0 then goto L3d990e;
  #L3d9908.  v2[v13]:= v3;
  #L3d990c.  goto L3d9910;
  #L3d990e.  v15:= v1;
  #L3d9910.  v9:= v9 + 1;
  #L3d9914.  v13:= v13 + 1;
  #L3d9918.  v1:= v19 @kind object;
  #L3d991c.  v3:= v17;
  #L3d9920.  goto L3d98ec;
  #L3d9922.  v17:= v3;
  #L3d9926.  v14:= v14 + 1;
  #L3d992a.  v1:= v19 @kind object;
  #L3d992e.  goto L3d98c2;
  #L3d9930.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` @kind object;
  #L3d9934.  if v1 == 0 then goto L3d9944;
  #L3d9938.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3d993e.  v1:= temp;
  #L3d9940.  if v1 != 0 then goto L3d9956;
  #L3d9944.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` @kind object;
  #L3d9948.  if v1 != 0 then goto L3d995a;
  #L3d994c.  if v7 == 0 then goto L3d995a;
  #L3d9950.  v1:= -1I;
  #L3d9952.  if v15 == v1 then goto L3d995a;
  #L3d9956.  v8:= 1I;
  #L3d9958.  goto L3d995c;
  #L3d995a.  v8:= 0I;
  #L3d995c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3d9962.  v1:= temp @kind object;
  #L3d9964.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` := v1 @kind object;
  #L3d9968.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v28 @kind this, `com.bumptech.glide.gifdecoder.a` v29 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.d:(Lcom/bumptech/glide/gifdecoder/a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;

  #L3d997c.  v0:= v28 @kind object;
  #L3d9980.  v1:= v29 @kind object;
  #L3d9984.  if v1 == 0 then goto L3d9996;
  #L3d9988.  v2:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d998c.  v3:= v1.`com.bumptech.glide.gifdecoder.a.j` @type ^`int`;
  #L3d9990.  call temp:= `position`(v2, v3) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3d9996.  if v1 != 0 then goto L3d99a8;
  #L3d999a.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d999e.  v2:= v1.`com.bumptech.glide.gifdecoder.GifHeader.f` @type ^`int`;
  #L3d99a2.  v1:= v1.`com.bumptech.glide.gifdecoder.GifHeader.g` @type ^`int`;
  #L3d99a6.  goto L3d99b0;
  #L3d99a8.  v2:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3d99ac.  v1:= v1.`com.bumptech.glide.gifdecoder.a.d` @type ^`int`;
  #L3d99b0.  v2:= v2 * v1 @kind int;
  #L3d99b4.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3d99b8.  if v1 == 0 then goto L3d99c2;
  #L3d99bc.  v1:= length @variable v1;
  #L3d99be.  if v1 >= v2 then goto L3d99d2;
  #L3d99c2.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3d99c6.  call temp:= `obtainByteArray`(v1, v2) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtainByteArray:(I)[B` @kind interface;
  #L3d99cc.  v1:= temp @kind object;
  #L3d99ce.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] := v1 @kind object;
  #L3d99d2.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3d99d6.  v3:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.g` @type ^`short`[] @kind object;
  #L3d99da.  v4:= 4096I;
  #L3d99de.  if v3 != 0 then goto L3d99ea;
  #L3d99e2.  v3:= new `short`[v4];
  #L3d99e6.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.g` @type ^`short`[] := v3 @kind object;
  #L3d99ea.  v3:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.g` @type ^`short`[] @kind object;
  #L3d99ee.  v5:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.h` @type ^`byte`[] @kind object;
  #L3d99f2.  if v5 != 0 then goto L3d99fe;
  #L3d99f6.  v5:= new `byte`[v4];
  #L3d99fa.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.h` @type ^`byte`[] := v5 @kind object;
  #L3d99fe.  v5:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.h` @type ^`byte`[] @kind object;
  #L3d9a02.  v6:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.i` @type ^`byte`[] @kind object;
  #L3d9a06.  if v6 != 0 then goto L3d9a16;
  #L3d9a0a.  v6:= 4097I;
  #L3d9a0e.  v6:= new `byte`[v6];
  #L3d9a12.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.i` @type ^`byte`[] := v6 @kind object;
  #L3d9a16.  v6:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.i` @type ^`byte`[] @kind object;
  #L3d9a1a.  call temp:= `h`(v28) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.h:()I` @kind direct;
  #L3d9a20.  v7:= temp;
  #L3d9a22.  v8:= 1I;
  #L3d9a24.  v9:= v8 ^< v7 @kind int;
  #L3d9a28.  v10:= v9 + 1;
  #L3d9a2c.  v11:= v9 + 2;
  #L3d9a30.  v7:= v7 + v8 @kind int;
  #L3d9a32.  v12:= v8 ^< v7 @kind int;
  #L3d9a36.  v12:= v12 - v8 @kind int;
  #L3d9a38.  v13:= 0I;
  #L3d9a3a.  v14:= 0I;
  #L3d9a3c.  if v14 >= v9 then goto L3d9a50;
  #L3d9a40.  v3[v14]:= v13 @kind short;
  #L3d9a44.  v15:= (`byte`) v14 @kind i2b;
  #L3d9a46.  v5[v14]:= v15 @kind byte;
  #L3d9a4a.  v14:= v14 + 1;
  #L3d9a4e.  goto L3d9a3c;
  #L3d9a50.  v14:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @type ^`byte`[] @kind object;
  #L3d9a54.  v15:= -1I;
  #L3d9a56.  v23:= v7;
  #L3d9a5a.  v21:= v11;
  #L3d9a5e.  v24:= v12;
  #L3d9a62.  v16:= 0I;
  #L3d9a66.  v17:= 0I;
  #L3d9a6a.  v18:= 0I;
  #L3d9a6e.  v19:= 0I;
  #L3d9a72.  v20:= 0I;
  #L3d9a76.  v22:= -1I;
  #L3d9a7a.  v25:= 0I;
  #L3d9a7e.  v26:= 0I;
  #L3d9a82.  if v13 >= v2 then goto L3d9c12;
  #L3d9a86.  if v16 != 0 then goto L3d9aa4;
  #L3d9a8a.  call temp:= `g`(v28) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.g:()I` @kind direct;
  #L3d9a90.  v16:= temp;
  #L3d9a92.  if v16 > 0 then goto L3d9aa0;
  #L3d9a96.  v3:= 3I;
  #L3d9a98.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v3;
  #L3d9a9c.  goto L3d9c12;
  #L3d9aa0.  v17:= 0I;
  #L3d9aa4.  v4:= v14[v17] @kind byte;
  #L3d9aa8.  v4:= v4 ^& 255;
  #L3d9aac.  v4:= v4 ^< v18 @kind int;
  #L3d9ab0.  v19:= v19 + v4 @kind int;
  #L3d9ab4.  v18:= v18 + 8;
  #L3d9ab8.  v17:= v17 + 1;
  #L3d9abc.  v16:= v16 + -1;
  #L3d9ac0.  v4:= v18;
  #L3d9ac4.  v8:= v21;
  #L3d9ac8.  v0:= v22;
  #L3d9acc.  v15:= v23;
  #L3d9ad0.  v22:= v7;
  #L3d9ad4.  v7:= v26;
  #L3d9ad8.  if v4 < v15 then goto L3d9be6;
  #L3d9adc.  v23:= v11;
  #L3d9ae0.  v11:= v19 ^& v24 @kind int;
  #L3d9ae4.  v19:= v19 ^> v15 @kind int;
  #L3d9ae8.  v4:= v4 - v15 @kind int;
  #L3d9aea.  if v11 != v9 then goto L3d9b00;
  #L3d9aee.  v24:= v12;
  #L3d9af2.  v15:= v22;
  #L3d9af6.  v8:= v23;
  #L3d9afa.  v11:= v8;
  #L3d9afc.  v0:= -1I;
  #L3d9afe.  goto L3d9ad8;
  #L3d9b00.  if v11 != v10 then goto L3d9b2c;
  #L3d9b04.  v18:= v4;
  #L3d9b08.  v26:= v7;
  #L3d9b0c.  v21:= v8;
  #L3d9b10.  v7:= v22;
  #L3d9b14.  v11:= v23;
  #L3d9b18.  v4:= 4096I;
  #L3d9b1c.  v8:= 1I;
  #L3d9b1e.  v22:= v0;
  #L3d9b22.  v23:= v15;
  #L3d9b26.  v15:= -1I;
  #L3d9b28.  goto L3d9c0a;
  #L3d9b2c.  v26:= v4;
  #L3d9b30.  v4:= -1I;
  #L3d9b32.  if v0 != v4 then goto L3d9b54;
  #L3d9b36.  v0:= v5[v11] @kind byte;
  #L3d9b3a.  v1[v20]:= v0 @kind byte;
  #L3d9b3e.  v20:= v20 + 1;
  #L3d9b42.  v13:= v13 + 1;
  #L3d9b46.  v0:= v11;
  #L3d9b48.  v7:= v0;
  #L3d9b4a.  v11:= v23;
  #L3d9b4e.  v4:= v26;
  #L3d9b52.  goto L3d9ad8;
  #L3d9b54.  if v11 < v8 then goto L3d9b66;
  #L3d9b58.  v7:= (`byte`) v7 @kind i2b;
  #L3d9b5a.  v6[v25]:= v7 @kind byte;
  #L3d9b5e.  v25:= v25 + 1;
  #L3d9b62.  v7:= v0;
  #L3d9b64.  goto L3d9b68;
  #L3d9b66.  v7:= v11;
  #L3d9b68.  if v7 < v9 then goto L3d9b7e;
  #L3d9b6c.  v21:= v5[v7] @kind byte;
  #L3d9b70.  v6[v25]:= v21 @kind byte;
  #L3d9b74.  v25:= v25 + 1;
  #L3d9b78.  v7:= v3[v7] @kind short;
  #L3d9b7c.  goto L3d9b68;
  #L3d9b7e.  v7:= v5[v7] @kind byte;
  #L3d9b82.  v7:= v7 ^& 255;
  #L3d9b86.  v4:= (`byte`) v7 @kind i2b;
  #L3d9b88.  v1[v20]:= v4 @kind byte;
  #L3d9b8c.  v20:= v20 + 1;
  #L3d9b90.  v13:= v13 + 1;
  #L3d9b94.  if v25 <= 0 then goto L3d9ba6;
  #L3d9b98.  v25:= v25 + -1;
  #L3d9b9c.  v27:= v6[v25] @kind byte;
  #L3d9ba0.  v1[v20]:= v27 @kind byte;
  #L3d9ba4.  goto L3d9b8c;
  #L3d9ba6.  v27:= v6 @kind object;
  #L3d9baa.  v6:= 4096I;
  #L3d9bae.  if v8 >= v6 then goto L3d9bd4;
  #L3d9bb2.  v0:= (`short`) v0 @kind i2s;
  #L3d9bb4.  v3[v8]:= v0 @kind short;
  #L3d9bb8.  v5[v8]:= v4 @kind byte;
  #L3d9bbc.  v8:= v8 + 1;
  #L3d9bc0.  v0:= v8 ^& v24 @kind int;
  #L3d9bc4.  if v0 != 0 then goto L3d9bd4;
  #L3d9bc8.  if v8 >= v6 then goto L3d9bd4;
  #L3d9bcc.  v15:= v15 + 1;
  #L3d9bd0.  v24:= v24 + v8 @kind int;
  #L3d9bd4.  v0:= v11;
  #L3d9bd6.  v11:= v23;
  #L3d9bda.  v4:= v26;
  #L3d9bde.  v6:= v27 @kind object;
  #L3d9be2.  goto L3d9ad8;
  #L3d9be6.  v26:= v4;
  #L3d9bea.  v21:= v8;
  #L3d9bee.  v23:= v15;
  #L3d9bf2.  v18:= v26;
  #L3d9bf6.  v4:= 4096I;
  #L3d9bfa.  v8:= 1I;
  #L3d9bfc.  v15:= -1I;
  #L3d9bfe.  v26:= v7;
  #L3d9c02.  v7:= v22;
  #L3d9c06.  v22:= v0;
  #L3d9c0a.  v0:= v28 @kind object;
  #L3d9c0e.  goto L3d9a82;
  #L3d9c12.  v13:= v20;
  #L3d9c16.  v0:= 0I;
  #L3d9c18.  call `fill`(v1, v13, v2, v0) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L3d9c1e.  return @kind void;
}
procedure `com.bumptech.glide.gifdecoder.GifHeaderParser` `e`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.e:()Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d9134.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.f` @type ^`com.bumptech.glide.gifdecoder.GifHeaderParser` @kind object;
  #L3d9138.  if v0 != 0 then goto L3d914a;
  #L3d913c.  v0:= new `com.bumptech.glide.gifdecoder.GifHeaderParser`;
  #L3d9140.  call `<init>`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.<init>:()V` @kind direct;
  #L3d9146.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.f` @type ^`com.bumptech.glide.gifdecoder.GifHeaderParser` := v0 @kind object;
  #L3d914a.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.f` @type ^`com.bumptech.glide.gifdecoder.GifHeaderParser` @kind object;
  #L3d914e.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `f`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v4 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.f:()Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d8d58.  v0:= v4.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` @kind object;
  #L3d8d5c.  if v0 == 0 then goto L3d8d74;
  #L3d8d60.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3d8d66.  v0:= temp;
  #L3d8d68.  if v0 == 0 then goto L3d8d6e;
  #L3d8d6c.  goto L3d8d74;
  #L3d8d6e.  v0:= v4.`com.bumptech.glide.gifdecoder.StandardGifDecoder.u` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d8d72.  goto L3d8d78;
  #L3d8d74.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d8d78.  v1:= v4.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3d8d7c.  v2:= v4.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3d8d80.  v3:= v4.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3d8d84.  call temp:= `obtain`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtain:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3d8d8a.  v0:= temp @kind object;
  #L3d8d8c.  v1:= 1I;
  #L3d8d8e.  call `setHasAlpha`(v0, v1) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3d8d94.  return v0 @kind object;
}
procedure `int` `g`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v5 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.g:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d94fc.  call temp:= `h`(v5) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.h:()I` @kind direct;
  #L3d9502.  v0:= temp;
  #L3d9504.  if v0 > 0 then goto L3d950a;
  #L3d9508.  return v0;
  #L3d950a.  v1:= v5.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d950e.  v2:= v5.`com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @type ^`byte`[] @kind object;
  #L3d9512.  v3:= 0I;
  #L3d9514.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3d951a.  v4:= temp;
  #L3d951c.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3d9522.  v4:= temp;
  #L3d9524.  call temp:= `get`(v1, v2, v3, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3d952a.  return v0;
}
procedure `int` `h`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.h:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d953c.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d9540.  call temp:= `get`(v0) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L3d9546.  v0:= temp;
  #L3d9548.  v0:= v0 ^& 255;
  #L3d954c.  return v0;
}
procedure `android.graphics.Bitmap` `i`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v9 @kind this, `com.bumptech.glide.gifdecoder.a` v10 @kind object, `com.bumptech.glide.gifdecoder.a` v11 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.i:(Lcom/bumptech/glide/gifdecoder/a;Lcom/bumptech/glide/gifdecoder/a;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d8fa4.  v8:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] @kind object;
  #L3d8fa8.  v0:= 0I;
  #L3d8faa.  if v11 != 0 then goto L3d8fcc;
  #L3d8fae.  v1:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3d8fb2.  if v1 == 0 then goto L3d8fc0;
  #L3d8fb6.  v2:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3d8fba.  call `release`(v2, v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3d8fc0.  v1:= 0I;
  #L3d8fc2.  v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` := v1 @kind object;
  #L3d8fc6.  call `fill`(v8, v0) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L3d8fcc.  v1:= 3I;
  #L3d8fce.  if v11 == 0 then goto L3d8fe8;
  #L3d8fd2.  v2:= v11.`com.bumptech.glide.gifdecoder.a.g` @type ^`int`;
  #L3d8fd6.  if v2 != v1 then goto L3d8fe8;
  #L3d8fda.  v2:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3d8fde.  if v2 != 0 then goto L3d8fe8;
  #L3d8fe2.  call `fill`(v8, v0) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L3d8fe8.  if v11 == 0 then goto L3d9092;
  #L3d8fec.  v2:= v11.`com.bumptech.glide.gifdecoder.a.g` @type ^`int`;
  #L3d8ff0.  if v2 <= 0 then goto L3d9092;
  #L3d8ff4.  v3:= 2I;
  #L3d8ff6.  if v2 != v3 then goto L3d906e;
  #L3d8ffa.  v1:= v10.`com.bumptech.glide.gifdecoder.a.f` @type ^`boolean` @kind boolean;
  #L3d8ffe.  if v1 != 0 then goto L3d9022;
  #L3d9002.  v1:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d9006.  v2:= v1.`com.bumptech.glide.gifdecoder.GifHeader.l` @type ^`int`;
  #L3d900a.  v3:= v10.`com.bumptech.glide.gifdecoder.a.k` @type ^`int`[] @kind object;
  #L3d900e.  if v3 == 0 then goto L3d9020;
  #L3d9012.  v1:= v1.`com.bumptech.glide.gifdecoder.GifHeader.j` @type ^`int`;
  #L3d9016.  v3:= v10.`com.bumptech.glide.gifdecoder.a.h` @type ^`int`;
  #L3d901a.  if v1 != v3 then goto L3d9020;
  #L3d901e.  goto L3d9022;
  #L3d9020.  v0:= v2;
  #L3d9022.  v1:= v11.`com.bumptech.glide.gifdecoder.a.d` @type ^`int`;
  #L3d9026.  v2:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3d902a.  v1:= v1 / v2 @kind int;
  #L3d902c.  v3:= v11.`com.bumptech.glide.gifdecoder.a.b` @type ^`int`;
  #L3d9030.  v3:= v3 / v2 @kind int;
  #L3d9032.  v4:= v11.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3d9036.  v4:= v4 / v2 @kind int;
  #L3d9038.  v11:= v11.`com.bumptech.glide.gifdecoder.a.a` @type ^`int`;
  #L3d903c.  v11:= v11 / v2 @kind int;
  #L3d903e.  v2:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3d9042.  v3:= v3 * v2 @kind int;
  #L3d9046.  v3:= v3 + v11 @kind int;
  #L3d9048.  v1:= v1 * v2 @kind int;
  #L3d904c.  v1:= v1 + v3 @kind int;
  #L3d904e.  if v3 >= v1 then goto L3d9092;
  #L3d9052.  v11:= v3 + v4 @kind int;
  #L3d9056.  v2:= v3;
  #L3d9058.  if v2 >= v11 then goto L3d9066;
  #L3d905c.  v8[v2]:= v0;
  #L3d9060.  v2:= v2 + 1;
  #L3d9064.  goto L3d9058;
  #L3d9066.  v11:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3d906a.  v3:= v3 + v11 @kind int;
  #L3d906c.  goto L3d904e;
  #L3d906e.  if v2 != v1 then goto L3d9092;
  #L3d9072.  v0:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3d9076.  if v0 == 0 then goto L3d9092;
  #L3d907a.  v2:= 0I;
  #L3d907c.  v6:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3d9080.  v4:= 0I;
  #L3d9082.  v5:= 0I;
  #L3d9084.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3d9088.  v1:= v8 @kind object;
  #L3d908a.  v3:= v6;
  #L3d908c.  call `getPixels`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.getPixels:([IIIIIII)V` @kind virtual;
  #L3d9092.  call `d`(v9, v10) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.d:(Lcom/bumptech/glide/gifdecoder/a;)V` @kind direct;
  #L3d9098.  v11:= v10.`com.bumptech.glide.gifdecoder.a.e` @type ^`boolean` @kind boolean;
  #L3d909c.  v0:= 1I;
  #L3d909e.  if v11 != 0 then goto L3d90b4;
  #L3d90a2.  v11:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3d90a6.  if v11 == v0 then goto L3d90ac;
  #L3d90aa.  goto L3d90b4;
  #L3d90ac.  call `c`(v9, v10) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.c:(Lcom/bumptech/glide/gifdecoder/a;)V` @kind direct;
  #L3d90b2.  goto L3d90ba;
  #L3d90b4.  call `b`(v9, v10) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.b:(Lcom/bumptech/glide/gifdecoder/a;)V` @kind direct;
  #L3d90ba.  v11:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.o` @type ^`boolean` @kind boolean;
  #L3d90be.  if v11 == 0 then goto L3d90fe;
  #L3d90c2.  v10:= v10.`com.bumptech.glide.gifdecoder.a.g` @type ^`int`;
  #L3d90c6.  if v10 == 0 then goto L3d90ce;
  #L3d90ca.  if v10 != v0 then goto L3d90fe;
  #L3d90ce.  v10:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3d90d2.  if v10 != 0 then goto L3d90e2;
  #L3d90d6.  call temp:= `f`(v9) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.f:()Landroid/graphics/Bitmap;` @kind direct;
  #L3d90dc.  v10:= temp @kind object;
  #L3d90de.  v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` := v10 @kind object;
  #L3d90e2.  v0:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3d90e6.  v2:= 0I;
  #L3d90e8.  v6:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3d90ec.  v4:= 0I;
  #L3d90ee.  v5:= 0I;
  #L3d90f0.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3d90f4.  v1:= v8 @kind object;
  #L3d90f6.  v3:= v6;
  #L3d90f8.  call `setPixels`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.setPixels:([IIIIIII)V` @kind virtual;
  #L3d90fe.  call temp:= `f`(v9) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.f:()Landroid/graphics/Bitmap;` @kind direct;
  #L3d9104.  v10:= temp @kind object;
  #L3d9106.  v2:= 0I;
  #L3d9108.  v6:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3d910c.  v4:= 0I;
  #L3d910e.  v5:= 0I;
  #L3d9110.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3d9114.  v0:= v10 @kind object;
  #L3d9116.  v1:= v8 @kind object;
  #L3d9118.  v3:= v6;
  #L3d911a.  call `setPixels`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.setPixels:([IIIIIII)V` @kind virtual;
  #L3d9120.  return v10 @kind object;
}
procedure `void` `advance`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v2 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.advance:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d9608.  v0:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d960c.  v0:= v0 + 1;
  #L3d9610.  v1:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d9614.  v1:= v1.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3d9618.  v0:= v0 %% v1 @kind int;
  #L3d961a.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int` := v0;
  #L3d961e.  return @kind void;
}
procedure `void` `clear`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v3 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d9630.  v0:= 0I;
  #L3d9632.  v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v0 @kind object;
  #L3d9636.  v1:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3d963a.  if v1 == 0 then goto L3d9648;
  #L3d963e.  v2:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3d9642.  call `release`(v2, v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:([B)V` @kind interface;
  #L3d9648.  v1:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] @kind object;
  #L3d964c.  if v1 == 0 then goto L3d965a;
  #L3d9650.  v2:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3d9654.  call `release`(v2, v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:([I)V` @kind interface;
  #L3d965a.  v1:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3d965e.  if v1 == 0 then goto L3d966c;
  #L3d9662.  v2:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3d9666.  call `release`(v2, v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3d966c.  v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L3d9670.  v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L3d9674.  v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` := v0 @kind object;
  #L3d9678.  v0:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @type ^`byte`[] @kind object;
  #L3d967c.  if v0 == 0 then goto L3d968a;
  #L3d9680.  v1:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3d9684.  call `release`(v1, v0) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:([B)V` @kind interface;
  #L3d968a.  return @kind void;
}
procedure `int` `getByteSize`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v2 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getByteSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d9258.  v0:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d925c.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L3d9262.  v0:= temp;
  #L3d9264.  v1:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3d9268.  v1:= length @variable v1;
  #L3d926a.  v0:= v0 + v1 @kind int;
  #L3d926c.  v1:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] @kind object;
  #L3d9270.  v1:= length @variable v1;
  #L3d9272.  v1:= v1 * 4;
  #L3d9276.  v0:= v0 + v1 @kind int;
  #L3d9278.  return v0;
}
procedure `int` `getCurrentFrameIndex`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getCurrentFrameIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d928c.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d9290.  return v0;
}
procedure `java.nio.ByteBuffer` `getData`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getData:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9560.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d9564.  return v0 @kind object;
}
procedure `int` `getDelay`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getDelay:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d92a4.  if v3 < 0 then goto L3d92ca;
  #L3d92a8.  v0:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d92ac.  v1:= v0.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3d92b0.  if v3 >= v1 then goto L3d92ca;
  #L3d92b4.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.e` @type ^`java.util.List` @kind object;
  #L3d92b8.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d92be.  v3:= temp @kind object;
  #L3d92c0.  v3:= (`com.bumptech.glide.gifdecoder.a`) v3 @kind object;
  #L3d92c4.  v3:= v3.`com.bumptech.glide.gifdecoder.a.i` @type ^`int`;
  #L3d92c8.  goto L3d92cc;
  #L3d92ca.  v3:= -1I;
  #L3d92cc.  return v3;
}
procedure `int` `getFrameCount`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getFrameCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d92e0.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d92e4.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3d92e8.  return v0;
}
procedure `int` `getHeight`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d92fc.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d9300.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.g` @type ^`int`;
  #L3d9304.  return v0;
}
procedure `int` `getLoopCount`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v2 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getLoopCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d9318.  v0:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d931c.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.m` @type ^`int`;
  #L3d9320.  v1:= -1I;
  #L3d9322.  if v0 != v1 then goto L3d9328;
  #L3d9326.  v0:= 1I;
  #L3d9328.  return v0;
}
procedure `int` `getNetscapeLoopCount`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getNetscapeLoopCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d933c.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d9340.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.m` @type ^`int`;
  #L3d9344.  return v0;
}
procedure `int` `getNextDelay`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getNextDelay:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9358.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d935c.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3d9360.  if v0 <= 0 then goto L3d9378;
  #L3d9364.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d9368.  if v0 >= 0 then goto L3d936e;
  #L3d936c.  goto L3d9378;
  #L3d936e.  call temp:= `getDelay`(v1, v0) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getDelay:(I)I` @kind virtual;
  #L3d9374.  v0:= temp;
  #L3d9376.  return v0;
  #L3d9378.  v0:= 0I;
  #L3d937a.  return v0;
}
procedure `android.graphics.Bitmap` `getNextFrame`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v8 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getNextFrame:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d8da8.  @monitorenter v8
  #L3d8daa.  v0:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d8dae.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3d8db2.  v1:= 3I;
  #L3d8db4.  v2:= 1I;
  #L3d8db6.  if v0 <= 0 then goto L3d8dc2;
  #L3d8dba.  v0:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d8dbe.  if v0 >= 0 then goto L3d8e1a;
  #L3d8dc2.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3d8dc6.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d8dcc.  v3:= temp;
  #L3d8dce.  if v3 == 0 then goto L3d8e16;
  #L3d8dd2.  v3:= new `java.lang.StringBuilder`;
  #L3d8dd6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d8ddc.  v4:= "Unable to decode frame, frameCount=" @kind object;
  #L3d8de0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d8de6.  v4:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d8dea.  v4:= v4.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3d8dee.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d8df4.  v4:= ", framePointer=" @kind object;
  #L3d8df8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d8dfe.  v4:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d8e02.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d8e08.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d8e0e.  v3:= temp @kind object;
  #L3d8e10.  call temp:= `d`(v0, v3) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d8e16.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v2;
  #L3d8e1a.  v0:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3d8e1e.  v3:= 0I;
  #L3d8e20.  if v0 == v2 then goto L3d8f30;
  #L3d8e24.  v4:= 2I;
  #L3d8e26.  if v0 != v4 then goto L3d8e2e;
  #L3d8e2a.  goto L3d8f30;
  #L3d8e2e.  v0:= 0I;
  #L3d8e30.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v0;
  #L3d8e34.  v5:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @type ^`byte`[] @kind object;
  #L3d8e38.  if v5 != 0 then goto L3d8e50;
  #L3d8e3c.  v5:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3d8e40.  v6:= 255I;
  #L3d8e44.  call temp:= `obtainByteArray`(v5, v6) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtainByteArray:(I)[B` @kind interface;
  #L3d8e4a.  v5:= temp @kind object;
  #L3d8e4c.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @type ^`byte`[] := v5 @kind object;
  #L3d8e50.  v5:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d8e54.  v5:= v5.`com.bumptech.glide.gifdecoder.GifHeader.e` @type ^`java.util.List` @kind object;
  #L3d8e58.  v6:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d8e5c.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d8e62.  v5:= temp @kind object;
  #L3d8e64.  v5:= (`com.bumptech.glide.gifdecoder.a`) v5 @kind object;
  #L3d8e68.  v6:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d8e6c.  v6:= v6 - v2 @kind int;
  #L3d8e6e.  if v6 < 0 then goto L3d8e88;
  #L3d8e72.  v7:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d8e76.  v7:= v7.`com.bumptech.glide.gifdecoder.GifHeader.e` @type ^`java.util.List` @kind object;
  #L3d8e7a.  call temp:= `get`(v7, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d8e80.  v6:= temp @kind object;
  #L3d8e82.  v6:= (`com.bumptech.glide.gifdecoder.a`) v6 @kind object;
  #L3d8e86.  goto L3d8e8a;
  #L3d8e88.  v6:= v3 @kind object;
  #L3d8e8a.  v7:= v5.`com.bumptech.glide.gifdecoder.a.k` @type ^`int`[] @kind object;
  #L3d8e8e.  if v7 == 0 then goto L3d8e94;
  #L3d8e92.  goto L3d8e9c;
  #L3d8e94.  v7:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d8e98.  v7:= v7.`com.bumptech.glide.gifdecoder.GifHeader.a` @type ^`int`[] @kind object;
  #L3d8e9c.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] := v7 @kind object;
  #L3d8ea0.  if v7 != 0 then goto L3d8ee8;
  #L3d8ea4.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3d8ea8.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d8eae.  v1:= temp;
  #L3d8eb0.  if v1 == 0 then goto L3d8ee0;
  #L3d8eb4.  v1:= new `java.lang.StringBuilder`;
  #L3d8eb8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d8ebe.  v4:= "No valid color table found for frame #" @kind object;
  #L3d8ec2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d8ec8.  v4:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d8ecc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d8ed2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d8ed8.  v1:= temp @kind object;
  #L3d8eda.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d8ee0.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v2;
  #L3d8ee4.  @monitorexit v8
  #L3d8ee6.  return v3 @kind object;
  #L3d8ee8.  v1:= v5.`com.bumptech.glide.gifdecoder.a.f` @type ^`boolean` @kind boolean;
  #L3d8eec.  if v1 == 0 then goto L3d8f24;
  #L3d8ef0.  v1:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.b` @type ^`int`[] @kind object;
  #L3d8ef4.  v2:= length @variable v7;
  #L3d8ef6.  call `arraycopy`(v7, v0, v1, v0, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3d8efc.  v1:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.b` @type ^`int`[] @kind object;
  #L3d8f00.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] := v1 @kind object;
  #L3d8f04.  v2:= v5.`com.bumptech.glide.gifdecoder.a.h` @type ^`int`;
  #L3d8f08.  v1[v2]:= v0;
  #L3d8f0c.  v0:= v5.`com.bumptech.glide.gifdecoder.a.g` @type ^`int`;
  #L3d8f10.  if v0 != v4 then goto L3d8f24;
  #L3d8f14.  v0:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3d8f18.  if v0 != 0 then goto L3d8f24;
  #L3d8f1c.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3d8f20.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` := v0 @kind object;
  #L3d8f24.  call temp:= `i`(v8, v5, v6) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.i:(Lcom/bumptech/glide/gifdecoder/a;Lcom/bumptech/glide/gifdecoder/a;)Landroid/graphics/Bitmap;` @kind direct;
  #L3d8f2a.  v0:= temp @kind object;
  #L3d8f2c.  @monitorexit v8
  #L3d8f2e.  return v0 @kind object;
  #L3d8f30.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3d8f34.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d8f3a.  v1:= temp;
  #L3d8f3c.  if v1 == 0 then goto L3d8f6c;
  #L3d8f40.  v1:= new `java.lang.StringBuilder`;
  #L3d8f44.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d8f4a.  v2:= "Unable to decode frame, status=" @kind object;
  #L3d8f4e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d8f54.  v2:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3d8f58.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d8f5e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d8f64.  v1:= temp @kind object;
  #L3d8f66.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d8f6c.  @monitorexit v8
  #L3d8f6e.  return v3 @kind object;
  #L3d8f70.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d8f72.  @monitorexit v8
  #L3d8f74.  throw v0;
  catch `java.lang.Throwable` @[L3d8daa..L3d8ee4] goto L3d8f70;
  catch `java.lang.Throwable` @[L3d8ee8..L3d8f2c] goto L3d8f70;
  catch `java.lang.Throwable` @[L3d8f30..L3d8f6c] goto L3d8f70;
}
procedure `int` `getStatus`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getStatus:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d938c.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3d9390.  return v0;
}
procedure `int` `getTotalIterationCount`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v3 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getTotalIterationCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d93a4.  v0:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d93a8.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.m` @type ^`int`;
  #L3d93ac.  v1:= 1I;
  #L3d93ae.  v2:= -1I;
  #L3d93b0.  if v0 != v2 then goto L3d93b6;
  #L3d93b4.  return v1;
  #L3d93b6.  if v0 != 0 then goto L3d93be;
  #L3d93ba.  v0:= 0I;
  #L3d93bc.  return v0;
  #L3d93be.  v0:= v0 + v1 @kind int;
  #L3d93c0.  return v0;
}
procedure `int` `getWidth`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d93d4.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3d93d8.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.f` @type ^`int`;
  #L3d93dc.  return v0;
}
procedure `int` `read`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v5 @kind this, `java.io.InputStream` v6 @kind object, `int` v7 ) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.read:(Ljava/io/InputStream;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d9444.  if v6 == 0 then goto L3d94a8;
  #L3d9448.  v0:= 16384I;
  #L3d944c.  if v7 <= 0 then goto L3d9456;
  #L3d9450.  v7:= v7 + 4096;
  #L3d9454.  goto L3d945a;
  #L3d9456.  v7:= 16384I;
  #L3d945a.  v1:= new `java.io.ByteArrayOutputStream`;
  #L3d945e.  call `<init>`(v1, v7) @signature `Ljava/io/ByteArrayOutputStream;.<init>:(I)V` @kind direct;
  #L3d9464.  v7:= new `byte`[v0];
  #L3d9468.  v2:= 0I;
  #L3d946a.  call temp:= `read`(v6, v7, v2, v0) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3d9470.  v3:= temp;
  #L3d9472.  v4:= -1I;
  #L3d9474.  if v3 == v4 then goto L3d9480;
  #L3d9478.  call `write`(v1, v7, v2, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L3d947e.  goto L3d9468;
  #L3d9480.  call `flush`(v1) @signature `Ljava/io/ByteArrayOutputStream;.flush:()V` @kind virtual;
  #L3d9486.  call temp:= `toByteArray`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L3d948c.  v7:= temp @kind object;
  #L3d948e.  call temp:= `read`(v5, v7) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.read:([B)I` @kind virtual;
  #L3d9494.  goto L3d94ae;
  #L3d9496.  v7:= Exception @type ^`java.io.IOException` @kind object;
  #L3d9498.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3d949c.  v1:= "Error reading data from stream" @kind object;
  #L3d94a0.  call temp:= `w`(v0, v1, v7) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3d94a6.  goto L3d94ae;
  #L3d94a8.  v7:= 2I;
  #L3d94aa.  v5.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v7;
  #L3d94ae.  if v6 == 0 then goto L3d94ca;
  #L3d94b2.  call `close`(v6) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3d94b8.  goto L3d94ca;
  #L3d94ba.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L3d94bc.  v7:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3d94c0.  v0:= "Error closing stream" @kind object;
  #L3d94c4.  call temp:= `w`(v7, v0, v6) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3d94ca.  v6:= v5.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3d94ce.  return v6;
  catch `java.io.IOException` @[L3d945a..L3d9494] goto L3d9496;
  catch `java.io.IOException` @[L3d94b2..L3d94b8] goto L3d94ba;
}
procedure `int` `read`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d93f0.  @monitorenter v1
  #L3d93f2.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.e:()Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @kind direct;
  #L3d93f8.  v0:= temp @kind object;
  #L3d93fa.  call temp:= `setData`(v0, v2) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.setData:([B)Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @kind virtual;
  #L3d9400.  v0:= temp @kind object;
  #L3d9402.  call temp:= `parseHeader`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.parseHeader:()Lcom/bumptech/glide/gifdecoder/GifHeader;` @kind virtual;
  #L3d9408.  v0:= temp @kind object;
  #L3d940a.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v0 @kind object;
  #L3d940e.  if v2 == 0 then goto L3d9418;
  #L3d9412.  call `setData`(v1, v0, v2) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;[B)V` @kind virtual;
  #L3d9418.  v2:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3d941c.  @monitorexit v1
  #L3d941e.  return v2;
  #L3d9420.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d9422.  @monitorexit v1
  #L3d9424.  throw v2;
  catch `java.lang.Throwable` @[L3d93f2..L3d941c] goto L3d9420;
}
procedure `void` `resetFrameIndex`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.resetFrameIndex:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9c30.  v0:= -1I;
  #L3d9c32.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int` := v0;
  #L3d9c36.  return @kind void;
}
procedure `void` `setData`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this, `com.bumptech.glide.gifdecoder.GifHeader` v2 @kind object, `java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9c80.  @monitorenter v1
  #L3d9c82.  v0:= 1I;
  #L3d9c84.  call `setData`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @kind virtual;
  #L3d9c8a.  @monitorexit v1
  #L3d9c8c.  return @kind void;
  #L3d9c8e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d9c90.  @monitorexit v1
  #L3d9c92.  throw v2;
  catch `java.lang.Throwable` @[L3d9c84..L3d9c8a] goto L3d9c8e;
}
procedure `void` `setData`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v2 @kind this, `com.bumptech.glide.gifdecoder.GifHeader` v3 @kind object, `java.nio.ByteBuffer` v4 @kind object, `int` v5 ) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d9cb0.  @monitorenter v2
  #L3d9cb2.  if v5 <= 0 then goto L3d9d7a;
  #L3d9cb6.  call temp:= `highestOneBit`(v5) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L3d9cbc.  v5:= temp;
  #L3d9cbe.  v0:= 0I;
  #L3d9cc0.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v0;
  #L3d9cc4.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v3 @kind object;
  #L3d9cc8.  v1:= -1I;
  #L3d9cca.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int` := v1;
  #L3d9cce.  call temp:= `asReadOnlyBuffer`(v4) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L3d9cd4.  v4:= temp @kind object;
  #L3d9cd6.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` := v4 @kind object;
  #L3d9cda.  call temp:= `position`(v4, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3d9ce0.  v4:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d9ce4.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3d9ce8.  call temp:= `order`(v4, v1) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3d9cee.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.o` @type ^`boolean` := v0 @kind boolean;
  #L3d9cf2.  v4:= v3.`com.bumptech.glide.gifdecoder.GifHeader.e` @type ^`java.util.List` @kind object;
  #L3d9cf6.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d9cfc.  v4:= temp @kind object;
  #L3d9cfe.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d9d04.  v0:= temp;
  #L3d9d06.  if v0 == 0 then goto L3d9d26;
  #L3d9d0a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d9d10.  v0:= temp @kind object;
  #L3d9d12.  v0:= (`com.bumptech.glide.gifdecoder.a`) v0 @kind object;
  #L3d9d16.  v0:= v0.`com.bumptech.glide.gifdecoder.a.g` @type ^`int`;
  #L3d9d1a.  v1:= 3I;
  #L3d9d1c.  if v0 != v1 then goto L3d9cfe;
  #L3d9d20.  v4:= 1I;
  #L3d9d22.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.o` @type ^`boolean` := v4 @kind boolean;
  #L3d9d26.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int` := v5;
  #L3d9d2a.  v4:= v3.`com.bumptech.glide.gifdecoder.GifHeader.f` @type ^`int`;
  #L3d9d2e.  v0:= v4 / v5 @kind int;
  #L3d9d32.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int` := v0;
  #L3d9d36.  v3:= v3.`com.bumptech.glide.gifdecoder.GifHeader.g` @type ^`int`;
  #L3d9d3a.  v5:= v3 / v5 @kind int;
  #L3d9d3e.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int` := v5;
  #L3d9d42.  v5:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3d9d46.  v4:= v4 * v3 @kind int;
  #L3d9d4a.  call temp:= `obtainByteArray`(v5, v4) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtainByteArray:(I)[B` @kind interface;
  #L3d9d50.  v3:= temp @kind object;
  #L3d9d52.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] := v3 @kind object;
  #L3d9d56.  v3:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3d9d5a.  v4:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3d9d5e.  v5:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3d9d62.  v4:= v4 * v5 @kind int;
  #L3d9d66.  call temp:= `obtainIntArray`(v3, v4) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtainIntArray:(I)[I` @kind interface;
  #L3d9d6c.  v3:= temp @kind object;
  #L3d9d6e.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] := v3 @kind object;
  #L3d9d72.  @monitorexit v2
  #L3d9d74.  return @kind void;
  #L3d9d76.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d9d78.  goto L3d9da8;
  #L3d9d7a.  v3:= new `java.lang.IllegalArgumentException`;
  #L3d9d7e.  v4:= new `java.lang.StringBuilder`;
  #L3d9d82.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d9d88.  v0:= "Sample size must be >=0, not: " @kind object;
  #L3d9d8c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9d92.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9d98.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d9d9e.  v4:= temp @kind object;
  #L3d9da0.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d9da6.  throw v3;
  #L3d9da8.  @monitorexit v2
  #L3d9daa.  throw v3;
  catch `java.lang.Throwable` @[L3d9cb6..L3d9d72] goto L3d9d76;
  catch `java.lang.Throwable` @[L3d9d7a..L3d9da8] goto L3d9d76;
}
procedure `void` `setData`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v0 @kind this, `com.bumptech.glide.gifdecoder.GifHeader` v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;[B)V` @AccessFlag PUBLIC {
    temp;

  #L3d9c48.  @monitorenter v0
  #L3d9c4a.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L3d9c50.  v2:= temp @kind object;
  #L3d9c52.  call `setData`(v0, v1, v2) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L3d9c58.  @monitorexit v0
  #L3d9c5a.  return @kind void;
  #L3d9c5c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d9c5e.  @monitorexit v0
  #L3d9c60.  throw v1;
  catch `java.lang.Throwable` @[L3d9c4a..L3d9c58] goto L3d9c5c;
}
procedure `void` `setDefaultBitmapConfig`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v3 @kind this, `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setDefaultBitmapConfig:(Landroid/graphics/Bitmap$Config;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d9dd0.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d9dd4.  if v4 == v0 then goto L3d9e38;
  #L3d9dd8.  v0:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d9ddc.  if v4 != v0 then goto L3d9de2;
  #L3d9de0.  goto L3d9e38;
  #L3d9de2.  v0:= new `java.lang.IllegalArgumentException`;
  #L3d9de6.  v1:= new `java.lang.StringBuilder`;
  #L3d9dea.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d9df0.  v2:= "Unsupported format: " @kind object;
  #L3d9df4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9dfa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9e00.  v4:= ", must be one of " @kind object;
  #L3d9e04.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9e0a.  v4:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d9e0e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9e14.  v4:= " or " @kind object;
  #L3d9e18.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9e1e.  v4:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d9e22.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9e28.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d9e2e.  v4:= temp @kind object;
  #L3d9e30.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d9e36.  throw v0;
  #L3d9e38.  v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.u` @type ^`android.graphics.Bitmap$Config` := v4 @kind object;
  #L3d9e3c.  return @kind void;
}
