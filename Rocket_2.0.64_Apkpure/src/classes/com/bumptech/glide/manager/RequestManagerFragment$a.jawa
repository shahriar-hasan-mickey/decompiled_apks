record `com.bumptech.glide.manager.RequestManagerFragment$a` @kind class @AccessFlag  extends `com.bumptech.glide.manager.RequestManagerTreeNode` @kind interface {
  `com.bumptech.glide.manager.RequestManagerFragment` `com.bumptech.glide.manager.RequestManagerFragment$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.RequestManagerFragment$a` v0 @kind this, `com.bumptech.glide.manager.RequestManagerFragment` v1 @kind object) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment$a;.<init>:(Lcom/bumptech/glide/manager/RequestManagerFragment;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f434c.  v0.`com.bumptech.glide.manager.RequestManagerFragment$a.a` @type ^`com.bumptech.glide.manager.RequestManagerFragment` := v1 @kind object;
  #L3f4350.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f4356.  return @kind void;
}
procedure `java.util.Set` `getDescendants`(`com.bumptech.glide.manager.RequestManagerFragment$a` v4 @kind this) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment$a;.getDescendants:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f42e0.  v0:= v4.`com.bumptech.glide.manager.RequestManagerFragment$a.a` @type ^`com.bumptech.glide.manager.RequestManagerFragment` @kind object;
  #L3f42e4.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment;.b:()Ljava/util/Set;` @kind virtual;
  #L3f42ea.  v0:= temp @kind object;
  #L3f42ec.  v1:= new `java.util.HashSet`;
  #L3f42f0.  call temp:= `size`(v0) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3f42f6.  v2:= temp;
  #L3f42f8.  call `<init>`(v1, v2) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L3f42fe.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f4304.  v0:= temp @kind object;
  #L3f4306.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f430c.  v2:= temp;
  #L3f430e.  if v2 == 0 then goto L3f433a;
  #L3f4312.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f4318.  v2:= temp @kind object;
  #L3f431a.  v2:= (`com.bumptech.glide.manager.RequestManagerFragment`) v2 @kind object;
  #L3f431e.  call temp:= `getRequestManager`(v2) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment;.getRequestManager:()Lcom/bumptech/glide/RequestManager;` @kind virtual;
  #L3f4324.  v3:= temp @kind object;
  #L3f4326.  if v3 == 0 then goto L3f4306;
  #L3f432a.  call temp:= `getRequestManager`(v2) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment;.getRequestManager:()Lcom/bumptech/glide/RequestManager;` @kind virtual;
  #L3f4330.  v2:= temp @kind object;
  #L3f4332.  call temp:= `add`(v1, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f4338.  goto L3f4306;
  #L3f433a.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.manager.RequestManagerFragment$a` v2 @kind this) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f4290.  v0:= new `java.lang.StringBuilder`;
  #L3f4294.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f429a.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L3f42a0.  v1:= temp @kind object;
  #L3f42a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f42a8.  v1:= "{fragment=" @kind object;
  #L3f42ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f42b2.  v1:= v2.`com.bumptech.glide.manager.RequestManagerFragment$a.a` @type ^`com.bumptech.glide.manager.RequestManagerFragment` @kind object;
  #L3f42b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f42bc.  v1:= "}" @kind object;
  #L3f42c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f42c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f42cc.  v0:= temp @kind object;
  #L3f42ce.  return v0 @kind object;
}
