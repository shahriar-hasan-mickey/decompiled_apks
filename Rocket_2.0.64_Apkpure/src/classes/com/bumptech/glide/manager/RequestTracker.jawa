record `com.bumptech.glide.manager.RequestTracker` @kind class @AccessFlag PUBLIC {
  `java.util.Set` `com.bumptech.glide.manager.RequestTracker.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.manager.RequestTracker.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.manager.RequestTracker.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.RequestTracker` v1 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f5554.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f555a.  v0:= new `java.util.WeakHashMap`;
  #L3f555e.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L3f5564.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L3f556a.  v0:= temp @kind object;
  #L3f556c.  v1.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` := v0 @kind object;
  #L3f5570.  v0:= new `java.util.HashSet`;
  #L3f5574.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3f557a.  v1.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.Set` := v0 @kind object;
  #L3f557e.  return @kind void;
}
procedure `boolean` `clearAndRemove`(`com.bumptech.glide.manager.RequestTracker` v3 @kind this, `com.bumptech.glide.request.Request` v4 @kind object) @signature `Lcom/bumptech/glide/manager/RequestTracker;.clearAndRemove:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f5488.  v0:= 1I;
  #L3f548a.  if v4 != 0 then goto L3f5490;
  #L3f548e.  return v0;
  #L3f5490.  v1:= v3.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3f5494.  call temp:= `remove`(v1, v4) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3f549a.  v1:= temp;
  #L3f549c.  v2:= v3.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.Set` @kind object;
  #L3f54a0.  call temp:= `remove`(v2, v4) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3f54a6.  v2:= temp;
  #L3f54a8.  if v2 != 0 then goto L3f54b4;
  #L3f54ac.  if v1 == 0 then goto L3f54b2;
  #L3f54b0.  goto L3f54b4;
  #L3f54b2.  v0:= 0I;
  #L3f54b4.  if v0 == 0 then goto L3f54be;
  #L3f54b8.  call `clear`(v4) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3f54be.  return v0;
}
procedure `void` `clearRequests`(`com.bumptech.glide.manager.RequestTracker` v2 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.clearRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f5590.  v0:= v2.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3f5594.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f559a.  v0:= temp @kind object;
  #L3f559c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f55a2.  v0:= temp @kind object;
  #L3f55a4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f55aa.  v1:= temp;
  #L3f55ac.  if v1 == 0 then goto L3f55c4;
  #L3f55b0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f55b6.  v1:= temp @kind object;
  #L3f55b8.  v1:= (`com.bumptech.glide.request.Request`) v1 @kind object;
  #L3f55bc.  call temp:= `clearAndRemove`(v2, v1) @signature `Lcom/bumptech/glide/manager/RequestTracker;.clearAndRemove:(Lcom/bumptech/glide/request/Request;)Z` @kind virtual;
  #L3f55c2.  goto L3f55a4;
  #L3f55c4.  v0:= v2.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.Set` @kind object;
  #L3f55c8.  call `clear`(v0) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L3f55ce.  return @kind void;
}
procedure `boolean` `isPaused`(`com.bumptech.glide.manager.RequestTracker` v1 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.isPaused:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f54d0.  v0:= v1.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` @kind boolean;
  #L3f54d4.  return v0;
}
procedure `void` `pauseAllRequests`(`com.bumptech.glide.manager.RequestTracker` v3 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.pauseAllRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f55e0.  v0:= 1I;
  #L3f55e2.  v3.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` := v0 @kind boolean;
  #L3f55e6.  v0:= v3.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3f55ea.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f55f0.  v0:= temp @kind object;
  #L3f55f2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f55f8.  v0:= temp @kind object;
  #L3f55fa.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f5600.  v1:= temp;
  #L3f5602.  if v1 == 0 then goto L3f563c;
  #L3f5606.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f560c.  v1:= temp @kind object;
  #L3f560e.  v1:= (`com.bumptech.glide.request.Request`) v1 @kind object;
  #L3f5612.  call temp:= `isRunning`(v1) @signature `Lcom/bumptech/glide/request/Request;.isRunning:()Z` @kind interface;
  #L3f5618.  v2:= temp;
  #L3f561a.  if v2 != 0 then goto L3f562a;
  #L3f561e.  call temp:= `isComplete`(v1) @signature `Lcom/bumptech/glide/request/Request;.isComplete:()Z` @kind interface;
  #L3f5624.  v2:= temp;
  #L3f5626.  if v2 == 0 then goto L3f55fa;
  #L3f562a.  call `clear`(v1) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3f5630.  v2:= v3.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.Set` @kind object;
  #L3f5634.  call temp:= `add`(v2, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f563a.  goto L3f55fa;
  #L3f563c.  return @kind void;
}
procedure `void` `pauseRequests`(`com.bumptech.glide.manager.RequestTracker` v3 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.pauseRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f5650.  v0:= 1I;
  #L3f5652.  v3.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` := v0 @kind boolean;
  #L3f5656.  v0:= v3.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3f565a.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f5660.  v0:= temp @kind object;
  #L3f5662.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f5668.  v0:= temp @kind object;
  #L3f566a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f5670.  v1:= temp;
  #L3f5672.  if v1 == 0 then goto L3f56a0;
  #L3f5676.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f567c.  v1:= temp @kind object;
  #L3f567e.  v1:= (`com.bumptech.glide.request.Request`) v1 @kind object;
  #L3f5682.  call temp:= `isRunning`(v1) @signature `Lcom/bumptech/glide/request/Request;.isRunning:()Z` @kind interface;
  #L3f5688.  v2:= temp;
  #L3f568a.  if v2 == 0 then goto L3f566a;
  #L3f568e.  call `pause`(v1) @signature `Lcom/bumptech/glide/request/Request;.pause:()V` @kind interface;
  #L3f5694.  v2:= v3.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.Set` @kind object;
  #L3f5698.  call temp:= `add`(v2, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f569e.  goto L3f566a;
  #L3f56a0.  return @kind void;
}
procedure `void` `restartRequests`(`com.bumptech.glide.manager.RequestTracker` v3 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.restartRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f56b4.  v0:= v3.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3f56b8.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f56be.  v0:= temp @kind object;
  #L3f56c0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f56c6.  v0:= temp @kind object;
  #L3f56c8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f56ce.  v1:= temp;
  #L3f56d0.  if v1 == 0 then goto L3f571a;
  #L3f56d4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f56da.  v1:= temp @kind object;
  #L3f56dc.  v1:= (`com.bumptech.glide.request.Request`) v1 @kind object;
  #L3f56e0.  call temp:= `isComplete`(v1) @signature `Lcom/bumptech/glide/request/Request;.isComplete:()Z` @kind interface;
  #L3f56e6.  v2:= temp;
  #L3f56e8.  if v2 != 0 then goto L3f56c8;
  #L3f56ec.  call temp:= `isCleared`(v1) @signature `Lcom/bumptech/glide/request/Request;.isCleared:()Z` @kind interface;
  #L3f56f2.  v2:= temp;
  #L3f56f4.  if v2 != 0 then goto L3f56c8;
  #L3f56f8.  call `clear`(v1) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3f56fe.  v2:= v3.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` @kind boolean;
  #L3f5702.  if v2 != 0 then goto L3f570e;
  #L3f5706.  call `begin`(v1) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3f570c.  goto L3f56c8;
  #L3f570e.  v2:= v3.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.Set` @kind object;
  #L3f5712.  call temp:= `add`(v2, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f5718.  goto L3f56c8;
  #L3f571a.  return @kind void;
}
procedure `void` `resumeRequests`(`com.bumptech.glide.manager.RequestTracker` v3 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.resumeRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f572c.  v0:= 0I;
  #L3f572e.  v3.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` := v0 @kind boolean;
  #L3f5732.  v0:= v3.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3f5736.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f573c.  v0:= temp @kind object;
  #L3f573e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f5744.  v0:= temp @kind object;
  #L3f5746.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f574c.  v1:= temp;
  #L3f574e.  if v1 == 0 then goto L3f577e;
  #L3f5752.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f5758.  v1:= temp @kind object;
  #L3f575a.  v1:= (`com.bumptech.glide.request.Request`) v1 @kind object;
  #L3f575e.  call temp:= `isComplete`(v1) @signature `Lcom/bumptech/glide/request/Request;.isComplete:()Z` @kind interface;
  #L3f5764.  v2:= temp;
  #L3f5766.  if v2 != 0 then goto L3f5746;
  #L3f576a.  call temp:= `isRunning`(v1) @signature `Lcom/bumptech/glide/request/Request;.isRunning:()Z` @kind interface;
  #L3f5770.  v2:= temp;
  #L3f5772.  if v2 != 0 then goto L3f5746;
  #L3f5776.  call `begin`(v1) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3f577c.  goto L3f5746;
  #L3f577e.  v0:= v3.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.Set` @kind object;
  #L3f5782.  call `clear`(v0) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L3f5788.  return @kind void;
}
procedure `void` `runRequest`(`com.bumptech.glide.manager.RequestTracker` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/manager/RequestTracker;.runRequest:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f579c.  v0:= v2.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3f57a0.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f57a6.  v0:= v2.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` @kind boolean;
  #L3f57aa.  if v0 != 0 then goto L3f57b6;
  #L3f57ae.  call `begin`(v3) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3f57b4.  goto L3f57e2;
  #L3f57b6.  call `clear`(v3) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3f57bc.  v0:= 2I;
  #L3f57be.  v1:= "RequestTracker" @kind object;
  #L3f57c2.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3f57c8.  v0:= temp;
  #L3f57ca.  if v0 == 0 then goto L3f57d8;
  #L3f57ce.  v0:= "Paused, delaying request" @kind object;
  #L3f57d2.  call temp:= `v`(v1, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3f57d8.  v0:= v2.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.Set` @kind object;
  #L3f57dc.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f57e2.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.manager.RequestTracker` v2 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f54e8.  v0:= new `java.lang.StringBuilder`;
  #L3f54ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f54f2.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L3f54f8.  v1:= temp @kind object;
  #L3f54fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5500.  v1:= "{numRequests=" @kind object;
  #L3f5504.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f550a.  v1:= v2.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3f550e.  call temp:= `size`(v1) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3f5514.  v1:= temp;
  #L3f5516.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f551c.  v1:= ", isPaused=" @kind object;
  #L3f5520.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5526.  v1:= v2.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` @kind boolean;
  #L3f552a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5530.  v1:= "}" @kind object;
  #L3f5534.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f553a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f5540.  v0:= temp @kind object;
  #L3f5542.  return v0 @kind object;
}
