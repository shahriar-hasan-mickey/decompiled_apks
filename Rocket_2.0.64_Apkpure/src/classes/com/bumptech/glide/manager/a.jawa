record `com.bumptech.glide.manager.a` @kind class @AccessFlag  extends `com.bumptech.glide.manager.Lifecycle` @kind interface {
  `java.util.Set` `com.bumptech.glide.manager.a.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.manager.a.b` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.manager.a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.a` v1 @kind this) @signature `Lcom/bumptech/glide/manager/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3f3e4c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f3e52.  v0:= new `java.util.WeakHashMap`;
  #L3f3e56.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L3f3e5c.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L3f3e62.  v0:= temp @kind object;
  #L3f3e64.  v1.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` := v0 @kind object;
  #L3f3e68.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.manager.a` v2 @kind this) @signature `Lcom/bumptech/glide/manager/a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f3ec0.  v0:= 1I;
  #L3f3ec2.  v2.`com.bumptech.glide.manager.a.c` @type ^`boolean` := v0 @kind boolean;
  #L3f3ec6.  v0:= v2.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` @kind object;
  #L3f3eca.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f3ed0.  v0:= temp @kind object;
  #L3f3ed2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f3ed8.  v0:= temp @kind object;
  #L3f3eda.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f3ee0.  v1:= temp;
  #L3f3ee2.  if v1 == 0 then goto L3f3efa;
  #L3f3ee6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f3eec.  v1:= temp @kind object;
  #L3f3eee.  v1:= (`com.bumptech.glide.manager.LifecycleListener`) v1 @kind object;
  #L3f3ef2.  call `onDestroy`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onDestroy:()V` @kind interface;
  #L3f3ef8.  goto L3f3eda;
  #L3f3efa.  return @kind void;
}
procedure `void` `addListener`(`com.bumptech.glide.manager.a` v1 @kind this, `com.bumptech.glide.manager.LifecycleListener` v2 @kind object) @signature `Lcom/bumptech/glide/manager/a;.addListener:(Lcom/bumptech/glide/manager/LifecycleListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3e7c.  v0:= v1.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` @kind object;
  #L3f3e80.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f3e86.  v0:= v1.`com.bumptech.glide.manager.a.c` @type ^`boolean` @kind boolean;
  #L3f3e8a.  if v0 == 0 then goto L3f3e96;
  #L3f3e8e.  call `onDestroy`(v2) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onDestroy:()V` @kind interface;
  #L3f3e94.  goto L3f3eac;
  #L3f3e96.  v0:= v1.`com.bumptech.glide.manager.a.b` @type ^`boolean` @kind boolean;
  #L3f3e9a.  if v0 == 0 then goto L3f3ea6;
  #L3f3e9e.  call `onStart`(v2) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStart:()V` @kind interface;
  #L3f3ea4.  goto L3f3eac;
  #L3f3ea6.  call `onStop`(v2) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStop:()V` @kind interface;
  #L3f3eac.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.manager.a` v2 @kind this) @signature `Lcom/bumptech/glide/manager/a;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f3f0c.  v0:= 1I;
  #L3f3f0e.  v2.`com.bumptech.glide.manager.a.b` @type ^`boolean` := v0 @kind boolean;
  #L3f3f12.  v0:= v2.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` @kind object;
  #L3f3f16.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f3f1c.  v0:= temp @kind object;
  #L3f3f1e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f3f24.  v0:= temp @kind object;
  #L3f3f26.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f3f2c.  v1:= temp;
  #L3f3f2e.  if v1 == 0 then goto L3f3f46;
  #L3f3f32.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f3f38.  v1:= temp @kind object;
  #L3f3f3a.  v1:= (`com.bumptech.glide.manager.LifecycleListener`) v1 @kind object;
  #L3f3f3e.  call `onStart`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStart:()V` @kind interface;
  #L3f3f44.  goto L3f3f26;
  #L3f3f46.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.manager.a` v2 @kind this) @signature `Lcom/bumptech/glide/manager/a;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f3f58.  v0:= 0I;
  #L3f3f5a.  v2.`com.bumptech.glide.manager.a.b` @type ^`boolean` := v0 @kind boolean;
  #L3f3f5e.  v0:= v2.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` @kind object;
  #L3f3f62.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f3f68.  v0:= temp @kind object;
  #L3f3f6a.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f3f70.  v0:= temp @kind object;
  #L3f3f72.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f3f78.  v1:= temp;
  #L3f3f7a.  if v1 == 0 then goto L3f3f92;
  #L3f3f7e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f3f84.  v1:= temp @kind object;
  #L3f3f86.  v1:= (`com.bumptech.glide.manager.LifecycleListener`) v1 @kind object;
  #L3f3f8a.  call `onStop`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStop:()V` @kind interface;
  #L3f3f90.  goto L3f3f72;
  #L3f3f92.  return @kind void;
}
procedure `void` `removeListener`(`com.bumptech.glide.manager.a` v1 @kind this, `com.bumptech.glide.manager.LifecycleListener` v2 @kind object) @signature `Lcom/bumptech/glide/manager/a;.removeListener:(Lcom/bumptech/glide/manager/LifecycleListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3fa4.  v0:= v1.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` @kind object;
  #L3f3fa8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3f3fae.  return @kind void;
}
