record `com.bumptech.glide.manager.j` @kind class @AccessFlag FINAL {
  `com.bumptech.glide.manager.j$c` `com.bumptech.glide.manager.j.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.manager.j.b` @AccessFlag FINAL;
  `boolean` `com.bumptech.glide.manager.j.c` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.manager.j` `@@com.bumptech.glide.manager.j.d` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<init>`(`com.bumptech.glide.manager.j` v4 @kind this, `android.content.Context` v5 @kind object) @signature `Lcom/bumptech/glide/manager/j;.<init>:(Landroid/content/Context;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f5cec.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f5cf2.  v0:= new `java.util.HashSet`;
  #L3f5cf6.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3f5cfc.  v4.`com.bumptech.glide.manager.j.b` @type ^`java.util.Set` := v0 @kind object;
  #L3f5d00.  v0:= new `com.bumptech.glide.manager.j$a`;
  #L3f5d04.  call `<init>`(v0, v4, v5) @signature `Lcom/bumptech/glide/manager/j$a;.<init>:(Lcom/bumptech/glide/manager/j;Landroid/content/Context;)V` @kind direct;
  #L3f5d0a.  call temp:= `memorize`(v0) @signature `Lcom/bumptech/glide/util/GlideSuppliers;.memorize:(Lcom/bumptech/glide/util/GlideSuppliers$GlideSupplier;)Lcom/bumptech/glide/util/GlideSuppliers$GlideSupplier;` @kind static;
  #L3f5d10.  v0:= temp @kind object;
  #L3f5d12.  v1:= new `com.bumptech.glide.manager.j$b`;
  #L3f5d16.  call `<init>`(v1, v4) @signature `Lcom/bumptech/glide/manager/j$b;.<init>:(Lcom/bumptech/glide/manager/j;)V` @kind direct;
  #L3f5d1c.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3f5d20.  v3:= 24I;
  #L3f5d24.  if v2 < v3 then goto L3f5d34;
  #L3f5d28.  v5:= new `com.bumptech.glide.manager.j$d`;
  #L3f5d2c.  call `<init>`(v5, v0, v1) @signature `Lcom/bumptech/glide/manager/j$d;.<init>:(Lcom/bumptech/glide/util/GlideSuppliers$GlideSupplier;Lcom/bumptech/glide/manager/ConnectivityMonitor$ConnectivityListener;)V` @kind direct;
  #L3f5d32.  goto L3f5d40;
  #L3f5d34.  v2:= new `com.bumptech.glide.manager.j$e`;
  #L3f5d38.  call `<init>`(v2, v5, v0, v1) @signature `Lcom/bumptech/glide/manager/j$e;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/util/GlideSuppliers$GlideSupplier;Lcom/bumptech/glide/manager/ConnectivityMonitor$ConnectivityListener;)V` @kind direct;
  #L3f5d3e.  v5:= v2 @kind object;
  #L3f5d40.  v4.`com.bumptech.glide.manager.j.a` @type ^`com.bumptech.glide.manager.j$c` := v5 @kind object;
  #L3f5d44.  return @kind void;
}
procedure `com.bumptech.glide.manager.j` `a`(`android.content.Context` v2 @kind object) @signature `Lcom/bumptech/glide/manager/j;.a:(Landroid/content/Context;)Lcom/bumptech/glide/manager/j;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3f5c94.  v0:= `@@com.bumptech.glide.manager.j.d` @type ^`com.bumptech.glide.manager.j` @kind object;
  #L3f5c98.  if v0 != 0 then goto L3f5cca;
  #L3f5c9c.  v0:= constclass @type ^`com.bumptech.glide.manager.j` @kind object;
  #L3f5ca0.  @monitorenter v0
  #L3f5ca2.  v1:= `@@com.bumptech.glide.manager.j.d` @type ^`com.bumptech.glide.manager.j` @kind object;
  #L3f5ca6.  if v1 != 0 then goto L3f5cc0;
  #L3f5caa.  v1:= new `com.bumptech.glide.manager.j`;
  #L3f5cae.  call temp:= `getApplicationContext`(v2) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L3f5cb4.  v2:= temp @kind object;
  #L3f5cb6.  call `<init>`(v1, v2) @signature `Lcom/bumptech/glide/manager/j;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L3f5cbc.  `@@com.bumptech.glide.manager.j.d` @type ^`com.bumptech.glide.manager.j` := v1 @kind object;
  #L3f5cc0.  @monitorexit v0
  #L3f5cc2.  goto L3f5cca;
  #L3f5cc4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f5cc6.  @monitorexit v0
  #L3f5cc8.  throw v2;
  #L3f5cca.  v2:= `@@com.bumptech.glide.manager.j.d` @type ^`com.bumptech.glide.manager.j` @kind object;
  #L3f5cce.  return v2 @kind object;
  catch `java.lang.Throwable` @[L3f5ca2..L3f5cc8] goto L3f5cc4;
}
procedure `void` `b`(`com.bumptech.glide.manager.j` v1 @kind this) @signature `Lcom/bumptech/glide/manager/j;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f5d58.  v0:= v1.`com.bumptech.glide.manager.j.c` @type ^`boolean` @kind boolean;
  #L3f5d5c.  if v0 != 0 then goto L3f5d82;
  #L3f5d60.  v0:= v1.`com.bumptech.glide.manager.j.b` @type ^`java.util.Set` @kind object;
  #L3f5d64.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L3f5d6a.  v0:= temp;
  #L3f5d6c.  if v0 == 0 then goto L3f5d72;
  #L3f5d70.  goto L3f5d82;
  #L3f5d72.  v0:= v1.`com.bumptech.glide.manager.j.a` @type ^`com.bumptech.glide.manager.j$c` @kind object;
  #L3f5d76.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/manager/j$c;.a:()Z` @kind interface;
  #L3f5d7c.  v0:= temp;
  #L3f5d7e.  v1.`com.bumptech.glide.manager.j.c` @type ^`boolean` := v0 @kind boolean;
  #L3f5d82.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.manager.j` v1 @kind this) @signature `Lcom/bumptech/glide/manager/j;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f5d94.  v0:= v1.`com.bumptech.glide.manager.j.c` @type ^`boolean` @kind boolean;
  #L3f5d98.  if v0 == 0 then goto L3f5dbe;
  #L3f5d9c.  v0:= v1.`com.bumptech.glide.manager.j.b` @type ^`java.util.Set` @kind object;
  #L3f5da0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L3f5da6.  v0:= temp;
  #L3f5da8.  if v0 != 0 then goto L3f5dae;
  #L3f5dac.  goto L3f5dbe;
  #L3f5dae.  v0:= v1.`com.bumptech.glide.manager.j.a` @type ^`com.bumptech.glide.manager.j$c` @kind object;
  #L3f5db2.  call `unregister`(v0) @signature `Lcom/bumptech/glide/manager/j$c;.unregister:()V` @kind interface;
  #L3f5db8.  v0:= 0I;
  #L3f5dba.  v1.`com.bumptech.glide.manager.j.c` @type ^`boolean` := v0 @kind boolean;
  #L3f5dbe.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.manager.j` v1 @kind this, `com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener` v2 @kind object) @signature `Lcom/bumptech/glide/manager/j;.d:(Lcom/bumptech/glide/manager/ConnectivityMonitor$ConnectivityListener;)V` @AccessFlag  {
    temp;
    v0;

  #L3f5dd0.  @monitorenter v1
  #L3f5dd2.  v0:= v1.`com.bumptech.glide.manager.j.b` @type ^`java.util.Set` @kind object;
  #L3f5dd6.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f5ddc.  call `b`(v1) @signature `Lcom/bumptech/glide/manager/j;.b:()V` @kind direct;
  #L3f5de2.  @monitorexit v1
  #L3f5de4.  return @kind void;
  #L3f5de6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f5de8.  @monitorexit v1
  #L3f5dea.  throw v2;
  catch `java.lang.Throwable` @[L3f5dd2..L3f5de2] goto L3f5de6;
}
procedure `void` `e`(`com.bumptech.glide.manager.j` v1 @kind this, `com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener` v2 @kind object) @signature `Lcom/bumptech/glide/manager/j;.e:(Lcom/bumptech/glide/manager/ConnectivityMonitor$ConnectivityListener;)V` @AccessFlag  {
    temp;
    v0;

  #L3f5e08.  @monitorenter v1
  #L3f5e0a.  v0:= v1.`com.bumptech.glide.manager.j.b` @type ^`java.util.Set` @kind object;
  #L3f5e0e.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3f5e14.  call `c`(v1) @signature `Lcom/bumptech/glide/manager/j;.c:()V` @kind direct;
  #L3f5e1a.  @monitorexit v1
  #L3f5e1c.  return @kind void;
  #L3f5e1e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f5e20.  @monitorexit v1
  #L3f5e22.  throw v2;
  catch `java.lang.Throwable` @[L3f5e0a..L3f5e1a] goto L3f5e1e;
}
