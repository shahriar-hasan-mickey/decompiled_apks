record `com.bumptech.glide.manager.TargetTracker` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.manager.LifecycleListener` @kind interface {
  `java.util.Set` `com.bumptech.glide.manager.TargetTracker.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.TargetTracker` v1 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f6378.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f637e.  v0:= new `java.util.WeakHashMap`;
  #L3f6382.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L3f6388.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L3f638e.  v0:= temp @kind object;
  #L3f6390.  v1.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` := v0 @kind object;
  #L3f6394.  return @kind void;
}
procedure `void` `clear`(`com.bumptech.glide.manager.TargetTracker` v1 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f63a8.  v0:= v1.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3f63ac.  call `clear`(v0) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L3f63b2.  return @kind void;
}
procedure `java.util.List` `getAll`(`com.bumptech.glide.manager.TargetTracker` v1 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.getAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6358.  v0:= v1.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3f635c.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f6362.  v0:= temp @kind object;
  #L3f6364.  return v0 @kind object;
}
procedure `void` `onDestroy`(`com.bumptech.glide.manager.TargetTracker` v2 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f63c4.  v0:= v2.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3f63c8.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f63ce.  v0:= temp @kind object;
  #L3f63d0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f63d6.  v0:= temp @kind object;
  #L3f63d8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f63de.  v1:= temp;
  #L3f63e0.  if v1 == 0 then goto L3f63f8;
  #L3f63e4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f63ea.  v1:= temp @kind object;
  #L3f63ec.  v1:= (`com.bumptech.glide.request.target.Target`) v1 @kind object;
  #L3f63f0.  call `onDestroy`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onDestroy:()V` @kind interface;
  #L3f63f6.  goto L3f63d8;
  #L3f63f8.  return @kind void;
}
procedure `void` `onStart`(`com.bumptech.glide.manager.TargetTracker` v2 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f640c.  v0:= v2.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3f6410.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f6416.  v0:= temp @kind object;
  #L3f6418.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f641e.  v0:= temp @kind object;
  #L3f6420.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f6426.  v1:= temp;
  #L3f6428.  if v1 == 0 then goto L3f6440;
  #L3f642c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f6432.  v1:= temp @kind object;
  #L3f6434.  v1:= (`com.bumptech.glide.request.target.Target`) v1 @kind object;
  #L3f6438.  call `onStart`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStart:()V` @kind interface;
  #L3f643e.  goto L3f6420;
  #L3f6440.  return @kind void;
}
procedure `void` `onStop`(`com.bumptech.glide.manager.TargetTracker` v2 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.onStop:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f6454.  v0:= v2.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3f6458.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3f645e.  v0:= temp @kind object;
  #L3f6460.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f6466.  v0:= temp @kind object;
  #L3f6468.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f646e.  v1:= temp;
  #L3f6470.  if v1 == 0 then goto L3f6488;
  #L3f6474.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f647a.  v1:= temp @kind object;
  #L3f647c.  v1:= (`com.bumptech.glide.request.target.Target`) v1 @kind object;
  #L3f6480.  call `onStop`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStop:()V` @kind interface;
  #L3f6486.  goto L3f6468;
  #L3f6488.  return @kind void;
}
procedure `void` `track`(`com.bumptech.glide.manager.TargetTracker` v1 @kind this, `com.bumptech.glide.request.target.Target` v2 @kind object) @signature `Lcom/bumptech/glide/manager/TargetTracker;.track:(Lcom/bumptech/glide/request/target/Target;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f649c.  v0:= v1.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3f64a0.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f64a6.  return @kind void;
}
procedure `void` `untrack`(`com.bumptech.glide.manager.TargetTracker` v1 @kind this, `com.bumptech.glide.request.target.Target` v2 @kind object) @signature `Lcom/bumptech/glide/manager/TargetTracker;.untrack:(Lcom/bumptech/glide/request/target/Target;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f64b8.  v0:= v1.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3f64bc.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3f64c2.  return @kind void;
}
