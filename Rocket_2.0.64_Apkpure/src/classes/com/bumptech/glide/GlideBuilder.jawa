record `com.bumptech.glide.GlideBuilder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `com.bumptech.glide.GlideBuilder.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.GlideExperiments$a` `com.bumptech.glide.GlideBuilder.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Engine` `com.bumptech.glide.GlideBuilder.c` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.GlideBuilder.d` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.GlideBuilder.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.cache.MemoryCache` `com.bumptech.glide.GlideBuilder.f` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.executor.GlideExecutor` `com.bumptech.glide.GlideBuilder.g` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.executor.GlideExecutor` `com.bumptech.glide.GlideBuilder.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.cache.DiskCache$Factory` `com.bumptech.glide.GlideBuilder.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.cache.MemorySizeCalculator` `com.bumptech.glide.GlideBuilder.j` @AccessFlag PRIVATE;
  `com.bumptech.glide.manager.ConnectivityMonitorFactory` `com.bumptech.glide.GlideBuilder.k` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.GlideBuilder.l` @AccessFlag PRIVATE;
  `com.bumptech.glide.Glide$RequestOptionsFactory` `com.bumptech.glide.GlideBuilder.m` @AccessFlag PRIVATE;
  `com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory` `com.bumptech.glide.GlideBuilder.n` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.executor.GlideExecutor` `com.bumptech.glide.GlideBuilder.o` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.GlideBuilder.p` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.GlideBuilder.q` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.GlideBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/GlideBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d17a8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d17ae.  v0:= new `androidx.collection.ArrayMap`;
  #L3d17b2.  call `<init>`(v0) @signature `Landroidx/collection/ArrayMap;.<init>:()V` @kind direct;
  #L3d17b8.  v1.`com.bumptech.glide.GlideBuilder.a` @type ^`java.util.Map` := v0 @kind object;
  #L3d17bc.  v0:= new `com.bumptech.glide.GlideExperiments$a`;
  #L3d17c0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/GlideExperiments$a;.<init>:()V` @kind direct;
  #L3d17c6.  v1.`com.bumptech.glide.GlideBuilder.b` @type ^`com.bumptech.glide.GlideExperiments$a` := v0 @kind object;
  #L3d17ca.  v0:= 4I;
  #L3d17cc.  v1.`com.bumptech.glide.GlideBuilder.l` @type ^`int` := v0;
  #L3d17d0.  v0:= new `com.bumptech.glide.GlideBuilder$a`;
  #L3d17d4.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/GlideBuilder$a;.<init>:(Lcom/bumptech/glide/GlideBuilder;)V` @kind direct;
  #L3d17da.  v1.`com.bumptech.glide.GlideBuilder.m` @type ^`com.bumptech.glide.Glide$RequestOptionsFactory` := v0 @kind object;
  #L3d17de.  return @kind void;
}
procedure `com.bumptech.glide.Glide` `a`(`com.bumptech.glide.GlideBuilder` v14 @kind this, `android.content.Context` v15 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.a:(Landroid/content/Context;)Lcom/bumptech/glide/Glide;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3d1364.  v0:= v14.`com.bumptech.glide.GlideBuilder.g` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1368.  if v0 != 0 then goto L3d1378;
  #L3d136c.  call temp:= `newSourceExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newSourceExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind static;
  #L3d1372.  v0:= temp @kind object;
  #L3d1374.  v14.`com.bumptech.glide.GlideBuilder.g` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v0 @kind object;
  #L3d1378.  v0:= v14.`com.bumptech.glide.GlideBuilder.h` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d137c.  if v0 != 0 then goto L3d138c;
  #L3d1380.  call temp:= `newDiskCacheExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newDiskCacheExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind static;
  #L3d1386.  v0:= temp @kind object;
  #L3d1388.  v14.`com.bumptech.glide.GlideBuilder.h` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v0 @kind object;
  #L3d138c.  v0:= v14.`com.bumptech.glide.GlideBuilder.o` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1390.  if v0 != 0 then goto L3d13a0;
  #L3d1394.  call temp:= `newAnimationExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newAnimationExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind static;
  #L3d139a.  v0:= temp @kind object;
  #L3d139c.  v14.`com.bumptech.glide.GlideBuilder.o` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v0 @kind object;
  #L3d13a0.  v0:= v14.`com.bumptech.glide.GlideBuilder.j` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` @kind object;
  #L3d13a4.  if v0 != 0 then goto L3d13be;
  #L3d13a8.  v0:= new `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder`;
  #L3d13ac.  call `<init>`(v0, v15) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L3d13b2.  call temp:= `build`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.build:()Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;` @kind virtual;
  #L3d13b8.  v0:= temp @kind object;
  #L3d13ba.  v14.`com.bumptech.glide.GlideBuilder.j` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` := v0 @kind object;
  #L3d13be.  v0:= v14.`com.bumptech.glide.GlideBuilder.k` @type ^`com.bumptech.glide.manager.ConnectivityMonitorFactory` @kind object;
  #L3d13c2.  if v0 != 0 then goto L3d13d4;
  #L3d13c6.  v0:= new `com.bumptech.glide.manager.DefaultConnectivityMonitorFactory`;
  #L3d13ca.  call `<init>`(v0) @signature `Lcom/bumptech/glide/manager/DefaultConnectivityMonitorFactory;.<init>:()V` @kind direct;
  #L3d13d0.  v14.`com.bumptech.glide.GlideBuilder.k` @type ^`com.bumptech.glide.manager.ConnectivityMonitorFactory` := v0 @kind object;
  #L3d13d4.  v0:= v14.`com.bumptech.glide.GlideBuilder.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3d13d8.  if v0 != 0 then goto L3d140c;
  #L3d13dc.  v0:= v14.`com.bumptech.glide.GlideBuilder.j` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` @kind object;
  #L3d13e0.  call temp:= `getBitmapPoolSize`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.getBitmapPoolSize:()I` @kind virtual;
  #L3d13e6.  v0:= temp;
  #L3d13e8.  if v0 <= 0 then goto L3d13fe;
  #L3d13ec.  v1:= new `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool`;
  #L3d13f0.  v2:= (`long`) v0 @kind i2l;
  #L3d13f2.  call `<init>`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(J)V` @kind direct;
  #L3d13f8.  v14.`com.bumptech.glide.GlideBuilder.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v1 @kind object;
  #L3d13fc.  goto L3d140c;
  #L3d13fe.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter`;
  #L3d1402.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter;.<init>:()V` @kind direct;
  #L3d1408.  v14.`com.bumptech.glide.GlideBuilder.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v0 @kind object;
  #L3d140c.  v0:= v14.`com.bumptech.glide.GlideBuilder.e` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3d1410.  if v0 != 0 then goto L3d142e;
  #L3d1414.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool`;
  #L3d1418.  v1:= v14.`com.bumptech.glide.GlideBuilder.j` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` @kind object;
  #L3d141c.  call temp:= `getArrayPoolSizeInBytes`(v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.getArrayPoolSizeInBytes:()I` @kind virtual;
  #L3d1422.  v1:= temp;
  #L3d1424.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.<init>:(I)V` @kind direct;
  #L3d142a.  v14.`com.bumptech.glide.GlideBuilder.e` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v0 @kind object;
  #L3d142e.  v0:= v14.`com.bumptech.glide.GlideBuilder.f` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3d1432.  if v0 != 0 then goto L3d1452;
  #L3d1436.  v0:= new `com.bumptech.glide.load.engine.cache.LruResourceCache`;
  #L3d143a.  v1:= v14.`com.bumptech.glide.GlideBuilder.j` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` @kind object;
  #L3d143e.  call temp:= `getMemoryCacheSize`(v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.getMemoryCacheSize:()I` @kind virtual;
  #L3d1444.  v1:= temp;
  #L3d1446.  v1:= (`long`) v1 @kind i2l;
  #L3d1448.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.<init>:(J)V` @kind direct;
  #L3d144e.  v14.`com.bumptech.glide.GlideBuilder.f` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` := v0 @kind object;
  #L3d1452.  v0:= v14.`com.bumptech.glide.GlideBuilder.i` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` @kind object;
  #L3d1456.  if v0 != 0 then goto L3d1468;
  #L3d145a.  v0:= new `com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory`;
  #L3d145e.  call `<init>`(v0, v15) @signature `Lcom/bumptech/glide/load/engine/cache/InternalCacheDiskCacheFactory;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L3d1464.  v14.`com.bumptech.glide.GlideBuilder.i` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` := v0 @kind object;
  #L3d1468.  v0:= v14.`com.bumptech.glide.GlideBuilder.c` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3d146c.  if v0 != 0 then goto L3d14a0;
  #L3d1470.  v0:= new `com.bumptech.glide.load.engine.Engine`;
  #L3d1474.  v2:= v14.`com.bumptech.glide.GlideBuilder.f` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3d1478.  v3:= v14.`com.bumptech.glide.GlideBuilder.i` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` @kind object;
  #L3d147c.  v4:= v14.`com.bumptech.glide.GlideBuilder.h` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1480.  v5:= v14.`com.bumptech.glide.GlideBuilder.g` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1484.  call temp:= `newUnlimitedSourceExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newUnlimitedSourceExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind static;
  #L3d148a.  v6:= temp @kind object;
  #L3d148c.  v7:= v14.`com.bumptech.glide.GlideBuilder.o` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1490.  v8:= v14.`com.bumptech.glide.GlideBuilder.p` @type ^`boolean` @kind boolean;
  #L3d1494.  v1:= v0 @kind object;
  #L3d1496.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/Engine;.<init>:(Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Z)V` @kind direct;
  #L3d149c.  v14.`com.bumptech.glide.GlideBuilder.c` @type ^`com.bumptech.glide.load.engine.Engine` := v0 @kind object;
  #L3d14a0.  v0:= v14.`com.bumptech.glide.GlideBuilder.q` @type ^`java.util.List` @kind object;
  #L3d14a4.  if v0 != 0 then goto L3d14b6;
  #L3d14a8.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3d14ae.  v0:= temp @kind object;
  #L3d14b0.  v14.`com.bumptech.glide.GlideBuilder.q` @type ^`java.util.List` := v0 @kind object;
  #L3d14b4.  goto L3d14c2;
  #L3d14b6.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3d14bc.  v0:= temp @kind object;
  #L3d14be.  v14.`com.bumptech.glide.GlideBuilder.q` @type ^`java.util.List` := v0 @kind object;
  #L3d14c2.  v0:= v14.`com.bumptech.glide.GlideBuilder.b` @type ^`com.bumptech.glide.GlideExperiments$a` @kind object;
  #L3d14c6.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/GlideExperiments$a;.c:()Lcom/bumptech/glide/GlideExperiments;` @kind virtual;
  #L3d14cc.  v13:= temp @kind object;
  #L3d14ce.  v7:= new `com.bumptech.glide.manager.RequestManagerRetriever`;
  #L3d14d2.  v0:= v14.`com.bumptech.glide.GlideBuilder.n` @type ^`com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory` @kind object;
  #L3d14d6.  call `<init>`(v7, v0, v13) @signature `Lcom/bumptech/glide/manager/RequestManagerRetriever;.<init>:(Lcom/bumptech/glide/manager/RequestManagerRetriever$RequestManagerFactory;Lcom/bumptech/glide/GlideExperiments;)V` @kind direct;
  #L3d14dc.  v0:= new `com.bumptech.glide.Glide`;
  #L3d14e0.  v3:= v14.`com.bumptech.glide.GlideBuilder.c` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3d14e4.  v4:= v14.`com.bumptech.glide.GlideBuilder.f` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3d14e8.  v5:= v14.`com.bumptech.glide.GlideBuilder.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3d14ec.  v6:= v14.`com.bumptech.glide.GlideBuilder.e` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3d14f0.  v8:= v14.`com.bumptech.glide.GlideBuilder.k` @type ^`com.bumptech.glide.manager.ConnectivityMonitorFactory` @kind object;
  #L3d14f4.  v9:= v14.`com.bumptech.glide.GlideBuilder.l` @type ^`int`;
  #L3d14f8.  v10:= v14.`com.bumptech.glide.GlideBuilder.m` @type ^`com.bumptech.glide.Glide$RequestOptionsFactory` @kind object;
  #L3d14fc.  v11:= v14.`com.bumptech.glide.GlideBuilder.a` @type ^`java.util.Map` @kind object;
  #L3d1500.  v12:= v14.`com.bumptech.glide.GlideBuilder.q` @type ^`java.util.List` @kind object;
  #L3d1504.  v1:= v0 @kind object;
  #L3d1506.  v2:= v15 @kind object;
  #L3d1508.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/bumptech/glide/Glide;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;Lcom/bumptech/glide/manager/RequestManagerRetriever;Lcom/bumptech/glide/manager/ConnectivityMonitorFactory;ILcom/bumptech/glide/Glide$RequestOptionsFactory;Ljava/util/Map;Ljava/util/List;Lcom/bumptech/glide/GlideExperiments;)V` @kind direct;
  #L3d150e.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `addGlobalRequestListener`(`com.bumptech.glide.GlideBuilder` v1 @kind this, `com.bumptech.glide.request.RequestListener` v2 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.addGlobalRequestListener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d1520.  v0:= v1.`com.bumptech.glide.GlideBuilder.q` @type ^`java.util.List` @kind object;
  #L3d1524.  if v0 != 0 then goto L3d1536;
  #L3d1528.  v0:= new `java.util.ArrayList`;
  #L3d152c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3d1532.  v1.`com.bumptech.glide.GlideBuilder.q` @type ^`java.util.List` := v0 @kind object;
  #L3d1536.  v0:= v1.`com.bumptech.glide.GlideBuilder.q` @type ^`java.util.List` @kind object;
  #L3d153a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d1540.  return v1 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.b:(Lcom/bumptech/glide/manager/RequestManagerRetriever$RequestManagerFactory;)V` @AccessFlag  {
    temp;

  #L3d17f0.  v0.`com.bumptech.glide.GlideBuilder.n` @type ^`com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory` := v1 @kind object;
  #L3d17f4.  return @kind void;
}
procedure `com.bumptech.glide.GlideBuilder` `setAnimationExecutor`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setAnimationExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d1554.  v0.`com.bumptech.glide.GlideBuilder.o` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v1 @kind object;
  #L3d1558.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setArrayPool`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setArrayPool:(Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d156c.  v0.`com.bumptech.glide.GlideBuilder.e` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v1 @kind object;
  #L3d1570.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setBitmapPool`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setBitmapPool:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d1584.  v0.`com.bumptech.glide.GlideBuilder.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v1 @kind object;
  #L3d1588.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setConnectivityMonitorFactory`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.manager.ConnectivityMonitorFactory` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setConnectivityMonitorFactory:(Lcom/bumptech/glide/manager/ConnectivityMonitorFactory;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d159c.  v0.`com.bumptech.glide.GlideBuilder.k` @type ^`com.bumptech.glide.manager.ConnectivityMonitorFactory` := v1 @kind object;
  #L3d15a0.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setDefaultRequestOptions`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.Glide$RequestOptionsFactory` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setDefaultRequestOptions:(Lcom/bumptech/glide/Glide$RequestOptionsFactory;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d15b4.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d15ba.  v1:= temp @kind object;
  #L3d15bc.  v1:= (`com.bumptech.glide.Glide$RequestOptionsFactory`) v1 @kind object;
  #L3d15c0.  v0.`com.bumptech.glide.GlideBuilder.m` @type ^`com.bumptech.glide.Glide$RequestOptionsFactory` := v1 @kind object;
  #L3d15c4.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setDefaultRequestOptions`(`com.bumptech.glide.GlideBuilder` v1 @kind this, `com.bumptech.glide.request.RequestOptions` v2 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setDefaultRequestOptions:(Lcom/bumptech/glide/request/RequestOptions;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d15d8.  v0:= new `com.bumptech.glide.GlideBuilder$b`;
  #L3d15dc.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/GlideBuilder$b;.<init>:(Lcom/bumptech/glide/GlideBuilder;Lcom/bumptech/glide/request/RequestOptions;)V` @kind direct;
  #L3d15e2.  call temp:= `setDefaultRequestOptions`(v1, v0) @signature `Lcom/bumptech/glide/GlideBuilder;.setDefaultRequestOptions:(Lcom/bumptech/glide/Glide$RequestOptionsFactory;)Lcom/bumptech/glide/GlideBuilder;` @kind virtual;
  #L3d15e8.  v2:= temp @kind object;
  #L3d15ea.  return v2 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setDefaultTransitionOptions`(`com.bumptech.glide.GlideBuilder` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.TransitionOptions` v3 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setDefaultTransitionOptions:(Ljava/lang/Class;Lcom/bumptech/glide/TransitionOptions;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d15fc.  v0:= v1.`com.bumptech.glide.GlideBuilder.a` @type ^`java.util.Map` @kind object;
  #L3d1600.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d1606.  return v1 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setDiskCache`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.cache.DiskCache$Factory` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setDiskCache:(Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d1618.  v0.`com.bumptech.glide.GlideBuilder.i` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` := v1 @kind object;
  #L3d161c.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setDiskCacheExecutor`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setDiskCacheExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d1630.  v0.`com.bumptech.glide.GlideBuilder.h` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v1 @kind object;
  #L3d1634.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setEnableImageDecoderForAnimatedWebp`(`com.bumptech.glide.GlideBuilder` v2 @kind this, `boolean` v3 ) @signature `Lcom/bumptech/glide/GlideBuilder;.setEnableImageDecoderForAnimatedWebp:(Z)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d1648.  v0:= v2.`com.bumptech.glide.GlideBuilder.b` @type ^`com.bumptech.glide.GlideExperiments$a` @kind object;
  #L3d164c.  v1:= new `com.bumptech.glide.GlideBuilder$c`;
  #L3d1650.  call `<init>`(v1) @signature `Lcom/bumptech/glide/GlideBuilder$c;.<init>:()V` @kind direct;
  #L3d1656.  call temp:= `d`(v0, v1, v3) @signature `Lcom/bumptech/glide/GlideExperiments$a;.d:(Lcom/bumptech/glide/GlideExperiments$b;Z)Lcom/bumptech/glide/GlideExperiments$a;` @kind virtual;
  #L3d165c.  return v2 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setImageDecoderEnabledForBitmaps`(`com.bumptech.glide.GlideBuilder` v3 @kind this, `boolean` v4 ) @signature `Lcom/bumptech/glide/GlideBuilder;.setImageDecoderEnabledForBitmaps:(Z)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d1670.  v0:= v3.`com.bumptech.glide.GlideBuilder.b` @type ^`com.bumptech.glide.GlideExperiments$a` @kind object;
  #L3d1674.  v1:= new `com.bumptech.glide.GlideBuilder$d`;
  #L3d1678.  call `<init>`(v1) @signature `Lcom/bumptech/glide/GlideBuilder$d;.<init>:()V` @kind direct;
  #L3d167e.  if v4 == 0 then goto L3d1692;
  #L3d1682.  v4:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d1686.  v2:= 29I;
  #L3d168a.  if v4 < v2 then goto L3d1692;
  #L3d168e.  v4:= 1I;
  #L3d1690.  goto L3d1694;
  #L3d1692.  v4:= 0I;
  #L3d1694.  call temp:= `d`(v0, v1, v4) @signature `Lcom/bumptech/glide/GlideExperiments$a;.d:(Lcom/bumptech/glide/GlideExperiments$b;Z)Lcom/bumptech/glide/GlideExperiments$a;` @kind virtual;
  #L3d169a.  return v3 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setIsActiveResourceRetentionAllowed`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `boolean` v1 ) @signature `Lcom/bumptech/glide/GlideBuilder;.setIsActiveResourceRetentionAllowed:(Z)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d16ac.  v0.`com.bumptech.glide.GlideBuilder.p` @type ^`boolean` := v1 @kind boolean;
  #L3d16b0.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setLogLevel`(`com.bumptech.glide.GlideBuilder` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/GlideBuilder;.setLogLevel:(I)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d16c4.  v0:= 2I;
  #L3d16c6.  if v2 < v0 then goto L3d16d6;
  #L3d16ca.  v0:= 6I;
  #L3d16cc.  if v2 > v0 then goto L3d16d6;
  #L3d16d0.  v1.`com.bumptech.glide.GlideBuilder.l` @type ^`int` := v2;
  #L3d16d4.  return v1 @kind object;
  #L3d16d6.  v2:= new `java.lang.IllegalArgumentException`;
  #L3d16da.  v0:= "Log level must be one of Log.VERBOSE, Log.DEBUG, Log.INFO, Log.WARN, or Log.ERROR" @kind object;
  #L3d16de.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d16e4.  throw v2;
}
procedure `com.bumptech.glide.GlideBuilder` `setLogRequestOrigins`(`com.bumptech.glide.GlideBuilder` v2 @kind this, `boolean` v3 ) @signature `Lcom/bumptech/glide/GlideBuilder;.setLogRequestOrigins:(Z)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d16f8.  v0:= v2.`com.bumptech.glide.GlideBuilder.b` @type ^`com.bumptech.glide.GlideExperiments$a` @kind object;
  #L3d16fc.  v1:= new `com.bumptech.glide.GlideBuilder$LogRequestOrigins`;
  #L3d1700.  call `<init>`(v1) @signature `Lcom/bumptech/glide/GlideBuilder$LogRequestOrigins;.<init>:()V` @kind direct;
  #L3d1706.  call temp:= `d`(v0, v1, v3) @signature `Lcom/bumptech/glide/GlideExperiments$a;.d:(Lcom/bumptech/glide/GlideExperiments$b;Z)Lcom/bumptech/glide/GlideExperiments$a;` @kind virtual;
  #L3d170c.  return v2 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setMemoryCache`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.cache.MemoryCache` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setMemoryCache:(Lcom/bumptech/glide/load/engine/cache/MemoryCache;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d1720.  v0.`com.bumptech.glide.GlideBuilder.f` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` := v1 @kind object;
  #L3d1724.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setMemorySizeCalculator`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setMemorySizeCalculator:(Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d1738.  call temp:= `build`(v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.build:()Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;` @kind virtual;
  #L3d173e.  v1:= temp @kind object;
  #L3d1740.  call temp:= `setMemorySizeCalculator`(v0, v1) @signature `Lcom/bumptech/glide/GlideBuilder;.setMemorySizeCalculator:(Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;)Lcom/bumptech/glide/GlideBuilder;` @kind virtual;
  #L3d1746.  v1:= temp @kind object;
  #L3d1748.  return v1 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setMemorySizeCalculator`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.cache.MemorySizeCalculator` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setMemorySizeCalculator:(Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d175c.  v0.`com.bumptech.glide.GlideBuilder.j` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` := v1 @kind object;
  #L3d1760.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setResizeExecutor`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setResizeExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d1774.  call temp:= `setSourceExecutor`(v0, v1) @signature `Lcom/bumptech/glide/GlideBuilder;.setSourceExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;` @kind virtual;
  #L3d177a.  v1:= temp @kind object;
  #L3d177c.  return v1 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setSourceExecutor`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setSourceExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d1790.  v0.`com.bumptech.glide.GlideBuilder.g` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v1 @kind object;
  #L3d1794.  return v0 @kind object;
}
