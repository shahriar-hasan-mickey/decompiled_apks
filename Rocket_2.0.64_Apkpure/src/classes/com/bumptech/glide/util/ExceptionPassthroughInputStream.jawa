record `com.bumptech.glide.util.ExceptionPassthroughInputStream` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.InputStream` @kind class {
  `java.io.InputStream` `com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @AccessFlag PRIVATE;
  `java.io.IOException` `com.bumptech.glide.util.ExceptionPassthroughInputStream.b` @AccessFlag PRIVATE;
}
global `java.util.Queue` `@@com.bumptech.glide.util.ExceptionPassthroughInputStream.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3fe9d0.  v0:= 0I;
  #L3fe9d2.  call temp:= `createQueue`(v0) @signature `Lcom/bumptech/glide/util/Util;.createQueue:(I)Ljava/util/Queue;` @kind static;
  #L3fe9d8.  v0:= temp @kind object;
  #L3fe9da.  `@@com.bumptech.glide.util.ExceptionPassthroughInputStream.c` @type ^`java.util.Queue` := v0 @kind object;
  #L3fe9de.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v0 @kind this) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fe9f0.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L3fe9f6.  return @kind void;
}
procedure `com.bumptech.glide.util.ExceptionPassthroughInputStream` `obtain`(`java.io.InputStream` v2 @kind object) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.obtain:(Ljava/io/InputStream;)Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fe864.  v0:= `@@com.bumptech.glide.util.ExceptionPassthroughInputStream.c` @type ^`java.util.Queue` @kind object;
  #L3fe868.  @monitorenter v0
  #L3fe86a.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L3fe870.  v1:= temp @kind object;
  #L3fe872.  v1:= (`com.bumptech.glide.util.ExceptionPassthroughInputStream`) v1 @kind object;
  #L3fe876.  @monitorexit v0
  #L3fe878.  if v1 != 0 then goto L3fe886;
  #L3fe87c.  v1:= new `com.bumptech.glide.util.ExceptionPassthroughInputStream`;
  #L3fe880.  call `<init>`(v1) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.<init>:()V` @kind direct;
  #L3fe886.  call `a`(v1, v2) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.a:(Ljava/io/InputStream;)V` @kind virtual;
  #L3fe88c.  return v1 @kind object;
  #L3fe88e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe890.  @monitorexit v0
  #L3fe892.  throw v2;
  catch `java.lang.Throwable` @[L3fe86a..L3fe878] goto L3fe88e;
  catch `java.lang.Throwable` @[L3fe890..L3fe892] goto L3fe88e;
}
procedure `void` `a`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.a:(Ljava/io/InputStream;)V` @AccessFlag  {
    temp;

  #L3feab0.  v0.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` := v1 @kind object;
  #L3feab4.  return @kind void;
}
procedure `int` `available`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe8b8.  v0:= v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` @kind object;
  #L3fe8bc.  call temp:= `available`(v0) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3fe8c2.  v0:= temp;
  #L3fe8c4.  return v0;
}
procedure `void` `close`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fea08.  v0:= v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` @kind object;
  #L3fea0c.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3fea12.  return @kind void;
}
procedure `java.io.IOException` `getException`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.getException:()Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe980.  v0:= v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.b` @type ^`java.io.IOException` @kind object;
  #L3fe984.  return v0 @kind object;
}
procedure `void` `mark`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.mark:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fea24.  v0:= v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` @kind object;
  #L3fea28.  call `mark`(v0, v2) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L3fea2e.  return @kind void;
}
procedure `boolean` `markSupported`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe844.  v0:= v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` @kind object;
  #L3fe848.  call temp:= `markSupported`(v0) @signature `Ljava/io/InputStream;.markSupported:()Z` @kind virtual;
  #L3fe84e.  v0:= temp;
  #L3fe850.  return v0;
}
procedure `int` `read`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe8d8.  v0:= v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` @kind object;
  #L3fe8dc.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3fe8e2.  v0:= temp;
  #L3fe8e4.  return v0;
  #L3fe8e6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3fe8e8.  v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.b` @type ^`java.io.IOException` := v0 @kind object;
  #L3fe8ec.  throw v0;
  catch `java.io.IOException` @[L3fe8d8..L3fe8e4] goto L3fe8e6;
}
procedure `int` `read`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe910.  v0:= v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` @kind object;
  #L3fe914.  call temp:= `read`(v0, v2) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L3fe91a.  v2:= temp;
  #L3fe91c.  return v2;
  #L3fe91e.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L3fe920.  v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.b` @type ^`java.io.IOException` := v2 @kind object;
  #L3fe924.  throw v2;
  catch `java.io.IOException` @[L3fe910..L3fe91c] goto L3fe91e;
}
procedure `int` `read`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe948.  v0:= v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` @kind object;
  #L3fe94c.  call temp:= `read`(v0, v2, v3, v4) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3fe952.  v2:= temp;
  #L3fe954.  return v2;
  #L3fe956.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L3fe958.  v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.b` @type ^`java.io.IOException` := v2 @kind object;
  #L3fe95c.  throw v2;
  catch `java.io.IOException` @[L3fe948..L3fe954] goto L3fe956;
}
procedure `void` `release`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v2 @kind this) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.release:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fea40.  v0:= 0I;
  #L3fea42.  v2.`com.bumptech.glide.util.ExceptionPassthroughInputStream.b` @type ^`java.io.IOException` := v0 @kind object;
  #L3fea46.  v2.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` := v0 @kind object;
  #L3fea4a.  v0:= `@@com.bumptech.glide.util.ExceptionPassthroughInputStream.c` @type ^`java.util.Queue` @kind object;
  #L3fea4e.  @monitorenter v0
  #L3fea50.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L3fea56.  @monitorexit v0
  #L3fea58.  return @kind void;
  #L3fea5a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fea5c.  @monitorexit v0
  #L3fea5e.  throw v1;
  catch `java.lang.Throwable` @[L3fea50..L3fea5e] goto L3fea5a;
}
procedure `void` `reset`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fea7c.  @monitorenter v1
  #L3fea7e.  v0:= v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` @kind object;
  #L3fea82.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L3fea88.  @monitorexit v1
  #L3fea8a.  return @kind void;
  #L3fea8c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fea8e.  @monitorexit v1
  #L3fea90.  throw v0;
  catch `java.lang.Throwable` @[L3fea7e..L3fea88] goto L3fea8c;
}
procedure `long` `skip`(`com.bumptech.glide.util.ExceptionPassthroughInputStream` v1 @kind this, `long` v2 ) @signature `Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe998.  v0:= v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.a` @type ^`java.io.InputStream` @kind object;
  #L3fe99c.  call temp:= `skip`(v0, v2) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L3fe9a2.  v2:= temp @kind wide;
  #L3fe9a4.  return v2 @kind wide;
  #L3fe9a6.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L3fe9a8.  v1.`com.bumptech.glide.util.ExceptionPassthroughInputStream.b` @type ^`java.io.IOException` := v2 @kind object;
  #L3fe9ac.  throw v2;
  catch `java.io.IOException` @[L3fe998..L3fe9a4] goto L3fe9a6;
}
