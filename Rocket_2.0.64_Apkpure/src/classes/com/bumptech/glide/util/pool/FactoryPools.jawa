record `com.bumptech.glide.util.pool.FactoryPools` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.bumptech.glide.util.pool.FactoryPools$Resetter` `@@com.bumptech.glide.util.pool.FactoryPools.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L400008.  v0:= new `com.bumptech.glide.util.pool.FactoryPools$a`;
  #L40000c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$a;.<init>:()V` @kind direct;
  #L400012.  `@@com.bumptech.glide.util.pool.FactoryPools.a` @type ^`com.bumptech.glide.util.pool.FactoryPools$Resetter` := v0 @kind object;
  #L400016.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.util.pool.FactoryPools` v0 @kind this) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L400028.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40002e.  return @kind void;
}
procedure `androidx.core.util.Pools$Pool` `a`(`androidx.core.util.Pools$Pool` v1 @kind object, `com.bumptech.glide.util.pool.FactoryPools$Factory` v2 @kind object) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.a:(Landroidx/core/util/Pools$Pool;Lcom/bumptech/glide/util/pool/FactoryPools$Factory;)Landroidx/core/util/Pools$Pool;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fff10.  call temp:= `c`() @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.c:()Lcom/bumptech/glide/util/pool/FactoryPools$Resetter;` @kind static;
  #L3fff16.  v0:= temp @kind object;
  #L3fff18.  call temp:= `b`(v1, v2, v0) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.b:(Landroidx/core/util/Pools$Pool;Lcom/bumptech/glide/util/pool/FactoryPools$Factory;Lcom/bumptech/glide/util/pool/FactoryPools$Resetter;)Landroidx/core/util/Pools$Pool;` @kind static;
  #L3fff1e.  v1:= temp @kind object;
  #L3fff20.  return v1 @kind object;
}
procedure `androidx.core.util.Pools$Pool` `b`(`androidx.core.util.Pools$Pool` v1 @kind object, `com.bumptech.glide.util.pool.FactoryPools$Factory` v2 @kind object, `com.bumptech.glide.util.pool.FactoryPools$Resetter` v3 @kind object) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.b:(Landroidx/core/util/Pools$Pool;Lcom/bumptech/glide/util/pool/FactoryPools$Factory;Lcom/bumptech/glide/util/pool/FactoryPools$Resetter;)Landroidx/core/util/Pools$Pool;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fff34.  v0:= new `com.bumptech.glide.util.pool.FactoryPools$d`;
  #L3fff38.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$d;.<init>:(Landroidx/core/util/Pools$Pool;Lcom/bumptech/glide/util/pool/FactoryPools$Factory;Lcom/bumptech/glide/util/pool/FactoryPools$Resetter;)V` @kind direct;
  #L3fff3e.  return v0 @kind object;
}
procedure `com.bumptech.glide.util.pool.FactoryPools$Resetter` `c`() @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.c:()Lcom/bumptech/glide/util/pool/FactoryPools$Resetter;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3ffff0.  v0:= `@@com.bumptech.glide.util.pool.FactoryPools.a` @type ^`com.bumptech.glide.util.pool.FactoryPools$Resetter` @kind object;
  #L3ffff4.  return v0 @kind object;
}
procedure `androidx.core.util.Pools$Pool` `simple`(`int` v1 , `com.bumptech.glide.util.pool.FactoryPools$Factory` v2 @kind object) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.simple:(ILcom/bumptech/glide/util/pool/FactoryPools$Factory;)Landroidx/core/util/Pools$Pool;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fff50.  v0:= new `androidx.core.util.Pools$SimplePool`;
  #L3fff54.  call `<init>`(v0, v1) @signature `Landroidx/core/util/Pools$SimplePool;.<init>:(I)V` @kind direct;
  #L3fff5a.  call temp:= `a`(v0, v2) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.a:(Landroidx/core/util/Pools$Pool;Lcom/bumptech/glide/util/pool/FactoryPools$Factory;)Landroidx/core/util/Pools$Pool;` @kind static;
  #L3fff60.  v1:= temp @kind object;
  #L3fff62.  return v1 @kind object;
}
procedure `androidx.core.util.Pools$Pool` `threadSafe`(`int` v1 , `com.bumptech.glide.util.pool.FactoryPools$Factory` v2 @kind object) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.threadSafe:(ILcom/bumptech/glide/util/pool/FactoryPools$Factory;)Landroidx/core/util/Pools$Pool;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fff74.  v0:= new `androidx.core.util.Pools$SynchronizedPool`;
  #L3fff78.  call `<init>`(v0, v1) @signature `Landroidx/core/util/Pools$SynchronizedPool;.<init>:(I)V` @kind direct;
  #L3fff7e.  call temp:= `a`(v0, v2) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.a:(Landroidx/core/util/Pools$Pool;Lcom/bumptech/glide/util/pool/FactoryPools$Factory;)Landroidx/core/util/Pools$Pool;` @kind static;
  #L3fff84.  v1:= temp @kind object;
  #L3fff86.  return v1 @kind object;
}
procedure `androidx.core.util.Pools$Pool` `threadSafeList`() @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.threadSafeList:()Landroidx/core/util/Pools$Pool;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fff98.  v0:= 20I;
  #L3fff9c.  call temp:= `threadSafeList`(v0) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.threadSafeList:(I)Landroidx/core/util/Pools$Pool;` @kind static;
  #L3fffa2.  v0:= temp @kind object;
  #L3fffa4.  return v0 @kind object;
}
procedure `androidx.core.util.Pools$Pool` `threadSafeList`(`int` v2 ) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.threadSafeList:(I)Landroidx/core/util/Pools$Pool;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fffb8.  v0:= new `androidx.core.util.Pools$SynchronizedPool`;
  #L3fffbc.  call `<init>`(v0, v2) @signature `Landroidx/core/util/Pools$SynchronizedPool;.<init>:(I)V` @kind direct;
  #L3fffc2.  v2:= new `com.bumptech.glide.util.pool.FactoryPools$b`;
  #L3fffc6.  call `<init>`(v2) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$b;.<init>:()V` @kind direct;
  #L3fffcc.  v1:= new `com.bumptech.glide.util.pool.FactoryPools$c`;
  #L3fffd0.  call `<init>`(v1) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$c;.<init>:()V` @kind direct;
  #L3fffd6.  call temp:= `b`(v0, v2, v1) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.b:(Landroidx/core/util/Pools$Pool;Lcom/bumptech/glide/util/pool/FactoryPools$Factory;Lcom/bumptech/glide/util/pool/FactoryPools$Resetter;)Landroidx/core/util/Pools$Pool;` @kind static;
  #L3fffdc.  v2:= temp @kind object;
  #L3fffde.  return v2 @kind object;
}
