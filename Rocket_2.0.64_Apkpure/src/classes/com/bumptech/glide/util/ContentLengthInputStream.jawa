record `com.bumptech.glide.util.ContentLengthInputStream` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.FilterInputStream` @kind class {
  `long` `com.bumptech.glide.util.ContentLengthInputStream.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.util.ContentLengthInputStream.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.util.ContentLengthInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `long` v2 ) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.<init>:(Ljava/io/InputStream;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3fe5a0.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3fe5a6.  v0.`com.bumptech.glide.util.ContentLengthInputStream.a` @type ^`long` := v2 @kind wide;
  #L3fe5aa.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.util.ContentLengthInputStream` v5 @kind this, `int` v6 ) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.a:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fe3d0.  if v6 < 0 then goto L3fe3e0;
  #L3fe3d4.  v0:= v5.`com.bumptech.glide.util.ContentLengthInputStream.b` @type ^`int`;
  #L3fe3d8.  v0:= v0 + v6 @kind int;
  #L3fe3da.  v5.`com.bumptech.glide.util.ContentLengthInputStream.b` @type ^`int` := v0;
  #L3fe3de.  goto L3fe3f8;
  #L3fe3e0.  v0:= v5.`com.bumptech.glide.util.ContentLengthInputStream.a` @type ^`long` @kind wide;
  #L3fe3e4.  v2:= v5.`com.bumptech.glide.util.ContentLengthInputStream.b` @type ^`int`;
  #L3fe3e8.  v2:= (`long`) v2 @kind i2l;
  #L3fe3ea.  v0:= v0 - v2 @kind long;
  #L3fe3ec.  v2:= 0L;
  #L3fe3f0.  v4:= lcmp(v0, v2);
  #L3fe3f4.  if v4 > 0 then goto L3fe3fa;
  #L3fe3f8.  return v6;
  #L3fe3fa.  v6:= new `java.io.IOException`;
  #L3fe3fe.  v0:= new `java.lang.StringBuilder`;
  #L3fe402.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fe408.  v1:= "Failed to read all expected data, expected: " @kind object;
  #L3fe40c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe412.  v1:= v5.`com.bumptech.glide.util.ContentLengthInputStream.a` @type ^`long` @kind wide;
  #L3fe416.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe41c.  v1:= ", but read: " @kind object;
  #L3fe420.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe426.  v1:= v5.`com.bumptech.glide.util.ContentLengthInputStream.b` @type ^`int`;
  #L3fe42a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe430.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fe436.  v0:= temp @kind object;
  #L3fe438.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fe43e.  throw v6;
}
procedure `int` `b`(`java.lang.String` v4 @kind object) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.b:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe450.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3fe456.  v0:= temp;
  #L3fe458.  if v0 != 0 then goto L3fe4a2;
  #L3fe45c.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3fe462.  v4:= temp;
  #L3fe464.  goto L3fe4a4;
  #L3fe466.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L3fe468.  v1:= 3I;
  #L3fe46a.  v2:= "ContentLengthStream" @kind object;
  #L3fe46e.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3fe474.  v1:= temp;
  #L3fe476.  if v1 == 0 then goto L3fe4a2;
  #L3fe47a.  v1:= new `java.lang.StringBuilder`;
  #L3fe47e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fe484.  v3:= "failed to parse content length header: " @kind object;
  #L3fe488.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe48e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe494.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fe49a.  v4:= temp @kind object;
  #L3fe49c.  call temp:= `d`(v2, v4, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3fe4a2.  v4:= -1I;
  #L3fe4a4.  return v4;
  catch `java.lang.NumberFormatException` @[L3fe45c..L3fe464] goto L3fe466;
}
procedure `java.io.InputStream` `obtain`(`java.io.InputStream` v1 @kind object, `long` v2 ) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.obtain:(Ljava/io/InputStream;J)Ljava/io/InputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fe584.  v0:= new `com.bumptech.glide.util.ContentLengthInputStream`;
  #L3fe588.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.<init>:(Ljava/io/InputStream;J)V` @kind direct;
  #L3fe58e.  return v0 @kind object;
}
procedure `java.io.InputStream` `obtain`(`java.io.InputStream` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.obtain:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/io/InputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fe560.  call temp:= `b`(v3) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.b:(Ljava/lang/String;)I` @kind static;
  #L3fe566.  v3:= temp;
  #L3fe568.  v0:= (`long`) v3 @kind i2l;
  #L3fe56a.  call temp:= `obtain`(v2, v0) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.obtain:(Ljava/io/InputStream;J)Ljava/io/InputStream;` @kind static;
  #L3fe570.  v2:= temp @kind object;
  #L3fe572.  return v2 @kind object;
}
procedure `int` `available`(`com.bumptech.glide.util.ContentLengthInputStream` v4 @kind this) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe384.  @monitorenter v4
  #L3fe386.  v0:= v4.`com.bumptech.glide.util.ContentLengthInputStream.a` @type ^`long` @kind wide;
  #L3fe38a.  v2:= v4.`com.bumptech.glide.util.ContentLengthInputStream.b` @type ^`int`;
  #L3fe38e.  v2:= (`long`) v2 @kind i2l;
  #L3fe390.  v0:= v0 - v2 @kind long;
  #L3fe392.  v2:= v4.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3fe396.  call temp:= `available`(v2) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3fe39c.  v2:= temp;
  #L3fe39e.  v2:= (`long`) v2 @kind i2l;
  #L3fe3a0.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3fe3a6.  v0:= temp @kind wide;
  #L3fe3a8.  v1:= (`int`) v0 @kind l2i;
  #L3fe3aa.  @monitorexit v4
  #L3fe3ac.  return v1;
  #L3fe3ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe3b0.  @monitorexit v4
  #L3fe3b2.  throw v0;
  catch `java.lang.Throwable` @[L3fe386..L3fe3a8] goto L3fe3ae;
}
procedure `int` `read`(`com.bumptech.glide.util.ContentLengthInputStream` v2 @kind this) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe4c8.  @monitorenter v2
  #L3fe4ca.  call temp:= `read`(v2) @signature `Ljava/io/FilterInputStream;.read:()I` @kind super;
  #L3fe4d0.  v0:= temp;
  #L3fe4d2.  if v0 < 0 then goto L3fe4da;
  #L3fe4d6.  v1:= 1I;
  #L3fe4d8.  goto L3fe4dc;
  #L3fe4da.  v1:= -1I;
  #L3fe4dc.  call temp:= `a`(v2, v1) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.a:(I)I` @kind direct;
  #L3fe4e2.  @monitorexit v2
  #L3fe4e4.  return v0;
  #L3fe4e6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe4e8.  @monitorexit v2
  #L3fe4ea.  throw v0;
  catch `java.lang.Throwable` @[L3fe4ca..L3fe4e2] goto L3fe4e6;
}
procedure `int` `read`(`com.bumptech.glide.util.ContentLengthInputStream` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe508.  v0:= length @variable v3;
  #L3fe50a.  v1:= 0I;
  #L3fe50c.  call temp:= `read`(v2, v3, v1, v0) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.read:([BII)I` @kind virtual;
  #L3fe512.  v3:= temp;
  #L3fe514.  return v3;
}
procedure `int` `read`(`com.bumptech.glide.util.ContentLengthInputStream` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;

  #L3fe528.  @monitorenter v0
  #L3fe52a.  call temp:= `read`(v0, v1, v2, v3) @signature `Ljava/io/FilterInputStream;.read:([BII)I` @kind super;
  #L3fe530.  v1:= temp;
  #L3fe532.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.a:(I)I` @kind direct;
  #L3fe538.  v1:= temp;
  #L3fe53a.  @monitorexit v0
  #L3fe53c.  return v1;
  #L3fe53e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fe540.  @monitorexit v0
  #L3fe542.  throw v1;
  catch `java.lang.Throwable` @[L3fe52a..L3fe53a] goto L3fe53e;
}
