record `com.bumptech.glide.RequestBuilder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.BaseRequestOptions` @kind class {
  `android.content.Context` `com.bumptech.glide.RequestBuilder.A` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.RequestManager` `com.bumptech.glide.RequestBuilder.B` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.RequestBuilder.C` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.Glide` `com.bumptech.glide.RequestBuilder.D` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.GlideContext` `com.bumptech.glide.RequestBuilder.E` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.TransitionOptions` `com.bumptech.glide.RequestBuilder.F` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.RequestBuilder.G` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.RequestBuilder.H` @AccessFlag PRIVATE;
  `com.bumptech.glide.RequestBuilder` `com.bumptech.glide.RequestBuilder.I` @AccessFlag PRIVATE;
  `com.bumptech.glide.RequestBuilder` `com.bumptech.glide.RequestBuilder.J` @AccessFlag PRIVATE;
  `java.lang.Float` `com.bumptech.glide.RequestBuilder.K` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.RequestBuilder.L` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.RequestBuilder.M` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.RequestBuilder.N` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.request.RequestOptions` `@@com.bumptech.glide.RequestBuilder.DOWNLOAD_ONLY_OPTIONS` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/RequestBuilder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d5678.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3d567c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3d5682.  v1:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.DATA` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3d5686.  call temp:= `diskCacheStrategy`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.diskCacheStrategy:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d568c.  v0:= temp @kind object;
  #L3d568e.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3d5692.  v1:= `@@com.bumptech.glide.Priority.LOW` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3d5696.  call temp:= `priority`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.priority:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d569c.  v0:= temp @kind object;
  #L3d569e.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3d56a2.  v1:= 1I;
  #L3d56a4.  call temp:= `skipMemoryCache`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.skipMemoryCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d56aa.  v0:= temp @kind object;
  #L3d56ac.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3d56b0.  `@@com.bumptech.glide.RequestBuilder.DOWNLOAD_ONLY_OPTIONS` @type ^`com.bumptech.glide.request.RequestOptions` := v0 @kind object;
  #L3d56b4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.Glide` v2 @kind object, `com.bumptech.glide.RequestManager` v3 @kind object, `java.lang.Class` v4 @kind object, `android.content.Context` v5 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.<init>:(Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/RequestManager;Ljava/lang/Class;Landroid/content/Context;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L3d56c8.  call `<init>`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.<init>:()V` @kind direct;
  #L3d56ce.  v0:= 1I;
  #L3d56d0.  v1.`com.bumptech.glide.RequestBuilder.L` @type ^`boolean` := v0 @kind boolean;
  #L3d56d4.  v1.`com.bumptech.glide.RequestBuilder.D` @type ^`com.bumptech.glide.Glide` := v2 @kind object;
  #L3d56d8.  v1.`com.bumptech.glide.RequestBuilder.B` @type ^`com.bumptech.glide.RequestManager` := v3 @kind object;
  #L3d56dc.  v1.`com.bumptech.glide.RequestBuilder.C` @type ^`java.lang.Class` := v4 @kind object;
  #L3d56e0.  v1.`com.bumptech.glide.RequestBuilder.A` @type ^`android.content.Context` := v5 @kind object;
  #L3d56e4.  call temp:= `c`(v3, v4) @signature `Lcom/bumptech/glide/RequestManager;.c:(Ljava/lang/Class;)Lcom/bumptech/glide/TransitionOptions;` @kind virtual;
  #L3d56ea.  v4:= temp @kind object;
  #L3d56ec.  v1.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` := v4 @kind object;
  #L3d56f0.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/Glide;.d:()Lcom/bumptech/glide/GlideContext;` @kind virtual;
  #L3d56f6.  v2:= temp @kind object;
  #L3d56f8.  v1.`com.bumptech.glide.RequestBuilder.E` @type ^`com.bumptech.glide.GlideContext` := v2 @kind object;
  #L3d56fc.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/RequestManager;.a:()Ljava/util/List;` @kind virtual;
  #L3d5702.  v2:= temp @kind object;
  #L3d5704.  call `q`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.q:(Ljava/util/List;)V` @kind direct;
  #L3d570a.  call temp:= `b`(v3) @signature `Lcom/bumptech/glide/RequestManager;.b:()Lcom/bumptech/glide/request/RequestOptions;` @kind virtual;
  #L3d5710.  v2:= temp @kind object;
  #L3d5712.  call temp:= `apply`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d5718.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.RequestBuilder` v3 @kind this, `java.lang.Class` v4 @kind object, `com.bumptech.glide.RequestBuilder` v5 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/RequestBuilder;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3d572c.  v0:= v5.`com.bumptech.glide.RequestBuilder.D` @type ^`com.bumptech.glide.Glide` @kind object;
  #L3d5730.  v1:= v5.`com.bumptech.glide.RequestBuilder.B` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L3d5734.  v2:= v5.`com.bumptech.glide.RequestBuilder.A` @type ^`android.content.Context` @kind object;
  #L3d5738.  call `<init>`(v3, v0, v1, v4, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.<init>:(Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/RequestManager;Ljava/lang/Class;Landroid/content/Context;)V` @kind direct;
  #L3d573e.  v4:= v5.`com.bumptech.glide.RequestBuilder.G` @type ^`java.lang.Object` @kind object;
  #L3d5742.  v3.`com.bumptech.glide.RequestBuilder.G` @type ^`java.lang.Object` := v4 @kind object;
  #L3d5746.  v4:= v5.`com.bumptech.glide.RequestBuilder.M` @type ^`boolean` @kind boolean;
  #L3d574a.  v3.`com.bumptech.glide.RequestBuilder.M` @type ^`boolean` := v4 @kind boolean;
  #L3d574e.  call temp:= `apply`(v3, v5) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d5754.  return @kind void;
}
procedure `com.bumptech.glide.request.Request` `l`(`com.bumptech.glide.RequestBuilder` v11 @kind this, `com.bumptech.glide.request.target.Target` v12 @kind object, `com.bumptech.glide.request.RequestListener` v13 @kind object, `com.bumptech.glide.request.BaseRequestOptions` v14 @kind object, `java.util.concurrent.Executor` v15 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.l:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3d4f80.  v1:= new `java.lang.Object`;
  #L3d4f84.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d4f8a.  v5:= v11.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` @kind object;
  #L3d4f8e.  call temp:= `getPriority`(v14) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPriority:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3d4f94.  v6:= temp @kind object;
  #L3d4f96.  call temp:= `getOverrideWidth`(v14) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @kind virtual;
  #L3d4f9c.  v7:= temp;
  #L3d4f9e.  call temp:= `getOverrideHeight`(v14) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @kind virtual;
  #L3d4fa4.  v8:= temp;
  #L3d4fa6.  v4:= 0I;
  #L3d4fa8.  v0:= v11 @kind object;
  #L3d4faa.  v2:= v12 @kind object;
  #L3d4fac.  v3:= v13 @kind object;
  #L3d4fae.  v9:= v14 @kind object;
  #L3d4fb0.  v10:= v15 @kind object;
  #L3d4fb2.  call temp:= `m`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.m:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3d4fb8.  v12:= temp @kind object;
  #L3d4fba.  return v12 @kind object;
}
procedure `com.bumptech.glide.request.Request` `m`(`com.bumptech.glide.RequestBuilder` v23 @kind this, `java.lang.Object` v24 @kind object, `com.bumptech.glide.request.target.Target` v25 @kind object, `com.bumptech.glide.request.RequestListener` v26 @kind object, `com.bumptech.glide.request.RequestCoordinator` v27 @kind object, `com.bumptech.glide.TransitionOptions` v28 @kind object, `com.bumptech.glide.Priority` v29 @kind object, `int` v30 , `int` v31 , `com.bumptech.glide.request.BaseRequestOptions` v32 @kind object, `java.util.concurrent.Executor` v33 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.m:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L3d4fcc.  v11:= v23 @kind object;
  #L3d4fd0.  v0:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d4fd4.  if v0 == 0 then goto L3d4ff0;
  #L3d4fd8.  v0:= new `com.bumptech.glide.request.ErrorRequestCoordinator`;
  #L3d4fdc.  v13:= v24 @kind object;
  #L3d4fe0.  v1:= v27 @kind object;
  #L3d4fe4.  call `<init>`(v0, v13, v1) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L3d4fea.  v4:= v0 @kind object;
  #L3d4fec.  v15:= v4 @kind object;
  #L3d4fee.  goto L3d4ffe;
  #L3d4ff0.  v13:= v24 @kind object;
  #L3d4ff4.  v1:= v27 @kind object;
  #L3d4ff8.  v0:= 0I;
  #L3d4ffa.  v15:= v0 @kind object;
  #L3d4ffc.  v4:= v1 @kind object;
  #L3d4ffe.  v0:= v23 @kind object;
  #L3d5002.  v1:= v24 @kind object;
  #L3d5006.  v2:= v25 @kind object;
  #L3d500a.  v3:= v26 @kind object;
  #L3d500e.  v5:= v28 @kind object;
  #L3d5012.  v6:= v29 @kind object;
  #L3d5016.  v7:= v30;
  #L3d501a.  v8:= v31;
  #L3d501e.  v9:= v32 @kind object;
  #L3d5022.  v10:= v33 @kind object;
  #L3d5026.  call temp:= `n`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.n:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3d502c.  v0:= temp @kind object;
  #L3d502e.  if v15 != 0 then goto L3d5034;
  #L3d5032.  return v0 @kind object;
  #L3d5034.  v1:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d5038.  call temp:= `getOverrideWidth`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @kind virtual;
  #L3d503e.  v1:= temp;
  #L3d5040.  v2:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d5044.  call temp:= `getOverrideHeight`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @kind virtual;
  #L3d504a.  v2:= temp;
  #L3d504c.  call temp:= `isValidDimensions`(v30, v31) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L3d5052.  v3:= temp;
  #L3d5054.  if v3 == 0 then goto L3d5078;
  #L3d5058.  v3:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d505c.  call temp:= `isValidOverride`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isValidOverride:()Z` @kind virtual;
  #L3d5062.  v3:= temp;
  #L3d5064.  if v3 != 0 then goto L3d5078;
  #L3d5068.  call temp:= `getOverrideWidth`(v32) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @kind virtual;
  #L3d506e.  v1:= temp;
  #L3d5070.  call temp:= `getOverrideHeight`(v32) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @kind virtual;
  #L3d5076.  v2:= temp;
  #L3d5078.  v19:= v1;
  #L3d507c.  v20:= v2;
  #L3d5080.  v12:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d5084.  v1:= v12.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` @kind object;
  #L3d5088.  call temp:= `getPriority`(v12) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPriority:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3d508e.  v18:= temp @kind object;
  #L3d5090.  v2:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d5094.  v13:= v24 @kind object;
  #L3d5098.  v14:= v25 @kind object;
  #L3d509c.  v3:= v15 @kind object;
  #L3d509e.  v15:= v26 @kind object;
  #L3d50a2.  v16:= v3 @kind object;
  #L3d50a6.  v17:= v1 @kind object;
  #L3d50aa.  v21:= v2 @kind object;
  #L3d50ae.  v22:= v33 @kind object;
  #L3d50b2.  call temp:= `m`(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22) @signature `Lcom/bumptech/glide/RequestBuilder;.m:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3d50b8.  v1:= temp @kind object;
  #L3d50ba.  call `setRequests`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L3d50c0.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.Request` `n`(`com.bumptech.glide.RequestBuilder` v18 @kind this, `java.lang.Object` v19 @kind object, `com.bumptech.glide.request.target.Target` v20 @kind object, `com.bumptech.glide.request.RequestListener` v21 @kind object, `com.bumptech.glide.request.RequestCoordinator` v22 @kind object, `com.bumptech.glide.TransitionOptions` v23 @kind object, `com.bumptech.glide.Priority` v24 @kind object, `int` v25 , `int` v26 , `com.bumptech.glide.request.BaseRequestOptions` v27 @kind object, `java.util.concurrent.Executor` v28 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.n:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L3d50d4.  v11:= v18 @kind object;
  #L3d50d8.  v12:= v19 @kind object;
  #L3d50dc.  v5:= v22 @kind object;
  #L3d50e0.  v13:= v24 @kind object;
  #L3d50e4.  v0:= v11.`com.bumptech.glide.RequestBuilder.I` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d50e8.  if v0 == 0 then goto L3d51fc;
  #L3d50ec.  v1:= v11.`com.bumptech.glide.RequestBuilder.N` @type ^`boolean` @kind boolean;
  #L3d50f0.  if v1 != 0 then goto L3d51ec;
  #L3d50f4.  v1:= v0.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` @kind object;
  #L3d50f8.  v2:= v0.`com.bumptech.glide.RequestBuilder.L` @type ^`boolean` @kind boolean;
  #L3d50fc.  if v2 == 0 then goto L3d5106;
  #L3d5100.  v14:= v23 @kind object;
  #L3d5104.  goto L3d5108;
  #L3d5106.  v14:= v1 @kind object;
  #L3d5108.  call temp:= `isPrioritySet`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isPrioritySet:()Z` @kind virtual;
  #L3d510e.  v0:= temp;
  #L3d5110.  if v0 == 0 then goto L3d5122;
  #L3d5114.  v0:= v11.`com.bumptech.glide.RequestBuilder.I` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d5118.  call temp:= `getPriority`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPriority:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3d511e.  v0:= temp @kind object;
  #L3d5120.  goto L3d512a;
  #L3d5122.  call temp:= `p`(v11, v13) @signature `Lcom/bumptech/glide/RequestBuilder;.p:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @kind direct;
  #L3d5128.  v0:= temp @kind object;
  #L3d512a.  v15:= v0 @kind object;
  #L3d512c.  v0:= v11.`com.bumptech.glide.RequestBuilder.I` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d5130.  call temp:= `getOverrideWidth`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @kind virtual;
  #L3d5136.  v0:= temp;
  #L3d5138.  v1:= v11.`com.bumptech.glide.RequestBuilder.I` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d513c.  call temp:= `getOverrideHeight`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @kind virtual;
  #L3d5142.  v1:= temp;
  #L3d5144.  call temp:= `isValidDimensions`(v25, v26) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L3d514a.  v2:= temp;
  #L3d514c.  if v2 == 0 then goto L3d5170;
  #L3d5150.  v2:= v11.`com.bumptech.glide.RequestBuilder.I` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d5154.  call temp:= `isValidOverride`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isValidOverride:()Z` @kind virtual;
  #L3d515a.  v2:= temp;
  #L3d515c.  if v2 != 0 then goto L3d5170;
  #L3d5160.  call temp:= `getOverrideWidth`(v27) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @kind virtual;
  #L3d5166.  v0:= temp;
  #L3d5168.  call temp:= `getOverrideHeight`(v27) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @kind virtual;
  #L3d516e.  v1:= temp;
  #L3d5170.  v16:= v0;
  #L3d5174.  v17:= v1;
  #L3d5178.  v10:= new `com.bumptech.glide.request.ThumbnailRequestCoordinator`;
  #L3d517c.  call `<init>`(v10, v12, v5) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L3d5182.  v0:= v18 @kind object;
  #L3d5186.  v1:= v19 @kind object;
  #L3d518a.  v2:= v20 @kind object;
  #L3d518e.  v3:= v21 @kind object;
  #L3d5192.  v4:= v27 @kind object;
  #L3d5196.  v5:= v10 @kind object;
  #L3d5198.  v6:= v23 @kind object;
  #L3d519c.  v7:= v24 @kind object;
  #L3d51a0.  v8:= v25;
  #L3d51a4.  v9:= v26;
  #L3d51a8.  v13:= v10 @kind object;
  #L3d51aa.  v10:= v28 @kind object;
  #L3d51ae.  call temp:= `v`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.v:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3d51b4.  v10:= temp @kind object;
  #L3d51b6.  v0:= 1I;
  #L3d51b8.  v11.`com.bumptech.glide.RequestBuilder.N` @type ^`boolean` := v0 @kind boolean;
  #L3d51bc.  v9:= v11.`com.bumptech.glide.RequestBuilder.I` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d51c0.  v0:= v9 @kind object;
  #L3d51c2.  v4:= v13 @kind object;
  #L3d51c4.  v5:= v14 @kind object;
  #L3d51c6.  v6:= v15 @kind object;
  #L3d51c8.  v7:= v16;
  #L3d51cc.  v8:= v17;
  #L3d51d0.  v12:= v10 @kind object;
  #L3d51d2.  v10:= v28 @kind object;
  #L3d51d6.  call temp:= `m`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.m:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3d51dc.  v0:= temp @kind object;
  #L3d51de.  v1:= 0I;
  #L3d51e0.  v11.`com.bumptech.glide.RequestBuilder.N` @type ^`boolean` := v1 @kind boolean;
  #L3d51e4.  call `setRequests`(v13, v12, v0) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L3d51ea.  return v13 @kind object;
  #L3d51ec.  v0:= new `java.lang.IllegalStateException`;
  #L3d51f0.  v1:= "You cannot use a request as both the main request and a thumbnail, consider using clone() on the request(s) passed to thumbnail()" @kind object;
  #L3d51f4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d51fa.  throw v0;
  #L3d51fc.  v0:= v11.`com.bumptech.glide.RequestBuilder.K` @type ^`java.lang.Float` @kind object;
  #L3d5200.  if v0 == 0 then goto L3d527c;
  #L3d5204.  v14:= new `com.bumptech.glide.request.ThumbnailRequestCoordinator`;
  #L3d5208.  call `<init>`(v14, v12, v5) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L3d520e.  v0:= v18 @kind object;
  #L3d5212.  v1:= v19 @kind object;
  #L3d5216.  v2:= v20 @kind object;
  #L3d521a.  v3:= v21 @kind object;
  #L3d521e.  v4:= v27 @kind object;
  #L3d5222.  v5:= v14 @kind object;
  #L3d5224.  v6:= v23 @kind object;
  #L3d5228.  v7:= v24 @kind object;
  #L3d522c.  v8:= v25;
  #L3d5230.  v9:= v26;
  #L3d5234.  v10:= v28 @kind object;
  #L3d5238.  call temp:= `v`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.v:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3d523e.  v15:= temp @kind object;
  #L3d5240.  call temp:= `clone`(v27) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d5246.  v0:= temp @kind object;
  #L3d5248.  v1:= v11.`com.bumptech.glide.RequestBuilder.K` @type ^`java.lang.Float` @kind object;
  #L3d524c.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3d5252.  v1:= temp;
  #L3d5254.  call temp:= `sizeMultiplier`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.sizeMultiplier:(F)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d525a.  v4:= temp @kind object;
  #L3d525c.  call temp:= `p`(v11, v13) @signature `Lcom/bumptech/glide/RequestBuilder;.p:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @kind direct;
  #L3d5262.  v7:= temp @kind object;
  #L3d5264.  v0:= v18 @kind object;
  #L3d5268.  v1:= v19 @kind object;
  #L3d526c.  call temp:= `v`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.v:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3d5272.  v0:= temp @kind object;
  #L3d5274.  call `setRequests`(v14, v15, v0) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L3d527a.  return v14 @kind object;
  #L3d527c.  v0:= v18 @kind object;
  #L3d5280.  v1:= v19 @kind object;
  #L3d5284.  v2:= v20 @kind object;
  #L3d5288.  v3:= v21 @kind object;
  #L3d528c.  v4:= v27 @kind object;
  #L3d5290.  v5:= v22 @kind object;
  #L3d5294.  v6:= v23 @kind object;
  #L3d5298.  v7:= v24 @kind object;
  #L3d529c.  v8:= v25;
  #L3d52a0.  v9:= v26;
  #L3d52a4.  v10:= v28 @kind object;
  #L3d52a8.  call temp:= `v`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.v:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3d52ae.  v0:= temp @kind object;
  #L3d52b0.  return v0 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `o`(`com.bumptech.glide.RequestBuilder` v2 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.o:()Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d4a30.  call temp:= `clone`(v2) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4a36.  v0:= temp @kind object;
  #L3d4a38.  v1:= 0I;
  #L3d4a3a.  call temp:= `error`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.error:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4a40.  v0:= temp @kind object;
  #L3d4a42.  call temp:= `thumbnail`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4a48.  v0:= temp @kind object;
  #L3d4a4a.  return v0 @kind object;
}
procedure `com.bumptech.glide.Priority` `p`(`com.bumptech.glide.RequestBuilder` v2 @kind this, `com.bumptech.glide.Priority` v3 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.p:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d48b8.  v0:= `@@com.bumptech.glide.RequestBuilder$a.b` @type ^`int`[] @kind object;
  #L3d48bc.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3d48c2.  v3:= temp;
  #L3d48c4.  v3:= v0[v3];
  #L3d48c8.  v0:= 1I;
  #L3d48ca.  if v3 == v0 then goto L3d4924;
  #L3d48ce.  v0:= 2I;
  #L3d48d0.  if v3 == v0 then goto L3d491e;
  #L3d48d4.  v0:= 3I;
  #L3d48d6.  if v3 == v0 then goto L3d4918;
  #L3d48da.  v0:= 4I;
  #L3d48dc.  if v3 != v0 then goto L3d48e2;
  #L3d48e0.  goto L3d4918;
  #L3d48e2.  v3:= new `java.lang.IllegalArgumentException`;
  #L3d48e6.  v0:= new `java.lang.StringBuilder`;
  #L3d48ea.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d48f0.  v1:= "unknown priority: " @kind object;
  #L3d48f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d48fa.  call temp:= `getPriority`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPriority:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3d4900.  v1:= temp @kind object;
  #L3d4902.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4908.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d490e.  v0:= temp @kind object;
  #L3d4910.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d4916.  throw v3;
  #L3d4918.  v3:= `@@com.bumptech.glide.Priority.IMMEDIATE` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3d491c.  return v3 @kind object;
  #L3d491e.  v3:= `@@com.bumptech.glide.Priority.HIGH` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3d4922.  return v3 @kind object;
  #L3d4924.  v3:= `@@com.bumptech.glide.Priority.NORMAL` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3d4928.  return v3 @kind object;
}
procedure `void` `q`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.q:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5768.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d576e.  v2:= temp @kind object;
  #L3d5770.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d5776.  v0:= temp;
  #L3d5778.  if v0 == 0 then goto L3d5790;
  #L3d577c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d5782.  v0:= temp @kind object;
  #L3d5784.  v0:= (`com.bumptech.glide.request.RequestListener`) v0 @kind object;
  #L3d5788.  call temp:= `addListener`(v1, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.addListener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d578e.  goto L3d5770;
  #L3d5790.  return @kind void;
}
procedure `com.bumptech.glide.request.target.Target` `r`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.request.target.Target` v2 @kind object, `com.bumptech.glide.request.RequestListener` v3 @kind object, `com.bumptech.glide.request.BaseRequestOptions` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.r:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5374.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d537a.  v0:= v1.`com.bumptech.glide.RequestBuilder.M` @type ^`boolean` @kind boolean;
  #L3d537e.  if v0 == 0 then goto L3d53e6;
  #L3d5382.  call temp:= `l`(v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/RequestBuilder;.l:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3d5388.  v3:= temp @kind object;
  #L3d538a.  call temp:= `getRequest`(v2) @signature `Lcom/bumptech/glide/request/target/Target;.getRequest:()Lcom/bumptech/glide/request/Request;` @kind interface;
  #L3d5390.  v5:= temp @kind object;
  #L3d5392.  call temp:= `isEquivalentTo`(v3, v5) @signature `Lcom/bumptech/glide/request/Request;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3d5398.  v0:= temp;
  #L3d539a.  if v0 == 0 then goto L3d53ca;
  #L3d539e.  call temp:= `t`(v1, v4, v5) @signature `Lcom/bumptech/glide/RequestBuilder;.t:(Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/Request;)Z` @kind direct;
  #L3d53a4.  v4:= temp;
  #L3d53a6.  if v4 != 0 then goto L3d53ca;
  #L3d53aa.  call temp:= `checkNotNull`(v5) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d53b0.  v3:= temp @kind object;
  #L3d53b2.  v3:= (`com.bumptech.glide.request.Request`) v3 @kind object;
  #L3d53b6.  call temp:= `isRunning`(v3) @signature `Lcom/bumptech/glide/request/Request;.isRunning:()Z` @kind interface;
  #L3d53bc.  v3:= temp;
  #L3d53be.  if v3 != 0 then goto L3d53c8;
  #L3d53c2.  call `begin`(v5) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3d53c8.  return v2 @kind object;
  #L3d53ca.  v4:= v1.`com.bumptech.glide.RequestBuilder.B` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L3d53ce.  call `clear`(v4, v2) @signature `Lcom/bumptech/glide/RequestManager;.clear:(Lcom/bumptech/glide/request/target/Target;)V` @kind virtual;
  #L3d53d4.  call `setRequest`(v2, v3) @signature `Lcom/bumptech/glide/request/target/Target;.setRequest:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3d53da.  v4:= v1.`com.bumptech.glide.RequestBuilder.B` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L3d53de.  call `d`(v4, v2, v3) @signature `Lcom/bumptech/glide/RequestManager;.d:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L3d53e4.  return v2 @kind object;
  #L3d53e6.  v2:= new `java.lang.IllegalArgumentException`;
  #L3d53ea.  v3:= "You must call #load() before calling #into()" @kind object;
  #L3d53ee.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d53f4.  throw v2;
}
procedure `boolean` `t`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.request.BaseRequestOptions` v1 @kind object, `com.bumptech.glide.request.Request` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.t:(Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PRIVATE {
    temp;

  #L3d4888.  call temp:= `isMemoryCacheable`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isMemoryCacheable:()Z` @kind virtual;
  #L3d488e.  v1:= temp;
  #L3d4890.  if v1 != 0 then goto L3d48a4;
  #L3d4894.  call temp:= `isComplete`(v2) @signature `Lcom/bumptech/glide/request/Request;.isComplete:()Z` @kind interface;
  #L3d489a.  v1:= temp;
  #L3d489c.  if v1 == 0 then goto L3d48a4;
  #L3d48a0.  v1:= 1I;
  #L3d48a2.  goto L3d48a6;
  #L3d48a4.  v1:= 0I;
  #L3d48a6.  return v1;
}
procedure `com.bumptech.glide.RequestBuilder` `u`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d4cc0.  call temp:= `isAutoCloneEnabled`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isAutoCloneEnabled:()Z` @kind virtual;
  #L3d4cc6.  v0:= temp;
  #L3d4cc8.  if v0 == 0 then goto L3d4cde;
  #L3d4ccc.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4cd2.  v0:= temp @kind object;
  #L3d4cd4.  call temp:= `u`(v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4cda.  v2:= temp @kind object;
  #L3d4cdc.  return v2 @kind object;
  #L3d4cde.  v1.`com.bumptech.glide.RequestBuilder.G` @type ^`java.lang.Object` := v2 @kind object;
  #L3d4ce2.  v2:= 1I;
  #L3d4ce4.  v1.`com.bumptech.glide.RequestBuilder.M` @type ^`boolean` := v2 @kind boolean;
  #L3d4ce8.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d4cee.  v2:= temp @kind object;
  #L3d4cf0.  v2:= (`com.bumptech.glide.RequestBuilder`) v2 @kind object;
  #L3d4cf4.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.Request` `v`(`com.bumptech.glide.RequestBuilder` v17 @kind this, `java.lang.Object` v18 @kind object, `com.bumptech.glide.request.target.Target` v19 @kind object, `com.bumptech.glide.request.RequestListener` v20 @kind object, `com.bumptech.glide.request.BaseRequestOptions` v21 @kind object, `com.bumptech.glide.request.RequestCoordinator` v22 @kind object, `com.bumptech.glide.TransitionOptions` v23 @kind object, `com.bumptech.glide.Priority` v24 @kind object, `int` v25 , `int` v26 , `java.util.concurrent.Executor` v27 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.v:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3d52c4.  v0:= v17 @kind object;
  #L3d52c8.  v1:= v0.`com.bumptech.glide.RequestBuilder.A` @type ^`android.content.Context` @kind object;
  #L3d52cc.  v2:= v0.`com.bumptech.glide.RequestBuilder.E` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3d52d0.  v4:= v0.`com.bumptech.glide.RequestBuilder.G` @type ^`java.lang.Object` @kind object;
  #L3d52d4.  v5:= v0.`com.bumptech.glide.RequestBuilder.C` @type ^`java.lang.Class` @kind object;
  #L3d52d8.  v12:= v0.`com.bumptech.glide.RequestBuilder.H` @type ^`java.util.List` @kind object;
  #L3d52dc.  call temp:= `getEngine`(v2) @signature `Lcom/bumptech/glide/GlideContext;.getEngine:()Lcom/bumptech/glide/load/engine/Engine;` @kind virtual;
  #L3d52e2.  v14:= temp @kind object;
  #L3d52e4.  call temp:= `a`(v23) @signature `Lcom/bumptech/glide/TransitionOptions;.a:()Lcom/bumptech/glide/request/transition/TransitionFactory;` @kind virtual;
  #L3d52ea.  v15:= temp @kind object;
  #L3d52ec.  v3:= v18 @kind object;
  #L3d52f0.  v6:= v21 @kind object;
  #L3d52f4.  v7:= v25;
  #L3d52f8.  v8:= v26;
  #L3d52fc.  v9:= v24 @kind object;
  #L3d5300.  v10:= v19 @kind object;
  #L3d5304.  v11:= v20 @kind object;
  #L3d5308.  v13:= v22 @kind object;
  #L3d530c.  v16:= v27 @kind object;
  #L3d5310.  call temp:= `obtain`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/bumptech/glide/request/SingleRequest;.obtain:(Landroid/content/Context;Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/BaseRequestOptions;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/List;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/request/transition/TransitionFactory;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/SingleRequest;` @kind static;
  #L3d5316.  v1:= temp @kind object;
  #L3d5318.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `addListener`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.request.RequestListener` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.addListener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d493c.  call temp:= `isAutoCloneEnabled`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isAutoCloneEnabled:()Z` @kind virtual;
  #L3d4942.  v0:= temp;
  #L3d4944.  if v0 == 0 then goto L3d495a;
  #L3d4948.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d494e.  v0:= temp @kind object;
  #L3d4950.  call temp:= `addListener`(v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.addListener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4956.  v2:= temp @kind object;
  #L3d4958.  return v2 @kind object;
  #L3d495a.  if v2 == 0 then goto L3d497e;
  #L3d495e.  v0:= v1.`com.bumptech.glide.RequestBuilder.H` @type ^`java.util.List` @kind object;
  #L3d4962.  if v0 != 0 then goto L3d4974;
  #L3d4966.  v0:= new `java.util.ArrayList`;
  #L3d496a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3d4970.  v1.`com.bumptech.glide.RequestBuilder.H` @type ^`java.util.List` := v0 @kind object;
  #L3d4974.  v0:= v1.`com.bumptech.glide.RequestBuilder.H` @type ^`java.util.List` @kind object;
  #L3d4978.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d497e.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d4984.  v2:= temp @kind object;
  #L3d4986.  v2:= (`com.bumptech.glide.RequestBuilder`) v2 @kind object;
  #L3d498a.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `apply`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.request.BaseRequestOptions` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d499c.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d49a2.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind super;
  #L3d49a8.  v1:= temp @kind object;
  #L3d49aa.  v1:= (`com.bumptech.glide.RequestBuilder`) v1 @kind object;
  #L3d49ae.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `apply`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.request.BaseRequestOptions` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d4eb8.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4ebe.  v1:= temp @kind object;
  #L3d4ec0.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `clone`(`com.bumptech.glide.RequestBuilder` v3 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d49c0.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind super;
  #L3d49c6.  v0:= temp @kind object;
  #L3d49c8.  v0:= (`com.bumptech.glide.RequestBuilder`) v0 @kind object;
  #L3d49cc.  v1:= v0.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` @kind object;
  #L3d49d0.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/TransitionOptions;.clone:()Lcom/bumptech/glide/TransitionOptions;` @kind virtual;
  #L3d49d6.  v1:= temp @kind object;
  #L3d49d8.  v0.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` := v1 @kind object;
  #L3d49dc.  v1:= v0.`com.bumptech.glide.RequestBuilder.H` @type ^`java.util.List` @kind object;
  #L3d49e0.  if v1 == 0 then goto L3d49f6;
  #L3d49e4.  v1:= new `java.util.ArrayList`;
  #L3d49e8.  v2:= v0.`com.bumptech.glide.RequestBuilder.H` @type ^`java.util.List` @kind object;
  #L3d49ec.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3d49f2.  v0.`com.bumptech.glide.RequestBuilder.H` @type ^`java.util.List` := v1 @kind object;
  #L3d49f6.  v1:= v0.`com.bumptech.glide.RequestBuilder.I` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d49fa.  if v1 == 0 then goto L3d4a0a;
  #L3d49fe.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4a04.  v1:= temp @kind object;
  #L3d4a06.  v0.`com.bumptech.glide.RequestBuilder.I` @type ^`com.bumptech.glide.RequestBuilder` := v1 @kind object;
  #L3d4a0a.  v1:= v0.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3d4a0e.  if v1 == 0 then goto L3d4a1e;
  #L3d4a12.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4a18.  v1:= temp @kind object;
  #L3d4a1a.  v0.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` := v1 @kind object;
  #L3d4a1e.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `clone`(`com.bumptech.glide.RequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3d4ed4.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4eda.  v0:= temp @kind object;
  #L3d4edc.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.RequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3d5560.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d5566.  v0:= temp @kind object;
  #L3d5568.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.FutureTarget` `downloadOnly`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/RequestBuilder;.downloadOnly:(II)Lcom/bumptech/glide/request/FutureTarget;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4ef0.  call temp:= `getDownloadOnlyRequest`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.getDownloadOnlyRequest:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4ef6.  v0:= temp @kind object;
  #L3d4ef8.  call temp:= `submit`(v0, v2, v3) @signature `Lcom/bumptech/glide/RequestBuilder;.submit:(II)Lcom/bumptech/glide/request/FutureTarget;` @kind virtual;
  #L3d4efe.  v2:= temp @kind object;
  #L3d4f00.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `downloadOnly`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.request.target.Target` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.downloadOnly:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d532c.  call temp:= `getDownloadOnlyRequest`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.getDownloadOnlyRequest:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d5332.  v0:= temp @kind object;
  #L3d5334.  call temp:= `into`(v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3d533a.  v2:= temp @kind object;
  #L3d533c.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `error`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.RequestBuilder` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.error:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4a5c.  call temp:= `isAutoCloneEnabled`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isAutoCloneEnabled:()Z` @kind virtual;
  #L3d4a62.  v0:= temp;
  #L3d4a64.  if v0 == 0 then goto L3d4a7a;
  #L3d4a68.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4a6e.  v0:= temp @kind object;
  #L3d4a70.  call temp:= `error`(v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.error:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4a76.  v2:= temp @kind object;
  #L3d4a78.  return v2 @kind object;
  #L3d4a7a.  v1.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` := v2 @kind object;
  #L3d4a7e.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d4a84.  v2:= temp @kind object;
  #L3d4a86.  v2:= (`com.bumptech.glide.RequestBuilder`) v2 @kind object;
  #L3d4a8a.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `error`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.error:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4a9c.  if v2 != 0 then goto L3d4aac;
  #L3d4aa0.  v2:= 0I;
  #L3d4aa2.  call temp:= `error`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.error:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4aa8.  v2:= temp @kind object;
  #L3d4aaa.  return v2 @kind object;
  #L3d4aac.  call temp:= `o`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.o:()Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4ab2.  v0:= temp @kind object;
  #L3d4ab4.  call temp:= `load`(v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4aba.  v2:= temp @kind object;
  #L3d4abc.  call temp:= `error`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.error:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4ac2.  v2:= temp @kind object;
  #L3d4ac4.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `getDownloadOnlyRequest`(`com.bumptech.glide.RequestBuilder` v2 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.getDownloadOnlyRequest:()Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3d4ad8.  v0:= new `com.bumptech.glide.RequestBuilder`;
  #L3d4adc.  v1:= constclass @type ^`java.io.File` @kind object;
  #L3d4ae0.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/RequestBuilder;)V` @kind direct;
  #L3d4ae6.  v1:= `@@com.bumptech.glide.RequestBuilder.DOWNLOAD_ONLY_OPTIONS` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3d4aea.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4af0.  v0:= temp @kind object;
  #L3d4af2.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.FutureTarget` `into`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(II)Lcom/bumptech/glide/request/FutureTarget;` @AccessFlag PUBLIC {
    temp;

  #L3d4f14.  call temp:= `submit`(v0, v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.submit:(II)Lcom/bumptech/glide/request/FutureTarget;` @kind virtual;
  #L3d4f1a.  v1:= temp @kind object;
  #L3d4f1c.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `into`(`com.bumptech.glide.RequestBuilder` v2 @kind this, `com.bumptech.glide.request.target.Target` v3 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d5350.  call temp:= `mainThreadExecutor`() @signature `Lcom/bumptech/glide/util/Executors;.mainThreadExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L3d5356.  v0:= temp @kind object;
  #L3d5358.  v1:= 0I;
  #L3d535a.  call temp:= `s`(v2, v3, v1, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.s:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3d5360.  v3:= temp @kind object;
  #L3d5362.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.target.ViewTarget` `into`(`com.bumptech.glide.RequestBuilder` v3 @kind this, `android.widget.ImageView` v4 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(Landroid/widget/ImageView;)Lcom/bumptech/glide/request/target/ViewTarget;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d546c.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L3d5472.  call temp:= `checkNotNull`(v4) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d5478.  call temp:= `isTransformationSet`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationSet:()Z` @kind virtual;
  #L3d547e.  v0:= temp;
  #L3d5480.  if v0 != 0 then goto L3d5504;
  #L3d5484.  call temp:= `isTransformationAllowed`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationAllowed:()Z` @kind virtual;
  #L3d548a.  v0:= temp;
  #L3d548c.  if v0 == 0 then goto L3d5504;
  #L3d5490.  call temp:= `getScaleType`(v4) @signature `Landroid/widget/ImageView;.getScaleType:()Landroid/widget/ImageView$ScaleType;` @kind virtual;
  #L3d5496.  v0:= temp @kind object;
  #L3d5498.  if v0 == 0 then goto L3d5504;
  #L3d549c.  v0:= `@@com.bumptech.glide.RequestBuilder$a.a` @type ^`int`[] @kind object;
  #L3d54a0.  call temp:= `getScaleType`(v4) @signature `Landroid/widget/ImageView;.getScaleType:()Landroid/widget/ImageView$ScaleType;` @kind virtual;
  #L3d54a6.  v1:= temp @kind object;
  #L3d54a8.  call temp:= `ordinal`(v1) @signature `Landroid/widget/ImageView$ScaleType;.ordinal:()I` @kind virtual;
  #L3d54ae.  v1:= temp;
  #L3d54b0.  v0:= v0[v1];
  #L3d54b4.  goto L3d5530;
  #L3d54ba.  goto L3d5504;
  #L3d54bc.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d54c2.  v0:= temp @kind object;
  #L3d54c4.  call temp:= `optionalCenterInside`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCenterInside:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d54ca.  v0:= temp @kind object;
  #L3d54cc.  goto L3d5506;
  #L3d54ce.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d54d4.  v0:= temp @kind object;
  #L3d54d6.  call temp:= `optionalFitCenter`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalFitCenter:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d54dc.  v0:= temp @kind object;
  #L3d54de.  goto L3d5506;
  #L3d54e0.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d54e6.  v0:= temp @kind object;
  #L3d54e8.  call temp:= `optionalCenterInside`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCenterInside:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d54ee.  v0:= temp @kind object;
  #L3d54f0.  goto L3d5506;
  #L3d54f2.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d54f8.  v0:= temp @kind object;
  #L3d54fa.  call temp:= `optionalCenterCrop`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCenterCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d5500.  v0:= temp @kind object;
  #L3d5502.  goto L3d5506;
  #L3d5504.  v0:= v3 @kind object;
  #L3d5506.  v1:= v3.`com.bumptech.glide.RequestBuilder.E` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3d550a.  v2:= v3.`com.bumptech.glide.RequestBuilder.C` @type ^`java.lang.Class` @kind object;
  #L3d550e.  call temp:= `buildImageViewTarget`(v1, v4, v2) @signature `Lcom/bumptech/glide/GlideContext;.buildImageViewTarget:(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/request/target/ViewTarget;` @kind virtual;
  #L3d5514.  v4:= temp @kind object;
  #L3d5516.  v1:= 0I;
  #L3d5518.  call temp:= `mainThreadExecutor`() @signature `Lcom/bumptech/glide/util/Executors;.mainThreadExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L3d551e.  v2:= temp @kind object;
  #L3d5520.  call temp:= `r`(v3, v4, v1, v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.r:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @kind direct;
  #L3d5526.  v4:= temp @kind object;
  #L3d5528.  v4:= (`com.bumptech.glide.request.target.ViewTarget`) v4 @kind object;
  #L3d552c.  return v4 @kind object;
  #L3d552e.  
  #L3d5530.  switch v0
                  | 1 => goto L3d54f2
                  | 2 => goto L3d54e0
                  | 3 => goto L3d54ce
                  | 4 => goto L3d54ce
                  | 5 => goto L3d54ce
                  | 6 => goto L3d54bc
                  | else => goto L3d54ba;
}
procedure `com.bumptech.glide.RequestBuilder` `listener`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.request.RequestListener` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.listener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4b04.  call temp:= `isAutoCloneEnabled`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isAutoCloneEnabled:()Z` @kind virtual;
  #L3d4b0a.  v0:= temp;
  #L3d4b0c.  if v0 == 0 then goto L3d4b22;
  #L3d4b10.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4b16.  v0:= temp @kind object;
  #L3d4b18.  call temp:= `listener`(v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.listener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4b1e.  v2:= temp @kind object;
  #L3d4b20.  return v2 @kind object;
  #L3d4b22.  v0:= 0I;
  #L3d4b24.  v1.`com.bumptech.glide.RequestBuilder.H` @type ^`java.util.List` := v0 @kind object;
  #L3d4b28.  call temp:= `addListener`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.addListener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4b2e.  v2:= temp @kind object;
  #L3d4b30.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/Bitmap;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4b44.  call temp:= `u`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4b4a.  v2:= temp @kind object;
  #L3d4b4c.  v0:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.NONE` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3d4b50.  call temp:= `diskCacheStrategyOf`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.diskCacheStrategyOf:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3d4b56.  v0:= temp @kind object;
  #L3d4b58.  call temp:= `apply`(v2, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4b5e.  v2:= temp @kind object;
  #L3d4b60.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4b74.  call temp:= `u`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4b7a.  v2:= temp @kind object;
  #L3d4b7c.  v0:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.NONE` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3d4b80.  call temp:= `diskCacheStrategyOf`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.diskCacheStrategyOf:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3d4b86.  v0:= temp @kind object;
  #L3d4b88.  call temp:= `apply`(v2, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4b8e.  v2:= temp @kind object;
  #L3d4b90.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `android.net.Uri` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/net/Uri;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d4ba4.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4baa.  v1:= temp @kind object;
  #L3d4bac.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/io/File;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d4c18.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4c1e.  v1:= temp @kind object;
  #L3d4c20.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `java.lang.Integer` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Integer;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4c34.  call temp:= `u`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4c3a.  v2:= temp @kind object;
  #L3d4c3c.  v0:= v1.`com.bumptech.glide.RequestBuilder.A` @type ^`android.content.Context` @kind object;
  #L3d4c40.  call temp:= `obtain`(v0) @signature `Lcom/bumptech/glide/signature/AndroidResourceSignature;.obtain:(Landroid/content/Context;)Lcom/bumptech/glide/load/Key;` @kind static;
  #L3d4c46.  v0:= temp @kind object;
  #L3d4c48.  call temp:= `signatureOf`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.signatureOf:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3d4c4e.  v0:= temp @kind object;
  #L3d4c50.  call temp:= `apply`(v2, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4c56.  v2:= temp @kind object;
  #L3d4c58.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d4c6c.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4c72.  v1:= temp @kind object;
  #L3d4c74.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/String;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d4c88.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4c8e.  v1:= temp @kind object;
  #L3d4c90.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.net.URL` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/net/URL;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3d4ca4.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4caa.  v1:= temp @kind object;
  #L3d4cac.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:([B)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4bc0.  call temp:= `u`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3d4bc6.  v2:= temp @kind object;
  #L3d4bc8.  call temp:= `isDiskCacheStrategySet`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isDiskCacheStrategySet:()Z` @kind virtual;
  #L3d4bce.  v0:= temp;
  #L3d4bd0.  if v0 != 0 then goto L3d4be8;
  #L3d4bd4.  v0:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.NONE` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3d4bd8.  call temp:= `diskCacheStrategyOf`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.diskCacheStrategyOf:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3d4bde.  v0:= temp @kind object;
  #L3d4be0.  call temp:= `apply`(v2, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4be6.  v2:= temp @kind object;
  #L3d4be8.  call temp:= `isSkipMemoryCacheSet`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isSkipMemoryCacheSet:()Z` @kind virtual;
  #L3d4bee.  v0:= temp;
  #L3d4bf0.  if v0 != 0 then goto L3d4c06;
  #L3d4bf4.  v0:= 1I;
  #L3d4bf6.  call temp:= `skipMemoryCacheOf`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.skipMemoryCacheOf:(Z)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3d4bfc.  v0:= temp @kind object;
  #L3d4bfe.  call temp:= `apply`(v2, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4c04.  v2:= temp @kind object;
  #L3d4c06.  return v2 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/Bitmap;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d557c.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/Bitmap;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d5582.  v1:= temp @kind object;
  #L3d5584.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/drawable/Drawable;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d5598.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d559e.  v1:= temp @kind object;
  #L3d55a0.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `android.net.Uri` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/net/Uri;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d55b4.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/net/Uri;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d55ba.  v1:= temp @kind object;
  #L3d55bc.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/io/File;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d55ec.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/io/File;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d55f2.  v1:= temp @kind object;
  #L3d55f4.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.Integer` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Integer;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d5608.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Integer;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d560e.  v1:= temp @kind object;
  #L3d5610.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d5624.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d562a.  v1:= temp @kind object;
  #L3d562c.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d5640.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/String;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d5646.  v1:= temp @kind object;
  #L3d5648.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.net.URL` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/net/URL;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d565c.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/net/URL;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d5662.  v1:= temp @kind object;
  #L3d5664.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:([B)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d55d0.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:([B)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d55d6.  v1:= temp @kind object;
  #L3d55d8.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `preload`(`com.bumptech.glide.RequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.preload:()Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5424.  v0:= -2147483648I;
  #L3d5428.  call temp:= `preload`(v1, v0, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.preload:(II)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3d542e.  v0:= temp @kind object;
  #L3d5430.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `preload`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/RequestBuilder;.preload:(II)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5444.  v0:= v1.`com.bumptech.glide.RequestBuilder.B` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L3d5448.  call temp:= `obtain`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/target/PreloadTarget;.obtain:(Lcom/bumptech/glide/RequestManager;II)Lcom/bumptech/glide/request/target/PreloadTarget;` @kind static;
  #L3d544e.  v2:= temp @kind object;
  #L3d5450.  call temp:= `into`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3d5456.  v2:= temp @kind object;
  #L3d5458.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `s`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.request.target.Target` v1 @kind object, `com.bumptech.glide.request.RequestListener` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.s:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag  {
    temp;

  #L3d5408.  call temp:= `r`(v0, v1, v2, v0, v3) @signature `Lcom/bumptech/glide/RequestBuilder;.r:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @kind direct;
  #L3d540e.  v1:= temp @kind object;
  #L3d5410.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.FutureTarget` `submit`(`com.bumptech.glide.RequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.submit:()Lcom/bumptech/glide/request/FutureTarget;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4f30.  v0:= -2147483648I;
  #L3d4f34.  call temp:= `submit`(v1, v0, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.submit:(II)Lcom/bumptech/glide/request/FutureTarget;` @kind virtual;
  #L3d4f3a.  v0:= temp @kind object;
  #L3d4f3c.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.FutureTarget` `submit`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/RequestBuilder;.submit:(II)Lcom/bumptech/glide/request/FutureTarget;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4f50.  v0:= new `com.bumptech.glide.request.RequestFutureTarget`;
  #L3d4f54.  call `<init>`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<init>:(II)V` @kind direct;
  #L3d4f5a.  call temp:= `directExecutor`() @signature `Lcom/bumptech/glide/util/Executors;.directExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L3d4f60.  v2:= temp @kind object;
  #L3d4f62.  call temp:= `s`(v1, v0, v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.s:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3d4f68.  v2:= temp @kind object;
  #L3d4f6a.  v2:= (`com.bumptech.glide.request.FutureTarget`) v2 @kind object;
  #L3d4f6e.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `thumbnail`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `float` v2 ) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(F)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4d84.  call temp:= `isAutoCloneEnabled`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isAutoCloneEnabled:()Z` @kind virtual;
  #L3d4d8a.  v0:= temp;
  #L3d4d8c.  if v0 == 0 then goto L3d4da2;
  #L3d4d90.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4d96.  v0:= temp @kind object;
  #L3d4d98.  call temp:= `thumbnail`(v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(F)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4d9e.  v2:= temp @kind object;
  #L3d4da0.  return v2 @kind object;
  #L3d4da2.  v0:= 0I;
  #L3d4da4.  v0:= fcmpg(v2, v0);
  #L3d4da8.  if v0 < 0 then goto L3d4dd2;
  #L3d4dac.  v0:= 1.0F;
  #L3d4db0.  v0:= fcmpl(v2, v0);
  #L3d4db4.  if v0 > 0 then goto L3d4dd2;
  #L3d4db8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3d4dbe.  v2:= temp @kind object;
  #L3d4dc0.  v1.`com.bumptech.glide.RequestBuilder.K` @type ^`java.lang.Float` := v2 @kind object;
  #L3d4dc4.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d4dca.  v2:= temp @kind object;
  #L3d4dcc.  v2:= (`com.bumptech.glide.RequestBuilder`) v2 @kind object;
  #L3d4dd0.  return v2 @kind object;
  #L3d4dd2.  v2:= new `java.lang.IllegalArgumentException`;
  #L3d4dd6.  v0:= "sizeMultiplier must be between 0 and 1" @kind object;
  #L3d4dda.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d4de0.  throw v2;
}
procedure `com.bumptech.glide.RequestBuilder` `thumbnail`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.RequestBuilder` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4d08.  call temp:= `isAutoCloneEnabled`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isAutoCloneEnabled:()Z` @kind virtual;
  #L3d4d0e.  v0:= temp;
  #L3d4d10.  if v0 == 0 then goto L3d4d26;
  #L3d4d14.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4d1a.  v0:= temp @kind object;
  #L3d4d1c.  call temp:= `thumbnail`(v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4d22.  v2:= temp @kind object;
  #L3d4d24.  return v2 @kind object;
  #L3d4d26.  v1.`com.bumptech.glide.RequestBuilder.I` @type ^`com.bumptech.glide.RequestBuilder` := v2 @kind object;
  #L3d4d2a.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d4d30.  v2:= temp @kind object;
  #L3d4d32.  v2:= (`com.bumptech.glide.RequestBuilder`) v2 @kind object;
  #L3d4d36.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `thumbnail`(`com.bumptech.glide.RequestBuilder` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Ljava/util/List;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d4df4.  v0:= 0I;
  #L3d4df6.  if v4 == 0 then goto L3d4e4a;
  #L3d4dfa.  call temp:= `isEmpty`(v4) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3d4e00.  v1:= temp;
  #L3d4e02.  if v1 == 0 then goto L3d4e08;
  #L3d4e06.  goto L3d4e4a;
  #L3d4e08.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d4e0e.  v1:= temp;
  #L3d4e10.  v1:= v1 + -1;
  #L3d4e14.  if v1 < 0 then goto L3d4e40;
  #L3d4e18.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d4e1e.  v2:= temp @kind object;
  #L3d4e20.  v2:= (`com.bumptech.glide.RequestBuilder`) v2 @kind object;
  #L3d4e24.  if v2 != 0 then goto L3d4e2a;
  #L3d4e28.  goto L3d4e3a;
  #L3d4e2a.  if v0 != 0 then goto L3d4e32;
  #L3d4e2e.  v0:= v2 @kind object;
  #L3d4e30.  goto L3d4e3a;
  #L3d4e32.  call temp:= `thumbnail`(v2, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4e38.  v0:= temp @kind object;
  #L3d4e3a.  v1:= v1 + -1;
  #L3d4e3e.  goto L3d4e14;
  #L3d4e40.  call temp:= `thumbnail`(v3, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4e46.  v4:= temp @kind object;
  #L3d4e48.  return v4 @kind object;
  #L3d4e4a.  call temp:= `thumbnail`(v3, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4e50.  v4:= temp @kind object;
  #L3d4e52.  return v4 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `thumbnail`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.RequestBuilder`[] v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:([Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4d48.  if v2 == 0 then goto L3d4d66;
  #L3d4d4c.  v0:= length @variable v2;
  #L3d4d4e.  if v0 != 0 then goto L3d4d54;
  #L3d4d52.  goto L3d4d66;
  #L3d4d54.  call temp:= `asList`(v2) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3d4d5a.  v2:= temp @kind object;
  #L3d4d5c.  call temp:= `thumbnail`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Ljava/util/List;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4d62.  v2:= temp @kind object;
  #L3d4d64.  return v2 @kind object;
  #L3d4d66.  v2:= 0I;
  #L3d4d68.  call temp:= `thumbnail`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4d6e.  v2:= temp @kind object;
  #L3d4d70.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `transition`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.TransitionOptions` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.transition:(Lcom/bumptech/glide/TransitionOptions;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4e64.  call temp:= `isAutoCloneEnabled`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isAutoCloneEnabled:()Z` @kind virtual;
  #L3d4e6a.  v0:= temp;
  #L3d4e6c.  if v0 == 0 then goto L3d4e82;
  #L3d4e70.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4e76.  v0:= temp @kind object;
  #L3d4e78.  call temp:= `transition`(v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.transition:(Lcom/bumptech/glide/TransitionOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3d4e7e.  v2:= temp @kind object;
  #L3d4e80.  return v2 @kind object;
  #L3d4e82.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d4e88.  v2:= temp @kind object;
  #L3d4e8a.  v2:= (`com.bumptech.glide.TransitionOptions`) v2 @kind object;
  #L3d4e8e.  v1.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` := v2 @kind object;
  #L3d4e92.  v2:= 0I;
  #L3d4e94.  v1.`com.bumptech.glide.RequestBuilder.L` @type ^`boolean` := v2 @kind boolean;
  #L3d4e98.  call temp:= `selfOrThrowIfLocked`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.selfOrThrowIfLocked:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3d4e9e.  v2:= temp @kind object;
  #L3d4ea0.  v2:= (`com.bumptech.glide.RequestBuilder`) v2 @kind object;
  #L3d4ea4.  return v2 @kind object;
}
