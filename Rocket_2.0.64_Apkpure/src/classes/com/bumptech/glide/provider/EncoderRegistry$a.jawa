record `com.bumptech.glide.provider.EncoderRegistry$a` @kind class @AccessFlag FINAL {
  `java.lang.Class` `com.bumptech.glide.provider.EncoderRegistry$a.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Encoder` `com.bumptech.glide.provider.EncoderRegistry$a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.provider.EncoderRegistry$a` v0 @kind this, `java.lang.Class` v1 @kind object, `com.bumptech.glide.load.Encoder` v2 @kind object) @signature `Lcom/bumptech/glide/provider/EncoderRegistry$a;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/load/Encoder;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f6808.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f680e.  v0.`com.bumptech.glide.provider.EncoderRegistry$a.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3f6812.  v0.`com.bumptech.glide.provider.EncoderRegistry$a.b` @type ^`com.bumptech.glide.load.Encoder` := v2 @kind object;
  #L3f6816.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.provider.EncoderRegistry$a` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/provider/EncoderRegistry$a;.a:(Ljava/lang/Class;)Z` @AccessFlag  {
    temp;
    v0;

  #L3f67e8.  v0:= v1.`com.bumptech.glide.provider.EncoderRegistry$a.a` @type ^`java.lang.Class` @kind object;
  #L3f67ec.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3f67f2.  v2:= temp;
  #L3f67f4.  return v2;
}
