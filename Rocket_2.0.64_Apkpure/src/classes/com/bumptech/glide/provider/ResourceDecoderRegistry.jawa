record `com.bumptech.glide.provider.ResourceDecoderRegistry` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.bumptech.glide.provider.ResourceDecoderRegistry.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.provider.ResourceDecoderRegistry.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.provider.ResourceDecoderRegistry` v1 @kind this) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f6e90.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f6e96.  v0:= new `java.util.ArrayList`;
  #L3f6e9a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f6ea0.  v1.`com.bumptech.glide.provider.ResourceDecoderRegistry.a` @type ^`java.util.List` := v0 @kind object;
  #L3f6ea4.  v0:= new `java.util.HashMap`;
  #L3f6ea8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3f6eae.  v1.`com.bumptech.glide.provider.ResourceDecoderRegistry.b` @type ^`java.util.Map` := v0 @kind object;
  #L3f6eb2.  return @kind void;
}
procedure `java.util.List` `a`(`com.bumptech.glide.provider.ResourceDecoderRegistry` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry;.a:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f6d70.  @monitorenter v2
  #L3f6d72.  v0:= v2.`com.bumptech.glide.provider.ResourceDecoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f6d76.  call temp:= `contains`(v0, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3f6d7c.  v0:= temp;
  #L3f6d7e.  if v0 != 0 then goto L3f6d8c;
  #L3f6d82.  v0:= v2.`com.bumptech.glide.provider.ResourceDecoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f6d86.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f6d8c.  v0:= v2.`com.bumptech.glide.provider.ResourceDecoderRegistry.b` @type ^`java.util.Map` @kind object;
  #L3f6d90.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f6d96.  v0:= temp @kind object;
  #L3f6d98.  v0:= (`java.util.List`) v0 @kind object;
  #L3f6d9c.  if v0 != 0 then goto L3f6db4;
  #L3f6da0.  v0:= new `java.util.ArrayList`;
  #L3f6da4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f6daa.  v1:= v2.`com.bumptech.glide.provider.ResourceDecoderRegistry.b` @type ^`java.util.Map` @kind object;
  #L3f6dae.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f6db4.  @monitorexit v2
  #L3f6db6.  return v0 @kind object;
  #L3f6db8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6dba.  @monitorexit v2
  #L3f6dbc.  throw v3;
  catch `java.lang.Throwable` @[L3f6d72..L3f6db4] goto L3f6db8;
}
procedure `void` `append`(`com.bumptech.glide.provider.ResourceDecoderRegistry` v1 @kind this, `java.lang.String` v2 @kind object, `com.bumptech.glide.load.ResourceDecoder` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry;.append:(Ljava/lang/String;Lcom/bumptech/glide/load/ResourceDecoder;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6ec4.  @monitorenter v1
  #L3f6ec6.  call temp:= `a`(v1, v2) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry;.a:(Ljava/lang/String;)Ljava/util/List;` @kind direct;
  #L3f6ecc.  v2:= temp @kind object;
  #L3f6ece.  v0:= new `com.bumptech.glide.provider.ResourceDecoderRegistry$a`;
  #L3f6ed2.  call `<init>`(v0, v4, v5, v3) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry$a;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceDecoder;)V` @kind direct;
  #L3f6ed8.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f6ede.  @monitorexit v1
  #L3f6ee0.  return @kind void;
  #L3f6ee2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6ee4.  @monitorexit v1
  #L3f6ee6.  throw v2;
  catch `java.lang.Throwable` @[L3f6ec6..L3f6ede] goto L3f6ee2;
}
procedure `java.util.List` `getDecoders`(`com.bumptech.glide.provider.ResourceDecoderRegistry` v5 @kind this, `java.lang.Class` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry;.getDecoders:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f6ccc.  @monitorenter v5
  #L3f6cce.  v0:= new `java.util.ArrayList`;
  #L3f6cd2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f6cd8.  v1:= v5.`com.bumptech.glide.provider.ResourceDecoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f6cdc.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f6ce2.  v1:= temp @kind object;
  #L3f6ce4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f6cea.  v2:= temp;
  #L3f6cec.  if v2 == 0 then goto L3f6d4a;
  #L3f6cf0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f6cf6.  v2:= temp @kind object;
  #L3f6cf8.  v2:= (`java.lang.String`) v2 @kind object;
  #L3f6cfc.  v3:= v5.`com.bumptech.glide.provider.ResourceDecoderRegistry.b` @type ^`java.util.Map` @kind object;
  #L3f6d00.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f6d06.  v2:= temp @kind object;
  #L3f6d08.  v2:= (`java.util.List`) v2 @kind object;
  #L3f6d0c.  if v2 != 0 then goto L3f6d12;
  #L3f6d10.  goto L3f6ce4;
  #L3f6d12.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f6d18.  v2:= temp @kind object;
  #L3f6d1a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f6d20.  v3:= temp;
  #L3f6d22.  if v3 == 0 then goto L3f6ce4;
  #L3f6d26.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f6d2c.  v3:= temp @kind object;
  #L3f6d2e.  v3:= (`com.bumptech.glide.provider.ResourceDecoderRegistry$a`) v3 @kind object;
  #L3f6d32.  call temp:= `a`(v3, v6, v7) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry$a;.a:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind virtual;
  #L3f6d38.  v4:= temp;
  #L3f6d3a.  if v4 == 0 then goto L3f6d1a;
  #L3f6d3e.  v3:= v3.`com.bumptech.glide.provider.ResourceDecoderRegistry$a.c` @type ^`com.bumptech.glide.load.ResourceDecoder` @kind object;
  #L3f6d42.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f6d48.  goto L3f6d1a;
  #L3f6d4a.  @monitorexit v5
  #L3f6d4c.  return v0 @kind object;
  #L3f6d4e.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6d50.  @monitorexit v5
  #L3f6d52.  throw v6;
  catch `java.lang.Throwable` @[L3f6cce..L3f6d48] goto L3f6d4e;
}
procedure `java.util.List` `getResourceClasses`(`com.bumptech.glide.provider.ResourceDecoderRegistry` v5 @kind this, `java.lang.Class` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry;.getResourceClasses:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f6ddc.  @monitorenter v5
  #L3f6dde.  v0:= new `java.util.ArrayList`;
  #L3f6de2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f6de8.  v1:= v5.`com.bumptech.glide.provider.ResourceDecoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f6dec.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f6df2.  v1:= temp @kind object;
  #L3f6df4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f6dfa.  v2:= temp;
  #L3f6dfc.  if v2 == 0 then goto L3f6e6a;
  #L3f6e00.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f6e06.  v2:= temp @kind object;
  #L3f6e08.  v2:= (`java.lang.String`) v2 @kind object;
  #L3f6e0c.  v3:= v5.`com.bumptech.glide.provider.ResourceDecoderRegistry.b` @type ^`java.util.Map` @kind object;
  #L3f6e10.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f6e16.  v2:= temp @kind object;
  #L3f6e18.  v2:= (`java.util.List`) v2 @kind object;
  #L3f6e1c.  if v2 != 0 then goto L3f6e22;
  #L3f6e20.  goto L3f6df4;
  #L3f6e22.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f6e28.  v2:= temp @kind object;
  #L3f6e2a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f6e30.  v3:= temp;
  #L3f6e32.  if v3 == 0 then goto L3f6df4;
  #L3f6e36.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f6e3c.  v3:= temp @kind object;
  #L3f6e3e.  v3:= (`com.bumptech.glide.provider.ResourceDecoderRegistry$a`) v3 @kind object;
  #L3f6e42.  call temp:= `a`(v3, v6, v7) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry$a;.a:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind virtual;
  #L3f6e48.  v4:= temp;
  #L3f6e4a.  if v4 == 0 then goto L3f6e2a;
  #L3f6e4e.  v4:= v3.`com.bumptech.glide.provider.ResourceDecoderRegistry$a.b` @type ^`java.lang.Class` @kind object;
  #L3f6e52.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3f6e58.  v4:= temp;
  #L3f6e5a.  if v4 != 0 then goto L3f6e2a;
  #L3f6e5e.  v3:= v3.`com.bumptech.glide.provider.ResourceDecoderRegistry$a.b` @type ^`java.lang.Class` @kind object;
  #L3f6e62.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f6e68.  goto L3f6e2a;
  #L3f6e6a.  @monitorexit v5
  #L3f6e6c.  return v0 @kind object;
  #L3f6e6e.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6e70.  @monitorexit v5
  #L3f6e72.  throw v6;
  catch `java.lang.Throwable` @[L3f6dde..L3f6e68] goto L3f6e6e;
}
procedure `void` `prepend`(`com.bumptech.glide.provider.ResourceDecoderRegistry` v2 @kind this, `java.lang.String` v3 @kind object, `com.bumptech.glide.load.ResourceDecoder` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry;.prepend:(Ljava/lang/String;Lcom/bumptech/glide/load/ResourceDecoder;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f6f04.  @monitorenter v2
  #L3f6f06.  call temp:= `a`(v2, v3) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry;.a:(Ljava/lang/String;)Ljava/util/List;` @kind direct;
  #L3f6f0c.  v3:= temp @kind object;
  #L3f6f0e.  v0:= 0I;
  #L3f6f10.  v1:= new `com.bumptech.glide.provider.ResourceDecoderRegistry$a`;
  #L3f6f14.  call `<init>`(v1, v5, v6, v4) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry$a;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceDecoder;)V` @kind direct;
  #L3f6f1a.  call `add`(v3, v0, v1) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L3f6f20.  @monitorexit v2
  #L3f6f22.  return @kind void;
  #L3f6f24.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6f26.  @monitorexit v2
  #L3f6f28.  throw v3;
  catch `java.lang.Throwable` @[L3f6f06..L3f6f20] goto L3f6f24;
}
procedure `void` `setBucketPriorityList`(`com.bumptech.glide.provider.ResourceDecoderRegistry` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry;.setBucketPriorityList:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f6f48.  @monitorenter v4
  #L3f6f4a.  v0:= new `java.util.ArrayList`;
  #L3f6f4e.  v1:= v4.`com.bumptech.glide.provider.ResourceDecoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f6f52.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3f6f58.  v1:= v4.`com.bumptech.glide.provider.ResourceDecoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f6f5c.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3f6f62.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f6f68.  v1:= temp @kind object;
  #L3f6f6a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f6f70.  v2:= temp;
  #L3f6f72.  if v2 == 0 then goto L3f6f8e;
  #L3f6f76.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f6f7c.  v2:= temp @kind object;
  #L3f6f7e.  v2:= (`java.lang.String`) v2 @kind object;
  #L3f6f82.  v3:= v4.`com.bumptech.glide.provider.ResourceDecoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f6f86.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f6f8c.  goto L3f6f6a;
  #L3f6f8e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f6f94.  v0:= temp @kind object;
  #L3f6f96.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f6f9c.  v1:= temp;
  #L3f6f9e.  if v1 == 0 then goto L3f6fc6;
  #L3f6fa2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f6fa8.  v1:= temp @kind object;
  #L3f6faa.  v1:= (`java.lang.String`) v1 @kind object;
  #L3f6fae.  call temp:= `contains`(v5, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3f6fb4.  v2:= temp;
  #L3f6fb6.  if v2 != 0 then goto L3f6f96;
  #L3f6fba.  v2:= v4.`com.bumptech.glide.provider.ResourceDecoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f6fbe.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f6fc4.  goto L3f6f96;
  #L3f6fc6.  @monitorexit v4
  #L3f6fc8.  return @kind void;
  #L3f6fca.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6fcc.  @monitorexit v4
  #L3f6fce.  throw v5;
  catch `java.lang.Throwable` @[L3f6f4a..L3f6fc4] goto L3f6fca;
}
