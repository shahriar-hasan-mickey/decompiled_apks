record `com.bumptech.glide.provider.ResourceEncoderRegistry` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.bumptech.glide.provider.ResourceEncoderRegistry.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.provider.ResourceEncoderRegistry` v1 @kind this) @signature `Lcom/bumptech/glide/provider/ResourceEncoderRegistry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f7094.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f709a.  v0:= new `java.util.ArrayList`;
  #L3f709e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f70a4.  v1.`com.bumptech.glide.provider.ResourceEncoderRegistry.a` @type ^`java.util.List` := v0 @kind object;
  #L3f70a8.  return @kind void;
}
procedure `void` `append`(`com.bumptech.glide.provider.ResourceEncoderRegistry` v2 @kind this, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.ResourceEncoder` v4 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceEncoderRegistry;.append:(Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceEncoder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f70bc.  @monitorenter v2
  #L3f70be.  v0:= v2.`com.bumptech.glide.provider.ResourceEncoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f70c2.  v1:= new `com.bumptech.glide.provider.ResourceEncoderRegistry$a`;
  #L3f70c6.  call `<init>`(v1, v3, v4) @signature `Lcom/bumptech/glide/provider/ResourceEncoderRegistry$a;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceEncoder;)V` @kind direct;
  #L3f70cc.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f70d2.  @monitorexit v2
  #L3f70d4.  return @kind void;
  #L3f70d6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f70d8.  @monitorexit v2
  #L3f70da.  throw v3;
  catch `java.lang.Throwable` @[L3f70be..L3f70d2] goto L3f70d6;
}
procedure `com.bumptech.glide.load.ResourceEncoder` `get`(`com.bumptech.glide.provider.ResourceEncoderRegistry` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceEncoderRegistry;.get:(Ljava/lang/Class;)Lcom/bumptech/glide/load/ResourceEncoder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f702c.  @monitorenter v4
  #L3f702e.  v0:= 0I;
  #L3f7030.  v1:= v4.`com.bumptech.glide.provider.ResourceEncoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f7034.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3f703a.  v1:= temp;
  #L3f703c.  if v0 >= v1 then goto L3f706a;
  #L3f7040.  v2:= v4.`com.bumptech.glide.provider.ResourceEncoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f7044.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3f704a.  v2:= temp @kind object;
  #L3f704c.  v2:= (`com.bumptech.glide.provider.ResourceEncoderRegistry$a`) v2 @kind object;
  #L3f7050.  call temp:= `a`(v2, v5) @signature `Lcom/bumptech/glide/provider/ResourceEncoderRegistry$a;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L3f7056.  v3:= temp;
  #L3f7058.  if v3 == 0 then goto L3f7064;
  #L3f705c.  v5:= v2.`com.bumptech.glide.provider.ResourceEncoderRegistry$a.b` @type ^`com.bumptech.glide.load.ResourceEncoder` @kind object;
  #L3f7060.  @monitorexit v4
  #L3f7062.  return v5 @kind object;
  #L3f7064.  v0:= v0 + 1;
  #L3f7068.  goto L3f703c;
  #L3f706a.  v5:= 0I;
  #L3f706c.  @monitorexit v4
  #L3f706e.  return v5 @kind object;
  #L3f7070.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f7072.  @monitorexit v4
  #L3f7074.  throw v5;
  catch `java.lang.Throwable` @[L3f7030..L3f7060] goto L3f7070;
}
procedure `void` `prepend`(`com.bumptech.glide.provider.ResourceEncoderRegistry` v3 @kind this, `java.lang.Class` v4 @kind object, `com.bumptech.glide.load.ResourceEncoder` v5 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceEncoderRegistry;.prepend:(Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceEncoder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f70f8.  @monitorenter v3
  #L3f70fa.  v0:= v3.`com.bumptech.glide.provider.ResourceEncoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3f70fe.  v1:= 0I;
  #L3f7100.  v2:= new `com.bumptech.glide.provider.ResourceEncoderRegistry$a`;
  #L3f7104.  call `<init>`(v2, v4, v5) @signature `Lcom/bumptech/glide/provider/ResourceEncoderRegistry$a;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceEncoder;)V` @kind direct;
  #L3f710a.  call `add`(v0, v1, v2) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L3f7110.  @monitorexit v3
  #L3f7112.  return @kind void;
  #L3f7114.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f7116.  @monitorexit v3
  #L3f7118.  throw v4;
  catch `java.lang.Throwable` @[L3f70fa..L3f7110] goto L3f7114;
}
