record `com.bumptech.glide.provider.ResourceDecoderRegistry$a` @kind class @AccessFlag  {
  `java.lang.Class` `com.bumptech.glide.provider.ResourceDecoderRegistry$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.provider.ResourceDecoderRegistry$a.b` @AccessFlag FINAL;
  `com.bumptech.glide.load.ResourceDecoder` `com.bumptech.glide.provider.ResourceDecoderRegistry$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.provider.ResourceDecoderRegistry$a` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.ResourceDecoder` v3 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry$a;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceDecoder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f6ca8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f6cae.  v0.`com.bumptech.glide.provider.ResourceDecoderRegistry$a.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3f6cb2.  v0.`com.bumptech.glide.provider.ResourceDecoderRegistry$a.b` @type ^`java.lang.Class` := v2 @kind object;
  #L3f6cb6.  v0.`com.bumptech.glide.provider.ResourceDecoderRegistry$a.c` @type ^`com.bumptech.glide.load.ResourceDecoder` := v3 @kind object;
  #L3f6cba.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.provider.ResourceDecoderRegistry$a` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/provider/ResourceDecoderRegistry$a;.a:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6c70.  v0:= v1.`com.bumptech.glide.provider.ResourceDecoderRegistry$a.a` @type ^`java.lang.Class` @kind object;
  #L3f6c74.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3f6c7a.  v2:= temp;
  #L3f6c7c.  if v2 == 0 then goto L3f6c94;
  #L3f6c80.  v2:= v1.`com.bumptech.glide.provider.ResourceDecoderRegistry$a.b` @type ^`java.lang.Class` @kind object;
  #L3f6c84.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3f6c8a.  v2:= temp;
  #L3f6c8c.  if v2 == 0 then goto L3f6c94;
  #L3f6c90.  v2:= 1I;
  #L3f6c92.  goto L3f6c96;
  #L3f6c94.  v2:= 0I;
  #L3f6c96.  return v2;
}
