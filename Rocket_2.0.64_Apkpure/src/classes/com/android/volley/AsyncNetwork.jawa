record `com.android.volley.AsyncNetwork` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.android.volley.Network` @kind interface {
  `java.util.concurrent.ExecutorService` `com.android.volley.AsyncNetwork.mBlockingExecutor` @AccessFlag PRIVATE;
  `java.util.concurrent.ExecutorService` `com.android.volley.AsyncNetwork.mNonBlockingExecutor` @AccessFlag PRIVATE;
  `java.util.concurrent.ScheduledExecutorService` `com.android.volley.AsyncNetwork.mNonBlockingScheduledExecutor` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.android.volley.AsyncNetwork` v0 @kind this) @signature `Lcom/android/volley/AsyncNetwork;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3b65d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b65de.  return @kind void;
}
procedure `java.util.concurrent.ExecutorService` `getBlockingExecutor`(`com.android.volley.AsyncNetwork` v1 @kind this) @signature `Lcom/android/volley/AsyncNetwork;.getBlockingExecutor:()Ljava/util/concurrent/ExecutorService;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b6590.  v0:= v1.`com.android.volley.AsyncNetwork.mBlockingExecutor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3b6594.  return v0 @kind object;
}
procedure `java.util.concurrent.ExecutorService` `getNonBlockingExecutor`(`com.android.volley.AsyncNetwork` v1 @kind this) @signature `Lcom/android/volley/AsyncNetwork;.getNonBlockingExecutor:()Ljava/util/concurrent/ExecutorService;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b65a8.  v0:= v1.`com.android.volley.AsyncNetwork.mNonBlockingExecutor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3b65ac.  return v0 @kind object;
}
procedure `java.util.concurrent.ScheduledExecutorService` `getNonBlockingScheduledExecutor`(`com.android.volley.AsyncNetwork` v1 @kind this) @signature `Lcom/android/volley/AsyncNetwork;.getNonBlockingScheduledExecutor:()Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b65c0.  v0:= v1.`com.android.volley.AsyncNetwork.mNonBlockingScheduledExecutor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3b65c4.  return v0 @kind object;
}
procedure `com.android.volley.NetworkResponse` `performRequest`(`com.android.volley.AsyncNetwork` v4 @kind this, `com.android.volley.Request` v5 @kind object) @signature `Lcom/android/volley/AsyncNetwork;.performRequest:(Lcom/android/volley/Request;)Lcom/android/volley/NetworkResponse;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b64c8.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L3b64cc.  v1:= 1I;
  #L3b64ce.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L3b64d4.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L3b64d8.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3b64de.  v2:= new `java.util.concurrent.atomic.AtomicReference`;
  #L3b64e2.  call `<init>`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3b64e8.  v3:= new `com.android.volley.AsyncNetwork$1`;
  #L3b64ec.  call `<init>`(v3, v4, v1, v0, v2) @signature `Lcom/android/volley/AsyncNetwork$1;.<init>:(Lcom/android/volley/AsyncNetwork;Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/CountDownLatch;Ljava/util/concurrent/atomic/AtomicReference;)V` @kind direct;
  #L3b64f2.  call `performRequest`(v4, v5, v3) @signature `Lcom/android/volley/AsyncNetwork;.performRequest:(Lcom/android/volley/Request;Lcom/android/volley/AsyncNetwork$OnRequestComplete;)V` @kind virtual;
  #L3b64f8.  call `await`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L3b64fe.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3b6504.  v5:= temp @kind object;
  #L3b6506.  if v5 == 0 then goto L3b6518;
  #L3b650a.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3b6510.  v5:= temp @kind object;
  #L3b6512.  v5:= (`com.android.volley.NetworkResponse`) v5 @kind object;
  #L3b6516.  return v5 @kind object;
  #L3b6518.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3b651e.  v5:= temp @kind object;
  #L3b6520.  if v5 == 0 then goto L3b6532;
  #L3b6524.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3b652a.  v5:= temp @kind object;
  #L3b652c.  v5:= (`com.android.volley.VolleyError`) v5 @kind object;
  #L3b6530.  throw v5;
  #L3b6532.  v5:= new `com.android.volley.VolleyError`;
  #L3b6536.  v0:= "Neither response entry was set" @kind object;
  #L3b653a.  call `<init>`(v5, v0) @signature `Lcom/android/volley/VolleyError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b6540.  throw v5;
  #L3b6542.  v5:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L3b6544.  v0:= 0I;
  #L3b6546.  v0:= new `java.lang.Object`[v0];
  #L3b654a.  v1:= "while waiting for CountDownLatch" @kind object;
  #L3b654e.  call `e`(v5, v1, v0) @signature `Lcom/android/volley/VolleyLog;.e:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L3b6554.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3b655a.  v0:= temp @kind object;
  #L3b655c.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3b6562.  v0:= new `com.android.volley.VolleyError`;
  #L3b6566.  call `<init>`(v0, v5) @signature `Lcom/android/volley/VolleyError;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3b656c.  throw v0;
  catch `java.lang.InterruptedException` @[L3b64f8..L3b64fe] goto L3b6542;
}
procedure `void` `performRequest`(`com.android.volley.Request` v0 @kind object, `com.android.volley.AsyncNetwork$OnRequestComplete` v1 @kind object) @signature `Lcom/android/volley/AsyncNetwork;.performRequest:(Lcom/android/volley/Request;Lcom/android/volley/AsyncNetwork$OnRequestComplete;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setBlockingExecutor`(`com.android.volley.AsyncNetwork` v0 @kind this, `java.util.concurrent.ExecutorService` v1 @kind object) @signature `Lcom/android/volley/AsyncNetwork;.setBlockingExecutor:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag PUBLIC {
    temp;

  #L3b65f0.  v0.`com.android.volley.AsyncNetwork.mBlockingExecutor` @type ^`java.util.concurrent.ExecutorService` := v1 @kind object;
  #L3b65f4.  return @kind void;
}
procedure `void` `setNonBlockingExecutor`(`com.android.volley.AsyncNetwork` v0 @kind this, `java.util.concurrent.ExecutorService` v1 @kind object) @signature `Lcom/android/volley/AsyncNetwork;.setNonBlockingExecutor:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag PUBLIC {
    temp;

  #L3b6608.  v0.`com.android.volley.AsyncNetwork.mNonBlockingExecutor` @type ^`java.util.concurrent.ExecutorService` := v1 @kind object;
  #L3b660c.  return @kind void;
}
procedure `void` `setNonBlockingScheduledExecutor`(`com.android.volley.AsyncNetwork` v0 @kind this, `java.util.concurrent.ScheduledExecutorService` v1 @kind object) @signature `Lcom/android/volley/AsyncNetwork;.setNonBlockingScheduledExecutor:(Ljava/util/concurrent/ScheduledExecutorService;)V` @AccessFlag PUBLIC {
    temp;

  #L3b6620.  v0.`com.android.volley.AsyncNetwork.mNonBlockingScheduledExecutor` @type ^`java.util.concurrent.ScheduledExecutorService` := v1 @kind object;
  #L3b6624.  return @kind void;
}
