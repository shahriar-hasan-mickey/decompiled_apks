record `com.android.volley.toolbox.ByteArrayPool` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.android.volley.toolbox.ByteArrayPool.mBuffersByLastUse` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.android.volley.toolbox.ByteArrayPool.mBuffersBySize` @AccessFlag PRIVATE_FINAL;
  `int` `com.android.volley.toolbox.ByteArrayPool.mCurrentSize` @AccessFlag PRIVATE;
  `int` `com.android.volley.toolbox.ByteArrayPool.mSizeLimit` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Comparator` `@@com.android.volley.toolbox.ByteArrayPool.BUF_COMPARATOR` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/android/volley/toolbox/ByteArrayPool;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3badc8.  v0:= new `com.android.volley.toolbox.ByteArrayPool$1`;
  #L3badcc.  call `<init>`(v0) @signature `Lcom/android/volley/toolbox/ByteArrayPool$1;.<init>:()V` @kind direct;
  #L3badd2.  `@@com.android.volley.toolbox.ByteArrayPool.BUF_COMPARATOR` @type ^`java.util.Comparator` := v0 @kind object;
  #L3badd6.  return @kind void;
}
procedure `void` `<init>`(`com.android.volley.toolbox.ByteArrayPool` v2 @kind this, `int` v3 ) @signature `Lcom/android/volley/toolbox/ByteArrayPool;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3bade8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3badee.  v0:= new `java.util.ArrayList`;
  #L3badf2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3badf8.  v2.`com.android.volley.toolbox.ByteArrayPool.mBuffersByLastUse` @type ^`java.util.List` := v0 @kind object;
  #L3badfc.  v0:= new `java.util.ArrayList`;
  #L3bae00.  v1:= 64I;
  #L3bae04.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3bae0a.  v2.`com.android.volley.toolbox.ByteArrayPool.mBuffersBySize` @type ^`java.util.List` := v0 @kind object;
  #L3bae0e.  v0:= 0I;
  #L3bae10.  v2.`com.android.volley.toolbox.ByteArrayPool.mCurrentSize` @type ^`int` := v0;
  #L3bae14.  v2.`com.android.volley.toolbox.ByteArrayPool.mSizeLimit` @type ^`int` := v3;
  #L3bae18.  return @kind void;
}
procedure `void` `trim`(`com.android.volley.toolbox.ByteArrayPool` v2 @kind this) @signature `Lcom/android/volley/toolbox/ByteArrayPool;.trim:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3baea8.  @monitorenter v2
  #L3baeaa.  v0:= v2.`com.android.volley.toolbox.ByteArrayPool.mCurrentSize` @type ^`int`;
  #L3baeae.  v1:= v2.`com.android.volley.toolbox.ByteArrayPool.mSizeLimit` @type ^`int`;
  #L3baeb2.  if v0 <= v1 then goto L3baee0;
  #L3baeb6.  v0:= v2.`com.android.volley.toolbox.ByteArrayPool.mBuffersByLastUse` @type ^`java.util.List` @kind object;
  #L3baeba.  v1:= 0I;
  #L3baebc.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3baec2.  v0:= temp @kind object;
  #L3baec4.  v0:= (`byte`[]) v0 @kind object;
  #L3baec8.  v1:= v2.`com.android.volley.toolbox.ByteArrayPool.mBuffersBySize` @type ^`java.util.List` @kind object;
  #L3baecc.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3baed2.  v1:= v2.`com.android.volley.toolbox.ByteArrayPool.mCurrentSize` @type ^`int`;
  #L3baed6.  v0:= length @variable v0;
  #L3baed8.  v1:= v1 - v0 @kind int;
  #L3baeda.  v2.`com.android.volley.toolbox.ByteArrayPool.mCurrentSize` @type ^`int` := v1;
  #L3baede.  goto L3baeaa;
  #L3baee0.  @monitorexit v2
  #L3baee2.  return @kind void;
  #L3baee4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3baee6.  @monitorexit v2
  #L3baee8.  throw v0;
  catch `java.lang.Throwable` @[L3baeaa..L3baede] goto L3baee4;
}
procedure `byte`[] `getBuf`(`com.android.volley.toolbox.ByteArrayPool` v3 @kind this, `int` v4 ) @signature `Lcom/android/volley/toolbox/ByteArrayPool;.getBuf:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3bad40.  @monitorenter v3
  #L3bad42.  v0:= 0I;
  #L3bad44.  v1:= v3.`com.android.volley.toolbox.ByteArrayPool.mBuffersBySize` @type ^`java.util.List` @kind object;
  #L3bad48.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3bad4e.  v1:= temp;
  #L3bad50.  if v0 >= v1 then goto L3bad94;
  #L3bad54.  v1:= v3.`com.android.volley.toolbox.ByteArrayPool.mBuffersBySize` @type ^`java.util.List` @kind object;
  #L3bad58.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3bad5e.  v1:= temp @kind object;
  #L3bad60.  v1:= (`byte`[]) v1 @kind object;
  #L3bad64.  v2:= length @variable v1;
  #L3bad66.  if v2 < v4 then goto L3bad8e;
  #L3bad6a.  v4:= v3.`com.android.volley.toolbox.ByteArrayPool.mCurrentSize` @type ^`int`;
  #L3bad6e.  v2:= length @variable v1;
  #L3bad70.  v4:= v4 - v2 @kind int;
  #L3bad72.  v3.`com.android.volley.toolbox.ByteArrayPool.mCurrentSize` @type ^`int` := v4;
  #L3bad76.  v4:= v3.`com.android.volley.toolbox.ByteArrayPool.mBuffersBySize` @type ^`java.util.List` @kind object;
  #L3bad7a.  call temp:= `remove`(v4, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3bad80.  v4:= v3.`com.android.volley.toolbox.ByteArrayPool.mBuffersByLastUse` @type ^`java.util.List` @kind object;
  #L3bad84.  call temp:= `remove`(v4, v1) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3bad8a.  @monitorexit v3
  #L3bad8c.  return v1 @kind object;
  #L3bad8e.  v0:= v0 + 1;
  #L3bad92.  goto L3bad44;
  #L3bad94.  v4:= new `byte`[v4];
  #L3bad98.  @monitorexit v3
  #L3bad9a.  return v4 @kind object;
  #L3bad9c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3bad9e.  @monitorexit v3
  #L3bada0.  throw v4;
  catch `java.lang.Throwable` @[L3bad44..L3bad8a] goto L3bad9c;
  catch `java.lang.Throwable` @[L3bad94..L3bad98] goto L3bad9c;
}
procedure `void` `returnBuf`(`com.android.volley.toolbox.ByteArrayPool` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/android/volley/toolbox/ByteArrayPool;.returnBuf:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bae2c.  @monitorenter v2
  #L3bae2e.  if v3 == 0 then goto L3bae88;
  #L3bae32.  v0:= length @variable v3;
  #L3bae34.  v1:= v2.`com.android.volley.toolbox.ByteArrayPool.mSizeLimit` @type ^`int`;
  #L3bae38.  if v0 <= v1 then goto L3bae3e;
  #L3bae3c.  goto L3bae88;
  #L3bae3e.  v0:= v2.`com.android.volley.toolbox.ByteArrayPool.mBuffersByLastUse` @type ^`java.util.List` @kind object;
  #L3bae42.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3bae48.  v0:= v2.`com.android.volley.toolbox.ByteArrayPool.mBuffersBySize` @type ^`java.util.List` @kind object;
  #L3bae4c.  v1:= `@@com.android.volley.toolbox.ByteArrayPool.BUF_COMPARATOR` @type ^`java.util.Comparator` @kind object;
  #L3bae50.  call temp:= `binarySearch`(v0, v3, v1) @signature `Ljava/util/Collections;.binarySearch:(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I` @kind static;
  #L3bae56.  v0:= temp;
  #L3bae58.  if v0 >= 0 then goto L3bae62;
  #L3bae5c.  v0:= -v0 @kind int;
  #L3bae5e.  v0:= v0 + -1;
  #L3bae62.  v1:= v2.`com.android.volley.toolbox.ByteArrayPool.mBuffersBySize` @type ^`java.util.List` @kind object;
  #L3bae66.  call `add`(v1, v0, v3) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L3bae6c.  v0:= v2.`com.android.volley.toolbox.ByteArrayPool.mCurrentSize` @type ^`int`;
  #L3bae70.  v3:= length @variable v3;
  #L3bae72.  v0:= v0 + v3 @kind int;
  #L3bae74.  v2.`com.android.volley.toolbox.ByteArrayPool.mCurrentSize` @type ^`int` := v0;
  #L3bae78.  call `trim`(v2) @signature `Lcom/android/volley/toolbox/ByteArrayPool;.trim:()V` @kind direct;
  #L3bae7e.  @monitorexit v2
  #L3bae80.  return @kind void;
  #L3bae82.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3bae84.  @monitorexit v2
  #L3bae86.  throw v3;
  #L3bae88.  @monitorexit v2
  #L3bae8a.  return @kind void;
  catch `java.lang.Throwable` @[L3bae32..L3bae7e] goto L3bae82;
}
