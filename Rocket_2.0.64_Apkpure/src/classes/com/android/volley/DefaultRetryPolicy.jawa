record `com.android.volley.DefaultRetryPolicy` @kind class @AccessFlag PUBLIC extends `com.android.volley.RetryPolicy` @kind interface {
  `float` `com.android.volley.DefaultRetryPolicy.mBackoffMultiplier` @AccessFlag PRIVATE_FINAL;
  `int` `com.android.volley.DefaultRetryPolicy.mCurrentRetryCount` @AccessFlag PRIVATE;
  `int` `com.android.volley.DefaultRetryPolicy.mCurrentTimeoutMs` @AccessFlag PRIVATE;
  `int` `com.android.volley.DefaultRetryPolicy.mMaxNumRetries` @AccessFlag PRIVATE_FINAL;
}
global `float` `@@com.android.volley.DefaultRetryPolicy.DEFAULT_BACKOFF_MULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.android.volley.DefaultRetryPolicy.DEFAULT_MAX_RETRIES` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.android.volley.DefaultRetryPolicy.DEFAULT_TIMEOUT_MS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.android.volley.DefaultRetryPolicy` v3 @kind this) @signature `Lcom/android/volley/DefaultRetryPolicy;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3b7ba8.  v0:= 2500I;
  #L3b7bac.  v1:= 1I;
  #L3b7bae.  v2:= 1.0F;
  #L3b7bb2.  call `<init>`(v3, v0, v1, v2) @signature `Lcom/android/volley/DefaultRetryPolicy;.<init>:(IIF)V` @kind direct;
  #L3b7bb8.  return @kind void;
}
procedure `void` `<init>`(`com.android.volley.DefaultRetryPolicy` v0 @kind this, `int` v1 , `int` v2 , `float` v3 ) @signature `Lcom/android/volley/DefaultRetryPolicy;.<init>:(IIF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b7bcc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b7bd2.  v0.`com.android.volley.DefaultRetryPolicy.mCurrentTimeoutMs` @type ^`int` := v1;
  #L3b7bd6.  v0.`com.android.volley.DefaultRetryPolicy.mMaxNumRetries` @type ^`int` := v2;
  #L3b7bda.  v0.`com.android.volley.DefaultRetryPolicy.mBackoffMultiplier` @type ^`float` := v3;
  #L3b7bde.  return @kind void;
}
procedure `float` `getBackoffMultiplier`(`com.android.volley.DefaultRetryPolicy` v1 @kind this) @signature `Lcom/android/volley/DefaultRetryPolicy;.getBackoffMultiplier:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b7b60.  v0:= v1.`com.android.volley.DefaultRetryPolicy.mBackoffMultiplier` @type ^`float`;
  #L3b7b64.  return v0;
}
procedure `int` `getCurrentRetryCount`(`com.android.volley.DefaultRetryPolicy` v1 @kind this) @signature `Lcom/android/volley/DefaultRetryPolicy;.getCurrentRetryCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b7b78.  v0:= v1.`com.android.volley.DefaultRetryPolicy.mCurrentRetryCount` @type ^`int`;
  #L3b7b7c.  return v0;
}
procedure `int` `getCurrentTimeout`(`com.android.volley.DefaultRetryPolicy` v1 @kind this) @signature `Lcom/android/volley/DefaultRetryPolicy;.getCurrentTimeout:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b7b90.  v0:= v1.`com.android.volley.DefaultRetryPolicy.mCurrentTimeoutMs` @type ^`int`;
  #L3b7b94.  return v0;
}
procedure `boolean` `hasAttemptRemaining`(`com.android.volley.DefaultRetryPolicy` v2 @kind this) @signature `Lcom/android/volley/DefaultRetryPolicy;.hasAttemptRemaining:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3b7b3c.  v0:= v2.`com.android.volley.DefaultRetryPolicy.mCurrentRetryCount` @type ^`int`;
  #L3b7b40.  v1:= v2.`com.android.volley.DefaultRetryPolicy.mMaxNumRetries` @type ^`int`;
  #L3b7b44.  if v0 > v1 then goto L3b7b4c;
  #L3b7b48.  v0:= 1I;
  #L3b7b4a.  goto L3b7b4e;
  #L3b7b4c.  v0:= 0I;
  #L3b7b4e.  return v0;
}
procedure `void` `retry`(`com.android.volley.DefaultRetryPolicy` v3 @kind this, `com.android.volley.VolleyError` v4 @kind object) @signature `Lcom/android/volley/DefaultRetryPolicy;.retry:(Lcom/android/volley/VolleyError;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b7bf0.  v0:= v3.`com.android.volley.DefaultRetryPolicy.mCurrentRetryCount` @type ^`int`;
  #L3b7bf4.  v0:= v0 + 1;
  #L3b7bf8.  v3.`com.android.volley.DefaultRetryPolicy.mCurrentRetryCount` @type ^`int` := v0;
  #L3b7bfc.  v0:= v3.`com.android.volley.DefaultRetryPolicy.mCurrentTimeoutMs` @type ^`int`;
  #L3b7c00.  v1:= (`float`) v0 @kind i2f;
  #L3b7c02.  v2:= v3.`com.android.volley.DefaultRetryPolicy.mBackoffMultiplier` @type ^`float`;
  #L3b7c06.  v1:= v1 * v2 @kind float;
  #L3b7c0a.  v1:= (`int`) v1 @kind f2i;
  #L3b7c0c.  v0:= v0 + v1 @kind int;
  #L3b7c0e.  v3.`com.android.volley.DefaultRetryPolicy.mCurrentTimeoutMs` @type ^`int` := v0;
  #L3b7c12.  call temp:= `hasAttemptRemaining`(v3) @signature `Lcom/android/volley/DefaultRetryPolicy;.hasAttemptRemaining:()Z` @kind virtual;
  #L3b7c18.  v0:= temp;
  #L3b7c1a.  if v0 == 0 then goto L3b7c20;
  #L3b7c1e.  return @kind void;
  #L3b7c20.  throw v4;
}
