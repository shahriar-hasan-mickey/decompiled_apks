record `com.android.volley.AsyncRequestQueue$Builder$1` @kind class @AccessFlag  extends `com.android.volley.AsyncRequestQueue$ExecutorFactory` @kind class {
  `com.android.volley.AsyncRequestQueue$Builder` `com.android.volley.AsyncRequestQueue$Builder$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.android.volley.AsyncRequestQueue$Builder$1` v0 @kind this, `com.android.volley.AsyncRequestQueue$Builder` v1 @kind object) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1;.<init>:(Lcom/android/volley/AsyncRequestQueue$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3b6908.  v0.`com.android.volley.AsyncRequestQueue$Builder$1.this$0` @type ^`com.android.volley.AsyncRequestQueue$Builder` := v1 @kind object;
  #L3b690c.  call `<init>`(v0) @signature `Lcom/android/volley/AsyncRequestQueue$ExecutorFactory;.<init>:()V` @kind direct;
  #L3b6912.  return @kind void;
}
procedure `java.util.concurrent.ThreadPoolExecutor` `getNewThreadPoolExecutor`(`com.android.volley.AsyncRequestQueue$Builder$1` v9 @kind this, `int` v10 , `java.lang.String` v11 @kind object, `java.util.concurrent.BlockingQueue` v12 @kind object) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1;.getNewThreadPoolExecutor:(ILjava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ThreadPoolExecutor;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3b68d4.  v8:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L3b68d8.  v5:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3b68dc.  call temp:= `getThreadFactory`(v9, v11) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1;.getThreadFactory:(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;` @kind direct;
  #L3b68e2.  v7:= temp @kind object;
  #L3b68e4.  v1:= 0I;
  #L3b68e6.  v3:= 60L;
  #L3b68ea.  v0:= v8 @kind object;
  #L3b68ec.  v2:= v10;
  #L3b68ee.  v6:= v12 @kind object;
  #L3b68f0.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3b68f6.  return v8 @kind object;
}
procedure `java.util.concurrent.ThreadFactory` `getThreadFactory`(`com.android.volley.AsyncRequestQueue$Builder$1` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1;.getThreadFactory:(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3b68b8.  v0:= new `com.android.volley.AsyncRequestQueue$Builder$1$1`;
  #L3b68bc.  call `<init>`(v0, v1, v2) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1$1;.<init>:(Lcom/android/volley/AsyncRequestQueue$Builder$1;Ljava/lang/String;)V` @kind direct;
  #L3b68c2.  return v0 @kind object;
}
procedure `java.util.concurrent.ExecutorService` `createBlockingExecutor`(`com.android.volley.AsyncRequestQueue$Builder$1` v2 @kind this, `java.util.concurrent.BlockingQueue` v3 @kind object) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1;.createBlockingExecutor:(Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b684c.  v0:= 4I;
  #L3b684e.  v1:= "BlockingExecutor" @kind object;
  #L3b6852.  call temp:= `getNewThreadPoolExecutor`(v2, v0, v1, v3) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1;.getNewThreadPoolExecutor:(ILjava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ThreadPoolExecutor;` @kind direct;
  #L3b6858.  v3:= temp @kind object;
  #L3b685a.  return v3 @kind object;
}
procedure `java.util.concurrent.ExecutorService` `createNonBlockingExecutor`(`com.android.volley.AsyncRequestQueue$Builder$1` v2 @kind this, `java.util.concurrent.BlockingQueue` v3 @kind object) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1;.createNonBlockingExecutor:(Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ExecutorService;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b686c.  v0:= 1I;
  #L3b686e.  v1:= "Non-BlockingExecutor" @kind object;
  #L3b6872.  call temp:= `getNewThreadPoolExecutor`(v2, v0, v1, v3) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1;.getNewThreadPoolExecutor:(ILjava/lang/String;Ljava/util/concurrent/BlockingQueue;)Ljava/util/concurrent/ThreadPoolExecutor;` @kind direct;
  #L3b6878.  v3:= temp @kind object;
  #L3b687a.  return v3 @kind object;
}
procedure `java.util.concurrent.ScheduledExecutorService` `createNonBlockingScheduledExecutor`(`com.android.volley.AsyncRequestQueue$Builder$1` v3 @kind this) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1;.createNonBlockingScheduledExecutor:()Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b688c.  v0:= new `java.util.concurrent.ScheduledThreadPoolExecutor`;
  #L3b6890.  v1:= "ScheduledExecutor" @kind object;
  #L3b6894.  call temp:= `getThreadFactory`(v3, v1) @signature `Lcom/android/volley/AsyncRequestQueue$Builder$1;.getThreadFactory:(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;` @kind direct;
  #L3b689a.  v1:= temp @kind object;
  #L3b689c.  v2:= 0I;
  #L3b689e.  call `<init>`(v0, v2, v1) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3b68a4.  return v0 @kind object;
}
