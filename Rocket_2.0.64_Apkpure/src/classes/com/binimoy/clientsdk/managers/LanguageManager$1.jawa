record `com.binimoy.clientsdk.managers.LanguageManager$1` @kind class @AccessFlag PUBLIC {
}
procedure `int` `regionMatches`() @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.regionMatches:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3cb928.  v0:= new `java.util.Random`;
  #L3cb92c.  call `<init>`(v0) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L3cb932.  v1:= 75I;
  #L3cb936.  call temp:= `nextInt`(v0, v1) @signature `Ljava/util/Random;.nextInt:(I)I` @kind virtual;
  #L3cb93c.  v0:= temp;
  #L3cb93e.  v0:= v0 + 1;
  #L3cb942.  return v0;
  #L3cb944.  v0:= 0I;
  #L3cb946.  return v0;
  catch `com.binimoy.clientsdk.managers.LanguageManager$ArrayOutOfBoundsException` @[L3cb928..L3cb93e] goto L3cb944;
}
procedure `java.lang.String` `regionMatches`(`int` v8 , `java.lang.String` v9 @kind object) @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.regionMatches:(ILjava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3cb968.  v0:= "0" @kind object;
  #L3cb96c.  v1:= 0I;
  #L3cb96e.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3cb974.  v2:= temp;
  #L3cb976.  v3:= 0I;
  #L3cb978.  v4:= 1I;
  #L3cb97a.  if v2 == 0 then goto L3cb98a;
  #L3cb97e.  v2:= 12I;
  #L3cb982.  v5:= 2I;
  #L3cb984.  v6:= v0 @kind object;
  #L3cb986.  v7:= 0I;
  #L3cb988.  goto L3cb994;
  #L3cb98a.  v5:= 4I;
  #L3cb98c.  v2:= 5I;
  #L3cb98e.  v6:= "34" @kind object;
  #L3cb992.  v7:= 1I;
  #L3cb994.  if v2 == 0 then goto L3cb9a8;
  #L3cb998.  v7:= v7 + v5 @kind int;
  #L3cb99a.  call temp:= `toCharArray`(v9) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L3cb9a0.  v9:= temp @kind object;
  #L3cb9a2.  v2:= 0I;
  #L3cb9a4.  v6:= 0I;
  #L3cb9a6.  goto L3cb9b4;
  #L3cb9a8.  v2:= v2 + 10;
  #L3cb9ac.  v9:= v1 @kind object;
  #L3cb9ae.  v7:= v5;
  #L3cb9b0.  v0:= v6 @kind object;
  #L3cb9b2.  v6:= 1I;
  #L3cb9b4.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3cb9ba.  v0:= temp;
  #L3cb9bc.  if v0 == 0 then goto L3cb9c8;
  #L3cb9c0.  v2:= v2 + 8;
  #L3cb9c4.  v0:= 1I;
  #L3cb9c6.  goto L3cb9ce;
  #L3cb9c8.  v0:= length @variable v9;
  #L3cb9ca.  v2:= v2 + 3;
  #L3cb9ce.  if v2 == 0 then goto L3cb9d6;
  #L3cb9d2.  v5:= v5 ^< v7 @kind int;
  #L3cb9d4.  goto L3cb9da;
  #L3cb9d6.  v9:= v1 @kind object;
  #L3cb9d8.  v6:= 1I;
  #L3cb9da.  v5:= v5 + -1;
  #L3cb9de.  v2:= v5 ^~ 32;
  #L3cb9e2.  if v6 == v0 then goto L3cba00;
  #L3cb9e6.  v5:= v9[v6] @kind char;
  #L3cb9ea.  v7:= v8 ^& v2 @kind int;
  #L3cb9ee.  v5:= v5 ^~ v7 @kind int;
  #L3cb9f0.  v8:= v8 + v4 @kind int;
  #L3cb9f2.  v7:= v6 + 1;
  #L3cb9f6.  v5:= (`char`) v5 @kind i2c;
  #L3cb9f8.  v9[v6]:= v5 @kind char;
  #L3cb9fc.  v6:= v7;
  #L3cb9fe.  goto L3cb9e2;
  #L3cba00.  call temp:= `valueOf`(v9, v3, v0) @signature `Ljava/lang/String;.valueOf:([CII)Ljava/lang/String;` @kind static;
  #L3cba06.  v8:= temp @kind object;
  #L3cba08.  return v8 @kind object;
  #L3cba0a.  return v1 @kind object;
  catch `com.binimoy.clientsdk.managers.LanguageManager$ArrayOutOfBoundsException` @[L3cb96e..L3cba08] goto L3cba0a;
}
