record `com.binimoy.clientsdk.utils.NetworkUtils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.binimoy.clientsdk.utils.NetworkUtils` v0 @kind this) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d0dd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d0dde.  return @kind void;
}
procedure `java.lang.String` `bytesToHex`(`byte`[] v4 @kind object) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.bytesToHex:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d0a24.  v0:= new `java.lang.StringBuilder`;
  #L3d0a28.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0a2e.  v1:= 0I;
  #L3d0a30.  v2:= length @variable v4;
  #L3d0a32.  if v1 >= v2 then goto L3d0a6c;
  #L3d0a36.  v2:= v4[v1] @kind byte;
  #L3d0a3a.  v2:= v2 ^& 255;
  #L3d0a3e.  v3:= 16I;
  #L3d0a42.  if v2 >= v3 then goto L3d0a50;
  #L3d0a46.  v3:= "0" @kind object;
  #L3d0a4a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0a50.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L3d0a56.  v2:= temp @kind object;
  #L3d0a58.  call temp:= `toUpperCase`(v2) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3d0a5e.  v2:= temp @kind object;
  #L3d0a60.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0a66.  v1:= v1 + 1;
  #L3d0a6a.  goto L3d0a30;
  #L3d0a6c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0a72.  v4:= temp @kind object;
  #L3d0a74.  return v4 @kind object;
}
procedure `java.lang.String` `getIPAddress`(`boolean` v5 ) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.getIPAddress:(Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d0a88.  call temp:= `getNetworkInterfaces`() @signature `Ljava/net/NetworkInterface;.getNetworkInterfaces:()Ljava/util/Enumeration;` @kind static;
  #L3d0a8e.  v0:= temp @kind object;
  #L3d0a90.  call temp:= `list`(v0) @signature `Ljava/util/Collections;.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;` @kind static;
  #L3d0a96.  v0:= temp @kind object;
  #L3d0a98.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d0a9e.  v0:= temp @kind object;
  #L3d0aa0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d0aa6.  v1:= temp;
  #L3d0aa8.  if v1 == 0 then goto L3d0b62;
  #L3d0aac.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d0ab2.  v1:= temp @kind object;
  #L3d0ab4.  v2:= "0" @kind object;
  #L3d0ab8.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3d0abe.  v2:= temp;
  #L3d0ac0.  if v2 == 0 then goto L3d0ac8;
  #L3d0ac4.  v1:= 0I;
  #L3d0ac6.  goto L3d0ad4;
  #L3d0ac8.  v1:= (`java.net.NetworkInterface`) v1 @kind object;
  #L3d0acc.  call temp:= `getInetAddresses`(v1) @signature `Ljava/net/NetworkInterface;.getInetAddresses:()Ljava/util/Enumeration;` @kind virtual;
  #L3d0ad2.  v1:= temp @kind object;
  #L3d0ad4.  call temp:= `list`(v1) @signature `Ljava/util/Collections;.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;` @kind static;
  #L3d0ada.  v1:= temp @kind object;
  #L3d0adc.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d0ae2.  v1:= temp @kind object;
  #L3d0ae4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d0aea.  v2:= temp;
  #L3d0aec.  if v2 == 0 then goto L3d0aa0;
  #L3d0af0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d0af6.  v2:= temp @kind object;
  #L3d0af8.  v2:= (`java.net.InetAddress`) v2 @kind object;
  #L3d0afc.  call temp:= `isLoopbackAddress`(v2) @signature `Ljava/net/InetAddress;.isLoopbackAddress:()Z` @kind virtual;
  #L3d0b02.  v3:= temp;
  #L3d0b04.  if v3 != 0 then goto L3d0ae4;
  #L3d0b08.  call temp:= `getHostAddress`(v2) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L3d0b0e.  v2:= temp @kind object;
  #L3d0b10.  v3:= 58I;
  #L3d0b14.  call temp:= `indexOf`(v2, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3d0b1a.  v3:= temp;
  #L3d0b1c.  v4:= 0I;
  #L3d0b1e.  if v3 >= 0 then goto L3d0b26;
  #L3d0b22.  v3:= 1I;
  #L3d0b24.  goto L3d0b28;
  #L3d0b26.  v3:= 0I;
  #L3d0b28.  if v5 == 0 then goto L3d0b32;
  #L3d0b2c.  if v3 == 0 then goto L3d0ae4;
  #L3d0b30.  return v2 @kind object;
  #L3d0b32.  if v3 != 0 then goto L3d0ae4;
  #L3d0b36.  v5:= 37I;
  #L3d0b3a.  call temp:= `indexOf`(v2, v5) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3d0b40.  v5:= temp;
  #L3d0b42.  if v5 >= 0 then goto L3d0b50;
  #L3d0b46.  call temp:= `toUpperCase`(v2) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3d0b4c.  v5:= temp @kind object;
  #L3d0b4e.  goto L3d0b60;
  #L3d0b50.  call temp:= `substring`(v2, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3d0b56.  v5:= temp @kind object;
  #L3d0b58.  call temp:= `toUpperCase`(v5) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3d0b5e.  v5:= temp @kind object;
  #L3d0b60.  return v5 @kind object;
  #L3d0b62.  v5:= "" @kind object;
  #L3d0b66.  return v5 @kind object;
  catch `java.lang.Exception` @[L3d0a88..L3d0b60] goto L3d0b62;
}
procedure `java.lang.String` `getMACAddress`(`java.lang.String` v9 @kind object) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.getMACAddress:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d0b88.  v0:= "" @kind object;
  #L3d0b8c.  call temp:= `getNetworkInterfaces`() @signature `Ljava/net/NetworkInterface;.getNetworkInterfaces:()Ljava/util/Enumeration;` @kind static;
  #L3d0b92.  v1:= temp @kind object;
  #L3d0b94.  call temp:= `list`(v1) @signature `Ljava/util/Collections;.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;` @kind static;
  #L3d0b9a.  v1:= temp @kind object;
  #L3d0b9c.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d0ba2.  v1:= temp @kind object;
  #L3d0ba4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d0baa.  v2:= temp;
  #L3d0bac.  if v2 == 0 then goto L3d0c7a;
  #L3d0bb0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d0bb6.  v2:= temp @kind object;
  #L3d0bb8.  v2:= (`java.net.NetworkInterface`) v2 @kind object;
  #L3d0bbc.  if v9 == 0 then goto L3d0bd6;
  #L3d0bc0.  call temp:= `getName`(v2) @signature `Ljava/net/NetworkInterface;.getName:()Ljava/lang/String;` @kind virtual;
  #L3d0bc6.  v3:= temp @kind object;
  #L3d0bc8.  call temp:= `equalsIgnoreCase`(v3, v9) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d0bce.  v3:= temp;
  #L3d0bd0.  if v3 != 0 then goto L3d0bd6;
  #L3d0bd4.  goto L3d0ba4;
  #L3d0bd6.  call temp:= `getHardwareAddress`(v2) @signature `Ljava/net/NetworkInterface;.getHardwareAddress:()[B` @kind virtual;
  #L3d0bdc.  v9:= temp @kind object;
  #L3d0bde.  if v9 != 0 then goto L3d0be4;
  #L3d0be2.  return v0 @kind object;
  #L3d0be4.  v1:= new `java.lang.StringBuilder`;
  #L3d0be8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0bee.  v2:= length @variable v9;
  #L3d0bf0.  v3:= 0I;
  #L3d0bf2.  v4:= 0I;
  #L3d0bf4.  v5:= 1I;
  #L3d0bf6.  if v4 >= v2 then goto L3d0c54;
  #L3d0bfa.  v6:= v9[v4] @kind byte;
  #L3d0bfe.  call temp:= `substring`() @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:()I` @kind static;
  #L3d0c04.  v7:= temp;
  #L3d0c06.  v8:= v7 * 2;
  #L3d0c0a.  v8:= v8 %% v7 @kind int;
  #L3d0c0c.  if v8 != 0 then goto L3d0c16;
  #L3d0c10.  v7:= "&47^=" @kind object;
  #L3d0c14.  goto L3d0c26;
  #L3d0c16.  v7:= 53I;
  #L3d0c1a.  v8:= "ewdknuix," @kind object;
  #L3d0c1e.  call temp:= `regionMatches`(v7, v8) @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.regionMatches:(ILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L3d0c24.  v7:= temp @kind object;
  #L3d0c26.  v8:= 3I;
  #L3d0c28.  call temp:= `substring`(v7, v8) @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3d0c2e.  v7:= temp @kind object;
  #L3d0c30.  v5:= new `java.lang.Object`[v5];
  #L3d0c34.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L3d0c3a.  v6:= temp @kind object;
  #L3d0c3c.  v5[v3]:= v6 @kind object;
  #L3d0c40.  call temp:= `format`(v7, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3d0c46.  v5:= temp @kind object;
  #L3d0c48.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0c4e.  v4:= v4 + 1;
  #L3d0c52.  goto L3d0bf4;
  #L3d0c54.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3d0c5a.  v9:= temp;
  #L3d0c5c.  if v9 <= 0 then goto L3d0c70;
  #L3d0c60.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3d0c66.  v9:= temp;
  #L3d0c68.  v9:= v9 - v5 @kind int;
  #L3d0c6a.  call temp:= `deleteCharAt`(v1, v9) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0c70.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0c76.  v9:= temp @kind object;
  #L3d0c78.  return v9 @kind object;
  #L3d0c7a.  return v0 @kind object;
  catch `java.lang.Exception` @[L3d0b8c..L3d0c78] goto L3d0c7a;
}
procedure `byte`[] `getUTF8Bytes`(`java.lang.String` v2 @kind object) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.getUTF8Bytes:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3d09c4.  call temp:= `substring`() @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:()I` @kind static;
  #L3d09ca.  v0:= temp;
  #L3d09cc.  v1:= v0 * 2;
  #L3d09d0.  v1:= v1 %% v0 @kind int;
  #L3d09d2.  if v1 == 0 then goto L3d09e8;
  #L3d09d6.  v0:= 103I;
  #L3d09da.  v1:= "\n\u001C\f3\u00066\u0018z\u0002\u0004\u001C+\u001E\u0000\u0018f" @kind object;
  #L3d09de.  call temp:= `regionMatches`(v0, v1) @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.regionMatches:(ILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L3d09e4.  v0:= temp @kind object;
  #L3d09e6.  goto L3d09ec;
  #L3d09e8.  v0:= "SSN$2" @kind object;
  #L3d09ec.  v1:= 6I;
  #L3d09ee.  call temp:= `substring`(v0, v1) @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3d09f4.  v0:= temp @kind object;
  #L3d09f6.  call temp:= `getBytes`(v2, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L3d09fc.  v2:= temp @kind object;
  #L3d09fe.  return v2 @kind object;
  #L3d0a00.  v2:= 0I;
  #L3d0a02.  return v2 @kind object;
  catch `java.lang.Exception` @[L3d09c4..L3d09fe] goto L3d0a00;
}
procedure `java.lang.String` `loadFileAsString`(`java.lang.String` v9 @kind object) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.loadFileAsString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d0c9c.  v0:= new `java.io.BufferedInputStream`;
  #L3d0ca0.  v1:= new `java.io.FileInputStream`;
  #L3d0ca4.  call `<init>`(v1, v9) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0caa.  v9:= 1024I;
  #L3d0cae.  call `<init>`(v0, v1, v9) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;I)V` @kind direct;
  #L3d0cb4.  v1:= new `java.io.ByteArrayOutputStream`;
  #L3d0cb8.  call `<init>`(v1, v9) @signature `Ljava/io/ByteArrayOutputStream;.<init>:(I)V` @kind direct;
  #L3d0cbe.  v2:= "0" @kind object;
  #L3d0cc2.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3d0cc8.  v2:= temp;
  #L3d0cca.  v3:= 0I;
  #L3d0ccc.  if v2 == 0 then goto L3d0cd4;
  #L3d0cd0.  v1:= v3 @kind object;
  #L3d0cd2.  goto L3d0cd8;
  #L3d0cd4.  v3:= new `byte`[v9];
  #L3d0cd8.  v9:= 0I;
  #L3d0cda.  v2:= 0I;
  #L3d0cdc.  v4:= 0I;
  #L3d0cde.  call temp:= `read`(v0, v3) @signature `Ljava/io/BufferedInputStream;.read:([B)I` @kind virtual;
  #L3d0ce4.  v5:= temp;
  #L3d0ce6.  v6:= -1I;
  #L3d0ce8.  if v5 == v6 then goto L3d0d32;
  #L3d0cec.  v6:= 1I;
  #L3d0cee.  if v4 != 0 then goto L3d0d28;
  #L3d0cf2.  v7:= v3[v9] @kind byte;
  #L3d0cf6.  v8:= -17I;
  #L3d0cfa.  if v7 != v8 then goto L3d0d28;
  #L3d0cfe.  v7:= v3[v6] @kind byte;
  #L3d0d02.  v8:= -69I;
  #L3d0d06.  if v7 != v8 then goto L3d0d28;
  #L3d0d0a.  v7:= 2I;
  #L3d0d0c.  v7:= v3[v7] @kind byte;
  #L3d0d10.  v8:= -65I;
  #L3d0d14.  if v7 != v8 then goto L3d0d28;
  #L3d0d18.  v2:= v5 + -3;
  #L3d0d1c.  v7:= 3I;
  #L3d0d1e.  call `write`(v1, v3, v7, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L3d0d24.  v2:= 1I;
  #L3d0d26.  goto L3d0d2e;
  #L3d0d28.  call `write`(v1, v3, v9, v5) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L3d0d2e.  v4:= v4 + v5 @kind int;
  #L3d0d30.  goto L3d0cde;
  #L3d0d32.  if v2 == 0 then goto L3d0d7e;
  #L3d0d36.  v9:= new `java.lang.String`;
  #L3d0d3a.  call temp:= `toByteArray`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L3d0d40.  v1:= temp @kind object;
  #L3d0d42.  call temp:= `substring`() @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:()I` @kind static;
  #L3d0d48.  v2:= temp;
  #L3d0d4a.  v3:= v2 * 2;
  #L3d0d4e.  v3:= v3 %% v2 @kind int;
  #L3d0d50.  if v3 != 0 then goto L3d0d5a;
  #L3d0d54.  v2:= "\b\n\u0019-9" @kind object;
  #L3d0d58.  goto L3d0d6a;
  #L3d0d5a.  v2:= 71I;
  #L3d0d5e.  v3:= "\u0004=9)*'(" @kind object;
  #L3d0d62.  call temp:= `regionMatches`(v2, v3) @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.regionMatches:(ILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L3d0d68.  v2:= temp @kind object;
  #L3d0d6a.  v3:= 2301I;
  #L3d0d6e.  call temp:= `substring`(v2, v3) @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3d0d74.  v2:= temp @kind object;
  #L3d0d76.  call `<init>`(v9, v1, v2) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3d0d7c.  goto L3d0d90;
  #L3d0d7e.  v9:= new `java.lang.String`;
  #L3d0d82.  call temp:= `toByteArray`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L3d0d88.  v1:= temp @kind object;
  #L3d0d8a.  call `<init>`(v9, v1) @signature `Ljava/lang/String;.<init>:([B)V` @kind direct;
  #L3d0d90.  call `close`(v0) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L3d0d96.  return v9 @kind object;
  #L3d0d98.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0d9a.  call `close`(v0) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L3d0da0.  throw v9;
  catch `java.lang.Throwable` @[L3d0cb4..L3d0d90] goto L3d0d98;
  catch `java.lang.Exception` @[L3d0d90..L3d0d96] goto L3d0d96;
  catch `java.lang.Exception` @[L3d0d9a..L3d0da0] goto L3d0da0;
}
