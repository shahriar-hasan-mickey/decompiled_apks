record `com.dbbl.liveness.utils.base.PublicMethods` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.dbbl.liveness.utils.base.PublicMethods` v0 @kind this) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40fd5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40fd62.  return @kind void;
}
procedure `java.lang.String`[] `a`(`android.app.Activity` v3 @kind object) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.a:(Landroid/app/Activity;)[Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40fd00.  v0:= 0I;
  #L40fd02.  call temp:= `getPackageManager`(v3) @signature `Landroid/app/Activity;.getPackageManager:()Landroid/content/pm/PackageManager;` @kind virtual;
  #L40fd08.  v1:= temp @kind object;
  #L40fd0a.  call temp:= `getPackageName`(v3) @signature `Landroid/app/Activity;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L40fd10.  v3:= temp @kind object;
  #L40fd12.  v2:= 4096I;
  #L40fd16.  call temp:= `getPackageInfo`(v1, v3, v2) @signature `Landroid/content/pm/PackageManager;.getPackageInfo:(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;` @kind virtual;
  #L40fd1c.  v3:= temp @kind object;
  #L40fd1e.  v3:= v3.`android.content.pm.PackageInfo.requestedPermissions` @type ^`java.lang.String`[] @kind object;
  #L40fd22.  if v3 == 0 then goto L40fd2e;
  #L40fd26.  v1:= length @variable v3;
  #L40fd28.  if v1 <= 0 then goto L40fd2e;
  #L40fd2c.  return v3 @kind object;
  #L40fd2e.  v3:= new `java.lang.String`[v0];
  #L40fd32.  return v3 @kind object;
  #L40fd34.  v3:= new `java.lang.String`[v0];
  #L40fd38.  return v3 @kind object;
  catch `java.lang.Exception` @[L40fd02..L40fd32] goto L40fd34;
}
procedure `boolean` `allPermissionsGranted`(`android.app.Activity` v5 @kind object) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.allPermissionsGranted:(Landroid/app/Activity;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L40fb54.  call temp:= `a`(v5) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.a:(Landroid/app/Activity;)[Ljava/lang/String;` @kind static;
  #L40fb5a.  v0:= temp @kind object;
  #L40fb5c.  v1:= length @variable v0;
  #L40fb5e.  v2:= 0I;
  #L40fb60.  v3:= 0I;
  #L40fb62.  if v3 >= v1 then goto L40fb7e;
  #L40fb66.  v4:= v0[v3] @kind object;
  #L40fb6a.  call temp:= `b`(v5, v4) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.b:(Landroid/content/Context;Ljava/lang/String;)Z` @kind static;
  #L40fb70.  v4:= temp;
  #L40fb72.  if v4 != 0 then goto L40fb78;
  #L40fb76.  return v2;
  #L40fb78.  v3:= v3 + 1;
  #L40fb7c.  goto L40fb62;
  #L40fb7e.  v5:= 1I;
  #L40fb80.  return v5;
}
procedure `boolean` `b`(`android.content.Context` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.b:(Landroid/content/Context;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L40fb94.  call temp:= `checkSelfPermission`(v0, v1) @signature `Landroidx/core/content/ContextCompat;.checkSelfPermission:(Landroid/content/Context;Ljava/lang/String;)I` @kind static;
  #L40fb9a.  v0:= temp;
  #L40fb9c.  if v0 != 0 then goto L40fba4;
  #L40fba0.  v0:= 1I;
  #L40fba2.  goto L40fba6;
  #L40fba4.  v0:= 0I;
  #L40fba6.  return v0;
}
procedure `android.graphics.Bitmap` `getBitmapByPath`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.getBitmapByPath:(Ljava/lang/String;Ljava/lang/String;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40fb10.  v0:= new `java.io.File`;
  #L40fb14.  call `<init>`(v0, v1, v2) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L40fb1a.  v1:= new `java.io.FileInputStream`;
  #L40fb1e.  call `<init>`(v1, v0) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L40fb24.  call temp:= `decodeStream`(v1) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;)Landroid/graphics/Bitmap;` @kind static;
  #L40fb2a.  v1:= temp @kind object;
  #L40fb2c.  return v1 @kind object;
  #L40fb2e.  v1:= 0I;
  #L40fb30.  return v1 @kind object;
  catch `java.io.FileNotFoundException` @[L40fb10..L40fb2c] goto L40fb2e;
}
procedure `void` `getRuntimePermissions`(`android.app.Activity` v7 @kind object) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.getRuntimePermissions:(Landroid/app/Activity;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L40fd74.  v0:= new `java.util.ArrayList`;
  #L40fd78.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L40fd7e.  call temp:= `a`(v7) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.a:(Landroid/app/Activity;)[Ljava/lang/String;` @kind static;
  #L40fd84.  v1:= temp @kind object;
  #L40fd86.  v2:= length @variable v1;
  #L40fd88.  v3:= 0I;
  #L40fd8a.  v4:= 0I;
  #L40fd8c.  if v4 >= v2 then goto L40fdac;
  #L40fd90.  v5:= v1[v4] @kind object;
  #L40fd94.  call temp:= `b`(v7, v5) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.b:(Landroid/content/Context;Ljava/lang/String;)Z` @kind static;
  #L40fd9a.  v6:= temp;
  #L40fd9c.  if v6 != 0 then goto L40fda6;
  #L40fda0.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40fda6.  v4:= v4 + 1;
  #L40fdaa.  goto L40fd8c;
  #L40fdac.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L40fdb2.  v1:= temp;
  #L40fdb4.  if v1 != 0 then goto L40fdd0;
  #L40fdb8.  v1:= new `java.lang.String`[v3];
  #L40fdbc.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L40fdc2.  v0:= temp @kind object;
  #L40fdc4.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L40fdc8.  v1:= 1I;
  #L40fdca.  call `requestPermissions`(v7, v0, v1) @signature `Landroidx/core/app/ActivityCompat;.requestPermissions:(Landroid/app/Activity;[Ljava/lang/String;I)V` @kind static;
  #L40fdd0.  return @kind void;
}
procedure `float` `getScreenHeight`(`android.app.Activity` v1 @kind object) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.getScreenHeight:(Landroid/app/Activity;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40fbb8.  v0:= new `android.util.DisplayMetrics`;
  #L40fbbc.  call `<init>`(v0) @signature `Landroid/util/DisplayMetrics;.<init>:()V` @kind direct;
  #L40fbc2.  call temp:= `getWindowManager`(v1) @signature `Landroid/app/Activity;.getWindowManager:()Landroid/view/WindowManager;` @kind virtual;
  #L40fbc8.  v1:= temp @kind object;
  #L40fbca.  call temp:= `getDefaultDisplay`(v1) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L40fbd0.  v1:= temp @kind object;
  #L40fbd2.  call `getMetrics`(v1, v0) @signature `Landroid/view/Display;.getMetrics:(Landroid/util/DisplayMetrics;)V` @kind virtual;
  #L40fbd8.  v1:= v0.`android.util.DisplayMetrics.heightPixels` @type ^`int`;
  #L40fbdc.  v1:= (`float`) v1 @kind i2f;
  #L40fbde.  return v1;
}
procedure `float` `getScreenWidth`(`android.app.Activity` v1 @kind object) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.getScreenWidth:(Landroid/app/Activity;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40fbf0.  v0:= new `android.util.DisplayMetrics`;
  #L40fbf4.  call `<init>`(v0) @signature `Landroid/util/DisplayMetrics;.<init>:()V` @kind direct;
  #L40fbfa.  call temp:= `getWindowManager`(v1) @signature `Landroid/app/Activity;.getWindowManager:()Landroid/view/WindowManager;` @kind virtual;
  #L40fc00.  v1:= temp @kind object;
  #L40fc02.  call temp:= `getDefaultDisplay`(v1) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L40fc08.  v1:= temp @kind object;
  #L40fc0a.  call `getMetrics`(v1, v0) @signature `Landroid/view/Display;.getMetrics:(Landroid/util/DisplayMetrics;)V` @kind virtual;
  #L40fc10.  v1:= v0.`android.util.DisplayMetrics.widthPixels` @type ^`int`;
  #L40fc14.  v1:= (`float`) v1 @kind i2f;
  #L40fc16.  return v1;
}
procedure `java.lang.String` `saveToInternalStorage`(`android.graphics.Bitmap` v2 @kind object, `java.lang.String` v3 @kind object, `android.content.Context` v4 @kind object) @signature `Lcom/dbbl/liveness/utils/base/PublicMethods;.saveToInternalStorage:(Landroid/graphics/Bitmap;Ljava/lang/String;Landroid/content/Context;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L40fc28.  v0:= "imageDir" @kind object;
  #L40fc2c.  v1:= 0I;
  #L40fc2e.  call temp:= `getDir`(v4, v0, v1) @signature `Landroid/content/Context;.getDir:(Ljava/lang/String;I)Ljava/io/File;` @kind virtual;
  #L40fc34.  v4:= temp @kind object;
  #L40fc36.  v0:= new `java.io.File`;
  #L40fc3a.  call `<init>`(v0, v4, v3) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L40fc40.  v3:= 0I;
  #L40fc42.  v1:= new `java.io.FileOutputStream`;
  #L40fc46.  call `<init>`(v1, v0) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L40fc4c.  v3:= `@@android.graphics.Bitmap$CompressFormat.PNG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L40fc50.  v0:= 100I;
  #L40fc54.  call temp:= `compress`(v2, v3, v0, v1) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L40fc5a.  call `close`(v1) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L40fc60.  goto L40fc8a;
  #L40fc62.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40fc64.  v3:= v1 @kind object;
  #L40fc66.  goto L40fc94;
  #L40fc68.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L40fc6a.  v3:= v1 @kind object;
  #L40fc6c.  goto L40fc74;
  #L40fc6e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40fc70.  goto L40fc94;
  #L40fc72.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L40fc74.  call `printStackTrace`(v2) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L40fc7a.  call `close`(v3) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L40fc80.  goto L40fc8a;
  #L40fc82.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L40fc84.  call `printStackTrace`(v2) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L40fc8a.  call temp:= `getAbsolutePath`(v4) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L40fc90.  v2:= temp @kind object;
  #L40fc92.  return v2 @kind object;
  #L40fc94.  call `close`(v3) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L40fc9a.  goto L40fca4;
  #L40fc9c.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L40fc9e.  call `printStackTrace`(v3) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L40fca4.  throw v2;
  catch `java.lang.Exception` @[L40fc42..L40fc4c] goto L40fc72;
  catch `java.lang.Throwable` @[L40fc42..L40fc4c] goto L40fc6e;
  catch `java.lang.Exception` @[L40fc4c..L40fc5a] goto L40fc68;
  catch `java.lang.Throwable` @[L40fc4c..L40fc5a] goto L40fc62;
  catch `java.io.IOException` @[L40fc5a..L40fc60] goto L40fc82;
  catch `java.lang.Throwable` @[L40fc74..L40fc7a] goto L40fc6e;
  catch `java.io.IOException` @[L40fc7a..L40fc80] goto L40fc82;
  catch `java.io.IOException` @[L40fc94..L40fc9a] goto L40fc9c;
}
