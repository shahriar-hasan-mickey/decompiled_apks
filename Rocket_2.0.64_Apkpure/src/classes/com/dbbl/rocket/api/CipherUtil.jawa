record `com.dbbl.rocket.api.CipherUtil` @kind class @AccessFlag PUBLIC {
}
global `javax.net.ssl.SSLSocketFactory` `@@com.dbbl.rocket.api.CipherUtil.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/dbbl/rocket/api/CipherUtil;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L42f160.  return @kind void;
}
procedure `void` `<init>`(`com.dbbl.rocket.api.CipherUtil` v0 @kind this) @signature `Lcom/dbbl/rocket/api/CipherUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f174.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42f17a.  return @kind void;
}
procedure `javax.net.ssl.SSLSocketFactory` `getSslSocketFactory`() @signature `Lcom/dbbl/rocket/api/CipherUtil;.getSslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42f054.  v0:= `@@com.dbbl.rocket.api.CipherUtil.a` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L42f058.  if v0 != 0 then goto L42f06c;
  #L42f05c.  v0:= `@@com.dbbl.rocket.api.Constants.CERTIFICATE` @type ^`java.lang.String` @kind object;
  #L42f060.  call temp:= `getSslSocketFactory`(v0) @signature `Lcom/dbbl/rocket/api/CipherUtil;.getSslSocketFactory:(Ljava/lang/String;)Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L42f066.  v0:= temp @kind object;
  #L42f068.  `@@com.dbbl.rocket.api.CipherUtil.a` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L42f06c.  v0:= `@@com.dbbl.rocket.api.CipherUtil.a` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L42f070.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `getSslSocketFactory`(`java.lang.String` v3 @kind object) @signature `Lcom/dbbl/rocket/api/CipherUtil;.getSslSocketFactory:(Ljava/lang/String;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L42f084.  v0:= "X.509" @kind object;
  #L42f088.  call temp:= `getInstance`(v0) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L42f08e.  v0:= temp @kind object;
  #L42f090.  v1:= new `java.io.ByteArrayInputStream`;
  #L42f094.  v2:= "UTF-8" @kind object;
  #L42f098.  call temp:= `forName`(v2) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L42f09e.  v2:= temp @kind object;
  #L42f0a0.  call temp:= `getBytes`(v3, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L42f0a6.  v3:= temp @kind object;
  #L42f0a8.  call `<init>`(v1, v3) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L42f0ae.  call temp:= `generateCertificate`(v0, v1) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L42f0b4.  v3:= temp @kind object;
  #L42f0b6.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L42f0bc.  call temp:= `getDefaultType`() @signature `Ljava/security/KeyStore;.getDefaultType:()Ljava/lang/String;` @kind static;
  #L42f0c2.  v0:= temp @kind object;
  #L42f0c4.  call temp:= `getInstance`(v0) @signature `Ljava/security/KeyStore;.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;` @kind static;
  #L42f0ca.  v0:= temp @kind object;
  #L42f0cc.  v1:= 0I;
  #L42f0ce.  call `load`(v0, v1, v1) @signature `Ljava/security/KeyStore;.load:(Ljava/io/InputStream;[C)V` @kind virtual;
  #L42f0d4.  v2:= "ca" @kind object;
  #L42f0d8.  call `setCertificateEntry`(v0, v2, v3) @signature `Ljava/security/KeyStore;.setCertificateEntry:(Ljava/lang/String;Ljava/security/cert/Certificate;)V` @kind virtual;
  #L42f0de.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L42f0e4.  v3:= temp @kind object;
  #L42f0e6.  call temp:= `getInstance`(v3) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L42f0ec.  v3:= temp @kind object;
  #L42f0ee.  call `init`(v3, v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L42f0f4.  v0:= "TLSv1.2" @kind object;
  #L42f0f8.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L42f0fe.  v0:= temp @kind object;
  #L42f100.  call temp:= `getTrustManagers`(v3) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L42f106.  v3:= temp @kind object;
  #L42f108.  call `init`(v0, v1, v3, v1) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L42f10e.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L42f114.  v3:= temp @kind object;
  #L42f116.  return v3 @kind object;
  #L42f118.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42f11a.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L42f120.  throw v3;
  #L42f122.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L42f124.  call `printStackTrace`(v3) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L42f12a.  v3:= `@@com.dbbl.rocket.api.CipherUtil.a` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L42f12e.  return v3 @kind object;
  catch `java.lang.Exception` @[L42f084..L42f0ae] goto L42f122;
  catch `java.lang.Throwable` @[L42f0ae..L42f0b6] goto L42f118;
  catch `java.lang.Exception` @[L42f0b6..L42f122] goto L42f122;
}
