record `com.dbbl.rocket.api.core.codec.binary.BaseNCodec` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.dbbl.rocket.api.core.codec.BinaryEncoder` @kind interface, `com.dbbl.rocket.api.core.codec.BinaryDecoder` @kind interface {
  `byte` `com.dbbl.rocket.api.core.codec.binary.BaseNCodec.PAD` @AccessFlag PROTECTED_FINAL;
  `int` `com.dbbl.rocket.api.core.codec.binary.BaseNCodec.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.dbbl.rocket.api.core.codec.binary.BaseNCodec.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.dbbl.rocket.api.core.codec.binary.BaseNCodec.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.dbbl.rocket.api.core.codec.binary.BaseNCodec.lineLength` @AccessFlag PROTECTED_FINAL;
}
global `int` `@@com.dbbl.rocket.api.core.codec.binary.BaseNCodec.MASK_8BITS` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.dbbl.rocket.api.core.codec.binary.BaseNCodec.MIME_CHUNK_SIZE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@com.dbbl.rocket.api.core.codec.binary.BaseNCodec.PAD_DEFAULT` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.dbbl.rocket.api.core.codec.binary.BaseNCodec.PEM_CHUNK_SIZE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.<init>:(IIII)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L435ab4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L435aba.  v0:= 61I;
  #L435abe.  v1.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec.PAD` @type ^`byte` := v0 @kind byte;
  #L435ac2.  v1.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec.a` @type ^`int` := v2;
  #L435ac6.  v1.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec.b` @type ^`int` := v3;
  #L435aca.  v2:= 0I;
  #L435acc.  if v4 <= 0 then goto L435ad8;
  #L435ad0.  if v5 <= 0 then goto L435ad8;
  #L435ad4.  v0:= 1I;
  #L435ad6.  goto L435ada;
  #L435ad8.  v0:= 0I;
  #L435ada.  if v0 == 0 then goto L435ae4;
  #L435ade.  v4:= v4 / v3 @kind int;
  #L435ae0.  v2:= v4 * v3 @kind int;
  #L435ae4.  v1.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec.lineLength` @type ^`int` := v2;
  #L435ae8.  v1.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec.c` @type ^`int` := v5;
  #L435aec.  return @kind void;
}
procedure `byte`[] `e`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v4 @kind this, `com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a` v5 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.e:(Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4358ac.  v0:= v5.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.c` @type ^`byte`[] @kind object;
  #L4358b0.  v1:= 0I;
  #L4358b2.  if v0 != 0 then goto L4358d0;
  #L4358b6.  call temp:= `getDefaultBufferSize`(v4) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.getDefaultBufferSize:()I` @kind virtual;
  #L4358bc.  v0:= temp;
  #L4358be.  v0:= new `byte`[v0];
  #L4358c2.  v5.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.c` @type ^`byte`[] := v0 @kind object;
  #L4358c6.  v5.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.d` @type ^`int` := v1;
  #L4358ca.  v5.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.e` @type ^`int` := v1;
  #L4358ce.  goto L4358e6;
  #L4358d0.  v2:= length @variable v0;
  #L4358d2.  v2:= v2 * 2;
  #L4358d6.  v2:= new `byte`[v2];
  #L4358da.  v3:= length @variable v0;
  #L4358dc.  call `arraycopy`(v0, v1, v2, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4358e2.  v5.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.c` @type ^`byte`[] := v2 @kind object;
  #L4358e6.  v5:= v5.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.c` @type ^`byte`[] @kind object;
  #L4358ea.  return v5 @kind object;
}
procedure `boolean` `isWhiteSpace`(`byte` v1 ) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.isWhiteSpace:(B)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;

  #L435780.  v0:= 9I;
  #L435784.  if v1 == v0 then goto L4357a4;
  #L435788.  v0:= 10I;
  #L43578c.  if v1 == v0 then goto L4357a4;
  #L435790.  v0:= 13I;
  #L435794.  if v1 == v0 then goto L4357a4;
  #L435798.  v0:= 32I;
  #L43579c.  if v1 == v0 then goto L4357a4;
  #L4357a0.  v1:= 0I;
  #L4357a2.  return v1;
  #L4357a4.  v1:= 1I;
  #L4357a6.  return v1;
}
procedure `int` `a`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v1 @kind this, `com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a` v2 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.a:(Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)I` @AccessFlag  {
    temp;
    v0;

  #L4358fc.  v0:= v2.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.c` @type ^`byte`[] @kind object;
  #L435900.  if v0 == 0 then goto L435910;
  #L435904.  v0:= v2.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.d` @type ^`int`;
  #L435908.  v2:= v2.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.e` @type ^`int`;
  #L43590c.  v0:= v0 - v2 @kind int;
  #L43590e.  goto L435912;
  #L435910.  v0:= 0I;
  #L435912.  return v0;
}
procedure `void` `b`(`byte`[] v0 @kind object, `int` v1 , `int` v2 , `com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a` v3 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.b:([BIILcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `c`(`byte`[] v0 @kind object, `int` v1 , `int` v2 , `com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a` v3 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.c:([BIILcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `containsAlphabetOrPad`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v5 @kind this, `byte`[] v6 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.containsAlphabetOrPad:([B)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4356bc.  v0:= 0I;
  #L4356be.  if v6 != 0 then goto L4356c4;
  #L4356c2.  return v0;
  #L4356c4.  v1:= length @variable v6;
  #L4356c6.  v2:= 0I;
  #L4356c8.  if v2 >= v1 then goto L4356f0;
  #L4356cc.  v3:= v6[v2] @kind byte;
  #L4356d0.  v4:= 61I;
  #L4356d4.  if v4 == v3 then goto L4356ec;
  #L4356d8.  call temp:= `isInAlphabet`(v5, v3) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.isInAlphabet:(B)Z` @kind virtual;
  #L4356de.  v3:= temp;
  #L4356e0.  if v3 == 0 then goto L4356e6;
  #L4356e4.  goto L4356ec;
  #L4356e6.  v2:= v2 + 1;
  #L4356ea.  goto L4356c8;
  #L4356ec.  v6:= 1I;
  #L4356ee.  return v6;
  #L4356f0.  return v0;
}
procedure `int` `d`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 , `com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a` v6 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.d:([BIILcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L43593c.  v0:= v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.c` @type ^`byte`[] @kind object;
  #L435940.  if v0 == 0 then goto L43597c;
  #L435944.  call temp:= `a`(v2, v6) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.a:(Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)I` @kind virtual;
  #L43594a.  v0:= temp;
  #L43594c.  call temp:= `min`(v0, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L435952.  v5:= temp;
  #L435954.  v0:= v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.c` @type ^`byte`[] @kind object;
  #L435958.  v1:= v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.e` @type ^`int`;
  #L43595c.  call `arraycopy`(v0, v1, v3, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L435962.  v3:= v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.e` @type ^`int`;
  #L435966.  v3:= v3 + v5 @kind int;
  #L435968.  v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.e` @type ^`int` := v3;
  #L43596c.  v4:= v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.d` @type ^`int`;
  #L435970.  if v3 < v4 then goto L43597a;
  #L435974.  v3:= 0I;
  #L435976.  v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.c` @type ^`byte`[] := v3 @kind object;
  #L43597a.  return v5;
  #L43597c.  v3:= v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.f` @type ^`boolean` @kind boolean;
  #L435980.  if v3 == 0 then goto L435988;
  #L435984.  v3:= -1I;
  #L435986.  goto L43598a;
  #L435988.  v3:= 0I;
  #L43598a.  return v3;
}
procedure `java.lang.Object` `decode`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.decode:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43599c.  v0:= instanceof @variable v2 @type ^`byte`[] @kind boolean;
  #L4359a0.  if v0 == 0 then goto L4359b2;
  #L4359a4.  v2:= (`byte`[]) v2 @kind object;
  #L4359a8.  call temp:= `decode`(v1, v2) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.decode:([B)[B` @kind virtual;
  #L4359ae.  v2:= temp @kind object;
  #L4359b0.  return v2 @kind object;
  #L4359b2.  v0:= instanceof @variable v2 @type ^`java.lang.String` @kind boolean;
  #L4359b6.  if v0 == 0 then goto L4359c8;
  #L4359ba.  v2:= (`java.lang.String`) v2 @kind object;
  #L4359be.  call temp:= `decode`(v1, v2) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.decode:(Ljava/lang/String;)[B` @kind virtual;
  #L4359c4.  v2:= temp @kind object;
  #L4359c6.  return v2 @kind object;
  #L4359c8.  v2:= new `com.dbbl.rocket.api.core.codec.DecoderException`;
  #L4359cc.  v0:= "Parameter supplied to Base-N decode is not a byte[] or a String" @kind object;
  #L4359d0.  call `<init>`(v2, v0) @signature `Lcom/dbbl/rocket/api/core/codec/DecoderException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4359d6.  throw v2;
}
procedure `byte`[] `decode`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC {
    temp;

  #L435804.  call temp:= `getBytesUtf8`(v1) @signature `Lcom/dbbl/rocket/api/core/codec/binary/StringUtils;.getBytesUtf8:(Ljava/lang/String;)[B` @kind static;
  #L43580a.  v1:= temp @kind object;
  #L43580c.  call temp:= `decode`(v0, v1) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.decode:([B)[B` @kind virtual;
  #L435812.  v1:= temp @kind object;
  #L435814.  return v1 @kind object;
}
procedure `byte`[] `decode`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v3 @kind this, `byte`[] v4 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.decode:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4357b8.  if v4 == 0 then goto L4357f0;
  #L4357bc.  v0:= length @variable v4;
  #L4357be.  if v0 != 0 then goto L4357c4;
  #L4357c2.  goto L4357f0;
  #L4357c4.  v0:= new `com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a`;
  #L4357c8.  call `<init>`(v0) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;.<init>:()V` @kind direct;
  #L4357ce.  v1:= length @variable v4;
  #L4357d0.  v2:= 0I;
  #L4357d2.  call `b`(v3, v4, v2, v1, v0) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.b:([BIILcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)V` @kind virtual;
  #L4357d8.  v1:= -1I;
  #L4357da.  call `b`(v3, v4, v2, v1, v0) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.b:([BIILcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)V` @kind virtual;
  #L4357e0.  v4:= v0.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.d` @type ^`int`;
  #L4357e4.  v1:= new `byte`[v4];
  #L4357e8.  call temp:= `d`(v3, v1, v2, v4, v0) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.d:([BIILcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)I` @kind virtual;
  #L4357ee.  return v1 @kind object;
  #L4357f0.  return v4 @kind object;
}
procedure `java.lang.Object` `encode`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.encode:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4359e8.  v0:= instanceof @variable v2 @type ^`byte`[] @kind boolean;
  #L4359ec.  if v0 == 0 then goto L4359fe;
  #L4359f0.  v2:= (`byte`[]) v2 @kind object;
  #L4359f4.  call temp:= `encode`(v1, v2) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.encode:([B)[B` @kind virtual;
  #L4359fa.  v2:= temp @kind object;
  #L4359fc.  return v2 @kind object;
  #L4359fe.  v2:= new `com.dbbl.rocket.api.core.codec.EncoderException`;
  #L435a02.  v0:= "Parameter supplied to Base-N encode is not a byte[]" @kind object;
  #L435a06.  call `<init>`(v2, v0) @signature `Lcom/dbbl/rocket/api/core/codec/EncoderException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L435a0c.  throw v2;
}
procedure `byte`[] `encode`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v3 @kind this, `byte`[] v4 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.encode:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L435828.  if v4 == 0 then goto L435866;
  #L43582c.  v0:= length @variable v4;
  #L43582e.  if v0 != 0 then goto L435834;
  #L435832.  goto L435866;
  #L435834.  v0:= new `com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a`;
  #L435838.  call `<init>`(v0) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;.<init>:()V` @kind direct;
  #L43583e.  v1:= length @variable v4;
  #L435840.  v2:= 0I;
  #L435842.  call `c`(v3, v4, v2, v1, v0) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.c:([BIILcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)V` @kind virtual;
  #L435848.  v1:= -1I;
  #L43584a.  call `c`(v3, v4, v2, v1, v0) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.c:([BIILcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)V` @kind virtual;
  #L435850.  v4:= v0.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.d` @type ^`int`;
  #L435854.  v1:= v0.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.e` @type ^`int`;
  #L435858.  v4:= v4 - v1 @kind int;
  #L43585a.  v1:= new `byte`[v4];
  #L43585e.  call temp:= `d`(v3, v1, v2, v4, v0) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.d:([BIILcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)I` @kind virtual;
  #L435864.  return v1 @kind object;
  #L435866.  return v4 @kind object;
}
procedure `java.lang.String` `encodeAsString`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.encodeAsString:([B)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L435a20.  call temp:= `encode`(v0, v1) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.encode:([B)[B` @kind virtual;
  #L435a26.  v1:= temp @kind object;
  #L435a28.  call temp:= `newStringUtf8`(v1) @signature `Lcom/dbbl/rocket/api/core/codec/binary/StringUtils;.newStringUtf8:([B)Ljava/lang/String;` @kind static;
  #L435a2e.  v1:= temp @kind object;
  #L435a30.  return v1 @kind object;
}
procedure `java.lang.String` `encodeToString`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.encodeToString:([B)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L435a44.  call temp:= `encode`(v0, v1) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.encode:([B)[B` @kind virtual;
  #L435a4a.  v1:= temp @kind object;
  #L435a4c.  call temp:= `newStringUtf8`(v1) @signature `Lcom/dbbl/rocket/api/core/codec/binary/StringUtils;.newStringUtf8:([B)Ljava/lang/String;` @kind static;
  #L435a52.  v1:= temp @kind object;
  #L435a54.  return v1 @kind object;
}
procedure `byte`[] `ensureBufferSize`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v3 @kind this, `int` v4 , `com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a` v5 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.ensureBufferSize:(ILcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)[B` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L435878.  v0:= v5.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.c` @type ^`byte`[] @kind object;
  #L43587c.  if v0 == 0 then goto L435890;
  #L435880.  v1:= length @variable v0;
  #L435882.  v2:= v5.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec$a.d` @type ^`int`;
  #L435886.  v2:= v2 + v4 @kind int;
  #L435888.  if v1 >= v2 then goto L43588e;
  #L43588c.  goto L435890;
  #L43588e.  return v0 @kind object;
  #L435890.  call temp:= `e`(v3, v5) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.e:(Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec$a;)[B` @kind direct;
  #L435896.  v4:= temp @kind object;
  #L435898.  return v4 @kind object;
}
procedure `int` `getDefaultBufferSize`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v1 @kind this) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.getDefaultBufferSize:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L435924.  v0:= 8192I;
  #L435928.  return v0;
}
procedure `long` `getEncodedLength`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v6 @kind this, `byte`[] v7 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.getEncodedLength:([B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L435a68.  v7:= length @variable v7;
  #L435a6a.  v0:= v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec.a` @type ^`int`;
  #L435a6e.  v7:= v7 + v0 @kind int;
  #L435a70.  v7:= v7 + -1;
  #L435a74.  v7:= v7 / v0 @kind int;
  #L435a76.  v0:= v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec.b` @type ^`int`;
  #L435a7a.  v7:= v7 * v0 @kind int;
  #L435a7e.  v0:= (`long`) v7 @kind i2l;
  #L435a80.  v7:= v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec.lineLength` @type ^`int`;
  #L435a84.  if v7 <= 0 then goto L435aa2;
  #L435a88.  v2:= (`long`) v7 @kind i2l;
  #L435a8a.  v2:= v2 + v0 @kind long;
  #L435a8c.  v4:= 1L;
  #L435a90.  v2:= v2 - v4 @kind long;
  #L435a92.  v4:= (`long`) v7 @kind i2l;
  #L435a94.  v2:= v2 / v4 @kind long;
  #L435a96.  v7:= v6.`com.dbbl.rocket.api.core.codec.binary.BaseNCodec.c` @type ^`int`;
  #L435a9a.  v4:= (`long`) v7 @kind i2l;
  #L435a9c.  v2:= v2 * v4 @kind long;
  #L435aa0.  v0:= v0 + v2 @kind long;
  #L435aa2.  return v0 @kind wide;
}
procedure `boolean` `isInAlphabet`(`byte` v0 ) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.isInAlphabet:(B)Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `isInAlphabet`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.isInAlphabet:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43575c.  call temp:= `getBytesUtf8`(v2) @signature `Lcom/dbbl/rocket/api/core/codec/binary/StringUtils;.getBytesUtf8:(Ljava/lang/String;)[B` @kind static;
  #L435762.  v2:= temp @kind object;
  #L435764.  v0:= 1I;
  #L435766.  call temp:= `isInAlphabet`(v1, v2, v0) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.isInAlphabet:([BZ)Z` @kind virtual;
  #L43576c.  v2:= temp;
  #L43576e.  return v2;
}
procedure `boolean` `isInAlphabet`(`com.dbbl.rocket.api.core.codec.binary.BaseNCodec` v4 @kind this, `byte`[] v5 @kind object, `boolean` v6 ) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.isInAlphabet:([BZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L435704.  v0:= 0I;
  #L435706.  v1:= 0I;
  #L435708.  v2:= length @variable v5;
  #L43570a.  if v1 >= v2 then goto L435746;
  #L43570e.  v2:= v5[v1] @kind byte;
  #L435712.  call temp:= `isInAlphabet`(v4, v2) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.isInAlphabet:(B)Z` @kind virtual;
  #L435718.  v2:= temp;
  #L43571a.  if v2 != 0 then goto L435740;
  #L43571e.  if v6 == 0 then goto L43573e;
  #L435722.  v2:= v5[v1] @kind byte;
  #L435726.  v3:= 61I;
  #L43572a.  if v2 == v3 then goto L435740;
  #L43572e.  v2:= v5[v1] @kind byte;
  #L435732.  call temp:= `isWhiteSpace`(v2) @signature `Lcom/dbbl/rocket/api/core/codec/binary/BaseNCodec;.isWhiteSpace:(B)Z` @kind static;
  #L435738.  v2:= temp;
  #L43573a.  if v2 != 0 then goto L435740;
  #L43573e.  return v0;
  #L435740.  v1:= v1 + 1;
  #L435744.  goto L435708;
  #L435746.  v5:= 1I;
  #L435748.  return v5;
}
