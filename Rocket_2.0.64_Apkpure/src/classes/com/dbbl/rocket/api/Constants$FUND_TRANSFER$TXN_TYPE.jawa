record `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.a` @AccessFlag PRIVATE;
}
global `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.CBS_TO_MBS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.MBS_TO_CBS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.MBS_TO_OTHER_BANK` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.NO_TYPE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`[] `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L42f710.  v0:= new `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`;
  #L42f714.  v1:= "NO_TYPE" @kind object;
  #L42f718.  v2:= 0I;
  #L42f71a.  call `<init>`(v0, v1, v2, v2) @signature `Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L42f720.  `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.NO_TYPE` @type ^`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` := v0 @kind object;
  #L42f724.  v1:= new `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`;
  #L42f728.  v3:= "MBS_TO_CBS" @kind object;
  #L42f72c.  v4:= 1I;
  #L42f72e.  v5:= 2I;
  #L42f730.  call `<init>`(v1, v3, v4, v5) @signature `Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L42f736.  `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.MBS_TO_CBS` @type ^`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` := v1 @kind object;
  #L42f73a.  v3:= new `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`;
  #L42f73e.  v6:= "CBS_TO_MBS" @kind object;
  #L42f742.  call `<init>`(v3, v6, v5, v4) @signature `Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L42f748.  `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.CBS_TO_MBS` @type ^`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` := v3 @kind object;
  #L42f74c.  v6:= new `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`;
  #L42f750.  v7:= "MBS_TO_OTHER_BANK" @kind object;
  #L42f754.  v8:= 3I;
  #L42f756.  call `<init>`(v6, v7, v8, v8) @signature `Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L42f75c.  `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.MBS_TO_OTHER_BANK` @type ^`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` := v6 @kind object;
  #L42f760.  v7:= 4I;
  #L42f762.  v7:= new `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`[v7];
  #L42f766.  v7[v2]:= v0 @kind object;
  #L42f76a.  v7[v4]:= v1 @kind object;
  #L42f76e.  v7[v5]:= v3 @kind object;
  #L42f772.  v7[v8]:= v6 @kind object;
  #L42f776.  `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.b` @type ^`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`[] := v7 @kind object;
  #L42f77a.  return @kind void;
}
procedure `void` `<init>`(`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L42f78c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42f792.  v0.`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.a` @type ^`int` := v3;
  #L42f796.  return @kind void;
}
procedure `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;.valueOf:(Ljava/lang/String;)Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42f6b0.  v0:= constclass @type ^`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` @kind object;
  #L42f6b4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L42f6ba.  v1:= temp @kind object;
  #L42f6bc.  v1:= (`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`) v1 @kind object;
  #L42f6c0.  return v1 @kind object;
}
procedure `com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`[] `values`() @signature `Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;.values:()[Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42f6d4.  v0:= `@@com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.b` @type ^`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`[] @kind object;
  #L42f6d8.  call temp:= `clone`(v0) @signature `[Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;.clone:()Ljava/lang/Object;` @kind virtual;
  #L42f6de.  v0:= temp @kind object;
  #L42f6e0.  v0:= (`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE`[]) v0 @kind object;
  #L42f6e4.  return v0 @kind object;
}
procedure `int` `getId`(`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE` v1 @kind this) @signature `Lcom/dbbl/rocket/api/Constants$FUND_TRANSFER$TXN_TYPE;.getId:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f6f8.  v0:= v1.`com.dbbl.rocket.api.Constants$FUND_TRANSFER$TXN_TYPE.a` @type ^`int`;
  #L42f6fc.  return v0;
}
