record `com.dbbl.rocket.api.Version` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.dbbl.rocket.api.Version.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.dbbl.rocket.api.Version` v0 @kind this) @signature `Lcom/dbbl/rocket/api/Version;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4327b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4327b6.  return @kind void;
}
procedure `void` `a`(`com.dbbl.rocket.api.Version` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/dbbl/rocket/api/Version;.a:(Lcom/dbbl/rocket/api/Version;Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L432798.  v0.`com.dbbl.rocket.api.Version.a` @type ^`java.lang.String` := v1 @kind object;
  #L43279c.  return @kind void;
}
procedure `void` `requestVersion`(`com.dbbl.rocket.api.Version` v3 @kind this, `com.dbbl.rocket.api.callbacks.VersionCallback` v4 @kind object) @signature `Lcom/dbbl/rocket/api/Version;.requestVersion:(Lcom/dbbl/rocket/api/callbacks/VersionCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4327c8.  v0:= v3.`com.dbbl.rocket.api.Version.a` @type ^`java.lang.String` @kind object;
  #L4327cc.  if v0 == 0 then goto L4327d8;
  #L4327d0.  call `success`(v4, v0) @signature `Lcom/dbbl/rocket/api/callbacks/VersionCallback;.success:(Ljava/lang/String;)V` @kind interface;
  #L4327d6.  return @kind void;
  #L4327d8.  call temp:= `getInstance`() @signature `Lcom/dbbl/rocket/api/RocketApi;.getInstance:()Lcom/dbbl/rocket/api/RocketApi;` @kind static;
  #L4327de.  v0:= temp @kind object;
  #L4327e0.  call temp:= `a`(v0) @signature `Lcom/dbbl/rocket/api/RocketApi;.a:()Lretrofit2/Retrofit;` @kind virtual;
  #L4327e6.  v0:= temp @kind object;
  #L4327e8.  v1:= constclass @type ^`com.dbbl.rocket.api.a` @kind object;
  #L4327ec.  call temp:= `create`(v0, v1) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L4327f2.  v0:= temp @kind object;
  #L4327f4.  v0:= (`com.dbbl.rocket.api.a`) v0 @kind object;
  #L4327f8.  call temp:= `a`(v0) @signature `Lcom/dbbl/rocket/api/a;.a:()Lretrofit2/Call;` @kind interface;
  #L4327fe.  v0:= temp @kind object;
  #L432800.  v1:= new `com.dbbl.rocket.api.Version$a`;
  #L432804.  call `<init>`(v1, v3, v4) @signature `Lcom/dbbl/rocket/api/Version$a;.<init>:(Lcom/dbbl/rocket/api/Version;Lcom/dbbl/rocket/api/callbacks/VersionCallback;)V` @kind direct;
  #L43280a.  call `enqueue`(v0, v1) @signature `Lretrofit2/Call;.enqueue:(Lretrofit2/Callback;)V` @kind interface;
  #L432810.  goto L432836;
  #L432812.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L432814.  call temp:= `toString`(v0) @signature `Ljava/lang/Exception;.toString:()Ljava/lang/String;` @kind virtual;
  #L43281a.  v1:= temp @kind object;
  #L43281c.  v2:= "Throws" @kind object;
  #L432820.  call temp:= `e`(v2, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L432826.  v1:= new `javax.net.ssl.SSLException`;
  #L43282a.  call `<init>`(v1, v0) @signature `Ljavax/net/ssl/SSLException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L432830.  call `failure`(v4, v1) @signature `Lcom/dbbl/rocket/api/callbacks/VersionCallback;.failure:(Ljava/lang/Exception;)V` @kind interface;
  #L432836.  return @kind void;
  catch `java.lang.Exception` @[L4327d8..L432810] goto L432812;
}
