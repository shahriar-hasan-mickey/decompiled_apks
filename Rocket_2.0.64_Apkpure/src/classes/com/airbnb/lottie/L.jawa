record `com.airbnb.lottie.L` @kind class @AccessFlag PUBLIC {
}
global `boolean` `@@com.airbnb.lottie.L.DBG` @AccessFlag PUBLIC_STATIC;
global `java.lang.String` `@@com.airbnb.lottie.L.TAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@com.airbnb.lottie.L.a` @AccessFlag PRIVATE_STATIC;
global `java.lang.String`[] `@@com.airbnb.lottie.L.b` @AccessFlag PRIVATE_STATIC;
global `long`[] `@@com.airbnb.lottie.L.c` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.airbnb.lottie.L.d` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.airbnb.lottie.L.e` @AccessFlag PRIVATE_STATIC;
global `com.airbnb.lottie.network.LottieNetworkFetcher` `@@com.airbnb.lottie.L.f` @AccessFlag PRIVATE_STATIC;
global `com.airbnb.lottie.network.LottieNetworkCacheProvider` `@@com.airbnb.lottie.L.g` @AccessFlag PRIVATE_STATIC;
global `com.airbnb.lottie.network.NetworkFetcher` `@@com.airbnb.lottie.L.h` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `com.airbnb.lottie.network.NetworkCache` `@@com.airbnb.lottie.L.i` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/L;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L394ef0.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.L` v0 @kind this) @signature `Lcom/airbnb/lottie/L;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L394f04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L394f0a.  return @kind void;
}
procedure `void` `beginSection`(`java.lang.String` v4 @kind object) @signature `Lcom/airbnb/lottie/L;.beginSection:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L394f1c.  v0:= `@@com.airbnb.lottie.L.a` @type ^`boolean` @kind boolean;
  #L394f20.  if v0 != 0 then goto L394f26;
  #L394f24.  return @kind void;
  #L394f26.  v0:= `@@com.airbnb.lottie.L.d` @type ^`int`;
  #L394f2a.  v1:= 20I;
  #L394f2e.  if v0 != v1 then goto L394f40;
  #L394f32.  v4:= `@@com.airbnb.lottie.L.e` @type ^`int`;
  #L394f36.  v4:= v4 + 1;
  #L394f3a.  `@@com.airbnb.lottie.L.e` @type ^`int` := v4;
  #L394f3e.  return @kind void;
  #L394f40.  v1:= `@@com.airbnb.lottie.L.b` @type ^`java.lang.String`[] @kind object;
  #L394f44.  v1[v0]:= v4 @kind object;
  #L394f48.  v1:= `@@com.airbnb.lottie.L.c` @type ^`long`[] @kind object;
  #L394f4c.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L394f52.  v2:= temp @kind wide;
  #L394f54.  v1[v0]:= v2 @kind wide;
  #L394f58.  call `beginSection`(v4) @signature `Landroidx/core/os/TraceCompat;.beginSection:(Ljava/lang/String;)V` @kind static;
  #L394f5e.  v4:= `@@com.airbnb.lottie.L.d` @type ^`int`;
  #L394f62.  v4:= v4 + 1;
  #L394f66.  `@@com.airbnb.lottie.L.d` @type ^`int` := v4;
  #L394f6a.  return @kind void;
}
procedure `float` `endSection`(`java.lang.String` v4 @kind object) @signature `Lcom/airbnb/lottie/L;.endSection:(Ljava/lang/String;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38f914.  v0:= `@@com.airbnb.lottie.L.e` @type ^`int`;
  #L38f918.  v1:= 0I;
  #L38f91a.  if v0 <= 0 then goto L38f928;
  #L38f91e.  v0:= v0 + -1;
  #L38f922.  `@@com.airbnb.lottie.L.e` @type ^`int` := v0;
  #L38f926.  return v1;
  #L38f928.  v0:= `@@com.airbnb.lottie.L.a` @type ^`boolean` @kind boolean;
  #L38f92c.  if v0 != 0 then goto L38f932;
  #L38f930.  return v1;
  #L38f932.  v0:= `@@com.airbnb.lottie.L.d` @type ^`int`;
  #L38f936.  v0:= v0 + -1;
  #L38f93a.  `@@com.airbnb.lottie.L.d` @type ^`int` := v0;
  #L38f93e.  v1:= -1I;
  #L38f940.  if v0 == v1 then goto L38f9d4;
  #L38f944.  v1:= `@@com.airbnb.lottie.L.b` @type ^`java.lang.String`[] @kind object;
  #L38f948.  v0:= v1[v0] @kind object;
  #L38f94c.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38f952.  v0:= temp;
  #L38f954.  if v0 == 0 then goto L38f980;
  #L38f958.  call `endSection`() @signature `Landroidx/core/os/TraceCompat;.endSection:()V` @kind static;
  #L38f95e.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L38f964.  v0:= temp @kind wide;
  #L38f966.  v4:= `@@com.airbnb.lottie.L.c` @type ^`long`[] @kind object;
  #L38f96a.  v2:= `@@com.airbnb.lottie.L.d` @type ^`int`;
  #L38f96e.  v2:= v4[v2] @kind wide;
  #L38f972.  v0:= v0 - v2 @kind long;
  #L38f974.  v4:= (`float`) v0 @kind l2f;
  #L38f976.  v0:= 1232348160I;
  #L38f97c.  v4:= v4 / v0 @kind float;
  #L38f97e.  return v4;
  #L38f980.  v0:= new `java.lang.IllegalStateException`;
  #L38f984.  v1:= new `java.lang.StringBuilder`;
  #L38f988.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38f98e.  v2:= "Unbalanced trace call " @kind object;
  #L38f992.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38f998.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38f99e.  v4:= ". Expected " @kind object;
  #L38f9a2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38f9a8.  v4:= `@@com.airbnb.lottie.L.b` @type ^`java.lang.String`[] @kind object;
  #L38f9ac.  v2:= `@@com.airbnb.lottie.L.d` @type ^`int`;
  #L38f9b0.  v4:= v4[v2] @kind object;
  #L38f9b4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38f9ba.  v4:= "." @kind object;
  #L38f9be.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38f9c4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38f9ca.  v4:= temp @kind object;
  #L38f9cc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38f9d2.  throw v0;
  #L38f9d4.  v4:= new `java.lang.IllegalStateException`;
  #L38f9d8.  v0:= "Can't end trace section. There are none." @kind object;
  #L38f9dc.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38f9e2.  throw v4;
}
procedure `com.airbnb.lottie.network.NetworkCache` `networkCache`(`android.content.Context` v3 @kind object) @signature `Lcom/airbnb/lottie/L;.networkCache:(Landroid/content/Context;)Lcom/airbnb/lottie/network/NetworkCache;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L38f84c.  v0:= `@@com.airbnb.lottie.L.i` @type ^`com.airbnb.lottie.network.NetworkCache` @kind object;
  #L38f850.  if v0 != 0 then goto L38f88e;
  #L38f854.  v1:= constclass @type ^`com.airbnb.lottie.network.NetworkCache` @kind object;
  #L38f858.  @monitorenter v1
  #L38f85a.  v0:= `@@com.airbnb.lottie.L.i` @type ^`com.airbnb.lottie.network.NetworkCache` @kind object;
  #L38f85e.  if v0 != 0 then goto L38f884;
  #L38f862.  v0:= new `com.airbnb.lottie.network.NetworkCache`;
  #L38f866.  v2:= `@@com.airbnb.lottie.L.g` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind object;
  #L38f86a.  if v2 == 0 then goto L38f870;
  #L38f86e.  goto L38f87a;
  #L38f870.  v2:= new `com.airbnb.lottie.L$a`;
  #L38f874.  call `<init>`(v2, v3) @signature `Lcom/airbnb/lottie/L$a;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L38f87a.  call `<init>`(v0, v2) @signature `Lcom/airbnb/lottie/network/NetworkCache;.<init>:(Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;)V` @kind direct;
  #L38f880.  `@@com.airbnb.lottie.L.i` @type ^`com.airbnb.lottie.network.NetworkCache` := v0 @kind object;
  #L38f884.  @monitorexit v1
  #L38f886.  goto L38f88e;
  #L38f888.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38f88a.  @monitorexit v1
  #L38f88c.  throw v3;
  #L38f88e.  return v0 @kind object;
  catch `java.lang.Throwable` @[L38f85a..L38f88c] goto L38f888;
}
procedure `com.airbnb.lottie.network.NetworkFetcher` `networkFetcher`(`android.content.Context` v3 @kind object) @signature `Lcom/airbnb/lottie/L;.networkFetcher:(Landroid/content/Context;)Lcom/airbnb/lottie/network/NetworkFetcher;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L38f8ac.  v0:= `@@com.airbnb.lottie.L.h` @type ^`com.airbnb.lottie.network.NetworkFetcher` @kind object;
  #L38f8b0.  if v0 != 0 then goto L38f8f6;
  #L38f8b4.  v1:= constclass @type ^`com.airbnb.lottie.network.NetworkFetcher` @kind object;
  #L38f8b8.  @monitorenter v1
  #L38f8ba.  v0:= `@@com.airbnb.lottie.L.h` @type ^`com.airbnb.lottie.network.NetworkFetcher` @kind object;
  #L38f8be.  if v0 != 0 then goto L38f8ec;
  #L38f8c2.  v0:= new `com.airbnb.lottie.network.NetworkFetcher`;
  #L38f8c6.  call temp:= `networkCache`(v3) @signature `Lcom/airbnb/lottie/L;.networkCache:(Landroid/content/Context;)Lcom/airbnb/lottie/network/NetworkCache;` @kind static;
  #L38f8cc.  v3:= temp @kind object;
  #L38f8ce.  v2:= `@@com.airbnb.lottie.L.f` @type ^`com.airbnb.lottie.network.LottieNetworkFetcher` @kind object;
  #L38f8d2.  if v2 == 0 then goto L38f8d8;
  #L38f8d6.  goto L38f8e2;
  #L38f8d8.  v2:= new `com.airbnb.lottie.network.DefaultLottieNetworkFetcher`;
  #L38f8dc.  call `<init>`(v2) @signature `Lcom/airbnb/lottie/network/DefaultLottieNetworkFetcher;.<init>:()V` @kind direct;
  #L38f8e2.  call `<init>`(v0, v3, v2) @signature `Lcom/airbnb/lottie/network/NetworkFetcher;.<init>:(Lcom/airbnb/lottie/network/NetworkCache;Lcom/airbnb/lottie/network/LottieNetworkFetcher;)V` @kind direct;
  #L38f8e8.  `@@com.airbnb.lottie.L.h` @type ^`com.airbnb.lottie.network.NetworkFetcher` := v0 @kind object;
  #L38f8ec.  @monitorexit v1
  #L38f8ee.  goto L38f8f6;
  #L38f8f0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38f8f2.  @monitorexit v1
  #L38f8f4.  throw v3;
  #L38f8f6.  return v0 @kind object;
  catch `java.lang.Throwable` @[L38f8ba..L38f8f4] goto L38f8f0;
}
procedure `void` `setCacheProvider`(`com.airbnb.lottie.network.LottieNetworkCacheProvider` v0 @kind object) @signature `Lcom/airbnb/lottie/L;.setCacheProvider:(Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L394f7c.  `@@com.airbnb.lottie.L.g` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` := v0 @kind object;
  #L394f80.  return @kind void;
}
procedure `void` `setFetcher`(`com.airbnb.lottie.network.LottieNetworkFetcher` v0 @kind object) @signature `Lcom/airbnb/lottie/L;.setFetcher:(Lcom/airbnb/lottie/network/LottieNetworkFetcher;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L394f94.  `@@com.airbnb.lottie.L.f` @type ^`com.airbnb.lottie.network.LottieNetworkFetcher` := v0 @kind object;
  #L394f98.  return @kind void;
}
procedure `void` `setTraceEnabled`(`boolean` v1 ) @signature `Lcom/airbnb/lottie/L;.setTraceEnabled:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L394fac.  v0:= `@@com.airbnb.lottie.L.a` @type ^`boolean` @kind boolean;
  #L394fb0.  if v0 != v1 then goto L394fb6;
  #L394fb4.  return @kind void;
  #L394fb6.  `@@com.airbnb.lottie.L.a` @type ^`boolean` := v1 @kind boolean;
  #L394fba.  if v1 == 0 then goto L394fd2;
  #L394fbe.  v1:= 20I;
  #L394fc2.  v0:= new `java.lang.String`[v1];
  #L394fc6.  `@@com.airbnb.lottie.L.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L394fca.  v1:= new `long`[v1];
  #L394fce.  `@@com.airbnb.lottie.L.c` @type ^`long`[] := v1 @kind object;
  #L394fd2.  return @kind void;
}
