record `com.airbnb.lottie.LottieAnimationView$a` @kind class @AccessFlag  extends `com.airbnb.lottie.LottieListener` @kind interface {
}
procedure `void` `<init>`(`com.airbnb.lottie.LottieAnimationView$a` v0 @kind this) @signature `Lcom/airbnb/lottie/LottieAnimationView$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L38f9f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38f9fa.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.LottieAnimationView$a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lcom/airbnb/lottie/LottieAnimationView$a;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38fa28.  call temp:= `isNetworkException`(v3) @signature `Lcom/airbnb/lottie/utils/Utils;.isNetworkException:(Ljava/lang/Throwable;)Z` @kind static;
  #L38fa2e.  v0:= temp;
  #L38fa30.  if v0 == 0 then goto L38fa40;
  #L38fa34.  v0:= "Unable to load composition." @kind object;
  #L38fa38.  call `warning`(v0, v3) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L38fa3e.  return @kind void;
  #L38fa40.  v0:= new `java.lang.IllegalStateException`;
  #L38fa44.  v1:= "Unable to parse composition" @kind object;
  #L38fa48.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L38fa4e.  throw v0;
}
procedure `void` `onResult`(`com.airbnb.lottie.LottieAnimationView$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/airbnb/lottie/LottieAnimationView$a;.onResult:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L38fa0c.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L38fa10.  call `a`(v0, v1) @signature `Lcom/airbnb/lottie/LottieAnimationView$a;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L38fa16.  return @kind void;
}
