record `com.airbnb.lottie.LottieTask` @kind class @AccessFlag PUBLIC {
  `java.util.Set` `com.airbnb.lottie.LottieTask.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.airbnb.lottie.LottieTask.b` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.airbnb.lottie.LottieTask.c` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.LottieResult` `com.airbnb.lottie.LottieTask.d` @AccessFlag PRIVATE_VOLATILE;
}
global `java.util.concurrent.Executor` `@@com.airbnb.lottie.LottieTask.EXECUTOR` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/LottieTask;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L394c48.  call temp:= `newCachedThreadPool`() @signature `Ljava/util/concurrent/Executors;.newCachedThreadPool:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L394c4e.  v0:= temp @kind object;
  #L394c50.  `@@com.airbnb.lottie.LottieTask.EXECUTOR` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L394c54.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.LottieTask` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L394c68.  v0:= 0I;
  #L394c6a.  call `<init>`(v1, v2, v0) @signature `Lcom/airbnb/lottie/LottieTask;.<init>:(Ljava/util/concurrent/Callable;Z)V` @kind direct;
  #L394c70.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.LottieTask` v2 @kind this, `java.util.concurrent.Callable` v3 @kind object, `boolean` v4 ) @signature `Lcom/airbnb/lottie/LottieTask;.<init>:(Ljava/util/concurrent/Callable;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L394c84.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L394c8a.  v0:= new `java.util.LinkedHashSet`;
  #L394c8e.  v1:= 1I;
  #L394c90.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L394c96.  v2.`com.airbnb.lottie.LottieTask.a` @type ^`java.util.Set` := v0 @kind object;
  #L394c9a.  v0:= new `java.util.LinkedHashSet`;
  #L394c9e.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L394ca4.  v2.`com.airbnb.lottie.LottieTask.b` @type ^`java.util.Set` := v0 @kind object;
  #L394ca8.  v0:= new `android.os.Handler`;
  #L394cac.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L394cb2.  v1:= temp @kind object;
  #L394cb4.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L394cba.  v2.`com.airbnb.lottie.LottieTask.c` @type ^`android.os.Handler` := v0 @kind object;
  #L394cbe.  v0:= 0I;
  #L394cc0.  v2.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` := v0 @kind object;
  #L394cc4.  if v4 == 0 then goto L394cf0;
  #L394cc8.  call temp:= `call`(v3) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L394cce.  v3:= temp @kind object;
  #L394cd0.  v3:= (`com.airbnb.lottie.LottieResult`) v3 @kind object;
  #L394cd4.  call `h`(v2, v3) @signature `Lcom/airbnb/lottie/LottieTask;.h:(Lcom/airbnb/lottie/LottieResult;)V` @kind direct;
  #L394cda.  goto L394d04;
  #L394cdc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394cde.  v4:= new `com.airbnb.lottie.LottieResult`;
  #L394ce2.  call `<init>`(v4, v3) @signature `Lcom/airbnb/lottie/LottieResult;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L394ce8.  call `h`(v2, v4) @signature `Lcom/airbnb/lottie/LottieTask;.h:(Lcom/airbnb/lottie/LottieResult;)V` @kind direct;
  #L394cee.  goto L394d04;
  #L394cf0.  v4:= `@@com.airbnb.lottie.LottieTask.EXECUTOR` @type ^`java.util.concurrent.Executor` @kind object;
  #L394cf4.  v0:= new `com.airbnb.lottie.LottieTask$b`;
  #L394cf8.  call `<init>`(v0, v2, v3) @signature `Lcom/airbnb/lottie/LottieTask$b;.<init>:(Lcom/airbnb/lottie/LottieTask;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L394cfe.  call `execute`(v4, v0) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L394d04.  return @kind void;
  catch `java.lang.Throwable` @[L394cc8..L394cda] goto L394cdc;
}
procedure `com.airbnb.lottie.LottieResult` `a`(`com.airbnb.lottie.LottieTask` v0 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.a:(Lcom/airbnb/lottie/LottieTask;)Lcom/airbnb/lottie/LottieResult;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L394b10.  v0:= v0.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L394b14.  return v0 @kind object;
}
procedure `void` `b`(`com.airbnb.lottie.LottieTask` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.b:(Lcom/airbnb/lottie/LottieTask;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L394d24.  call `g`(v0, v1) @signature `Lcom/airbnb/lottie/LottieTask;.g:(Ljava/lang/Object;)V` @kind direct;
  #L394d2a.  return @kind void;
}
procedure `void` `c`(`com.airbnb.lottie.LottieTask` v0 @kind object, `java.lang.Throwable` v1 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.c:(Lcom/airbnb/lottie/LottieTask;Ljava/lang/Throwable;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L394d3c.  call `e`(v0, v1) @signature `Lcom/airbnb/lottie/LottieTask;.e:(Ljava/lang/Throwable;)V` @kind direct;
  #L394d42.  return @kind void;
}
procedure `void` `d`(`com.airbnb.lottie.LottieTask` v0 @kind object, `com.airbnb.lottie.LottieResult` v1 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.d:(Lcom/airbnb/lottie/LottieTask;Lcom/airbnb/lottie/LottieResult;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L394d54.  call `h`(v0, v1) @signature `Lcom/airbnb/lottie/LottieTask;.h:(Lcom/airbnb/lottie/LottieResult;)V` @kind direct;
  #L394d5a.  return @kind void;
}
procedure `void` `e`(`com.airbnb.lottie.LottieTask` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.e:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L394d6c.  @monitorenter v2
  #L394d6e.  v0:= new `java.util.ArrayList`;
  #L394d72.  v1:= v2.`com.airbnb.lottie.LottieTask.b` @type ^`java.util.Set` @kind object;
  #L394d76.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L394d7c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L394d82.  v1:= temp;
  #L394d84.  if v1 == 0 then goto L394d96;
  #L394d88.  v0:= "Lottie encountered an error but no failure listener was added:" @kind object;
  #L394d8c.  call `warning`(v0, v3) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L394d92.  @monitorexit v2
  #L394d94.  return @kind void;
  #L394d96.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L394d9c.  v0:= temp @kind object;
  #L394d9e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L394da4.  v1:= temp;
  #L394da6.  if v1 == 0 then goto L394dbe;
  #L394daa.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L394db0.  v1:= temp @kind object;
  #L394db2.  v1:= (`com.airbnb.lottie.LottieListener`) v1 @kind object;
  #L394db6.  call `onResult`(v1, v3) @signature `Lcom/airbnb/lottie/LottieListener;.onResult:(Ljava/lang/Object;)V` @kind interface;
  #L394dbc.  goto L394d9e;
  #L394dbe.  @monitorexit v2
  #L394dc0.  return @kind void;
  #L394dc2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394dc4.  @monitorexit v2
  #L394dc6.  throw v3;
  catch `java.lang.Throwable` @[L394d6e..L394d92] goto L394dc2;
  catch `java.lang.Throwable` @[L394d96..L394dbc] goto L394dc2;
}
procedure `void` `f`(`com.airbnb.lottie.LottieTask` v2 @kind this) @signature `Lcom/airbnb/lottie/LottieTask;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L394dec.  v0:= v2.`com.airbnb.lottie.LottieTask.c` @type ^`android.os.Handler` @kind object;
  #L394df0.  v1:= new `com.airbnb.lottie.LottieTask$a`;
  #L394df4.  call `<init>`(v1, v2) @signature `Lcom/airbnb/lottie/LottieTask$a;.<init>:(Lcom/airbnb/lottie/LottieTask;)V` @kind direct;
  #L394dfa.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L394e00.  return @kind void;
}
procedure `void` `g`(`com.airbnb.lottie.LottieTask` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.g:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L394e14.  @monitorenter v2
  #L394e16.  v0:= new `java.util.ArrayList`;
  #L394e1a.  v1:= v2.`com.airbnb.lottie.LottieTask.a` @type ^`java.util.Set` @kind object;
  #L394e1e.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L394e24.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L394e2a.  v0:= temp @kind object;
  #L394e2c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L394e32.  v1:= temp;
  #L394e34.  if v1 == 0 then goto L394e4c;
  #L394e38.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L394e3e.  v1:= temp @kind object;
  #L394e40.  v1:= (`com.airbnb.lottie.LottieListener`) v1 @kind object;
  #L394e44.  call `onResult`(v1, v3) @signature `Lcom/airbnb/lottie/LottieListener;.onResult:(Ljava/lang/Object;)V` @kind interface;
  #L394e4a.  goto L394e2c;
  #L394e4c.  @monitorexit v2
  #L394e4e.  return @kind void;
  #L394e50.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394e52.  @monitorexit v2
  #L394e54.  throw v3;
  catch `java.lang.Throwable` @[L394e16..L394e4a] goto L394e50;
}
procedure `void` `h`(`com.airbnb.lottie.LottieTask` v1 @kind this, `com.airbnb.lottie.LottieResult` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.h:(Lcom/airbnb/lottie/LottieResult;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L394e74.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L394e78.  if v0 != 0 then goto L394e88;
  #L394e7c.  v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` := v2 @kind object;
  #L394e80.  call `f`(v1) @signature `Lcom/airbnb/lottie/LottieTask;.f:()V` @kind direct;
  #L394e86.  return @kind void;
  #L394e88.  v2:= new `java.lang.IllegalStateException`;
  #L394e8c.  v0:= "A task may only be set once." @kind object;
  #L394e90.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L394e96.  throw v2;
}
procedure `com.airbnb.lottie.LottieTask` `addFailureListener`(`com.airbnb.lottie.LottieTask` v1 @kind this, `com.airbnb.lottie.LottieListener` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.addFailureListener:(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394b28.  @monitorenter v1
  #L394b2a.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L394b2e.  if v0 == 0 then goto L394b54;
  #L394b32.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L394b36.  call temp:= `getException`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getException:()Ljava/lang/Throwable;` @kind virtual;
  #L394b3c.  v0:= temp @kind object;
  #L394b3e.  if v0 == 0 then goto L394b54;
  #L394b42.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L394b46.  call temp:= `getException`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getException:()Ljava/lang/Throwable;` @kind virtual;
  #L394b4c.  v0:= temp @kind object;
  #L394b4e.  call `onResult`(v2, v0) @signature `Lcom/airbnb/lottie/LottieListener;.onResult:(Ljava/lang/Object;)V` @kind interface;
  #L394b54.  v0:= v1.`com.airbnb.lottie.LottieTask.b` @type ^`java.util.Set` @kind object;
  #L394b58.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L394b5e.  @monitorexit v1
  #L394b60.  return v1 @kind object;
  #L394b62.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394b64.  @monitorexit v1
  #L394b66.  throw v2;
  catch `java.lang.Throwable` @[L394b2a..L394b5e] goto L394b62;
}
procedure `com.airbnb.lottie.LottieTask` `addListener`(`com.airbnb.lottie.LottieTask` v1 @kind this, `com.airbnb.lottie.LottieListener` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.addListener:(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394b84.  @monitorenter v1
  #L394b86.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L394b8a.  if v0 == 0 then goto L394bb0;
  #L394b8e.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L394b92.  call temp:= `getValue`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L394b98.  v0:= temp @kind object;
  #L394b9a.  if v0 == 0 then goto L394bb0;
  #L394b9e.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L394ba2.  call temp:= `getValue`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L394ba8.  v0:= temp @kind object;
  #L394baa.  call `onResult`(v2, v0) @signature `Lcom/airbnb/lottie/LottieListener;.onResult:(Ljava/lang/Object;)V` @kind interface;
  #L394bb0.  v0:= v1.`com.airbnb.lottie.LottieTask.a` @type ^`java.util.Set` @kind object;
  #L394bb4.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L394bba.  @monitorexit v1
  #L394bbc.  return v1 @kind object;
  #L394bbe.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394bc0.  @monitorexit v1
  #L394bc2.  throw v2;
  catch `java.lang.Throwable` @[L394b86..L394bba] goto L394bbe;
}
procedure `com.airbnb.lottie.LottieTask` `removeFailureListener`(`com.airbnb.lottie.LottieTask` v1 @kind this, `com.airbnb.lottie.LottieListener` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.removeFailureListener:(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394be0.  @monitorenter v1
  #L394be2.  v0:= v1.`com.airbnb.lottie.LottieTask.b` @type ^`java.util.Set` @kind object;
  #L394be6.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L394bec.  @monitorexit v1
  #L394bee.  return v1 @kind object;
  #L394bf0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394bf2.  @monitorexit v1
  #L394bf4.  throw v2;
  catch `java.lang.Throwable` @[L394be2..L394bec] goto L394bf0;
}
procedure `com.airbnb.lottie.LottieTask` `removeListener`(`com.airbnb.lottie.LottieTask` v1 @kind this, `com.airbnb.lottie.LottieListener` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.removeListener:(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394c14.  @monitorenter v1
  #L394c16.  v0:= v1.`com.airbnb.lottie.LottieTask.a` @type ^`java.util.Set` @kind object;
  #L394c1a.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L394c20.  @monitorexit v1
  #L394c22.  return v1 @kind object;
  #L394c24.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L394c26.  @monitorexit v1
  #L394c28.  throw v2;
  catch `java.lang.Throwable` @[L394c16..L394c20] goto L394c24;
}
