record `com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.animation.keyframe.a` @kind class {
}
procedure `void` `<init>`(`com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39a9fc.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/animation/keyframe/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L39aa02.  return @kind void;
}
procedure `float` `e`(`com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` v9 @kind this, `com.airbnb.lottie.value.Keyframe` v10 @kind object, `float` v11 ) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.e:(Lcom/airbnb/lottie/value/Keyframe;F)F` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L39a924.  v0:= v10.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L39a928.  if v0 == 0 then goto L39a99a;
  #L39a92c.  v0:= v10.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L39a930.  if v0 == 0 then goto L39a99a;
  #L39a934.  v1:= v9.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation.valueCallback` @type ^`com.airbnb.lottie.value.LottieValueCallback` @kind object;
  #L39a938.  if v1 == 0 then goto L39a980;
  #L39a93c.  v2:= v10.`com.airbnb.lottie.value.Keyframe.startFrame` @type ^`float`;
  #L39a940.  v0:= v10.`com.airbnb.lottie.value.Keyframe.endFrame` @type ^`java.lang.Float` @kind object;
  #L39a944.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L39a94a.  v3:= temp;
  #L39a94c.  v4:= v10.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L39a950.  v5:= v10.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L39a954.  call temp:= `b`(v9) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.b:()F` @kind virtual;
  #L39a95a.  v7:= temp;
  #L39a95c.  call temp:= `getProgress`(v9) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getProgress:()F` @kind virtual;
  #L39a962.  v8:= temp;
  #L39a964.  v6:= v11;
  #L39a966.  call temp:= `getValueInternal`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/value/LottieValueCallback;.getValueInternal:(FFLjava/lang/Object;Ljava/lang/Object;FFF)Ljava/lang/Object;` @kind virtual;
  #L39a96c.  v0:= temp @kind object;
  #L39a96e.  v0:= (`java.lang.Float`) v0 @kind object;
  #L39a972.  if v0 == 0 then goto L39a980;
  #L39a976.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L39a97c.  v10:= temp;
  #L39a97e.  return v10;
  #L39a980.  call temp:= `getStartValueFloat`(v10) @signature `Lcom/airbnb/lottie/value/Keyframe;.getStartValueFloat:()F` @kind virtual;
  #L39a986.  v0:= temp;
  #L39a988.  call temp:= `getEndValueFloat`(v10) @signature `Lcom/airbnb/lottie/value/Keyframe;.getEndValueFloat:()F` @kind virtual;
  #L39a98e.  v10:= temp;
  #L39a990.  call temp:= `lerp`(v0, v10, v11) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L39a996.  v10:= temp;
  #L39a998.  return v10;
  #L39a99a.  v10:= new `java.lang.IllegalStateException`;
  #L39a99e.  v11:= "Missing values for keyframe." @kind object;
  #L39a9a2.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39a9a8.  throw v10;
}
procedure `java.lang.Float` `f`(`com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` v0 @kind this, `com.airbnb.lottie.value.Keyframe` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.f:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Float;` @AccessFlag  {
    temp;

  #L39a9bc.  call temp:= `e`(v0, v1, v2) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.e:(Lcom/airbnb/lottie/value/Keyframe;F)F` @kind virtual;
  #L39a9c2.  v1:= temp;
  #L39a9c4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L39a9ca.  v1:= temp @kind object;
  #L39a9cc.  return v1 @kind object;
}
procedure `float` `getFloatValue`(`com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` v2 @kind this) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.getFloatValue:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a8f8.  call temp:= `getCurrentKeyframe`(v2) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getCurrentKeyframe:()Lcom/airbnb/lottie/value/Keyframe;` @kind virtual;
  #L39a8fe.  v0:= temp @kind object;
  #L39a900.  call temp:= `getInterpolatedCurrentKeyframeProgress`(v2) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getInterpolatedCurrentKeyframeProgress:()F` @kind virtual;
  #L39a906.  v1:= temp;
  #L39a908.  call temp:= `e`(v2, v0, v1) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.e:(Lcom/airbnb/lottie/value/Keyframe;F)F` @kind virtual;
  #L39a90e.  v0:= temp;
  #L39a910.  return v0;
}
procedure `java.lang.Object` `getValue`(`com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` v0 @kind this, `com.airbnb.lottie.value.Keyframe` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.getValue:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Object;` @AccessFlag SYNTHETIC {
    temp;

  #L39a9e0.  call temp:= `f`(v0, v1, v2) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.f:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Float;` @kind virtual;
  #L39a9e6.  v1:= temp @kind object;
  #L39a9e8.  return v1 @kind object;
}
