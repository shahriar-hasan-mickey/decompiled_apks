record `com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d` @kind class @AccessFlag FINAL extends `com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$c` @kind interface {
  `java.util.List` `com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.a` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.value.Keyframe` `com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.b` @AccessFlag PRIVATE;
  `com.airbnb.lottie.value.Keyframe` `com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.c` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation$d;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L39a2dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39a2e2.  v0:= 0I;
  #L39a2e4.  v1.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.c` @type ^`com.airbnb.lottie.value.Keyframe` := v0 @kind object;
  #L39a2e8.  v0:= -1.0F;
  #L39a2ec.  v1.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.d` @type ^`float` := v0;
  #L39a2f0.  v1.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.a` @type ^`java.util.List` := v2 @kind object;
  #L39a2f4.  v2:= 0I;
  #L39a2f6.  call temp:= `f`(v1, v2) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation$d;.f:(F)Lcom/airbnb/lottie/value/Keyframe;` @kind direct;
  #L39a2fc.  v2:= temp @kind object;
  #L39a2fe.  v1.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.b` @type ^`com.airbnb.lottie.value.Keyframe` := v2 @kind object;
  #L39a302.  return @kind void;
}
procedure `com.airbnb.lottie.value.Keyframe` `f`(`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d` v4 @kind this, `float` v5 ) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation$d;.f:(F)Lcom/airbnb/lottie/value/Keyframe;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39a1cc.  v0:= v4.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.a` @type ^`java.util.List` @kind object;
  #L39a1d0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39a1d6.  v1:= temp;
  #L39a1d8.  v2:= 1I;
  #L39a1da.  v1:= v1 - v2 @kind int;
  #L39a1dc.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39a1e2.  v0:= temp @kind object;
  #L39a1e4.  v0:= (`com.airbnb.lottie.value.Keyframe`) v0 @kind object;
  #L39a1e8.  call temp:= `getStartProgress`(v0) @signature `Lcom/airbnb/lottie/value/Keyframe;.getStartProgress:()F` @kind virtual;
  #L39a1ee.  v1:= temp;
  #L39a1f0.  v1:= fcmpl(v5, v1);
  #L39a1f4.  if v1 < 0 then goto L39a1fa;
  #L39a1f8.  return v0 @kind object;
  #L39a1fa.  v0:= v4.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.a` @type ^`java.util.List` @kind object;
  #L39a1fe.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39a204.  v0:= temp;
  #L39a206.  v0:= v0 + -2;
  #L39a20a.  if v0 < v2 then goto L39a23c;
  #L39a20e.  v1:= v4.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.a` @type ^`java.util.List` @kind object;
  #L39a212.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39a218.  v1:= temp @kind object;
  #L39a21a.  v1:= (`com.airbnb.lottie.value.Keyframe`) v1 @kind object;
  #L39a21e.  v3:= v4.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.b` @type ^`com.airbnb.lottie.value.Keyframe` @kind object;
  #L39a222.  if v3 != v1 then goto L39a228;
  #L39a226.  goto L39a236;
  #L39a228.  call temp:= `containsProgress`(v1, v5) @signature `Lcom/airbnb/lottie/value/Keyframe;.containsProgress:(F)Z` @kind virtual;
  #L39a22e.  v3:= temp;
  #L39a230.  if v3 == 0 then goto L39a236;
  #L39a234.  return v1 @kind object;
  #L39a236.  v0:= v0 + -1;
  #L39a23a.  goto L39a20a;
  #L39a23c.  v5:= v4.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.a` @type ^`java.util.List` @kind object;
  #L39a240.  v0:= 0I;
  #L39a242.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39a248.  v5:= temp @kind object;
  #L39a24a.  v5:= (`com.airbnb.lottie.value.Keyframe`) v5 @kind object;
  #L39a24e.  return v5 @kind object;
}
procedure `boolean` `a`(`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d` v2 @kind this, `float` v3 ) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation$d;.a:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a140.  v0:= v2.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.c` @type ^`com.airbnb.lottie.value.Keyframe` @kind object;
  #L39a144.  v1:= v2.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.b` @type ^`com.airbnb.lottie.value.Keyframe` @kind object;
  #L39a148.  if v0 != v1 then goto L39a15c;
  #L39a14c.  v0:= v2.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.d` @type ^`float`;
  #L39a150.  v0:= fcmpl(v0, v3);
  #L39a154.  if v0 != 0 then goto L39a15c;
  #L39a158.  v3:= 1I;
  #L39a15a.  return v3;
  #L39a15c.  v2.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.c` @type ^`com.airbnb.lottie.value.Keyframe` := v1 @kind object;
  #L39a160.  v2.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.d` @type ^`float` := v3;
  #L39a164.  v3:= 0I;
  #L39a166.  return v3;
}
procedure `com.airbnb.lottie.value.Keyframe` `b`(`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d` v1 @kind this) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation$d;.b:()Lcom/airbnb/lottie/value/Keyframe;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39a260.  v0:= v1.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.b` @type ^`com.airbnb.lottie.value.Keyframe` @kind object;
  #L39a264.  return v0 @kind object;
}
procedure `boolean` `c`(`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d` v2 @kind this, `float` v3 ) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation$d;.c:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a18c.  v0:= v2.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.b` @type ^`com.airbnb.lottie.value.Keyframe` @kind object;
  #L39a190.  call temp:= `containsProgress`(v0, v3) @signature `Lcom/airbnb/lottie/value/Keyframe;.containsProgress:(F)Z` @kind virtual;
  #L39a196.  v0:= temp;
  #L39a198.  v1:= 1I;
  #L39a19a.  if v0 == 0 then goto L39a1ae;
  #L39a19e.  v3:= v2.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.b` @type ^`com.airbnb.lottie.value.Keyframe` @kind object;
  #L39a1a2.  call temp:= `isStatic`(v3) @signature `Lcom/airbnb/lottie/value/Keyframe;.isStatic:()Z` @kind virtual;
  #L39a1a8.  v3:= temp;
  #L39a1aa.  v3:= v3 ^~ v1 @kind int;
  #L39a1ac.  return v3;
  #L39a1ae.  call temp:= `f`(v2, v3) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation$d;.f:(F)Lcom/airbnb/lottie/value/Keyframe;` @kind direct;
  #L39a1b4.  v3:= temp @kind object;
  #L39a1b6.  v2.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.b` @type ^`com.airbnb.lottie.value.Keyframe` := v3 @kind object;
  #L39a1ba.  return v1;
}
procedure `float` `d`(`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d` v2 @kind this) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation$d;.d:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a2b0.  v0:= v2.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.a` @type ^`java.util.List` @kind object;
  #L39a2b4.  v1:= 0I;
  #L39a2b6.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39a2bc.  v0:= temp @kind object;
  #L39a2be.  v0:= (`com.airbnb.lottie.value.Keyframe`) v0 @kind object;
  #L39a2c2.  call temp:= `getStartProgress`(v0) @signature `Lcom/airbnb/lottie/value/Keyframe;.getStartProgress:()F` @kind virtual;
  #L39a2c8.  v0:= temp;
  #L39a2ca.  return v0;
}
procedure `float` `e`(`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d` v2 @kind this) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation$d;.e:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a278.  v0:= v2.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d.a` @type ^`java.util.List` @kind object;
  #L39a27c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39a282.  v1:= temp;
  #L39a284.  v1:= v1 + -1;
  #L39a288.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39a28e.  v0:= temp @kind object;
  #L39a290.  v0:= (`com.airbnb.lottie.value.Keyframe`) v0 @kind object;
  #L39a294.  call temp:= `getEndProgress`(v0) @signature `Lcom/airbnb/lottie/value/Keyframe;.getEndProgress:()F` @kind virtual;
  #L39a29a.  v0:= temp;
  #L39a29c.  return v0;
}
procedure `boolean` `isEmpty`(`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation$d` v1 @kind this) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation$d;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39a178.  v0:= 0I;
  #L39a17a.  return v0;
}
