record `com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.animation.keyframe.a` @kind class {
}
procedure `void` `<init>`(`com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/airbnb/lottie/animation/keyframe/IntegerKeyframeAnimation;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39abb8.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/animation/keyframe/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L39abbe.  return @kind void;
}
procedure `java.lang.Integer` `e`(`com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation` v0 @kind this, `com.airbnb.lottie.value.Keyframe` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/animation/keyframe/IntegerKeyframeAnimation;.e:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Integer;` @AccessFlag  {
    temp;

  #L39ab78.  call temp:= `getIntValue`(v0, v1, v2) @signature `Lcom/airbnb/lottie/animation/keyframe/IntegerKeyframeAnimation;.getIntValue:(Lcom/airbnb/lottie/value/Keyframe;F)I` @kind virtual;
  #L39ab7e.  v1:= temp;
  #L39ab80.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L39ab86.  v1:= temp @kind object;
  #L39ab88.  return v1 @kind object;
}
procedure `int` `getIntValue`(`com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation` v2 @kind this) @signature `Lcom/airbnb/lottie/animation/keyframe/IntegerKeyframeAnimation;.getIntValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39aab4.  call temp:= `getCurrentKeyframe`(v2) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getCurrentKeyframe:()Lcom/airbnb/lottie/value/Keyframe;` @kind virtual;
  #L39aaba.  v0:= temp @kind object;
  #L39aabc.  call temp:= `getInterpolatedCurrentKeyframeProgress`(v2) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getInterpolatedCurrentKeyframeProgress:()F` @kind virtual;
  #L39aac2.  v1:= temp;
  #L39aac4.  call temp:= `getIntValue`(v2, v0, v1) @signature `Lcom/airbnb/lottie/animation/keyframe/IntegerKeyframeAnimation;.getIntValue:(Lcom/airbnb/lottie/value/Keyframe;F)I` @kind virtual;
  #L39aaca.  v0:= temp;
  #L39aacc.  return v0;
}
procedure `int` `getIntValue`(`com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation` v9 @kind this, `com.airbnb.lottie.value.Keyframe` v10 @kind object, `float` v11 ) @signature `Lcom/airbnb/lottie/animation/keyframe/IntegerKeyframeAnimation;.getIntValue:(Lcom/airbnb/lottie/value/Keyframe;F)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L39aae0.  v0:= v10.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L39aae4.  if v0 == 0 then goto L39ab56;
  #L39aae8.  v0:= v10.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L39aaec.  if v0 == 0 then goto L39ab56;
  #L39aaf0.  v1:= v9.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation.valueCallback` @type ^`com.airbnb.lottie.value.LottieValueCallback` @kind object;
  #L39aaf4.  if v1 == 0 then goto L39ab3c;
  #L39aaf8.  v2:= v10.`com.airbnb.lottie.value.Keyframe.startFrame` @type ^`float`;
  #L39aafc.  v0:= v10.`com.airbnb.lottie.value.Keyframe.endFrame` @type ^`java.lang.Float` @kind object;
  #L39ab00.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L39ab06.  v3:= temp;
  #L39ab08.  v4:= v10.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L39ab0c.  v5:= v10.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L39ab10.  call temp:= `b`(v9) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.b:()F` @kind virtual;
  #L39ab16.  v7:= temp;
  #L39ab18.  call temp:= `getProgress`(v9) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getProgress:()F` @kind virtual;
  #L39ab1e.  v8:= temp;
  #L39ab20.  v6:= v11;
  #L39ab22.  call temp:= `getValueInternal`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/value/LottieValueCallback;.getValueInternal:(FFLjava/lang/Object;Ljava/lang/Object;FFF)Ljava/lang/Object;` @kind virtual;
  #L39ab28.  v0:= temp @kind object;
  #L39ab2a.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L39ab2e.  if v0 == 0 then goto L39ab3c;
  #L39ab32.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L39ab38.  v10:= temp;
  #L39ab3a.  return v10;
  #L39ab3c.  call temp:= `getStartValueInt`(v10) @signature `Lcom/airbnb/lottie/value/Keyframe;.getStartValueInt:()I` @kind virtual;
  #L39ab42.  v0:= temp;
  #L39ab44.  call temp:= `getEndValueInt`(v10) @signature `Lcom/airbnb/lottie/value/Keyframe;.getEndValueInt:()I` @kind virtual;
  #L39ab4a.  v10:= temp;
  #L39ab4c.  call temp:= `lerp`(v0, v10, v11) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(IIF)I` @kind static;
  #L39ab52.  v10:= temp;
  #L39ab54.  return v10;
  #L39ab56.  v10:= new `java.lang.IllegalStateException`;
  #L39ab5a.  v11:= "Missing values for keyframe." @kind object;
  #L39ab5e.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39ab64.  throw v10;
}
procedure `java.lang.Object` `getValue`(`com.airbnb.lottie.animation.keyframe.IntegerKeyframeAnimation` v0 @kind this, `com.airbnb.lottie.value.Keyframe` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/animation/keyframe/IntegerKeyframeAnimation;.getValue:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Object;` @AccessFlag SYNTHETIC {
    temp;

  #L39ab9c.  call temp:= `e`(v0, v1, v2) @signature `Lcom/airbnb/lottie/animation/keyframe/IntegerKeyframeAnimation;.e:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Integer;` @kind virtual;
  #L39aba2.  v1:= temp @kind object;
  #L39aba4.  return v1 @kind object;
}
