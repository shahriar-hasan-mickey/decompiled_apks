record `com.airbnb.lottie.PerformanceTracker` @kind class @AccessFlag PUBLIC {
  `boolean` `com.airbnb.lottie.PerformanceTracker.a` @AccessFlag PRIVATE;
  `java.util.Set` `com.airbnb.lottie.PerformanceTracker.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.airbnb.lottie.PerformanceTracker.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Comparator` `com.airbnb.lottie.PerformanceTracker.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.PerformanceTracker` v1 @kind this) @signature `Lcom/airbnb/lottie/PerformanceTracker;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L395118.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39511e.  v0:= 0I;
  #L395120.  v1.`com.airbnb.lottie.PerformanceTracker.a` @type ^`boolean` := v0 @kind boolean;
  #L395124.  v0:= new `androidx.collection.ArraySet`;
  #L395128.  call `<init>`(v0) @signature `Landroidx/collection/ArraySet;.<init>:()V` @kind direct;
  #L39512e.  v1.`com.airbnb.lottie.PerformanceTracker.b` @type ^`java.util.Set` := v0 @kind object;
  #L395132.  v0:= new `java.util.HashMap`;
  #L395136.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L39513c.  v1.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` := v0 @kind object;
  #L395140.  v0:= new `com.airbnb.lottie.PerformanceTracker$a`;
  #L395144.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/PerformanceTracker$a;.<init>:(Lcom/airbnb/lottie/PerformanceTracker;)V` @kind direct;
  #L39514a.  v1.`com.airbnb.lottie.PerformanceTracker.d` @type ^`java.util.Comparator` := v0 @kind object;
  #L39514e.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.PerformanceTracker` v0 @kind this, `boolean` v1 ) @signature `Lcom/airbnb/lottie/PerformanceTracker;.a:(Z)V` @AccessFlag  {
    temp;

  #L3952bc.  v0.`com.airbnb.lottie.PerformanceTracker.a` @type ^`boolean` := v1 @kind boolean;
  #L3952c0.  return @kind void;
}
procedure `void` `addFrameListener`(`com.airbnb.lottie.PerformanceTracker` v1 @kind this, `com.airbnb.lottie.PerformanceTracker$FrameListener` v2 @kind object) @signature `Lcom/airbnb/lottie/PerformanceTracker;.addFrameListener:(Lcom/airbnb/lottie/PerformanceTracker$FrameListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L395160.  v0:= v1.`com.airbnb.lottie.PerformanceTracker.b` @type ^`java.util.Set` @kind object;
  #L395164.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39516a.  return @kind void;
}
procedure `void` `clearRenderTimes`(`com.airbnb.lottie.PerformanceTracker` v1 @kind this) @signature `Lcom/airbnb/lottie/PerformanceTracker;.clearRenderTimes:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39517c.  v0:= v1.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` @kind object;
  #L395180.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L395186.  return @kind void;
}
procedure `java.util.List` `getSortedRenderTimes`(`com.airbnb.lottie.PerformanceTracker` v5 @kind this) @signature `Lcom/airbnb/lottie/PerformanceTracker;.getSortedRenderTimes:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L395070.  v0:= v5.`com.airbnb.lottie.PerformanceTracker.a` @type ^`boolean` @kind boolean;
  #L395074.  if v0 != 0 then goto L395082;
  #L395078.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L39507e.  v0:= temp @kind object;
  #L395080.  return v0 @kind object;
  #L395082.  v0:= new `java.util.ArrayList`;
  #L395086.  v1:= v5.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` @kind object;
  #L39508a.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L395090.  v1:= temp;
  #L395092.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L395098.  v1:= v5.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` @kind object;
  #L39509c.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3950a2.  v1:= temp @kind object;
  #L3950a4.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3950aa.  v1:= temp @kind object;
  #L3950ac.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3950b2.  v2:= temp;
  #L3950b4.  if v2 == 0 then goto L3950fa;
  #L3950b8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3950be.  v2:= temp @kind object;
  #L3950c0.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L3950c4.  v3:= new `androidx.core.util.Pair`;
  #L3950c8.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3950ce.  v4:= temp @kind object;
  #L3950d0.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3950d6.  v2:= temp @kind object;
  #L3950d8.  v2:= (`com.airbnb.lottie.utils.MeanCalculator`) v2 @kind object;
  #L3950dc.  call temp:= `getMean`(v2) @signature `Lcom/airbnb/lottie/utils/MeanCalculator;.getMean:()F` @kind virtual;
  #L3950e2.  v2:= temp;
  #L3950e4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3950ea.  v2:= temp @kind object;
  #L3950ec.  call `<init>`(v3, v4, v2) @signature `Landroidx/core/util/Pair;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L3950f2.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3950f8.  goto L3950ac;
  #L3950fa.  v1:= v5.`com.airbnb.lottie.PerformanceTracker.d` @type ^`java.util.Comparator` @kind object;
  #L3950fe.  call `sort`(v0, v1) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L395104.  return v0 @kind object;
}
procedure `void` `logRenderTimes`(`com.airbnb.lottie.PerformanceTracker` v7 @kind this) @signature `Lcom/airbnb/lottie/PerformanceTracker;.logRenderTimes:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L395198.  v0:= v7.`com.airbnb.lottie.PerformanceTracker.a` @type ^`boolean` @kind boolean;
  #L39519c.  if v0 != 0 then goto L3951a2;
  #L3951a0.  return @kind void;
  #L3951a2.  call temp:= `getSortedRenderTimes`(v7) @signature `Lcom/airbnb/lottie/PerformanceTracker;.getSortedRenderTimes:()Ljava/util/List;` @kind virtual;
  #L3951a8.  v0:= temp @kind object;
  #L3951aa.  v1:= "LOTTIE" @kind object;
  #L3951ae.  v2:= "Render times:" @kind object;
  #L3951b2.  call temp:= `d`(v1, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3951b8.  v2:= 0I;
  #L3951ba.  v3:= 0I;
  #L3951bc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3951c2.  v4:= temp;
  #L3951c4.  if v3 >= v4 then goto L395204;
  #L3951c8.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3951ce.  v4:= temp @kind object;
  #L3951d0.  v4:= (`androidx.core.util.Pair`) v4 @kind object;
  #L3951d4.  v5:= 2I;
  #L3951d6.  v5:= new `java.lang.Object`[v5];
  #L3951da.  v6:= v4.`androidx.core.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L3951de.  v5[v2]:= v6 @kind object;
  #L3951e2.  v4:= v4.`androidx.core.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L3951e6.  v6:= 1I;
  #L3951e8.  v5[v6]:= v4 @kind object;
  #L3951ec.  v4:= "\t\t%30s:%.2f" @kind object;
  #L3951f0.  call temp:= `format`(v4, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3951f6.  v4:= temp @kind object;
  #L3951f8.  call temp:= `d`(v1, v4) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3951fe.  v3:= v3 + 1;
  #L395202.  goto L3951bc;
  #L395204.  return @kind void;
}
procedure `void` `recordRenderTime`(`com.airbnb.lottie.PerformanceTracker` v2 @kind this, `java.lang.String` v3 @kind object, `float` v4 ) @signature `Lcom/airbnb/lottie/PerformanceTracker;.recordRenderTime:(Ljava/lang/String;F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L395218.  v0:= v2.`com.airbnb.lottie.PerformanceTracker.a` @type ^`boolean` @kind boolean;
  #L39521c.  if v0 != 0 then goto L395222;
  #L395220.  return @kind void;
  #L395222.  v0:= v2.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` @kind object;
  #L395226.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39522c.  v0:= temp @kind object;
  #L39522e.  v0:= (`com.airbnb.lottie.utils.MeanCalculator`) v0 @kind object;
  #L395232.  if v0 != 0 then goto L39524a;
  #L395236.  v0:= new `com.airbnb.lottie.utils.MeanCalculator`;
  #L39523a.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/utils/MeanCalculator;.<init>:()V` @kind direct;
  #L395240.  v1:= v2.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` @kind object;
  #L395244.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39524a.  call `add`(v0, v4) @signature `Lcom/airbnb/lottie/utils/MeanCalculator;.add:(F)V` @kind virtual;
  #L395250.  v0:= "__container" @kind object;
  #L395254.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39525a.  v3:= temp;
  #L39525c.  if v3 == 0 then goto L39528c;
  #L395260.  v3:= v2.`com.airbnb.lottie.PerformanceTracker.b` @type ^`java.util.Set` @kind object;
  #L395264.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L39526a.  v3:= temp @kind object;
  #L39526c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L395272.  v0:= temp;
  #L395274.  if v0 == 0 then goto L39528c;
  #L395278.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L39527e.  v0:= temp @kind object;
  #L395280.  v0:= (`com.airbnb.lottie.PerformanceTracker$FrameListener`) v0 @kind object;
  #L395284.  call `onFrameRendered`(v0, v4) @signature `Lcom/airbnb/lottie/PerformanceTracker$FrameListener;.onFrameRendered:(F)V` @kind interface;
  #L39528a.  goto L39526c;
  #L39528c.  return @kind void;
}
procedure `void` `removeFrameListener`(`com.airbnb.lottie.PerformanceTracker` v1 @kind this, `com.airbnb.lottie.PerformanceTracker$FrameListener` v2 @kind object) @signature `Lcom/airbnb/lottie/PerformanceTracker;.removeFrameListener:(Lcom/airbnb/lottie/PerformanceTracker$FrameListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3952a0.  v0:= v1.`com.airbnb.lottie.PerformanceTracker.b` @type ^`java.util.Set` @kind object;
  #L3952a4.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3952aa.  return @kind void;
}
