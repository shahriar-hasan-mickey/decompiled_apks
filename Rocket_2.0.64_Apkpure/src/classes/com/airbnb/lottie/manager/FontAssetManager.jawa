record `com.airbnb.lottie.manager.FontAssetManager` @kind class @AccessFlag PUBLIC {
  `com.airbnb.lottie.model.MutablePair` `com.airbnb.lottie.manager.FontAssetManager.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.airbnb.lottie.manager.FontAssetManager.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.airbnb.lottie.manager.FontAssetManager.c` @AccessFlag PRIVATE_FINAL;
  `android.content.res.AssetManager` `com.airbnb.lottie.manager.FontAssetManager.d` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.FontAssetDelegate` `com.airbnb.lottie.manager.FontAssetManager.e` @AccessFlag PRIVATE;
  `java.lang.String` `com.airbnb.lottie.manager.FontAssetManager.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.manager.FontAssetManager` v1 @kind this, `android.graphics.drawable.Drawable$Callback` v2 @kind object, `com.airbnb.lottie.FontAssetDelegate` v3 @kind object) @signature `Lcom/airbnb/lottie/manager/FontAssetManager;.<init>:(Landroid/graphics/drawable/Drawable$Callback;Lcom/airbnb/lottie/FontAssetDelegate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39c09c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39c0a2.  v0:= new `com.airbnb.lottie.model.MutablePair`;
  #L39c0a6.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/model/MutablePair;.<init>:()V` @kind direct;
  #L39c0ac.  v1.`com.airbnb.lottie.manager.FontAssetManager.a` @type ^`com.airbnb.lottie.model.MutablePair` := v0 @kind object;
  #L39c0b0.  v0:= new `java.util.HashMap`;
  #L39c0b4.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L39c0ba.  v1.`com.airbnb.lottie.manager.FontAssetManager.b` @type ^`java.util.Map` := v0 @kind object;
  #L39c0be.  v0:= new `java.util.HashMap`;
  #L39c0c2.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L39c0c8.  v1.`com.airbnb.lottie.manager.FontAssetManager.c` @type ^`java.util.Map` := v0 @kind object;
  #L39c0cc.  v0:= ".ttf" @kind object;
  #L39c0d0.  v1.`com.airbnb.lottie.manager.FontAssetManager.f` @type ^`java.lang.String` := v0 @kind object;
  #L39c0d4.  v1.`com.airbnb.lottie.manager.FontAssetManager.e` @type ^`com.airbnb.lottie.FontAssetDelegate` := v3 @kind object;
  #L39c0d8.  v3:= instanceof @variable v2 @type ^`android.view.View` @kind boolean;
  #L39c0dc.  if v3 != 0 then goto L39c0f2;
  #L39c0e0.  v2:= "LottieDrawable must be inside of a view for images to work." @kind object;
  #L39c0e4.  call `warning`(v2) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;)V` @kind static;
  #L39c0ea.  v2:= 0I;
  #L39c0ec.  v1.`com.airbnb.lottie.manager.FontAssetManager.d` @type ^`android.content.res.AssetManager` := v2 @kind object;
  #L39c0f0.  return @kind void;
  #L39c0f2.  v2:= (`android.view.View`) v2 @kind object;
  #L39c0f6.  call temp:= `getContext`(v2) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L39c0fc.  v2:= temp @kind object;
  #L39c0fe.  call temp:= `getAssets`(v2) @signature `Landroid/content/Context;.getAssets:()Landroid/content/res/AssetManager;` @kind virtual;
  #L39c104.  v2:= temp @kind object;
  #L39c106.  v1.`com.airbnb.lottie.manager.FontAssetManager.d` @type ^`android.content.res.AssetManager` := v2 @kind object;
  #L39c10a.  return @kind void;
}
procedure `android.graphics.Typeface` `a`(`com.airbnb.lottie.manager.FontAssetManager` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/airbnb/lottie/manager/FontAssetManager;.a:(Ljava/lang/String;)Landroid/graphics/Typeface;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L39bf44.  v0:= v2.`com.airbnb.lottie.manager.FontAssetManager.c` @type ^`java.util.Map` @kind object;
  #L39bf48.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39bf4e.  v0:= temp @kind object;
  #L39bf50.  v0:= (`android.graphics.Typeface`) v0 @kind object;
  #L39bf54.  if v0 == 0 then goto L39bf5a;
  #L39bf58.  return v0 @kind object;
  #L39bf5a.  v0:= 0I;
  #L39bf5c.  v1:= v2.`com.airbnb.lottie.manager.FontAssetManager.e` @type ^`com.airbnb.lottie.FontAssetDelegate` @kind object;
  #L39bf60.  if v1 == 0 then goto L39bf6c;
  #L39bf64.  call temp:= `fetchFont`(v1, v3) @signature `Lcom/airbnb/lottie/FontAssetDelegate;.fetchFont:(Ljava/lang/String;)Landroid/graphics/Typeface;` @kind virtual;
  #L39bf6a.  v0:= temp @kind object;
  #L39bf6c.  v1:= v2.`com.airbnb.lottie.manager.FontAssetManager.e` @type ^`com.airbnb.lottie.FontAssetDelegate` @kind object;
  #L39bf70.  if v1 == 0 then goto L39bf90;
  #L39bf74.  if v0 != 0 then goto L39bf90;
  #L39bf78.  call temp:= `getFontPath`(v1, v3) @signature `Lcom/airbnb/lottie/FontAssetDelegate;.getFontPath:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L39bf7e.  v1:= temp @kind object;
  #L39bf80.  if v1 == 0 then goto L39bf90;
  #L39bf84.  v0:= v2.`com.airbnb.lottie.manager.FontAssetManager.d` @type ^`android.content.res.AssetManager` @kind object;
  #L39bf88.  call temp:= `createFromAsset`(v0, v1) @signature `Landroid/graphics/Typeface;.createFromAsset:(Landroid/content/res/AssetManager;Ljava/lang/String;)Landroid/graphics/Typeface;` @kind static;
  #L39bf8e.  v0:= temp @kind object;
  #L39bf90.  if v0 != 0 then goto L39bfcc;
  #L39bf94.  v0:= new `java.lang.StringBuilder`;
  #L39bf98.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39bf9e.  v1:= "fonts/" @kind object;
  #L39bfa2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bfa8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bfae.  v1:= v2.`com.airbnb.lottie.manager.FontAssetManager.f` @type ^`java.lang.String` @kind object;
  #L39bfb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bfb8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39bfbe.  v0:= temp @kind object;
  #L39bfc0.  v1:= v2.`com.airbnb.lottie.manager.FontAssetManager.d` @type ^`android.content.res.AssetManager` @kind object;
  #L39bfc4.  call temp:= `createFromAsset`(v1, v0) @signature `Landroid/graphics/Typeface;.createFromAsset:(Landroid/content/res/AssetManager;Ljava/lang/String;)Landroid/graphics/Typeface;` @kind static;
  #L39bfca.  v0:= temp @kind object;
  #L39bfcc.  v1:= v2.`com.airbnb.lottie.manager.FontAssetManager.c` @type ^`java.util.Map` @kind object;
  #L39bfd0.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39bfd6.  return v0 @kind object;
}
procedure `android.graphics.Typeface` `b`(`com.airbnb.lottie.manager.FontAssetManager` v2 @kind this, `android.graphics.Typeface` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/airbnb/lottie/manager/FontAssetManager;.b:(Landroid/graphics/Typeface;Ljava/lang/String;)Landroid/graphics/Typeface;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L39c03c.  v0:= "Italic" @kind object;
  #L39c040.  call temp:= `contains`(v4, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L39c046.  v0:= temp;
  #L39c048.  v1:= "Bold" @kind object;
  #L39c04c.  call temp:= `contains`(v4, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L39c052.  v4:= temp;
  #L39c054.  if v0 == 0 then goto L39c060;
  #L39c058.  if v4 == 0 then goto L39c060;
  #L39c05c.  v4:= 3I;
  #L39c05e.  goto L39c072;
  #L39c060.  if v0 == 0 then goto L39c068;
  #L39c064.  v4:= 2I;
  #L39c066.  goto L39c072;
  #L39c068.  if v4 == 0 then goto L39c070;
  #L39c06c.  v4:= 1I;
  #L39c06e.  goto L39c072;
  #L39c070.  v4:= 0I;
  #L39c072.  call temp:= `getStyle`(v3) @signature `Landroid/graphics/Typeface;.getStyle:()I` @kind virtual;
  #L39c078.  v0:= temp;
  #L39c07a.  if v0 != v4 then goto L39c080;
  #L39c07e.  return v3 @kind object;
  #L39c080.  call temp:= `create`(v3, v4) @signature `Landroid/graphics/Typeface;.create:(Landroid/graphics/Typeface;I)Landroid/graphics/Typeface;` @kind static;
  #L39c086.  v3:= temp @kind object;
  #L39c088.  return v3 @kind object;
}
procedure `android.graphics.Typeface` `getTypeface`(`com.airbnb.lottie.manager.FontAssetManager` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/airbnb/lottie/manager/FontAssetManager;.getTypeface:(Ljava/lang/String;Ljava/lang/String;)Landroid/graphics/Typeface;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39bfe8.  v0:= v2.`com.airbnb.lottie.manager.FontAssetManager.a` @type ^`com.airbnb.lottie.model.MutablePair` @kind object;
  #L39bfec.  call `set`(v0, v3, v4) @signature `Lcom/airbnb/lottie/model/MutablePair;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L39bff2.  v0:= v2.`com.airbnb.lottie.manager.FontAssetManager.b` @type ^`java.util.Map` @kind object;
  #L39bff6.  v1:= v2.`com.airbnb.lottie.manager.FontAssetManager.a` @type ^`com.airbnb.lottie.model.MutablePair` @kind object;
  #L39bffa.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39c000.  v0:= temp @kind object;
  #L39c002.  v0:= (`android.graphics.Typeface`) v0 @kind object;
  #L39c006.  if v0 == 0 then goto L39c00c;
  #L39c00a.  return v0 @kind object;
  #L39c00c.  call temp:= `a`(v2, v3) @signature `Lcom/airbnb/lottie/manager/FontAssetManager;.a:(Ljava/lang/String;)Landroid/graphics/Typeface;` @kind direct;
  #L39c012.  v3:= temp @kind object;
  #L39c014.  call temp:= `b`(v2, v3, v4) @signature `Lcom/airbnb/lottie/manager/FontAssetManager;.b:(Landroid/graphics/Typeface;Ljava/lang/String;)Landroid/graphics/Typeface;` @kind direct;
  #L39c01a.  v3:= temp @kind object;
  #L39c01c.  v4:= v2.`com.airbnb.lottie.manager.FontAssetManager.b` @type ^`java.util.Map` @kind object;
  #L39c020.  v0:= v2.`com.airbnb.lottie.manager.FontAssetManager.a` @type ^`com.airbnb.lottie.model.MutablePair` @kind object;
  #L39c024.  call temp:= `put`(v4, v0, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39c02a.  return v3 @kind object;
}
procedure `void` `setDefaultFontFileExtension`(`com.airbnb.lottie.manager.FontAssetManager` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/manager/FontAssetManager;.setDefaultFontFileExtension:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L39c11c.  v0.`com.airbnb.lottie.manager.FontAssetManager.f` @type ^`java.lang.String` := v1 @kind object;
  #L39c120.  return @kind void;
}
procedure `void` `setDelegate`(`com.airbnb.lottie.manager.FontAssetManager` v0 @kind this, `com.airbnb.lottie.FontAssetDelegate` v1 @kind object) @signature `Lcom/airbnb/lottie/manager/FontAssetManager;.setDelegate:(Lcom/airbnb/lottie/FontAssetDelegate;)V` @AccessFlag PUBLIC {
    temp;

  #L39c134.  v0.`com.airbnb.lottie.manager.FontAssetManager.e` @type ^`com.airbnb.lottie.FontAssetDelegate` := v1 @kind object;
  #L39c138.  return @kind void;
}
