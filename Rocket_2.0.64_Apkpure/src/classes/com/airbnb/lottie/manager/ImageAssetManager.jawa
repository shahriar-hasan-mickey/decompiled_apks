record `com.airbnb.lottie.manager.ImageAssetManager` @kind class @AccessFlag PUBLIC {
  `android.content.Context` `com.airbnb.lottie.manager.ImageAssetManager.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.airbnb.lottie.manager.ImageAssetManager.b` @AccessFlag PRIVATE;
  `com.airbnb.lottie.ImageAssetDelegate` `com.airbnb.lottie.manager.ImageAssetManager.c` @AccessFlag PRIVATE;
  `java.util.Map` `com.airbnb.lottie.manager.ImageAssetManager.d` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.Object` `@@com.airbnb.lottie.manager.ImageAssetManager.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39c3bc.  v0:= new `java.lang.Object`;
  #L39c3c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39c3c6.  `@@com.airbnb.lottie.manager.ImageAssetManager.e` @type ^`java.lang.Object` := v0 @kind object;
  #L39c3ca.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.manager.ImageAssetManager` v2 @kind this, `android.graphics.drawable.Drawable$Callback` v3 @kind object, `java.lang.String` v4 @kind object, `com.airbnb.lottie.ImageAssetDelegate` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.<init>:(Landroid/graphics/drawable/Drawable$Callback;Ljava/lang/String;Lcom/airbnb/lottie/ImageAssetDelegate;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39c3dc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39c3e2.  v2.`com.airbnb.lottie.manager.ImageAssetManager.b` @type ^`java.lang.String` := v4 @kind object;
  #L39c3e6.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L39c3ec.  v4:= temp;
  #L39c3ee.  if v4 != 0 then goto L39c438;
  #L39c3f2.  v4:= v2.`com.airbnb.lottie.manager.ImageAssetManager.b` @type ^`java.lang.String` @kind object;
  #L39c3f6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L39c3fc.  v0:= temp;
  #L39c3fe.  v0:= v0 + -1;
  #L39c402.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L39c408.  v4:= temp;
  #L39c40a.  v0:= 47I;
  #L39c40e.  if v4 == v0 then goto L39c438;
  #L39c412.  v4:= new `java.lang.StringBuilder`;
  #L39c416.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39c41c.  v1:= v2.`com.airbnb.lottie.manager.ImageAssetManager.b` @type ^`java.lang.String` @kind object;
  #L39c420.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c426.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c42c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39c432.  v4:= temp @kind object;
  #L39c434.  v2.`com.airbnb.lottie.manager.ImageAssetManager.b` @type ^`java.lang.String` := v4 @kind object;
  #L39c438.  v4:= instanceof @variable v3 @type ^`android.view.View` @kind boolean;
  #L39c43c.  if v4 != 0 then goto L39c460;
  #L39c440.  v3:= "LottieDrawable must be inside of a view for images to work." @kind object;
  #L39c444.  call `warning`(v3) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;)V` @kind static;
  #L39c44a.  v3:= new `java.util.HashMap`;
  #L39c44e.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L39c454.  v2.`com.airbnb.lottie.manager.ImageAssetManager.d` @type ^`java.util.Map` := v3 @kind object;
  #L39c458.  v3:= 0I;
  #L39c45a.  v2.`com.airbnb.lottie.manager.ImageAssetManager.a` @type ^`android.content.Context` := v3 @kind object;
  #L39c45e.  return @kind void;
  #L39c460.  v3:= (`android.view.View`) v3 @kind object;
  #L39c464.  call temp:= `getContext`(v3) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L39c46a.  v3:= temp @kind object;
  #L39c46c.  v2.`com.airbnb.lottie.manager.ImageAssetManager.a` @type ^`android.content.Context` := v3 @kind object;
  #L39c470.  v2.`com.airbnb.lottie.manager.ImageAssetManager.d` @type ^`java.util.Map` := v6 @kind object;
  #L39c474.  call `setDelegate`(v2, v5) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.setDelegate:(Lcom/airbnb/lottie/ImageAssetDelegate;)V` @kind virtual;
  #L39c47a.  return @kind void;
}
procedure `android.graphics.Bitmap` `a`(`com.airbnb.lottie.manager.ImageAssetManager` v2 @kind this, `java.lang.String` v3 @kind object, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.a:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L39c2ec.  v0:= `@@com.airbnb.lottie.manager.ImageAssetManager.e` @type ^`java.lang.Object` @kind object;
  #L39c2f0.  @monitorenter v0
  #L39c2f2.  v1:= v2.`com.airbnb.lottie.manager.ImageAssetManager.d` @type ^`java.util.Map` @kind object;
  #L39c2f6.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39c2fc.  v3:= temp @kind object;
  #L39c2fe.  v3:= (`com.airbnb.lottie.LottieImageAsset`) v3 @kind object;
  #L39c302.  call `setBitmap`(v3, v4) @signature `Lcom/airbnb/lottie/LottieImageAsset;.setBitmap:(Landroid/graphics/Bitmap;)V` @kind virtual;
  #L39c308.  @monitorexit v0
  #L39c30a.  return v4 @kind object;
  #L39c30c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39c30e.  @monitorexit v0
  #L39c310.  throw v3;
  catch `java.lang.Throwable` @[L39c2f2..L39c310] goto L39c30c;
}
procedure `android.graphics.Bitmap` `bitmapForId`(`com.airbnb.lottie.manager.ImageAssetManager` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.bitmapForId:(Ljava/lang/String;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L39c14c.  v0:= v7.`com.airbnb.lottie.manager.ImageAssetManager.d` @type ^`java.util.Map` @kind object;
  #L39c150.  call temp:= `get`(v0, v8) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39c156.  v0:= temp @kind object;
  #L39c158.  v0:= (`com.airbnb.lottie.LottieImageAsset`) v0 @kind object;
  #L39c15c.  v1:= 0I;
  #L39c15e.  if v0 != 0 then goto L39c164;
  #L39c162.  return v1 @kind object;
  #L39c164.  call temp:= `getBitmap`(v0) @signature `Lcom/airbnb/lottie/LottieImageAsset;.getBitmap:()Landroid/graphics/Bitmap;` @kind virtual;
  #L39c16a.  v2:= temp @kind object;
  #L39c16c.  if v2 == 0 then goto L39c172;
  #L39c170.  return v2 @kind object;
  #L39c172.  v2:= v7.`com.airbnb.lottie.manager.ImageAssetManager.c` @type ^`com.airbnb.lottie.ImageAssetDelegate` @kind object;
  #L39c176.  if v2 == 0 then goto L39c18e;
  #L39c17a.  call temp:= `fetchBitmap`(v2, v0) @signature `Lcom/airbnb/lottie/ImageAssetDelegate;.fetchBitmap:(Lcom/airbnb/lottie/LottieImageAsset;)Landroid/graphics/Bitmap;` @kind interface;
  #L39c180.  v0:= temp @kind object;
  #L39c182.  if v0 == 0 then goto L39c18c;
  #L39c186.  call temp:= `a`(v7, v8, v0) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.a:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind direct;
  #L39c18c.  return v0 @kind object;
  #L39c18e.  call temp:= `getFileName`(v0) @signature `Lcom/airbnb/lottie/LottieImageAsset;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L39c194.  v2:= temp @kind object;
  #L39c196.  v3:= new `android.graphics.BitmapFactory$Options`;
  #L39c19a.  call `<init>`(v3) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L39c1a0.  v4:= 1I;
  #L39c1a2.  v3.`android.graphics.BitmapFactory$Options.inScaled` @type ^`boolean` := v4 @kind boolean;
  #L39c1a6.  v5:= 160I;
  #L39c1aa.  v3.`android.graphics.BitmapFactory$Options.inDensity` @type ^`int` := v5;
  #L39c1ae.  v5:= "data:" @kind object;
  #L39c1b2.  call temp:= `startsWith`(v2, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L39c1b8.  v5:= temp;
  #L39c1ba.  if v5 == 0 then goto L39c210;
  #L39c1be.  v5:= "base64," @kind object;
  #L39c1c2.  call temp:= `indexOf`(v2, v5) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L39c1c8.  v5:= temp;
  #L39c1ca.  if v5 <= 0 then goto L39c210;
  #L39c1ce.  v0:= 44I;
  #L39c1d2.  call temp:= `indexOf`(v2, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L39c1d8.  v0:= temp;
  #L39c1da.  v0:= v0 + v4 @kind int;
  #L39c1dc.  call temp:= `substring`(v2, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L39c1e2.  v0:= temp @kind object;
  #L39c1e4.  v2:= 0I;
  #L39c1e6.  call temp:= `decode`(v0, v2) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L39c1ec.  v0:= temp @kind object;
  #L39c1ee.  v1:= length @variable v0;
  #L39c1f0.  call temp:= `decodeByteArray`(v0, v2, v1, v3) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L39c1f6.  v0:= temp @kind object;
  #L39c1f8.  call temp:= `a`(v7, v8, v0) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.a:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind direct;
  #L39c1fe.  v8:= temp @kind object;
  #L39c200.  return v8 @kind object;
  #L39c202.  v8:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L39c204.  v0:= "data URL did not have correct base64 format." @kind object;
  #L39c208.  call `warning`(v0, v8) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L39c20e.  return v1 @kind object;
  #L39c210.  v4:= v7.`com.airbnb.lottie.manager.ImageAssetManager.b` @type ^`java.lang.String` @kind object;
  #L39c214.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L39c21a.  v4:= temp;
  #L39c21c.  if v4 != 0 then goto L39c28e;
  #L39c220.  v4:= v7.`com.airbnb.lottie.manager.ImageAssetManager.a` @type ^`android.content.Context` @kind object;
  #L39c224.  call temp:= `getAssets`(v4) @signature `Landroid/content/Context;.getAssets:()Landroid/content/res/AssetManager;` @kind virtual;
  #L39c22a.  v4:= temp @kind object;
  #L39c22c.  v5:= new `java.lang.StringBuilder`;
  #L39c230.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39c236.  v6:= v7.`com.airbnb.lottie.manager.ImageAssetManager.b` @type ^`java.lang.String` @kind object;
  #L39c23a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c240.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c246.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39c24c.  v2:= temp @kind object;
  #L39c24e.  call temp:= `open`(v4, v2) @signature `Landroid/content/res/AssetManager;.open:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L39c254.  v2:= temp @kind object;
  #L39c256.  call temp:= `decodeStream`(v2, v1, v3) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L39c25c.  v1:= temp @kind object;
  #L39c25e.  call temp:= `getWidth`(v0) @signature `Lcom/airbnb/lottie/LottieImageAsset;.getWidth:()I` @kind virtual;
  #L39c264.  v2:= temp;
  #L39c266.  call temp:= `getHeight`(v0) @signature `Lcom/airbnb/lottie/LottieImageAsset;.getHeight:()I` @kind virtual;
  #L39c26c.  v0:= temp;
  #L39c26e.  call temp:= `resizeBitmapIfNeeded`(v1, v2, v0) @signature `Lcom/airbnb/lottie/utils/Utils;.resizeBitmapIfNeeded:(Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @kind static;
  #L39c274.  v0:= temp @kind object;
  #L39c276.  call temp:= `a`(v7, v8, v0) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.a:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind direct;
  #L39c27c.  v8:= temp @kind object;
  #L39c27e.  return v8 @kind object;
  #L39c280.  v8:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L39c282.  v0:= "Unable to decode image." @kind object;
  #L39c286.  call `warning`(v0, v8) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L39c28c.  return v1 @kind object;
  #L39c28e.  v8:= new `java.lang.IllegalStateException`;
  #L39c292.  v0:= "You must set an images folder before loading an image. Set it with LottieComposition#setImagesFolder or LottieDrawable#setImagesFolder" @kind object;
  #L39c296.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39c29c.  throw v8;
  #L39c29e.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L39c2a0.  v0:= "Unable to open asset." @kind object;
  #L39c2a4.  call `warning`(v0, v8) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L39c2aa.  return v1 @kind object;
  catch `java.lang.IllegalArgumentException` @[L39c1d2..L39c1ee] goto L39c202;
  catch `java.io.IOException` @[L39c210..L39c256] goto L39c29e;
  catch `java.lang.IllegalArgumentException` @[L39c256..L39c25e] goto L39c280;
  catch `java.io.IOException` @[L39c28e..L39c29e] goto L39c29e;
}
procedure `boolean` `hasSameContext`(`com.airbnb.lottie.manager.ImageAssetManager` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.hasSameContext:(Landroid/content/Context;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39c388.  if v2 != 0 then goto L39c394;
  #L39c38c.  v0:= v1.`com.airbnb.lottie.manager.ImageAssetManager.a` @type ^`android.content.Context` @kind object;
  #L39c390.  if v0 == 0 then goto L39c3a4;
  #L39c394.  v0:= v1.`com.airbnb.lottie.manager.ImageAssetManager.a` @type ^`android.content.Context` @kind object;
  #L39c398.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c39e.  v2:= temp;
  #L39c3a0.  if v2 == 0 then goto L39c3a8;
  #L39c3a4.  v2:= 1I;
  #L39c3a6.  goto L39c3aa;
  #L39c3a8.  v2:= 0I;
  #L39c3aa.  return v2;
}
procedure `void` `setDelegate`(`com.airbnb.lottie.manager.ImageAssetManager` v0 @kind this, `com.airbnb.lottie.ImageAssetDelegate` v1 @kind object) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.setDelegate:(Lcom/airbnb/lottie/ImageAssetDelegate;)V` @AccessFlag PUBLIC {
    temp;

  #L39c48c.  v0.`com.airbnb.lottie.manager.ImageAssetManager.c` @type ^`com.airbnb.lottie.ImageAssetDelegate` := v1 @kind object;
  #L39c490.  return @kind void;
}
procedure `android.graphics.Bitmap` `updateBitmap`(`com.airbnb.lottie.manager.ImageAssetManager` v1 @kind this, `java.lang.String` v2 @kind object, `android.graphics.Bitmap` v3 @kind object) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.updateBitmap:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39c330.  if v3 != 0 then goto L39c356;
  #L39c334.  v3:= v1.`com.airbnb.lottie.manager.ImageAssetManager.d` @type ^`java.util.Map` @kind object;
  #L39c338.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39c33e.  v2:= temp @kind object;
  #L39c340.  v2:= (`com.airbnb.lottie.LottieImageAsset`) v2 @kind object;
  #L39c344.  call temp:= `getBitmap`(v2) @signature `Lcom/airbnb/lottie/LottieImageAsset;.getBitmap:()Landroid/graphics/Bitmap;` @kind virtual;
  #L39c34a.  v3:= temp @kind object;
  #L39c34c.  v0:= 0I;
  #L39c34e.  call `setBitmap`(v2, v0) @signature `Lcom/airbnb/lottie/LottieImageAsset;.setBitmap:(Landroid/graphics/Bitmap;)V` @kind virtual;
  #L39c354.  return v3 @kind object;
  #L39c356.  v0:= v1.`com.airbnb.lottie.manager.ImageAssetManager.d` @type ^`java.util.Map` @kind object;
  #L39c35a.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39c360.  v0:= temp @kind object;
  #L39c362.  v0:= (`com.airbnb.lottie.LottieImageAsset`) v0 @kind object;
  #L39c366.  call temp:= `getBitmap`(v0) @signature `Lcom/airbnb/lottie/LottieImageAsset;.getBitmap:()Landroid/graphics/Bitmap;` @kind virtual;
  #L39c36c.  v0:= temp @kind object;
  #L39c36e.  call temp:= `a`(v1, v2, v3) @signature `Lcom/airbnb/lottie/manager/ImageAssetManager;.a:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind direct;
  #L39c374.  return v0 @kind object;
}
