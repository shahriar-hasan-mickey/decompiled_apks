record `com.airbnb.lottie.model.MutablePair` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `com.airbnb.lottie.model.MutablePair.a` @AccessFlag ;
  `java.lang.Object` `com.airbnb.lottie.model.MutablePair.b` @AccessFlag ;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.MutablePair` v0 @kind this) @signature `Lcom/airbnb/lottie/model/MutablePair;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39cf80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39cf86.  return @kind void;
}
procedure `boolean` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/airbnb/lottie/model/MutablePair;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L39ceac.  if v0 == v1 then goto L39cec6;
  #L39ceb0.  if v0 == 0 then goto L39cec2;
  #L39ceb4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39ceba.  v0:= temp;
  #L39cebc.  if v0 == 0 then goto L39cec2;
  #L39cec0.  goto L39cec6;
  #L39cec2.  v0:= 0I;
  #L39cec4.  goto L39cec8;
  #L39cec6.  v0:= 1I;
  #L39cec8.  return v0;
}
procedure `boolean` `equals`(`com.airbnb.lottie.model.MutablePair` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/airbnb/lottie/model/MutablePair;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39ce60.  v0:= instanceof @variable v4 @type ^`androidx.core.util.Pair` @kind boolean;
  #L39ce64.  v1:= 0I;
  #L39ce66.  if v0 != 0 then goto L39ce6c;
  #L39ce6a.  return v1;
  #L39ce6c.  v4:= (`androidx.core.util.Pair`) v4 @kind object;
  #L39ce70.  v0:= v4.`androidx.core.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L39ce74.  v2:= v3.`com.airbnb.lottie.model.MutablePair.a` @type ^`java.lang.Object` @kind object;
  #L39ce78.  call temp:= `a`(v0, v2) @signature `Lcom/airbnb/lottie/model/MutablePair;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L39ce7e.  v0:= temp;
  #L39ce80.  if v0 == 0 then goto L39ce9a;
  #L39ce84.  v4:= v4.`androidx.core.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L39ce88.  v0:= v3.`com.airbnb.lottie.model.MutablePair.b` @type ^`java.lang.Object` @kind object;
  #L39ce8c.  call temp:= `a`(v4, v0) @signature `Lcom/airbnb/lottie/model/MutablePair;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L39ce92.  v4:= temp;
  #L39ce94.  if v4 == 0 then goto L39ce9a;
  #L39ce98.  v1:= 1I;
  #L39ce9a.  return v1;
}
procedure `int` `hashCode`(`com.airbnb.lottie.model.MutablePair` v3 @kind this) @signature `Lcom/airbnb/lottie/model/MutablePair;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39cedc.  v0:= v3.`com.airbnb.lottie.model.MutablePair.a` @type ^`java.lang.Object` @kind object;
  #L39cee0.  v1:= 0I;
  #L39cee2.  if v0 != 0 then goto L39ceea;
  #L39cee6.  v0:= 0I;
  #L39cee8.  goto L39cef2;
  #L39ceea.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L39cef0.  v0:= temp;
  #L39cef2.  v2:= v3.`com.airbnb.lottie.model.MutablePair.b` @type ^`java.lang.Object` @kind object;
  #L39cef6.  if v2 != 0 then goto L39cefc;
  #L39cefa.  goto L39cf04;
  #L39cefc.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L39cf02.  v1:= temp;
  #L39cf04.  v0:= v0 ^~ v1 @kind int;
  #L39cf06.  return v0;
}
procedure `void` `set`(`com.airbnb.lottie.model.MutablePair` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/airbnb/lottie/model/MutablePair;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L39cf98.  v0.`com.airbnb.lottie.model.MutablePair.a` @type ^`java.lang.Object` := v1 @kind object;
  #L39cf9c.  v0.`com.airbnb.lottie.model.MutablePair.b` @type ^`java.lang.Object` := v2 @kind object;
  #L39cfa0.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.model.MutablePair` v2 @kind this) @signature `Lcom/airbnb/lottie/model/MutablePair;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39cf18.  v0:= new `java.lang.StringBuilder`;
  #L39cf1c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39cf22.  v1:= "Pair{" @kind object;
  #L39cf26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cf2c.  v1:= v2.`com.airbnb.lottie.model.MutablePair.a` @type ^`java.lang.Object` @kind object;
  #L39cf30.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L39cf36.  v1:= temp @kind object;
  #L39cf38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cf3e.  v1:= " " @kind object;
  #L39cf42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cf48.  v1:= v2.`com.airbnb.lottie.model.MutablePair.b` @type ^`java.lang.Object` @kind object;
  #L39cf4c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L39cf52.  v1:= temp @kind object;
  #L39cf54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cf5a.  v1:= "}" @kind object;
  #L39cf5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cf64.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39cf6a.  v0:= temp @kind object;
  #L39cf6c.  return v0 @kind object;
}
