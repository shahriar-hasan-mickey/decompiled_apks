record `com.airbnb.lottie.model.content.ShapeTrimPath` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.model.content.ContentModel` @kind interface {
  `java.lang.String` `com.airbnb.lottie.model.content.ShapeTrimPath.a` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `com.airbnb.lottie.model.content.ShapeTrimPath.b` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.animatable.AnimatableFloatValue` `com.airbnb.lottie.model.content.ShapeTrimPath.c` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.animatable.AnimatableFloatValue` `com.airbnb.lottie.model.content.ShapeTrimPath.d` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.animatable.AnimatableFloatValue` `com.airbnb.lottie.model.content.ShapeTrimPath.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.airbnb.lottie.model.content.ShapeTrimPath.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.ShapeTrimPath` v0 @kind this, `java.lang.String` v1 @kind object, `com.airbnb.lottie.model.content.ShapeTrimPath$Type` v2 @kind object, `com.airbnb.lottie.model.animatable.AnimatableFloatValue` v3 @kind object, `com.airbnb.lottie.model.animatable.AnimatableFloatValue` v4 @kind object, `com.airbnb.lottie.model.animatable.AnimatableFloatValue` v5 @kind object, `boolean` v6 ) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.<init>:(Ljava/lang/String;Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39f338.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39f33e.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.a` @type ^`java.lang.String` := v1 @kind object;
  #L39f342.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.b` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` := v2 @kind object;
  #L39f346.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.c` @type ^`com.airbnb.lottie.model.animatable.AnimatableFloatValue` := v3 @kind object;
  #L39f34a.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.d` @type ^`com.airbnb.lottie.model.animatable.AnimatableFloatValue` := v4 @kind object;
  #L39f34e.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.e` @type ^`com.airbnb.lottie.model.animatable.AnimatableFloatValue` := v5 @kind object;
  #L39f352.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.f` @type ^`boolean` := v6 @kind boolean;
  #L39f356.  return @kind void;
}
procedure `com.airbnb.lottie.model.animatable.AnimatableFloatValue` `getEnd`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.getEnd:()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39f254.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.d` @type ^`com.airbnb.lottie.model.animatable.AnimatableFloatValue` @kind object;
  #L39f258.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39f2b4.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.a` @type ^`java.lang.String` @kind object;
  #L39f2b8.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.animatable.AnimatableFloatValue` `getOffset`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.getOffset:()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39f26c.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.e` @type ^`com.airbnb.lottie.model.animatable.AnimatableFloatValue` @kind object;
  #L39f270.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.animatable.AnimatableFloatValue` `getStart`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.getStart:()Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39f284.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.c` @type ^`com.airbnb.lottie.model.animatable.AnimatableFloatValue` @kind object;
  #L39f288.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `getType`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.getType:()Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39f29c.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.b` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind object;
  #L39f2a0.  return v0 @kind object;
}
procedure `boolean` `isHidden`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.isHidden:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39f220.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.f` @type ^`boolean` @kind boolean;
  #L39f224.  return v0;
}
procedure `com.airbnb.lottie.animation.content.Content` `toContent`(`com.airbnb.lottie.model.content.ShapeTrimPath` v0 @kind this, `com.airbnb.lottie.LottieDrawable` v1 @kind object, `com.airbnb.lottie.model.layer.BaseLayer` v2 @kind object) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.toContent:(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;` @AccessFlag PUBLIC {
    temp;

  #L39f238.  v1:= new `com.airbnb.lottie.animation.content.TrimPathContent`;
  #L39f23c.  call `<init>`(v1, v2, v0) @signature `Lcom/airbnb/lottie/animation/content/TrimPathContent;.<init>:(Lcom/airbnb/lottie/model/layer/BaseLayer;Lcom/airbnb/lottie/model/content/ShapeTrimPath;)V` @kind direct;
  #L39f242.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.model.content.ShapeTrimPath` v2 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f2cc.  v0:= new `java.lang.StringBuilder`;
  #L39f2d0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f2d6.  v1:= "Trim Path: {start: " @kind object;
  #L39f2da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f2e0.  v1:= v2.`com.airbnb.lottie.model.content.ShapeTrimPath.c` @type ^`com.airbnb.lottie.model.animatable.AnimatableFloatValue` @kind object;
  #L39f2e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f2ea.  v1:= ", end: " @kind object;
  #L39f2ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f2f4.  v1:= v2.`com.airbnb.lottie.model.content.ShapeTrimPath.d` @type ^`com.airbnb.lottie.model.animatable.AnimatableFloatValue` @kind object;
  #L39f2f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f2fe.  v1:= ", offset: " @kind object;
  #L39f302.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f308.  v1:= v2.`com.airbnb.lottie.model.content.ShapeTrimPath.e` @type ^`com.airbnb.lottie.model.animatable.AnimatableFloatValue` @kind object;
  #L39f30c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f312.  v1:= "}" @kind object;
  #L39f316.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f31c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f322.  v0:= temp @kind object;
  #L39f324.  return v0 @kind object;
}
