record `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.ADD` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.EXCLUDE_INTERSECTIONS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.INTERSECT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.MERGE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.SUBTRACT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.MergePaths$MergePathsMode`[] `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L39e064.  v0:= new `com.airbnb.lottie.model.content.MergePaths$MergePathsMode`;
  #L39e068.  v1:= "MERGE" @kind object;
  #L39e06c.  v2:= 0I;
  #L39e06e.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39e074.  `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.MERGE` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` := v0 @kind object;
  #L39e078.  v1:= new `com.airbnb.lottie.model.content.MergePaths$MergePathsMode`;
  #L39e07c.  v3:= "ADD" @kind object;
  #L39e080.  v4:= 1I;
  #L39e082.  call `<init>`(v1, v3, v4) @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39e088.  `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.ADD` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` := v1 @kind object;
  #L39e08c.  v3:= new `com.airbnb.lottie.model.content.MergePaths$MergePathsMode`;
  #L39e090.  v5:= "SUBTRACT" @kind object;
  #L39e094.  v6:= 2I;
  #L39e096.  call `<init>`(v3, v5, v6) @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39e09c.  `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.SUBTRACT` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` := v3 @kind object;
  #L39e0a0.  v5:= new `com.airbnb.lottie.model.content.MergePaths$MergePathsMode`;
  #L39e0a4.  v7:= "INTERSECT" @kind object;
  #L39e0a8.  v8:= 3I;
  #L39e0aa.  call `<init>`(v5, v7, v8) @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39e0b0.  `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.INTERSECT` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` := v5 @kind object;
  #L39e0b4.  v7:= new `com.airbnb.lottie.model.content.MergePaths$MergePathsMode`;
  #L39e0b8.  v9:= "EXCLUDE_INTERSECTIONS" @kind object;
  #L39e0bc.  v10:= 4I;
  #L39e0be.  call `<init>`(v7, v9, v10) @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39e0c4.  `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.EXCLUDE_INTERSECTIONS` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` := v7 @kind object;
  #L39e0c8.  v9:= 5I;
  #L39e0ca.  v9:= new `com.airbnb.lottie.model.content.MergePaths$MergePathsMode`[v9];
  #L39e0ce.  v9[v2]:= v0 @kind object;
  #L39e0d2.  v9[v4]:= v1 @kind object;
  #L39e0d6.  v9[v6]:= v3 @kind object;
  #L39e0da.  v9[v8]:= v5 @kind object;
  #L39e0de.  v9[v10]:= v7 @kind object;
  #L39e0e2.  `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.a` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode`[] := v9 @kind object;
  #L39e0e6.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L39e0f8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39e0fe.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` `forId`(`int` v1 ) @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.forId:(I)Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39dfc8.  v0:= 1I;
  #L39dfca.  if v1 == v0 then goto L39e004;
  #L39dfce.  v0:= 2I;
  #L39dfd0.  if v1 == v0 then goto L39dffe;
  #L39dfd4.  v0:= 3I;
  #L39dfd6.  if v1 == v0 then goto L39dff8;
  #L39dfda.  v0:= 4I;
  #L39dfdc.  if v1 == v0 then goto L39dff2;
  #L39dfe0.  v0:= 5I;
  #L39dfe2.  if v1 == v0 then goto L39dfec;
  #L39dfe6.  v1:= `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.MERGE` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` @kind object;
  #L39dfea.  return v1 @kind object;
  #L39dfec.  v1:= `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.EXCLUDE_INTERSECTIONS` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` @kind object;
  #L39dff0.  return v1 @kind object;
  #L39dff2.  v1:= `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.INTERSECT` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` @kind object;
  #L39dff6.  return v1 @kind object;
  #L39dff8.  v1:= `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.SUBTRACT` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` @kind object;
  #L39dffc.  return v1 @kind object;
  #L39dffe.  v1:= `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.ADD` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` @kind object;
  #L39e002.  return v1 @kind object;
  #L39e004.  v1:= `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.MERGE` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` @kind object;
  #L39e008.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.valueOf:(Ljava/lang/String;)Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39e01c.  v0:= constclass @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` @kind object;
  #L39e020.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L39e026.  v1:= temp @kind object;
  #L39e028.  v1:= (`com.airbnb.lottie.model.content.MergePaths$MergePathsMode`) v1 @kind object;
  #L39e02c.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.MergePaths$MergePathsMode`[] `values`() @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.values:()[Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39e040.  v0:= `@@com.airbnb.lottie.model.content.MergePaths$MergePathsMode.a` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode`[] @kind object;
  #L39e044.  call temp:= `clone`(v0) @signature `[Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L39e04a.  v0:= temp @kind object;
  #L39e04c.  v0:= (`com.airbnb.lottie.model.content.MergePaths$MergePathsMode`[]) v0 @kind object;
  #L39e050.  return v0 @kind object;
}
