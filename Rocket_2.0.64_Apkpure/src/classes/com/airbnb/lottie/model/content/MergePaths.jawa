record `com.airbnb.lottie.model.content.MergePaths` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.model.content.ContentModel` @kind interface {
  `java.lang.String` `com.airbnb.lottie.model.content.MergePaths.a` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` `com.airbnb.lottie.model.content.MergePaths.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.airbnb.lottie.model.content.MergePaths.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.MergePaths` v0 @kind this, `java.lang.String` v1 @kind object, `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` v2 @kind object, `boolean` v3 ) @signature `Lcom/airbnb/lottie/model/content/MergePaths;.<init>:(Ljava/lang/String;Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39e1d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39e1da.  v0.`com.airbnb.lottie.model.content.MergePaths.a` @type ^`java.lang.String` := v1 @kind object;
  #L39e1de.  v0.`com.airbnb.lottie.model.content.MergePaths.b` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` := v2 @kind object;
  #L39e1e2.  v0.`com.airbnb.lottie.model.content.MergePaths.c` @type ^`boolean` := v3 @kind boolean;
  #L39e1e6.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.MergePaths$MergePathsMode` `getMode`(`com.airbnb.lottie.model.content.MergePaths` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/MergePaths;.getMode:()Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39e160.  v0:= v1.`com.airbnb.lottie.model.content.MergePaths.b` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` @kind object;
  #L39e164.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`com.airbnb.lottie.model.content.MergePaths` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/MergePaths;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39e178.  v0:= v1.`com.airbnb.lottie.model.content.MergePaths.a` @type ^`java.lang.String` @kind object;
  #L39e17c.  return v0 @kind object;
}
procedure `boolean` `isHidden`(`com.airbnb.lottie.model.content.MergePaths` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/MergePaths;.isHidden:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39e110.  v0:= v1.`com.airbnb.lottie.model.content.MergePaths.c` @type ^`boolean` @kind boolean;
  #L39e114.  return v0;
}
procedure `com.airbnb.lottie.animation.content.Content` `toContent`(`com.airbnb.lottie.model.content.MergePaths` v0 @kind this, `com.airbnb.lottie.LottieDrawable` v1 @kind object, `com.airbnb.lottie.model.layer.BaseLayer` v2 @kind object) @signature `Lcom/airbnb/lottie/model/content/MergePaths;.toContent:(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/BaseLayer;)Lcom/airbnb/lottie/animation/content/Content;` @AccessFlag PUBLIC {
    temp;

  #L39e128.  call temp:= `enableMergePathsForKitKatAndAbove`(v1) @signature `Lcom/airbnb/lottie/LottieDrawable;.enableMergePathsForKitKatAndAbove:()Z` @kind virtual;
  #L39e12e.  v1:= temp;
  #L39e130.  if v1 != 0 then goto L39e142;
  #L39e134.  v1:= "Animation contains merge paths but they are disabled." @kind object;
  #L39e138.  call `warning`(v1) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;)V` @kind static;
  #L39e13e.  v1:= 0I;
  #L39e140.  return v1 @kind object;
  #L39e142.  v1:= new `com.airbnb.lottie.animation.content.MergePathsContent`;
  #L39e146.  call `<init>`(v1, v0) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.<init>:(Lcom/airbnb/lottie/model/content/MergePaths;)V` @kind direct;
  #L39e14c.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.model.content.MergePaths` v2 @kind this) @signature `Lcom/airbnb/lottie/model/content/MergePaths;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39e190.  v0:= new `java.lang.StringBuilder`;
  #L39e194.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39e19a.  v1:= "MergePaths{mode=" @kind object;
  #L39e19e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e1a4.  v1:= v2.`com.airbnb.lottie.model.content.MergePaths.b` @type ^`com.airbnb.lottie.model.content.MergePaths$MergePathsMode` @kind object;
  #L39e1a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e1ae.  v1:= 125I;
  #L39e1b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e1b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e1be.  v0:= temp @kind object;
  #L39e1c0.  return v0 @kind object;
}
