record `com.airbnb.lottie.model.content.PolystarShape$Type` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `com.airbnb.lottie.model.content.PolystarShape$Type.a` @AccessFlag PRIVATE_FINAL;
}
global `com.airbnb.lottie.model.content.PolystarShape$Type` `@@com.airbnb.lottie.model.content.PolystarShape$Type.POLYGON` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.PolystarShape$Type` `@@com.airbnb.lottie.model.content.PolystarShape$Type.STAR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.PolystarShape$Type`[] `@@com.airbnb.lottie.model.content.PolystarShape$Type.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39e278.  v0:= new `com.airbnb.lottie.model.content.PolystarShape$Type`;
  #L39e27c.  v1:= "STAR" @kind object;
  #L39e280.  v2:= 0I;
  #L39e282.  v3:= 1I;
  #L39e284.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L39e28a.  `@@com.airbnb.lottie.model.content.PolystarShape$Type.STAR` @type ^`com.airbnb.lottie.model.content.PolystarShape$Type` := v0 @kind object;
  #L39e28e.  v1:= new `com.airbnb.lottie.model.content.PolystarShape$Type`;
  #L39e292.  v4:= "POLYGON" @kind object;
  #L39e296.  v5:= 2I;
  #L39e298.  call `<init>`(v1, v4, v3, v5) @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L39e29e.  `@@com.airbnb.lottie.model.content.PolystarShape$Type.POLYGON` @type ^`com.airbnb.lottie.model.content.PolystarShape$Type` := v1 @kind object;
  #L39e2a2.  v4:= new `com.airbnb.lottie.model.content.PolystarShape$Type`[v5];
  #L39e2a6.  v4[v2]:= v0 @kind object;
  #L39e2aa.  v4[v3]:= v1 @kind object;
  #L39e2ae.  `@@com.airbnb.lottie.model.content.PolystarShape$Type.b` @type ^`com.airbnb.lottie.model.content.PolystarShape$Type`[] := v4 @kind object;
  #L39e2b2.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.PolystarShape$Type` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L39e2c4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39e2ca.  v0.`com.airbnb.lottie.model.content.PolystarShape$Type.a` @type ^`int` := v3;
  #L39e2ce.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.PolystarShape$Type` `forValue`(`int` v5 ) @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.forValue:(I)Lcom/airbnb/lottie/model/content/PolystarShape$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39e1f8.  call temp:= `values`() @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.values:()[Lcom/airbnb/lottie/model/content/PolystarShape$Type;` @kind static;
  #L39e1fe.  v0:= temp @kind object;
  #L39e200.  v1:= length @variable v0;
  #L39e202.  v2:= 0I;
  #L39e204.  if v2 >= v1 then goto L39e21c;
  #L39e208.  v3:= v0[v2] @kind object;
  #L39e20c.  v4:= v3.`com.airbnb.lottie.model.content.PolystarShape$Type.a` @type ^`int`;
  #L39e210.  if v4 != v5 then goto L39e216;
  #L39e214.  return v3 @kind object;
  #L39e216.  v2:= v2 + 1;
  #L39e21a.  goto L39e204;
  #L39e21c.  v5:= 0I;
  #L39e21e.  return v5 @kind object;
}
procedure `com.airbnb.lottie.model.content.PolystarShape$Type` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.valueOf:(Ljava/lang/String;)Lcom/airbnb/lottie/model/content/PolystarShape$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39e230.  v0:= constclass @type ^`com.airbnb.lottie.model.content.PolystarShape$Type` @kind object;
  #L39e234.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L39e23a.  v1:= temp @kind object;
  #L39e23c.  v1:= (`com.airbnb.lottie.model.content.PolystarShape$Type`) v1 @kind object;
  #L39e240.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.PolystarShape$Type`[] `values`() @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.values:()[Lcom/airbnb/lottie/model/content/PolystarShape$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39e254.  v0:= `@@com.airbnb.lottie.model.content.PolystarShape$Type.b` @type ^`com.airbnb.lottie.model.content.PolystarShape$Type`[] @kind object;
  #L39e258.  call temp:= `clone`(v0) @signature `[Lcom/airbnb/lottie/model/content/PolystarShape$Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L39e25e.  v0:= temp @kind object;
  #L39e260.  v0:= (`com.airbnb.lottie.model.content.PolystarShape$Type`[]) v0 @kind object;
  #L39e264.  return v0 @kind object;
}
