record `com.airbnb.lottie.model.content.ShapeData` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.airbnb.lottie.model.content.ShapeData.a` @AccessFlag PRIVATE_FINAL;
  `android.graphics.PointF` `com.airbnb.lottie.model.content.ShapeData.b` @AccessFlag PRIVATE;
  `boolean` `com.airbnb.lottie.model.content.ShapeData.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.ShapeData` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39e6ac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39e6b2.  v0:= new `java.util.ArrayList`;
  #L39e6b6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39e6bc.  v1.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` := v0 @kind object;
  #L39e6c0.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.ShapeData` v0 @kind this, `android.graphics.PointF` v1 @kind object, `boolean` v2 , `java.util.List` v3 @kind object) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.<init>:(Landroid/graphics/PointF;ZLjava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39e6d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39e6da.  v0.`com.airbnb.lottie.model.content.ShapeData.b` @type ^`android.graphics.PointF` := v1 @kind object;
  #L39e6de.  v0.`com.airbnb.lottie.model.content.ShapeData.c` @type ^`boolean` := v2 @kind boolean;
  #L39e6e2.  v1:= new `java.util.ArrayList`;
  #L39e6e6.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L39e6ec.  v0.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` := v1 @kind object;
  #L39e6f0.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.model.content.ShapeData` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.a:(FF)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L39e9b8.  v0:= v1.`com.airbnb.lottie.model.content.ShapeData.b` @type ^`android.graphics.PointF` @kind object;
  #L39e9bc.  if v0 != 0 then goto L39e9ce;
  #L39e9c0.  v0:= new `android.graphics.PointF`;
  #L39e9c4.  call `<init>`(v0) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L39e9ca.  v1.`com.airbnb.lottie.model.content.ShapeData.b` @type ^`android.graphics.PointF` := v0 @kind object;
  #L39e9ce.  v0:= v1.`com.airbnb.lottie.model.content.ShapeData.b` @type ^`android.graphics.PointF` @kind object;
  #L39e9d2.  call `set`(v0, v2, v3) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L39e9d8.  return @kind void;
}
procedure `java.util.List` `getCurves`(`com.airbnb.lottie.model.content.ShapeData` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39e694.  v0:= v1.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e698.  return v0 @kind object;
}
procedure `android.graphics.PointF` `getInitialPoint`(`com.airbnb.lottie.model.content.ShapeData` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getInitialPoint:()Landroid/graphics/PointF;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39e604.  v0:= v1.`com.airbnb.lottie.model.content.ShapeData.b` @type ^`android.graphics.PointF` @kind object;
  #L39e608.  return v0 @kind object;
}
procedure `void` `interpolateBetween`(`com.airbnb.lottie.model.content.ShapeData` v10 @kind this, `com.airbnb.lottie.model.content.ShapeData` v11 @kind object, `com.airbnb.lottie.model.content.ShapeData` v12 @kind object, `float` v13 ) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.interpolateBetween:(Lcom/airbnb/lottie/model/content/ShapeData;Lcom/airbnb/lottie/model/content/ShapeData;F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L39e704.  v0:= v10.`com.airbnb.lottie.model.content.ShapeData.b` @type ^`android.graphics.PointF` @kind object;
  #L39e708.  if v0 != 0 then goto L39e71a;
  #L39e70c.  v0:= new `android.graphics.PointF`;
  #L39e710.  call `<init>`(v0) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L39e716.  v10.`com.airbnb.lottie.model.content.ShapeData.b` @type ^`android.graphics.PointF` := v0 @kind object;
  #L39e71a.  call temp:= `isClosed`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.isClosed:()Z` @kind virtual;
  #L39e720.  v0:= temp;
  #L39e722.  v1:= 1I;
  #L39e724.  if v0 != 0 then goto L39e73a;
  #L39e728.  call temp:= `isClosed`(v12) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.isClosed:()Z` @kind virtual;
  #L39e72e.  v0:= temp;
  #L39e730.  if v0 == 0 then goto L39e736;
  #L39e734.  goto L39e73a;
  #L39e736.  v0:= 0I;
  #L39e738.  goto L39e73c;
  #L39e73a.  v0:= 1I;
  #L39e73c.  v10.`com.airbnb.lottie.model.content.ShapeData.c` @type ^`boolean` := v0 @kind boolean;
  #L39e740.  call temp:= `getCurves`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L39e746.  v0:= temp @kind object;
  #L39e748.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e74e.  v0:= temp;
  #L39e750.  call temp:= `getCurves`(v12) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L39e756.  v2:= temp @kind object;
  #L39e758.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e75e.  v2:= temp;
  #L39e760.  if v0 == v2 then goto L39e7bc;
  #L39e764.  v0:= new `java.lang.StringBuilder`;
  #L39e768.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39e76e.  v2:= "Curves must have the same number of control points. Shape 1: " @kind object;
  #L39e772.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e778.  call temp:= `getCurves`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L39e77e.  v2:= temp @kind object;
  #L39e780.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e786.  v2:= temp;
  #L39e788.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e78e.  v2:= "\tShape 2: " @kind object;
  #L39e792.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e798.  call temp:= `getCurves`(v12) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L39e79e.  v2:= temp @kind object;
  #L39e7a0.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e7a6.  v2:= temp;
  #L39e7a8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e7ae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e7b4.  v0:= temp @kind object;
  #L39e7b6.  call `warning`(v0) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;)V` @kind static;
  #L39e7bc.  call temp:= `getCurves`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L39e7c2.  v0:= temp @kind object;
  #L39e7c4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e7ca.  v0:= temp;
  #L39e7cc.  call temp:= `getCurves`(v12) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L39e7d2.  v2:= temp @kind object;
  #L39e7d4.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e7da.  v2:= temp;
  #L39e7dc.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L39e7e2.  v0:= temp;
  #L39e7e4.  v2:= v10.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e7e8.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e7ee.  v2:= temp;
  #L39e7f0.  if v2 >= v0 then goto L39e81e;
  #L39e7f4.  v2:= v10.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e7f8.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e7fe.  v2:= temp;
  #L39e800.  if v2 >= v0 then goto L39e85a;
  #L39e804.  v3:= v10.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e808.  v4:= new `com.airbnb.lottie.model.CubicCurveData`;
  #L39e80c.  call `<init>`(v4) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.<init>:()V` @kind direct;
  #L39e812.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39e818.  v2:= v2 + 1;
  #L39e81c.  goto L39e800;
  #L39e81e.  v2:= v10.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e822.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e828.  v2:= temp;
  #L39e82a.  if v2 <= v0 then goto L39e85a;
  #L39e82e.  v2:= v10.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e832.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e838.  v2:= temp;
  #L39e83a.  v2:= v2 - v1 @kind int;
  #L39e83c.  if v2 < v0 then goto L39e85a;
  #L39e840.  v3:= v10.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e844.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e84a.  v4:= temp;
  #L39e84c.  v4:= v4 - v1 @kind int;
  #L39e84e.  call temp:= `remove`(v3, v4) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L39e854.  v2:= v2 + -1;
  #L39e858.  goto L39e83c;
  #L39e85a.  call temp:= `getInitialPoint`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getInitialPoint:()Landroid/graphics/PointF;` @kind virtual;
  #L39e860.  v0:= temp @kind object;
  #L39e862.  call temp:= `getInitialPoint`(v12) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getInitialPoint:()Landroid/graphics/PointF;` @kind virtual;
  #L39e868.  v2:= temp @kind object;
  #L39e86a.  v3:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L39e86e.  v4:= v2.`android.graphics.PointF.x` @type ^`float`;
  #L39e872.  call temp:= `lerp`(v3, v4, v13) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L39e878.  v3:= temp;
  #L39e87a.  v0:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L39e87e.  v2:= v2.`android.graphics.PointF.y` @type ^`float`;
  #L39e882.  call temp:= `lerp`(v0, v2, v13) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L39e888.  v0:= temp;
  #L39e88a.  call `a`(v10, v3, v0) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.a:(FF)V` @kind direct;
  #L39e890.  v0:= v10.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e894.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e89a.  v0:= temp;
  #L39e89c.  v0:= v0 - v1 @kind int;
  #L39e89e.  if v0 < 0 then goto L39e9a4;
  #L39e8a2.  call temp:= `getCurves`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L39e8a8.  v1:= temp @kind object;
  #L39e8aa.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39e8b0.  v1:= temp @kind object;
  #L39e8b2.  v1:= (`com.airbnb.lottie.model.CubicCurveData`) v1 @kind object;
  #L39e8b6.  call temp:= `getCurves`(v12) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L39e8bc.  v2:= temp @kind object;
  #L39e8be.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39e8c4.  v2:= temp @kind object;
  #L39e8c6.  v2:= (`com.airbnb.lottie.model.CubicCurveData`) v2 @kind object;
  #L39e8ca.  call temp:= `getControlPoint1`(v1) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getControlPoint1:()Landroid/graphics/PointF;` @kind virtual;
  #L39e8d0.  v3:= temp @kind object;
  #L39e8d2.  call temp:= `getControlPoint2`(v1) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getControlPoint2:()Landroid/graphics/PointF;` @kind virtual;
  #L39e8d8.  v4:= temp @kind object;
  #L39e8da.  call temp:= `getVertex`(v1) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getVertex:()Landroid/graphics/PointF;` @kind virtual;
  #L39e8e0.  v1:= temp @kind object;
  #L39e8e2.  call temp:= `getControlPoint1`(v2) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getControlPoint1:()Landroid/graphics/PointF;` @kind virtual;
  #L39e8e8.  v5:= temp @kind object;
  #L39e8ea.  call temp:= `getControlPoint2`(v2) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getControlPoint2:()Landroid/graphics/PointF;` @kind virtual;
  #L39e8f0.  v6:= temp @kind object;
  #L39e8f2.  call temp:= `getVertex`(v2) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getVertex:()Landroid/graphics/PointF;` @kind virtual;
  #L39e8f8.  v2:= temp @kind object;
  #L39e8fa.  v7:= v10.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e8fe.  call temp:= `get`(v7, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39e904.  v7:= temp @kind object;
  #L39e906.  v7:= (`com.airbnb.lottie.model.CubicCurveData`) v7 @kind object;
  #L39e90a.  v8:= v3.`android.graphics.PointF.x` @type ^`float`;
  #L39e90e.  v9:= v5.`android.graphics.PointF.x` @type ^`float`;
  #L39e912.  call temp:= `lerp`(v8, v9, v13) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L39e918.  v8:= temp;
  #L39e91a.  v3:= v3.`android.graphics.PointF.y` @type ^`float`;
  #L39e91e.  v5:= v5.`android.graphics.PointF.y` @type ^`float`;
  #L39e922.  call temp:= `lerp`(v3, v5, v13) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L39e928.  v3:= temp;
  #L39e92a.  call `setControlPoint1`(v7, v8, v3) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.setControlPoint1:(FF)V` @kind virtual;
  #L39e930.  v3:= v10.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e934.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39e93a.  v3:= temp @kind object;
  #L39e93c.  v3:= (`com.airbnb.lottie.model.CubicCurveData`) v3 @kind object;
  #L39e940.  v5:= v4.`android.graphics.PointF.x` @type ^`float`;
  #L39e944.  v7:= v6.`android.graphics.PointF.x` @type ^`float`;
  #L39e948.  call temp:= `lerp`(v5, v7, v13) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L39e94e.  v5:= temp;
  #L39e950.  v4:= v4.`android.graphics.PointF.y` @type ^`float`;
  #L39e954.  v6:= v6.`android.graphics.PointF.y` @type ^`float`;
  #L39e958.  call temp:= `lerp`(v4, v6, v13) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L39e95e.  v4:= temp;
  #L39e960.  call `setControlPoint2`(v3, v5, v4) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.setControlPoint2:(FF)V` @kind virtual;
  #L39e966.  v3:= v10.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e96a.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39e970.  v3:= temp @kind object;
  #L39e972.  v3:= (`com.airbnb.lottie.model.CubicCurveData`) v3 @kind object;
  #L39e976.  v4:= v1.`android.graphics.PointF.x` @type ^`float`;
  #L39e97a.  v5:= v2.`android.graphics.PointF.x` @type ^`float`;
  #L39e97e.  call temp:= `lerp`(v4, v5, v13) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L39e984.  v4:= temp;
  #L39e986.  v1:= v1.`android.graphics.PointF.y` @type ^`float`;
  #L39e98a.  v2:= v2.`android.graphics.PointF.y` @type ^`float`;
  #L39e98e.  call temp:= `lerp`(v1, v2, v13) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L39e994.  v1:= temp;
  #L39e996.  call `setVertex`(v3, v4, v1) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.setVertex:(FF)V` @kind virtual;
  #L39e99c.  v0:= v0 + -1;
  #L39e9a0.  goto L39e89e;
  #L39e9a4.  return @kind void;
}
procedure `boolean` `isClosed`(`com.airbnb.lottie.model.content.ShapeData` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39e61c.  v0:= v1.`com.airbnb.lottie.model.content.ShapeData.c` @type ^`boolean` @kind boolean;
  #L39e620.  return v0;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.model.content.ShapeData` v2 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39e634.  v0:= new `java.lang.StringBuilder`;
  #L39e638.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39e63e.  v1:= "ShapeData{numCurves=" @kind object;
  #L39e642.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e648.  v1:= v2.`com.airbnb.lottie.model.content.ShapeData.a` @type ^`java.util.List` @kind object;
  #L39e64c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e652.  v1:= temp;
  #L39e654.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e65a.  v1:= "closed=" @kind object;
  #L39e65e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e664.  v1:= v2.`com.airbnb.lottie.model.content.ShapeData.c` @type ^`boolean` @kind boolean;
  #L39e668.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e66e.  v1:= 125I;
  #L39e672.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e678.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e67e.  v0:= temp @kind object;
  #L39e680.  return v0 @kind object;
}
