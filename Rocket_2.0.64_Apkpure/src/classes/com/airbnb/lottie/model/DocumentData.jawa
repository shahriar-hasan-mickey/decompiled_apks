record `com.airbnb.lottie.model.DocumentData` @kind class @AccessFlag PUBLIC {
  `float` `com.airbnb.lottie.model.DocumentData.baselineShift` @AccessFlag PUBLIC_FINAL;
  `int` `com.airbnb.lottie.model.DocumentData.color` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `com.airbnb.lottie.model.DocumentData.fontName` @AccessFlag PUBLIC_FINAL;
  `com.airbnb.lottie.model.DocumentData$Justification` `com.airbnb.lottie.model.DocumentData.justification` @AccessFlag PUBLIC_FINAL;
  `float` `com.airbnb.lottie.model.DocumentData.lineHeight` @AccessFlag PUBLIC_FINAL;
  `float` `com.airbnb.lottie.model.DocumentData.size` @AccessFlag PUBLIC_FINAL;
  `int` `com.airbnb.lottie.model.DocumentData.strokeColor` @AccessFlag PUBLIC_FINAL;
  `boolean` `com.airbnb.lottie.model.DocumentData.strokeOverFill` @AccessFlag PUBLIC_FINAL;
  `float` `com.airbnb.lottie.model.DocumentData.strokeWidth` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `com.airbnb.lottie.model.DocumentData.text` @AccessFlag PUBLIC_FINAL;
  `int` `com.airbnb.lottie.model.DocumentData.tracking` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.DocumentData` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `float` v3 , `com.airbnb.lottie.model.DocumentData$Justification` v4 @kind object, `int` v5 , `float` v6 , `float` v7 , `int` v8 , `int` v9 , `float` v10 , `boolean` v11 ) @signature `Lcom/airbnb/lottie/model/DocumentData;.<init>:(Ljava/lang/String;Ljava/lang/String;FLcom/airbnb/lottie/model/DocumentData$Justification;IFFIIFZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39c6f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39c6f6.  v0.`com.airbnb.lottie.model.DocumentData.text` @type ^`java.lang.String` := v1 @kind object;
  #L39c6fa.  v0.`com.airbnb.lottie.model.DocumentData.fontName` @type ^`java.lang.String` := v2 @kind object;
  #L39c6fe.  v0.`com.airbnb.lottie.model.DocumentData.size` @type ^`float` := v3;
  #L39c702.  v0.`com.airbnb.lottie.model.DocumentData.justification` @type ^`com.airbnb.lottie.model.DocumentData$Justification` := v4 @kind object;
  #L39c706.  v0.`com.airbnb.lottie.model.DocumentData.tracking` @type ^`int` := v5;
  #L39c70a.  v0.`com.airbnb.lottie.model.DocumentData.lineHeight` @type ^`float` := v6;
  #L39c70e.  v0.`com.airbnb.lottie.model.DocumentData.baselineShift` @type ^`float` := v7;
  #L39c712.  v0.`com.airbnb.lottie.model.DocumentData.color` @type ^`int` := v8;
  #L39c716.  v0.`com.airbnb.lottie.model.DocumentData.strokeColor` @type ^`int` := v9;
  #L39c71a.  v0.`com.airbnb.lottie.model.DocumentData.strokeWidth` @type ^`float` := v10;
  #L39c71e.  v0.`com.airbnb.lottie.model.DocumentData.strokeOverFill` @type ^`boolean` := v11 @kind boolean;
  #L39c722.  return @kind void;
}
procedure `int` `hashCode`(`com.airbnb.lottie.model.DocumentData` v5 @kind this) @signature `Lcom/airbnb/lottie/model/DocumentData;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39c66c.  v0:= v5.`com.airbnb.lottie.model.DocumentData.text` @type ^`java.lang.String` @kind object;
  #L39c670.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L39c676.  v0:= temp;
  #L39c678.  v0:= v0 * 31;
  #L39c67c.  v1:= v5.`com.airbnb.lottie.model.DocumentData.fontName` @type ^`java.lang.String` @kind object;
  #L39c680.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L39c686.  v1:= temp;
  #L39c688.  v0:= v0 + v1 @kind int;
  #L39c68a.  v0:= v0 * 31;
  #L39c68e.  v0:= (`float`) v0 @kind i2f;
  #L39c690.  v1:= v5.`com.airbnb.lottie.model.DocumentData.size` @type ^`float`;
  #L39c694.  v0:= v0 + v1 @kind float;
  #L39c696.  v0:= (`int`) v0 @kind f2i;
  #L39c698.  v0:= v0 * 31;
  #L39c69c.  v1:= v5.`com.airbnb.lottie.model.DocumentData.justification` @type ^`com.airbnb.lottie.model.DocumentData$Justification` @kind object;
  #L39c6a0.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L39c6a6.  v1:= temp;
  #L39c6a8.  v0:= v0 + v1 @kind int;
  #L39c6aa.  v0:= v0 * 31;
  #L39c6ae.  v1:= v5.`com.airbnb.lottie.model.DocumentData.tracking` @type ^`int`;
  #L39c6b2.  v0:= v0 + v1 @kind int;
  #L39c6b4.  v1:= v5.`com.airbnb.lottie.model.DocumentData.lineHeight` @type ^`float`;
  #L39c6b8.  call temp:= `floatToRawIntBits`(v1) @signature `Ljava/lang/Float;.floatToRawIntBits:(F)I` @kind static;
  #L39c6be.  v1:= temp;
  #L39c6c0.  v1:= (`long`) v1 @kind i2l;
  #L39c6c2.  v0:= v0 * 31;
  #L39c6c6.  v3:= 32I;
  #L39c6ca.  v3:= v1 ^>> v3 @kind long;
  #L39c6ce.  v1:= v1 ^~ v3 @kind long;
  #L39c6d0.  v2:= (`int`) v1 @kind l2i;
  #L39c6d2.  v0:= v0 + v2 @kind int;
  #L39c6d4.  v0:= v0 * 31;
  #L39c6d8.  v1:= v5.`com.airbnb.lottie.model.DocumentData.color` @type ^`int`;
  #L39c6dc.  v0:= v0 + v1 @kind int;
  #L39c6de.  return v0;
}
