record `com.airbnb.lottie.model.Marker` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.airbnb.lottie.model.Marker.a` @AccessFlag PRIVATE_FINAL;
  `float` `com.airbnb.lottie.model.Marker.durationFrames` @AccessFlag PUBLIC_FINAL;
  `float` `com.airbnb.lottie.model.Marker.startFrame` @AccessFlag PUBLIC_FINAL;
}
global `java.lang.String` `@@com.airbnb.lottie.model.Marker.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/model/Marker;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L39ce28.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.Marker` v0 @kind this, `java.lang.String` v1 @kind object, `float` v2 , `float` v3 ) @signature `Lcom/airbnb/lottie/model/Marker;.<init>:(Ljava/lang/String;FF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39ce3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39ce42.  v0.`com.airbnb.lottie.model.Marker.a` @type ^`java.lang.String` := v1 @kind object;
  #L39ce46.  v0.`com.airbnb.lottie.model.Marker.durationFrames` @type ^`float` := v3;
  #L39ce4a.  v0.`com.airbnb.lottie.model.Marker.startFrame` @type ^`float` := v2;
  #L39ce4e.  return @kind void;
}
procedure `boolean` `matchesName`(`com.airbnb.lottie.model.Marker` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lcom/airbnb/lottie/model/Marker;.matchesName:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39cdc8.  v0:= v4.`com.airbnb.lottie.model.Marker.a` @type ^`java.lang.String` @kind object;
  #L39cdcc.  call temp:= `equalsIgnoreCase`(v0, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L39cdd2.  v0:= temp;
  #L39cdd4.  v1:= 1I;
  #L39cdd6.  if v0 == 0 then goto L39cddc;
  #L39cdda.  return v1;
  #L39cddc.  v0:= v4.`com.airbnb.lottie.model.Marker.a` @type ^`java.lang.String` @kind object;
  #L39cde0.  v2:= `@@com.airbnb.lottie.model.Marker.b` @type ^`java.lang.String` @kind object;
  #L39cde4.  call temp:= `endsWith`(v0, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L39cdea.  v0:= temp;
  #L39cdec.  v2:= 0I;
  #L39cdee.  if v0 == 0 then goto L39ce16;
  #L39cdf2.  v0:= v4.`com.airbnb.lottie.model.Marker.a` @type ^`java.lang.String` @kind object;
  #L39cdf6.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L39cdfc.  v3:= temp;
  #L39cdfe.  v3:= v3 - v1 @kind int;
  #L39ce00.  call temp:= `substring`(v0, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L39ce06.  v0:= temp @kind object;
  #L39ce08.  call temp:= `equalsIgnoreCase`(v0, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L39ce0e.  v5:= temp;
  #L39ce10.  if v5 == 0 then goto L39ce16;
  #L39ce14.  return v1;
  #L39ce16.  return v2;
}
