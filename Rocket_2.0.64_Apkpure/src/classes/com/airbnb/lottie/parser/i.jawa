record `com.airbnb.lottie.parser.i` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.i.a` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a5f94.  v0:= "k" @kind object;
  #L3a5f98.  temp:= new `java.lang.String`[v0];
  #L3a5f9e.  v0:= temp @kind object;
  #L3a5fa0.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a5fa6.  v0:= temp @kind object;
  #L3a5fa8.  `@@com.airbnb.lottie.parser.i.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a5fac.  return @kind void;
}
procedure `java.util.List` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v9 @kind object, `com.airbnb.lottie.LottieComposition` v10 @kind object, `float` v11 , `com.airbnb.lottie.parser.u` v12 @kind object, `boolean` v13 ) @signature `Lcom/airbnb/lottie/parser/i;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;FLcom/airbnb/lottie/parser/u;Z)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3a5e98.  v0:= new `java.util.ArrayList`;
  #L3a5e9c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a5ea2.  call temp:= `peek`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a5ea8.  v1:= temp @kind object;
  #L3a5eaa.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.STRING` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a5eae.  if v1 != v2 then goto L3a5ebe;
  #L3a5eb2.  v9:= "Lottie doesn't support expressions." @kind object;
  #L3a5eb6.  call `addWarning`(v10, v9) @signature `Lcom/airbnb/lottie/LottieComposition;.addWarning:(Ljava/lang/String;)V` @kind virtual;
  #L3a5ebc.  return v0 @kind object;
  #L3a5ebe.  call `beginObject`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L3a5ec4.  call temp:= `hasNext`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a5eca.  v1:= temp;
  #L3a5ecc.  if v1 == 0 then goto L3a5f76;
  #L3a5ed0.  v1:= `@@com.airbnb.lottie.parser.i.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a5ed4.  call temp:= `selectName`(v9, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a5eda.  v1:= temp;
  #L3a5edc.  if v1 == 0 then goto L3a5ee8;
  #L3a5ee0.  call `skipValue`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a5ee6.  goto L3a5ec4;
  #L3a5ee8.  call temp:= `peek`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a5eee.  v1:= temp @kind object;
  #L3a5ef0.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a5ef4.  if v1 != v2 then goto L3a5f5a;
  #L3a5ef8.  call `beginArray`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L3a5efe.  call temp:= `peek`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a5f04.  v1:= temp @kind object;
  #L3a5f06.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NUMBER` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a5f0a.  if v1 != v2 then goto L3a5f2a;
  #L3a5f0e.  v7:= 0I;
  #L3a5f10.  v3:= v9 @kind object;
  #L3a5f12.  v4:= v10 @kind object;
  #L3a5f14.  v5:= v11;
  #L3a5f16.  v6:= v12 @kind object;
  #L3a5f18.  v8:= v13;
  #L3a5f1a.  call temp:= `c`(v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/parser/h;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;FLcom/airbnb/lottie/parser/u;ZZ)Lcom/airbnb/lottie/value/Keyframe;` @kind static;
  #L3a5f20.  v1:= temp @kind object;
  #L3a5f22.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a5f28.  goto L3a5f52;
  #L3a5f2a.  call temp:= `hasNext`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a5f30.  v1:= temp;
  #L3a5f32.  if v1 == 0 then goto L3a5f52;
  #L3a5f36.  v6:= 1I;
  #L3a5f38.  v2:= v9 @kind object;
  #L3a5f3a.  v3:= v10 @kind object;
  #L3a5f3c.  v4:= v11;
  #L3a5f3e.  v5:= v12 @kind object;
  #L3a5f40.  v7:= v13;
  #L3a5f42.  call temp:= `c`(v2, v3, v4, v5, v6, v7) @signature `Lcom/airbnb/lottie/parser/h;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;FLcom/airbnb/lottie/parser/u;ZZ)Lcom/airbnb/lottie/value/Keyframe;` @kind static;
  #L3a5f48.  v1:= temp @kind object;
  #L3a5f4a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a5f50.  goto L3a5f2a;
  #L3a5f52.  call `endArray`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L3a5f58.  goto L3a5ec4;
  #L3a5f5a.  v6:= 0I;
  #L3a5f5c.  v2:= v9 @kind object;
  #L3a5f5e.  v3:= v10 @kind object;
  #L3a5f60.  v4:= v11;
  #L3a5f62.  v5:= v12 @kind object;
  #L3a5f64.  v7:= v13;
  #L3a5f66.  call temp:= `c`(v2, v3, v4, v5, v6, v7) @signature `Lcom/airbnb/lottie/parser/h;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;FLcom/airbnb/lottie/parser/u;ZZ)Lcom/airbnb/lottie/value/Keyframe;` @kind static;
  #L3a5f6c.  v1:= temp @kind object;
  #L3a5f6e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a5f74.  goto L3a5ec4;
  #L3a5f76.  call `endObject`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L3a5f7c.  call `b`(v0) @signature `Lcom/airbnb/lottie/parser/i;.b:(Ljava/util/List;)V` @kind static;
  #L3a5f82.  return v0 @kind object;
}
procedure `void` `b`(`java.util.List` v5 @kind object) @signature `Lcom/airbnb/lottie/parser/i;.b:(Ljava/util/List;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a5fc0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a5fc6.  v0:= temp;
  #L3a5fc8.  v1:= 0I;
  #L3a5fca.  v2:= 1I;
  #L3a5fcc.  v3:= v0 + -1;
  #L3a5fd0.  if v1 >= v3 then goto L3a6028;
  #L3a5fd4.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a5fda.  v2:= temp @kind object;
  #L3a5fdc.  v2:= (`com.airbnb.lottie.value.Keyframe`) v2 @kind object;
  #L3a5fe0.  v1:= v1 + 1;
  #L3a5fe4.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a5fea.  v3:= temp @kind object;
  #L3a5fec.  v3:= (`com.airbnb.lottie.value.Keyframe`) v3 @kind object;
  #L3a5ff0.  v4:= v3.`com.airbnb.lottie.value.Keyframe.startFrame` @type ^`float`;
  #L3a5ff4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3a5ffa.  v4:= temp @kind object;
  #L3a5ffc.  v2.`com.airbnb.lottie.value.Keyframe.endFrame` @type ^`java.lang.Float` := v4 @kind object;
  #L3a6000.  v4:= v2.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L3a6004.  if v4 != 0 then goto L3a5fca;
  #L3a6008.  v3:= v3.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L3a600c.  if v3 == 0 then goto L3a5fca;
  #L3a6010.  v2.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` := v3 @kind object;
  #L3a6014.  v3:= instanceof @variable v2 @type ^`com.airbnb.lottie.animation.keyframe.PathKeyframe` @kind boolean;
  #L3a6018.  if v3 == 0 then goto L3a5fca;
  #L3a601c.  v2:= (`com.airbnb.lottie.animation.keyframe.PathKeyframe`) v2 @kind object;
  #L3a6020.  call `createPath`(v2) @signature `Lcom/airbnb/lottie/animation/keyframe/PathKeyframe;.createPath:()V` @kind virtual;
  #L3a6026.  goto L3a5fca;
  #L3a6028.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a602e.  v0:= temp @kind object;
  #L3a6030.  v0:= (`com.airbnb.lottie.value.Keyframe`) v0 @kind object;
  #L3a6034.  v1:= v0.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L3a6038.  if v1 == 0 then goto L3a6044;
  #L3a603c.  v1:= v0.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L3a6040.  if v1 != 0 then goto L3a6056;
  #L3a6044.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a604a.  v1:= temp;
  #L3a604c.  if v1 <= v2 then goto L3a6056;
  #L3a6050.  call temp:= `remove`(v5, v0) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3a6056.  return @kind void;
}
