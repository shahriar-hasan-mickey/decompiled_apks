record `com.airbnb.lottie.parser.o` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.o.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/o;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a78a0.  v0:= "nm" @kind object;
  #L3a78a4.  v1:= "c" @kind object;
  #L3a78a8.  v2:= "o" @kind object;
  #L3a78ac.  v3:= "tr" @kind object;
  #L3a78b0.  v4:= "hd" @kind object;
  #L3a78b4.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4];
  #L3a78ba.  v0:= temp @kind object;
  #L3a78bc.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a78c2.  v0:= temp @kind object;
  #L3a78c4.  `@@com.airbnb.lottie.parser.o.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a78c8.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.Repeater` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v8 @kind object, `com.airbnb.lottie.LottieComposition` v9 @kind object) @signature `Lcom/airbnb/lottie/parser/o;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/Repeater;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a7804.  v0:= 0I;
  #L3a7806.  v1:= 0I;
  #L3a7808.  v3:= v1 @kind object;
  #L3a780a.  v4:= v3 @kind object;
  #L3a780c.  v5:= v4 @kind object;
  #L3a780e.  v6:= v5 @kind object;
  #L3a7810.  v7:= 0I;
  #L3a7812.  call temp:= `hasNext`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a7818.  v1:= temp;
  #L3a781a.  if v1 == 0 then goto L3a7880;
  #L3a781e.  v1:= `@@com.airbnb.lottie.parser.o.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a7822.  call temp:= `selectName`(v8, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a7828.  v1:= temp;
  #L3a782a.  if v1 == 0 then goto L3a7876;
  #L3a782e.  v2:= 1I;
  #L3a7830.  if v1 == v2 then goto L3a786c;
  #L3a7834.  v2:= 2I;
  #L3a7836.  if v1 == v2 then goto L3a7862;
  #L3a783a.  v2:= 3I;
  #L3a783c.  if v1 == v2 then goto L3a7858;
  #L3a7840.  v2:= 4I;
  #L3a7842.  if v1 == v2 then goto L3a784e;
  #L3a7846.  call `skipValue`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a784c.  goto L3a7812;
  #L3a784e.  call temp:= `nextBoolean`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L3a7854.  v7:= temp;
  #L3a7856.  goto L3a7812;
  #L3a7858.  call temp:= `parse`(v8, v9) @signature `Lcom/airbnb/lottie/parser/AnimatableTransformParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableTransform;` @kind static;
  #L3a785e.  v6:= temp @kind object;
  #L3a7860.  goto L3a7812;
  #L3a7862.  call temp:= `parseFloat`(v8, v9, v0) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.parseFloat:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;Z)Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @kind static;
  #L3a7868.  v5:= temp @kind object;
  #L3a786a.  goto L3a7812;
  #L3a786c.  call temp:= `parseFloat`(v8, v9, v0) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.parseFloat:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;Z)Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @kind static;
  #L3a7872.  v4:= temp @kind object;
  #L3a7874.  goto L3a7812;
  #L3a7876.  call temp:= `nextString`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a787c.  v3:= temp @kind object;
  #L3a787e.  goto L3a7812;
  #L3a7880.  v8:= new `com.airbnb.lottie.model.content.Repeater`;
  #L3a7884.  v2:= v8 @kind object;
  #L3a7886.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lcom/airbnb/lottie/model/content/Repeater;.<init>:(Ljava/lang/String;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableTransform;Z)V` @kind direct;
  #L3a788c.  return v8 @kind object;
}
