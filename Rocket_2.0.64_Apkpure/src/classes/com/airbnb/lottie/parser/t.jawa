record `com.airbnb.lottie.parser.t` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.t.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a8294.  v0:= "s" @kind object;
  #L3a8298.  v1:= "e" @kind object;
  #L3a829c.  v2:= "o" @kind object;
  #L3a82a0.  v3:= "nm" @kind object;
  #L3a82a4.  v4:= "m" @kind object;
  #L3a82a8.  v5:= "hd" @kind object;
  #L3a82ac.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5];
  #L3a82b2.  v0:= temp @kind object;
  #L3a82b4.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a82ba.  v0:= temp @kind object;
  #L3a82bc.  `@@com.airbnb.lottie.parser.t.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a82c0.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v9 @kind object, `com.airbnb.lottie.LottieComposition` v10 @kind object) @signature `Lcom/airbnb/lottie/parser/t;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/ShapeTrimPath;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3a81e0.  v0:= 0I;
  #L3a81e2.  v1:= 0I;
  #L3a81e4.  v3:= v1 @kind object;
  #L3a81e6.  v4:= v3 @kind object;
  #L3a81e8.  v5:= v4 @kind object;
  #L3a81ea.  v6:= v5 @kind object;
  #L3a81ec.  v7:= v6 @kind object;
  #L3a81ee.  v8:= 0I;
  #L3a81f0.  call temp:= `hasNext`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a81f6.  v1:= temp;
  #L3a81f8.  if v1 == 0 then goto L3a8276;
  #L3a81fc.  v1:= `@@com.airbnb.lottie.parser.t.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a8200.  call temp:= `selectName`(v9, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a8206.  v1:= temp;
  #L3a8208.  if v1 == 0 then goto L3a826c;
  #L3a820c.  v2:= 1I;
  #L3a820e.  if v1 == v2 then goto L3a8262;
  #L3a8212.  v2:= 2I;
  #L3a8214.  if v1 == v2 then goto L3a8258;
  #L3a8218.  v2:= 3I;
  #L3a821a.  if v1 == v2 then goto L3a824e;
  #L3a821e.  v2:= 4I;
  #L3a8220.  if v1 == v2 then goto L3a823c;
  #L3a8224.  v2:= 5I;
  #L3a8226.  if v1 == v2 then goto L3a8232;
  #L3a822a.  call `skipValue`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a8230.  goto L3a81f0;
  #L3a8232.  call temp:= `nextBoolean`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L3a8238.  v8:= temp;
  #L3a823a.  goto L3a81f0;
  #L3a823c.  call temp:= `nextInt`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextInt:()I` @kind virtual;
  #L3a8242.  v1:= temp;
  #L3a8244.  call temp:= `forId`(v1) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.forId:(I)Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @kind static;
  #L3a824a.  v4:= temp @kind object;
  #L3a824c.  goto L3a81f0;
  #L3a824e.  call temp:= `nextString`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a8254.  v3:= temp @kind object;
  #L3a8256.  goto L3a81f0;
  #L3a8258.  call temp:= `parseFloat`(v9, v10, v0) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.parseFloat:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;Z)Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @kind static;
  #L3a825e.  v7:= temp @kind object;
  #L3a8260.  goto L3a81f0;
  #L3a8262.  call temp:= `parseFloat`(v9, v10, v0) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.parseFloat:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;Z)Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @kind static;
  #L3a8268.  v6:= temp @kind object;
  #L3a826a.  goto L3a81f0;
  #L3a826c.  call temp:= `parseFloat`(v9, v10, v0) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.parseFloat:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;Z)Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @kind static;
  #L3a8272.  v5:= temp @kind object;
  #L3a8274.  goto L3a81f0;
  #L3a8276.  v9:= new `com.airbnb.lottie.model.content.ShapeTrimPath`;
  #L3a827a.  v2:= v9 @kind object;
  #L3a827c.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.<init>:(Ljava/lang/String;Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Z)V` @kind direct;
  #L3a8282.  return v9 @kind object;
}
