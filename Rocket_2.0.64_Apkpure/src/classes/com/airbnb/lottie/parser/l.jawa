record `com.airbnb.lottie.parser.l` @kind class @AccessFlag  {
}
procedure `com.airbnb.lottie.animation.keyframe.PathKeyframe` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v7 @kind object, `com.airbnb.lottie.LottieComposition` v8 @kind object) @signature `Lcom/airbnb/lottie/parser/l;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/animation/keyframe/PathKeyframe;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a7418.  call temp:= `peek`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a741e.  v0:= temp @kind object;
  #L3a7420.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a7424.  if v0 != v1 then goto L3a742e;
  #L3a7428.  v0:= 1I;
  #L3a742a.  v5:= 1I;
  #L3a742c.  goto L3a7432;
  #L3a742e.  v0:= 0I;
  #L3a7430.  v5:= 0I;
  #L3a7432.  call temp:= `dpScale`() @signature `Lcom/airbnb/lottie/utils/Utils;.dpScale:()F` @kind static;
  #L3a7438.  v3:= temp;
  #L3a743a.  v4:= `@@com.airbnb.lottie.parser.PathParser.INSTANCE` @type ^`com.airbnb.lottie.parser.PathParser` @kind object;
  #L3a743e.  v6:= 0I;
  #L3a7440.  v1:= v7 @kind object;
  #L3a7442.  v2:= v8 @kind object;
  #L3a7444.  call temp:= `c`(v1, v2, v3, v4, v5, v6) @signature `Lcom/airbnb/lottie/parser/h;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;FLcom/airbnb/lottie/parser/u;ZZ)Lcom/airbnb/lottie/value/Keyframe;` @kind static;
  #L3a744a.  v7:= temp @kind object;
  #L3a744c.  v0:= new `com.airbnb.lottie.animation.keyframe.PathKeyframe`;
  #L3a7450.  call `<init>`(v0, v8, v7) @signature `Lcom/airbnb/lottie/animation/keyframe/PathKeyframe;.<init>:(Lcom/airbnb/lottie/LottieComposition;Lcom/airbnb/lottie/value/Keyframe;)V` @kind direct;
  #L3a7456.  return v0 @kind object;
}
