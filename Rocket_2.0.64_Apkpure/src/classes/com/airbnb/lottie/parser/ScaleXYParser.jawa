record `com.airbnb.lottie.parser.ScaleXYParser` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.parser.u` @kind interface {
}
global `com.airbnb.lottie.parser.ScaleXYParser` `@@com.airbnb.lottie.parser.ScaleXYParser.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a7978.  v0:= new `com.airbnb.lottie.parser.ScaleXYParser`;
  #L3a797c.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.<init>:()V` @kind direct;
  #L3a7982.  `@@com.airbnb.lottie.parser.ScaleXYParser.INSTANCE` @type ^`com.airbnb.lottie.parser.ScaleXYParser` := v0 @kind object;
  #L3a7986.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.ScaleXYParser` v0 @kind this) @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a7998.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a799e.  return @kind void;
}
procedure `com.airbnb.lottie.value.ScaleXY` `parse`(`com.airbnb.lottie.parser.ScaleXYParser` v4 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v5 @kind object, `float` v6 ) @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/value/ScaleXY;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a78dc.  call temp:= `peek`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a78e2.  v0:= temp @kind object;
  #L3a78e4.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a78e8.  if v0 != v1 then goto L3a78f0;
  #L3a78ec.  v0:= 1I;
  #L3a78ee.  goto L3a78f2;
  #L3a78f0.  v0:= 0I;
  #L3a78f2.  if v0 == 0 then goto L3a78fc;
  #L3a78f6.  call `beginArray`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L3a78fc.  call temp:= `nextDouble`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a7902.  v1:= temp @kind wide;
  #L3a7904.  v1:= (`float`) v1 @kind d2f;
  #L3a7906.  call temp:= `nextDouble`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a790c.  v2:= temp @kind wide;
  #L3a790e.  v2:= (`float`) v2 @kind d2f;
  #L3a7910.  call temp:= `hasNext`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a7916.  v3:= temp;
  #L3a7918.  if v3 == 0 then goto L3a7924;
  #L3a791c.  call `skipValue`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a7922.  goto L3a7910;
  #L3a7924.  if v0 == 0 then goto L3a792e;
  #L3a7928.  call `endArray`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L3a792e.  v5:= new `com.airbnb.lottie.value.ScaleXY`;
  #L3a7932.  v0:= 100.0F;
  #L3a7936.  v1:= v1 / v0 @kind float;
  #L3a7938.  v1:= v1 * v6 @kind float;
  #L3a793c.  v2:= v2 / v0 @kind float;
  #L3a793e.  v2:= v2 * v6 @kind float;
  #L3a7942.  call `<init>`(v5, v1, v2) @signature `Lcom/airbnb/lottie/value/ScaleXY;.<init>:(FF)V` @kind direct;
  #L3a7948.  return v5 @kind object;
}
procedure `java.lang.Object` `parse`(`com.airbnb.lottie.parser.ScaleXYParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a795c.  call temp:= `parse`(v0, v1, v2) @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/value/ScaleXY;` @kind virtual;
  #L3a7962.  v1:= temp @kind object;
  #L3a7964.  return v1 @kind object;
}
