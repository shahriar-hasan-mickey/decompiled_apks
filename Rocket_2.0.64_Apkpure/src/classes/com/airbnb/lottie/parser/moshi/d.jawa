record `com.airbnb.lottie.parser.moshi.d` @kind class @AccessFlag FINAL extends `com.airbnb.lottie.parser.moshi.JsonReader` @kind class {
  `okio.BufferedSource` `com.airbnb.lottie.parser.moshi.d.h` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `com.airbnb.lottie.parser.moshi.d.i` @AccessFlag PRIVATE_FINAL;
  `int` `com.airbnb.lottie.parser.moshi.d.j` @AccessFlag PRIVATE;
  `long` `com.airbnb.lottie.parser.moshi.d.k` @AccessFlag PRIVATE;
  `int` `com.airbnb.lottie.parser.moshi.d.l` @AccessFlag PRIVATE;
  `java.lang.String` `com.airbnb.lottie.parser.moshi.d.m` @AccessFlag PRIVATE;
}
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.d.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.d.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.d.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.d.q` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.d.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/moshi/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a9d08.  v0:= "'\\" @kind object;
  #L3a9d0c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3a9d12.  v0:= temp @kind object;
  #L3a9d14.  `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` := v0 @kind object;
  #L3a9d18.  v0:= "\"\\" @kind object;
  #L3a9d1c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3a9d22.  v0:= temp @kind object;
  #L3a9d24.  `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` := v0 @kind object;
  #L3a9d28.  v0:= "{}[]:, \n\t\r\f/\\;#=" @kind object;
  #L3a9d2c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3a9d32.  v0:= temp @kind object;
  #L3a9d34.  `@@com.airbnb.lottie.parser.moshi.d.p` @type ^`okio.ByteString` := v0 @kind object;
  #L3a9d38.  v0:= "\n\r" @kind object;
  #L3a9d3c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3a9d42.  v0:= temp @kind object;
  #L3a9d44.  `@@com.airbnb.lottie.parser.moshi.d.q` @type ^`okio.ByteString` := v0 @kind object;
  #L3a9d48.  v0:= "*/" @kind object;
  #L3a9d4c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3a9d52.  v0:= temp @kind object;
  #L3a9d54.  `@@com.airbnb.lottie.parser.moshi.d.r` @type ^`okio.ByteString` := v0 @kind object;
  #L3a9d58.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.moshi.d` v1 @kind this, `okio.BufferedSource` v2 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/d;.<init>:(Lokio/BufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3a9d6c.  call `<init>`(v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.<init>:()V` @kind direct;
  #L3a9d72.  v0:= 0I;
  #L3a9d74.  v1.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L3a9d78.  v0:= "source == null" @kind object;
  #L3a9d7c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3a9d82.  v1.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` := v2 @kind object;
  #L3a9d86.  call temp:= `buffer`(v2) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L3a9d8c.  v2:= temp @kind object;
  #L3a9d8e.  v1.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` := v2 @kind object;
  #L3a9d92.  v2:= 6I;
  #L3a9d94.  call `b`(v1, v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @kind virtual;
  #L3a9d9a.  return @kind void;
}
procedure `void` `e`(`com.airbnb.lottie.parser.moshi.d` v1 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a9ec4.  v0:= v1.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`boolean` @kind boolean;
  #L3a9ec8.  if v0 == 0 then goto L3a9ece;
  #L3a9ecc.  return @kind void;
  #L3a9ece.  v0:= "Use JsonReader.setLenient(true) to accept malformed JSON" @kind object;
  #L3a9ed2.  call temp:= `d`(v1, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a9ed8.  v0:= temp @kind object;
  #L3a9eda.  throw v0;
}
procedure `int` `f`(`com.airbnb.lottie.parser.moshi.d` v16 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3a8f24.  v0:= v16 @kind object;
  #L3a8f28.  v1:= v0.`com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`int`[] @kind object;
  #L3a8f2c.  v2:= v0.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a8f30.  v3:= v2 + -1;
  #L3a8f34.  v3:= v1[v3];
  #L3a8f38.  v4:= 0L;
  #L3a8f3c.  v6:= 8I;
  #L3a8f40.  v8:= 34I;
  #L3a8f44.  v9:= 93I;
  #L3a8f48.  v10:= 3I;
  #L3a8f4a.  v11:= 7I;
  #L3a8f4c.  v12:= 59I;
  #L3a8f50.  v13:= 44I;
  #L3a8f54.  v14:= 4I;
  #L3a8f56.  v15:= 2I;
  #L3a8f58.  v7:= 1I;
  #L3a8f5a.  if v3 != v7 then goto L3a8f68;
  #L3a8f5e.  v2:= v2 - v7 @kind int;
  #L3a8f60.  v1[v2]:= v15;
  #L3a8f64.  goto L3a9060;
  #L3a8f68.  if v3 != v15 then goto L3a8fa6;
  #L3a8f6c.  call temp:= `i`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L3a8f72.  v1:= temp;
  #L3a8f74.  v2:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a8f78.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a8f7e.  if v1 == v13 then goto L3a9060;
  #L3a8f82.  if v1 == v12 then goto L3a8f9e;
  #L3a8f86.  if v1 != v9 then goto L3a8f90;
  #L3a8f8a.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v14;
  #L3a8f8e.  return v14;
  #L3a8f90.  v1:= "Unterminated array" @kind object;
  #L3a8f94.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a8f9a.  v1:= temp @kind object;
  #L3a8f9c.  throw v1;
  #L3a8f9e.  call `e`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a8fa4.  goto L3a9060;
  #L3a8fa6.  v15:= 5I;
  #L3a8fa8.  if v3 == v10 then goto L3a9178;
  #L3a8fac.  if v3 != v15 then goto L3a8fb4;
  #L3a8fb0.  goto L3a9178;
  #L3a8fb4.  if v3 != v14 then goto L3a9028;
  #L3a8fb8.  v2:= v2 - v7 @kind int;
  #L3a8fba.  v1[v2]:= v15;
  #L3a8fbe.  call temp:= `i`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L3a8fc4.  v1:= temp;
  #L3a8fc6.  v2:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a8fca.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a8fd0.  v2:= 58I;
  #L3a8fd4.  if v1 == v2 then goto L3a9060;
  #L3a8fd8.  v2:= 61I;
  #L3a8fdc.  if v1 != v2 then goto L3a901a;
  #L3a8fe0.  call `e`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a8fe6.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a8fea.  v14:= 1L;
  #L3a8fee.  call temp:= `request`(v1, v14) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L3a8ff4.  v1:= temp;
  #L3a8ff6.  if v1 == 0 then goto L3a9060;
  #L3a8ffa.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a8ffe.  call temp:= `getByte`(v1, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3a9004.  v1:= temp;
  #L3a9006.  v2:= 62I;
  #L3a900a.  if v1 != v2 then goto L3a9060;
  #L3a900e.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9012.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a9018.  goto L3a9060;
  #L3a901a.  v1:= "Expected ':'" @kind object;
  #L3a901e.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a9024.  v1:= temp @kind object;
  #L3a9026.  throw v1;
  #L3a9028.  v14:= 6I;
  #L3a902a.  if v3 != v14 then goto L3a9036;
  #L3a902e.  v2:= v2 - v7 @kind int;
  #L3a9030.  v1[v2]:= v11;
  #L3a9034.  goto L3a9060;
  #L3a9036.  if v3 != v11 then goto L3a905c;
  #L3a903a.  v1:= 0I;
  #L3a903c.  call temp:= `i`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L3a9042.  v1:= temp;
  #L3a9044.  v2:= -1I;
  #L3a9046.  if v1 != v2 then goto L3a9054;
  #L3a904a.  v1:= 18I;
  #L3a904e.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a9052.  return v1;
  #L3a9054.  call `e`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a905a.  goto L3a9060;
  #L3a905c.  if v3 == v6 then goto L3a9168;
  #L3a9060.  call temp:= `i`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L3a9066.  v1:= temp;
  #L3a9068.  if v1 == v8 then goto L3a9154;
  #L3a906c.  v2:= 39I;
  #L3a9070.  if v1 == v2 then goto L3a913e;
  #L3a9074.  if v1 == v13 then goto L3a9118;
  #L3a9078.  if v1 == v12 then goto L3a9118;
  #L3a907c.  v2:= 91I;
  #L3a9080.  if v1 == v2 then goto L3a9108;
  #L3a9084.  if v1 == v9 then goto L3a90f2;
  #L3a9088.  v2:= 123I;
  #L3a908c.  if v1 == v2 then goto L3a90e2;
  #L3a9090.  call temp:= `l`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.l:()I` @kind direct;
  #L3a9096.  v1:= temp;
  #L3a9098.  if v1 == 0 then goto L3a909e;
  #L3a909c.  return v1;
  #L3a909e.  call temp:= `m`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.m:()I` @kind direct;
  #L3a90a4.  v1:= temp;
  #L3a90a6.  if v1 == 0 then goto L3a90ac;
  #L3a90aa.  return v1;
  #L3a90ac.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a90b0.  call temp:= `getByte`(v1, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3a90b6.  v1:= temp;
  #L3a90b8.  call temp:= `h`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.h:(I)Z` @kind direct;
  #L3a90be.  v1:= temp;
  #L3a90c0.  if v1 == 0 then goto L3a90d4;
  #L3a90c4.  call `e`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a90ca.  v1:= 10I;
  #L3a90ce.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a90d2.  return v1;
  #L3a90d4.  v1:= "Expected value" @kind object;
  #L3a90d8.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a90de.  v1:= temp @kind object;
  #L3a90e0.  throw v1;
  #L3a90e2.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a90e6.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a90ec.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v7;
  #L3a90f0.  return v7;
  #L3a90f2.  if v3 != v7 then goto L3a9118;
  #L3a90f6.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a90fa.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a9100.  v1:= 4I;
  #L3a9102.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a9106.  return v1;
  #L3a9108.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a910c.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a9112.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v10;
  #L3a9116.  return v10;
  #L3a9118.  if v3 == v7 then goto L3a9132;
  #L3a911c.  v1:= 2I;
  #L3a911e.  if v3 != v1 then goto L3a9124;
  #L3a9122.  goto L3a9132;
  #L3a9124.  v1:= "Unexpected value" @kind object;
  #L3a9128.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a912e.  v1:= temp @kind object;
  #L3a9130.  throw v1;
  #L3a9132.  call `e`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a9138.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v11;
  #L3a913c.  return v11;
  #L3a913e.  call `e`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a9144.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9148.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a914e.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v6;
  #L3a9152.  return v6;
  #L3a9154.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9158.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a915e.  v1:= 9I;
  #L3a9162.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a9166.  return v1;
  #L3a9168.  v1:= new `java.lang.IllegalStateException`;
  #L3a916c.  v2:= "JsonReader is closed" @kind object;
  #L3a9170.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9176.  throw v1;
  #L3a9178.  v2:= v2 - v7 @kind int;
  #L3a917a.  v4:= 4I;
  #L3a917c.  v1[v2]:= v4;
  #L3a9180.  v1:= 125I;
  #L3a9184.  if v3 != v15 then goto L3a91c2;
  #L3a9188.  call temp:= `i`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L3a918e.  v2:= temp;
  #L3a9190.  v4:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9194.  call temp:= `readByte`(v4) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a919a.  if v2 == v13 then goto L3a91c2;
  #L3a919e.  if v2 == v12 then goto L3a91bc;
  #L3a91a2.  if v2 != v1 then goto L3a91ae;
  #L3a91a6.  v1:= 2I;
  #L3a91a8.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a91ac.  return v1;
  #L3a91ae.  v1:= "Unterminated object" @kind object;
  #L3a91b2.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a91b8.  v1:= temp @kind object;
  #L3a91ba.  throw v1;
  #L3a91bc.  call `e`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a91c2.  call temp:= `i`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L3a91c8.  v2:= temp;
  #L3a91ca.  if v2 == v8 then goto L3a9240;
  #L3a91ce.  v4:= 39I;
  #L3a91d2.  if v2 == v4 then goto L3a9226;
  #L3a91d6.  v4:= "Expected name" @kind object;
  #L3a91da.  if v2 == v1 then goto L3a9206;
  #L3a91de.  call `e`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a91e4.  v1:= (`char`) v2 @kind i2c;
  #L3a91e6.  call temp:= `h`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.h:(I)Z` @kind direct;
  #L3a91ec.  v1:= temp;
  #L3a91ee.  if v1 == 0 then goto L3a91fc;
  #L3a91f2.  v1:= 14I;
  #L3a91f6.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a91fa.  return v1;
  #L3a91fc.  call temp:= `d`(v0, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a9202.  v1:= temp @kind object;
  #L3a9204.  throw v1;
  #L3a9206.  if v3 == v15 then goto L3a921c;
  #L3a920a.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a920e.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a9214.  v1:= 2I;
  #L3a9216.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a921a.  return v1;
  #L3a921c.  call temp:= `d`(v0, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a9222.  v1:= temp @kind object;
  #L3a9224.  throw v1;
  #L3a9226.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a922a.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a9230.  call `e`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a9236.  v1:= 12I;
  #L3a923a.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a923e.  return v1;
  #L3a9240.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9244.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a924a.  v1:= 13I;
  #L3a924e.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a9252.  return v1;
}
procedure `int` `g`(`com.airbnb.lottie.parser.moshi.d` v4 @kind this, `java.lang.String` v5 @kind object, `com.airbnb.lottie.parser.moshi.JsonReader$Options` v6 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/d;.g:(Ljava/lang/String;Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a9264.  v0:= v6.`com.airbnb.lottie.parser.moshi.JsonReader$Options.a` @type ^`java.lang.String`[] @kind object;
  #L3a9268.  v0:= length @variable v0;
  #L3a926a.  v1:= 0I;
  #L3a926c.  v2:= 0I;
  #L3a926e.  if v2 >= v0 then goto L3a92a2;
  #L3a9272.  v3:= v6.`com.airbnb.lottie.parser.moshi.JsonReader$Options.a` @type ^`java.lang.String`[] @kind object;
  #L3a9276.  v3:= v3[v2] @kind object;
  #L3a927a.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a9280.  v3:= temp;
  #L3a9282.  if v3 == 0 then goto L3a929c;
  #L3a9286.  v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a928a.  v6:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L3a928e.  v0:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a9292.  v0:= v0 + -1;
  #L3a9296.  v6[v0]:= v5 @kind object;
  #L3a929a.  return v2;
  #L3a929c.  v2:= v2 + 1;
  #L3a92a0.  goto L3a926e;
  #L3a92a2.  v5:= -1I;
  #L3a92a4.  return v5;
}
procedure `boolean` `h`(`com.airbnb.lottie.parser.moshi.d` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/lottie/parser/moshi/d;.h:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a88dc.  v0:= 9I;
  #L3a88e0.  if v2 == v0 then goto L3a8954;
  #L3a88e4.  v0:= 10I;
  #L3a88e8.  if v2 == v0 then goto L3a8954;
  #L3a88ec.  v0:= 12I;
  #L3a88f0.  if v2 == v0 then goto L3a8954;
  #L3a88f4.  v0:= 13I;
  #L3a88f8.  if v2 == v0 then goto L3a8954;
  #L3a88fc.  v0:= 32I;
  #L3a8900.  if v2 == v0 then goto L3a8954;
  #L3a8904.  v0:= 35I;
  #L3a8908.  if v2 == v0 then goto L3a894e;
  #L3a890c.  v0:= 44I;
  #L3a8910.  if v2 == v0 then goto L3a8954;
  #L3a8914.  v0:= 47I;
  #L3a8918.  if v2 == v0 then goto L3a894e;
  #L3a891c.  v0:= 61I;
  #L3a8920.  if v2 == v0 then goto L3a894e;
  #L3a8924.  v0:= 123I;
  #L3a8928.  if v2 == v0 then goto L3a8954;
  #L3a892c.  v0:= 125I;
  #L3a8930.  if v2 == v0 then goto L3a8954;
  #L3a8934.  v0:= 58I;
  #L3a8938.  if v2 == v0 then goto L3a8954;
  #L3a893c.  v0:= 59I;
  #L3a8940.  if v2 == v0 then goto L3a894e;
  #L3a8944.  goto L3a8958;
  #L3a894a.  v2:= 1I;
  #L3a894c.  return v2;
  #L3a894e.  call `e`(v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a8954.  v2:= 0I;
  #L3a8956.  return v2;
  #L3a8958.  switch v2
                  | 91 => goto L3a8954
                  | 92 => goto L3a894e
                  | 93 => goto L3a8954
                  | else => goto L3a894a;
}
procedure `int` `i`(`com.airbnb.lottie.parser.moshi.d` v6 @kind this, `boolean` v7 ) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a9504.  v0:= 0I;
  #L3a9506.  v1:= 0I;
  #L3a9508.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a950c.  v3:= v1 + 1;
  #L3a9510.  v4:= (`long`) v3 @kind i2l;
  #L3a9512.  call temp:= `request`(v2, v4) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L3a9518.  v2:= temp;
  #L3a951a.  if v2 == 0 then goto L3a9608;
  #L3a951e.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9522.  v4:= (`long`) v1 @kind i2l;
  #L3a9524.  call temp:= `getByte`(v2, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3a952a.  v1:= temp;
  #L3a952c.  v2:= 10I;
  #L3a9530.  if v1 == v2 then goto L3a9604;
  #L3a9534.  v2:= 32I;
  #L3a9538.  if v1 == v2 then goto L3a9604;
  #L3a953c.  v2:= 13I;
  #L3a9540.  if v1 == v2 then goto L3a9604;
  #L3a9544.  v2:= 9I;
  #L3a9548.  if v1 != v2 then goto L3a954e;
  #L3a954c.  goto L3a9604;
  #L3a954e.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9552.  v3:= v3 + -1;
  #L3a9556.  v3:= (`long`) v3 @kind i2l;
  #L3a9558.  call `skip`(v2, v3) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L3a955e.  v2:= 47I;
  #L3a9562.  if v1 != v2 then goto L3a95ec;
  #L3a9566.  v3:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a956a.  v4:= 2L;
  #L3a956e.  call temp:= `request`(v3, v4) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L3a9574.  v3:= temp;
  #L3a9576.  if v3 != 0 then goto L3a957c;
  #L3a957a.  return v1;
  #L3a957c.  call `e`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a9582.  v3:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9586.  v4:= 1L;
  #L3a958a.  call temp:= `getByte`(v3, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3a9590.  v3:= temp;
  #L3a9592.  v4:= 42I;
  #L3a9596.  if v3 == v4 then goto L3a95bc;
  #L3a959a.  if v3 == v2 then goto L3a95a0;
  #L3a959e.  return v1;
  #L3a95a0.  v1:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a95a4.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a95aa.  v1:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a95ae.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a95b4.  call `q`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.q:()V` @kind direct;
  #L3a95ba.  goto L3a9506;
  #L3a95bc.  v1:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a95c0.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a95c6.  v1:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a95ca.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a95d0.  call temp:= `p`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.p:()Z` @kind direct;
  #L3a95d6.  v1:= temp;
  #L3a95d8.  if v1 == 0 then goto L3a95de;
  #L3a95dc.  goto L3a9506;
  #L3a95de.  v7:= "Unterminated comment" @kind object;
  #L3a95e2.  call temp:= `d`(v6, v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a95e8.  v7:= temp @kind object;
  #L3a95ea.  throw v7;
  #L3a95ec.  v2:= 35I;
  #L3a95f0.  if v1 != v2 then goto L3a9602;
  #L3a95f4.  call `e`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L3a95fa.  call `q`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.q:()V` @kind direct;
  #L3a9600.  goto L3a9506;
  #L3a9602.  return v1;
  #L3a9604.  v1:= v3;
  #L3a9606.  goto L3a9508;
  #L3a9608.  if v7 != 0 then goto L3a9610;
  #L3a960c.  v7:= -1I;
  #L3a960e.  return v7;
  #L3a9610.  v7:= new `java.io.EOFException`;
  #L3a9614.  v0:= "End of input" @kind object;
  #L3a9618.  call `<init>`(v7, v0) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a961e.  throw v7;
}
procedure `java.lang.String` `j`(`com.airbnb.lottie.parser.moshi.d` v6 @kind this, `okio.ByteString` v7 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a9aa4.  v0:= 0I;
  #L3a9aa6.  v1:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a9aaa.  call temp:= `indexOfElement`(v1, v7) @signature `Lokio/BufferedSource;.indexOfElement:(Lokio/ByteString;)J` @kind interface;
  #L3a9ab0.  v1:= temp @kind wide;
  #L3a9ab2.  v3:= -1L;
  #L3a9ab6.  v5:= lcmp(v1, v3);
  #L3a9aba.  if v5 == 0 then goto L3a9b4e;
  #L3a9abe.  v3:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9ac2.  call temp:= `getByte`(v3, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3a9ac8.  v3:= temp;
  #L3a9aca.  v4:= 92I;
  #L3a9ace.  if v3 != v4 then goto L3a9b0c;
  #L3a9ad2.  if v0 != 0 then goto L3a9ae0;
  #L3a9ad6.  v0:= new `java.lang.StringBuilder`;
  #L3a9ada.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9ae0.  v3:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9ae4.  call temp:= `readUtf8`(v3, v1) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L3a9aea.  v1:= temp @kind object;
  #L3a9aec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9af2.  v1:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9af6.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a9afc.  call temp:= `n`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.n:()C` @kind direct;
  #L3a9b02.  v1:= temp;
  #L3a9b04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9b0a.  goto L3a9aa6;
  #L3a9b0c.  if v0 != 0 then goto L3a9b28;
  #L3a9b10.  v7:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9b14.  call temp:= `readUtf8`(v7, v1) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L3a9b1a.  v7:= temp @kind object;
  #L3a9b1c.  v0:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9b20.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a9b26.  return v7 @kind object;
  #L3a9b28.  v7:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9b2c.  call temp:= `readUtf8`(v7, v1) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L3a9b32.  v7:= temp @kind object;
  #L3a9b34.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9b3a.  v7:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9b3e.  call temp:= `readByte`(v7) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a9b44.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9b4a.  v7:= temp @kind object;
  #L3a9b4c.  return v7 @kind object;
  #L3a9b4e.  v7:= "Unterminated string" @kind object;
  #L3a9b52.  call temp:= `d`(v6, v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a9b58.  v7:= temp @kind object;
  #L3a9b5a.  throw v7;
}
procedure `java.lang.String` `k`(`com.airbnb.lottie.parser.moshi.d` v5 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.k:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a9c7c.  v0:= v5.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a9c80.  v1:= `@@com.airbnb.lottie.parser.moshi.d.p` @type ^`okio.ByteString` @kind object;
  #L3a9c84.  call temp:= `indexOfElement`(v0, v1) @signature `Lokio/BufferedSource;.indexOfElement:(Lokio/ByteString;)J` @kind interface;
  #L3a9c8a.  v0:= temp @kind wide;
  #L3a9c8c.  v2:= -1L;
  #L3a9c90.  v4:= lcmp(v0, v2);
  #L3a9c94.  if v4 == 0 then goto L3a9ca6;
  #L3a9c98.  v2:= v5.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9c9c.  call temp:= `readUtf8`(v2, v0) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L3a9ca2.  v0:= temp @kind object;
  #L3a9ca4.  goto L3a9cb2;
  #L3a9ca6.  v0:= v5.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9caa.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L3a9cb0.  v0:= temp @kind object;
  #L3a9cb2.  return v0 @kind object;
}
procedure `int` `l`(`com.airbnb.lottie.parser.moshi.d` v10 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.l:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3a9630.  v0:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9634.  v1:= 0L;
  #L3a9638.  call temp:= `getByte`(v0, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3a963e.  v0:= temp;
  #L3a9640.  v1:= 0I;
  #L3a9642.  v2:= 116I;
  #L3a9646.  if v0 == v2 then goto L3a9692;
  #L3a964a.  v2:= 84I;
  #L3a964e.  if v0 != v2 then goto L3a9654;
  #L3a9652.  goto L3a9692;
  #L3a9654.  v2:= 102I;
  #L3a9658.  if v0 == v2 then goto L3a9686;
  #L3a965c.  v2:= 70I;
  #L3a9660.  if v0 != v2 then goto L3a9666;
  #L3a9664.  goto L3a9686;
  #L3a9666.  v2:= 110I;
  #L3a966a.  if v0 == v2 then goto L3a967a;
  #L3a966e.  v2:= 78I;
  #L3a9672.  if v0 != v2 then goto L3a9678;
  #L3a9676.  goto L3a967a;
  #L3a9678.  return v1;
  #L3a967a.  v0:= 7I;
  #L3a967c.  v2:= "null" @kind object;
  #L3a9680.  v3:= "NULL" @kind object;
  #L3a9684.  goto L3a969c;
  #L3a9686.  v0:= 6I;
  #L3a9688.  v2:= "false" @kind object;
  #L3a968c.  v3:= "FALSE" @kind object;
  #L3a9690.  goto L3a969c;
  #L3a9692.  v0:= 5I;
  #L3a9694.  v2:= "true" @kind object;
  #L3a9698.  v3:= "TRUE" @kind object;
  #L3a969c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a96a2.  v4:= temp;
  #L3a96a4.  v5:= 1I;
  #L3a96a6.  if v5 >= v4 then goto L3a96ee;
  #L3a96aa.  v6:= v10.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a96ae.  v7:= v5 + 1;
  #L3a96b2.  v8:= (`long`) v7 @kind i2l;
  #L3a96b4.  call temp:= `request`(v6, v8) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L3a96ba.  v6:= temp;
  #L3a96bc.  if v6 != 0 then goto L3a96c2;
  #L3a96c0.  return v1;
  #L3a96c2.  v6:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a96c6.  v8:= (`long`) v5 @kind i2l;
  #L3a96c8.  call temp:= `getByte`(v6, v8) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3a96ce.  v6:= temp;
  #L3a96d0.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a96d6.  v8:= temp;
  #L3a96d8.  if v6 == v8 then goto L3a96ea;
  #L3a96dc.  call temp:= `charAt`(v3, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a96e2.  v5:= temp;
  #L3a96e4.  if v6 == v5 then goto L3a96ea;
  #L3a96e8.  return v1;
  #L3a96ea.  v5:= v7;
  #L3a96ec.  goto L3a96a6;
  #L3a96ee.  v2:= v10.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a96f2.  v3:= v4 + 1;
  #L3a96f6.  v5:= (`long`) v3 @kind i2l;
  #L3a96f8.  call temp:= `request`(v2, v5) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L3a96fe.  v2:= temp;
  #L3a9700.  if v2 == 0 then goto L3a9720;
  #L3a9704.  v2:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9708.  v5:= (`long`) v4 @kind i2l;
  #L3a970a.  call temp:= `getByte`(v2, v5) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3a9710.  v2:= temp;
  #L3a9712.  call temp:= `h`(v10, v2) @signature `Lcom/airbnb/lottie/parser/moshi/d;.h:(I)Z` @kind direct;
  #L3a9718.  v2:= temp;
  #L3a971a.  if v2 == 0 then goto L3a9720;
  #L3a971e.  return v1;
  #L3a9720.  v1:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9724.  v2:= (`long`) v4 @kind i2l;
  #L3a9726.  call `skip`(v1, v2) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L3a972c.  v10.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L3a9730.  return v0;
}
procedure `int` `m`(`com.airbnb.lottie.parser.moshi.d` v16 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.m:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3a9744.  v0:= v16 @kind object;
  #L3a9748.  v1:= 0L;
  #L3a974c.  v3:= 1I;
  #L3a974e.  v4:= 0I;
  #L3a9750.  v8:= v1 @kind wide;
  #L3a9752.  v5:= 0I;
  #L3a9754.  v6:= 0I;
  #L3a9756.  v7:= 1I;
  #L3a9758.  v10:= 0I;
  #L3a975a.  v11:= v0.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a975e.  v12:= v5 + 1;
  #L3a9762.  v13:= (`long`) v12 @kind i2l;
  #L3a9764.  call temp:= `request`(v11, v13) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L3a976a.  v11:= temp;
  #L3a976c.  v15:= 2I;
  #L3a976e.  if v11 != 0 then goto L3a9776;
  #L3a9772.  goto L3a9856;
  #L3a9776.  v11:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a977a.  v13:= (`long`) v5 @kind i2l;
  #L3a977c.  call temp:= `getByte`(v11, v13) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3a9782.  v11:= temp;
  #L3a9784.  v13:= 43I;
  #L3a9788.  v14:= 5I;
  #L3a978a.  if v11 == v13 then goto L3a98f6;
  #L3a978e.  v13:= 69I;
  #L3a9792.  if v11 == v13 then goto L3a98e4;
  #L3a9796.  v13:= 101I;
  #L3a979a.  if v11 == v13 then goto L3a98e4;
  #L3a979e.  v13:= 45I;
  #L3a97a2.  if v11 == v13 then goto L3a98d0;
  #L3a97a6.  v13:= 46I;
  #L3a97aa.  if v11 == v13 then goto L3a98c4;
  #L3a97ae.  v13:= 48I;
  #L3a97b2.  if v11 < v13 then goto L3a984a;
  #L3a97b6.  v13:= 57I;
  #L3a97ba.  if v11 <= v13 then goto L3a97c0;
  #L3a97be.  goto L3a984a;
  #L3a97c0.  if v6 == v3 then goto L3a983c;
  #L3a97c4.  if v6 != 0 then goto L3a97ca;
  #L3a97c8.  goto L3a983c;
  #L3a97ca.  if v6 != v15 then goto L3a9814;
  #L3a97ce.  v5:= lcmp(v8, v1);
  #L3a97d2.  if v5 != 0 then goto L3a97d8;
  #L3a97d6.  return v4;
  #L3a97d8.  v13:= 10L;
  #L3a97dc.  v13:= v13 * v8 @kind long;
  #L3a97e0.  v11:= v11 + -48;
  #L3a97e4.  v3:= (`long`) v11 @kind i2l;
  #L3a97e6.  v13:= v13 - v3 @kind long;
  #L3a97e8.  v3:= -922337203685477580L;
  #L3a97f2.  v5:= lcmp(v8, v3);
  #L3a97f6.  if v5 > 0 then goto L3a980c;
  #L3a97fa.  if v5 != 0 then goto L3a9808;
  #L3a97fe.  v3:= lcmp(v13, v8);
  #L3a9802.  if v3 >= 0 then goto L3a9808;
  #L3a9806.  goto L3a980c;
  #L3a9808.  v3:= 0I;
  #L3a980a.  goto L3a980e;
  #L3a980c.  v3:= 1I;
  #L3a980e.  v7:= v7 ^& v3 @kind int;
  #L3a9810.  v8:= v13 @kind wide;
  #L3a9812.  goto L3a982e;
  #L3a9814.  v3:= 3I;
  #L3a9816.  if v6 != v3 then goto L3a9822;
  #L3a981a.  v4:= 0I;
  #L3a981c.  v6:= 4I;
  #L3a981e.  goto L3a98fe;
  #L3a9822.  if v6 == v14 then goto L3a9834;
  #L3a9826.  v3:= 6I;
  #L3a9828.  if v6 != v3 then goto L3a982e;
  #L3a982c.  goto L3a9834;
  #L3a982e.  v4:= 0I;
  #L3a9830.  goto L3a98fe;
  #L3a9834.  v4:= 0I;
  #L3a9836.  v6:= 7I;
  #L3a9838.  goto L3a98fe;
  #L3a983c.  v11:= v11 + -48;
  #L3a9840.  v3:= -v11 @kind int;
  #L3a9842.  v8:= (`long`) v3 @kind i2l;
  #L3a9844.  v4:= 0I;
  #L3a9846.  v6:= 2I;
  #L3a9848.  goto L3a98fe;
  #L3a984a.  call temp:= `h`(v0, v11) @signature `Lcom/airbnb/lottie/parser/moshi/d;.h:(I)Z` @kind direct;
  #L3a9850.  v3:= temp;
  #L3a9852.  if v3 != 0 then goto L3a98c0;
  #L3a9856.  if v6 != v15 then goto L3a989c;
  #L3a985a.  if v7 == 0 then goto L3a989c;
  #L3a985e.  v3:= -9223372036854775808L;
  #L3a9862.  v7:= lcmp(v8, v3);
  #L3a9866.  if v7 != 0 then goto L3a986e;
  #L3a986a.  if v10 == 0 then goto L3a989c;
  #L3a986e.  v3:= lcmp(v8, v1);
  #L3a9872.  if v3 != 0 then goto L3a987a;
  #L3a9876.  if v10 != 0 then goto L3a989c;
  #L3a987a.  if v10 == 0 then goto L3a9880;
  #L3a987e.  goto L3a9882;
  #L3a9880.  v8:= -v8 @kind long;
  #L3a9882.  v0.`com.airbnb.lottie.parser.moshi.d.k` @type ^`long` := v8 @kind wide;
  #L3a9886.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a988a.  v2:= (`long`) v5 @kind i2l;
  #L3a988c.  call `skip`(v1, v2) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L3a9892.  v1:= 16I;
  #L3a9896.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a989a.  return v1;
  #L3a989c.  if v6 == v15 then goto L3a98b2;
  #L3a98a0.  v1:= 4I;
  #L3a98a2.  if v6 == v1 then goto L3a98b2;
  #L3a98a6.  v1:= 7I;
  #L3a98a8.  if v6 != v1 then goto L3a98ae;
  #L3a98ac.  goto L3a98b2;
  #L3a98ae.  v4:= 0I;
  #L3a98b0.  return v4;
  #L3a98b2.  v0.`com.airbnb.lottie.parser.moshi.d.l` @type ^`int` := v5;
  #L3a98b6.  v1:= 17I;
  #L3a98ba.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a98be.  return v1;
  #L3a98c0.  v4:= 0I;
  #L3a98c2.  return v4;
  #L3a98c4.  v3:= 3I;
  #L3a98c6.  if v6 != v15 then goto L3a98ce;
  #L3a98ca.  v6:= 3I;
  #L3a98cc.  goto L3a98fe;
  #L3a98ce.  return v4;
  #L3a98d0.  v3:= 6I;
  #L3a98d2.  if v6 != 0 then goto L3a98dc;
  #L3a98d6.  v6:= 1I;
  #L3a98d8.  v10:= 1I;
  #L3a98da.  goto L3a98fe;
  #L3a98dc.  if v6 != v14 then goto L3a98e2;
  #L3a98e0.  goto L3a98fc;
  #L3a98e2.  return v4;
  #L3a98e4.  if v6 == v15 then goto L3a98f2;
  #L3a98e8.  v3:= 4I;
  #L3a98ea.  if v6 != v3 then goto L3a98f0;
  #L3a98ee.  goto L3a98f2;
  #L3a98f0.  return v4;
  #L3a98f2.  v6:= 5I;
  #L3a98f4.  goto L3a98fe;
  #L3a98f6.  v3:= 6I;
  #L3a98f8.  if v6 != v14 then goto L3a9906;
  #L3a98fc.  v6:= 6I;
  #L3a98fe.  v5:= v12;
  #L3a9900.  v3:= 1I;
  #L3a9902.  goto L3a975a;
  #L3a9906.  return v4;
}
procedure `char` `n`(`com.airbnb.lottie.parser.moshi.d` v9 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.n:()C` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3a8a88.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a8a8c.  v1:= 1L;
  #L3a8a90.  call temp:= `request`(v0, v1) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L3a8a96.  v0:= temp;
  #L3a8a98.  if v0 == 0 then goto L3a8c4e;
  #L3a8a9c.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a8aa0.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L3a8aa6.  v0:= temp;
  #L3a8aa8.  v1:= 10I;
  #L3a8aac.  if v0 == v1 then goto L3a8c4a;
  #L3a8ab0.  v2:= 34I;
  #L3a8ab4.  if v0 == v2 then goto L3a8c4a;
  #L3a8ab8.  v2:= 39I;
  #L3a8abc.  if v0 == v2 then goto L3a8c4a;
  #L3a8ac0.  v2:= 47I;
  #L3a8ac4.  if v0 == v2 then goto L3a8c4a;
  #L3a8ac8.  v2:= 92I;
  #L3a8acc.  if v0 == v2 then goto L3a8c4a;
  #L3a8ad0.  v2:= 98I;
  #L3a8ad4.  if v0 == v2 then goto L3a8c44;
  #L3a8ad8.  v2:= 102I;
  #L3a8adc.  if v0 == v2 then goto L3a8c3e;
  #L3a8ae0.  v3:= 110I;
  #L3a8ae4.  if v0 == v3 then goto L3a8c3c;
  #L3a8ae8.  v3:= 114I;
  #L3a8aec.  if v0 == v3 then goto L3a8c36;
  #L3a8af0.  v3:= 116I;
  #L3a8af4.  if v0 == v3 then goto L3a8c30;
  #L3a8af8.  v3:= 117I;
  #L3a8afc.  if v0 == v3 then goto L3a8b3a;
  #L3a8b00.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`boolean` @kind boolean;
  #L3a8b04.  if v1 == 0 then goto L3a8b0c;
  #L3a8b08.  v0:= (`char`) v0 @kind i2c;
  #L3a8b0a.  return v0;
  #L3a8b0c.  v1:= new `java.lang.StringBuilder`;
  #L3a8b10.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8b16.  v2:= "Invalid escape sequence: \\" @kind object;
  #L3a8b1a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8b20.  v0:= (`char`) v0 @kind i2c;
  #L3a8b22.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8b28.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8b2e.  v0:= temp @kind object;
  #L3a8b30.  call temp:= `d`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a8b36.  v0:= temp @kind object;
  #L3a8b38.  throw v0;
  #L3a8b3a.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a8b3e.  v3:= 4L;
  #L3a8b42.  call temp:= `request`(v0, v3) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L3a8b48.  v0:= temp;
  #L3a8b4a.  if v0 == 0 then goto L3a8bfa;
  #L3a8b4e.  v0:= 0I;
  #L3a8b50.  v5:= 0I;
  #L3a8b52.  v6:= 4I;
  #L3a8b54.  if v0 >= v6 then goto L3a8bee;
  #L3a8b58.  v6:= v9.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a8b5c.  v7:= (`long`) v0 @kind i2l;
  #L3a8b5e.  call temp:= `getByte`(v6, v7) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3a8b64.  v6:= temp;
  #L3a8b66.  v5:= v5 ^< 4;
  #L3a8b6a.  v5:= (`char`) v5 @kind i2c;
  #L3a8b6c.  v7:= 48I;
  #L3a8b70.  if v6 < v7 then goto L3a8b86;
  #L3a8b74.  v7:= 57I;
  #L3a8b78.  if v6 > v7 then goto L3a8b86;
  #L3a8b7c.  v6:= v6 + -48;
  #L3a8b80.  v5:= v5 + v6 @kind int;
  #L3a8b82.  v5:= (`char`) v5 @kind i2c;
  #L3a8b84.  goto L3a8bb0;
  #L3a8b86.  v7:= 97I;
  #L3a8b8a.  if v6 < v7 then goto L3a8b9a;
  #L3a8b8e.  if v6 > v2 then goto L3a8b9a;
  #L3a8b92.  v6:= v6 + -97;
  #L3a8b96.  v6:= v6 + v1 @kind int;
  #L3a8b98.  goto L3a8b80;
  #L3a8b9a.  v7:= 65I;
  #L3a8b9e.  if v6 < v7 then goto L3a8bb6;
  #L3a8ba2.  v7:= 70I;
  #L3a8ba6.  if v6 > v7 then goto L3a8bb6;
  #L3a8baa.  v6:= v6 + -65;
  #L3a8bae.  goto L3a8b96;
  #L3a8bb0.  v0:= v0 + 1;
  #L3a8bb4.  goto L3a8b52;
  #L3a8bb6.  v0:= new `java.lang.StringBuilder`;
  #L3a8bba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8bc0.  v1:= "\\u" @kind object;
  #L3a8bc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8bca.  v1:= v9.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a8bce.  call temp:= `readUtf8`(v1, v3) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L3a8bd4.  v1:= temp @kind object;
  #L3a8bd6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8bdc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8be2.  v0:= temp @kind object;
  #L3a8be4.  call temp:= `d`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a8bea.  v0:= temp @kind object;
  #L3a8bec.  throw v0;
  #L3a8bee.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a8bf2.  call `skip`(v0, v3) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L3a8bf8.  return v5;
  #L3a8bfa.  v0:= new `java.io.EOFException`;
  #L3a8bfe.  v1:= new `java.lang.StringBuilder`;
  #L3a8c02.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8c08.  v2:= "Unterminated escape sequence at path " @kind object;
  #L3a8c0c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8c12.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a8c18.  v2:= temp @kind object;
  #L3a8c1a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8c20.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8c26.  v1:= temp @kind object;
  #L3a8c28.  call `<init>`(v0, v1) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8c2e.  throw v0;
  #L3a8c30.  v0:= 9I;
  #L3a8c34.  return v0;
  #L3a8c36.  v0:= 13I;
  #L3a8c3a.  return v0;
  #L3a8c3c.  return v1;
  #L3a8c3e.  v0:= 12I;
  #L3a8c42.  return v0;
  #L3a8c44.  v0:= 8I;
  #L3a8c48.  return v0;
  #L3a8c4a.  v0:= (`char`) v0 @kind i2c;
  #L3a8c4c.  return v0;
  #L3a8c4e.  v0:= "Unterminated escape sequence" @kind object;
  #L3a8c52.  call temp:= `d`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3a8c58.  v0:= temp @kind object;
  #L3a8c5a.  throw v0;
}
procedure `void` `o`(`com.airbnb.lottie.parser.moshi.d` v6 @kind this, `okio.ByteString` v7 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/d;.o:(Lokio/ByteString;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3aa190.  v0:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3aa194.  call temp:= `indexOfElement`(v0, v7) @signature `Lokio/BufferedSource;.indexOfElement:(Lokio/ByteString;)J` @kind interface;
  #L3aa19a.  v0:= temp @kind wide;
  #L3aa19c.  v2:= -1L;
  #L3aa1a0.  v4:= lcmp(v0, v2);
  #L3aa1a4.  if v4 == 0 then goto L3aa1e2;
  #L3aa1a8.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3aa1ac.  call temp:= `getByte`(v2, v0) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L3aa1b2.  v2:= temp;
  #L3aa1b4.  v3:= 92I;
  #L3aa1b8.  v4:= 1L;
  #L3aa1bc.  if v2 != v3 then goto L3aa1d4;
  #L3aa1c0.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3aa1c4.  v0:= v0 + v4 @kind long;
  #L3aa1c6.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L3aa1cc.  call temp:= `n`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.n:()C` @kind direct;
  #L3aa1d2.  goto L3aa190;
  #L3aa1d4.  v7:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3aa1d8.  v0:= v0 + v4 @kind long;
  #L3aa1da.  call `skip`(v7, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L3aa1e0.  return @kind void;
  #L3aa1e2.  v7:= "Unterminated string" @kind object;
  #L3aa1e6.  call temp:= `d`(v6, v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L3aa1ec.  v7:= temp @kind object;
  #L3aa1ee.  throw v7;
}
procedure `boolean` `p`(`com.airbnb.lottie.parser.moshi.d` v7 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.p:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a8a30.  v0:= v7.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a8a34.  v1:= `@@com.airbnb.lottie.parser.moshi.d.r` @type ^`okio.ByteString` @kind object;
  #L3a8a38.  call temp:= `indexOf`(v0, v1) @signature `Lokio/BufferedSource;.indexOf:(Lokio/ByteString;)J` @kind interface;
  #L3a8a3e.  v2:= temp @kind wide;
  #L3a8a40.  v4:= -1L;
  #L3a8a44.  v0:= lcmp(v2, v4);
  #L3a8a48.  if v0 == 0 then goto L3a8a50;
  #L3a8a4c.  v0:= 1I;
  #L3a8a4e.  goto L3a8a52;
  #L3a8a50.  v0:= 0I;
  #L3a8a52.  v4:= v7.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a8a56.  if v0 == 0 then goto L3a8a68;
  #L3a8a5a.  call temp:= `size`(v1) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L3a8a60.  v1:= temp;
  #L3a8a62.  v5:= (`long`) v1 @kind i2l;
  #L3a8a64.  v2:= v2 + v5 @kind long;
  #L3a8a66.  goto L3a8a70;
  #L3a8a68.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L3a8a6e.  v2:= temp @kind wide;
  #L3a8a70.  call `skip`(v4, v2) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L3a8a76.  return v0;
}
procedure `void` `q`(`com.airbnb.lottie.parser.moshi.d` v6 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3aa200.  v0:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3aa204.  v1:= `@@com.airbnb.lottie.parser.moshi.d.q` @type ^`okio.ByteString` @kind object;
  #L3aa208.  call temp:= `indexOfElement`(v0, v1) @signature `Lokio/BufferedSource;.indexOfElement:(Lokio/ByteString;)J` @kind interface;
  #L3aa20e.  v0:= temp @kind wide;
  #L3aa210.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3aa214.  v3:= -1L;
  #L3aa218.  v5:= lcmp(v0, v3);
  #L3aa21c.  if v5 == 0 then goto L3aa228;
  #L3aa220.  v3:= 1L;
  #L3aa224.  v0:= v0 + v3 @kind long;
  #L3aa226.  goto L3aa230;
  #L3aa228.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L3aa22e.  v0:= temp @kind wide;
  #L3aa230.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L3aa236.  return @kind void;
}
procedure `void` `r`(`com.airbnb.lottie.parser.moshi.d` v6 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.r:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3aa248.  v0:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3aa24c.  v1:= `@@com.airbnb.lottie.parser.moshi.d.p` @type ^`okio.ByteString` @kind object;
  #L3aa250.  call temp:= `indexOfElement`(v0, v1) @signature `Lokio/BufferedSource;.indexOfElement:(Lokio/ByteString;)J` @kind interface;
  #L3aa256.  v0:= temp @kind wide;
  #L3aa258.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3aa25c.  v3:= -1L;
  #L3aa260.  v5:= lcmp(v0, v3);
  #L3aa264.  if v5 == 0 then goto L3aa26a;
  #L3aa268.  goto L3aa272;
  #L3aa26a.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L3aa270.  v0:= temp @kind wide;
  #L3aa272.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L3aa278.  return @kind void;
}
procedure `void` `beginArray`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.beginArray:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a9dac.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a9db0.  if v0 != 0 then goto L3a9dbc;
  #L3a9db4.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a9dba.  v0:= temp;
  #L3a9dbc.  v1:= 3I;
  #L3a9dbe.  if v0 != v1 then goto L3a9de0;
  #L3a9dc2.  v0:= 1I;
  #L3a9dc4.  call `b`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @kind virtual;
  #L3a9dca.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a9dce.  v2:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a9dd2.  v2:= v2 - v0 @kind int;
  #L3a9dd4.  v0:= 0I;
  #L3a9dd6.  v1[v2]:= v0;
  #L3a9dda.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L3a9dde.  return @kind void;
  #L3a9de0.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a9de4.  v1:= new `java.lang.StringBuilder`;
  #L3a9de8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9dee.  v2:= "Expected BEGIN_ARRAY but was " @kind object;
  #L3a9df2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9df8.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a9dfe.  v2:= temp @kind object;
  #L3a9e00.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9e06.  v2:= " at path " @kind object;
  #L3a9e0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9e10.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a9e16.  v2:= temp @kind object;
  #L3a9e18.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9e1e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9e24.  v1:= temp @kind object;
  #L3a9e26.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9e2c.  throw v0;
}
procedure `void` `beginObject`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.beginObject:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a9e40.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a9e44.  if v0 != 0 then goto L3a9e50;
  #L3a9e48.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a9e4e.  v0:= temp;
  #L3a9e50.  v1:= 1I;
  #L3a9e52.  if v0 != v1 then goto L3a9e66;
  #L3a9e56.  v0:= 3I;
  #L3a9e58.  call `b`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @kind virtual;
  #L3a9e5e.  v0:= 0I;
  #L3a9e60.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L3a9e64.  return @kind void;
  #L3a9e66.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a9e6a.  v1:= new `java.lang.StringBuilder`;
  #L3a9e6e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9e74.  v2:= "Expected BEGIN_OBJECT but was " @kind object;
  #L3a9e78.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9e7e.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a9e84.  v2:= temp @kind object;
  #L3a9e86.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9e8c.  v2:= " at path " @kind object;
  #L3a9e90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9e96.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a9e9c.  v2:= temp @kind object;
  #L3a9e9e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9ea4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9eaa.  v1:= temp @kind object;
  #L3a9eac.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9eb2.  throw v0;
}
procedure `void` `close`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a9eec.  v0:= 0I;
  #L3a9eee.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L3a9ef2.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`int`[] @kind object;
  #L3a9ef6.  v2:= 8I;
  #L3a9efa.  v1[v0]:= v2;
  #L3a9efe.  v0:= 1I;
  #L3a9f00.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v0;
  #L3a9f04.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9f08.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L3a9f0e.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a9f12.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L3a9f18.  return @kind void;
}
procedure `void` `endArray`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.endArray:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a9f2c.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a9f30.  if v0 != 0 then goto L3a9f3c;
  #L3a9f34.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a9f3a.  v0:= temp;
  #L3a9f3c.  v1:= 4I;
  #L3a9f3e.  if v0 != v1 then goto L3a9f6a;
  #L3a9f42.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a9f46.  v0:= v0 + -1;
  #L3a9f4a.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v0;
  #L3a9f4e.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a9f52.  v0:= v0 + -1;
  #L3a9f56.  v2:= v1[v0];
  #L3a9f5a.  v2:= v2 + 1;
  #L3a9f5e.  v1[v0]:= v2;
  #L3a9f62.  v0:= 0I;
  #L3a9f64.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L3a9f68.  return @kind void;
  #L3a9f6a.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a9f6e.  v1:= new `java.lang.StringBuilder`;
  #L3a9f72.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9f78.  v2:= "Expected END_ARRAY but was " @kind object;
  #L3a9f7c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9f82.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a9f88.  v2:= temp @kind object;
  #L3a9f8a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9f90.  v2:= " at path " @kind object;
  #L3a9f94.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9f9a.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a9fa0.  v2:= temp @kind object;
  #L3a9fa2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9fa8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9fae.  v1:= temp @kind object;
  #L3a9fb0.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9fb6.  throw v0;
}
procedure `void` `endObject`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.endObject:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a9fc8.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a9fcc.  if v0 != 0 then goto L3a9fd8;
  #L3a9fd0.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a9fd6.  v0:= temp;
  #L3a9fd8.  v1:= 2I;
  #L3a9fda.  if v0 != v1 then goto L3aa010;
  #L3a9fde.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a9fe2.  v0:= v0 + -1;
  #L3a9fe6.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v0;
  #L3a9fea.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L3a9fee.  v2:= 0I;
  #L3a9ff0.  v1[v0]:= v2 @kind object;
  #L3a9ff4.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a9ff8.  v0:= v0 + -1;
  #L3a9ffc.  v2:= v1[v0];
  #L3aa000.  v2:= v2 + 1;
  #L3aa004.  v1[v0]:= v2;
  #L3aa008.  v0:= 0I;
  #L3aa00a.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L3aa00e.  return @kind void;
  #L3aa010.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3aa014.  v1:= new `java.lang.StringBuilder`;
  #L3aa018.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aa01e.  v2:= "Expected END_OBJECT but was " @kind object;
  #L3aa022.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa028.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3aa02e.  v2:= temp @kind object;
  #L3aa030.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa036.  v2:= " at path " @kind object;
  #L3aa03a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa040.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3aa046.  v2:= temp @kind object;
  #L3aa048.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa04e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa054.  v1:= temp @kind object;
  #L3aa056.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa05c.  throw v0;
}
procedure `boolean` `hasNext`(`com.airbnb.lottie.parser.moshi.d` v2 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a88a0.  v0:= v2.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a88a4.  if v0 != 0 then goto L3a88b0;
  #L3a88a8.  call temp:= `f`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a88ae.  v0:= temp;
  #L3a88b0.  v1:= 2I;
  #L3a88b2.  if v0 == v1 then goto L3a88c8;
  #L3a88b6.  v1:= 4I;
  #L3a88b8.  if v0 == v1 then goto L3a88c8;
  #L3a88bc.  v1:= 18I;
  #L3a88c0.  if v0 == v1 then goto L3a88c8;
  #L3a88c4.  v0:= 1I;
  #L3a88c6.  goto L3a88ca;
  #L3a88c8.  v0:= 0I;
  #L3a88ca.  return v0;
}
procedure `boolean` `nextBoolean`(`com.airbnb.lottie.parser.moshi.d` v5 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextBoolean:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a897c.  v0:= v5.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a8980.  if v0 != 0 then goto L3a898c;
  #L3a8984.  call temp:= `f`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a898a.  v0:= temp;
  #L3a898c.  v1:= 5I;
  #L3a898e.  v2:= 0I;
  #L3a8990.  v3:= 1I;
  #L3a8992.  if v0 != v1 then goto L3a89b0;
  #L3a8996.  v5.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L3a899a.  v0:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a899e.  v1:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a89a2.  v1:= v1 - v3 @kind int;
  #L3a89a4.  v2:= v0[v1];
  #L3a89a8.  v2:= v2 + v3 @kind int;
  #L3a89aa.  v0[v1]:= v2;
  #L3a89ae.  return v3;
  #L3a89b0.  v1:= 6I;
  #L3a89b2.  if v0 != v1 then goto L3a89d0;
  #L3a89b6.  v5.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L3a89ba.  v0:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a89be.  v1:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a89c2.  v1:= v1 - v3 @kind int;
  #L3a89c4.  v4:= v0[v1];
  #L3a89c8.  v4:= v4 + v3 @kind int;
  #L3a89ca.  v0[v1]:= v4;
  #L3a89ce.  return v2;
  #L3a89d0.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a89d4.  v1:= new `java.lang.StringBuilder`;
  #L3a89d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a89de.  v2:= "Expected a boolean but was " @kind object;
  #L3a89e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a89e8.  call temp:= `peek`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a89ee.  v2:= temp @kind object;
  #L3a89f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a89f6.  v2:= " at path " @kind object;
  #L3a89fa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8a00.  call temp:= `getPath`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a8a06.  v2:= temp @kind object;
  #L3a8a08.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8a0e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8a14.  v1:= temp @kind object;
  #L3a8a16.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8a1c.  throw v0;
}
procedure `double` `nextDouble`(`com.airbnb.lottie.parser.moshi.d` v8 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a8d2c.  v0:= v8.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a8d30.  if v0 != 0 then goto L3a8d3c;
  #L3a8d34.  call temp:= `f`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a8d3a.  v0:= temp;
  #L3a8d3c.  v1:= 16I;
  #L3a8d40.  v2:= 0I;
  #L3a8d42.  if v0 != v1 then goto L3a8d6a;
  #L3a8d46.  v8.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L3a8d4a.  v0:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a8d4e.  v1:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a8d52.  v1:= v1 + -1;
  #L3a8d56.  v2:= v0[v1];
  #L3a8d5a.  v2:= v2 + 1;
  #L3a8d5e.  v0[v1]:= v2;
  #L3a8d62.  v0:= v8.`com.airbnb.lottie.parser.moshi.d.k` @type ^`long` @kind wide;
  #L3a8d66.  v0:= (`double`) v0 @kind l2d;
  #L3a8d68.  return v0 @kind wide;
  #L3a8d6a.  v1:= 17I;
  #L3a8d6e.  v3:= "Expected a double but was " @kind object;
  #L3a8d72.  v4:= 11I;
  #L3a8d76.  v5:= " at path " @kind object;
  #L3a8d7a.  if v0 != v1 then goto L3a8d96;
  #L3a8d7e.  v0:= v8.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a8d82.  v1:= v8.`com.airbnb.lottie.parser.moshi.d.l` @type ^`int`;
  #L3a8d86.  v6:= (`long`) v1 @kind i2l;
  #L3a8d88.  call temp:= `readUtf8`(v0, v6) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L3a8d8e.  v0:= temp @kind object;
  #L3a8d90.  v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L3a8d94.  goto L3a8de4;
  #L3a8d96.  v1:= 9I;
  #L3a8d9a.  if v0 != v1 then goto L3a8db0;
  #L3a8d9e.  v0:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L3a8da2.  call temp:= `j`(v8, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L3a8da8.  v0:= temp @kind object;
  #L3a8daa.  v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L3a8dae.  goto L3a8de4;
  #L3a8db0.  v1:= 8I;
  #L3a8db4.  if v0 != v1 then goto L3a8dca;
  #L3a8db8.  v0:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L3a8dbc.  call temp:= `j`(v8, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L3a8dc2.  v0:= temp @kind object;
  #L3a8dc4.  v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L3a8dc8.  goto L3a8de4;
  #L3a8dca.  v1:= 10I;
  #L3a8dce.  if v0 != v1 then goto L3a8de0;
  #L3a8dd2.  call temp:= `k`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/d;.k:()Ljava/lang/String;` @kind direct;
  #L3a8dd8.  v0:= temp @kind object;
  #L3a8dda.  v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L3a8dde.  goto L3a8de4;
  #L3a8de0.  if v0 != v4 then goto L3a8ebe;
  #L3a8de4.  v8.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v4;
  #L3a8de8.  v0:= v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L3a8dec.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L3a8df2.  v0:= temp @kind wide;
  #L3a8df4.  v3:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`boolean` @kind boolean;
  #L3a8df8.  if v3 != 0 then goto L3a8e58;
  #L3a8dfc.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3a8e02.  v3:= temp;
  #L3a8e04.  if v3 != 0 then goto L3a8e16;
  #L3a8e08.  call temp:= `isInfinite`(v0) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L3a8e0e.  v3:= temp;
  #L3a8e10.  if v3 != 0 then goto L3a8e16;
  #L3a8e14.  goto L3a8e58;
  #L3a8e16.  v2:= new `com.airbnb.lottie.parser.moshi.b`;
  #L3a8e1a.  v3:= new `java.lang.StringBuilder`;
  #L3a8e1e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8e24.  v4:= "JSON forbids NaN and infinities: " @kind object;
  #L3a8e28.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8e2e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8e34.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8e3a.  call temp:= `getPath`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a8e40.  v0:= temp @kind object;
  #L3a8e42.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8e48.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8e4e.  v0:= temp @kind object;
  #L3a8e50.  call `<init>`(v2, v0) @signature `Lcom/airbnb/lottie/parser/moshi/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8e56.  throw v2;
  #L3a8e58.  v3:= 0I;
  #L3a8e5a.  v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v3 @kind object;
  #L3a8e5e.  v8.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L3a8e62.  v2:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a8e66.  v3:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a8e6a.  v3:= v3 + -1;
  #L3a8e6e.  v4:= v2[v3];
  #L3a8e72.  v4:= v4 + 1;
  #L3a8e76.  v2[v3]:= v4;
  #L3a8e7a.  return v0 @kind wide;
  #L3a8e7c.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a8e80.  v1:= new `java.lang.StringBuilder`;
  #L3a8e84.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8e8a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8e90.  v2:= v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L3a8e94.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8e9a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8ea0.  call temp:= `getPath`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a8ea6.  v2:= temp @kind object;
  #L3a8ea8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8eae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8eb4.  v1:= temp @kind object;
  #L3a8eb6.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8ebc.  throw v0;
  #L3a8ebe.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a8ec2.  v1:= new `java.lang.StringBuilder`;
  #L3a8ec6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8ecc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8ed2.  call temp:= `peek`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a8ed8.  v2:= temp @kind object;
  #L3a8eda.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8ee0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8ee6.  call temp:= `getPath`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a8eec.  v2:= temp @kind object;
  #L3a8eee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8ef4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8efa.  v1:= temp @kind object;
  #L3a8efc.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8f02.  throw v0;
  catch `java.lang.NumberFormatException` @[L3a8de8..L3a8df4] goto L3a8e7c;
}
procedure `int` `nextInt`(`com.airbnb.lottie.parser.moshi.d` v9 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3a92b8.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a92bc.  if v0 != 0 then goto L3a92c8;
  #L3a92c0.  call temp:= `f`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a92c6.  v0:= temp;
  #L3a92c8.  v1:= 16I;
  #L3a92cc.  v2:= 0I;
  #L3a92ce.  v3:= " at path " @kind object;
  #L3a92d2.  v4:= "Expected an int but was " @kind object;
  #L3a92d6.  if v0 != v1 then goto L3a934a;
  #L3a92da.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.k` @type ^`long` @kind wide;
  #L3a92de.  v5:= (`int`) v0 @kind l2i;
  #L3a92e0.  v6:= (`long`) v5 @kind i2l;
  #L3a92e2.  v8:= lcmp(v0, v6);
  #L3a92e6.  if v8 != 0 then goto L3a9308;
  #L3a92ea.  v9.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L3a92ee.  v0:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a92f2.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a92f6.  v1:= v1 + -1;
  #L3a92fa.  v2:= v0[v1];
  #L3a92fe.  v2:= v2 + 1;
  #L3a9302.  v0[v1]:= v2;
  #L3a9306.  return v5;
  #L3a9308.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a930c.  v1:= new `java.lang.StringBuilder`;
  #L3a9310.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9316.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a931c.  v4:= v9.`com.airbnb.lottie.parser.moshi.d.k` @type ^`long` @kind wide;
  #L3a9320.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9326.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a932c.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a9332.  v2:= temp @kind object;
  #L3a9334.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a933a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9340.  v1:= temp @kind object;
  #L3a9342.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9348.  throw v0;
  #L3a934a.  v1:= 17I;
  #L3a934e.  v5:= 11I;
  #L3a9352.  if v0 != v1 then goto L3a936e;
  #L3a9356.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a935a.  v1:= v9.`com.airbnb.lottie.parser.moshi.d.l` @type ^`int`;
  #L3a935e.  v6:= (`long`) v1 @kind i2l;
  #L3a9360.  call temp:= `readUtf8`(v0, v6) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L3a9366.  v0:= temp @kind object;
  #L3a9368.  v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L3a936c.  goto L3a9414;
  #L3a936e.  v1:= 9I;
  #L3a9372.  if v0 == v1 then goto L3a93cc;
  #L3a9376.  v6:= 8I;
  #L3a937a.  if v0 != v6 then goto L3a9380;
  #L3a937e.  goto L3a93cc;
  #L3a9380.  if v0 != v5 then goto L3a9386;
  #L3a9384.  goto L3a9414;
  #L3a9386.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a938a.  v1:= new `java.lang.StringBuilder`;
  #L3a938e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9394.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a939a.  call temp:= `peek`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a93a0.  v2:= temp @kind object;
  #L3a93a2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a93a8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a93ae.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a93b4.  v2:= temp @kind object;
  #L3a93b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a93bc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a93c2.  v1:= temp @kind object;
  #L3a93c4.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a93ca.  throw v0;
  #L3a93cc.  if v0 != v1 then goto L3a93de;
  #L3a93d0.  v0:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L3a93d4.  call temp:= `j`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L3a93da.  v0:= temp @kind object;
  #L3a93dc.  goto L3a93ea;
  #L3a93de.  v0:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L3a93e2.  call temp:= `j`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L3a93e8.  v0:= temp @kind object;
  #L3a93ea.  v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L3a93ee.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3a93f4.  v0:= temp;
  #L3a93f6.  v9.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L3a93fa.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a93fe.  v6:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a9402.  v6:= v6 + -1;
  #L3a9406.  v7:= v1[v6];
  #L3a940a.  v7:= v7 + 1;
  #L3a940e.  v1[v6]:= v7;
  #L3a9412.  return v0;
  #L3a9414.  v9.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v5;
  #L3a9418.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L3a941c.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L3a9422.  v0:= temp @kind wide;
  #L3a9424.  v5:= (`int`) v0 @kind d2i;
  #L3a9426.  v6:= (`double`) v5 @kind i2d;
  #L3a9428.  v8:= dcmpl(v6, v0);
  #L3a942c.  if v8 != 0 then goto L3a9454;
  #L3a9430.  v0:= 0I;
  #L3a9432.  v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L3a9436.  v9.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L3a943a.  v0:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a943e.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a9442.  v1:= v1 + -1;
  #L3a9446.  v2:= v0[v1];
  #L3a944a.  v2:= v2 + 1;
  #L3a944e.  v0[v1]:= v2;
  #L3a9452.  return v5;
  #L3a9454.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a9458.  v1:= new `java.lang.StringBuilder`;
  #L3a945c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9462.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9468.  v2:= v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L3a946c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9472.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9478.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a947e.  v2:= temp @kind object;
  #L3a9480.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9486.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a948c.  v1:= temp @kind object;
  #L3a948e.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9494.  throw v0;
  #L3a9496.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a949a.  v1:= new `java.lang.StringBuilder`;
  #L3a949e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a94a4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a94aa.  v2:= v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L3a94ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a94b4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a94ba.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a94c0.  v2:= temp @kind object;
  #L3a94c2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a94c8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a94ce.  v1:= temp @kind object;
  #L3a94d0.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a94d6.  throw v0;
  catch `java.lang.NumberFormatException` @[L3a93ee..L3a9412] goto L3a9414;
  catch `java.lang.NumberFormatException` @[L3a9418..L3a9424] goto L3a9496;
}
procedure `java.lang.String` `nextName`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a99d4.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a99d8.  if v0 != 0 then goto L3a99e4;
  #L3a99dc.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a99e2.  v0:= temp;
  #L3a99e4.  v1:= 14I;
  #L3a99e8.  if v0 != v1 then goto L3a99f6;
  #L3a99ec.  call temp:= `k`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.k:()Ljava/lang/String;` @kind direct;
  #L3a99f2.  v0:= temp @kind object;
  #L3a99f4.  goto L3a9a2e;
  #L3a99f6.  v1:= 13I;
  #L3a99fa.  if v0 != v1 then goto L3a9a0c;
  #L3a99fe.  v0:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L3a9a02.  call temp:= `j`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L3a9a08.  v0:= temp @kind object;
  #L3a9a0a.  goto L3a9a2e;
  #L3a9a0c.  v1:= 12I;
  #L3a9a10.  if v0 != v1 then goto L3a9a22;
  #L3a9a14.  v0:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L3a9a18.  call temp:= `j`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L3a9a1e.  v0:= temp @kind object;
  #L3a9a20.  goto L3a9a2e;
  #L3a9a22.  v1:= 15I;
  #L3a9a26.  if v0 != v1 then goto L3a9a46;
  #L3a9a2a.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L3a9a2e.  v1:= 0I;
  #L3a9a30.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a9a34.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L3a9a38.  v2:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a9a3c.  v2:= v2 + -1;
  #L3a9a40.  v1[v2]:= v0 @kind object;
  #L3a9a44.  return v0 @kind object;
  #L3a9a46.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a9a4a.  v1:= new `java.lang.StringBuilder`;
  #L3a9a4e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9a54.  v2:= "Expected a name but was " @kind object;
  #L3a9a58.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9a5e.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a9a64.  v2:= temp @kind object;
  #L3a9a66.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9a6c.  v2:= " at path " @kind object;
  #L3a9a70.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9a76.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a9a7c.  v2:= temp @kind object;
  #L3a9a7e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9a84.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9a8a.  v1:= temp @kind object;
  #L3a9a8c.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9a92.  throw v0;
}
procedure `java.lang.String` `nextString`(`com.airbnb.lottie.parser.moshi.d` v4 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a9b6c.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a9b70.  if v0 != 0 then goto L3a9b7c;
  #L3a9b74.  call temp:= `f`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a9b7a.  v0:= temp;
  #L3a9b7c.  v1:= 10I;
  #L3a9b80.  if v0 != v1 then goto L3a9b8e;
  #L3a9b84.  call temp:= `k`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/d;.k:()Ljava/lang/String;` @kind direct;
  #L3a9b8a.  v0:= temp @kind object;
  #L3a9b8c.  goto L3a9bfe;
  #L3a9b8e.  v1:= 9I;
  #L3a9b92.  if v0 != v1 then goto L3a9ba4;
  #L3a9b96.  v0:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L3a9b9a.  call temp:= `j`(v4, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L3a9ba0.  v0:= temp @kind object;
  #L3a9ba2.  goto L3a9bfe;
  #L3a9ba4.  v1:= 8I;
  #L3a9ba8.  if v0 != v1 then goto L3a9bba;
  #L3a9bac.  v0:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L3a9bb0.  call temp:= `j`(v4, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L3a9bb6.  v0:= temp @kind object;
  #L3a9bb8.  goto L3a9bfe;
  #L3a9bba.  v1:= 11I;
  #L3a9bbe.  if v0 != v1 then goto L3a9bce;
  #L3a9bc2.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L3a9bc6.  v1:= 0I;
  #L3a9bc8.  v4.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v1 @kind object;
  #L3a9bcc.  goto L3a9bfe;
  #L3a9bce.  v1:= 16I;
  #L3a9bd2.  if v0 != v1 then goto L3a9be4;
  #L3a9bd6.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.k` @type ^`long` @kind wide;
  #L3a9bda.  call temp:= `toString`(v0) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L3a9be0.  v0:= temp @kind object;
  #L3a9be2.  goto L3a9bfe;
  #L3a9be4.  v1:= 17I;
  #L3a9be8.  if v0 != v1 then goto L3a9c1e;
  #L3a9bec.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3a9bf0.  v1:= v4.`com.airbnb.lottie.parser.moshi.d.l` @type ^`int`;
  #L3a9bf4.  v1:= (`long`) v1 @kind i2l;
  #L3a9bf6.  call temp:= `readUtf8`(v0, v1) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L3a9bfc.  v0:= temp @kind object;
  #L3a9bfe.  v1:= 0I;
  #L3a9c00.  v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a9c04.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a9c08.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a9c0c.  v2:= v2 + -1;
  #L3a9c10.  v3:= v1[v2];
  #L3a9c14.  v3:= v3 + 1;
  #L3a9c18.  v1[v2]:= v3;
  #L3a9c1c.  return v0 @kind object;
  #L3a9c1e.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a9c22.  v1:= new `java.lang.StringBuilder`;
  #L3a9c26.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9c2c.  v2:= "Expected a string but was " @kind object;
  #L3a9c30.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9c36.  call temp:= `peek`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a9c3c.  v2:= temp @kind object;
  #L3a9c3e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9c44.  v2:= " at path " @kind object;
  #L3a9c48.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9c4e.  call temp:= `getPath`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a9c54.  v2:= temp @kind object;
  #L3a9c56.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9c5c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9c62.  v1:= temp @kind object;
  #L3a9c64.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a9c6a.  throw v0;
}
procedure `com.airbnb.lottie.parser.moshi.JsonReader$Token` `peek`(`com.airbnb.lottie.parser.moshi.d` v1 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8c6c.  v0:= v1.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a8c70.  if v0 != 0 then goto L3a8c7c;
  #L3a8c74.  call temp:= `f`(v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a8c7a.  v0:= temp;
  #L3a8c7c.  goto L3a8ccc;
  #L3a8c82.  v0:= new `java.lang.AssertionError`;
  #L3a8c86.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3a8c8c.  throw v0;
  #L3a8c8e.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_DOCUMENT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a8c92.  return v0 @kind object;
  #L3a8c94.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NUMBER` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a8c98.  return v0 @kind object;
  #L3a8c9a.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NAME` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a8c9e.  return v0 @kind object;
  #L3a8ca0.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.STRING` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a8ca4.  return v0 @kind object;
  #L3a8ca6.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NULL` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a8caa.  return v0 @kind object;
  #L3a8cac.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BOOLEAN` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a8cb0.  return v0 @kind object;
  #L3a8cb2.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a8cb6.  return v0 @kind object;
  #L3a8cb8.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a8cbc.  return v0 @kind object;
  #L3a8cbe.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a8cc2.  return v0 @kind object;
  #L3a8cc4.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a8cc8.  return v0 @kind object;
  #L3a8cca.  
  #L3a8ccc.  switch v0
                  | 1 => goto L3a8cc4
                  | 2 => goto L3a8cbe
                  | 3 => goto L3a8cb8
                  | 4 => goto L3a8cb2
                  | 5 => goto L3a8cac
                  | 6 => goto L3a8cac
                  | 7 => goto L3a8ca6
                  | 8 => goto L3a8ca0
                  | 9 => goto L3a8ca0
                  | 10 => goto L3a8ca0
                  | 11 => goto L3a8ca0
                  | 12 => goto L3a8c9a
                  | 13 => goto L3a8c9a
                  | 14 => goto L3a8c9a
                  | 15 => goto L3a8c9a
                  | 16 => goto L3a8c94
                  | 17 => goto L3a8c94
                  | 18 => goto L3a8c8e
                  | else => goto L3a8c82;
}
procedure `int` `selectName`(`com.airbnb.lottie.parser.moshi.d` v4 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader$Options` v5 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/d;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a9918.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3a991c.  if v0 != 0 then goto L3a9928;
  #L3a9920.  call temp:= `f`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3a9926.  v0:= temp;
  #L3a9928.  v1:= 12I;
  #L3a992c.  v2:= -1I;
  #L3a992e.  if v0 < v1 then goto L3a99c0;
  #L3a9932.  v1:= 15I;
  #L3a9936.  if v0 <= v1 then goto L3a993c;
  #L3a993a.  goto L3a99c0;
  #L3a993c.  if v0 != v1 then goto L3a994e;
  #L3a9940.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L3a9944.  call temp:= `g`(v4, v0, v5) @signature `Lcom/airbnb/lottie/parser/moshi/d;.g:(Ljava/lang/String;Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind direct;
  #L3a994a.  v5:= temp;
  #L3a994c.  return v5;
  #L3a994e.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a9952.  v3:= v5.`com.airbnb.lottie.parser.moshi.JsonReader$Options.b` @type ^`okio.Options` @kind object;
  #L3a9956.  call temp:= `select`(v0, v3) @signature `Lokio/BufferedSource;.select:(Lokio/Options;)I` @kind interface;
  #L3a995c.  v0:= temp;
  #L3a995e.  if v0 == v2 then goto L3a9982;
  #L3a9962.  v1:= 0I;
  #L3a9964.  v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a9968.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L3a996c.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a9970.  v2:= v2 + -1;
  #L3a9974.  v5:= v5.`com.airbnb.lottie.parser.moshi.JsonReader$Options.a` @type ^`java.lang.String`[] @kind object;
  #L3a9978.  v5:= v5[v0] @kind object;
  #L3a997c.  v1[v2]:= v5 @kind object;
  #L3a9980.  return v0;
  #L3a9982.  v0:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L3a9986.  v3:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a998a.  v3:= v3 + -1;
  #L3a998e.  v0:= v0[v3] @kind object;
  #L3a9992.  call temp:= `nextName`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextName:()Ljava/lang/String;` @kind virtual;
  #L3a9998.  v3:= temp @kind object;
  #L3a999a.  call temp:= `g`(v4, v3, v5) @signature `Lcom/airbnb/lottie/parser/moshi/d;.g:(Ljava/lang/String;Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind direct;
  #L3a99a0.  v5:= temp;
  #L3a99a2.  if v5 != v2 then goto L3a99be;
  #L3a99a6.  v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L3a99aa.  v4.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v3 @kind object;
  #L3a99ae.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L3a99b2.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a99b6.  v2:= v2 + -1;
  #L3a99ba.  v1[v2]:= v0 @kind object;
  #L3a99be.  return v5;
  #L3a99c0.  return v2;
}
procedure `void` `skipName`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.skipName:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aa070.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`boolean` @kind boolean;
  #L3aa074.  if v0 != 0 then goto L3aa132;
  #L3aa078.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3aa07c.  if v0 != 0 then goto L3aa088;
  #L3aa080.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3aa086.  v0:= temp;
  #L3aa088.  v1:= 14I;
  #L3aa08c.  if v0 != v1 then goto L3aa098;
  #L3aa090.  call `r`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.r:()V` @kind direct;
  #L3aa096.  goto L3aa0c8;
  #L3aa098.  v1:= 13I;
  #L3aa09c.  if v0 != v1 then goto L3aa0ac;
  #L3aa0a0.  v0:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L3aa0a4.  call `o`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.o:(Lokio/ByteString;)V` @kind direct;
  #L3aa0aa.  goto L3aa0c8;
  #L3aa0ac.  v1:= 12I;
  #L3aa0b0.  if v0 != v1 then goto L3aa0c0;
  #L3aa0b4.  v0:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L3aa0b8.  call `o`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.o:(Lokio/ByteString;)V` @kind direct;
  #L3aa0be.  goto L3aa0c8;
  #L3aa0c0.  v1:= 15I;
  #L3aa0c4.  if v0 != v1 then goto L3aa0e4;
  #L3aa0c8.  v0:= 0I;
  #L3aa0ca.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L3aa0ce.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L3aa0d2.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3aa0d6.  v1:= v1 + -1;
  #L3aa0da.  v2:= "null" @kind object;
  #L3aa0de.  v0[v1]:= v2 @kind object;
  #L3aa0e2.  return @kind void;
  #L3aa0e4.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3aa0e8.  v1:= new `java.lang.StringBuilder`;
  #L3aa0ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aa0f2.  v2:= "Expected a name but was " @kind object;
  #L3aa0f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa0fc.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3aa102.  v2:= temp @kind object;
  #L3aa104.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa10a.  v2:= " at path " @kind object;
  #L3aa10e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa114.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3aa11a.  v2:= temp @kind object;
  #L3aa11c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa122.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa128.  v1:= temp @kind object;
  #L3aa12a.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa130.  throw v0;
  #L3aa132.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3aa136.  v1:= new `java.lang.StringBuilder`;
  #L3aa13a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aa140.  v2:= "Cannot skip unexpected " @kind object;
  #L3aa144.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa14a.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3aa150.  v2:= temp @kind object;
  #L3aa152.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa158.  v2:= " at " @kind object;
  #L3aa15c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa162.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3aa168.  v2:= temp @kind object;
  #L3aa16a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa170.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa176.  v1:= temp @kind object;
  #L3aa178.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa17e.  throw v0;
}
procedure `void` `skipValue`(`com.airbnb.lottie.parser.moshi.d` v7 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.skipValue:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3aa28c.  v0:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`boolean` @kind boolean;
  #L3aa290.  if v0 != 0 then goto L3aa482;
  #L3aa294.  v0:= 0I;
  #L3aa296.  v1:= 0I;
  #L3aa298.  v2:= v7.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L3aa29c.  if v2 != 0 then goto L3aa2a8;
  #L3aa2a0.  call temp:= `f`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L3aa2a6.  v2:= temp;
  #L3aa2a8.  v3:= 3I;
  #L3aa2aa.  v4:= 1I;
  #L3aa2ac.  if v2 != v3 then goto L3aa2be;
  #L3aa2b0.  call `b`(v7, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @kind virtual;
  #L3aa2b6.  v1:= v1 + 1;
  #L3aa2ba.  goto L3aa454;
  #L3aa2be.  if v2 != v4 then goto L3aa2ca;
  #L3aa2c2.  call `b`(v7, v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @kind virtual;
  #L3aa2c8.  goto L3aa2b6;
  #L3aa2ca.  v3:= 4I;
  #L3aa2cc.  v5:= " at path " @kind object;
  #L3aa2d0.  v6:= "Expected a value but was " @kind object;
  #L3aa2d4.  if v2 != v3 then goto L3aa334;
  #L3aa2d8.  v1:= v1 + -1;
  #L3aa2dc.  if v1 < 0 then goto L3aa2ee;
  #L3aa2e0.  v2:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3aa2e4.  v2:= v2 - v4 @kind int;
  #L3aa2e6.  v7.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v2;
  #L3aa2ea.  goto L3aa454;
  #L3aa2ee.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3aa2f2.  v1:= new `java.lang.StringBuilder`;
  #L3aa2f6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aa2fc.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa302.  call temp:= `peek`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3aa308.  v2:= temp @kind object;
  #L3aa30a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa310.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa316.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3aa31c.  v2:= temp @kind object;
  #L3aa31e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa324.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa32a.  v1:= temp @kind object;
  #L3aa32c.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa332.  throw v0;
  #L3aa334.  v3:= 2I;
  #L3aa336.  if v2 != v3 then goto L3aa396;
  #L3aa33a.  v1:= v1 + -1;
  #L3aa33e.  if v1 < 0 then goto L3aa350;
  #L3aa342.  v2:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3aa346.  v2:= v2 - v4 @kind int;
  #L3aa348.  v7.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v2;
  #L3aa34c.  goto L3aa454;
  #L3aa350.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3aa354.  v1:= new `java.lang.StringBuilder`;
  #L3aa358.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aa35e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa364.  call temp:= `peek`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3aa36a.  v2:= temp @kind object;
  #L3aa36c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa372.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa378.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3aa37e.  v2:= temp @kind object;
  #L3aa380.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa386.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa38c.  v1:= temp @kind object;
  #L3aa38e.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa394.  throw v0;
  #L3aa396.  v3:= 14I;
  #L3aa39a.  if v2 == v3 then goto L3aa44e;
  #L3aa39e.  v3:= 10I;
  #L3aa3a2.  if v2 != v3 then goto L3aa3a8;
  #L3aa3a6.  goto L3aa44e;
  #L3aa3a8.  v3:= 9I;
  #L3aa3ac.  if v2 == v3 then goto L3aa442;
  #L3aa3b0.  v3:= 13I;
  #L3aa3b4.  if v2 != v3 then goto L3aa3ba;
  #L3aa3b8.  goto L3aa442;
  #L3aa3ba.  v3:= 8I;
  #L3aa3be.  if v2 == v3 then goto L3aa436;
  #L3aa3c2.  v3:= 12I;
  #L3aa3c6.  if v2 != v3 then goto L3aa3cc;
  #L3aa3ca.  goto L3aa436;
  #L3aa3cc.  v3:= 17I;
  #L3aa3d0.  if v2 != v3 then goto L3aa3e6;
  #L3aa3d4.  v2:= v7.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L3aa3d8.  v3:= v7.`com.airbnb.lottie.parser.moshi.d.l` @type ^`int`;
  #L3aa3dc.  v5:= (`long`) v3 @kind i2l;
  #L3aa3de.  call `skip`(v2, v5) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L3aa3e4.  goto L3aa454;
  #L3aa3e6.  v3:= 18I;
  #L3aa3ea.  if v2 == v3 then goto L3aa3f0;
  #L3aa3ee.  goto L3aa454;
  #L3aa3f0.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3aa3f4.  v1:= new `java.lang.StringBuilder`;
  #L3aa3f8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aa3fe.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa404.  call temp:= `peek`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3aa40a.  v2:= temp @kind object;
  #L3aa40c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa412.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa418.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3aa41e.  v2:= temp @kind object;
  #L3aa420.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa426.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa42c.  v1:= temp @kind object;
  #L3aa42e.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa434.  throw v0;
  #L3aa436.  v2:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L3aa43a.  call `o`(v7, v2) @signature `Lcom/airbnb/lottie/parser/moshi/d;.o:(Lokio/ByteString;)V` @kind direct;
  #L3aa440.  goto L3aa454;
  #L3aa442.  v2:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L3aa446.  call `o`(v7, v2) @signature `Lcom/airbnb/lottie/parser/moshi/d;.o:(Lokio/ByteString;)V` @kind direct;
  #L3aa44c.  goto L3aa454;
  #L3aa44e.  call `r`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.r:()V` @kind direct;
  #L3aa454.  v7.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L3aa458.  if v1 != 0 then goto L3aa298;
  #L3aa45c.  v0:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3aa460.  v1:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3aa464.  v2:= v1 + -1;
  #L3aa468.  v3:= v0[v2];
  #L3aa46c.  v3:= v3 + v4 @kind int;
  #L3aa46e.  v0[v2]:= v3;
  #L3aa472.  v0:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L3aa476.  v1:= v1 - v4 @kind int;
  #L3aa478.  v2:= "null" @kind object;
  #L3aa47c.  v0[v1]:= v2 @kind object;
  #L3aa480.  return @kind void;
  #L3aa482.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3aa486.  v1:= new `java.lang.StringBuilder`;
  #L3aa48a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aa490.  v2:= "Cannot skip unexpected " @kind object;
  #L3aa494.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa49a.  call temp:= `peek`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3aa4a0.  v2:= temp @kind object;
  #L3aa4a2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa4a8.  v2:= " at " @kind object;
  #L3aa4ac.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa4b2.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3aa4b8.  v2:= temp @kind object;
  #L3aa4ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa4c0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa4c6.  v1:= temp @kind object;
  #L3aa4c8.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa4ce.  throw v0;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.parser.moshi.d` v2 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9cc4.  v0:= new `java.lang.StringBuilder`;
  #L3a9cc8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9cce.  v1:= "JsonReader(" @kind object;
  #L3a9cd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9cd8.  v1:= v2.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L3a9cdc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9ce2.  v1:= ")" @kind object;
  #L3a9ce6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9cec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9cf2.  v0:= temp @kind object;
  #L3a9cf4.  return v0 @kind object;
}
