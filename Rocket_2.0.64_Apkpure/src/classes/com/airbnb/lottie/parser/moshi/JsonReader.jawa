record `com.airbnb.lottie.parser.moshi.JsonReader` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
  `int` `com.airbnb.lottie.parser.moshi.JsonReader.a` @AccessFlag ;
  `int`[] `com.airbnb.lottie.parser.moshi.JsonReader.b` @AccessFlag ;
  `java.lang.String`[] `com.airbnb.lottie.parser.moshi.JsonReader.c` @AccessFlag ;
  `int`[] `com.airbnb.lottie.parser.moshi.JsonReader.d` @AccessFlag ;
  `boolean` `com.airbnb.lottie.parser.moshi.JsonReader.e` @AccessFlag ;
  `boolean` `com.airbnb.lottie.parser.moshi.JsonReader.f` @AccessFlag ;
}
global `java.lang.String`[] `@@com.airbnb.lottie.parser.moshi.JsonReader.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a85c0.  v0:= 128I;
  #L3a85c4.  v0:= new `java.lang.String`[v0];
  #L3a85c8.  `@@com.airbnb.lottie.parser.moshi.JsonReader.g` @type ^`java.lang.String`[] := v0 @kind object;
  #L3a85cc.  v0:= 0I;
  #L3a85ce.  v1:= 0I;
  #L3a85d0.  v2:= 31I;
  #L3a85d4.  if v1 > v2 then goto L3a8604;
  #L3a85d8.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader.g` @type ^`java.lang.String`[] @kind object;
  #L3a85dc.  v3:= 1I;
  #L3a85de.  v3:= new `java.lang.Object`[v3];
  #L3a85e2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a85e8.  v4:= temp @kind object;
  #L3a85ea.  v3[v0]:= v4 @kind object;
  #L3a85ee.  v4:= "\\u%04x" @kind object;
  #L3a85f2.  call temp:= `format`(v4, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3a85f8.  v3:= temp @kind object;
  #L3a85fa.  v2[v1]:= v3 @kind object;
  #L3a85fe.  v1:= v1 + 1;
  #L3a8602.  goto L3a85d0;
  #L3a8604.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader.g` @type ^`java.lang.String`[] @kind object;
  #L3a8608.  v1:= 34I;
  #L3a860c.  v2:= "\\\"" @kind object;
  #L3a8610.  v0[v1]:= v2 @kind object;
  #L3a8614.  v1:= 92I;
  #L3a8618.  v2:= "\\\\" @kind object;
  #L3a861c.  v0[v1]:= v2 @kind object;
  #L3a8620.  v1:= 9I;
  #L3a8624.  v2:= "\\t" @kind object;
  #L3a8628.  v0[v1]:= v2 @kind object;
  #L3a862c.  v1:= 8I;
  #L3a8630.  v2:= "\\b" @kind object;
  #L3a8634.  v0[v1]:= v2 @kind object;
  #L3a8638.  v1:= 10I;
  #L3a863c.  v2:= "\\n" @kind object;
  #L3a8640.  v0[v1]:= v2 @kind object;
  #L3a8644.  v1:= 13I;
  #L3a8648.  v2:= "\\r" @kind object;
  #L3a864c.  v0[v1]:= v2 @kind object;
  #L3a8650.  v1:= 12I;
  #L3a8654.  v2:= "\\f" @kind object;
  #L3a8658.  v0[v1]:= v2 @kind object;
  #L3a865c.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a8670.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a8676.  v0:= 32I;
  #L3a867a.  v1:= new `int`[v0];
  #L3a867e.  v2.`com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`int`[] := v1 @kind object;
  #L3a8682.  v1:= new `java.lang.String`[v0];
  #L3a8686.  v2.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] := v1 @kind object;
  #L3a868a.  v0:= new `int`[v0];
  #L3a868e.  v2.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] := v0 @kind object;
  #L3a8692.  return @kind void;
}
procedure `void` `a`(`okio.BufferedSink` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.a:(Lokio/BufferedSink;Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3a86a4.  call `c`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:(Lokio/BufferedSink;Ljava/lang/String;)V` @kind static;
  #L3a86aa.  return @kind void;
}
procedure `void` `c`(`okio.BufferedSink` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:(Lokio/BufferedSink;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a8774.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader.g` @type ^`java.lang.String`[] @kind object;
  #L3a8778.  v1:= 34I;
  #L3a877c.  call temp:= `writeByte`(v7, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L3a8782.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a8788.  v2:= temp;
  #L3a878a.  v3:= 0I;
  #L3a878c.  v4:= 0I;
  #L3a878e.  if v3 >= v2 then goto L3a87e0;
  #L3a8792.  call temp:= `charAt`(v8, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a8798.  v5:= temp;
  #L3a879a.  v6:= 128I;
  #L3a879e.  if v5 >= v6 then goto L3a87ac;
  #L3a87a2.  v5:= v0[v5] @kind object;
  #L3a87a6.  if v5 != 0 then goto L3a87c6;
  #L3a87aa.  goto L3a87da;
  #L3a87ac.  v6:= 8232I;
  #L3a87b0.  if v5 != v6 then goto L3a87ba;
  #L3a87b4.  v5:= "\\u2028" @kind object;
  #L3a87b8.  goto L3a87c6;
  #L3a87ba.  v6:= 8233I;
  #L3a87be.  if v5 != v6 then goto L3a87da;
  #L3a87c2.  v5:= "\\u2029" @kind object;
  #L3a87c6.  if v4 >= v3 then goto L3a87d0;
  #L3a87ca.  call temp:= `writeUtf8`(v7, v8, v4, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;II)Lokio/BufferedSink;` @kind interface;
  #L3a87d0.  call temp:= `writeUtf8`(v7, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L3a87d6.  v4:= v3 + 1;
  #L3a87da.  v3:= v3 + 1;
  #L3a87de.  goto L3a878e;
  #L3a87e0.  if v4 >= v2 then goto L3a87ea;
  #L3a87e4.  call temp:= `writeUtf8`(v7, v8, v4, v2) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;II)Lokio/BufferedSink;` @kind interface;
  #L3a87ea.  call temp:= `writeByte`(v7, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L3a87f0.  return @kind void;
}
procedure `com.airbnb.lottie.parser.moshi.JsonReader` `of`(`okio.BufferedSource` v1 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.of:(Lokio/BufferedSource;)Lcom/airbnb/lottie/parser/moshi/JsonReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a8578.  v0:= new `com.airbnb.lottie.parser.moshi.d`;
  #L3a857c.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.<init>:(Lokio/BufferedSource;)V` @kind direct;
  #L3a8582.  return v0 @kind object;
}
procedure `void` `b`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind this, `int` v4 ) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3a86bc.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a86c0.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`int`[] @kind object;
  #L3a86c4.  v2:= length @variable v1;
  #L3a86c6.  if v0 != v2 then goto L3a874c;
  #L3a86ca.  v2:= 256I;
  #L3a86ce.  if v0 == v2 then goto L3a8716;
  #L3a86d2.  v0:= length @variable v1;
  #L3a86d4.  v0:= v0 * 2;
  #L3a86d8.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L3a86de.  v0:= temp @kind object;
  #L3a86e0.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`int`[] := v0 @kind object;
  #L3a86e4.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L3a86e8.  v1:= length @variable v0;
  #L3a86ea.  v1:= v1 * 2;
  #L3a86ee.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L3a86f4.  v0:= temp @kind object;
  #L3a86f6.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L3a86fa.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L3a86fe.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a8702.  v1:= length @variable v0;
  #L3a8704.  v1:= v1 * 2;
  #L3a8708.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L3a870e.  v0:= temp @kind object;
  #L3a8710.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] := v0 @kind object;
  #L3a8714.  goto L3a874c;
  #L3a8716.  v4:= new `com.airbnb.lottie.parser.moshi.a`;
  #L3a871a.  v0:= new `java.lang.StringBuilder`;
  #L3a871e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8724.  v1:= "Nesting too deep at " @kind object;
  #L3a8728.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a872e.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a8734.  v1:= temp @kind object;
  #L3a8736.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a873c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8742.  v0:= temp @kind object;
  #L3a8744.  call `<init>`(v4, v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a874a.  throw v4;
  #L3a874c.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`int`[] @kind object;
  #L3a8750.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a8754.  v2:= v1 + 1;
  #L3a8758.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v2;
  #L3a875c.  v0[v1]:= v4;
  #L3a8760.  return @kind void;
}
procedure `void` `beginArray`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `beginObject`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.airbnb.lottie.parser.moshi.b` `d`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L3a852c.  v0:= new `com.airbnb.lottie.parser.moshi.b`;
  #L3a8530.  v1:= new `java.lang.StringBuilder`;
  #L3a8534.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a853a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8540.  v3:= " at path " @kind object;
  #L3a8544.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a854a.  call temp:= `getPath`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3a8550.  v3:= temp @kind object;
  #L3a8552.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8558.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a855e.  v3:= temp @kind object;
  #L3a8560.  call `<init>`(v0, v3) @signature `Lcom/airbnb/lottie/parser/moshi/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8566.  throw v0;
}
procedure `void` `endArray`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `endObject`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getPath`(`com.airbnb.lottie.parser.moshi.JsonReader` v4 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a8594.  v0:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L3a8598.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`int`[] @kind object;
  #L3a859c.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L3a85a0.  v3:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3a85a4.  call temp:= `a`(v0, v1, v2, v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.a:(I[I[Ljava/lang/String;[I)Ljava/lang/String;` @kind static;
  #L3a85aa.  v0:= temp @kind object;
  #L3a85ac.  return v0 @kind object;
}
procedure `boolean` `hasNext`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `nextBoolean`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `double` `nextDouble`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `nextInt`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextInt:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `nextName`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextName:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `nextString`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.airbnb.lottie.parser.moshi.JsonReader$Token` `peek`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `selectName`(`com.airbnb.lottie.parser.moshi.JsonReader$Options` v0 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipName`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipValue`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
