record `com.airbnb.lottie.parser.g` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.g.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a569c.  v0:= "x" @kind object;
  #L3a56a0.  v1:= "y" @kind object;
  #L3a56a4.  temp:= new `java.lang.String`[v0, v1];
  #L3a56aa.  v0:= temp @kind object;
  #L3a56ac.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a56b2.  v0:= temp @kind object;
  #L3a56b4.  `@@com.airbnb.lottie.parser.g.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a56b8.  return @kind void;
}
procedure `android.graphics.PointF` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v4 @kind object, `float` v5 ) @signature `Lcom/airbnb/lottie/parser/g;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a5388.  call `beginArray`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L3a538e.  call temp:= `nextDouble`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a5394.  v0:= temp @kind wide;
  #L3a5396.  v0:= (`float`) v0 @kind d2f;
  #L3a5398.  call temp:= `nextDouble`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a539e.  v1:= temp @kind wide;
  #L3a53a0.  v1:= (`float`) v1 @kind d2f;
  #L3a53a2.  call temp:= `peek`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a53a8.  v2:= temp @kind object;
  #L3a53aa.  v3:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a53ae.  if v2 == v3 then goto L3a53ba;
  #L3a53b2.  call `skipValue`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a53b8.  goto L3a53a2;
  #L3a53ba.  call `endArray`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L3a53c0.  v4:= new `android.graphics.PointF`;
  #L3a53c4.  v0:= v0 * v5 @kind float;
  #L3a53c8.  v1:= v1 * v5 @kind float;
  #L3a53cc.  call `<init>`(v4, v0, v1) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L3a53d2.  return v4 @kind object;
}
procedure `android.graphics.PointF` `b`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object, `float` v4 ) @signature `Lcom/airbnb/lottie/parser/g;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a53e4.  call temp:= `nextDouble`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a53ea.  v0:= temp @kind wide;
  #L3a53ec.  v0:= (`float`) v0 @kind d2f;
  #L3a53ee.  call temp:= `nextDouble`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a53f4.  v1:= temp @kind wide;
  #L3a53f6.  v1:= (`float`) v1 @kind d2f;
  #L3a53f8.  call temp:= `hasNext`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a53fe.  v2:= temp;
  #L3a5400.  if v2 == 0 then goto L3a540c;
  #L3a5404.  call `skipValue`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a540a.  goto L3a53f8;
  #L3a540c.  v3:= new `android.graphics.PointF`;
  #L3a5410.  v0:= v0 * v4 @kind float;
  #L3a5414.  v1:= v1 * v4 @kind float;
  #L3a5418.  call `<init>`(v3, v0, v1) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L3a541e.  return v3 @kind object;
}
procedure `android.graphics.PointF` `c`(`com.airbnb.lottie.parser.moshi.JsonReader` v4 @kind object, `float` v5 ) @signature `Lcom/airbnb/lottie/parser/g;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a5430.  call `beginObject`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L3a5436.  v0:= 0I;
  #L3a5438.  v1:= 0I;
  #L3a543a.  call temp:= `hasNext`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a5440.  v2:= temp;
  #L3a5442.  if v2 == 0 then goto L3a547e;
  #L3a5446.  v2:= `@@com.airbnb.lottie.parser.g.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a544a.  call temp:= `selectName`(v4, v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a5450.  v2:= temp;
  #L3a5452.  if v2 == 0 then goto L3a5474;
  #L3a5456.  v3:= 1I;
  #L3a5458.  if v2 == v3 then goto L3a546a;
  #L3a545c.  call `skipName`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L3a5462.  call `skipValue`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a5468.  goto L3a543a;
  #L3a546a.  call temp:= `g`(v4) @signature `Lcom/airbnb/lottie/parser/g;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @kind static;
  #L3a5470.  v1:= temp;
  #L3a5472.  goto L3a543a;
  #L3a5474.  call temp:= `g`(v4) @signature `Lcom/airbnb/lottie/parser/g;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @kind static;
  #L3a547a.  v0:= temp;
  #L3a547c.  goto L3a543a;
  #L3a547e.  call `endObject`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L3a5484.  v4:= new `android.graphics.PointF`;
  #L3a5488.  v0:= v0 * v5 @kind float;
  #L3a548c.  v1:= v1 * v5 @kind float;
  #L3a5490.  call `<init>`(v4, v0, v1) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L3a5496.  return v4 @kind object;
}
procedure `int` `d`(`com.airbnb.lottie.parser.moshi.JsonReader` v6 @kind object) @signature `Lcom/airbnb/lottie/parser/g;.d:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a55d4.  call `beginArray`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L3a55da.  call temp:= `nextDouble`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a55e0.  v0:= temp @kind wide;
  #L3a55e2.  v2:= 255.0D;
  #L3a55ec.  v0:= v0 * v2 @kind double;
  #L3a55f0.  v0:= (`int`) v0 @kind d2i;
  #L3a55f2.  call temp:= `nextDouble`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a55f8.  v4:= temp @kind wide;
  #L3a55fa.  v4:= v4 * v2 @kind double;
  #L3a55fe.  v1:= (`int`) v4 @kind d2i;
  #L3a5600.  call temp:= `nextDouble`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a5606.  v4:= temp @kind wide;
  #L3a5608.  v4:= v4 * v2 @kind double;
  #L3a560c.  v2:= (`int`) v4 @kind d2i;
  #L3a560e.  call temp:= `hasNext`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a5614.  v3:= temp;
  #L3a5616.  if v3 == 0 then goto L3a5622;
  #L3a561a.  call `skipValue`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a5620.  goto L3a560e;
  #L3a5622.  call `endArray`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L3a5628.  v6:= 255I;
  #L3a562c.  call temp:= `argb`(v6, v0, v1, v2) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L3a5632.  v6:= temp;
  #L3a5634.  return v6;
}
procedure `android.graphics.PointF` `e`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `float` v3 ) @signature `Lcom/airbnb/lottie/parser/g;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3a54a8.  v0:= `@@com.airbnb.lottie.parser.g$a.a` @type ^`int`[] @kind object;
  #L3a54ac.  call temp:= `peek`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a54b2.  v1:= temp @kind object;
  #L3a54b4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3a54ba.  v1:= temp;
  #L3a54bc.  v0:= v0[v1];
  #L3a54c0.  v1:= 1I;
  #L3a54c2.  if v0 == v1 then goto L3a551c;
  #L3a54c6.  v1:= 2I;
  #L3a54c8.  if v0 == v1 then goto L3a5512;
  #L3a54cc.  v1:= 3I;
  #L3a54ce.  if v0 != v1 then goto L3a54dc;
  #L3a54d2.  call temp:= `c`(v2, v3) @signature `Lcom/airbnb/lottie/parser/g;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L3a54d8.  v2:= temp @kind object;
  #L3a54da.  return v2 @kind object;
  #L3a54dc.  v3:= new `java.lang.IllegalArgumentException`;
  #L3a54e0.  v0:= new `java.lang.StringBuilder`;
  #L3a54e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a54ea.  v1:= "Unknown point starts with " @kind object;
  #L3a54ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a54f4.  call temp:= `peek`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a54fa.  v2:= temp @kind object;
  #L3a54fc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a5502.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a5508.  v2:= temp @kind object;
  #L3a550a.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a5510.  throw v3;
  #L3a5512.  call temp:= `a`(v2, v3) @signature `Lcom/airbnb/lottie/parser/g;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L3a5518.  v2:= temp @kind object;
  #L3a551a.  return v2 @kind object;
  #L3a551c.  call temp:= `b`(v2, v3) @signature `Lcom/airbnb/lottie/parser/g;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L3a5522.  v2:= temp @kind object;
  #L3a5524.  return v2 @kind object;
}
procedure `java.util.List` `f`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object, `float` v4 ) @signature `Lcom/airbnb/lottie/parser/g;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a5648.  v0:= new `java.util.ArrayList`;
  #L3a564c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a5652.  call `beginArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L3a5658.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a565e.  v1:= temp @kind object;
  #L3a5660.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a5664.  if v1 != v2 then goto L3a5684;
  #L3a5668.  call `beginArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L3a566e.  call temp:= `e`(v3, v4) @signature `Lcom/airbnb/lottie/parser/g;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L3a5674.  v1:= temp @kind object;
  #L3a5676.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a567c.  call `endArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L3a5682.  goto L3a5658;
  #L3a5684.  call `endArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L3a568a.  return v0 @kind object;
}
procedure `float` `g`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object) @signature `Lcom/airbnb/lottie/parser/g;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a5538.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a553e.  v0:= temp @kind object;
  #L3a5540.  v1:= `@@com.airbnb.lottie.parser.g$a.a` @type ^`int`[] @kind object;
  #L3a5544.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3a554a.  v2:= temp;
  #L3a554c.  v1:= v1[v2];
  #L3a5550.  v2:= 1I;
  #L3a5552.  if v1 == v2 then goto L3a55b6;
  #L3a5556.  v2:= 2I;
  #L3a5558.  if v1 != v2 then goto L3a5588;
  #L3a555c.  call `beginArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L3a5562.  call temp:= `nextDouble`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a5568.  v0:= temp @kind wide;
  #L3a556a.  v0:= (`float`) v0 @kind d2f;
  #L3a556c.  call temp:= `hasNext`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a5572.  v1:= temp;
  #L3a5574.  if v1 == 0 then goto L3a5580;
  #L3a5578.  call `skipValue`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a557e.  goto L3a556c;
  #L3a5580.  call `endArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L3a5586.  return v0;
  #L3a5588.  v3:= new `java.lang.IllegalArgumentException`;
  #L3a558c.  v1:= new `java.lang.StringBuilder`;
  #L3a5590.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a5596.  v2:= "Unknown value for token of type " @kind object;
  #L3a559a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a55a0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a55a6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a55ac.  v0:= temp @kind object;
  #L3a55ae.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a55b4.  throw v3;
  #L3a55b6.  call temp:= `nextDouble`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a55bc.  v0:= temp @kind wide;
  #L3a55be.  v3:= (`float`) v0 @kind d2f;
  #L3a55c0.  return v3;
}
