record `com.airbnb.lottie.parser.c` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.c.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a48ec.  v0:= "ch" @kind object;
  #L3a48f0.  v1:= "size" @kind object;
  #L3a48f4.  v2:= "w" @kind object;
  #L3a48f8.  v3:= "style" @kind object;
  #L3a48fc.  v4:= "fFamily" @kind object;
  #L3a4900.  v5:= "data" @kind object;
  #L3a4904.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5];
  #L3a490a.  v0:= temp @kind object;
  #L3a490c.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a4912.  v0:= temp @kind object;
  #L3a4914.  `@@com.airbnb.lottie.parser.c.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a4918.  v0:= "shapes" @kind object;
  #L3a491c.  temp:= new `java.lang.String`[v0];
  #L3a4922.  v0:= temp @kind object;
  #L3a4924.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a492a.  v0:= temp @kind object;
  #L3a492c.  `@@com.airbnb.lottie.parser.c.b` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a4930.  return @kind void;
}
procedure `com.airbnb.lottie.model.FontCharacter` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v11 @kind object, `com.airbnb.lottie.LottieComposition` v12 @kind object) @signature `Lcom/airbnb/lottie/parser/c;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/FontCharacter;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3a47b4.  v1:= new `java.util.ArrayList`;
  #L3a47b8.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a47be.  call `beginObject`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L3a47c4.  v0:= 0I;
  #L3a47c6.  v2:= 0L;
  #L3a47ca.  v4:= 0I;
  #L3a47cc.  v9:= v0 @kind object;
  #L3a47ce.  v10:= v9 @kind object;
  #L3a47d0.  v5:= v2 @kind wide;
  #L3a47d2.  v7:= v5 @kind wide;
  #L3a47d4.  v2:= 0I;
  #L3a47d6.  call temp:= `hasNext`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a47dc.  v0:= temp;
  #L3a47de.  if v0 == 0 then goto L3a48be;
  #L3a47e2.  v0:= `@@com.airbnb.lottie.parser.c.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a47e6.  call temp:= `selectName`(v11, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a47ec.  v0:= temp;
  #L3a47ee.  if v0 == 0 then goto L3a48ac;
  #L3a47f2.  v3:= 1I;
  #L3a47f4.  if v0 == v3 then goto L3a48a2;
  #L3a47f8.  v3:= 2I;
  #L3a47fa.  if v0 == v3 then goto L3a4898;
  #L3a47fe.  v3:= 3I;
  #L3a4800.  if v0 == v3 then goto L3a488e;
  #L3a4804.  v3:= 4I;
  #L3a4806.  if v0 == v3 then goto L3a4884;
  #L3a480a.  v3:= 5I;
  #L3a480c.  if v0 == v3 then goto L3a481e;
  #L3a4810.  call `skipName`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L3a4816.  call `skipValue`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a481c.  goto L3a47d6;
  #L3a481e.  call `beginObject`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L3a4824.  call temp:= `hasNext`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a482a.  v0:= temp;
  #L3a482c.  if v0 == 0 then goto L3a487c;
  #L3a4830.  v0:= `@@com.airbnb.lottie.parser.c.b` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a4834.  call temp:= `selectName`(v11, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a483a.  v0:= temp;
  #L3a483c.  if v0 == 0 then goto L3a484e;
  #L3a4840.  call `skipName`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L3a4846.  call `skipValue`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a484c.  goto L3a4824;
  #L3a484e.  call `beginArray`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L3a4854.  call temp:= `hasNext`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a485a.  v0:= temp;
  #L3a485c.  if v0 == 0 then goto L3a4874;
  #L3a4860.  call temp:= `a`(v11, v12) @signature `Lcom/airbnb/lottie/parser/b;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/ContentModel;` @kind static;
  #L3a4866.  v0:= temp @kind object;
  #L3a4868.  v0:= (`com.airbnb.lottie.model.content.ShapeGroup`) v0 @kind object;
  #L3a486c.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a4872.  goto L3a4854;
  #L3a4874.  call `endArray`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L3a487a.  goto L3a4824;
  #L3a487c.  call `endObject`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L3a4882.  goto L3a47d6;
  #L3a4884.  call temp:= `nextString`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a488a.  v10:= temp @kind object;
  #L3a488c.  goto L3a47d6;
  #L3a488e.  call temp:= `nextString`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a4894.  v9:= temp @kind object;
  #L3a4896.  goto L3a47d6;
  #L3a4898.  call temp:= `nextDouble`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a489e.  v7:= temp @kind wide;
  #L3a48a0.  goto L3a47d6;
  #L3a48a2.  call temp:= `nextDouble`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a48a8.  v5:= temp @kind wide;
  #L3a48aa.  goto L3a47d6;
  #L3a48ac.  call temp:= `nextString`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a48b2.  v0:= temp @kind object;
  #L3a48b4.  call temp:= `charAt`(v0, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3a48ba.  v2:= temp;
  #L3a48bc.  goto L3a47d6;
  #L3a48be.  call `endObject`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L3a48c4.  v11:= new `com.airbnb.lottie.model.FontCharacter`;
  #L3a48c8.  v0:= v11 @kind object;
  #L3a48ca.  v3:= v5 @kind wide;
  #L3a48cc.  v5:= v7 @kind wide;
  #L3a48ce.  v7:= v9 @kind object;
  #L3a48d0.  v8:= v10 @kind object;
  #L3a48d2.  call `<init>`(v0, v1, v2, v3, v5, v7, v8) @signature `Lcom/airbnb/lottie/model/FontCharacter;.<init>:(Ljava/util/List;CDDLjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3a48d8.  return v11 @kind object;
}
