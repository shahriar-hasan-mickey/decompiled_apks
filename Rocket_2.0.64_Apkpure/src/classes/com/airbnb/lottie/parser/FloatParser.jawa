record `com.airbnb.lottie.parser.FloatParser` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.parser.u` @kind interface {
}
global `com.airbnb.lottie.parser.FloatParser` `@@com.airbnb.lottie.parser.FloatParser.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/FloatParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a477c.  v0:= new `com.airbnb.lottie.parser.FloatParser`;
  #L3a4780.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/parser/FloatParser;.<init>:()V` @kind direct;
  #L3a4786.  `@@com.airbnb.lottie.parser.FloatParser.INSTANCE` @type ^`com.airbnb.lottie.parser.FloatParser` := v0 @kind object;
  #L3a478a.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.FloatParser` v0 @kind this) @signature `Lcom/airbnb/lottie/parser/FloatParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a479c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a47a2.  return @kind void;
}
procedure `java.lang.Float` `parse`(`com.airbnb.lottie.parser.FloatParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/FloatParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;

  #L3a4738.  call temp:= `g`(v1) @signature `Lcom/airbnb/lottie/parser/g;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @kind static;
  #L3a473e.  v1:= temp;
  #L3a4740.  v1:= v1 * v2 @kind float;
  #L3a4744.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3a474a.  v1:= temp @kind object;
  #L3a474c.  return v1 @kind object;
}
procedure `java.lang.Object` `parse`(`com.airbnb.lottie.parser.FloatParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/FloatParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a4760.  call temp:= `parse`(v0, v1, v2) @signature `Lcom/airbnb/lottie/parser/FloatParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Float;` @kind virtual;
  #L3a4766.  v1:= temp @kind object;
  #L3a4768.  return v1 @kind object;
}
