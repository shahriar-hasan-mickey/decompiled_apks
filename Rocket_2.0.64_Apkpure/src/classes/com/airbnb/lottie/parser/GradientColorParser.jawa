record `com.airbnb.lottie.parser.GradientColorParser` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.parser.u` @kind interface {
  `int` `com.airbnb.lottie.parser.GradientColorParser.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.GradientColorParser` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a4be0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a4be6.  v0.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int` := v1;
  #L3a4bea.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.parser.GradientColorParser` v7 @kind this, `com.airbnb.lottie.model.content.GradientColor` v8 @kind object, `java.util.List` v9 @kind object) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.a:(Lcom/airbnb/lottie/model/content/GradientColor;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a4bfc.  v0:= v7.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int`;
  #L3a4c00.  v0:= v0 * 4;
  #L3a4c04.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a4c0a.  v1:= temp;
  #L3a4c0c.  if v1 > v0 then goto L3a4c12;
  #L3a4c10.  return @kind void;
  #L3a4c12.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a4c18.  v1:= temp;
  #L3a4c1a.  v1:= v1 - v0 @kind int;
  #L3a4c1c.  v1:= v1 / 2;
  #L3a4c20.  v2:= new `double`[v1];
  #L3a4c24.  v1:= new `double`[v1];
  #L3a4c28.  v3:= 0I;
  #L3a4c2a.  v4:= 0I;
  #L3a4c2c.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a4c32.  v5:= temp;
  #L3a4c34.  if v0 >= v5 then goto L3a4c80;
  #L3a4c38.  v5:= v0 %% 2;
  #L3a4c3c.  if v5 != 0 then goto L3a4c5c;
  #L3a4c40.  call temp:= `get`(v9, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a4c46.  v5:= temp @kind object;
  #L3a4c48.  v5:= (`java.lang.Float`) v5 @kind object;
  #L3a4c4c.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3a4c52.  v5:= temp;
  #L3a4c54.  v5:= (`double`) v5 @kind f2d;
  #L3a4c56.  v2[v4]:= v5 @kind wide;
  #L3a4c5a.  goto L3a4c7a;
  #L3a4c5c.  call temp:= `get`(v9, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a4c62.  v5:= temp @kind object;
  #L3a4c64.  v5:= (`java.lang.Float`) v5 @kind object;
  #L3a4c68.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3a4c6e.  v5:= temp;
  #L3a4c70.  v5:= (`double`) v5 @kind f2d;
  #L3a4c72.  v1[v4]:= v5 @kind wide;
  #L3a4c76.  v4:= v4 + 1;
  #L3a4c7a.  v0:= v0 + 1;
  #L3a4c7e.  goto L3a4c2c;
  #L3a4c80.  call temp:= `getSize`(v8) @signature `Lcom/airbnb/lottie/model/content/GradientColor;.getSize:()I` @kind virtual;
  #L3a4c86.  v9:= temp;
  #L3a4c88.  if v3 >= v9 then goto L3a4ce0;
  #L3a4c8c.  call temp:= `getColors`(v8) @signature `Lcom/airbnb/lottie/model/content/GradientColor;.getColors:()[I` @kind virtual;
  #L3a4c92.  v9:= temp @kind object;
  #L3a4c94.  v9:= v9[v3];
  #L3a4c98.  call temp:= `getPositions`(v8) @signature `Lcom/airbnb/lottie/model/content/GradientColor;.getPositions:()[F` @kind virtual;
  #L3a4c9e.  v0:= temp @kind object;
  #L3a4ca0.  v0:= v0[v3];
  #L3a4ca4.  v4:= (`double`) v0 @kind f2d;
  #L3a4ca6.  call temp:= `b`(v7, v4, v2, v1) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.b:(D[D[D)I` @kind direct;
  #L3a4cac.  v0:= temp;
  #L3a4cae.  call temp:= `red`(v9) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L3a4cb4.  v4:= temp;
  #L3a4cb6.  call temp:= `green`(v9) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L3a4cbc.  v5:= temp;
  #L3a4cbe.  call temp:= `blue`(v9) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L3a4cc4.  v9:= temp;
  #L3a4cc6.  call temp:= `argb`(v0, v4, v5, v9) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L3a4ccc.  v9:= temp;
  #L3a4cce.  call temp:= `getColors`(v8) @signature `Lcom/airbnb/lottie/model/content/GradientColor;.getColors:()[I` @kind virtual;
  #L3a4cd4.  v0:= temp @kind object;
  #L3a4cd6.  v0[v3]:= v9;
  #L3a4cda.  v3:= v3 + 1;
  #L3a4cde.  goto L3a4c80;
  #L3a4ce0.  return @kind void;
}
procedure `int` `b`(`com.airbnb.lottie.parser.GradientColorParser` v19 @kind this, `double` v20 , `double`[] v22 @kind object, `double`[] v23 @kind object) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.b:(D[D[D)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L3a4b3c.  v0:= v22 @kind object;
  #L3a4b40.  v1:= v23 @kind object;
  #L3a4b44.  v2:= 1I;
  #L3a4b46.  v3:= 1I;
  #L3a4b48.  v4:= length @variable v0;
  #L3a4b4a.  v5:= 255.0D;
  #L3a4b54.  if v3 >= v4 then goto L3a4ba8;
  #L3a4b58.  v4:= v3 + -1;
  #L3a4b5c.  v7:= v0[v4] @kind wide;
  #L3a4b60.  v9:= v0[v3] @kind wide;
  #L3a4b64.  v11:= v0[v3] @kind wide;
  #L3a4b68.  v13:= dcmpl(v11, v20);
  #L3a4b6c.  if v13 < 0 then goto L3a4ba2;
  #L3a4b70.  v11:= v20 - v7 @kind double;
  #L3a4b74.  v9:= v9 - v7 @kind double;
  #L3a4b76.  v13:= v11 / v9 @kind double;
  #L3a4b7a.  v15:= 0L;
  #L3a4b7e.  v17:= 1.0D;
  #L3a4b82.  call temp:= `clamp`(v13, v15, v17) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(DDD)D` @kind static;
  #L3a4b88.  v11:= temp @kind wide;
  #L3a4b8a.  v7:= v1[v4] @kind wide;
  #L3a4b8e.  v9:= v1[v3] @kind wide;
  #L3a4b92.  call temp:= `lerp`(v7, v9, v11) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(DDD)D` @kind static;
  #L3a4b98.  v0:= temp @kind wide;
  #L3a4b9a.  v0:= v0 * v5 @kind double;
  #L3a4b9e.  v0:= (`int`) v0 @kind d2i;
  #L3a4ba0.  return v0;
  #L3a4ba2.  v3:= v3 + 1;
  #L3a4ba6.  goto L3a4b48;
  #L3a4ba8.  v0:= length @variable v1;
  #L3a4baa.  v0:= v0 - v2 @kind int;
  #L3a4bac.  v0:= v1[v0] @kind wide;
  #L3a4bb0.  goto L3a4b9a;
}
procedure `com.airbnb.lottie.model.content.GradientColor` `parse`(`com.airbnb.lottie.parser.GradientColorParser` v12 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v13 @kind object, `float` v14 ) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/content/GradientColor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3a4a14.  v14:= new `java.util.ArrayList`;
  #L3a4a18.  call `<init>`(v14) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a4a1e.  call temp:= `peek`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a4a24.  v0:= temp @kind object;
  #L3a4a26.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a4a2a.  v2:= 1I;
  #L3a4a2c.  v3:= 0I;
  #L3a4a2e.  if v0 != v1 then goto L3a4a36;
  #L3a4a32.  v0:= 1I;
  #L3a4a34.  goto L3a4a38;
  #L3a4a36.  v0:= 0I;
  #L3a4a38.  if v0 == 0 then goto L3a4a42;
  #L3a4a3c.  call `beginArray`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L3a4a42.  call temp:= `hasNext`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a4a48.  v1:= temp;
  #L3a4a4a.  if v1 == 0 then goto L3a4a68;
  #L3a4a4e.  call temp:= `nextDouble`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a4a54.  v4:= temp @kind wide;
  #L3a4a56.  v1:= (`float`) v4 @kind d2f;
  #L3a4a58.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3a4a5e.  v1:= temp @kind object;
  #L3a4a60.  call temp:= `add`(v14, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a4a66.  goto L3a4a42;
  #L3a4a68.  if v0 == 0 then goto L3a4a72;
  #L3a4a6c.  call `endArray`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L3a4a72.  v13:= v12.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int`;
  #L3a4a76.  v0:= -1I;
  #L3a4a78.  if v13 != v0 then goto L3a4a8c;
  #L3a4a7c.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a4a82.  v13:= temp;
  #L3a4a84.  v13:= v13 / 4;
  #L3a4a88.  v12.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int` := v13;
  #L3a4a8c.  v13:= v12.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int`;
  #L3a4a90.  v0:= new `float`[v13];
  #L3a4a94.  v13:= new `int`[v13];
  #L3a4a98.  v1:= 0I;
  #L3a4a9a.  v4:= 0I;
  #L3a4a9c.  v5:= v12.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int`;
  #L3a4aa0.  v5:= v5 * 4;
  #L3a4aa4.  if v3 >= v5 then goto L3a4b1a;
  #L3a4aa8.  v5:= v3 / 4;
  #L3a4aac.  call temp:= `get`(v14, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a4ab2.  v6:= temp @kind object;
  #L3a4ab4.  v6:= (`java.lang.Float`) v6 @kind object;
  #L3a4ab8.  call temp:= `floatValue`(v6) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3a4abe.  v6:= temp;
  #L3a4ac0.  v6:= (`double`) v6 @kind f2d;
  #L3a4ac2.  v8:= v3 %% 4;
  #L3a4ac6.  if v8 == 0 then goto L3a4b0e;
  #L3a4aca.  v9:= 255.0D;
  #L3a4ad4.  if v8 == v2 then goto L3a4b06;
  #L3a4ad8.  v11:= 2I;
  #L3a4ada.  if v8 == v11 then goto L3a4afe;
  #L3a4ade.  v11:= 3I;
  #L3a4ae0.  if v8 == v11 then goto L3a4ae6;
  #L3a4ae4.  goto L3a4b14;
  #L3a4ae6.  v6:= v6 * v9 @kind double;
  #L3a4aea.  v6:= (`int`) v6 @kind d2i;
  #L3a4aec.  v7:= 255I;
  #L3a4af0.  call temp:= `argb`(v7, v1, v4, v6) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L3a4af6.  v6:= temp;
  #L3a4af8.  v13[v5]:= v6;
  #L3a4afc.  goto L3a4b14;
  #L3a4afe.  v6:= v6 * v9 @kind double;
  #L3a4b02.  v4:= (`int`) v6 @kind d2i;
  #L3a4b04.  goto L3a4b14;
  #L3a4b06.  v6:= v6 * v9 @kind double;
  #L3a4b0a.  v1:= (`int`) v6 @kind d2i;
  #L3a4b0c.  goto L3a4b14;
  #L3a4b0e.  v6:= (`float`) v6 @kind d2f;
  #L3a4b10.  v0[v5]:= v6;
  #L3a4b14.  v3:= v3 + 1;
  #L3a4b18.  goto L3a4a9c;
  #L3a4b1a.  v1:= new `com.airbnb.lottie.model.content.GradientColor`;
  #L3a4b1e.  call `<init>`(v1, v0, v13) @signature `Lcom/airbnb/lottie/model/content/GradientColor;.<init>:([F[I)V` @kind direct;
  #L3a4b24.  call `a`(v12, v1, v14) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.a:(Lcom/airbnb/lottie/model/content/GradientColor;Ljava/util/List;)V` @kind direct;
  #L3a4b2a.  return v1 @kind object;
}
procedure `java.lang.Object` `parse`(`com.airbnb.lottie.parser.GradientColorParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a4bc4.  call temp:= `parse`(v0, v1, v2) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/content/GradientColor;` @kind virtual;
  #L3a4bca.  v1:= temp @kind object;
  #L3a4bcc.  return v1 @kind object;
}
