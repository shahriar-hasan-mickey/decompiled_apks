record `com.airbnb.lottie.parser.ShapeDataParser` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.parser.u` @kind interface {
}
global `com.airbnb.lottie.parser.ShapeDataParser` `@@com.airbnb.lottie.parser.ShapeDataParser.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.ShapeDataParser.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/ShapeDataParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a7ba8.  v0:= new `com.airbnb.lottie.parser.ShapeDataParser`;
  #L3a7bac.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/parser/ShapeDataParser;.<init>:()V` @kind direct;
  #L3a7bb2.  `@@com.airbnb.lottie.parser.ShapeDataParser.INSTANCE` @type ^`com.airbnb.lottie.parser.ShapeDataParser` := v0 @kind object;
  #L3a7bb6.  v0:= "c" @kind object;
  #L3a7bba.  v1:= "v" @kind object;
  #L3a7bbe.  v2:= "i" @kind object;
  #L3a7bc2.  v3:= "o" @kind object;
  #L3a7bc6.  temp:= new `java.lang.String`[v0, v1, v2, v3];
  #L3a7bcc.  v0:= temp @kind object;
  #L3a7bce.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a7bd4.  v0:= temp @kind object;
  #L3a7bd6.  `@@com.airbnb.lottie.parser.ShapeDataParser.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a7bda.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.ShapeDataParser` v0 @kind this) @signature `Lcom/airbnb/lottie/parser/ShapeDataParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a7bec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a7bf2.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapeData` `parse`(`com.airbnb.lottie.parser.ShapeDataParser` v12 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v13 @kind object, `float` v14 ) @signature `Lcom/airbnb/lottie/parser/ShapeDataParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/content/ShapeData;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3a79b0.  call temp:= `peek`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a79b6.  v0:= temp @kind object;
  #L3a79b8.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a79bc.  if v0 != v1 then goto L3a79c6;
  #L3a79c0.  call `beginArray`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L3a79c6.  call `beginObject`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L3a79cc.  v0:= 0I;
  #L3a79ce.  v1:= 0I;
  #L3a79d0.  v2:= v0 @kind object;
  #L3a79d2.  v3:= v2 @kind object;
  #L3a79d4.  v4:= 0I;
  #L3a79d6.  call temp:= `hasNext`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a79dc.  v5:= temp;
  #L3a79de.  v6:= 1I;
  #L3a79e0.  if v5 == 0 then goto L3a7a3a;
  #L3a79e4.  v5:= `@@com.airbnb.lottie.parser.ShapeDataParser.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a79e8.  call temp:= `selectName`(v13, v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a79ee.  v5:= temp;
  #L3a79f0.  if v5 == 0 then goto L3a7a30;
  #L3a79f4.  if v5 == v6 then goto L3a7a26;
  #L3a79f8.  v6:= 2I;
  #L3a79fa.  if v5 == v6 then goto L3a7a1c;
  #L3a79fe.  v6:= 3I;
  #L3a7a00.  if v5 == v6 then goto L3a7a12;
  #L3a7a04.  call `skipName`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L3a7a0a.  call `skipValue`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a7a10.  goto L3a79d6;
  #L3a7a12.  call temp:= `f`(v13, v14) @signature `Lcom/airbnb/lottie/parser/g;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/util/List;` @kind static;
  #L3a7a18.  v3:= temp @kind object;
  #L3a7a1a.  goto L3a79d6;
  #L3a7a1c.  call temp:= `f`(v13, v14) @signature `Lcom/airbnb/lottie/parser/g;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/util/List;` @kind static;
  #L3a7a22.  v2:= temp @kind object;
  #L3a7a24.  goto L3a79d6;
  #L3a7a26.  call temp:= `f`(v13, v14) @signature `Lcom/airbnb/lottie/parser/g;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/util/List;` @kind static;
  #L3a7a2c.  v0:= temp @kind object;
  #L3a7a2e.  goto L3a79d6;
  #L3a7a30.  call temp:= `nextBoolean`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L3a7a36.  v4:= temp;
  #L3a7a38.  goto L3a79d6;
  #L3a7a3a.  call `endObject`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L3a7a40.  call temp:= `peek`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3a7a46.  v14:= temp @kind object;
  #L3a7a48.  v5:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3a7a4c.  if v14 != v5 then goto L3a7a56;
  #L3a7a50.  call `endArray`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L3a7a56.  if v0 == 0 then goto L3a7b6c;
  #L3a7a5a.  if v2 == 0 then goto L3a7b6c;
  #L3a7a5e.  if v3 == 0 then goto L3a7b6c;
  #L3a7a62.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3a7a68.  v13:= temp;
  #L3a7a6a.  if v13 == 0 then goto L3a7a8c;
  #L3a7a6e.  v13:= new `com.airbnb.lottie.model.content.ShapeData`;
  #L3a7a72.  v14:= new `android.graphics.PointF`;
  #L3a7a76.  call `<init>`(v14) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L3a7a7c.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3a7a82.  v0:= temp @kind object;
  #L3a7a84.  call `<init>`(v13, v14, v1, v0) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.<init>:(Landroid/graphics/PointF;ZLjava/util/List;)V` @kind direct;
  #L3a7a8a.  return v13 @kind object;
  #L3a7a8c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a7a92.  v13:= temp;
  #L3a7a94.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a7a9a.  v14:= temp @kind object;
  #L3a7a9c.  v14:= (`android.graphics.PointF`) v14 @kind object;
  #L3a7aa0.  v5:= new `java.util.ArrayList`;
  #L3a7aa4.  call `<init>`(v5, v13) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3a7aaa.  v7:= 1I;
  #L3a7aac.  if v7 >= v13 then goto L3a7b0a;
  #L3a7ab0.  call temp:= `get`(v0, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a7ab6.  v8:= temp @kind object;
  #L3a7ab8.  v8:= (`android.graphics.PointF`) v8 @kind object;
  #L3a7abc.  v9:= v7 + -1;
  #L3a7ac0.  call temp:= `get`(v0, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a7ac6.  v10:= temp @kind object;
  #L3a7ac8.  v10:= (`android.graphics.PointF`) v10 @kind object;
  #L3a7acc.  call temp:= `get`(v3, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a7ad2.  v9:= temp @kind object;
  #L3a7ad4.  v9:= (`android.graphics.PointF`) v9 @kind object;
  #L3a7ad8.  call temp:= `get`(v2, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a7ade.  v11:= temp @kind object;
  #L3a7ae0.  v11:= (`android.graphics.PointF`) v11 @kind object;
  #L3a7ae4.  call temp:= `addPoints`(v10, v9) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.addPoints:(Landroid/graphics/PointF;Landroid/graphics/PointF;)Landroid/graphics/PointF;` @kind static;
  #L3a7aea.  v9:= temp @kind object;
  #L3a7aec.  call temp:= `addPoints`(v8, v11) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.addPoints:(Landroid/graphics/PointF;Landroid/graphics/PointF;)Landroid/graphics/PointF;` @kind static;
  #L3a7af2.  v10:= temp @kind object;
  #L3a7af4.  v11:= new `com.airbnb.lottie.model.CubicCurveData`;
  #L3a7af8.  call `<init>`(v11, v9, v10, v8) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.<init>:(Landroid/graphics/PointF;Landroid/graphics/PointF;Landroid/graphics/PointF;)V` @kind direct;
  #L3a7afe.  call temp:= `add`(v5, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a7b04.  v7:= v7 + 1;
  #L3a7b08.  goto L3a7aac;
  #L3a7b0a.  if v4 == 0 then goto L3a7b60;
  #L3a7b0e.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a7b14.  v7:= temp @kind object;
  #L3a7b16.  v7:= (`android.graphics.PointF`) v7 @kind object;
  #L3a7b1a.  v13:= v13 - v6 @kind int;
  #L3a7b1c.  call temp:= `get`(v0, v13) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a7b22.  v0:= temp @kind object;
  #L3a7b24.  v0:= (`android.graphics.PointF`) v0 @kind object;
  #L3a7b28.  call temp:= `get`(v3, v13) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a7b2e.  v13:= temp @kind object;
  #L3a7b30.  v13:= (`android.graphics.PointF`) v13 @kind object;
  #L3a7b34.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a7b3a.  v1:= temp @kind object;
  #L3a7b3c.  v1:= (`android.graphics.PointF`) v1 @kind object;
  #L3a7b40.  call temp:= `addPoints`(v0, v13) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.addPoints:(Landroid/graphics/PointF;Landroid/graphics/PointF;)Landroid/graphics/PointF;` @kind static;
  #L3a7b46.  v13:= temp @kind object;
  #L3a7b48.  call temp:= `addPoints`(v7, v1) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.addPoints:(Landroid/graphics/PointF;Landroid/graphics/PointF;)Landroid/graphics/PointF;` @kind static;
  #L3a7b4e.  v0:= temp @kind object;
  #L3a7b50.  v1:= new `com.airbnb.lottie.model.CubicCurveData`;
  #L3a7b54.  call `<init>`(v1, v13, v0, v7) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.<init>:(Landroid/graphics/PointF;Landroid/graphics/PointF;Landroid/graphics/PointF;)V` @kind direct;
  #L3a7b5a.  call temp:= `add`(v5, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a7b60.  v13:= new `com.airbnb.lottie.model.content.ShapeData`;
  #L3a7b64.  call `<init>`(v13, v14, v4, v5) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.<init>:(Landroid/graphics/PointF;ZLjava/util/List;)V` @kind direct;
  #L3a7b6a.  return v13 @kind object;
  #L3a7b6c.  v13:= new `java.lang.IllegalArgumentException`;
  #L3a7b70.  v14:= "Shape data was missing information." @kind object;
  #L3a7b74.  call `<init>`(v13, v14) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7b7a.  throw v13;
}
procedure `java.lang.Object` `parse`(`com.airbnb.lottie.parser.ShapeDataParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/ShapeDataParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a7b8c.  call temp:= `parse`(v0, v1, v2) @signature `Lcom/airbnb/lottie/parser/ShapeDataParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/content/ShapeData;` @kind virtual;
  #L3a7b92.  v1:= temp @kind object;
  #L3a7b94.  return v1 @kind object;
}
