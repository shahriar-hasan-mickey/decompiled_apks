record `com.airbnb.lottie.parser.a` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.a.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a40a0.  v0:= "nm" @kind object;
  #L3a40a4.  v1:= "p" @kind object;
  #L3a40a8.  v2:= "s" @kind object;
  #L3a40ac.  v3:= "hd" @kind object;
  #L3a40b0.  v4:= "d" @kind object;
  #L3a40b4.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4];
  #L3a40ba.  v0:= temp @kind object;
  #L3a40bc.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a40c2.  v0:= temp @kind object;
  #L3a40c4.  `@@com.airbnb.lottie.parser.a.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a40c8.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.CircleShape` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v10 @kind object, `com.airbnb.lottie.LottieComposition` v11 @kind object, `int` v12 ) @signature `Lcom/airbnb/lottie/parser/a;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;I)Lcom/airbnb/lottie/model/content/CircleShape;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3a3fec.  v0:= 1I;
  #L3a3fee.  v1:= 0I;
  #L3a3ff0.  v2:= 3I;
  #L3a3ff2.  if v12 != v2 then goto L3a3ffa;
  #L3a3ff6.  v12:= 1I;
  #L3a3ff8.  goto L3a3ffc;
  #L3a3ffa.  v12:= 0I;
  #L3a3ffc.  v3:= 0I;
  #L3a3ffe.  v8:= v12;
  #L3a4000.  v5:= v3 @kind object;
  #L3a4002.  v6:= v5 @kind object;
  #L3a4004.  v7:= v6 @kind object;
  #L3a4006.  v9:= 0I;
  #L3a4008.  call temp:= `hasNext`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a400e.  v12:= temp;
  #L3a4010.  if v12 == 0 then goto L3a4082;
  #L3a4014.  v12:= `@@com.airbnb.lottie.parser.a.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a4018.  call temp:= `selectName`(v10, v12) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a401e.  v12:= temp;
  #L3a4020.  if v12 == 0 then goto L3a4078;
  #L3a4024.  if v12 == v0 then goto L3a406e;
  #L3a4028.  v3:= 2I;
  #L3a402a.  if v12 == v3 then goto L3a4064;
  #L3a402e.  if v12 == v2 then goto L3a405a;
  #L3a4032.  v3:= 4I;
  #L3a4034.  if v12 == v3 then goto L3a4046;
  #L3a4038.  call `skipName`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L3a403e.  call `skipValue`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a4044.  goto L3a4008;
  #L3a4046.  call temp:= `nextInt`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextInt:()I` @kind virtual;
  #L3a404c.  v12:= temp;
  #L3a404e.  if v12 != v2 then goto L3a4056;
  #L3a4052.  v8:= 1I;
  #L3a4054.  goto L3a4008;
  #L3a4056.  v8:= 0I;
  #L3a4058.  goto L3a4008;
  #L3a405a.  call temp:= `nextBoolean`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L3a4060.  v9:= temp;
  #L3a4062.  goto L3a4008;
  #L3a4064.  call temp:= `g`(v10, v11) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;` @kind static;
  #L3a406a.  v7:= temp @kind object;
  #L3a406c.  goto L3a4008;
  #L3a406e.  call temp:= `a`(v10, v11) @signature `Lcom/airbnb/lottie/parser/AnimatablePathValueParser;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableValue;` @kind static;
  #L3a4074.  v6:= temp @kind object;
  #L3a4076.  goto L3a4008;
  #L3a4078.  call temp:= `nextString`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a407e.  v5:= temp @kind object;
  #L3a4080.  goto L3a4008;
  #L3a4082.  v10:= new `com.airbnb.lottie.model.content.CircleShape`;
  #L3a4086.  v4:= v10 @kind object;
  #L3a4088.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lcom/airbnb/lottie/model/content/CircleShape;.<init>:(Ljava/lang/String;Lcom/airbnb/lottie/model/animatable/AnimatableValue;Lcom/airbnb/lottie/model/animatable/AnimatablePointValue;ZZ)V` @kind direct;
  #L3a408e.  return v10 @kind object;
}
