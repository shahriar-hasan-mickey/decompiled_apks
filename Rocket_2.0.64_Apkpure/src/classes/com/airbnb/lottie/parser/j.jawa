record `com.airbnb.lottie.parser.j` @kind class @AccessFlag  {
}
procedure `com.airbnb.lottie.model.content.Mask` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v11 @kind object, `com.airbnb.lottie.LottieComposition` v12 @kind object) @signature `Lcom/airbnb/lottie/parser/j;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/Mask;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3a7120.  call `beginObject`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L3a7126.  v0:= 0I;
  #L3a7128.  v1:= 0I;
  #L3a712a.  v2:= v1 @kind object;
  #L3a712c.  v3:= v2 @kind object;
  #L3a712e.  v4:= 0I;
  #L3a7130.  call temp:= `hasNext`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a7136.  v5:= temp;
  #L3a7138.  if v5 == 0 then goto L3a72c8;
  #L3a713c.  call temp:= `nextName`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextName:()Ljava/lang/String;` @kind virtual;
  #L3a7142.  v5:= temp @kind object;
  #L3a7144.  call temp:= `hashCode`(v5) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a714a.  call temp:= `hashCode`(v5) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a7150.  v6:= temp;
  #L3a7152.  v7:= 3I;
  #L3a7154.  v8:= 2I;
  #L3a7156.  v9:= 1I;
  #L3a7158.  v10:= -1I;
  #L3a715a.  goto L3a72dc;
  #L3a7160.  v6:= -1I;
  #L3a7162.  goto L3a71ba;
  #L3a7164.  v6:= "mode" @kind object;
  #L3a7168.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a716e.  v6:= temp;
  #L3a7170.  if v6 != 0 then goto L3a7176;
  #L3a7174.  goto L3a7160;
  #L3a7176.  v6:= 3I;
  #L3a7178.  goto L3a71ba;
  #L3a717a.  v6:= "inv" @kind object;
  #L3a717e.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a7184.  v6:= temp;
  #L3a7186.  if v6 != 0 then goto L3a718c;
  #L3a718a.  goto L3a7160;
  #L3a718c.  v6:= 2I;
  #L3a718e.  goto L3a71ba;
  #L3a7190.  v6:= "pt" @kind object;
  #L3a7194.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a719a.  v6:= temp;
  #L3a719c.  if v6 != 0 then goto L3a71a2;
  #L3a71a0.  goto L3a7160;
  #L3a71a2.  v6:= 1I;
  #L3a71a4.  goto L3a71ba;
  #L3a71a6.  v6:= "o" @kind object;
  #L3a71aa.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a71b0.  v6:= temp;
  #L3a71b2.  if v6 != 0 then goto L3a71b8;
  #L3a71b6.  goto L3a7160;
  #L3a71b8.  v6:= 0I;
  #L3a71ba.  goto L3a7300;
  #L3a71c0.  call `skipValue`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a71c6.  goto L3a7130;
  #L3a71c8.  call temp:= `nextString`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a71ce.  v1:= temp @kind object;
  #L3a71d0.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a71d6.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3a71dc.  v6:= temp;
  #L3a71de.  goto L3a7318;
  #L3a71e4.  v7:= -1I;
  #L3a71e6.  goto L3a723a;
  #L3a71e8.  v6:= "s" @kind object;
  #L3a71ec.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a71f2.  v1:= temp;
  #L3a71f4.  if v1 != 0 then goto L3a723a;
  #L3a71f8.  goto L3a71e4;
  #L3a71fa.  v6:= "n" @kind object;
  #L3a71fe.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a7204.  v1:= temp;
  #L3a7206.  if v1 != 0 then goto L3a720c;
  #L3a720a.  goto L3a71e4;
  #L3a720c.  v7:= 2I;
  #L3a720e.  goto L3a723a;
  #L3a7210.  v6:= "i" @kind object;
  #L3a7214.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a721a.  v1:= temp;
  #L3a721c.  if v1 != 0 then goto L3a7222;
  #L3a7220.  goto L3a71e4;
  #L3a7222.  v7:= 1I;
  #L3a7224.  goto L3a723a;
  #L3a7226.  v6:= "a" @kind object;
  #L3a722a.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a7230.  v1:= temp;
  #L3a7232.  if v1 != 0 then goto L3a7238;
  #L3a7236.  goto L3a71e4;
  #L3a7238.  v7:= 0I;
  #L3a723a.  goto L3a733c;
  #L3a7240.  v1:= new `java.lang.StringBuilder`;
  #L3a7244.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a724a.  v6:= "Unknown mask mode " @kind object;
  #L3a724e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7254.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a725a.  v5:= ". Defaulting to Add." @kind object;
  #L3a725e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7264.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a726a.  v1:= temp @kind object;
  #L3a726c.  call `warning`(v1) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;)V` @kind static;
  #L3a7272.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L3a7276.  goto L3a7130;
  #L3a727a.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_SUBTRACT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L3a727e.  goto L3a7130;
  #L3a7282.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_NONE` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L3a7286.  goto L3a7130;
  #L3a728a.  v1:= "Animation contains intersect masks. They are not supported but will be treated like add masks." @kind object;
  #L3a728e.  call `addWarning`(v12, v1) @signature `Lcom/airbnb/lottie/LottieComposition;.addWarning:(Ljava/lang/String;)V` @kind virtual;
  #L3a7294.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_INTERSECT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L3a7298.  goto L3a7130;
  #L3a729c.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L3a72a0.  goto L3a7130;
  #L3a72a4.  call temp:= `nextBoolean`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L3a72aa.  v4:= temp;
  #L3a72ac.  goto L3a7130;
  #L3a72b0.  call temp:= `i`(v11, v12) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.i:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableShapeValue;` @kind static;
  #L3a72b6.  v2:= temp @kind object;
  #L3a72b8.  goto L3a7130;
  #L3a72bc.  call temp:= `f`(v11, v12) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;` @kind static;
  #L3a72c2.  v3:= temp @kind object;
  #L3a72c4.  goto L3a7130;
  #L3a72c8.  call `endObject`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L3a72ce.  v11:= new `com.airbnb.lottie.model.content.Mask`;
  #L3a72d2.  call `<init>`(v11, v1, v2, v3, v4) @signature `Lcom/airbnb/lottie/model/content/Mask;.<init>:(Lcom/airbnb/lottie/model/content/Mask$MaskMode;Lcom/airbnb/lottie/model/animatable/AnimatableShapeValue;Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;Z)V` @kind direct;
  #L3a72d8.  return v11 @kind object;
  #L3a72da.  
  #L3a72dc.  switch v6
                  | 111 => goto L3a71a6
                  | 3588 => goto L3a7190
                  | 104433 => goto L3a717a
                  | 3357091 => goto L3a7164
                  | else => goto L3a7160;
  #L3a7300.  switch v6
                  | 0 => goto L3a72bc
                  | 1 => goto L3a72b0
                  | 2 => goto L3a72a4
                  | 3 => goto L3a71c8
                  | else => goto L3a71c0;
  #L3a7318.  switch v6
                  | 97 => goto L3a7226
                  | 105 => goto L3a7210
                  | 110 => goto L3a71fa
                  | 115 => goto L3a71e8
                  | else => goto L3a71e4;
  #L3a733c.  switch v7
                  | 0 => goto L3a729c
                  | 1 => goto L3a728a
                  | 2 => goto L3a7282
                  | 3 => goto L3a727a
                  | else => goto L3a7240;
}
