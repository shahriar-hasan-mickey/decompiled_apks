record `com.airbnb.lottie.parser.r` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.r.a` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a7e8c.  v0:= "nm" @kind object;
  #L3a7e90.  v1:= "ind" @kind object;
  #L3a7e94.  v2:= "ks" @kind object;
  #L3a7e98.  v3:= "hd" @kind object;
  #L3a7e9c.  temp:= new `java.lang.String`[v0, v1, v2, v3];
  #L3a7ea2.  v0:= temp @kind object;
  #L3a7ea4.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a7eaa.  v0:= temp @kind object;
  #L3a7eac.  `@@com.airbnb.lottie.parser.r.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a7eb0.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapePath` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v6 @kind object, `com.airbnb.lottie.LottieComposition` v7 @kind object) @signature `Lcom/airbnb/lottie/parser/r;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/ShapePath;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a7e08.  v0:= 0I;
  #L3a7e0a.  v1:= 0I;
  #L3a7e0c.  v2:= v1 @kind object;
  #L3a7e0e.  v3:= v2 @kind object;
  #L3a7e10.  v1:= 0I;
  #L3a7e12.  call temp:= `hasNext`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a7e18.  v4:= temp;
  #L3a7e1a.  if v4 == 0 then goto L3a7e70;
  #L3a7e1e.  v4:= `@@com.airbnb.lottie.parser.r.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a7e22.  call temp:= `selectName`(v6, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a7e28.  v4:= temp;
  #L3a7e2a.  if v4 == 0 then goto L3a7e66;
  #L3a7e2e.  v5:= 1I;
  #L3a7e30.  if v4 == v5 then goto L3a7e5c;
  #L3a7e34.  v5:= 2I;
  #L3a7e36.  if v4 == v5 then goto L3a7e52;
  #L3a7e3a.  v5:= 3I;
  #L3a7e3c.  if v4 == v5 then goto L3a7e48;
  #L3a7e40.  call `skipValue`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a7e46.  goto L3a7e12;
  #L3a7e48.  call temp:= `nextBoolean`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L3a7e4e.  v1:= temp;
  #L3a7e50.  goto L3a7e12;
  #L3a7e52.  call temp:= `i`(v6, v7) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.i:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableShapeValue;` @kind static;
  #L3a7e58.  v3:= temp @kind object;
  #L3a7e5a.  goto L3a7e12;
  #L3a7e5c.  call temp:= `nextInt`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextInt:()I` @kind virtual;
  #L3a7e62.  v0:= temp;
  #L3a7e64.  goto L3a7e12;
  #L3a7e66.  call temp:= `nextString`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a7e6c.  v2:= temp @kind object;
  #L3a7e6e.  goto L3a7e12;
  #L3a7e70.  v6:= new `com.airbnb.lottie.model.content.ShapePath`;
  #L3a7e74.  call `<init>`(v6, v2, v0, v3, v1) @signature `Lcom/airbnb/lottie/model/content/ShapePath;.<init>:(Ljava/lang/String;ILcom/airbnb/lottie/model/animatable/AnimatableShapeValue;Z)V` @kind direct;
  #L3a7e7a.  return v6 @kind object;
}
