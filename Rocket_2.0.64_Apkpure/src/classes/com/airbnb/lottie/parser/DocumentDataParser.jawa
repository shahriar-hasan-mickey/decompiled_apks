record `com.airbnb.lottie.parser.DocumentDataParser` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.parser.u` @kind interface {
}
global `com.airbnb.lottie.parser.DocumentDataParser` `@@com.airbnb.lottie.parser.DocumentDataParser.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.DocumentDataParser.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/DocumentDataParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3a46c0.  v0:= new `com.airbnb.lottie.parser.DocumentDataParser`;
  #L3a46c4.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/parser/DocumentDataParser;.<init>:()V` @kind direct;
  #L3a46ca.  `@@com.airbnb.lottie.parser.DocumentDataParser.INSTANCE` @type ^`com.airbnb.lottie.parser.DocumentDataParser` := v0 @kind object;
  #L3a46ce.  v1:= "t" @kind object;
  #L3a46d2.  v2:= "f" @kind object;
  #L3a46d6.  v3:= "s" @kind object;
  #L3a46da.  v4:= "j" @kind object;
  #L3a46de.  v5:= "tr" @kind object;
  #L3a46e2.  v6:= "lh" @kind object;
  #L3a46e6.  v7:= "ls" @kind object;
  #L3a46ea.  v8:= "fc" @kind object;
  #L3a46ee.  v9:= "sc" @kind object;
  #L3a46f2.  v10:= "sw" @kind object;
  #L3a46f6.  v11:= "of" @kind object;
  #L3a46fa.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11];
  #L3a4700.  v0:= temp @kind object;
  #L3a4702.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a4708.  v0:= temp @kind object;
  #L3a470a.  `@@com.airbnb.lottie.parser.DocumentDataParser.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a470e.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.DocumentDataParser` v0 @kind this) @signature `Lcom/airbnb/lottie/parser/DocumentDataParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a4720.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a4726.  return @kind void;
}
procedure `com.airbnb.lottie.model.DocumentData` `parse`(`com.airbnb.lottie.parser.DocumentDataParser` v17 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v18 @kind object, `float` v19 ) @signature `Lcom/airbnb/lottie/parser/DocumentDataParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/DocumentData;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3a4554.  v0:= `@@com.airbnb.lottie.model.DocumentData$Justification.CENTER` @type ^`com.airbnb.lottie.model.DocumentData$Justification` @kind object;
  #L3a4558.  call `beginObject`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L3a455e.  v1:= 0I;
  #L3a4560.  v2:= 0I;
  #L3a4562.  v3:= 0I;
  #L3a4564.  v4:= 1I;
  #L3a4566.  v9:= v0 @kind object;
  #L3a4568.  v6:= v1 @kind object;
  #L3a456a.  v7:= v6 @kind object;
  #L3a456c.  v8:= 0I;
  #L3a456e.  v10:= 0I;
  #L3a4570.  v11:= 0I;
  #L3a4572.  v12:= 0I;
  #L3a4574.  v13:= 0I;
  #L3a4576.  v14:= 0I;
  #L3a4578.  v15:= 0I;
  #L3a457a.  v16:= 1I;
  #L3a457e.  call temp:= `hasNext`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a4584.  v0:= temp;
  #L3a4586.  if v0 == 0 then goto L3a4646;
  #L3a458a.  v0:= `@@com.airbnb.lottie.parser.DocumentDataParser.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a458e.  v1:= v18 @kind object;
  #L3a4592.  call temp:= `selectName`(v1, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a4598.  v0:= temp;
  #L3a459a.  goto L3a4660;
  #L3a45a0.  call `skipName`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L3a45a6.  call `skipValue`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a45ac.  goto L3a457e;
  #L3a45ae.  call temp:= `nextBoolean`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L3a45b4.  v16:= temp;
  #L3a45b6.  goto L3a457e;
  #L3a45b8.  call temp:= `nextDouble`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a45be.  v2:= temp @kind wide;
  #L3a45c0.  v15:= (`float`) v2 @kind d2f;
  #L3a45c2.  goto L3a457e;
  #L3a45c4.  call temp:= `d`(v18) @signature `Lcom/airbnb/lottie/parser/g;.d:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)I` @kind static;
  #L3a45ca.  v14:= temp;
  #L3a45cc.  goto L3a457e;
  #L3a45ce.  call temp:= `d`(v18) @signature `Lcom/airbnb/lottie/parser/g;.d:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)I` @kind static;
  #L3a45d4.  v13:= temp;
  #L3a45d6.  goto L3a457e;
  #L3a45d8.  call temp:= `nextDouble`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a45de.  v2:= temp @kind wide;
  #L3a45e0.  v12:= (`float`) v2 @kind d2f;
  #L3a45e2.  goto L3a457e;
  #L3a45e4.  call temp:= `nextDouble`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a45ea.  v2:= temp @kind wide;
  #L3a45ec.  v11:= (`float`) v2 @kind d2f;
  #L3a45ee.  goto L3a457e;
  #L3a45f0.  call temp:= `nextInt`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextInt:()I` @kind virtual;
  #L3a45f6.  v10:= temp;
  #L3a45f8.  goto L3a457e;
  #L3a45fa.  call temp:= `nextInt`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextInt:()I` @kind virtual;
  #L3a4600.  v0:= temp;
  #L3a4602.  v9:= `@@com.airbnb.lottie.model.DocumentData$Justification.CENTER` @type ^`com.airbnb.lottie.model.DocumentData$Justification` @kind object;
  #L3a4606.  call temp:= `ordinal`(v9) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3a460c.  v2:= temp;
  #L3a460e.  if v0 > v2 then goto L3a457e;
  #L3a4612.  if v0 >= 0 then goto L3a4618;
  #L3a4616.  goto L3a457e;
  #L3a4618.  call temp:= `values`() @signature `Lcom/airbnb/lottie/model/DocumentData$Justification;.values:()[Lcom/airbnb/lottie/model/DocumentData$Justification;` @kind static;
  #L3a461e.  v2:= temp @kind object;
  #L3a4620.  v9:= v2[v0] @kind object;
  #L3a4624.  goto L3a457e;
  #L3a4626.  call temp:= `nextDouble`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L3a462c.  v2:= temp @kind wide;
  #L3a462e.  v8:= (`float`) v2 @kind d2f;
  #L3a4630.  goto L3a457e;
  #L3a4632.  call temp:= `nextString`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a4638.  v7:= temp @kind object;
  #L3a463a.  goto L3a457e;
  #L3a463c.  call temp:= `nextString`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a4642.  v6:= temp @kind object;
  #L3a4644.  goto L3a457e;
  #L3a4646.  v1:= v18 @kind object;
  #L3a464a.  call `endObject`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L3a4650.  v0:= new `com.airbnb.lottie.model.DocumentData`;
  #L3a4654.  v5:= v0 @kind object;
  #L3a4656.  call `<init>`(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/airbnb/lottie/model/DocumentData;.<init>:(Ljava/lang/String;Ljava/lang/String;FLcom/airbnb/lottie/model/DocumentData$Justification;IFFIIFZ)V` @kind direct;
  #L3a465c.  return v0 @kind object;
  #L3a465e.  
  #L3a4660.  switch v0
                  | 0 => goto L3a463c
                  | 1 => goto L3a4632
                  | 2 => goto L3a4626
                  | 3 => goto L3a45fa
                  | 4 => goto L3a45f0
                  | 5 => goto L3a45e4
                  | 6 => goto L3a45d8
                  | 7 => goto L3a45ce
                  | 8 => goto L3a45c4
                  | 9 => goto L3a45b8
                  | 10 => goto L3a45ae
                  | else => goto L3a45a0;
}
procedure `java.lang.Object` `parse`(`com.airbnb.lottie.parser.DocumentDataParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/DocumentDataParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a46a4.  call temp:= `parse`(v0, v1, v2) @signature `Lcom/airbnb/lottie/parser/DocumentDataParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/DocumentData;` @kind virtual;
  #L3a46aa.  v1:= temp @kind object;
  #L3a46ac.  return v1 @kind object;
}
