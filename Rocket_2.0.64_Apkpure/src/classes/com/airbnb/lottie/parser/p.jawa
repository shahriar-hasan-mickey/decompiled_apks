record `com.airbnb.lottie.parser.p` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.p.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a7cf8.  v0:= "nm" @kind object;
  #L3a7cfc.  v1:= "c" @kind object;
  #L3a7d00.  v2:= "o" @kind object;
  #L3a7d04.  v3:= "fillEnabled" @kind object;
  #L3a7d08.  v4:= "r" @kind object;
  #L3a7d0c.  v5:= "hd" @kind object;
  #L3a7d10.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5];
  #L3a7d16.  v0:= temp @kind object;
  #L3a7d18.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3a7d1e.  v0:= temp @kind object;
  #L3a7d20.  `@@com.airbnb.lottie.parser.p.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3a7d24.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapeFill` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v10 @kind object, `com.airbnb.lottie.LottieComposition` v11 @kind object) @signature `Lcom/airbnb/lottie/parser/p;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/ShapeFill;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3a7c04.  v0:= 0I;
  #L3a7c06.  v1:= 1I;
  #L3a7c08.  v2:= 0I;
  #L3a7c0a.  v4:= v2 @kind object;
  #L3a7c0c.  v7:= v4 @kind object;
  #L3a7c0e.  v0:= 1I;
  #L3a7c10.  v5:= 0I;
  #L3a7c12.  v9:= 0I;
  #L3a7c14.  call temp:= `hasNext`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3a7c1a.  v3:= temp;
  #L3a7c1c.  if v3 == 0 then goto L3a7c96;
  #L3a7c20.  v3:= `@@com.airbnb.lottie.parser.p.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3a7c24.  call temp:= `selectName`(v10, v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3a7c2a.  v3:= temp;
  #L3a7c2c.  if v3 == 0 then goto L3a7c8c;
  #L3a7c30.  if v3 == v1 then goto L3a7c82;
  #L3a7c34.  v6:= 2I;
  #L3a7c36.  if v3 == v6 then goto L3a7c78;
  #L3a7c3a.  v6:= 3I;
  #L3a7c3c.  if v3 == v6 then goto L3a7c6e;
  #L3a7c40.  v6:= 4I;
  #L3a7c42.  if v3 == v6 then goto L3a7c64;
  #L3a7c46.  v6:= 5I;
  #L3a7c48.  if v3 == v6 then goto L3a7c5a;
  #L3a7c4c.  call `skipName`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L3a7c52.  call `skipValue`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3a7c58.  goto L3a7c14;
  #L3a7c5a.  call temp:= `nextBoolean`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L3a7c60.  v9:= temp;
  #L3a7c62.  goto L3a7c14;
  #L3a7c64.  call temp:= `nextInt`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextInt:()I` @kind virtual;
  #L3a7c6a.  v0:= temp;
  #L3a7c6c.  goto L3a7c14;
  #L3a7c6e.  call temp:= `nextBoolean`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L3a7c74.  v5:= temp;
  #L3a7c76.  goto L3a7c14;
  #L3a7c78.  call temp:= `f`(v10, v11) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;` @kind static;
  #L3a7c7e.  v2:= temp @kind object;
  #L3a7c80.  goto L3a7c14;
  #L3a7c82.  call temp:= `c`(v10, v11) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableColorValue;` @kind static;
  #L3a7c88.  v7:= temp @kind object;
  #L3a7c8a.  goto L3a7c14;
  #L3a7c8c.  call temp:= `nextString`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L3a7c92.  v4:= temp @kind object;
  #L3a7c94.  goto L3a7c14;
  #L3a7c96.  if v2 != 0 then goto L3a7cc6;
  #L3a7c9a.  v10:= new `com.airbnb.lottie.model.animatable.AnimatableIntegerValue`;
  #L3a7c9e.  v11:= new `com.airbnb.lottie.value.Keyframe`;
  #L3a7ca2.  v2:= 100I;
  #L3a7ca6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a7cac.  v2:= temp @kind object;
  #L3a7cae.  call `<init>`(v11, v2) @signature `Lcom/airbnb/lottie/value/Keyframe;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3a7cb4.  call temp:= `singletonList`(v11) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3a7cba.  v11:= temp @kind object;
  #L3a7cbc.  call `<init>`(v10, v11) @signature `Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3a7cc2.  v8:= v10 @kind object;
  #L3a7cc4.  goto L3a7cc8;
  #L3a7cc6.  v8:= v2 @kind object;
  #L3a7cc8.  if v0 != v1 then goto L3a7cd2;
  #L3a7ccc.  v10:= `@@android.graphics.Path$FillType.WINDING` @type ^`android.graphics.Path$FillType` @kind object;
  #L3a7cd0.  goto L3a7cd6;
  #L3a7cd2.  v10:= `@@android.graphics.Path$FillType.EVEN_ODD` @type ^`android.graphics.Path$FillType` @kind object;
  #L3a7cd6.  v6:= v10 @kind object;
  #L3a7cd8.  v10:= new `com.airbnb.lottie.model.content.ShapeFill`;
  #L3a7cdc.  v3:= v10 @kind object;
  #L3a7cde.  call `<init>`(v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/airbnb/lottie/model/content/ShapeFill;.<init>:(Ljava/lang/String;ZLandroid/graphics/Path$FillType;Lcom/airbnb/lottie/model/animatable/AnimatableColorValue;Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;Z)V` @kind direct;
  #L3a7ce4.  return v10 @kind object;
}
