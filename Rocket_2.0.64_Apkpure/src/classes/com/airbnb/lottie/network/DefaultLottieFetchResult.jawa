record `com.airbnb.lottie.network.DefaultLottieFetchResult` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.network.LottieFetchResult` @kind interface {
  `java.net.HttpURLConnection` `com.airbnb.lottie.network.DefaultLottieFetchResult.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v0 @kind this, `java.net.HttpURLConnection` v1 @kind object) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.<init>:(Ljava/net/HttpURLConnection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a2c24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a2c2a.  v0.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` := v1 @kind object;
  #L3a2c2e.  return @kind void;
}
procedure `java.lang.String` `a`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v2 @kind this, `java.net.HttpURLConnection` v3 @kind object) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.a:(Ljava/net/HttpURLConnection;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3a2b80.  v0:= new `java.io.BufferedReader`;
  #L3a2b84.  v1:= new `java.io.InputStreamReader`;
  #L3a2b88.  call temp:= `getErrorStream`(v3) @signature `Ljava/net/HttpURLConnection;.getErrorStream:()Ljava/io/InputStream;` @kind virtual;
  #L3a2b8e.  v3:= temp @kind object;
  #L3a2b90.  call `<init>`(v1, v3) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3a2b96.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L3a2b9c.  v3:= new `java.lang.StringBuilder`;
  #L3a2ba0.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a2ba6.  call temp:= `readLine`(v0) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L3a2bac.  v1:= temp @kind object;
  #L3a2bae.  if v1 == 0 then goto L3a2bc4;
  #L3a2bb2.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a2bb8.  v1:= 10I;
  #L3a2bbc.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a2bc2.  goto L3a2ba6;
  #L3a2bc4.  call `close`(v0) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L3a2bca.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a2bd0.  v3:= temp @kind object;
  #L3a2bd2.  return v3 @kind object;
  #L3a2bd4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3a2bd6.  goto L3a2bdc;
  #L3a2bd8.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L3a2bda.  throw v3;
  #L3a2bdc.  call `close`(v0) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L3a2be2.  throw v3;
  catch `java.lang.Exception` @[L3a2ba6..L3a2bc2] goto L3a2bd8;
  catch `java.lang.Throwable` @[L3a2ba6..L3a2bc2] goto L3a2bd4;
  catch `java.lang.Exception` @[L3a2bc4..L3a2bca] goto L3a2bca;
  catch `java.lang.Throwable` @[L3a2bda..L3a2bdc] goto L3a2bd4;
  catch `java.lang.Exception` @[L3a2bdc..L3a2be2] goto L3a2be2;
}
procedure `java.io.InputStream` `bodyByteStream`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v1 @kind this) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.bodyByteStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a2a90.  v0:= v1.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L3a2a94.  call temp:= `getInputStream`(v0) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L3a2a9a.  v0:= temp @kind object;
  #L3a2a9c.  return v0 @kind object;
}
procedure `void` `close`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v1 @kind this) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a2c40.  v0:= v1.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L3a2c44.  call `disconnect`(v0) @signature `Ljava/net/HttpURLConnection;.disconnect:()V` @kind virtual;
  #L3a2c4a.  return @kind void;
}
procedure `java.lang.String` `contentType`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v1 @kind this) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.contentType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a2ab0.  v0:= v1.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L3a2ab4.  call temp:= `getContentType`(v0) @signature `Ljava/net/HttpURLConnection;.getContentType:()Ljava/lang/String;` @kind virtual;
  #L3a2aba.  v0:= temp @kind object;
  #L3a2abc.  return v0 @kind object;
}
procedure `java.lang.String` `error`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v2 @kind this) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.error:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a2ad0.  call temp:= `isSuccessful`(v2) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.isSuccessful:()Z` @kind virtual;
  #L3a2ad6.  v0:= temp;
  #L3a2ad8.  if v0 == 0 then goto L3a2ae0;
  #L3a2adc.  v0:= 0I;
  #L3a2ade.  goto L3a2b46;
  #L3a2ae0.  v0:= new `java.lang.StringBuilder`;
  #L3a2ae4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a2aea.  v1:= "Unable to fetch " @kind object;
  #L3a2aee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a2af4.  v1:= v2.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L3a2af8.  call temp:= `getURL`(v1) @signature `Ljava/net/HttpURLConnection;.getURL:()Ljava/net/URL;` @kind virtual;
  #L3a2afe.  v1:= temp @kind object;
  #L3a2b00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a2b06.  v1:= ". Failed with " @kind object;
  #L3a2b0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a2b10.  v1:= v2.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L3a2b14.  call temp:= `getResponseCode`(v1) @signature `Ljava/net/HttpURLConnection;.getResponseCode:()I` @kind virtual;
  #L3a2b1a.  v1:= temp;
  #L3a2b1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a2b22.  v1:= "\n" @kind object;
  #L3a2b26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a2b2c.  v1:= v2.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L3a2b30.  call temp:= `a`(v2, v1) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.a:(Ljava/net/HttpURLConnection;)Ljava/lang/String;` @kind direct;
  #L3a2b36.  v1:= temp @kind object;
  #L3a2b38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a2b3e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a2b44.  v0:= temp @kind object;
  #L3a2b46.  return v0 @kind object;
  #L3a2b48.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3a2b4a.  v1:= "get error failed " @kind object;
  #L3a2b4e.  call `warning`(v1, v0) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L3a2b54.  call temp:= `getMessage`(v0) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3a2b5a.  v0:= temp @kind object;
  #L3a2b5c.  return v0 @kind object;
  catch `java.io.IOException` @[L3a2ad0..L3a2b46] goto L3a2b48;
}
procedure `boolean` `isSuccessful`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v3 @kind this) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.isSuccessful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a2a54.  v0:= 0I;
  #L3a2a56.  v1:= v3.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L3a2a5a.  call temp:= `getResponseCode`(v1) @signature `Ljava/net/HttpURLConnection;.getResponseCode:()I` @kind virtual;
  #L3a2a60.  v1:= temp;
  #L3a2a62.  v1:= v1 / 100;
  #L3a2a66.  v2:= 2I;
  #L3a2a68.  if v1 != v2 then goto L3a2a6e;
  #L3a2a6c.  v0:= 1I;
  #L3a2a6e.  return v0;
  catch `java.io.IOException` @[L3a2a56..L3a2a66] goto L3a2a6e;
}
