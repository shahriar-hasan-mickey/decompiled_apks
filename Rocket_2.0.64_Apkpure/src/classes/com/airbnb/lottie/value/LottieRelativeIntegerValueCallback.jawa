record `com.airbnb.lottie.value.LottieRelativeIntegerValueCallback` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.value.LottieValueCallback` @kind class {
}
procedure `void` `<init>`(`com.airbnb.lottie.value.LottieRelativeIntegerValueCallback` v0 @kind this) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ac8d8.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/value/LottieValueCallback;.<init>:()V` @kind direct;
  #L3ac8de.  return @kind void;
}
procedure `java.lang.Integer` `getOffset`(`com.airbnb.lottie.value.LottieRelativeIntegerValueCallback` v1 @kind this, `com.airbnb.lottie.value.LottieFrameInfo` v2 @kind object) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.getOffset:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ac828.  v2:= v1.`com.airbnb.lottie.value.LottieValueCallback.value` @type ^`java.lang.Object` @kind object;
  #L3ac82c.  if v2 == 0 then goto L3ac836;
  #L3ac830.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L3ac834.  return v2 @kind object;
  #L3ac836.  v2:= new `java.lang.IllegalArgumentException`;
  #L3ac83a.  v0:= "You must provide a static value in the constructor , call setValue, or override getValue." @kind object;
  #L3ac83e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac844.  throw v2;
}
procedure `java.lang.Integer` `getValue`(`com.airbnb.lottie.value.LottieRelativeIntegerValueCallback` v3 @kind this, `com.airbnb.lottie.value.LottieFrameInfo` v4 @kind object) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.getValue:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ac858.  call temp:= `getStartValue`(v4) @signature `Lcom/airbnb/lottie/value/LottieFrameInfo;.getStartValue:()Ljava/lang/Object;` @kind virtual;
  #L3ac85e.  v0:= temp @kind object;
  #L3ac860.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3ac864.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3ac86a.  v0:= temp;
  #L3ac86c.  call temp:= `getEndValue`(v4) @signature `Lcom/airbnb/lottie/value/LottieFrameInfo;.getEndValue:()Ljava/lang/Object;` @kind virtual;
  #L3ac872.  v1:= temp @kind object;
  #L3ac874.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L3ac878.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3ac87e.  v1:= temp;
  #L3ac880.  call temp:= `getInterpolatedKeyframeProgress`(v4) @signature `Lcom/airbnb/lottie/value/LottieFrameInfo;.getInterpolatedKeyframeProgress:()F` @kind virtual;
  #L3ac886.  v2:= temp;
  #L3ac888.  call temp:= `lerp`(v0, v1, v2) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(IIF)I` @kind static;
  #L3ac88e.  v0:= temp;
  #L3ac890.  call temp:= `getOffset`(v3, v4) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.getOffset:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Integer;` @kind virtual;
  #L3ac896.  v4:= temp @kind object;
  #L3ac898.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3ac89e.  v4:= temp;
  #L3ac8a0.  v0:= v0 + v4 @kind int;
  #L3ac8a2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ac8a8.  v4:= temp @kind object;
  #L3ac8aa.  return v4 @kind object;
}
procedure `java.lang.Object` `getValue`(`com.airbnb.lottie.value.LottieRelativeIntegerValueCallback` v0 @kind this, `com.airbnb.lottie.value.LottieFrameInfo` v1 @kind object) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.getValue:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ac8bc.  call temp:= `getValue`(v0, v1) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.getValue:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Integer;` @kind virtual;
  #L3ac8c2.  v1:= temp @kind object;
  #L3ac8c4.  return v1 @kind object;
}
