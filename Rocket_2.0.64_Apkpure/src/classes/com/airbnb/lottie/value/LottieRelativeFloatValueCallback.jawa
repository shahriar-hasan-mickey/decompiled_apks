record `com.airbnb.lottie.value.LottieRelativeFloatValueCallback` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.value.LottieValueCallback` @kind class {
}
procedure `void` `<init>`(`com.airbnb.lottie.value.LottieRelativeFloatValueCallback` v0 @kind this) @signature `Lcom/airbnb/lottie/value/LottieRelativeFloatValueCallback;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ac7f8.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/value/LottieValueCallback;.<init>:()V` @kind direct;
  #L3ac7fe.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.value.LottieRelativeFloatValueCallback` v0 @kind this, `java.lang.Float` v1 @kind object) @signature `Lcom/airbnb/lottie/value/LottieRelativeFloatValueCallback;.<init>:(Ljava/lang/Float;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ac810.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/value/LottieValueCallback;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ac816.  return @kind void;
}
procedure `java.lang.Float` `getOffset`(`com.airbnb.lottie.value.LottieRelativeFloatValueCallback` v1 @kind this, `com.airbnb.lottie.value.LottieFrameInfo` v2 @kind object) @signature `Lcom/airbnb/lottie/value/LottieRelativeFloatValueCallback;.getOffset:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ac748.  v2:= v1.`com.airbnb.lottie.value.LottieValueCallback.value` @type ^`java.lang.Object` @kind object;
  #L3ac74c.  if v2 == 0 then goto L3ac756;
  #L3ac750.  v2:= (`java.lang.Float`) v2 @kind object;
  #L3ac754.  return v2 @kind object;
  #L3ac756.  v2:= new `java.lang.IllegalArgumentException`;
  #L3ac75a.  v0:= "You must provide a static value in the constructor , call setValue, or override getValue." @kind object;
  #L3ac75e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac764.  throw v2;
}
procedure `java.lang.Float` `getValue`(`com.airbnb.lottie.value.LottieRelativeFloatValueCallback` v3 @kind this, `com.airbnb.lottie.value.LottieFrameInfo` v4 @kind object) @signature `Lcom/airbnb/lottie/value/LottieRelativeFloatValueCallback;.getValue:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ac778.  call temp:= `getStartValue`(v4) @signature `Lcom/airbnb/lottie/value/LottieFrameInfo;.getStartValue:()Ljava/lang/Object;` @kind virtual;
  #L3ac77e.  v0:= temp @kind object;
  #L3ac780.  v0:= (`java.lang.Float`) v0 @kind object;
  #L3ac784.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3ac78a.  v0:= temp;
  #L3ac78c.  call temp:= `getEndValue`(v4) @signature `Lcom/airbnb/lottie/value/LottieFrameInfo;.getEndValue:()Ljava/lang/Object;` @kind virtual;
  #L3ac792.  v1:= temp @kind object;
  #L3ac794.  v1:= (`java.lang.Float`) v1 @kind object;
  #L3ac798.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3ac79e.  v1:= temp;
  #L3ac7a0.  call temp:= `getInterpolatedKeyframeProgress`(v4) @signature `Lcom/airbnb/lottie/value/LottieFrameInfo;.getInterpolatedKeyframeProgress:()F` @kind virtual;
  #L3ac7a6.  v2:= temp;
  #L3ac7a8.  call temp:= `lerp`(v0, v1, v2) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L3ac7ae.  v0:= temp;
  #L3ac7b0.  call temp:= `getOffset`(v3, v4) @signature `Lcom/airbnb/lottie/value/LottieRelativeFloatValueCallback;.getOffset:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Float;` @kind virtual;
  #L3ac7b6.  v4:= temp @kind object;
  #L3ac7b8.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3ac7be.  v4:= temp;
  #L3ac7c0.  v0:= v0 + v4 @kind float;
  #L3ac7c2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3ac7c8.  v4:= temp @kind object;
  #L3ac7ca.  return v4 @kind object;
}
procedure `java.lang.Object` `getValue`(`com.airbnb.lottie.value.LottieRelativeFloatValueCallback` v0 @kind this, `com.airbnb.lottie.value.LottieFrameInfo` v1 @kind object) @signature `Lcom/airbnb/lottie/value/LottieRelativeFloatValueCallback;.getValue:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ac7dc.  call temp:= `getValue`(v0, v1) @signature `Lcom/airbnb/lottie/value/LottieRelativeFloatValueCallback;.getValue:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Float;` @kind virtual;
  #L3ac7e2.  v1:= temp @kind object;
  #L3ac7e4.  return v1 @kind object;
}
