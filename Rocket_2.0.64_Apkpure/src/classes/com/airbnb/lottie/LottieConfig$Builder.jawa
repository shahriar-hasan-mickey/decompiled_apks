record `com.airbnb.lottie.LottieConfig$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `com.airbnb.lottie.network.LottieNetworkFetcher` `com.airbnb.lottie.LottieConfig$Builder.a` @AccessFlag PRIVATE;
  `com.airbnb.lottie.network.LottieNetworkCacheProvider` `com.airbnb.lottie.LottieConfig$Builder.b` @AccessFlag PRIVATE;
  `boolean` `com.airbnb.lottie.LottieConfig$Builder.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.LottieConfig$Builder` v1 @kind this) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L392a98.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L392a9e.  v0:= 0I;
  #L392aa0.  v1.`com.airbnb.lottie.LottieConfig$Builder.c` @type ^`boolean` := v0 @kind boolean;
  #L392aa4.  return @kind void;
}
procedure `com.airbnb.lottie.LottieConfig` `build`(`com.airbnb.lottie.LottieConfig$Builder` v5 @kind this) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.build:()Lcom/airbnb/lottie/LottieConfig;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3929cc.  v0:= new `com.airbnb.lottie.LottieConfig`;
  #L3929d0.  v1:= v5.`com.airbnb.lottie.LottieConfig$Builder.a` @type ^`com.airbnb.lottie.network.LottieNetworkFetcher` @kind object;
  #L3929d4.  v2:= v5.`com.airbnb.lottie.LottieConfig$Builder.b` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind object;
  #L3929d8.  v3:= v5.`com.airbnb.lottie.LottieConfig$Builder.c` @type ^`boolean` @kind boolean;
  #L3929dc.  v4:= 0I;
  #L3929de.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/airbnb/lottie/LottieConfig;.<init>:(Lcom/airbnb/lottie/network/LottieNetworkFetcher;Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;ZLcom/airbnb/lottie/LottieConfig$a;)V` @kind direct;
  #L3929e4.  return v0 @kind object;
}
procedure `com.airbnb.lottie.LottieConfig$Builder` `setEnableSystraceMarkers`(`com.airbnb.lottie.LottieConfig$Builder` v0 @kind this, `boolean` v1 ) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.setEnableSystraceMarkers:(Z)Lcom/airbnb/lottie/LottieConfig$Builder;` @AccessFlag PUBLIC {
    temp;

  #L3929f8.  v0.`com.airbnb.lottie.LottieConfig$Builder.c` @type ^`boolean` := v1 @kind boolean;
  #L3929fc.  return v0 @kind object;
}
procedure `com.airbnb.lottie.LottieConfig$Builder` `setNetworkCacheDir`(`com.airbnb.lottie.LottieConfig$Builder` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.setNetworkCacheDir:(Ljava/io/File;)Lcom/airbnb/lottie/LottieConfig$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392a10.  v0:= v1.`com.airbnb.lottie.LottieConfig$Builder.b` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind object;
  #L392a14.  if v0 != 0 then goto L392a28;
  #L392a18.  v0:= new `com.airbnb.lottie.LottieConfig$Builder$a`;
  #L392a1c.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/LottieConfig$Builder$a;.<init>:(Lcom/airbnb/lottie/LottieConfig$Builder;Ljava/io/File;)V` @kind direct;
  #L392a22.  v1.`com.airbnb.lottie.LottieConfig$Builder.b` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` := v0 @kind object;
  #L392a26.  return v1 @kind object;
  #L392a28.  v2:= new `java.lang.IllegalStateException`;
  #L392a2c.  v0:= "There is already a cache provider!" @kind object;
  #L392a30.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L392a36.  throw v2;
}
procedure `com.airbnb.lottie.LottieConfig$Builder` `setNetworkCacheProvider`(`com.airbnb.lottie.LottieConfig$Builder` v1 @kind this, `com.airbnb.lottie.network.LottieNetworkCacheProvider` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.setNetworkCacheProvider:(Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;)Lcom/airbnb/lottie/LottieConfig$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392a48.  v0:= v1.`com.airbnb.lottie.LottieConfig$Builder.b` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind object;
  #L392a4c.  if v0 != 0 then goto L392a60;
  #L392a50.  v0:= new `com.airbnb.lottie.LottieConfig$Builder$b`;
  #L392a54.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/LottieConfig$Builder$b;.<init>:(Lcom/airbnb/lottie/LottieConfig$Builder;Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;)V` @kind direct;
  #L392a5a.  v1.`com.airbnb.lottie.LottieConfig$Builder.b` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` := v0 @kind object;
  #L392a5e.  return v1 @kind object;
  #L392a60.  v2:= new `java.lang.IllegalStateException`;
  #L392a64.  v0:= "There is already a cache provider!" @kind object;
  #L392a68.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L392a6e.  throw v2;
}
procedure `com.airbnb.lottie.LottieConfig$Builder` `setNetworkFetcher`(`com.airbnb.lottie.LottieConfig$Builder` v0 @kind this, `com.airbnb.lottie.network.LottieNetworkFetcher` v1 @kind object) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.setNetworkFetcher:(Lcom/airbnb/lottie/network/LottieNetworkFetcher;)Lcom/airbnb/lottie/LottieConfig$Builder;` @AccessFlag PUBLIC {
    temp;

  #L392a80.  v0.`com.airbnb.lottie.LottieConfig$Builder.a` @type ^`com.airbnb.lottie.network.LottieNetworkFetcher` := v1 @kind object;
  #L392a84.  return v0 @kind object;
}
