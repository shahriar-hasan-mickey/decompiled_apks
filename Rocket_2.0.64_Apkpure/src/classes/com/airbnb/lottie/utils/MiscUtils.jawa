record `com.airbnb.lottie.utils.MiscUtils` @kind class @AccessFlag PUBLIC {
}
global `android.graphics.PointF` `@@com.airbnb.lottie.utils.MiscUtils.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/utils/MiscUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ab634.  v0:= new `android.graphics.PointF`;
  #L3ab638.  call `<init>`(v0) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L3ab63e.  `@@com.airbnb.lottie.utils.MiscUtils.a` @type ^`android.graphics.PointF` := v0 @kind object;
  #L3ab642.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.utils.MiscUtils` v0 @kind this) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ab654.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ab65a.  return @kind void;
}
procedure `int` `a`(`int` v2 , `int` v3 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.a:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3ab5a0.  v0:= v2 / v3 @kind int;
  #L3ab5a4.  v1:= v2 ^~ v3 @kind int;
  #L3ab5a8.  if v1 < 0 then goto L3ab5b0;
  #L3ab5ac.  v1:= 1I;
  #L3ab5ae.  goto L3ab5b2;
  #L3ab5b0.  v1:= 0I;
  #L3ab5b2.  v2:= v2 %% v3 @kind int;
  #L3ab5b4.  if v1 != 0 then goto L3ab5c0;
  #L3ab5b8.  if v2 == 0 then goto L3ab5c0;
  #L3ab5bc.  v0:= v0 + -1;
  #L3ab5c0.  return v0;
}
procedure `android.graphics.PointF` `addPoints`(`android.graphics.PointF` v3 @kind object, `android.graphics.PointF` v4 @kind object) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.addPoints:(Landroid/graphics/PointF;Landroid/graphics/PointF;)Landroid/graphics/PointF;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab4a4.  v0:= new `android.graphics.PointF`;
  #L3ab4a8.  v1:= v3.`android.graphics.PointF.x` @type ^`float`;
  #L3ab4ac.  v2:= v4.`android.graphics.PointF.x` @type ^`float`;
  #L3ab4b0.  v1:= v1 + v2 @kind float;
  #L3ab4b2.  v3:= v3.`android.graphics.PointF.y` @type ^`float`;
  #L3ab4b6.  v4:= v4.`android.graphics.PointF.y` @type ^`float`;
  #L3ab4ba.  v3:= v3 + v4 @kind float;
  #L3ab4bc.  call `<init>`(v0, v1, v3) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L3ab4c2.  return v0 @kind object;
}
procedure `int` `b`(`float` v0 , `float` v1 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.b:(FF)I` @AccessFlag STATIC {
    temp;

  #L3ab5d4.  v0:= (`int`) v0 @kind f2i;
  #L3ab5d6.  v1:= (`int`) v1 @kind f2i;
  #L3ab5d8.  call temp:= `c`(v0, v1) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.c:(II)I` @kind static;
  #L3ab5de.  v0:= temp;
  #L3ab5e0.  return v0;
}
procedure `int` `c`(`int` v1 , `int` v2 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.c:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3ab5f4.  call temp:= `a`(v1, v2) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.a:(II)I` @kind static;
  #L3ab5fa.  v0:= temp;
  #L3ab5fc.  v2:= v2 * v0 @kind int;
  #L3ab600.  v1:= v1 - v2 @kind int;
  #L3ab602.  return v1;
}
procedure `double` `clamp`(`double` v0 , `double` v2 , `double` v4 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(DDD)D` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ab4fc.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(DD)D` @kind static;
  #L3ab502.  v0:= temp @kind wide;
  #L3ab504.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L3ab50a.  v0:= temp @kind wide;
  #L3ab50c.  return v0 @kind wide;
}
procedure `float` `clamp`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ab53c.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3ab542.  v0:= temp;
  #L3ab544.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3ab54a.  v0:= temp;
  #L3ab54c.  return v0;
}
procedure `int` `clamp`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(III)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ab57c.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ab582.  v0:= temp;
  #L3ab584.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ab58a.  v0:= temp;
  #L3ab58c.  return v0;
}
procedure `boolean` `contains`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.contains:(FFF)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ab4d4.  v1:= fcmpl(v0, v1);
  #L3ab4d8.  if v1 < 0 then goto L3ab4e8;
  #L3ab4dc.  v0:= fcmpg(v0, v2);
  #L3ab4e0.  if v0 > 0 then goto L3ab4e8;
  #L3ab4e4.  v0:= 1I;
  #L3ab4e6.  goto L3ab4ea;
  #L3ab4e8.  v0:= 0I;
  #L3ab4ea.  return v0;
}
procedure `void` `getPathFromData`(`com.airbnb.lottie.model.content.ShapeData` v11 @kind object, `android.graphics.Path` v12 @kind object) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.getPathFromData:(Lcom/airbnb/lottie/model/content/ShapeData;Landroid/graphics/Path;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3ab66c.  call `reset`(v12) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L3ab672.  call temp:= `getInitialPoint`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getInitialPoint:()Landroid/graphics/PointF;` @kind virtual;
  #L3ab678.  v0:= temp @kind object;
  #L3ab67a.  v1:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L3ab67e.  v2:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L3ab682.  call `moveTo`(v12, v1, v2) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L3ab688.  v1:= `@@com.airbnb.lottie.utils.MiscUtils.a` @type ^`android.graphics.PointF` @kind object;
  #L3ab68c.  v2:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L3ab690.  v0:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L3ab694.  call `set`(v1, v2, v0) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L3ab69a.  v0:= 0I;
  #L3ab69c.  call temp:= `getCurves`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L3ab6a2.  v1:= temp @kind object;
  #L3ab6a4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ab6aa.  v1:= temp;
  #L3ab6ac.  if v0 >= v1 then goto L3ab740;
  #L3ab6b0.  call temp:= `getCurves`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L3ab6b6.  v1:= temp @kind object;
  #L3ab6b8.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ab6be.  v1:= temp @kind object;
  #L3ab6c0.  v1:= (`com.airbnb.lottie.model.CubicCurveData`) v1 @kind object;
  #L3ab6c4.  call temp:= `getControlPoint1`(v1) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getControlPoint1:()Landroid/graphics/PointF;` @kind virtual;
  #L3ab6ca.  v2:= temp @kind object;
  #L3ab6cc.  call temp:= `getControlPoint2`(v1) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getControlPoint2:()Landroid/graphics/PointF;` @kind virtual;
  #L3ab6d2.  v3:= temp @kind object;
  #L3ab6d4.  call temp:= `getVertex`(v1) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getVertex:()Landroid/graphics/PointF;` @kind virtual;
  #L3ab6da.  v1:= temp @kind object;
  #L3ab6dc.  v4:= `@@com.airbnb.lottie.utils.MiscUtils.a` @type ^`android.graphics.PointF` @kind object;
  #L3ab6e0.  call temp:= `equals`(v2, v4) @signature `Landroid/graphics/PointF;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ab6e6.  v4:= temp;
  #L3ab6e8.  if v4 == 0 then goto L3ab708;
  #L3ab6ec.  call temp:= `equals`(v3, v1) @signature `Landroid/graphics/PointF;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ab6f2.  v4:= temp;
  #L3ab6f4.  if v4 == 0 then goto L3ab708;
  #L3ab6f8.  v2:= v1.`android.graphics.PointF.x` @type ^`float`;
  #L3ab6fc.  v3:= v1.`android.graphics.PointF.y` @type ^`float`;
  #L3ab700.  call `lineTo`(v12, v2, v3) @signature `Landroid/graphics/Path;.lineTo:(FF)V` @kind virtual;
  #L3ab706.  goto L3ab728;
  #L3ab708.  v5:= v2.`android.graphics.PointF.x` @type ^`float`;
  #L3ab70c.  v6:= v2.`android.graphics.PointF.y` @type ^`float`;
  #L3ab710.  v7:= v3.`android.graphics.PointF.x` @type ^`float`;
  #L3ab714.  v8:= v3.`android.graphics.PointF.y` @type ^`float`;
  #L3ab718.  v9:= v1.`android.graphics.PointF.x` @type ^`float`;
  #L3ab71c.  v10:= v1.`android.graphics.PointF.y` @type ^`float`;
  #L3ab720.  v4:= v12 @kind object;
  #L3ab722.  call `cubicTo`(v4, v5, v6, v7, v8, v9, v10) @signature `Landroid/graphics/Path;.cubicTo:(FFFFFF)V` @kind virtual;
  #L3ab728.  v2:= `@@com.airbnb.lottie.utils.MiscUtils.a` @type ^`android.graphics.PointF` @kind object;
  #L3ab72c.  v3:= v1.`android.graphics.PointF.x` @type ^`float`;
  #L3ab730.  v1:= v1.`android.graphics.PointF.y` @type ^`float`;
  #L3ab734.  call `set`(v2, v3, v1) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L3ab73a.  v0:= v0 + 1;
  #L3ab73e.  goto L3ab69c;
  #L3ab740.  call temp:= `isClosed`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.isClosed:()Z` @kind virtual;
  #L3ab746.  v11:= temp;
  #L3ab748.  if v11 == 0 then goto L3ab752;
  #L3ab74c.  call `close`(v12) @signature `Landroid/graphics/Path;.close:()V` @kind virtual;
  #L3ab752.  return @kind void;
}
procedure `double` `lerp`(`double` v0 , `double` v2 , `double` v4 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(DDD)D` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ab520.  v2:= v2 - v0 @kind double;
  #L3ab522.  v4:= v4 * v2 @kind double;
  #L3ab526.  v0:= v0 + v4 @kind double;
  #L3ab528.  return v0 @kind wide;
}
procedure `float` `lerp`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ab560.  v1:= v1 - v0 @kind float;
  #L3ab562.  v2:= v2 * v1 @kind float;
  #L3ab566.  v0:= v0 + v2 @kind float;
  #L3ab568.  return v0;
}
procedure `int` `lerp`(`int` v1 , `int` v2 , `float` v3 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(IIF)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ab614.  v0:= (`float`) v1 @kind i2f;
  #L3ab616.  v2:= v2 - v1 @kind int;
  #L3ab618.  v1:= (`float`) v2 @kind i2f;
  #L3ab61a.  v3:= v3 * v1 @kind float;
  #L3ab61e.  v0:= v0 + v3 @kind float;
  #L3ab620.  v1:= (`int`) v0 @kind f2i;
  #L3ab622.  return v1;
}
procedure `void` `resolveKeyPath`(`com.airbnb.lottie.model.KeyPath` v1 @kind object, `int` v2 , `java.util.List` v3 @kind object, `com.airbnb.lottie.model.KeyPath` v4 @kind object, `com.airbnb.lottie.animation.content.KeyPathElementContent` v5 @kind object) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.resolveKeyPath:(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;Lcom/airbnb/lottie/animation/content/KeyPathElementContent;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ab764.  call temp:= `getName`(v5) @signature `Lcom/airbnb/lottie/animation/content/Content;.getName:()Ljava/lang/String;` @kind interface;
  #L3ab76a.  v0:= temp @kind object;
  #L3ab76c.  call temp:= `fullyResolvesTo`(v1, v0, v2) @signature `Lcom/airbnb/lottie/model/KeyPath;.fullyResolvesTo:(Ljava/lang/String;I)Z` @kind virtual;
  #L3ab772.  v1:= temp;
  #L3ab774.  if v1 == 0 then goto L3ab796;
  #L3ab778.  call temp:= `getName`(v5) @signature `Lcom/airbnb/lottie/animation/content/Content;.getName:()Ljava/lang/String;` @kind interface;
  #L3ab77e.  v1:= temp @kind object;
  #L3ab780.  call temp:= `addKey`(v4, v1) @signature `Lcom/airbnb/lottie/model/KeyPath;.addKey:(Ljava/lang/String;)Lcom/airbnb/lottie/model/KeyPath;` @kind virtual;
  #L3ab786.  v1:= temp @kind object;
  #L3ab788.  call temp:= `resolve`(v1, v5) @signature `Lcom/airbnb/lottie/model/KeyPath;.resolve:(Lcom/airbnb/lottie/model/KeyPathElement;)Lcom/airbnb/lottie/model/KeyPath;` @kind virtual;
  #L3ab78e.  v1:= temp @kind object;
  #L3ab790.  call temp:= `add`(v3, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ab796.  return @kind void;
}
