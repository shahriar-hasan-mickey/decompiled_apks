record `com.airbnb.lottie.utils.LottieValueAnimator` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.utils.BaseLottieAnimator` @kind class, `android.view.Choreographer$FrameCallback` @kind interface {
  `float` `com.airbnb.lottie.utils.LottieValueAnimator.c` @AccessFlag PRIVATE;
  `boolean` `com.airbnb.lottie.utils.LottieValueAnimator.d` @AccessFlag PRIVATE;
  `long` `com.airbnb.lottie.utils.LottieValueAnimator.e` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.utils.LottieValueAnimator.f` @AccessFlag PRIVATE;
  `int` `com.airbnb.lottie.utils.LottieValueAnimator.g` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.utils.LottieValueAnimator.h` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.utils.LottieValueAnimator.i` @AccessFlag PRIVATE;
  `com.airbnb.lottie.LottieComposition` `com.airbnb.lottie.utils.LottieValueAnimator.j` @AccessFlag PRIVATE;
  `boolean` `com.airbnb.lottie.utils.LottieValueAnimator.running` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3aad94.  call `<init>`(v3) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.<init>:()V` @kind direct;
  #L3aad9a.  v0:= 1.0F;
  #L3aad9e.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.c` @type ^`float` := v0;
  #L3aada2.  v0:= 0I;
  #L3aada4.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.d` @type ^`boolean` := v0 @kind boolean;
  #L3aada8.  v1:= 0L;
  #L3aadac.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v1 @kind wide;
  #L3aadb0.  v1:= 0I;
  #L3aadb2.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v1;
  #L3aadb6.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.g` @type ^`int` := v0;
  #L3aadba.  v1:= -822083584I;
  #L3aadbe.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float` := v1;
  #L3aadc2.  v1:= 1325400064I;
  #L3aadc6.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float` := v1;
  #L3aadca.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.running` @type ^`boolean` := v0 @kind boolean;
  #L3aadce.  return @kind void;
}
procedure `float` `f`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.f:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3aac7c.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3aac80.  if v0 != 0 then goto L3aac8c;
  #L3aac84.  v0:= 2139095039I;
  #L3aac8a.  return v0;
  #L3aac8c.  v1:= 1315859240I;
  #L3aac92.  call temp:= `getFrameRate`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getFrameRate:()F` @kind virtual;
  #L3aac98.  v0:= temp;
  #L3aac9a.  v1:= v1 / v0 @kind float;
  #L3aac9c.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.c` @type ^`float`;
  #L3aaca0.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3aaca6.  v0:= temp;
  #L3aaca8.  v1:= v1 / v0 @kind float;
  #L3aacaa.  return v1;
}
procedure `boolean` `g`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3aab6c.  call temp:= `getSpeed`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getSpeed:()F` @kind virtual;
  #L3aab72.  v0:= temp;
  #L3aab74.  v1:= 0I;
  #L3aab76.  v0:= fcmpg(v0, v1);
  #L3aab7a.  if v0 >= 0 then goto L3aab82;
  #L3aab7e.  v0:= 1I;
  #L3aab80.  goto L3aab84;
  #L3aab82.  v0:= 0I;
  #L3aab84.  return v0;
}
procedure `void` `h`(`com.airbnb.lottie.utils.LottieValueAnimator` v4 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.h:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ab394.  v0:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3ab398.  if v0 != 0 then goto L3ab39e;
  #L3ab39c.  return @kind void;
  #L3ab39e.  v0:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3ab3a2.  v1:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float`;
  #L3ab3a6.  v1:= fcmpg(v0, v1);
  #L3ab3aa.  if v1 < 0 then goto L3ab3bc;
  #L3ab3ae.  v1:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float`;
  #L3ab3b2.  v0:= fcmpl(v0, v1);
  #L3ab3b6.  if v0 > 0 then goto L3ab3bc;
  #L3ab3ba.  return @kind void;
  #L3ab3bc.  v0:= new `java.lang.IllegalStateException`;
  #L3ab3c0.  v1:= 3I;
  #L3ab3c2.  v1:= new `java.lang.Object`[v1];
  #L3ab3c6.  v2:= 0I;
  #L3ab3c8.  v3:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float`;
  #L3ab3cc.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3ab3d2.  v3:= temp @kind object;
  #L3ab3d4.  v1[v2]:= v3 @kind object;
  #L3ab3d8.  v2:= 1I;
  #L3ab3da.  v3:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float`;
  #L3ab3de.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3ab3e4.  v3:= temp @kind object;
  #L3ab3e6.  v1[v2]:= v3 @kind object;
  #L3ab3ea.  v2:= 2I;
  #L3ab3ec.  v3:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3ab3f0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3ab3f6.  v3:= temp @kind object;
  #L3ab3f8.  v1[v2]:= v3 @kind object;
  #L3ab3fc.  v2:= "Frame must be [%f,%f]. It is %f" @kind object;
  #L3ab400.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3ab406.  v1:= temp @kind object;
  #L3ab408.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ab40e.  throw v0;
}
procedure `void` `cancel`(`com.airbnb.lottie.utils.LottieValueAnimator` v0 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L3aade0.  call `a`(v0) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.a:()V` @kind virtual;
  #L3aade6.  call `removeFrameCallback`(v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:()V` @kind virtual;
  #L3aadec.  return @kind void;
}
procedure `void` `clearComposition`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.clearComposition:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aae00.  v0:= 0I;
  #L3aae02.  v1.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` := v0 @kind object;
  #L3aae06.  v0:= -822083584I;
  #L3aae0a.  v1.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float` := v0;
  #L3aae0e.  v0:= 1325400064I;
  #L3aae12.  v1.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float` := v0;
  #L3aae16.  return @kind void;
}
procedure `void` `doFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v6 @kind this, `long` v7 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.doFrame:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3aae28.  call `postFrameCallback`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.postFrameCallback:()V` @kind virtual;
  #L3aae2e.  v0:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3aae32.  if v0 == 0 then goto L3aaf92;
  #L3aae36.  call temp:= `isRunning`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.isRunning:()Z` @kind virtual;
  #L3aae3c.  v0:= temp;
  #L3aae3e.  if v0 != 0 then goto L3aae46;
  #L3aae42.  goto L3aaf92;
  #L3aae46.  v0:= "LottieValueAnimator#doFrame" @kind object;
  #L3aae4a.  call `beginSection`(v0) @signature `Lcom/airbnb/lottie/L;.beginSection:(Ljava/lang/String;)V` @kind static;
  #L3aae50.  v1:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` @kind wide;
  #L3aae54.  v3:= 0L;
  #L3aae58.  v5:= lcmp(v1, v3);
  #L3aae5c.  if v5 != 0 then goto L3aae62;
  #L3aae60.  goto L3aae66;
  #L3aae62.  v3:= v7 - v1 @kind long;
  #L3aae66.  call temp:= `f`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.f:()F` @kind direct;
  #L3aae6c.  v1:= temp;
  #L3aae6e.  v2:= (`float`) v3 @kind l2f;
  #L3aae70.  v2:= v2 / v1 @kind float;
  #L3aae72.  v1:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3aae76.  call temp:= `g`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3aae7c.  v3:= temp;
  #L3aae7e.  if v3 == 0 then goto L3aae84;
  #L3aae82.  v2:= -v2 @kind float;
  #L3aae84.  v1:= v1 + v2 @kind float;
  #L3aae86.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v1;
  #L3aae8a.  call temp:= `getMinFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3aae90.  v2:= temp;
  #L3aae92.  call temp:= `getMaxFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3aae98.  v3:= temp;
  #L3aae9a.  call temp:= `contains`(v1, v2, v3) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.contains:(FFF)Z` @kind static;
  #L3aaea0.  v1:= temp;
  #L3aaea2.  v1:= v1 ^~ 1;
  #L3aaea6.  v2:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3aaeaa.  call temp:= `getMinFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3aaeb0.  v3:= temp;
  #L3aaeb2.  call temp:= `getMaxFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3aaeb8.  v4:= temp;
  #L3aaeba.  call temp:= `clamp`(v2, v3, v4) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L3aaec0.  v2:= temp;
  #L3aaec2.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v2;
  #L3aaec6.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v7 @kind wide;
  #L3aaeca.  call `e`(v6) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.e:()V` @kind virtual;
  #L3aaed0.  if v1 == 0 then goto L3aaf86;
  #L3aaed4.  call temp:= `getRepeatCount`(v6) @signature `Landroid/animation/ValueAnimator;.getRepeatCount:()I` @kind virtual;
  #L3aaeda.  v1:= temp;
  #L3aaedc.  v2:= -1I;
  #L3aaede.  if v1 == v2 then goto L3aaf2c;
  #L3aaee2.  v1:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.g` @type ^`int`;
  #L3aaee6.  call temp:= `getRepeatCount`(v6) @signature `Landroid/animation/ValueAnimator;.getRepeatCount:()I` @kind virtual;
  #L3aaeec.  v2:= temp;
  #L3aaeee.  if v1 < v2 then goto L3aaf2c;
  #L3aaef2.  v7:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.c` @type ^`float`;
  #L3aaef6.  v8:= 0I;
  #L3aaef8.  v7:= fcmpg(v7, v8);
  #L3aaefc.  if v7 >= 0 then goto L3aaf0a;
  #L3aaf00.  call temp:= `getMinFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3aaf06.  v7:= temp;
  #L3aaf08.  goto L3aaf12;
  #L3aaf0a.  call temp:= `getMaxFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3aaf10.  v7:= temp;
  #L3aaf12.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v7;
  #L3aaf16.  call `removeFrameCallback`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:()V` @kind virtual;
  #L3aaf1c.  call temp:= `g`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3aaf22.  v7:= temp;
  #L3aaf24.  call `b`(v6, v7) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.b:(Z)V` @kind virtual;
  #L3aaf2a.  goto L3aaf86;
  #L3aaf2c.  call `c`(v6) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.c:()V` @kind virtual;
  #L3aaf32.  v1:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.g` @type ^`int`;
  #L3aaf36.  v1:= v1 + 1;
  #L3aaf3a.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.g` @type ^`int` := v1;
  #L3aaf3e.  call temp:= `getRepeatMode`(v6) @signature `Landroid/animation/ValueAnimator;.getRepeatMode:()I` @kind virtual;
  #L3aaf44.  v1:= temp;
  #L3aaf46.  v2:= 2I;
  #L3aaf48.  if v1 != v2 then goto L3aaf60;
  #L3aaf4c.  v1:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.d` @type ^`boolean` @kind boolean;
  #L3aaf50.  v1:= v1 ^~ 1;
  #L3aaf54.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.d` @type ^`boolean` := v1 @kind boolean;
  #L3aaf58.  call `reverseAnimationSpeed`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.reverseAnimationSpeed:()V` @kind virtual;
  #L3aaf5e.  goto L3aaf82;
  #L3aaf60.  call temp:= `g`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3aaf66.  v1:= temp;
  #L3aaf68.  if v1 == 0 then goto L3aaf76;
  #L3aaf6c.  call temp:= `getMaxFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3aaf72.  v1:= temp;
  #L3aaf74.  goto L3aaf7e;
  #L3aaf76.  call temp:= `getMinFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3aaf7c.  v1:= temp;
  #L3aaf7e.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v1;
  #L3aaf82.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v7 @kind wide;
  #L3aaf86.  call `h`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.h:()V` @kind direct;
  #L3aaf8c.  call temp:= `endSection`(v0) @signature `Lcom/airbnb/lottie/L;.endSection:(Ljava/lang/String;)F` @kind static;
  #L3aaf92.  return @kind void;
}
procedure `void` `endAnimation`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.endAnimation:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aafa4.  call `removeFrameCallback`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:()V` @kind virtual;
  #L3aafaa.  call temp:= `g`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3aafb0.  v0:= temp;
  #L3aafb2.  call `b`(v1, v0) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.b:(Z)V` @kind virtual;
  #L3aafb8.  return @kind void;
}
procedure `float` `getAnimatedFraction`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getAnimatedFraction:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aabb0.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3aabb4.  if v0 != 0 then goto L3aabbc;
  #L3aabb8.  v0:= 0I;
  #L3aabba.  return v0;
  #L3aabbc.  call temp:= `g`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3aabc2.  v0:= temp;
  #L3aabc4.  if v0 == 0 then goto L3aabec;
  #L3aabc8.  call temp:= `getMaxFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3aabce.  v0:= temp;
  #L3aabd0.  v1:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3aabd4.  v0:= v0 - v1 @kind float;
  #L3aabd6.  call temp:= `getMaxFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3aabdc.  v1:= temp;
  #L3aabde.  call temp:= `getMinFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3aabe4.  v2:= temp;
  #L3aabe6.  v1:= v1 - v2 @kind float;
  #L3aabe8.  v0:= v0 / v1 @kind float;
  #L3aabea.  return v0;
  #L3aabec.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3aabf0.  call temp:= `getMinFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3aabf6.  v1:= temp;
  #L3aabf8.  v0:= v0 - v1 @kind float;
  #L3aabfa.  call temp:= `getMaxFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3aac00.  v1:= temp;
  #L3aac02.  call temp:= `getMinFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3aac08.  v2:= temp;
  #L3aac0a.  goto L3aabe6;
}
procedure `java.lang.Object` `getAnimatedValue`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getAnimatedValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aad44.  call temp:= `getAnimatedValueAbsolute`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getAnimatedValueAbsolute:()F` @kind virtual;
  #L3aad4a.  v0:= temp;
  #L3aad4c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3aad52.  v0:= temp @kind object;
  #L3aad54.  return v0 @kind object;
}
procedure `float` `getAnimatedValueAbsolute`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getAnimatedValueAbsolute:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aac1c.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3aac20.  if v0 != 0 then goto L3aac28;
  #L3aac24.  v0:= 0I;
  #L3aac26.  return v0;
  #L3aac28.  v1:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3aac2c.  call temp:= `getStartFrame`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L3aac32.  v0:= temp;
  #L3aac34.  v1:= v1 - v0 @kind float;
  #L3aac36.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3aac3a.  call temp:= `getEndFrame`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getEndFrame:()F` @kind virtual;
  #L3aac40.  v0:= temp;
  #L3aac42.  v2:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3aac46.  call temp:= `getStartFrame`(v2) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L3aac4c.  v2:= temp;
  #L3aac4e.  v0:= v0 - v2 @kind float;
  #L3aac50.  v1:= v1 / v0 @kind float;
  #L3aac52.  return v1;
}
procedure `long` `getDuration`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getDuration:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aad68.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3aad6c.  if v0 != 0 then goto L3aad76;
  #L3aad70.  v0:= 0L;
  #L3aad74.  goto L3aad80;
  #L3aad76.  call temp:= `getDuration`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getDuration:()F` @kind virtual;
  #L3aad7c.  v0:= temp;
  #L3aad7e.  v0:= (`long`) v0 @kind f2l;
  #L3aad80.  return v0 @kind wide;
}
procedure `float` `getFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getFrame:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aac64.  v0:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3aac68.  return v0;
}
procedure `float` `getMaxFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aacbc.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3aacc0.  if v0 != 0 then goto L3aacc8;
  #L3aacc4.  v0:= 0I;
  #L3aacc6.  return v0;
  #L3aacc8.  v1:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float`;
  #L3aaccc.  v2:= 1325400064I;
  #L3aacd0.  v2:= fcmpl(v1, v2);
  #L3aacd4.  if v2 != 0 then goto L3aace0;
  #L3aacd8.  call temp:= `getEndFrame`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getEndFrame:()F` @kind virtual;
  #L3aacde.  v1:= temp;
  #L3aace0.  return v1;
}
procedure `float` `getMinFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aacf4.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3aacf8.  if v0 != 0 then goto L3aad00;
  #L3aacfc.  v0:= 0I;
  #L3aacfe.  return v0;
  #L3aad00.  v1:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float`;
  #L3aad04.  v2:= -822083584I;
  #L3aad08.  v2:= fcmpl(v1, v2);
  #L3aad0c.  if v2 != 0 then goto L3aad18;
  #L3aad10.  call temp:= `getStartFrame`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L3aad16.  v1:= temp;
  #L3aad18.  return v1;
}
procedure `float` `getSpeed`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getSpeed:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aad2c.  v0:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.c` @type ^`float`;
  #L3aad30.  return v0;
}
procedure `boolean` `isRunning`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aab98.  v0:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.running` @type ^`boolean` @kind boolean;
  #L3aab9c.  return v0;
}
procedure `void` `pauseAnimation`(`com.airbnb.lottie.utils.LottieValueAnimator` v0 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.pauseAnimation:()V` @AccessFlag PUBLIC {
    temp;

  #L3aafcc.  call `removeFrameCallback`(v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:()V` @kind virtual;
  #L3aafd2.  return @kind void;
}
procedure `void` `playAnimation`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.playAnimation:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aafe4.  v0:= 1I;
  #L3aafe6.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.running` @type ^`boolean` := v0 @kind boolean;
  #L3aafea.  call temp:= `g`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3aaff0.  v0:= temp;
  #L3aaff2.  call `d`(v2, v0) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.d:(Z)V` @kind virtual;
  #L3aaff8.  call temp:= `g`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3aaffe.  v0:= temp;
  #L3ab000.  if v0 == 0 then goto L3ab00e;
  #L3ab004.  call temp:= `getMaxFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3ab00a.  v0:= temp;
  #L3ab00c.  goto L3ab016;
  #L3ab00e.  call temp:= `getMinFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3ab014.  v0:= temp;
  #L3ab016.  v0:= (`int`) v0 @kind f2i;
  #L3ab018.  v0:= (`float`) v0 @kind i2f;
  #L3ab01a.  call `setFrame`(v2, v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setFrame:(F)V` @kind virtual;
  #L3ab020.  v0:= 0L;
  #L3ab024.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v0 @kind wide;
  #L3ab028.  v0:= 0I;
  #L3ab02a.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.g` @type ^`int` := v0;
  #L3ab02e.  call `postFrameCallback`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.postFrameCallback:()V` @kind virtual;
  #L3ab034.  return @kind void;
}
procedure `void` `postFrameCallback`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.postFrameCallback:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3ab048.  call temp:= `isRunning`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.isRunning:()Z` @kind virtual;
  #L3ab04e.  v0:= temp;
  #L3ab050.  if v0 == 0 then goto L3ab06a;
  #L3ab054.  v0:= 0I;
  #L3ab056.  call `removeFrameCallback`(v1, v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:(Z)V` @kind virtual;
  #L3ab05c.  call temp:= `getInstance`() @signature `Landroid/view/Choreographer;.getInstance:()Landroid/view/Choreographer;` @kind static;
  #L3ab062.  v0:= temp @kind object;
  #L3ab064.  call `postFrameCallback`(v0, v1) @signature `Landroid/view/Choreographer;.postFrameCallback:(Landroid/view/Choreographer$FrameCallback;)V` @kind virtual;
  #L3ab06a.  return @kind void;
}
procedure `void` `removeFrameCallback`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3ab07c.  v0:= 1I;
  #L3ab07e.  call `removeFrameCallback`(v1, v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:(Z)V` @kind virtual;
  #L3ab084.  return @kind void;
}
procedure `void` `removeFrameCallback`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this, `boolean` v2 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:(Z)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3ab098.  call temp:= `getInstance`() @signature `Landroid/view/Choreographer;.getInstance:()Landroid/view/Choreographer;` @kind static;
  #L3ab09e.  v0:= temp @kind object;
  #L3ab0a0.  call `removeFrameCallback`(v0, v1) @signature `Landroid/view/Choreographer;.removeFrameCallback:(Landroid/view/Choreographer$FrameCallback;)V` @kind virtual;
  #L3ab0a6.  if v2 == 0 then goto L3ab0b0;
  #L3ab0aa.  v2:= 0I;
  #L3ab0ac.  v1.`com.airbnb.lottie.utils.LottieValueAnimator.running` @type ^`boolean` := v2 @kind boolean;
  #L3ab0b0.  return @kind void;
}
procedure `void` `resumeAnimation`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.resumeAnimation:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab0c4.  v0:= 1I;
  #L3ab0c6.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.running` @type ^`boolean` := v0 @kind boolean;
  #L3ab0ca.  call `postFrameCallback`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.postFrameCallback:()V` @kind virtual;
  #L3ab0d0.  v0:= 0L;
  #L3ab0d4.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v0 @kind wide;
  #L3ab0d8.  call temp:= `g`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3ab0de.  v0:= temp;
  #L3ab0e0.  if v0 == 0 then goto L3ab10a;
  #L3ab0e4.  call temp:= `getFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getFrame:()F` @kind virtual;
  #L3ab0ea.  v0:= temp;
  #L3ab0ec.  call temp:= `getMinFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3ab0f2.  v1:= temp;
  #L3ab0f4.  v0:= fcmpl(v0, v1);
  #L3ab0f8.  if v0 != 0 then goto L3ab10a;
  #L3ab0fc.  call temp:= `getMaxFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3ab102.  v0:= temp;
  #L3ab104.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v0;
  #L3ab108.  goto L3ab13a;
  #L3ab10a.  call temp:= `g`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3ab110.  v0:= temp;
  #L3ab112.  if v0 != 0 then goto L3ab13a;
  #L3ab116.  call temp:= `getFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getFrame:()F` @kind virtual;
  #L3ab11c.  v0:= temp;
  #L3ab11e.  call temp:= `getMaxFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3ab124.  v1:= temp;
  #L3ab126.  v0:= fcmpl(v0, v1);
  #L3ab12a.  if v0 != 0 then goto L3ab13a;
  #L3ab12e.  call temp:= `getMinFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3ab134.  v0:= temp;
  #L3ab136.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v0;
  #L3ab13a.  return @kind void;
}
procedure `void` `reverseAnimationSpeed`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.reverseAnimationSpeed:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab14c.  call temp:= `getSpeed`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getSpeed:()F` @kind virtual;
  #L3ab152.  v0:= temp;
  #L3ab154.  v0:= -v0 @kind float;
  #L3ab156.  call `setSpeed`(v1, v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setSpeed:(F)V` @kind virtual;
  #L3ab15c.  return @kind void;
}
procedure `void` `setComposition`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this, `com.airbnb.lottie.LottieComposition` v3 @kind object) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setComposition:(Lcom/airbnb/lottie/LottieComposition;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab170.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3ab174.  if v0 != 0 then goto L3ab17c;
  #L3ab178.  v0:= 1I;
  #L3ab17a.  goto L3ab17e;
  #L3ab17c.  v0:= 0I;
  #L3ab17e.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` := v3 @kind object;
  #L3ab182.  if v0 == 0 then goto L3ab1be;
  #L3ab186.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float`;
  #L3ab18a.  call temp:= `getStartFrame`(v3) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L3ab190.  v1:= temp;
  #L3ab192.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3ab198.  v0:= temp;
  #L3ab19a.  v0:= (`int`) v0 @kind f2i;
  #L3ab19c.  v0:= (`float`) v0 @kind i2f;
  #L3ab19e.  v1:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float`;
  #L3ab1a2.  call temp:= `getEndFrame`(v3) @signature `Lcom/airbnb/lottie/LottieComposition;.getEndFrame:()F` @kind virtual;
  #L3ab1a8.  v3:= temp;
  #L3ab1aa.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3ab1b0.  v3:= temp;
  #L3ab1b2.  v3:= (`int`) v3 @kind f2i;
  #L3ab1b4.  v3:= (`float`) v3 @kind i2f;
  #L3ab1b6.  call `setMinAndMaxFrames`(v2, v0, v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinAndMaxFrames:(FF)V` @kind virtual;
  #L3ab1bc.  goto L3ab1dc;
  #L3ab1be.  call temp:= `getStartFrame`(v3) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L3ab1c4.  v0:= temp;
  #L3ab1c6.  v0:= (`int`) v0 @kind f2i;
  #L3ab1c8.  v0:= (`float`) v0 @kind i2f;
  #L3ab1ca.  call temp:= `getEndFrame`(v3) @signature `Lcom/airbnb/lottie/LottieComposition;.getEndFrame:()F` @kind virtual;
  #L3ab1d0.  v3:= temp;
  #L3ab1d2.  v3:= (`int`) v3 @kind f2i;
  #L3ab1d4.  v3:= (`float`) v3 @kind i2f;
  #L3ab1d6.  call `setMinAndMaxFrames`(v2, v0, v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinAndMaxFrames:(FF)V` @kind virtual;
  #L3ab1dc.  v3:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3ab1e0.  v0:= 0I;
  #L3ab1e2.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v0;
  #L3ab1e6.  v3:= (`int`) v3 @kind f2i;
  #L3ab1e8.  v3:= (`float`) v3 @kind i2f;
  #L3ab1ea.  call `setFrame`(v2, v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setFrame:(F)V` @kind virtual;
  #L3ab1f0.  call `e`(v2) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.e:()V` @kind virtual;
  #L3ab1f6.  return @kind void;
}
procedure `void` `setFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this, `float` v3 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setFrame:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab208.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3ab20c.  v0:= fcmpl(v0, v3);
  #L3ab210.  if v0 != 0 then goto L3ab216;
  #L3ab214.  return @kind void;
  #L3ab216.  call temp:= `getMinFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3ab21c.  v0:= temp;
  #L3ab21e.  call temp:= `getMaxFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3ab224.  v1:= temp;
  #L3ab226.  call temp:= `clamp`(v3, v0, v1) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L3ab22c.  v3:= temp;
  #L3ab22e.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v3;
  #L3ab232.  v0:= 0L;
  #L3ab236.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v0 @kind wide;
  #L3ab23a.  call `e`(v2) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.e:()V` @kind virtual;
  #L3ab240.  return @kind void;
}
procedure `void` `setMaxFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this, `float` v2 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMaxFrame:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab254.  v0:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float`;
  #L3ab258.  call `setMinAndMaxFrames`(v1, v0, v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinAndMaxFrames:(FF)V` @kind virtual;
  #L3ab25e.  return @kind void;
}
procedure `void` `setMinAndMaxFrames`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this, `float` v4 , `float` v5 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinAndMaxFrames:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab270.  v0:= fcmpl(v4, v5);
  #L3ab274.  if v0 > 0 then goto L3ab2d8;
  #L3ab278.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3ab27c.  if v0 != 0 then goto L3ab288;
  #L3ab280.  v0:= -8388609I;
  #L3ab286.  goto L3ab290;
  #L3ab288.  call temp:= `getStartFrame`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L3ab28e.  v0:= temp;
  #L3ab290.  v1:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3ab294.  if v1 != 0 then goto L3ab2a0;
  #L3ab298.  v1:= 2139095039I;
  #L3ab29e.  goto L3ab2a8;
  #L3ab2a0.  call temp:= `getEndFrame`(v1) @signature `Lcom/airbnb/lottie/LottieComposition;.getEndFrame:()F` @kind virtual;
  #L3ab2a6.  v1:= temp;
  #L3ab2a8.  call temp:= `clamp`(v4, v0, v1) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L3ab2ae.  v2:= temp;
  #L3ab2b0.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float` := v2;
  #L3ab2b4.  call temp:= `clamp`(v5, v0, v1) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L3ab2ba.  v0:= temp;
  #L3ab2bc.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float` := v0;
  #L3ab2c0.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3ab2c4.  call temp:= `clamp`(v0, v4, v5) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L3ab2ca.  v4:= temp;
  #L3ab2cc.  v4:= (`int`) v4 @kind f2i;
  #L3ab2ce.  v4:= (`float`) v4 @kind i2f;
  #L3ab2d0.  call `setFrame`(v3, v4) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setFrame:(F)V` @kind virtual;
  #L3ab2d6.  return @kind void;
  #L3ab2d8.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ab2dc.  v1:= 2I;
  #L3ab2de.  v1:= new `java.lang.Object`[v1];
  #L3ab2e2.  v2:= 0I;
  #L3ab2e4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3ab2ea.  v4:= temp @kind object;
  #L3ab2ec.  v1[v2]:= v4 @kind object;
  #L3ab2f0.  v4:= 1I;
  #L3ab2f2.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3ab2f8.  v5:= temp @kind object;
  #L3ab2fa.  v1[v4]:= v5 @kind object;
  #L3ab2fe.  v4:= "minFrame (%s) must be <= maxFrame (%s)" @kind object;
  #L3ab302.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3ab308.  v4:= temp @kind object;
  #L3ab30a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ab310.  throw v0;
}
procedure `void` `setMinFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinFrame:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab324.  v2:= (`float`) v2 @kind i2f;
  #L3ab326.  v0:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float`;
  #L3ab32a.  v0:= (`int`) v0 @kind f2i;
  #L3ab32c.  v0:= (`float`) v0 @kind i2f;
  #L3ab32e.  call `setMinAndMaxFrames`(v1, v2, v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinAndMaxFrames:(FF)V` @kind virtual;
  #L3ab334.  return @kind void;
}
procedure `void` `setRepeatMode`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setRepeatMode:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ab348.  call `setRepeatMode`(v1, v2) @signature `Landroid/animation/ValueAnimator;.setRepeatMode:(I)V` @kind super;
  #L3ab34e.  v0:= 2I;
  #L3ab350.  if v2 == v0 then goto L3ab368;
  #L3ab354.  v2:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.d` @type ^`boolean` @kind boolean;
  #L3ab358.  if v2 == 0 then goto L3ab368;
  #L3ab35c.  v2:= 0I;
  #L3ab35e.  v1.`com.airbnb.lottie.utils.LottieValueAnimator.d` @type ^`boolean` := v2 @kind boolean;
  #L3ab362.  call `reverseAnimationSpeed`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.reverseAnimationSpeed:()V` @kind virtual;
  #L3ab368.  return @kind void;
}
procedure `void` `setSpeed`(`com.airbnb.lottie.utils.LottieValueAnimator` v0 @kind this, `float` v1 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setSpeed:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3ab37c.  v0.`com.airbnb.lottie.utils.LottieValueAnimator.c` @type ^`float` := v1;
  #L3ab380.  return @kind void;
}
