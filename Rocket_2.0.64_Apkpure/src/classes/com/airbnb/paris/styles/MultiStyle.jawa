record `com.airbnb.paris.styles.MultiStyle` @kind class @AccessFlag PUBLIC_FINAL extends `com.airbnb.paris.styles.Style` @kind interface {
  `boolean` `com.airbnb.paris.styles.MultiStyle.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.airbnb.paris.styles.MultiStyle.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.airbnb.paris.styles.MultiStyle.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.airbnb.paris.styles.MultiStyle.d` @AccessFlag PRIVATE_FINAL;
}
global `com.airbnb.paris.styles.MultiStyle$Companion` `@@com.airbnb.paris.styles.MultiStyle.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/paris/styles/MultiStyle;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b3960.  v0:= new `com.airbnb.paris.styles.MultiStyle$Companion`;
  #L3b3964.  v1:= 0I;
  #L3b3966.  call `<init>`(v0, v1) @signature `Lcom/airbnb/paris/styles/MultiStyle$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3b396c.  `@@com.airbnb.paris.styles.MultiStyle.Companion` @type ^`com.airbnb.paris.styles.MultiStyle$Companion` := v0 @kind object;
  #L3b3970.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b3a18.  v0:= "name" @kind object;
  #L3b3a1c.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3a22.  v0:= "styles" @kind object;
  #L3b3a26.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3a2c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b3a32.  v1.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` := v2 @kind object;
  #L3b3a36.  v1.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` := v3 @kind object;
  #L3b3a3a.  v2:= 1I;
  #L3b3a3c.  v1.`com.airbnb.paris.styles.MultiStyle.a` @type ^`boolean` := v2 @kind boolean;
  #L3b3a40.  v1.`com.airbnb.paris.styles.MultiStyle.b` @type ^`boolean` := v2 @kind boolean;
  #L3b3a44.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.MultiStyle` v7 @kind this, `java.lang.String` v8 @kind object, `int`[] v9 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b39b8.  v0:= "name" @kind object;
  #L3b39bc.  call `checkParameterIsNotNull`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b39c2.  v0:= "styleRes" @kind object;
  #L3b39c6.  call `checkParameterIsNotNull`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b39cc.  v0:= new `java.util.ArrayList`;
  #L3b39d0.  v1:= length @variable v9;
  #L3b39d2.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3b39d8.  v1:= length @variable v9;
  #L3b39da.  v2:= 0I;
  #L3b39dc.  if v2 >= v1 then goto L3b39fe;
  #L3b39e0.  v3:= v9[v2];
  #L3b39e4.  v4:= new `com.airbnb.paris.styles.ResourceStyle`;
  #L3b39e8.  v5:= 2I;
  #L3b39ea.  v6:= 0I;
  #L3b39ec.  call `<init>`(v4, v3, v6, v5, v6) @signature `Lcom/airbnb/paris/styles/ResourceStyle;.<init>:(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3b39f2.  call temp:= `add`(v0, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3b39f8.  v2:= v2 + 1;
  #L3b39fc.  goto L3b39dc;
  #L3b39fe.  call `<init>`(v7, v8, v0) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3b3a04.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this, `java.lang.String` v2 @kind object, `com.airbnb.paris.styles.Style`[] v3 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;[Lcom/airbnb/paris/styles/Style;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b3984.  v0:= "name" @kind object;
  #L3b3988.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b398e.  v0:= "styles" @kind object;
  #L3b3992.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3998.  call temp:= `toList`(v3) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3b399e.  v3:= temp @kind object;
  #L3b39a0.  call `<init>`(v1, v2, v3) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3b39a6.  return @kind void;
}
procedure `com.airbnb.paris.styles.MultiStyle` `copy$default`(`com.airbnb.paris.styles.MultiStyle` v0 @kind object, `java.lang.String` v1 @kind object, `java.util.List` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.copy$default:(Lcom/airbnb/paris/styles/MultiStyle;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lcom/airbnb/paris/styles/MultiStyle;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3b37c8.  v4:= v3 ^& 1;
  #L3b37cc.  if v4 == 0 then goto L3b37d4;
  #L3b37d0.  v1:= v0.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3b37d4.  v3:= v3 ^& 2;
  #L3b37d8.  if v3 == 0 then goto L3b37e0;
  #L3b37dc.  v2:= v0.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3b37e0.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/airbnb/paris/styles/MultiStyle;.copy:(Ljava/lang/String;Ljava/util/List;)Lcom/airbnb/paris/styles/MultiStyle;` @kind virtual;
  #L3b37e6.  v0:= temp @kind object;
  #L3b37e8.  return v0 @kind object;
}
procedure `com.airbnb.paris.styles.MultiStyle` `copy`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.copy:(Ljava/lang/String;Ljava/util/List;)Lcom/airbnb/paris/styles/MultiStyle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3b37fc.  v0:= "name" @kind object;
  #L3b3800.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3806.  v0:= "styles" @kind object;
  #L3b380a.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3810.  v0:= new `com.airbnb.paris.styles.MultiStyle`;
  #L3b3814.  call `<init>`(v0, v2, v3) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3b381a.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.airbnb.paris.styles.MultiStyle` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b3744.  if v2 == v3 then goto L3b3782;
  #L3b3748.  v0:= instanceof @variable v3 @type ^`com.airbnb.paris.styles.MultiStyle` @kind boolean;
  #L3b374c.  if v0 == 0 then goto L3b377e;
  #L3b3750.  v3:= (`com.airbnb.paris.styles.MultiStyle`) v3 @kind object;
  #L3b3754.  v0:= v2.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3b3758.  v1:= v3.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3b375c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b3762.  v0:= temp;
  #L3b3764.  if v0 == 0 then goto L3b377e;
  #L3b3768.  v0:= v2.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3b376c.  v3:= v3.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3b3770.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b3776.  v3:= temp;
  #L3b3778.  if v3 == 0 then goto L3b377e;
  #L3b377c.  goto L3b3782;
  #L3b377e.  v3:= 0I;
  #L3b3780.  return v3;
  #L3b3782.  v3:= 1I;
  #L3b3784.  return v3;
}
procedure `boolean` `getShouldApplyDefaults`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this) @signature `Lcom/airbnb/paris/styles/MultiStyle;.getShouldApplyDefaults:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b3798.  v0:= v1.`com.airbnb.paris.styles.MultiStyle.b` @type ^`boolean` @kind boolean;
  #L3b379c.  return v0;
}
procedure `boolean` `getShouldApplyParent`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this) @signature `Lcom/airbnb/paris/styles/MultiStyle;.getShouldApplyParent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b37b0.  v0:= v1.`com.airbnb.paris.styles.MultiStyle.a` @type ^`boolean` @kind boolean;
  #L3b37b4.  return v0;
}
procedure `int` `hashCode`(`com.airbnb.paris.styles.MultiStyle` v3 @kind this) @signature `Lcom/airbnb/paris/styles/MultiStyle;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b38a8.  v0:= v3.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3b38ac.  v1:= 0I;
  #L3b38ae.  if v0 == 0 then goto L3b38bc;
  #L3b38b2.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3b38b8.  v0:= temp;
  #L3b38ba.  goto L3b38be;
  #L3b38bc.  v0:= 0I;
  #L3b38be.  v0:= v0 * 31;
  #L3b38c2.  v2:= v3.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3b38c6.  if v2 == 0 then goto L3b38d2;
  #L3b38ca.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3b38d0.  v1:= temp;
  #L3b38d2.  v0:= v0 + v1 @kind int;
  #L3b38d4.  return v0;
}
procedure `java.lang.String` `name`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.name:(Landroid/content/Context;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b38e8.  v0:= "context" @kind object;
  #L3b38ec.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b38f2.  v2:= v1.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3b38f6.  return v2 @kind object;
}
procedure `com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper` `obtainStyledAttributes`(`com.airbnb.paris.styles.MultiStyle` v3 @kind this, `android.content.Context` v4 @kind object, `int`[] v5 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.obtainStyledAttributes:(Landroid/content/Context;[I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b382c.  v0:= "context" @kind object;
  #L3b3830.  call `checkParameterIsNotNull`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3836.  v0:= "attrs" @kind object;
  #L3b383a.  call `checkParameterIsNotNull`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3840.  v0:= v3.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3b3844.  v1:= new `java.util.ArrayList`;
  #L3b3848.  v2:= 10I;
  #L3b384c.  call temp:= `collectionSizeOrDefault`(v0, v2) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L3b3852.  v2:= temp;
  #L3b3854.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3b385a.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b3860.  v0:= temp @kind object;
  #L3b3862.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b3868.  v2:= temp;
  #L3b386a.  if v2 == 0 then goto L3b388a;
  #L3b386e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b3874.  v2:= temp @kind object;
  #L3b3876.  v2:= (`com.airbnb.paris.styles.Style`) v2 @kind object;
  #L3b387a.  call temp:= `obtainStyledAttributes`(v2, v4, v5) @signature `Lcom/airbnb/paris/styles/Style;.obtainStyledAttributes:(Landroid/content/Context;[I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind interface;
  #L3b3880.  v2:= temp @kind object;
  #L3b3882.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3b3888.  goto L3b3862;
  #L3b388a.  v4:= new `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper`;
  #L3b388e.  call `<init>`(v4, v1, v5) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.<init>:(Ljava/util/List;[I)V` @kind direct;
  #L3b3894.  return v4 @kind object;
}
procedure `java.lang.String` `toString`(`com.airbnb.paris.styles.MultiStyle` v2 @kind this) @signature `Lcom/airbnb/paris/styles/MultiStyle;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b3908.  v0:= new `java.lang.StringBuilder`;
  #L3b390c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b3912.  v1:= "MultiStyle(name=" @kind object;
  #L3b3916.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b391c.  v1:= v2.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3b3920.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b3926.  v1:= ", styles=" @kind object;
  #L3b392a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b3930.  v1:= v2.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3b3934.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b393a.  v1:= ")" @kind object;
  #L3b393e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b3944.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b394a.  v0:= temp @kind object;
  #L3b394c.  return v0 @kind object;
}
