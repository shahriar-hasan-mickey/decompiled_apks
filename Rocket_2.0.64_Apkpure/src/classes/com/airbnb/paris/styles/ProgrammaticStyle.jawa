record `com.airbnb.paris.styles.ProgrammaticStyle` @kind class @AccessFlag PUBLIC_FINAL extends `com.airbnb.paris.styles.Style` @kind interface {
  `boolean` `com.airbnb.paris.styles.ProgrammaticStyle.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.airbnb.paris.styles.ProgrammaticStyle.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.airbnb.paris.styles.ProgrammaticStyle.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.airbnb.paris.styles.ProgrammaticStyle.d` @AccessFlag PRIVATE;
}
global `com.airbnb.paris.styles.ProgrammaticStyle$Companion` `@@com.airbnb.paris.styles.ProgrammaticStyle.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b408c.  v0:= new `com.airbnb.paris.styles.ProgrammaticStyle$Companion`;
  #L3b4090.  v1:= 0I;
  #L3b4092.  call `<init>`(v0, v1) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3b4098.  `@@com.airbnb.paris.styles.ProgrammaticStyle.Companion` @type ^`com.airbnb.paris.styles.ProgrammaticStyle$Companion` := v0 @kind object;
  #L3b409c.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this, `com.airbnb.paris.styles.ProgrammaticStyle$Builder` v2 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Lcom/airbnb/paris/styles/ProgrammaticStyle$Builder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3b40b0.  call temp:= `getAttrResToValueResMap$paris_release`(v2) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle$Builder;.getAttrResToValueResMap$paris_release:()Ljava/util/Map;` @kind virtual;
  #L3b40b6.  v0:= temp @kind object;
  #L3b40b8.  call temp:= `getName$paris_release`(v2) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle$Builder;.getName$paris_release:()Ljava/lang/String;` @kind virtual;
  #L3b40be.  v2:= temp @kind object;
  #L3b40c0.  call `<init>`(v1, v0, v2) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Ljava/util/Map;Ljava/lang/String;)V` @kind direct;
  #L3b40c6.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.ProgrammaticStyle` v0 @kind this, `com.airbnb.paris.styles.ProgrammaticStyle$Builder` v1 @kind object, `kotlin.jvm.internal.DefaultConstructorMarker` v2 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Lcom/airbnb/paris/styles/ProgrammaticStyle$Builder;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3b40d8.  call `<init>`(v0, v1) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Lcom/airbnb/paris/styles/ProgrammaticStyle$Builder;)V` @kind direct;
  #L3b40de.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this, `java.util.Map` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Ljava/util/Map;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b40f0.  v0:= "attributeMap" @kind object;
  #L3b40f4.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b40fa.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b4100.  v1.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` := v2 @kind object;
  #L3b4104.  v1.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` := v3 @kind object;
  #L3b4108.  v2:= 1I;
  #L3b410a.  v1.`com.airbnb.paris.styles.ProgrammaticStyle.a` @type ^`boolean` := v2 @kind boolean;
  #L3b410e.  v1.`com.airbnb.paris.styles.ProgrammaticStyle.b` @type ^`boolean` := v2 @kind boolean;
  #L3b4112.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.ProgrammaticStyle` v0 @kind this, `java.util.Map` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Ljava/util/Map;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3b4124.  v3:= v3 ^& 2;
  #L3b4128.  if v3 == 0 then goto L3b412e;
  #L3b412c.  v2:= 0I;
  #L3b412e.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Ljava/util/Map;Ljava/lang/String;)V` @kind direct;
  #L3b4134.  return @kind void;
}
procedure `com.airbnb.paris.styles.ProgrammaticStyle` `copy$default`(`com.airbnb.paris.styles.ProgrammaticStyle` v0 @kind object, `java.util.Map` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.copy$default:(Lcom/airbnb/paris/styles/ProgrammaticStyle;Ljava/util/Map;Ljava/lang/String;ILjava/lang/Object;)Lcom/airbnb/paris/styles/ProgrammaticStyle;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3b3f30.  v4:= v3 ^& 1;
  #L3b3f34.  if v4 == 0 then goto L3b3f3c;
  #L3b3f38.  v1:= v0.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3b3f3c.  v3:= v3 ^& 2;
  #L3b3f40.  if v3 == 0 then goto L3b3f48;
  #L3b3f44.  v2:= v0.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3b3f48.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.copy:(Ljava/util/Map;Ljava/lang/String;)Lcom/airbnb/paris/styles/ProgrammaticStyle;` @kind virtual;
  #L3b3f4e.  v0:= temp @kind object;
  #L3b3f50.  return v0 @kind object;
}
procedure `com.airbnb.paris.styles.ProgrammaticStyle` `copy`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this, `java.util.Map` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.copy:(Ljava/util/Map;Ljava/lang/String;)Lcom/airbnb/paris/styles/ProgrammaticStyle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3b3f64.  v0:= "attributeMap" @kind object;
  #L3b3f68.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3f6e.  v0:= new `com.airbnb.paris.styles.ProgrammaticStyle`;
  #L3b3f72.  call `<init>`(v0, v2, v3) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Ljava/util/Map;Ljava/lang/String;)V` @kind direct;
  #L3b3f78.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.airbnb.paris.styles.ProgrammaticStyle` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b3eac.  if v2 == v3 then goto L3b3eea;
  #L3b3eb0.  v0:= instanceof @variable v3 @type ^`com.airbnb.paris.styles.ProgrammaticStyle` @kind boolean;
  #L3b3eb4.  if v0 == 0 then goto L3b3ee6;
  #L3b3eb8.  v3:= (`com.airbnb.paris.styles.ProgrammaticStyle`) v3 @kind object;
  #L3b3ebc.  v0:= v2.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3b3ec0.  v1:= v3.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3b3ec4.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b3eca.  v0:= temp;
  #L3b3ecc.  if v0 == 0 then goto L3b3ee6;
  #L3b3ed0.  v0:= v2.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3b3ed4.  v3:= v3.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3b3ed8.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b3ede.  v3:= temp;
  #L3b3ee0.  if v3 == 0 then goto L3b3ee6;
  #L3b3ee4.  goto L3b3eea;
  #L3b3ee6.  v3:= 0I;
  #L3b3ee8.  return v3;
  #L3b3eea.  v3:= 1I;
  #L3b3eec.  return v3;
}
procedure `boolean` `getShouldApplyDefaults`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.getShouldApplyDefaults:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b3f00.  v0:= v1.`com.airbnb.paris.styles.ProgrammaticStyle.b` @type ^`boolean` @kind boolean;
  #L3b3f04.  return v0;
}
procedure `boolean` `getShouldApplyParent`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.getShouldApplyParent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b3f18.  v0:= v1.`com.airbnb.paris.styles.ProgrammaticStyle.a` @type ^`boolean` @kind boolean;
  #L3b3f1c.  return v0;
}
procedure `int` `hashCode`(`com.airbnb.paris.styles.ProgrammaticStyle` v3 @kind this) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b3fc0.  v0:= v3.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3b3fc4.  v1:= 0I;
  #L3b3fc6.  if v0 == 0 then goto L3b3fd4;
  #L3b3fca.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3b3fd0.  v0:= temp;
  #L3b3fd2.  goto L3b3fd6;
  #L3b3fd4.  v0:= 0I;
  #L3b3fd6.  v0:= v0 * 31;
  #L3b3fda.  v2:= v3.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3b3fde.  if v2 == 0 then goto L3b3fea;
  #L3b3fe2.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3b3fe8.  v1:= temp;
  #L3b3fea.  v0:= v0 + v1 @kind int;
  #L3b3fec.  return v0;
}
procedure `java.lang.String` `name`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.name:(Landroid/content/Context;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4000.  v0:= "context" @kind object;
  #L3b4004.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b400a.  v2:= v1.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3b400e.  if v2 == 0 then goto L3b401e;
  #L3b4012.  if v2 != 0 then goto L3b4022;
  #L3b4016.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L3b401c.  goto L3b4022;
  #L3b401e.  v2:= "a programmatic style" @kind object;
  #L3b4022.  return v2 @kind object;
}
procedure `com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper` `obtainStyledAttributes`(`com.airbnb.paris.styles.ProgrammaticStyle` v2 @kind this, `android.content.Context` v3 @kind object, `int`[] v4 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.obtainStyledAttributes:(Landroid/content/Context;[I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b3f8c.  v0:= "context" @kind object;
  #L3b3f90.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3f96.  v0:= "attrs" @kind object;
  #L3b3f9a.  call `checkParameterIsNotNull`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3fa0.  v0:= new `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper`;
  #L3b3fa4.  v1:= v2.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3b3fa8.  call `<init>`(v0, v3, v4, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper;.<init>:(Landroid/content/Context;[ILjava/util/Map;)V` @kind direct;
  #L3b3fae.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.airbnb.paris.styles.ProgrammaticStyle` v2 @kind this) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b4034.  v0:= new `java.lang.StringBuilder`;
  #L3b4038.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b403e.  v1:= "ProgrammaticStyle(attributeMap=" @kind object;
  #L3b4042.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4048.  v1:= v2.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3b404c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4052.  v1:= ", name=" @kind object;
  #L3b4056.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b405c.  v1:= v2.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3b4060.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4066.  v1:= ")" @kind object;
  #L3b406a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4070.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b4076.  v0:= temp @kind object;
  #L3b4078.  return v0 @kind object;
}
