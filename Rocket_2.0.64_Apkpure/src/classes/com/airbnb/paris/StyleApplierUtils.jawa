record `com.airbnb.paris.StyleApplierUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.airbnb.paris.StyleApplierUtils$Companion` `@@com.airbnb.paris.StyleApplierUtils.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/paris/StyleApplierUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ae384.  v0:= new `com.airbnb.paris.StyleApplierUtils$Companion`;
  #L3ae388.  v1:= 0I;
  #L3ae38a.  call `<init>`(v0, v1) @signature `Lcom/airbnb/paris/StyleApplierUtils$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3ae390.  `@@com.airbnb.paris.StyleApplierUtils.Companion` @type ^`com.airbnb.paris.StyleApplierUtils$Companion` := v0 @kind object;
  #L3ae394.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.StyleApplierUtils` v0 @kind this) @signature `Lcom/airbnb/paris/StyleApplierUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ae3a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ae3ae.  return @kind void;
}
procedure `void` `assertSameAttributes`(`com.airbnb.paris.StyleApplier` v1 @kind object, `com.airbnb.paris.styles.Style`[] v2 @kind object) @signature `Lcom/airbnb/paris/StyleApplierUtils;.assertSameAttributes:(Lcom/airbnb/paris/StyleApplier;[Lcom/airbnb/paris/styles/Style;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3ae3c0.  v0:= `@@com.airbnb.paris.StyleApplierUtils.Companion` @type ^`com.airbnb.paris.StyleApplierUtils$Companion` @kind object;
  #L3ae3c4.  call `assertSameAttributes`(v0, v1, v2) @signature `Lcom/airbnb/paris/StyleApplierUtils$Companion;.assertSameAttributes:(Lcom/airbnb/paris/StyleApplier;[Lcom/airbnb/paris/styles/Style;)V` @kind virtual;
  #L3ae3ca.  return @kind void;
}
