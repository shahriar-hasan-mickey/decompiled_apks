record `com.airbnb.paris.spannables.StyleConverter` @kind class @AccessFlag PUBLIC_FINAL {
  `android.content.Context` `com.airbnb.paris.spannables.StyleConverter.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.paris.spannables.StyleConverter` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b3408.  v0:= "context" @kind object;
  #L3b340c.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3412.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b3418.  v1.`com.airbnb.paris.spannables.StyleConverter.a` @type ^`android.content.Context` := v2 @kind object;
  #L3b341c.  return @kind void;
}
procedure `java.util.List` `a`(`com.airbnb.paris.spannables.StyleConverter` v4 @kind this, `com.airbnb.paris.styles.Style` v5 @kind object) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.a:(Lcom/airbnb/paris/styles/Style;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b3218.  v0:= v4.`com.airbnb.paris.spannables.StyleConverter.a` @type ^`android.content.Context` @kind object;
  #L3b321c.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable` @type ^`int`[] @kind object;
  #L3b3220.  v2:= "R.styleable.Paris_Spannable" @kind object;
  #L3b3224.  call `checkExpressionValueIsNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b322a.  call temp:= `obtainStyledAttributes`(v5, v0, v1) @signature `Lcom/airbnb/paris/styles/Style;.obtainStyledAttributes:(Landroid/content/Context;[I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind interface;
  #L3b3230.  v5:= temp @kind object;
  #L3b3232.  v0:= 6I;
  #L3b3234.  v0:= new `kotlin.Pair`[v0];
  #L3b3238.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_textAppearance` @type ^`int`;
  #L3b323c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b3242.  v1:= temp @kind object;
  #L3b3244.  v2:= new `com.airbnb.paris.spannables.StyleConverter$a`;
  #L3b3248.  call `<init>`(v2, v4, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$a;.<init>:(Lcom/airbnb/paris/spannables/StyleConverter;Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3b324e.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3b3254.  v1:= temp @kind object;
  #L3b3256.  v2:= 0I;
  #L3b3258.  v0[v2]:= v1 @kind object;
  #L3b325c.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_fontFamily` @type ^`int`;
  #L3b3260.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b3266.  v1:= temp @kind object;
  #L3b3268.  v2:= new `com.airbnb.paris.spannables.StyleConverter$b`;
  #L3b326c.  call `<init>`(v2, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$b;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3b3272.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3b3278.  v1:= temp @kind object;
  #L3b327a.  v2:= 1I;
  #L3b327c.  v0[v2]:= v1 @kind object;
  #L3b3280.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_typeface` @type ^`int`;
  #L3b3284.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b328a.  v1:= temp @kind object;
  #L3b328c.  v2:= new `com.airbnb.paris.spannables.StyleConverter$c`;
  #L3b3290.  call `<init>`(v2, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$c;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3b3296.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3b329c.  v1:= temp @kind object;
  #L3b329e.  v2:= 2I;
  #L3b32a0.  v0[v2]:= v1 @kind object;
  #L3b32a4.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_textStyle` @type ^`int`;
  #L3b32a8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b32ae.  v1:= temp @kind object;
  #L3b32b0.  v2:= new `com.airbnb.paris.spannables.StyleConverter$d`;
  #L3b32b4.  call `<init>`(v2, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$d;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3b32ba.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3b32c0.  v1:= temp @kind object;
  #L3b32c2.  v2:= 3I;
  #L3b32c4.  v0[v2]:= v1 @kind object;
  #L3b32c8.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_textSize` @type ^`int`;
  #L3b32cc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b32d2.  v1:= temp @kind object;
  #L3b32d4.  v2:= new `com.airbnb.paris.spannables.StyleConverter$e`;
  #L3b32d8.  call `<init>`(v2, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$e;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3b32de.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3b32e4.  v1:= temp @kind object;
  #L3b32e6.  v2:= 4I;
  #L3b32e8.  v0[v2]:= v1 @kind object;
  #L3b32ec.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_textColor` @type ^`int`;
  #L3b32f0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b32f6.  v1:= temp @kind object;
  #L3b32f8.  v2:= new `com.airbnb.paris.spannables.StyleConverter$f`;
  #L3b32fc.  call `<init>`(v2, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$f;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3b3302.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3b3308.  v1:= temp @kind object;
  #L3b330a.  v2:= 5I;
  #L3b330c.  v0[v2]:= v1 @kind object;
  #L3b3310.  call temp:= `mapOf`(v0) @signature `Lkotlin/collections/MapsKt;.mapOf:([Lkotlin/Pair;)Ljava/util/Map;` @kind static;
  #L3b3316.  v0:= temp @kind object;
  #L3b3318.  v1:= new `java.util.LinkedHashMap`;
  #L3b331c.  call `<init>`(v1) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3b3322.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3b3328.  v0:= temp @kind object;
  #L3b332a.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b3330.  v0:= temp @kind object;
  #L3b3332.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b3338.  v2:= temp;
  #L3b333a.  if v2 == 0 then goto L3b3382;
  #L3b333e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b3344.  v2:= temp @kind object;
  #L3b3346.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L3b334a.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3b3350.  v3:= temp @kind object;
  #L3b3352.  v3:= (`java.lang.Number`) v3 @kind object;
  #L3b3356.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3b335c.  v3:= temp;
  #L3b335e.  call temp:= `hasValue`(v5, v3) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.hasValue:(I)Z` @kind virtual;
  #L3b3364.  v3:= temp;
  #L3b3366.  if v3 == 0 then goto L3b3332;
  #L3b336a.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3b3370.  v3:= temp @kind object;
  #L3b3372.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3b3378.  v2:= temp @kind object;
  #L3b337a.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3b3380.  goto L3b3332;
  #L3b3382.  v5:= new `java.util.ArrayList`;
  #L3b3386.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3b338c.  v0:= temp;
  #L3b338e.  call `<init>`(v5, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3b3394.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3b339a.  v0:= temp @kind object;
  #L3b339c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b33a2.  v0:= temp @kind object;
  #L3b33a4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b33aa.  v1:= temp;
  #L3b33ac.  if v1 == 0 then goto L3b33f4;
  #L3b33b0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b33b6.  v1:= temp @kind object;
  #L3b33b8.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L3b33bc.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3b33c2.  v2:= temp @kind object;
  #L3b33c4.  v2:= (`java.lang.Number`) v2 @kind object;
  #L3b33c8.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3b33ce.  v2:= temp;
  #L3b33d0.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3b33d6.  v1:= temp @kind object;
  #L3b33d8.  v1:= (`kotlin.jvm.functions.Function1`) v1 @kind object;
  #L3b33dc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b33e2.  v2:= temp @kind object;
  #L3b33e4.  call temp:= `invoke`(v1, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3b33ea.  v1:= temp @kind object;
  #L3b33ec.  call temp:= `add`(v5, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3b33f2.  goto L3b33a4;
  #L3b33f4.  return v5 @kind object;
}
procedure `android.text.Spanned` `createSpannable`(`com.airbnb.paris.spannables.StyleConverter` v6 @kind this, `java.lang.String` v7 @kind object, `java.util.Set` v8 @kind object) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.createSpannable:(Ljava/lang/String;Ljava/util/Set;)Landroid/text/Spanned;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b3160.  v0:= "text" @kind object;
  #L3b3164.  call `checkParameterIsNotNull`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b316a.  v0:= "markup" @kind object;
  #L3b316e.  call `checkParameterIsNotNull`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b3174.  v0:= new `android.text.SpannableString`;
  #L3b3178.  call `<init>`(v0, v7) @signature `Landroid/text/SpannableString;.<init>:(Ljava/lang/CharSequence;)V` @kind direct;
  #L3b317e.  call temp:= `iterator`(v8) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b3184.  v7:= temp @kind object;
  #L3b3186.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b318c.  v8:= temp;
  #L3b318e.  if v8 == 0 then goto L3b3206;
  #L3b3192.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b3198.  v8:= temp @kind object;
  #L3b319a.  v8:= (`com.airbnb.paris.spannables.StyleConverter$MarkupItem`) v8 @kind object;
  #L3b319e.  call temp:= `getStyle`(v8) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.getStyle:()Lcom/airbnb/paris/styles/Style;` @kind virtual;
  #L3b31a4.  v1:= temp @kind object;
  #L3b31a6.  call temp:= `a`(v6, v1) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.a:(Lcom/airbnb/paris/styles/Style;)Ljava/util/List;` @kind direct;
  #L3b31ac.  v1:= temp @kind object;
  #L3b31ae.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b31b4.  v1:= temp @kind object;
  #L3b31b6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b31bc.  v2:= temp;
  #L3b31be.  if v2 == 0 then goto L3b3186;
  #L3b31c2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b31c8.  v2:= temp @kind object;
  #L3b31ca.  call temp:= `getRange`(v8) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.getRange:()Lkotlin/ranges/IntRange;` @kind virtual;
  #L3b31d0.  v3:= temp @kind object;
  #L3b31d2.  call temp:= `getStart`(v3) @signature `Lkotlin/ranges/IntRange;.getStart:()Ljava/lang/Integer;` @kind virtual;
  #L3b31d8.  v3:= temp @kind object;
  #L3b31da.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3b31e0.  v3:= temp;
  #L3b31e2.  call temp:= `getRange`(v8) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.getRange:()Lkotlin/ranges/IntRange;` @kind virtual;
  #L3b31e8.  v4:= temp @kind object;
  #L3b31ea.  call temp:= `getEndInclusive`(v4) @signature `Lkotlin/ranges/IntRange;.getEndInclusive:()Ljava/lang/Integer;` @kind virtual;
  #L3b31f0.  v4:= temp @kind object;
  #L3b31f2.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3b31f8.  v4:= temp;
  #L3b31fa.  v5:= 33I;
  #L3b31fe.  call `setSpan`(v0, v2, v3, v4, v5) @signature `Landroid/text/SpannableString;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L3b3204.  goto L3b31b6;
  #L3b3206.  return v0 @kind object;
}
procedure `android.content.Context` `getContext`(`com.airbnb.paris.spannables.StyleConverter` v1 @kind this) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.getContext:()Landroid/content/Context;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3b3148.  v0:= v1.`com.airbnb.paris.spannables.StyleConverter.a` @type ^`android.content.Context` @kind object;
  #L3b314c.  return v0 @kind object;
}
