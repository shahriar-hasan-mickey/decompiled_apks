record `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` @kind class @AccessFlag PUBLIC_FINAL extends `com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper` @kind class {
  `kotlin.Lazy` `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.b` @AccessFlag PRIVATE_FINAL;
  `kotlin.Lazy` `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.d` @AccessFlag PRIVATE_FINAL;
  `int`[] `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.e` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.reflect.KProperty`[] `@@com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.f` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b5b54.  v0:= constclass @type ^`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` @kind object;
  #L3b5b58.  v1:= 2I;
  #L3b5b5a.  v1:= new `kotlin.reflect.KProperty`[v1];
  #L3b5b5e.  v2:= new `kotlin.jvm.internal.PropertyReference1Impl`;
  #L3b5b62.  call temp:= `getOrCreateKotlinClass`(v0) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L3b5b68.  v3:= temp @kind object;
  #L3b5b6a.  v4:= "styleableAttrIndexes" @kind object;
  #L3b5b6e.  v5:= "getStyleableAttrIndexes()Ljava/util/List;" @kind object;
  #L3b5b72.  call `<init>`(v2, v3, v4, v5) @signature `Lkotlin/jvm/internal/PropertyReference1Impl;.<init>:(Lkotlin/reflect/KDeclarationContainer;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3b5b78.  call temp:= `property1`(v2) @signature `Lkotlin/jvm/internal/Reflection;.property1:(Lkotlin/jvm/internal/PropertyReference1;)Lkotlin/reflect/KProperty1;` @kind static;
  #L3b5b7e.  v2:= temp @kind object;
  #L3b5b80.  v3:= 0I;
  #L3b5b82.  v1[v3]:= v2 @kind object;
  #L3b5b86.  v2:= new `kotlin.jvm.internal.PropertyReference1Impl`;
  #L3b5b8a.  call temp:= `getOrCreateKotlinClass`(v0) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L3b5b90.  v0:= temp @kind object;
  #L3b5b92.  v3:= "styleableAttrIndexToWrapperMap" @kind object;
  #L3b5b96.  v4:= "getStyleableAttrIndexToWrapperMap()Ljava/util/HashMap;" @kind object;
  #L3b5b9a.  call `<init>`(v2, v0, v3, v4) @signature `Lkotlin/jvm/internal/PropertyReference1Impl;.<init>:(Lkotlin/reflect/KDeclarationContainer;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3b5ba0.  call temp:= `property1`(v2) @signature `Lkotlin/jvm/internal/Reflection;.property1:(Lkotlin/jvm/internal/PropertyReference1;)Lkotlin/reflect/KProperty1;` @kind static;
  #L3b5ba6.  v0:= temp @kind object;
  #L3b5ba8.  v2:= 1I;
  #L3b5baa.  v1[v2]:= v0 @kind object;
  #L3b5bae.  `@@com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.f` @type ^`kotlin.reflect.KProperty`[] := v1 @kind object;
  #L3b5bb2.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `java.util.List` v2 @kind object, `int`[] v3 @kind object) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.<init>:(Ljava/util/List;[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b5bc4.  v0:= "wrappers" @kind object;
  #L3b5bc8.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b5bce.  v0:= "styleableAttrs" @kind object;
  #L3b5bd2.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b5bd8.  call `<init>`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.<init>:()V` @kind direct;
  #L3b5bde.  v1.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.d` @type ^`java.util.List` := v2 @kind object;
  #L3b5be2.  v1.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.e` @type ^`int`[] := v3 @kind object;
  #L3b5be6.  v2:= new `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper$b`;
  #L3b5bea.  call `<init>`(v2, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper$b;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;)V` @kind direct;
  #L3b5bf0.  call temp:= `lazy`(v2) @signature `Lkotlin/LazyKt;.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;` @kind static;
  #L3b5bf6.  v2:= temp @kind object;
  #L3b5bf8.  v1.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.b` @type ^`kotlin.Lazy` := v2 @kind object;
  #L3b5bfc.  v2:= new `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper$a`;
  #L3b5c00.  call `<init>`(v2, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper$a;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;)V` @kind direct;
  #L3b5c06.  call temp:= `lazy`(v2) @signature `Lkotlin/LazyKt;.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;` @kind static;
  #L3b5c0c.  v2:= temp @kind object;
  #L3b5c0e.  v1.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.c` @type ^`kotlin.Lazy` := v2 @kind object;
  #L3b5c12.  return @kind void;
}
procedure `java.util.HashMap` `a`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v3 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.a:()Ljava/util/HashMap;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b5aac.  v0:= v3.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.c` @type ^`kotlin.Lazy` @kind object;
  #L3b5ab0.  v1:= `@@com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.f` @type ^`kotlin.reflect.KProperty`[] @kind object;
  #L3b5ab4.  v2:= 1I;
  #L3b5ab6.  v1:= v1[v2] @kind object;
  #L3b5aba.  call temp:= `getValue`(v0) @signature `Lkotlin/Lazy;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3b5ac0.  v0:= temp @kind object;
  #L3b5ac2.  v0:= (`java.util.HashMap`) v0 @kind object;
  #L3b5ac6.  return v0 @kind object;
}
procedure `java.util.HashMap` `access$getStyleableAttrIndexToWrapperMap$p`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v0 @kind object) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.access$getStyleableAttrIndexToWrapperMap$p:(Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;)Ljava/util/HashMap;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L3b5a90.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.a:()Ljava/util/HashMap;` @kind direct;
  #L3b5a96.  v0:= temp @kind object;
  #L3b5a98.  return v0 @kind object;
}
procedure `java.util.List` `access$getWrappers$p`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v0 @kind object) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.access$getWrappers$p:(Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L3b5ad8.  v0:= v0.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.d` @type ^`java.util.List` @kind object;
  #L3b5adc.  return v0 @kind object;
}
procedure `java.util.List` `b`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v3 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.b:()Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b5af0.  v0:= v3.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.b` @type ^`kotlin.Lazy` @kind object;
  #L3b5af4.  v1:= `@@com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.f` @type ^`kotlin.reflect.KProperty`[] @kind object;
  #L3b5af8.  v2:= 0I;
  #L3b5afa.  v1:= v1[v2] @kind object;
  #L3b5afe.  call temp:= `getValue`(v0) @signature `Lkotlin/Lazy;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3b5b04.  v0:= temp @kind object;
  #L3b5b06.  v0:= (`java.util.List`) v0 @kind object;
  #L3b5b0a.  return v0 @kind object;
}
procedure `com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper` `c`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @AccessFlag PRIVATE_FINAL {
    temp;

  #L3b58a4.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.d:(I)Ljava/util/List;` @kind direct;
  #L3b58aa.  v1:= temp @kind object;
  #L3b58ac.  call temp:= `last`(v1) @signature `Lkotlin/collections/CollectionsKt;.last:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L3b58b2.  v1:= temp @kind object;
  #L3b58b4.  v1:= (`com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper`) v1 @kind object;
  #L3b58b8.  return v1 @kind object;
}
procedure `java.util.List` `d`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.d:(I)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3b5b1c.  call temp:= `a`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.a:()Ljava/util/HashMap;` @kind direct;
  #L3b5b22.  v0:= temp @kind object;
  #L3b5b24.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b5b2a.  v2:= temp @kind object;
  #L3b5b2c.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b5b32.  v2:= temp @kind object;
  #L3b5b34.  if v2 != 0 then goto L3b5b3e;
  #L3b5b38.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L3b5b3e.  v2:= (`java.util.List`) v2 @kind object;
  #L3b5b42.  return v2 @kind object;
}
procedure `boolean` `getBoolean`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getBoolean:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b57dc.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b57e2.  v0:= temp @kind object;
  #L3b57e4.  call temp:= `getBoolean`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getBoolean:(I)Z` @kind virtual;
  #L3b57ea.  v2:= temp;
  #L3b57ec.  return v2;
}
procedure `int` `getColor`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getColor:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5914.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b591a.  v0:= temp @kind object;
  #L3b591c.  call temp:= `getColor`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getColor:(I)I` @kind virtual;
  #L3b5922.  v2:= temp;
  #L3b5924.  return v2;
}
procedure `android.content.res.ColorStateList` `getColorStateList`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getColorStateList:(I)Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5770.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b5776.  v0:= temp @kind object;
  #L3b5778.  call temp:= `getColorStateList`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getColorStateList:(I)Landroid/content/res/ColorStateList;` @kind virtual;
  #L3b577e.  v2:= temp @kind object;
  #L3b5780.  return v2 @kind object;
}
procedure `int` `getDimensionPixelSize`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getDimensionPixelSize:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5938.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b593e.  v0:= temp @kind object;
  #L3b5940.  call temp:= `getDimensionPixelSize`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getDimensionPixelSize:(I)I` @kind virtual;
  #L3b5946.  v2:= temp;
  #L3b5948.  return v2;
}
procedure `android.graphics.drawable.Drawable` `getDrawable`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getDrawable:(I)Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b57b8.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b57be.  v0:= temp @kind object;
  #L3b57c0.  call temp:= `getDrawable`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getDrawable:(I)Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3b57c6.  v2:= temp @kind object;
  #L3b57c8.  return v2 @kind object;
}
procedure `float` `getFloat`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getFloat:(I)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b58cc.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b58d2.  v0:= temp @kind object;
  #L3b58d4.  call temp:= `getFloat`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getFloat:(I)F` @kind virtual;
  #L3b58da.  v2:= temp;
  #L3b58dc.  return v2;
}
procedure `android.graphics.Typeface` `getFont`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getFont:(I)Landroid/graphics/Typeface;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5794.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b579a.  v0:= temp @kind object;
  #L3b579c.  call temp:= `getFont`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getFont:(I)Landroid/graphics/Typeface;` @kind virtual;
  #L3b57a2.  v2:= temp @kind object;
  #L3b57a4.  return v2 @kind object;
}
procedure `float` `getFraction`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getFraction:(III)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b58f0.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b58f6.  v0:= temp @kind object;
  #L3b58f8.  call temp:= `getFraction`(v0, v2, v3, v4) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getFraction:(III)F` @kind virtual;
  #L3b58fe.  v2:= temp;
  #L3b5900.  return v2;
}
procedure `int` `getIndex`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getIndex:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b595c.  call temp:= `b`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.b:()Ljava/util/List;` @kind direct;
  #L3b5962.  v0:= temp @kind object;
  #L3b5964.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3b596a.  v2:= temp @kind object;
  #L3b596c.  v0:= "styleableAttrIndexes[at]" @kind object;
  #L3b5970.  call `checkExpressionValueIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b5976.  v2:= (`java.lang.Number`) v2 @kind object;
  #L3b597a.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3b5980.  v2:= temp;
  #L3b5982.  return v2;
}
procedure `int` `getIndexCount`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getIndexCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5994.  call temp:= `a`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.a:()Ljava/util/HashMap;` @kind direct;
  #L3b599a.  v0:= temp @kind object;
  #L3b599c.  call temp:= `size`(v0) @signature `Ljava/util/HashMap;.size:()I` @kind virtual;
  #L3b59a2.  v0:= temp;
  #L3b59a4.  return v0;
}
procedure `int` `getInt`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getInt:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b59b8.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b59be.  v0:= temp @kind object;
  #L3b59c0.  call temp:= `getInt`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getInt:(I)I` @kind virtual;
  #L3b59c6.  v2:= temp;
  #L3b59c8.  return v2;
}
procedure `int` `getLayoutDimension`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getLayoutDimension:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b59dc.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b59e2.  v0:= temp @kind object;
  #L3b59e4.  call temp:= `getLayoutDimension`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getLayoutDimension:(I)I` @kind virtual;
  #L3b59ea.  v2:= temp;
  #L3b59ec.  return v2;
}
procedure `int` `getResourceId`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getResourceId:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5a00.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b5a06.  v0:= temp @kind object;
  #L3b5a08.  call temp:= `getResourceId`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getResourceId:(I)I` @kind virtual;
  #L3b5a0e.  v2:= temp;
  #L3b5a10.  return v2;
}
procedure `java.lang.String` `getString`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getString:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5a6c.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b5a72.  v0:= temp @kind object;
  #L3b5a74.  call temp:= `getString`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L3b5a7a.  v2:= temp @kind object;
  #L3b5a7c.  return v2 @kind object;
}
procedure `com.airbnb.paris.styles.Style` `getStyle`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v3 @kind this, `int` v4 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getStyle:(I)Lcom/airbnb/paris/styles/Style;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b5834.  call temp:= `d`(v3, v4) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.d:(I)Ljava/util/List;` @kind direct;
  #L3b583a.  v0:= temp @kind object;
  #L3b583c.  v1:= new `java.util.ArrayList`;
  #L3b5840.  v2:= 10I;
  #L3b5844.  call temp:= `collectionSizeOrDefault`(v0, v2) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L3b584a.  v2:= temp;
  #L3b584c.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3b5852.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b5858.  v0:= temp @kind object;
  #L3b585a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b5860.  v2:= temp;
  #L3b5862.  if v2 == 0 then goto L3b5882;
  #L3b5866.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b586c.  v2:= temp @kind object;
  #L3b586e.  v2:= (`com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper`) v2 @kind object;
  #L3b5872.  call temp:= `getStyle`(v2, v4) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getStyle:(I)Lcom/airbnb/paris/styles/Style;` @kind virtual;
  #L3b5878.  v2:= temp @kind object;
  #L3b587a.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3b5880.  goto L3b585a;
  #L3b5882.  v4:= `@@com.airbnb.paris.styles.MultiStyle.Companion` @type ^`com.airbnb.paris.styles.MultiStyle$Companion` @kind object;
  #L3b5886.  v0:= "a_MultiTypedArrayWrapper_MultiStyle" @kind object;
  #L3b588a.  call temp:= `fromStyles`(v4, v0, v1) @signature `Lcom/airbnb/paris/styles/MultiStyle$Companion;.fromStyles:(Ljava/lang/String;Ljava/util/List;)Lcom/airbnb/paris/styles/Style;` @kind virtual;
  #L3b5890.  v4:= temp @kind object;
  #L3b5892.  return v4 @kind object;
}
procedure `java.lang.CharSequence` `getText`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getText:(I)Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5a24.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b5a2a.  v0:= temp @kind object;
  #L3b5a2c.  call temp:= `getText`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getText:(I)Ljava/lang/CharSequence;` @kind virtual;
  #L3b5a32.  v2:= temp @kind object;
  #L3b5a34.  return v2 @kind object;
}
procedure `java.lang.CharSequence`[] `getTextArray`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getTextArray:(I)[Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5a48.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3b5a4e.  v0:= temp @kind object;
  #L3b5a50.  call temp:= `getTextArray`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getTextArray:(I)[Ljava/lang/CharSequence;` @kind virtual;
  #L3b5a56.  v2:= temp @kind object;
  #L3b5a58.  return v2 @kind object;
}
procedure `boolean` `hasValue`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.hasValue:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5800.  call temp:= `a`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.a:()Ljava/util/HashMap;` @kind direct;
  #L3b5806.  v0:= temp @kind object;
  #L3b5808.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b580e.  v2:= temp @kind object;
  #L3b5810.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b5816.  v2:= temp @kind object;
  #L3b5818.  if v2 == 0 then goto L3b5820;
  #L3b581c.  v2:= 1I;
  #L3b581e.  goto L3b5822;
  #L3b5820.  v2:= 0I;
  #L3b5822.  return v2;
}
procedure `void` `recycle`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v2 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b5c24.  v0:= v2.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.d` @type ^`java.util.List` @kind object;
  #L3b5c28.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b5c2e.  v0:= temp @kind object;
  #L3b5c30.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b5c36.  v1:= temp;
  #L3b5c38.  if v1 == 0 then goto L3b5c50;
  #L3b5c3c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b5c42.  v1:= temp @kind object;
  #L3b5c44.  v1:= (`com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper`) v1 @kind object;
  #L3b5c48.  call `recycle`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.recycle:()V` @kind virtual;
  #L3b5c4e.  goto L3b5c30;
  #L3b5c50.  return @kind void;
}
