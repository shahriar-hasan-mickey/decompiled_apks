record `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper` `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h.b` @AccessFlag FINAL_SYNTHETIC;
  `int` `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h` v0 @kind this, `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$h;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3b4a3c.  v0.`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h.a` @type ^`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper` := v1 @kind object;
  #L3b4a40.  v0.`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h.b` @type ^`int` := v2;
  #L3b4a44.  v0.`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h.c` @type ^`int` := v3;
  #L3b4a48.  v1:= 1I;
  #L3b4a4a.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L3b4a50.  return @kind void;
}
procedure `float` `a`(`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h` v3 @kind this, `int` v4 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$h;.a:(I)F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b49dc.  v0:= v3.`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h.a` @type ^`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper` @kind object;
  #L3b49e0.  call temp:= `access$getResources$p`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper;.access$getResources$p:(Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper;)Landroid/content/res/Resources;` @kind static;
  #L3b49e6.  v0:= temp @kind object;
  #L3b49e8.  v1:= v3.`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h.b` @type ^`int`;
  #L3b49ec.  v2:= v3.`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h.c` @type ^`int`;
  #L3b49f0.  call temp:= `getFraction`(v0, v4, v1, v2) @signature `Landroid/content/res/Resources;.getFraction:(III)F` @kind virtual;
  #L3b49f6.  v4:= temp;
  #L3b49f8.  return v4;
}
procedure `java.lang.Object` `invoke`(`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$h` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$h;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3b4a0c.  v1:= (`java.lang.Number`) v1 @kind object;
  #L3b4a10.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3b4a16.  v1:= temp;
  #L3b4a18.  call temp:= `a`(v0, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$h;.a:(I)F` @kind virtual;
  #L3b4a1e.  v1:= temp;
  #L3b4a20.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3b4a26.  v1:= temp @kind object;
  #L3b4a28.  return v1 @kind object;
}
