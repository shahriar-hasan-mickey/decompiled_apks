record `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$k` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$k` `@@com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$k.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b4ba0.  v0:= new `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$k`;
  #L3b4ba4.  call `<init>`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$k;.<init>:()V` @kind direct;
  #L3b4baa.  `@@com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$k.a` @type ^`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$k` := v0 @kind object;
  #L3b4bae.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$k` v1 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$k;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3b4bc0.  v0:= 1I;
  #L3b4bc2.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L3b4bc8.  return @kind void;
}
procedure `int` `a`(`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$k` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$k;.a:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3b4b5c.  return v1;
}
procedure `java.lang.Object` `invoke`(`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$k` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$k;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3b4b70.  v1:= (`java.lang.Number`) v1 @kind object;
  #L3b4b74.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3b4b7a.  v1:= temp;
  #L3b4b7c.  call temp:= `a`(v0, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$k;.a:(I)I` @kind virtual;
  #L3b4b82.  v1:= temp;
  #L3b4b84.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b4b8a.  v1:= temp @kind object;
  #L3b4b8c.  return v1 @kind object;
}
