record `com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` @kind class @AccessFlag PUBLIC_FINAL extends `com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper` @kind class {
}
global `com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` `@@com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b45b4.  v0:= new `com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper`;
  #L3b45b8.  call `<init>`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.<init>:()V` @kind direct;
  #L3b45be.  `@@com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper.INSTANCE` @type ^`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` := v0 @kind object;
  #L3b45c2.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3b45d4.  call `<init>`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.<init>:()V` @kind direct;
  #L3b45da.  return @kind void;
}
procedure `java.lang.Exception` `a`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v3 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b4544.  v0:= new `java.lang.IllegalStateException`;
  #L3b4548.  v1:= new `java.lang.StringBuilder`;
  #L3b454c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b4552.  v2:= "This " @kind object;
  #L3b4556.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b455c.  v2:= constclass @type ^`com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper` @kind object;
  #L3b4560.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3b4566.  v2:= temp @kind object;
  #L3b4568.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b456e.  v2:= " is empty" @kind object;
  #L3b4572.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4578.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b457e.  v1:= temp @kind object;
  #L3b4580.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b4586.  return v0 @kind object;
}
procedure `boolean` `getBoolean`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getBoolean:(I)Z` @AccessFlag PUBLIC {
    temp;

  #L3b43cc.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b43d2.  v1:= temp @kind object;
  #L3b43d4.  throw v1;
}
procedure `int` `getColor`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getColor:(I)I` @AccessFlag PUBLIC {
    temp;

  #L3b4450.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b4456.  v1:= temp @kind object;
  #L3b4458.  throw v1;
}
procedure `android.content.res.ColorStateList` `getColorStateList`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getColorStateList:(I)Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;

  #L3b4378.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b437e.  v1:= temp @kind object;
  #L3b4380.  throw v1;
}
procedure `int` `getDimensionPixelSize`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getDimensionPixelSize:(I)I` @AccessFlag PUBLIC {
    temp;

  #L3b446c.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b4472.  v1:= temp @kind object;
  #L3b4474.  throw v1;
}
procedure `android.graphics.drawable.Drawable` `getDrawable`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getDrawable:(I)Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;

  #L3b43b0.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b43b6.  v1:= temp @kind object;
  #L3b43b8.  throw v1;
}
procedure `float` `getFloat`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getFloat:(I)F` @AccessFlag PUBLIC {
    temp;

  #L3b4418.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b441e.  v1:= temp @kind object;
  #L3b4420.  throw v1;
}
procedure `android.graphics.Typeface` `getFont`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getFont:(I)Landroid/graphics/Typeface;` @AccessFlag PUBLIC {
    temp;

  #L3b4394.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b439a.  v1:= temp @kind object;
  #L3b439c.  throw v1;
}
procedure `float` `getFraction`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getFraction:(III)F` @AccessFlag PUBLIC {
    temp;

  #L3b4434.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b443a.  v1:= temp @kind object;
  #L3b443c.  throw v1;
}
procedure `int` `getIndex`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getIndex:(I)I` @AccessFlag PUBLIC {
    temp;

  #L3b4488.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b448e.  v1:= temp @kind object;
  #L3b4490.  throw v1;
}
procedure `int` `getIndexCount`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v1 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getIndexCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b44a4.  v0:= 0I;
  #L3b44a6.  return v0;
}
procedure `int` `getInt`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getInt:(I)I` @AccessFlag PUBLIC {
    temp;

  #L3b44b8.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b44be.  v1:= temp @kind object;
  #L3b44c0.  throw v1;
}
procedure `int` `getLayoutDimension`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getLayoutDimension:(I)I` @AccessFlag PUBLIC {
    temp;

  #L3b44d4.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b44da.  v1:= temp @kind object;
  #L3b44dc.  throw v1;
}
procedure `int` `getResourceId`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getResourceId:(I)I` @AccessFlag PUBLIC {
    temp;

  #L3b44f0.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b44f6.  v1:= temp @kind object;
  #L3b44f8.  throw v1;
}
procedure `java.lang.String` `getString`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getString:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3b4598.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b459e.  v1:= temp @kind object;
  #L3b45a0.  throw v1;
}
procedure `com.airbnb.paris.styles.Style` `getStyle`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getStyle:(I)Lcom/airbnb/paris/styles/Style;` @AccessFlag PUBLIC {
    temp;

  #L3b43fc.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b4402.  v1:= temp @kind object;
  #L3b4404.  throw v1;
}
procedure `java.lang.CharSequence` `getText`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getText:(I)Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;

  #L3b450c.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b4512.  v1:= temp @kind object;
  #L3b4514.  throw v1;
}
procedure `java.lang.CharSequence`[] `getTextArray`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.getTextArray:(I)[Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;

  #L3b4528.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.a:()Ljava/lang/Exception;` @kind direct;
  #L3b452e.  v1:= temp @kind object;
  #L3b4530.  throw v1;
}
procedure `boolean` `hasValue`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.hasValue:(I)Z` @AccessFlag PUBLIC {
    temp;

  #L3b43e8.  v1:= 0I;
  #L3b43ea.  return v1;
}
procedure `void` `recycle`(`com.airbnb.paris.typed_array_wrappers.EmptyTypedArrayWrapper` v0 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/EmptyTypedArrayWrapper;.recycle:()V` @AccessFlag PUBLIC {
    temp;

  #L3b45ec.  return @kind void;
}
