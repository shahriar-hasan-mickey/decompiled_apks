record `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$p` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$p` `@@com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$p.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b4dfc.  v0:= new `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$p`;
  #L3b4e00.  call `<init>`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$p;.<init>:()V` @kind direct;
  #L3b4e06.  `@@com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$p.a` @type ^`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$p` := v0 @kind object;
  #L3b4e0a.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$p` v1 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$p;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3b4e1c.  v0:= 1I;
  #L3b4e1e.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L3b4e24.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$p` v1 @kind this, `com.airbnb.paris.attribute_values.ColorValue` v2 @kind object) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$p;.a:(Lcom/airbnb/paris/attribute_values/ColorValue;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3b4db0.  v0:= "it" @kind object;
  #L3b4db4.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b4dba.  call temp:= `getColorValue`(v2) @signature `Lcom/airbnb/paris/attribute_values/ColorValue;.getColorValue:()I` @kind virtual;
  #L3b4dc0.  v2:= temp;
  #L3b4dc2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b4dc8.  v2:= temp @kind object;
  #L3b4dca.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper$p` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$p;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3b4ddc.  v1:= (`com.airbnb.paris.attribute_values.ColorValue`) v1 @kind object;
  #L3b4de0.  call temp:= `a`(v0, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper$p;.a:(Lcom/airbnb/paris/attribute_values/ColorValue;)Ljava/lang/Object;` @kind virtual;
  #L3b4de6.  v1:= temp @kind object;
  #L3b4de8.  return v1 @kind object;
}
