record `com.airbnb.paris.attribute_values.DpValue` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `com.airbnb.paris.attribute_values.DpValue.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.paris.attribute_values.DpValue` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3aecac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aecb2.  v0.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int` := v1;
  #L3aecb6.  return @kind void;
}
procedure `com.airbnb.paris.attribute_values.DpValue` `copy$default`(`com.airbnb.paris.attribute_values.DpValue` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.copy$default:(Lcom/airbnb/paris/attribute_values/DpValue;IILjava/lang/Object;)Lcom/airbnb/paris/attribute_values/DpValue;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3aebdc.  v2:= v2 ^& 1;
  #L3aebe0.  if v2 == 0 then goto L3aebe8;
  #L3aebe4.  v1:= v0.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3aebe8.  call temp:= `copy`(v0, v1) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.copy:(I)Lcom/airbnb/paris/attribute_values/DpValue;` @kind virtual;
  #L3aebee.  v0:= temp @kind object;
  #L3aebf0.  return v0 @kind object;
}
procedure `int` `component1`(`com.airbnb.paris.attribute_values.DpValue` v1 @kind this) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.component1:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3aec20.  v0:= v1.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3aec24.  return v0;
}
procedure `com.airbnb.paris.attribute_values.DpValue` `copy`(`com.airbnb.paris.attribute_values.DpValue` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.copy:(I)Lcom/airbnb/paris/attribute_values/DpValue;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3aec04.  v0:= new `com.airbnb.paris.attribute_values.DpValue`;
  #L3aec08.  call `<init>`(v0, v2) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.<init>:(I)V` @kind direct;
  #L3aec0e.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.airbnb.paris.attribute_values.DpValue` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aeb9c.  v0:= 1I;
  #L3aeb9e.  if v3 == v4 then goto L3aebca;
  #L3aeba2.  v1:= instanceof @variable v4 @type ^`com.airbnb.paris.attribute_values.DpValue` @kind boolean;
  #L3aeba6.  v2:= 0I;
  #L3aeba8.  if v1 == 0 then goto L3aebc8;
  #L3aebac.  v4:= (`com.airbnb.paris.attribute_values.DpValue`) v4 @kind object;
  #L3aebb0.  v1:= v3.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3aebb4.  v4:= v4.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3aebb8.  if v1 != v4 then goto L3aebc0;
  #L3aebbc.  v4:= 1I;
  #L3aebbe.  goto L3aebc2;
  #L3aebc0.  v4:= 0I;
  #L3aebc2.  if v4 == 0 then goto L3aebc8;
  #L3aebc6.  goto L3aebca;
  #L3aebc8.  return v2;
  #L3aebca.  return v0;
}
procedure `int` `getDpValue`(`com.airbnb.paris.attribute_values.DpValue` v1 @kind this) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.getDpValue:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3aec38.  v0:= v1.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3aec3c.  return v0;
}
procedure `int` `hashCode`(`com.airbnb.paris.attribute_values.DpValue` v1 @kind this) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aec50.  v0:= v1.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3aec54.  return v0;
}
procedure `java.lang.String` `toString`(`com.airbnb.paris.attribute_values.DpValue` v2 @kind this) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aec68.  v0:= new `java.lang.StringBuilder`;
  #L3aec6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aec72.  v1:= "DpValue(dpValue=" @kind object;
  #L3aec76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aec7c.  v1:= v2.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3aec80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aec86.  v1:= ")" @kind object;
  #L3aec8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aec90.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aec96.  v0:= temp @kind object;
  #L3aec98.  return v0 @kind object;
}
