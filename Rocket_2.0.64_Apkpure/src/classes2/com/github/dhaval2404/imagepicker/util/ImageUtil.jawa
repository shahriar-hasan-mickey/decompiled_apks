record `com.github.dhaval2404.imagepicker.util.ImageUtil` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.github.dhaval2404.imagepicker.util.ImageUtil` `@@com.github.dhaval2404.imagepicker.util.ImageUtil.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L27fca4.  v0:= new `com.github.dhaval2404.imagepicker.util.ImageUtil`;
  #L27fca8.  call `<init>`(v0) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.<init>:()V` @kind direct;
  #L27fcae.  `@@com.github.dhaval2404.imagepicker.util.ImageUtil.INSTANCE` @type ^`com.github.dhaval2404.imagepicker.util.ImageUtil` := v0 @kind object;
  #L27fcb2.  return @kind void;
}
procedure `void` `<init>`(`com.github.dhaval2404.imagepicker.util.ImageUtil` v0 @kind this) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L27fcc4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27fcca.  return @kind void;
}
procedure `int` `a`(`com.github.dhaval2404.imagepicker.util.ImageUtil` v3 @kind this, `android.graphics.BitmapFactory$Options` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.a:(Landroid/graphics/BitmapFactory$Options;II)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L27fb60.  v0:= v4.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L27fb64.  v4:= v4.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L27fb68.  v1:= 1I;
  #L27fb6a.  if v0 > v6 then goto L27fb72;
  #L27fb6e.  if v4 <= v5 then goto L27fb90;
  #L27fb72.  v0:= v0 / 2;
  #L27fb76.  v4:= v4 / 2;
  #L27fb7a.  v2:= v0 / v1 @kind int;
  #L27fb7e.  if v2 < v6 then goto L27fb90;
  #L27fb82.  v2:= v4 / v1 @kind int;
  #L27fb86.  if v2 < v5 then goto L27fb90;
  #L27fb8a.  v1:= v1 * 2;
  #L27fb8e.  goto L27fb7a;
  #L27fb90.  return v1;
}
procedure `boolean` `b`(`com.github.dhaval2404.imagepicker.util.ImageUtil` v2 @kind this, `android.graphics.Bitmap` v3 @kind object, `android.graphics.BitmapFactory$Options` v4 @kind object) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.b:(Landroid/graphics/Bitmap;Landroid/graphics/BitmapFactory$Options;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L27fb08.  v0:= v4.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L27fb0c.  v1:= v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L27fb10.  v0:= v0 / v1 @kind int;
  #L27fb12.  v4:= v4.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L27fb16.  v4:= v4 / v1 @kind int;
  #L27fb18.  v0:= v0 * v4 @kind int;
  #L27fb1c.  call temp:= `getConfig`(v3) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L27fb22.  v4:= temp @kind object;
  #L27fb24.  v1:= "candidate.config" @kind object;
  #L27fb28.  call `checkNotNullExpressionValue`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L27fb2e.  call temp:= `d`(v2, v4) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.d:(Landroid/graphics/Bitmap$Config;)I` @kind direct;
  #L27fb34.  v4:= temp;
  #L27fb36.  v0:= v0 * v4 @kind int;
  #L27fb3a.  call temp:= `getAllocationByteCount`(v3) @signature `Landroid/graphics/Bitmap;.getAllocationByteCount:()I` @kind virtual;
  #L27fb40.  v3:= temp;
  #L27fb42.  if v0 > v3 then goto L27fb4a;
  #L27fb46.  v3:= 1I;
  #L27fb48.  goto L27fb4c;
  #L27fb4a.  v3:= 0I;
  #L27fb4c.  return v3;
}
procedure `android.graphics.Bitmap` `c`(`com.github.dhaval2404.imagepicker.util.ImageUtil` v12 @kind this, `java.io.File` v13 @kind object, `float` v14 , `float` v15 ) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.c:(Ljava/io/File;FF)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L27f958.  v0:= new `android.graphics.BitmapFactory$Options`;
  #L27f95c.  call `<init>`(v0) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L27f962.  v1:= 1I;
  #L27f964.  v0.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v1 @kind boolean;
  #L27f968.  call temp:= `getAbsolutePath`(v13) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L27f96e.  v2:= temp @kind object;
  #L27f970.  call temp:= `decodeFile`(v2, v0) @signature `Landroid/graphics/BitmapFactory;.decodeFile:(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L27f976.  v2:= temp @kind object;
  #L27f978.  v3:= v0.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L27f97c.  v4:= v0.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L27f980.  v5:= (`float`) v4 @kind i2f;
  #L27f982.  v6:= (`float`) v3 @kind i2f;
  #L27f984.  v7:= v5 / v6 @kind float;
  #L27f988.  v8:= v14 / v15 @kind float;
  #L27f98c.  v9:= fcmpl(v6, v15);
  #L27f990.  if v9 > 0 then goto L27f99c;
  #L27f994.  v9:= fcmpl(v5, v14);
  #L27f998.  if v9 <= 0 then goto L27f9c6;
  #L27f99c.  v3:= fcmpg(v7, v8);
  #L27f9a0.  if v3 >= 0 then goto L27f9b2;
  #L27f9a4.  v14:= v15 / v6 @kind float;
  #L27f9a8.  v14:= v14 * v5 @kind float;
  #L27f9ac.  v4:= (`int`) v14 @kind f2i;
  #L27f9ae.  v3:= (`int`) v15 @kind f2i;
  #L27f9b0.  goto L27f9c6;
  #L27f9b2.  v3:= fcmpl(v7, v8);
  #L27f9b6.  if v3 <= 0 then goto L27f9c2;
  #L27f9ba.  v15:= v14 / v5 @kind float;
  #L27f9be.  v15:= v15 * v6 @kind float;
  #L27f9c2.  v3:= (`int`) v15 @kind f2i;
  #L27f9c4.  v4:= (`int`) v14 @kind f2i;
  #L27f9c6.  call temp:= `a`(v12, v0, v4, v3) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.a:(Landroid/graphics/BitmapFactory$Options;II)I` @kind direct;
  #L27f9cc.  v14:= temp;
  #L27f9ce.  v0.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v14;
  #L27f9d2.  v14:= 0I;
  #L27f9d4.  v0.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v14 @kind boolean;
  #L27f9d8.  if v2 == 0 then goto L27f9f0;
  #L27f9dc.  call temp:= `b`(v12, v2, v0) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.b:(Landroid/graphics/Bitmap;Landroid/graphics/BitmapFactory$Options;)Z` @kind direct;
  #L27f9e2.  v14:= temp;
  #L27f9e4.  if v14 == 0 then goto L27f9f0;
  #L27f9e8.  v0.`android.graphics.BitmapFactory$Options.inMutable` @type ^`boolean` := v1 @kind boolean;
  #L27f9ec.  v0.`android.graphics.BitmapFactory$Options.inBitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L27f9f0.  v14:= 16384I;
  #L27f9f4.  v14:= new `byte`[v14];
  #L27f9f8.  v0.`android.graphics.BitmapFactory$Options.inTempStorage` @type ^`byte`[] := v14 @kind object;
  #L27f9fc.  call temp:= `getAbsolutePath`(v13) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L27fa02.  v13:= temp @kind object;
  #L27fa04.  call temp:= `decodeFile`(v13, v0) @signature `Landroid/graphics/BitmapFactory;.decodeFile:(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L27fa0a.  v2:= temp @kind object;
  #L27fa0c.  goto L27fa16;
  #L27fa0e.  v13:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L27fa10.  call `printStackTrace`(v13) @signature `Ljava/lang/OutOfMemoryError;.printStackTrace:()V` @kind virtual;
  #L27fa16.  v13:= 0I;
  #L27fa18.  v14:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L27fa1c.  call temp:= `createBitmap`(v4, v3, v14) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L27fa22.  v13:= temp @kind object;
  #L27fa24.  goto L27fa2e;
  #L27fa26.  v14:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L27fa28.  call `printStackTrace`(v14) @signature `Ljava/lang/OutOfMemoryError;.printStackTrace:()V` @kind virtual;
  #L27fa2e.  v5:= v13 @kind object;
  #L27fa30.  v13:= (`float`) v4 @kind i2f;
  #L27fa32.  v14:= v0.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L27fa36.  v14:= (`float`) v14 @kind i2f;
  #L27fa38.  v14:= v13 / v14 @kind float;
  #L27fa3c.  v15:= (`float`) v3 @kind i2f;
  #L27fa3e.  v0:= v0.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L27fa42.  v0:= (`float`) v0 @kind i2f;
  #L27fa44.  v0:= v15 / v0 @kind float;
  #L27fa48.  v1:= 2.0F;
  #L27fa4c.  v13:= v13 / v1 @kind float;
  #L27fa4e.  v15:= v15 / v1 @kind float;
  #L27fa50.  v1:= new `android.graphics.Matrix`;
  #L27fa54.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L27fa5a.  call `setScale`(v1, v14, v0, v13, v15) @signature `Landroid/graphics/Matrix;.setScale:(FFFF)V` @kind virtual;
  #L27fa60.  v14:= new `android.graphics.Canvas`;
  #L27fa64.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L27fa6a.  call `<init>`(v14, v5) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L27fa70.  call `setMatrix`(v14, v1) @signature `Landroid/graphics/Canvas;.setMatrix:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L27fa76.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L27fa7c.  call temp:= `getWidth`(v2) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L27fa82.  v0:= temp;
  #L27fa84.  v1:= 2I;
  #L27fa86.  v0:= v0 / v1 @kind int;
  #L27fa88.  v0:= (`float`) v0 @kind i2f;
  #L27fa8a.  v13:= v13 - v0 @kind float;
  #L27fa8c.  call temp:= `getHeight`(v2) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L27fa92.  v0:= temp;
  #L27fa94.  v0:= v0 / v1 @kind int;
  #L27fa96.  v0:= (`float`) v0 @kind i2f;
  #L27fa98.  v15:= v15 - v0 @kind float;
  #L27fa9a.  v0:= new `android.graphics.Paint`;
  #L27fa9e.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L27faa4.  call `drawBitmap`(v14, v2, v13, v15, v0) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L27faaa.  call `recycle`(v2) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L27fab0.  v10:= new `android.graphics.Matrix`;
  #L27fab4.  call `<init>`(v10) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L27faba.  v6:= 0I;
  #L27fabc.  v7:= 0I;
  #L27fabe.  call temp:= `getWidth`(v5) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L27fac4.  v8:= temp;
  #L27fac6.  call temp:= `getHeight`(v5) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L27facc.  v9:= temp;
  #L27face.  v11:= 1I;
  #L27fad0.  call temp:= `createBitmap`(v5, v6, v7, v8, v9, v10, v11) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L27fad6.  v13:= temp @kind object;
  #L27fad8.  return v13 @kind object;
  catch `java.lang.OutOfMemoryError` @[L27f9fc..L27fa0c] goto L27fa0e;
  catch `java.lang.OutOfMemoryError` @[L27fa18..L27fa24] goto L27fa26;
}
procedure `int` `d`(`com.github.dhaval2404.imagepicker.util.ImageUtil` v3 @kind this, `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.d:(Landroid/graphics/Bitmap$Config;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L27fba4.  v0:= `@@com.github.dhaval2404.imagepicker.util.ImageUtil$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L27fba8.  call temp:= `ordinal`(v4) @signature `Landroid/graphics/Bitmap$Config;.ordinal:()I` @kind virtual;
  #L27fbae.  v4:= temp;
  #L27fbb0.  v4:= v0[v4];
  #L27fbb4.  v0:= 2I;
  #L27fbb6.  v1:= 1I;
  #L27fbb8.  if v4 == v1 then goto L27fbca;
  #L27fbbc.  if v4 == v0 then goto L27fbcc;
  #L27fbc0.  v2:= 3I;
  #L27fbc2.  if v4 == v2 then goto L27fbcc;
  #L27fbc6.  v0:= 1I;
  #L27fbc8.  goto L27fbcc;
  #L27fbca.  v0:= 4I;
  #L27fbcc.  return v0;
}
procedure `java.io.File` `compressImage`(`com.github.dhaval2404.imagepicker.util.ImageUtil` v2 @kind this, `java.io.File` v3 @kind object, `float` v4 , `float` v5 , `android.graphics.Bitmap$CompressFormat` v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.compressImage:(Ljava/io/File;FFLandroid/graphics/Bitmap$CompressFormat;Ljava/lang/String;)Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L27fbe0.  v0:= "imageFile" @kind object;
  #L27fbe4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L27fbea.  v0:= "compressFormat" @kind object;
  #L27fbee.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L27fbf4.  v0:= "destinationPath" @kind object;
  #L27fbf8.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L27fbfe.  v0:= new `java.io.File`;
  #L27fc02.  call `<init>`(v0, v7) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27fc08.  call temp:= `getParentFile`(v0) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L27fc0e.  v0:= temp @kind object;
  #L27fc10.  if v0 == 0 then goto L27fc26;
  #L27fc14.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L27fc1a.  v1:= temp;
  #L27fc1c.  if v1 != 0 then goto L27fc26;
  #L27fc20.  call temp:= `mkdirs`(v0) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L27fc26.  v0:= 0I;
  #L27fc28.  v1:= new `java.io.FileOutputStream`;
  #L27fc2c.  call `<init>`(v1, v7) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27fc32.  call temp:= `c`(v2, v3, v4, v5) @signature `Lcom/github/dhaval2404/imagepicker/util/ImageUtil;.c:(Ljava/io/File;FF)Landroid/graphics/Bitmap;` @kind direct;
  #L27fc38.  v3:= temp @kind object;
  #L27fc3a.  if v3 == 0 then goto L27fc48;
  #L27fc3e.  v4:= 100I;
  #L27fc42.  call temp:= `compress`(v3, v6, v4, v1) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L27fc48.  call `flush`(v1) @signature `Ljava/io/FileOutputStream;.flush:()V` @kind virtual;
  #L27fc4e.  call `close`(v1) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L27fc54.  v3:= new `java.io.File`;
  #L27fc58.  call `<init>`(v3, v7) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27fc5e.  return v3 @kind object;
  #L27fc60.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27fc62.  v0:= v1 @kind object;
  #L27fc64.  goto L27fc68;
  #L27fc66.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27fc68.  if v0 == 0 then goto L27fc78;
  #L27fc6c.  call `flush`(v0) @signature `Ljava/io/FileOutputStream;.flush:()V` @kind virtual;
  #L27fc72.  call `close`(v0) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L27fc78.  throw v3;
  catch `java.lang.Throwable` @[L27fc28..L27fc32] goto L27fc66;
  catch `java.lang.Throwable` @[L27fc32..L27fc48] goto L27fc60;
}
