record `com.google.android.datatransport.cct.StringMerger` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.android.datatransport.cct.StringMerger` v0 @kind this) @signature `Lcom/google/android/datatransport/cct/StringMerger;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2816dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2816e2.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/google/android/datatransport/cct/StringMerger;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L28163c.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L281642.  v0:= temp;
  #L281644.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L28164a.  v1:= temp;
  #L28164c.  v0:= v0 - v1 @kind int;
  #L28164e.  if v0 < 0 then goto L2816ba;
  #L281652.  v1:= 1I;
  #L281654.  if v0 > v1 then goto L2816ba;
  #L281658.  v0:= new `java.lang.StringBuilder`;
  #L28165c.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L281662.  v1:= temp;
  #L281664.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L28166a.  v2:= temp;
  #L28166c.  v1:= v1 + v2 @kind int;
  #L28166e.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L281674.  v1:= 0I;
  #L281676.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L28167c.  v2:= temp;
  #L28167e.  if v1 >= v2 then goto L2816b0;
  #L281682.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L281688.  v2:= temp;
  #L28168a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L281690.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L281696.  v2:= temp;
  #L281698.  if v2 <= v1 then goto L2816aa;
  #L28169c.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2816a2.  v2:= temp;
  #L2816a4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2816aa.  v1:= v1 + 1;
  #L2816ae.  goto L281676;
  #L2816b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2816b6.  v3:= temp @kind object;
  #L2816b8.  return v3 @kind object;
  #L2816ba.  v3:= new `java.lang.IllegalArgumentException`;
  #L2816be.  v4:= "Invalid input received" @kind object;
  #L2816c2.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2816c8.  throw v3;
}
