record `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` @kind class @AccessFlag PUBLIC extends `com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind interface, `com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` @kind interface, `com.google.android.datatransport.runtime.scheduling.persistence.ClientHealthMetricsStore` @kind interface {
  `com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.a` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.time.Clock` `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.b` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.time.Clock` `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.c` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.scheduling.persistence.c` `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.d` @AccessFlag PRIVATE_FINAL;
  `javax.inject.Provider` `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.e` @AccessFlag PRIVATE_FINAL;
}
global `com.google.android.datatransport.Encoding` `@@com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L28df60.  v0:= "proto" @kind object;
  #L28df64.  call temp:= `of`(v0) @signature `Lcom/google/android/datatransport/Encoding;.of:(Ljava/lang/String;)Lcom/google/android/datatransport/Encoding;` @kind static;
  #L28df6a.  v0:= temp @kind object;
  #L28df6c.  `@@com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.f` @type ^`com.google.android.datatransport.Encoding` := v0 @kind object;
  #L28df70.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind this, `com.google.android.datatransport.runtime.time.Clock` v1 @kind object, `com.google.android.datatransport.runtime.time.Clock` v2 @kind object, `com.google.android.datatransport.runtime.scheduling.persistence.c` v3 @kind object, `com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` v4 @kind object, `javax.inject.Provider` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.<init>:(Lcom/google/android/datatransport/runtime/time/Clock;Lcom/google/android/datatransport/runtime/time/Clock;Lcom/google/android/datatransport/runtime/scheduling/persistence/c;Lcom/google/android/datatransport/runtime/scheduling/persistence/SchemaManager;Ljavax/inject/Provider;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L28df84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28df8a.  v0.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` := v4 @kind object;
  #L28df8e.  v0.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.b` @type ^`com.google.android.datatransport.runtime.time.Clock` := v1 @kind object;
  #L28df92.  v0.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.c` @type ^`com.google.android.datatransport.runtime.time.Clock` := v2 @kind object;
  #L28df96.  v0.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.d` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.c` := v3 @kind object;
  #L28df9a.  v0.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.e` @type ^`javax.inject.Provider` := v5 @kind object;
  #L28df9e.  return @kind void;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` `A`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.A:(I)Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L28ca1c.  v0:= `@@com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason.REASON_UNKNOWN` @type ^`com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` @kind object;
  #L28ca20.  call temp:= `getNumber`(v0) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;.getNumber:()I` @kind virtual;
  #L28ca26.  v1:= temp;
  #L28ca28.  if v4 != v1 then goto L28ca2e;
  #L28ca2c.  return v0 @kind object;
  #L28ca2e.  v1:= `@@com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason.MESSAGE_TOO_OLD` @type ^`com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` @kind object;
  #L28ca32.  call temp:= `getNumber`(v1) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;.getNumber:()I` @kind virtual;
  #L28ca38.  v2:= temp;
  #L28ca3a.  if v4 != v2 then goto L28ca40;
  #L28ca3e.  return v1 @kind object;
  #L28ca40.  v1:= `@@com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason.CACHE_FULL` @type ^`com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` @kind object;
  #L28ca44.  call temp:= `getNumber`(v1) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;.getNumber:()I` @kind virtual;
  #L28ca4a.  v2:= temp;
  #L28ca4c.  if v4 != v2 then goto L28ca52;
  #L28ca50.  return v1 @kind object;
  #L28ca52.  v1:= `@@com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason.PAYLOAD_TOO_BIG` @type ^`com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` @kind object;
  #L28ca56.  call temp:= `getNumber`(v1) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;.getNumber:()I` @kind virtual;
  #L28ca5c.  v2:= temp;
  #L28ca5e.  if v4 != v2 then goto L28ca64;
  #L28ca62.  return v1 @kind object;
  #L28ca64.  v1:= `@@com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason.MAX_RETRIES_REACHED` @type ^`com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` @kind object;
  #L28ca68.  call temp:= `getNumber`(v1) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;.getNumber:()I` @kind virtual;
  #L28ca6e.  v2:= temp;
  #L28ca70.  if v4 != v2 then goto L28ca76;
  #L28ca74.  return v1 @kind object;
  #L28ca76.  v1:= `@@com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason.INVALID_PAYLOD` @type ^`com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` @kind object;
  #L28ca7a.  call temp:= `getNumber`(v1) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;.getNumber:()I` @kind virtual;
  #L28ca80.  v2:= temp;
  #L28ca82.  if v4 != v2 then goto L28ca88;
  #L28ca86.  return v1 @kind object;
  #L28ca88.  v1:= `@@com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason.SERVER_ERROR` @type ^`com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` @kind object;
  #L28ca8c.  call temp:= `getNumber`(v1) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;.getNumber:()I` @kind virtual;
  #L28ca92.  v2:= temp;
  #L28ca94.  if v4 != v2 then goto L28ca9a;
  #L28ca98.  return v1 @kind object;
  #L28ca9a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28caa0.  v4:= temp @kind object;
  #L28caa2.  v1:= "SQLiteEventStore" @kind object;
  #L28caa6.  v2:= "%n is not valid. No matched LogEventDropped-Reason found. Treated it as REASON_UNKNOWN" @kind object;
  #L28caaa.  call `d`(v1, v2, v4) @signature `Lcom/google/android/datatransport/runtime/logging/Logging;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L28cab0.  return v0 @kind object;
}
procedure `void` `B`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.B:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L28dfe8.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.v`;
  #L28dfec.  call `<init>`(v0, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/v;.<init>:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L28dff2.  v2:= `@@com.google.android.datatransport.runtime.scheduling.persistence.u.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.u` @kind object;
  #L28dff6.  call temp:= `r0`(v1, v0, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.r0:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$d;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind direct;
  #L28dffc.  return @kind void;
}
procedure `long` `C`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v4 @kind this, `android.database.sqlite.SQLiteDatabase` v5 @kind object, `com.google.android.datatransport.runtime.TransportContext` v6 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.C:(Landroid/database/sqlite/SQLiteDatabase;Lcom/google/android/datatransport/runtime/TransportContext;)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28ddb8.  call temp:= `I`(v4, v5, v6) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.I:(Landroid/database/sqlite/SQLiteDatabase;Lcom/google/android/datatransport/runtime/TransportContext;)Ljava/lang/Long;` @kind direct;
  #L28ddbe.  v0:= temp @kind object;
  #L28ddc0.  if v0 == 0 then goto L28ddce;
  #L28ddc4.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L28ddca.  v5:= temp @kind wide;
  #L28ddcc.  return v5 @kind wide;
  #L28ddce.  v0:= new `android.content.ContentValues`;
  #L28ddd2.  call `<init>`(v0) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L28ddd8.  call temp:= `getBackendName`(v6) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L28ddde.  v1:= temp @kind object;
  #L28dde0.  v2:= "backend_name" @kind object;
  #L28dde4.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L28ddea.  call temp:= `getPriority`(v6) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getPriority:()Lcom/google/android/datatransport/Priority;` @kind virtual;
  #L28ddf0.  v1:= temp @kind object;
  #L28ddf2.  call temp:= `toInt`(v1) @signature `Lcom/google/android/datatransport/runtime/util/PriorityMapping;.toInt:(Lcom/google/android/datatransport/Priority;)I` @kind static;
  #L28ddf8.  v1:= temp;
  #L28ddfa.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28de00.  v1:= temp @kind object;
  #L28de02.  v2:= "priority" @kind object;
  #L28de06.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Integer;)V` @kind virtual;
  #L28de0c.  v1:= 0I;
  #L28de0e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28de14.  v2:= temp @kind object;
  #L28de16.  v3:= "next_request_ms" @kind object;
  #L28de1a.  call `put`(v0, v3, v2) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Integer;)V` @kind virtual;
  #L28de20.  call temp:= `getExtras`(v6) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getExtras:()[B` @kind virtual;
  #L28de26.  v2:= temp @kind object;
  #L28de28.  if v2 == 0 then goto L28de46;
  #L28de2c.  call temp:= `getExtras`(v6) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getExtras:()[B` @kind virtual;
  #L28de32.  v6:= temp @kind object;
  #L28de34.  call temp:= `encodeToString`(v6, v1) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L28de3a.  v6:= temp @kind object;
  #L28de3c.  v1:= "extras" @kind object;
  #L28de40.  call `put`(v0, v1, v6) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L28de46.  v6:= 0I;
  #L28de48.  v1:= "transport_contexts" @kind object;
  #L28de4c.  call temp:= `insert`(v5, v1, v6, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.insert:(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J` @kind virtual;
  #L28de52.  v5:= temp @kind wide;
  #L28de54.  return v5 @kind wide;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.GlobalMetrics` `F`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v4 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.F:()Lcom/google/android/datatransport/runtime/firebase/transport/GlobalMetrics;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28c9bc.  call temp:= `newBuilder`() @signature `Lcom/google/android/datatransport/runtime/firebase/transport/GlobalMetrics;.newBuilder:()Lcom/google/android/datatransport/runtime/firebase/transport/GlobalMetrics$Builder;` @kind static;
  #L28c9c2.  v0:= temp @kind object;
  #L28c9c4.  call temp:= `newBuilder`() @signature `Lcom/google/android/datatransport/runtime/firebase/transport/StorageMetrics;.newBuilder:()Lcom/google/android/datatransport/runtime/firebase/transport/StorageMetrics$Builder;` @kind static;
  #L28c9ca.  v1:= temp @kind object;
  #L28c9cc.  call temp:= `D`(v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.D:()J` @kind virtual;
  #L28c9d2.  v2:= temp @kind wide;
  #L28c9d4.  call temp:= `setCurrentCacheSizeBytes`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/StorageMetrics$Builder;.setCurrentCacheSizeBytes:(J)Lcom/google/android/datatransport/runtime/firebase/transport/StorageMetrics$Builder;` @kind virtual;
  #L28c9da.  v1:= temp @kind object;
  #L28c9dc.  v2:= `@@com.google.android.datatransport.runtime.scheduling.persistence.c.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.c` @kind object;
  #L28c9e0.  call temp:= `f`(v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c;.f:()J` @kind virtual;
  #L28c9e6.  v2:= temp @kind wide;
  #L28c9e8.  call temp:= `setMaxCacheSizeBytes`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/StorageMetrics$Builder;.setMaxCacheSizeBytes:(J)Lcom/google/android/datatransport/runtime/firebase/transport/StorageMetrics$Builder;` @kind virtual;
  #L28c9ee.  v1:= temp @kind object;
  #L28c9f0.  call temp:= `build`(v1) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/StorageMetrics$Builder;.build:()Lcom/google/android/datatransport/runtime/firebase/transport/StorageMetrics;` @kind virtual;
  #L28c9f6.  v1:= temp @kind object;
  #L28c9f8.  call temp:= `setStorageMetrics`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/GlobalMetrics$Builder;.setStorageMetrics:(Lcom/google/android/datatransport/runtime/firebase/transport/StorageMetrics;)Lcom/google/android/datatransport/runtime/firebase/transport/GlobalMetrics$Builder;` @kind virtual;
  #L28c9fe.  v0:= temp @kind object;
  #L28ca00.  call temp:= `build`(v0) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/GlobalMetrics$Builder;.build:()Lcom/google/android/datatransport/runtime/firebase/transport/GlobalMetrics;` @kind virtual;
  #L28ca06.  v0:= temp @kind object;
  #L28ca08.  return v0 @kind object;
}
procedure `long` `G`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v2 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.G:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L28df00.  call temp:= `E`(v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.E:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L28df06.  v0:= temp @kind object;
  #L28df08.  v1:= "PRAGMA page_count" @kind object;
  #L28df0c.  call temp:= `compileStatement`(v0, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #L28df12.  v0:= temp @kind object;
  #L28df14.  call temp:= `simpleQueryForLong`(v0) @signature `Landroid/database/sqlite/SQLiteStatement;.simpleQueryForLong:()J` @kind virtual;
  #L28df1a.  v0:= temp @kind wide;
  #L28df1c.  return v0 @kind wide;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.TimeWindow` `H`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v3 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.H:()Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L28cafc.  v0:= v3.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.b` @type ^`com.google.android.datatransport.runtime.time.Clock` @kind object;
  #L28cb00.  call temp:= `getTime`(v0) @signature `Lcom/google/android/datatransport/runtime/time/Clock;.getTime:()J` @kind interface;
  #L28cb06.  v0:= temp @kind wide;
  #L28cb08.  v2:= new `com.google.android.datatransport.runtime.scheduling.persistence.o`;
  #L28cb0c.  call `<init>`(v2, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/o;.<init>:(J)V` @kind direct;
  #L28cb12.  call temp:= `J`(v3, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28cb18.  v0:= temp @kind object;
  #L28cb1a.  v0:= (`com.google.android.datatransport.runtime.firebase.transport.TimeWindow`) v0 @kind object;
  #L28cb1e.  return v0 @kind object;
}
procedure `java.lang.Long` `I`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v13 @kind this, `android.database.sqlite.SQLiteDatabase` v14 @kind object, `com.google.android.datatransport.runtime.TransportContext` v15 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.I:(Landroid/database/sqlite/SQLiteDatabase;Lcom/google/android/datatransport/runtime/TransportContext;)Ljava/lang/Long;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L28ce5c.  v0:= new `java.lang.StringBuilder`;
  #L28ce60.  v1:= "backend_name = ? and priority = ?" @kind object;
  #L28ce64.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28ce6a.  v1:= new `java.util.ArrayList`;
  #L28ce6e.  v2:= 2I;
  #L28ce70.  v2:= new `java.lang.String`[v2];
  #L28ce74.  call temp:= `getBackendName`(v15) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L28ce7a.  v3:= temp @kind object;
  #L28ce7c.  v4:= 0I;
  #L28ce7e.  v2[v4]:= v3 @kind object;
  #L28ce82.  call temp:= `getPriority`(v15) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getPriority:()Lcom/google/android/datatransport/Priority;` @kind virtual;
  #L28ce88.  v3:= temp @kind object;
  #L28ce8a.  call temp:= `toInt`(v3) @signature `Lcom/google/android/datatransport/runtime/util/PriorityMapping;.toInt:(Lcom/google/android/datatransport/Priority;)I` @kind static;
  #L28ce90.  v3:= temp;
  #L28ce92.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L28ce98.  v3:= temp @kind object;
  #L28ce9a.  v5:= 1I;
  #L28ce9c.  v2[v5]:= v3 @kind object;
  #L28cea0.  call temp:= `asList`(v2) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L28cea6.  v2:= temp @kind object;
  #L28cea8.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L28ceae.  call temp:= `getExtras`(v15) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getExtras:()[B` @kind virtual;
  #L28ceb4.  v2:= temp @kind object;
  #L28ceb6.  if v2 == 0 then goto L28cedc;
  #L28ceba.  v2:= " and extras = ?" @kind object;
  #L28cebe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28cec4.  call temp:= `getExtras`(v15) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getExtras:()[B` @kind virtual;
  #L28ceca.  v15:= temp @kind object;
  #L28cecc.  call temp:= `encodeToString`(v15, v4) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L28ced2.  v15:= temp @kind object;
  #L28ced4.  call temp:= `add`(v1, v15) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L28ceda.  goto L28cee6;
  #L28cedc.  v15:= " and extras is null" @kind object;
  #L28cee0.  call temp:= `append`(v0, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28cee6.  v15:= "_id" @kind object;
  #L28ceea.  temp:= new `java.lang.String`[v15];
  #L28cef0.  v7:= temp @kind object;
  #L28cef2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28cef8.  v8:= temp @kind object;
  #L28cefa.  v15:= new `java.lang.String`[v4];
  #L28cefe.  call temp:= `toArray`(v1, v15) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L28cf04.  v15:= temp @kind object;
  #L28cf06.  v9:= v15 @kind object;
  #L28cf08.  v9:= (`java.lang.String`[]) v9 @kind object;
  #L28cf0c.  v10:= 0I;
  #L28cf0e.  v11:= 0I;
  #L28cf10.  v12:= 0I;
  #L28cf12.  v6:= "transport_contexts" @kind object;
  #L28cf16.  v5:= v14 @kind object;
  #L28cf18.  call temp:= `query`(v5, v6, v7, v8, v9, v10, v11, v12) @signature `Landroid/database/sqlite/SQLiteDatabase;.query:(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28cf1e.  v14:= temp @kind object;
  #L28cf20.  v15:= `@@com.google.android.datatransport.runtime.scheduling.persistence.n.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.n` @kind object;
  #L28cf24.  call temp:= `u0`(v14, v15) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28cf2a.  v14:= temp @kind object;
  #L28cf2c.  v14:= (`java.lang.Long`) v14 @kind object;
  #L28cf30.  return v14 @kind object;
}
procedure `boolean` `K`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v5 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.K:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28c6bc.  call temp:= `G`(v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.G:()J` @kind direct;
  #L28c6c2.  v0:= temp @kind wide;
  #L28c6c4.  call temp:= `getPageSize`(v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.getPageSize:()J` @kind direct;
  #L28c6ca.  v2:= temp @kind wide;
  #L28c6cc.  v0:= v0 * v2 @kind long;
  #L28c6d0.  v2:= v5.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.d` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.c` @kind object;
  #L28c6d4.  call temp:= `f`(v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c;.f:()J` @kind virtual;
  #L28c6da.  v2:= temp @kind wide;
  #L28c6dc.  v4:= lcmp(v0, v2);
  #L28c6e0.  if v4 < 0 then goto L28c6e8;
  #L28c6e4.  v0:= 1I;
  #L28c6e6.  goto L28c6ea;
  #L28c6e8.  v0:= 0I;
  #L28c6ea.  return v0;
}
procedure `java.util.List` `L`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v6 @kind this, `java.util.List` v7 @kind object, `java.util.Map` v8 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.L:(Ljava/util/List;Ljava/util/Map;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28da34.  call temp:= `listIterator`(v7) @signature `Ljava/util/List;.listIterator:()Ljava/util/ListIterator;` @kind interface;
  #L28da3a.  v0:= temp @kind object;
  #L28da3c.  call temp:= `hasNext`(v0) @signature `Ljava/util/ListIterator;.hasNext:()Z` @kind interface;
  #L28da42.  v1:= temp;
  #L28da44.  if v1 == 0 then goto L28daf6;
  #L28da48.  call temp:= `next`(v0) @signature `Ljava/util/ListIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28da4e.  v1:= temp @kind object;
  #L28da50.  v1:= (`com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent`) v1 @kind object;
  #L28da54.  call temp:= `getId`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.getId:()J` @kind virtual;
  #L28da5a.  v2:= temp @kind wide;
  #L28da5c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28da62.  v2:= temp @kind object;
  #L28da64.  call temp:= `containsKey`(v8, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L28da6a.  v2:= temp;
  #L28da6c.  if v2 != 0 then goto L28da72;
  #L28da70.  goto L28da3c;
  #L28da72.  call temp:= `getEvent`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.getEvent:()Lcom/google/android/datatransport/runtime/EventInternal;` @kind virtual;
  #L28da78.  v2:= temp @kind object;
  #L28da7a.  call temp:= `toBuilder`(v2) @signature `Lcom/google/android/datatransport/runtime/EventInternal;.toBuilder:()Lcom/google/android/datatransport/runtime/EventInternal$Builder;` @kind virtual;
  #L28da80.  v2:= temp @kind object;
  #L28da82.  call temp:= `getId`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.getId:()J` @kind virtual;
  #L28da88.  v3:= temp @kind wide;
  #L28da8a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28da90.  v3:= temp @kind object;
  #L28da92.  call temp:= `get`(v8, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28da98.  v3:= temp @kind object;
  #L28da9a.  v3:= (`java.util.Set`) v3 @kind object;
  #L28da9e.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28daa4.  v3:= temp @kind object;
  #L28daa6.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28daac.  v4:= temp;
  #L28daae.  if v4 == 0 then goto L28dace;
  #L28dab2.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28dab8.  v4:= temp @kind object;
  #L28daba.  v4:= (`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$c`) v4 @kind object;
  #L28dabe.  v5:= v4.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$c.a` @type ^`java.lang.String` @kind object;
  #L28dac2.  v4:= v4.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$c.b` @type ^`java.lang.String` @kind object;
  #L28dac6.  call temp:= `addMetadata`(v2, v5, v4) @signature `Lcom/google/android/datatransport/runtime/EventInternal$Builder;.addMetadata:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/android/datatransport/runtime/EventInternal$Builder;` @kind virtual;
  #L28dacc.  goto L28daa6;
  #L28dace.  call temp:= `getId`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.getId:()J` @kind virtual;
  #L28dad4.  v3:= temp @kind wide;
  #L28dad6.  call temp:= `getTransportContext`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.getTransportContext:()Lcom/google/android/datatransport/runtime/TransportContext;` @kind virtual;
  #L28dadc.  v1:= temp @kind object;
  #L28dade.  call temp:= `build`(v2) @signature `Lcom/google/android/datatransport/runtime/EventInternal$Builder;.build:()Lcom/google/android/datatransport/runtime/EventInternal;` @kind virtual;
  #L28dae4.  v2:= temp @kind object;
  #L28dae6.  call temp:= `create`(v3, v1, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.create:(JLcom/google/android/datatransport/runtime/TransportContext;Lcom/google/android/datatransport/runtime/EventInternal;)Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;` @kind static;
  #L28daec.  v1:= temp @kind object;
  #L28daee.  call `set`(v0, v1) @signature `Ljava/util/ListIterator;.set:(Ljava/lang/Object;)V` @kind interface;
  #L28daf4.  goto L28da3c;
  #L28daf6.  return v7 @kind object;
}
procedure `java.lang.Object` `M`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v4 @kind this, `android.database.Cursor` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.M:(Landroid/database/Cursor;)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28d394.  call temp:= `moveToNext`(v5) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L28d39a.  v0:= temp;
  #L28d39c.  if v0 == 0 then goto L28d3c2;
  #L28d3a0.  v0:= 0I;
  #L28d3a2.  call temp:= `getInt`(v5, v0) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L28d3a8.  v0:= temp;
  #L28d3aa.  v1:= 1I;
  #L28d3ac.  call temp:= `getString`(v5, v1) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L28d3b2.  v1:= temp @kind object;
  #L28d3b4.  v2:= (`long`) v0 @kind i2l;
  #L28d3b6.  v0:= `@@com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason.MESSAGE_TOO_OLD` @type ^`com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` @kind object;
  #L28d3ba.  call `recordLogEventDropped`(v4, v2, v0, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.recordLogEventDropped:(JLcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;Ljava/lang/String;)V` @kind virtual;
  #L28d3c0.  goto L28d394;
  #L28d3c2.  v5:= 0I;
  #L28d3c4.  return v5 @kind object;
}
procedure `java.lang.Integer` `N`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this, `long` v2 , `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.N:(JLandroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Integer;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L28cd60.  v0:= 1I;
  #L28cd62.  v0:= new `java.lang.String`[v0];
  #L28cd66.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(J)Ljava/lang/String;` @kind static;
  #L28cd6c.  v2:= temp @kind object;
  #L28cd6e.  v3:= 0I;
  #L28cd70.  v0[v3]:= v2 @kind object;
  #L28cd74.  v2:= "SELECT COUNT(*), transport_name FROM events WHERE timestamp_ms < ? GROUP BY transport_name" @kind object;
  #L28cd78.  call temp:= `rawQuery`(v4, v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28cd7e.  v2:= temp @kind object;
  #L28cd80.  v3:= new `com.google.android.datatransport.runtime.scheduling.persistence.y`;
  #L28cd84.  call `<init>`(v3, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/y;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;)V` @kind direct;
  #L28cd8a.  call temp:= `u0`(v2, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28cd90.  v2:= "events" @kind object;
  #L28cd94.  v3:= "timestamp_ms < ?" @kind object;
  #L28cd98.  call temp:= `delete`(v4, v2, v3, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.delete:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I` @kind virtual;
  #L28cd9e.  v2:= temp;
  #L28cda0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28cda6.  v2:= temp @kind object;
  #L28cda8.  return v2 @kind object;
}
procedure `java.lang.Object` `O`(`android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.O:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28d3d8.  v0:= 0I;
  #L28d3da.  v1:= new `java.lang.String`[v0];
  #L28d3de.  v2:= "events" @kind object;
  #L28d3e2.  v3:= 0I;
  #L28d3e4.  call temp:= `delete`(v4, v2, v3, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.delete:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I` @kind virtual;
  #L28d3ea.  v0:= new `java.lang.String`[v0];
  #L28d3ee.  v1:= "transport_contexts" @kind object;
  #L28d3f2.  call temp:= `delete`(v4, v1, v3, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.delete:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I` @kind virtual;
  #L28d3f8.  return v3 @kind object;
}
procedure `java.lang.Object` `P`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.P:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L28d40c.  call `beginTransaction`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.beginTransaction:()V` @kind virtual;
  #L28d412.  v0:= 0I;
  #L28d414.  return v0 @kind object;
}
procedure `java.lang.Object` `Q`(`java.lang.Throwable` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.Q:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28d428.  v0:= new `com.google.android.datatransport.runtime.synchronization.SynchronizationException`;
  #L28d42c.  v1:= "Timed out while trying to acquire the lock." @kind object;
  #L28d430.  call `<init>`(v0, v1, v2) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L28d436.  throw v0;
}
procedure `android.database.sqlite.SQLiteDatabase` `R`(`java.lang.Throwable` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.R:(Ljava/lang/Throwable;)Landroid/database/sqlite/SQLiteDatabase;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28c66c.  v0:= new `com.google.android.datatransport.runtime.synchronization.SynchronizationException`;
  #L28c670.  v1:= "Timed out while trying to open db." @kind object;
  #L28c674.  call `<init>`(v0, v1, v2) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L28c67a.  throw v0;
}
procedure `java.lang.Long` `S`(`android.database.Cursor` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.S:(Landroid/database/Cursor;)Ljava/lang/Long;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28cf44.  call temp:= `moveToNext`(v2) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L28cf4a.  v0:= temp;
  #L28cf4c.  if v0 == 0 then goto L28cf64;
  #L28cf50.  v0:= 0I;
  #L28cf52.  call temp:= `getLong`(v2, v0) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L28cf58.  v0:= temp @kind wide;
  #L28cf5a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28cf60.  v2:= temp @kind object;
  #L28cf62.  return v2 @kind object;
  #L28cf64.  v0:= 0L;
  #L28cf68.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28cf6e.  v2:= temp @kind object;
  #L28cf70.  return v2 @kind object;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.TimeWindow` `T`(`long` v2 , `android.database.Cursor` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.T:(JLandroid/database/Cursor;)Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28cb30.  call temp:= `moveToNext`(v4) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L28cb36.  v0:= 0I;
  #L28cb38.  call temp:= `getLong`(v4, v0) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L28cb3e.  v0:= temp @kind wide;
  #L28cb40.  call temp:= `newBuilder`() @signature `Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;.newBuilder:()Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow$Builder;` @kind static;
  #L28cb46.  v4:= temp @kind object;
  #L28cb48.  call temp:= `setStartMs`(v4, v0) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow$Builder;.setStartMs:(J)Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow$Builder;` @kind virtual;
  #L28cb4e.  v4:= temp @kind object;
  #L28cb50.  call temp:= `setEndMs`(v4, v2) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow$Builder;.setEndMs:(J)Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow$Builder;` @kind virtual;
  #L28cb56.  v2:= temp @kind object;
  #L28cb58.  call temp:= `build`(v2) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow$Builder;.build:()Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;` @kind virtual;
  #L28cb5e.  v2:= temp @kind object;
  #L28cb60.  return v2 @kind object;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.TimeWindow` `U`(`long` v2 , `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.U:(JLandroid/database/sqlite/SQLiteDatabase;)Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28cb74.  v0:= 0I;
  #L28cb76.  v0:= new `java.lang.String`[v0];
  #L28cb7a.  v1:= "SELECT last_metrics_upload_ms FROM global_log_event_state LIMIT 1" @kind object;
  #L28cb7e.  call temp:= `rawQuery`(v4, v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28cb84.  v4:= temp @kind object;
  #L28cb86.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.d`;
  #L28cb8a.  call `<init>`(v0, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/d;.<init>:(J)V` @kind direct;
  #L28cb90.  call temp:= `u0`(v4, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28cb96.  v2:= temp @kind object;
  #L28cb98.  v2:= (`com.google.android.datatransport.runtime.firebase.transport.TimeWindow`) v2 @kind object;
  #L28cb9c.  return v2 @kind object;
}
procedure `java.lang.Long` `V`(`android.database.Cursor` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.V:(Landroid/database/Cursor;)Ljava/lang/Long;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28cf84.  call temp:= `moveToNext`(v2) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L28cf8a.  v0:= temp;
  #L28cf8c.  if v0 != 0 then goto L28cf94;
  #L28cf90.  v2:= 0I;
  #L28cf92.  return v2 @kind object;
  #L28cf94.  v0:= 0I;
  #L28cf96.  call temp:= `getLong`(v2, v0) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L28cf9c.  v0:= temp @kind wide;
  #L28cf9e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28cfa4.  v2:= temp @kind object;
  #L28cfa6.  return v2 @kind object;
}
procedure `java.lang.Boolean` `W`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v2 @kind this, `com.google.android.datatransport.runtime.TransportContext` v3 @kind object, `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.W:(Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Boolean;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28ccbc.  call temp:= `I`(v2, v4, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.I:(Landroid/database/sqlite/SQLiteDatabase;Lcom/google/android/datatransport/runtime/TransportContext;)Ljava/lang/Long;` @kind direct;
  #L28ccc2.  v3:= temp @kind object;
  #L28ccc4.  if v3 != 0 then goto L28ccce;
  #L28ccc8.  v3:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L28cccc.  return v3 @kind object;
  #L28ccce.  call temp:= `E`(v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.E:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L28ccd4.  v4:= temp @kind object;
  #L28ccd6.  v0:= 1I;
  #L28ccd8.  v0:= new `java.lang.String`[v0];
  #L28ccdc.  v1:= 0I;
  #L28ccde.  call temp:= `toString`(v3) @signature `Ljava/lang/Long;.toString:()Ljava/lang/String;` @kind virtual;
  #L28cce4.  v3:= temp @kind object;
  #L28cce6.  v0[v1]:= v3 @kind object;
  #L28ccea.  v3:= "SELECT 1 FROM events WHERE context_id = ? LIMIT 1" @kind object;
  #L28ccee.  call temp:= `rawQuery`(v4, v3, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28ccf4.  v3:= temp @kind object;
  #L28ccf6.  v4:= `@@com.google.android.datatransport.runtime.scheduling.persistence.q.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.q` @kind object;
  #L28ccfa.  call temp:= `u0`(v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28cd00.  v3:= temp @kind object;
  #L28cd02.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L28cd06.  return v3 @kind object;
}
procedure `java.util.List` `X`(`android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.X:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28db08.  v0:= 0I;
  #L28db0a.  v0:= new `java.lang.String`[v0];
  #L28db0e.  v1:= "SELECT distinct t._id, t.backend_name, t.priority, t.extras FROM transport_contexts AS t, events AS e WHERE e.context_id = t._id" @kind object;
  #L28db12.  call temp:= `rawQuery`(v2, v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28db18.  v2:= temp @kind object;
  #L28db1a.  v0:= `@@com.google.android.datatransport.runtime.scheduling.persistence.l.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.l` @kind object;
  #L28db1e.  call temp:= `u0`(v2, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28db24.  v2:= temp @kind object;
  #L28db26.  v2:= (`java.util.List`) v2 @kind object;
  #L28db2a.  return v2 @kind object;
}
procedure `java.util.List` `Y`(`android.database.Cursor` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.Y:(Landroid/database/Cursor;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L28db3c.  v0:= new `java.util.ArrayList`;
  #L28db40.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28db46.  call temp:= `moveToNext`(v3) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L28db4c.  v1:= temp;
  #L28db4e.  if v1 == 0 then goto L28dbb0;
  #L28db52.  call temp:= `builder`() @signature `Lcom/google/android/datatransport/runtime/TransportContext;.builder:()Lcom/google/android/datatransport/runtime/TransportContext$Builder;` @kind static;
  #L28db58.  v1:= temp @kind object;
  #L28db5a.  v2:= 1I;
  #L28db5c.  call temp:= `getString`(v3, v2) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L28db62.  v2:= temp @kind object;
  #L28db64.  call temp:= `setBackendName`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/TransportContext$Builder;.setBackendName:(Ljava/lang/String;)Lcom/google/android/datatransport/runtime/TransportContext$Builder;` @kind virtual;
  #L28db6a.  v1:= temp @kind object;
  #L28db6c.  v2:= 2I;
  #L28db6e.  call temp:= `getInt`(v3, v2) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L28db74.  v2:= temp;
  #L28db76.  call temp:= `valueOf`(v2) @signature `Lcom/google/android/datatransport/runtime/util/PriorityMapping;.valueOf:(I)Lcom/google/android/datatransport/Priority;` @kind static;
  #L28db7c.  v2:= temp @kind object;
  #L28db7e.  call temp:= `setPriority`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/TransportContext$Builder;.setPriority:(Lcom/google/android/datatransport/Priority;)Lcom/google/android/datatransport/runtime/TransportContext$Builder;` @kind virtual;
  #L28db84.  v1:= temp @kind object;
  #L28db86.  v2:= 3I;
  #L28db88.  call temp:= `getString`(v3, v2) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L28db8e.  v2:= temp @kind object;
  #L28db90.  call temp:= `o0`(v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.o0:(Ljava/lang/String;)[B` @kind static;
  #L28db96.  v2:= temp @kind object;
  #L28db98.  call temp:= `setExtras`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/TransportContext$Builder;.setExtras:([B)Lcom/google/android/datatransport/runtime/TransportContext$Builder;` @kind virtual;
  #L28db9e.  v1:= temp @kind object;
  #L28dba0.  call temp:= `build`(v1) @signature `Lcom/google/android/datatransport/runtime/TransportContext$Builder;.build:()Lcom/google/android/datatransport/runtime/TransportContext;` @kind virtual;
  #L28dba6.  v1:= temp @kind object;
  #L28dba8.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L28dbae.  goto L28db46;
  #L28dbb0.  return v0 @kind object;
}
procedure `java.util.List` `Z`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v7 @kind this, `com.google.android.datatransport.runtime.TransportContext` v8 @kind object, `android.database.sqlite.SQLiteDatabase` v9 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.Z:(Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/util/List;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L28dbc4.  v0:= v7.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.d` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.c` @kind object;
  #L28dbc8.  call temp:= `d`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c;.d:()I` @kind virtual;
  #L28dbce.  v0:= temp;
  #L28dbd0.  call temp:= `m0`(v7, v9, v8, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.m0:(Landroid/database/sqlite/SQLiteDatabase;Lcom/google/android/datatransport/runtime/TransportContext;I)Ljava/util/List;` @kind direct;
  #L28dbd6.  v0:= temp @kind object;
  #L28dbd8.  call temp:= `values`() @signature `Lcom/google/android/datatransport/Priority;.values:()[Lcom/google/android/datatransport/Priority;` @kind static;
  #L28dbde.  v1:= temp @kind object;
  #L28dbe0.  v2:= length @variable v1;
  #L28dbe2.  v3:= 0I;
  #L28dbe4.  if v3 >= v2 then goto L28dc32;
  #L28dbe8.  v4:= v1[v3] @kind object;
  #L28dbec.  call temp:= `getPriority`(v8) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getPriority:()Lcom/google/android/datatransport/Priority;` @kind virtual;
  #L28dbf2.  v5:= temp @kind object;
  #L28dbf4.  if v4 != v5 then goto L28dbfa;
  #L28dbf8.  goto L28dc2c;
  #L28dbfa.  v5:= v7.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.d` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.c` @kind object;
  #L28dbfe.  call temp:= `d`(v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c;.d:()I` @kind virtual;
  #L28dc04.  v5:= temp;
  #L28dc06.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28dc0c.  v6:= temp;
  #L28dc0e.  v5:= v5 - v6 @kind int;
  #L28dc10.  if v5 > 0 then goto L28dc16;
  #L28dc14.  goto L28dc32;
  #L28dc16.  call temp:= `withPriority`(v8, v4) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.withPriority:(Lcom/google/android/datatransport/Priority;)Lcom/google/android/datatransport/runtime/TransportContext;` @kind virtual;
  #L28dc1c.  v4:= temp @kind object;
  #L28dc1e.  call temp:= `m0`(v7, v9, v4, v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.m0:(Landroid/database/sqlite/SQLiteDatabase;Lcom/google/android/datatransport/runtime/TransportContext;I)Ljava/util/List;` @kind direct;
  #L28dc24.  v4:= temp @kind object;
  #L28dc26.  call temp:= `addAll`(v0, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L28dc2c.  v3:= v3 + 1;
  #L28dc30.  goto L28dbe4;
  #L28dc32.  call temp:= `n0`(v7, v9, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.n0:(Landroid/database/sqlite/SQLiteDatabase;Ljava/util/List;)Ljava/util/Map;` @kind direct;
  #L28dc38.  v8:= temp @kind object;
  #L28dc3a.  call temp:= `L`(v7, v0, v8) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.L:(Ljava/util/List;Ljava/util/Map;)Ljava/util/List;` @kind direct;
  #L28dc40.  v8:= temp @kind object;
  #L28dc42.  return v8 @kind object;
}
procedure `android.database.sqlite.SQLiteDatabase` `a`(`java.lang.Throwable` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.a:(Ljava/lang/Throwable;)Landroid/database/sqlite/SQLiteDatabase;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28c618.  call temp:= `R`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.R:(Ljava/lang/Throwable;)Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L28c61e.  v0:= temp @kind object;
  #L28c620.  return v0 @kind object;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.ClientMetrics` `a0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v5 @kind this, `java.util.Map` v6 @kind object, `com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder` v7 @kind object, `android.database.Cursor` v8 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.a0:(Ljava/util/Map;Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;Landroid/database/Cursor;)Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28c870.  call temp:= `moveToNext`(v8) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L28c876.  v0:= temp;
  #L28c878.  if v0 == 0 then goto L28c8f2;
  #L28c87c.  v0:= 0I;
  #L28c87e.  call temp:= `getString`(v8, v0) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L28c884.  v0:= temp @kind object;
  #L28c886.  v1:= 1I;
  #L28c888.  call temp:= `getInt`(v8, v1) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L28c88e.  v1:= temp;
  #L28c890.  call temp:= `A`(v5, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.A:(I)Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;` @kind direct;
  #L28c896.  v1:= temp @kind object;
  #L28c898.  v2:= 2I;
  #L28c89a.  call temp:= `getLong`(v8, v2) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L28c8a0.  v2:= temp @kind wide;
  #L28c8a2.  call temp:= `containsKey`(v6, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L28c8a8.  v4:= temp;
  #L28c8aa.  if v4 != 0 then goto L28c8be;
  #L28c8ae.  v4:= new `java.util.ArrayList`;
  #L28c8b2.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28c8b8.  call temp:= `put`(v6, v0, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28c8be.  call temp:= `get`(v6, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28c8c4.  v0:= temp @kind object;
  #L28c8c6.  v0:= (`java.util.List`) v0 @kind object;
  #L28c8ca.  call temp:= `newBuilder`() @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped;.newBuilder:()Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Builder;` @kind static;
  #L28c8d0.  v4:= temp @kind object;
  #L28c8d2.  call temp:= `setReason`(v4, v1) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Builder;.setReason:(Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;)Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Builder;` @kind virtual;
  #L28c8d8.  v1:= temp @kind object;
  #L28c8da.  call temp:= `setEventsDroppedCount`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Builder;.setEventsDroppedCount:(J)Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Builder;` @kind virtual;
  #L28c8e0.  v1:= temp @kind object;
  #L28c8e2.  call temp:= `build`(v1) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Builder;.build:()Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped;` @kind virtual;
  #L28c8e8.  v1:= temp @kind object;
  #L28c8ea.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L28c8f0.  goto L28c870;
  #L28c8f2.  call `p0`(v5, v7, v6) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.p0:(Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;Ljava/util/Map;)V` @kind direct;
  #L28c8f8.  call temp:= `H`(v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.H:()Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;` @kind direct;
  #L28c8fe.  v6:= temp @kind object;
  #L28c900.  call temp:= `setWindow`(v7, v6) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;.setWindow:(Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;)Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;` @kind virtual;
  #L28c906.  call temp:= `F`(v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.F:()Lcom/google/android/datatransport/runtime/firebase/transport/GlobalMetrics;` @kind direct;
  #L28c90c.  v6:= temp @kind object;
  #L28c90e.  call temp:= `setGlobalMetrics`(v7, v6) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;.setGlobalMetrics:(Lcom/google/android/datatransport/runtime/firebase/transport/GlobalMetrics;)Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;` @kind virtual;
  #L28c914.  v6:= v5.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.e` @type ^`javax.inject.Provider` @kind object;
  #L28c918.  call temp:= `get`(v6) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L28c91e.  v6:= temp @kind object;
  #L28c920.  v6:= (`java.lang.String`) v6 @kind object;
  #L28c924.  call temp:= `setAppNamespace`(v7, v6) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;.setAppNamespace:(Ljava/lang/String;)Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;` @kind virtual;
  #L28c92a.  call temp:= `build`(v7) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;.build:()Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics;` @kind virtual;
  #L28c930.  v6:= temp @kind object;
  #L28c932.  return v6 @kind object;
}
procedure `java.lang.Object` `b`(`java.lang.Throwable` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.b:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d214.  call temp:= `Q`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.Q:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L28d21a.  v0:= temp @kind object;
  #L28d21c.  return v0 @kind object;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.ClientMetrics` `b0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.Map` v3 @kind object, `com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder` v4 @kind object, `android.database.sqlite.SQLiteDatabase` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.b0:(Ljava/lang/String;Ljava/util/Map;Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;Landroid/database/sqlite/SQLiteDatabase;)Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L28c944.  v0:= 0I;
  #L28c946.  v0:= new `java.lang.String`[v0];
  #L28c94a.  call temp:= `rawQuery`(v5, v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28c950.  v2:= temp @kind object;
  #L28c952.  v5:= new `com.google.android.datatransport.runtime.scheduling.persistence.h`;
  #L28c956.  call `<init>`(v5, v1, v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/h;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Ljava/util/Map;Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;)V` @kind direct;
  #L28c95c.  call temp:= `u0`(v2, v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28c962.  v2:= temp @kind object;
  #L28c964.  v2:= (`com.google.android.datatransport.runtime.firebase.transport.ClientMetrics`) v2 @kind object;
  #L28c968.  return v2 @kind object;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.TimeWindow` `c`(`long` v0 , `android.database.Cursor` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.c:(JLandroid/database/Cursor;)Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28cac4.  call temp:= `T`(v0, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.T:(JLandroid/database/Cursor;)Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;` @kind static;
  #L28caca.  v0:= temp @kind object;
  #L28cacc.  return v0 @kind object;
}
procedure `java.lang.Object` `c0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v6 @kind this, `java.util.List` v7 @kind object, `com.google.android.datatransport.runtime.TransportContext` v8 @kind object, `android.database.Cursor` v9 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.c0:(Ljava/util/List;Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/Cursor;)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28d448.  call temp:= `moveToNext`(v9) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L28d44e.  v0:= temp;
  #L28d450.  if v0 == 0 then goto L28d542;
  #L28d454.  v0:= 0I;
  #L28d456.  call temp:= `getLong`(v9, v0) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L28d45c.  v1:= temp @kind wide;
  #L28d45e.  v3:= 7I;
  #L28d460.  call temp:= `getInt`(v9, v3) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L28d466.  v3:= temp;
  #L28d468.  v4:= 1I;
  #L28d46a.  if v3 == 0 then goto L28d470;
  #L28d46e.  v0:= 1I;
  #L28d470.  call temp:= `builder`() @signature `Lcom/google/android/datatransport/runtime/EventInternal;.builder:()Lcom/google/android/datatransport/runtime/EventInternal$Builder;` @kind static;
  #L28d476.  v3:= temp @kind object;
  #L28d478.  call temp:= `getString`(v9, v4) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L28d47e.  v4:= temp @kind object;
  #L28d480.  call temp:= `setTransportName`(v3, v4) @signature `Lcom/google/android/datatransport/runtime/EventInternal$Builder;.setTransportName:(Ljava/lang/String;)Lcom/google/android/datatransport/runtime/EventInternal$Builder;` @kind virtual;
  #L28d486.  v3:= temp @kind object;
  #L28d488.  v4:= 2I;
  #L28d48a.  call temp:= `getLong`(v9, v4) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L28d490.  v4:= temp @kind wide;
  #L28d492.  call temp:= `setEventMillis`(v3, v4) @signature `Lcom/google/android/datatransport/runtime/EventInternal$Builder;.setEventMillis:(J)Lcom/google/android/datatransport/runtime/EventInternal$Builder;` @kind virtual;
  #L28d498.  v3:= temp @kind object;
  #L28d49a.  v4:= 3I;
  #L28d49c.  call temp:= `getLong`(v9, v4) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L28d4a2.  v4:= temp @kind wide;
  #L28d4a4.  call temp:= `setUptimeMillis`(v3, v4) @signature `Lcom/google/android/datatransport/runtime/EventInternal$Builder;.setUptimeMillis:(J)Lcom/google/android/datatransport/runtime/EventInternal$Builder;` @kind virtual;
  #L28d4aa.  v3:= temp @kind object;
  #L28d4ac.  v4:= 4I;
  #L28d4ae.  if v0 == 0 then goto L28d4de;
  #L28d4b2.  v0:= new `com.google.android.datatransport.runtime.EncodedPayload`;
  #L28d4b6.  call temp:= `getString`(v9, v4) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L28d4bc.  v4:= temp @kind object;
  #L28d4be.  call temp:= `s0`(v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.s0:(Ljava/lang/String;)Lcom/google/android/datatransport/Encoding;` @kind static;
  #L28d4c4.  v4:= temp @kind object;
  #L28d4c6.  v5:= 5I;
  #L28d4c8.  call temp:= `getBlob`(v9, v5) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L28d4ce.  v5:= temp @kind object;
  #L28d4d0.  call `<init>`(v0, v4, v5) @signature `Lcom/google/android/datatransport/runtime/EncodedPayload;.<init>:(Lcom/google/android/datatransport/Encoding;[B)V` @kind direct;
  #L28d4d6.  call temp:= `setEncodedPayload`(v3, v0) @signature `Lcom/google/android/datatransport/runtime/EventInternal$Builder;.setEncodedPayload:(Lcom/google/android/datatransport/runtime/EncodedPayload;)Lcom/google/android/datatransport/runtime/EventInternal$Builder;` @kind virtual;
  #L28d4dc.  goto L28d506;
  #L28d4de.  v0:= new `com.google.android.datatransport.runtime.EncodedPayload`;
  #L28d4e2.  call temp:= `getString`(v9, v4) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L28d4e8.  v4:= temp @kind object;
  #L28d4ea.  call temp:= `s0`(v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.s0:(Ljava/lang/String;)Lcom/google/android/datatransport/Encoding;` @kind static;
  #L28d4f0.  v4:= temp @kind object;
  #L28d4f2.  call temp:= `q0`(v6, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.q0:(J)[B` @kind direct;
  #L28d4f8.  v5:= temp @kind object;
  #L28d4fa.  call `<init>`(v0, v4, v5) @signature `Lcom/google/android/datatransport/runtime/EncodedPayload;.<init>:(Lcom/google/android/datatransport/Encoding;[B)V` @kind direct;
  #L28d500.  call temp:= `setEncodedPayload`(v3, v0) @signature `Lcom/google/android/datatransport/runtime/EventInternal$Builder;.setEncodedPayload:(Lcom/google/android/datatransport/runtime/EncodedPayload;)Lcom/google/android/datatransport/runtime/EventInternal$Builder;` @kind virtual;
  #L28d506.  v0:= 6I;
  #L28d508.  call temp:= `isNull`(v9, v0) @signature `Landroid/database/Cursor;.isNull:(I)Z` @kind interface;
  #L28d50e.  v4:= temp;
  #L28d510.  if v4 != 0 then goto L28d52a;
  #L28d514.  call temp:= `getInt`(v9, v0) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L28d51a.  v0:= temp;
  #L28d51c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28d522.  v0:= temp @kind object;
  #L28d524.  call temp:= `setCode`(v3, v0) @signature `Lcom/google/android/datatransport/runtime/EventInternal$Builder;.setCode:(Ljava/lang/Integer;)Lcom/google/android/datatransport/runtime/EventInternal$Builder;` @kind virtual;
  #L28d52a.  call temp:= `build`(v3) @signature `Lcom/google/android/datatransport/runtime/EventInternal$Builder;.build:()Lcom/google/android/datatransport/runtime/EventInternal;` @kind virtual;
  #L28d530.  v0:= temp @kind object;
  #L28d532.  call temp:= `create`(v1, v8, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.create:(JLcom/google/android/datatransport/runtime/TransportContext;Lcom/google/android/datatransport/runtime/EventInternal;)Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;` @kind static;
  #L28d538.  v0:= temp @kind object;
  #L28d53a.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L28d540.  goto L28d448;
  #L28d542.  v7:= 0I;
  #L28d544.  return v7 @kind object;
}
procedure `java.util.List` `d`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `com.google.android.datatransport.runtime.TransportContext` v1 @kind object, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.d:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d9e0.  call temp:= `Z`(v0, v1, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.Z:(Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/util/List;` @kind direct;
  #L28d9e6.  v0:= temp @kind object;
  #L28d9e8.  return v0 @kind object;
}
procedure `java.lang.Object` `d0`(`java.util.Map` v5 @kind object, `android.database.Cursor` v6 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.d0:(Ljava/util/Map;Landroid/database/Cursor;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28d558.  call temp:= `moveToNext`(v6) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L28d55e.  v0:= temp;
  #L28d560.  v1:= 0I;
  #L28d562.  if v0 == 0 then goto L28d5c6;
  #L28d566.  v0:= 0I;
  #L28d568.  call temp:= `getLong`(v6, v0) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L28d56e.  v2:= temp @kind wide;
  #L28d570.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28d576.  v0:= temp @kind object;
  #L28d578.  call temp:= `get`(v5, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28d57e.  v0:= temp @kind object;
  #L28d580.  v0:= (`java.util.Set`) v0 @kind object;
  #L28d584.  if v0 != 0 then goto L28d5a0;
  #L28d588.  v0:= new `java.util.HashSet`;
  #L28d58c.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L28d592.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28d598.  v2:= temp @kind object;
  #L28d59a.  call temp:= `put`(v5, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28d5a0.  v2:= new `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$c`;
  #L28d5a4.  v3:= 1I;
  #L28d5a6.  call temp:= `getString`(v6, v3) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L28d5ac.  v3:= temp @kind object;
  #L28d5ae.  v4:= 2I;
  #L28d5b0.  call temp:= `getString`(v6, v4) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L28d5b6.  v4:= temp @kind object;
  #L28d5b8.  call `<init>`(v2, v3, v4, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$c;.<init>:(Ljava/lang/String;Ljava/lang/String;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$a;)V` @kind direct;
  #L28d5be.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L28d5c4.  goto L28d558;
  #L28d5c6.  return v1 @kind object;
}
procedure `java.lang.Object` `e`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.e:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d230.  call temp:= `P`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.P:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @kind static;
  #L28d236.  v0:= temp @kind object;
  #L28d238.  return v0 @kind object;
}
procedure `java.lang.Long` `e0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v11 @kind this, `com.google.android.datatransport.runtime.EventInternal` v12 @kind object, `com.google.android.datatransport.runtime.TransportContext` v13 @kind object, `android.database.sqlite.SQLiteDatabase` v14 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.e0:(Lcom/google/android/datatransport/runtime/EventInternal;Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Long;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L28cfb8.  call temp:= `K`(v11) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.K:()Z` @kind direct;
  #L28cfbe.  v0:= temp;
  #L28cfc0.  if v0 == 0 then goto L28cfe8;
  #L28cfc4.  v13:= 1L;
  #L28cfc8.  v0:= `@@com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason.CACHE_FULL` @type ^`com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` @kind object;
  #L28cfcc.  call temp:= `getTransportName`(v12) @signature `Lcom/google/android/datatransport/runtime/EventInternal;.getTransportName:()Ljava/lang/String;` @kind virtual;
  #L28cfd2.  v12:= temp @kind object;
  #L28cfd4.  call `recordLogEventDropped`(v11, v13, v0, v12) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.recordLogEventDropped:(JLcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;Ljava/lang/String;)V` @kind virtual;
  #L28cfda.  v12:= -1L;
  #L28cfde.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28cfe4.  v12:= temp @kind object;
  #L28cfe6.  return v12 @kind object;
  #L28cfe8.  call temp:= `C`(v11, v14, v13) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.C:(Landroid/database/sqlite/SQLiteDatabase;Lcom/google/android/datatransport/runtime/TransportContext;)J` @kind direct;
  #L28cfee.  v0:= temp @kind wide;
  #L28cff0.  v13:= v11.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.d` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.c` @kind object;
  #L28cff4.  call temp:= `e`(v13) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c;.e:()I` @kind virtual;
  #L28cffa.  v13:= temp;
  #L28cffc.  call temp:= `getEncodedPayload`(v12) @signature `Lcom/google/android/datatransport/runtime/EventInternal;.getEncodedPayload:()Lcom/google/android/datatransport/runtime/EncodedPayload;` @kind virtual;
  #L28d002.  v2:= temp @kind object;
  #L28d004.  call temp:= `getBytes`(v2) @signature `Lcom/google/android/datatransport/runtime/EncodedPayload;.getBytes:()[B` @kind virtual;
  #L28d00a.  v2:= temp @kind object;
  #L28d00c.  v3:= length @variable v2;
  #L28d00e.  v4:= 0I;
  #L28d010.  v5:= 1I;
  #L28d012.  if v3 > v13 then goto L28d01a;
  #L28d016.  v3:= 1I;
  #L28d018.  goto L28d01c;
  #L28d01a.  v3:= 0I;
  #L28d01c.  v6:= new `android.content.ContentValues`;
  #L28d020.  call `<init>`(v6) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L28d026.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28d02c.  v0:= temp @kind object;
  #L28d02e.  v1:= "context_id" @kind object;
  #L28d032.  call `put`(v6, v1, v0) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Long;)V` @kind virtual;
  #L28d038.  call temp:= `getTransportName`(v12) @signature `Lcom/google/android/datatransport/runtime/EventInternal;.getTransportName:()Ljava/lang/String;` @kind virtual;
  #L28d03e.  v0:= temp @kind object;
  #L28d040.  v1:= "transport_name" @kind object;
  #L28d044.  call `put`(v6, v1, v0) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L28d04a.  call temp:= `getEventMillis`(v12) @signature `Lcom/google/android/datatransport/runtime/EventInternal;.getEventMillis:()J` @kind virtual;
  #L28d050.  v0:= temp @kind wide;
  #L28d052.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28d058.  v0:= temp @kind object;
  #L28d05a.  v1:= "timestamp_ms" @kind object;
  #L28d05e.  call `put`(v6, v1, v0) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Long;)V` @kind virtual;
  #L28d064.  call temp:= `getUptimeMillis`(v12) @signature `Lcom/google/android/datatransport/runtime/EventInternal;.getUptimeMillis:()J` @kind virtual;
  #L28d06a.  v0:= temp @kind wide;
  #L28d06c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28d072.  v0:= temp @kind object;
  #L28d074.  v1:= "uptime_ms" @kind object;
  #L28d078.  call `put`(v6, v1, v0) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Long;)V` @kind virtual;
  #L28d07e.  call temp:= `getEncodedPayload`(v12) @signature `Lcom/google/android/datatransport/runtime/EventInternal;.getEncodedPayload:()Lcom/google/android/datatransport/runtime/EncodedPayload;` @kind virtual;
  #L28d084.  v0:= temp @kind object;
  #L28d086.  call temp:= `getEncoding`(v0) @signature `Lcom/google/android/datatransport/runtime/EncodedPayload;.getEncoding:()Lcom/google/android/datatransport/Encoding;` @kind virtual;
  #L28d08c.  v0:= temp @kind object;
  #L28d08e.  call temp:= `getName`(v0) @signature `Lcom/google/android/datatransport/Encoding;.getName:()Ljava/lang/String;` @kind virtual;
  #L28d094.  v0:= temp @kind object;
  #L28d096.  v1:= "payload_encoding" @kind object;
  #L28d09a.  call `put`(v6, v1, v0) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L28d0a0.  call temp:= `getCode`(v12) @signature `Lcom/google/android/datatransport/runtime/EventInternal;.getCode:()Ljava/lang/Integer;` @kind virtual;
  #L28d0a6.  v0:= temp @kind object;
  #L28d0a8.  v1:= "code" @kind object;
  #L28d0ac.  call `put`(v6, v1, v0) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Integer;)V` @kind virtual;
  #L28d0b2.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28d0b8.  v0:= temp @kind object;
  #L28d0ba.  v1:= "num_attempts" @kind object;
  #L28d0be.  call `put`(v6, v1, v0) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Integer;)V` @kind virtual;
  #L28d0c4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L28d0ca.  v0:= temp @kind object;
  #L28d0cc.  v1:= "inline" @kind object;
  #L28d0d0.  call `put`(v6, v1, v0) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Boolean;)V` @kind virtual;
  #L28d0d6.  if v3 == 0 then goto L28d0de;
  #L28d0da.  v0:= v2 @kind object;
  #L28d0dc.  goto L28d0e2;
  #L28d0de.  v0:= new `byte`[v4];
  #L28d0e2.  v1:= "payload" @kind object;
  #L28d0e6.  call `put`(v6, v1, v0) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L28d0ec.  v0:= "events" @kind object;
  #L28d0f0.  v1:= 0I;
  #L28d0f2.  call temp:= `insert`(v14, v0, v1, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.insert:(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J` @kind virtual;
  #L28d0f8.  v6:= temp @kind wide;
  #L28d0fa.  v0:= "event_id" @kind object;
  #L28d0fe.  if v3 != 0 then goto L28d17a;
  #L28d102.  v3:= length @variable v2;
  #L28d104.  v3:= (`double`) v3 @kind i2d;
  #L28d106.  v8:= (`double`) v13 @kind i2d;
  #L28d108.  v3:= v3 / v8 @kind double;
  #L28d10a.  call temp:= `ceil`(v3) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L28d110.  v3:= temp @kind wide;
  #L28d112.  v3:= (`int`) v3 @kind d2i;
  #L28d114.  if v5 > v3 then goto L28d17a;
  #L28d118.  v4:= v5 + -1;
  #L28d11c.  v4:= v4 * v13 @kind int;
  #L28d120.  v8:= v5 * v13 @kind int;
  #L28d124.  v9:= length @variable v2;
  #L28d126.  call temp:= `min`(v8, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L28d12c.  v8:= temp;
  #L28d12e.  call temp:= `copyOfRange`(v2, v4, v8) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L28d134.  v4:= temp @kind object;
  #L28d136.  v8:= new `android.content.ContentValues`;
  #L28d13a.  call `<init>`(v8) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L28d140.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28d146.  v9:= temp @kind object;
  #L28d148.  call `put`(v8, v0, v9) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Long;)V` @kind virtual;
  #L28d14e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28d154.  v9:= temp @kind object;
  #L28d156.  v10:= "sequence_num" @kind object;
  #L28d15a.  call `put`(v8, v10, v9) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Integer;)V` @kind virtual;
  #L28d160.  v9:= "bytes" @kind object;
  #L28d164.  call `put`(v8, v9, v4) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L28d16a.  v4:= "event_payloads" @kind object;
  #L28d16e.  call temp:= `insert`(v14, v4, v1, v8) @signature `Landroid/database/sqlite/SQLiteDatabase;.insert:(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J` @kind virtual;
  #L28d174.  v5:= v5 + 1;
  #L28d178.  goto L28d114;
  #L28d17a.  call temp:= `getMetadata`(v12) @signature `Lcom/google/android/datatransport/runtime/EventInternal;.getMetadata:()Ljava/util/Map;` @kind virtual;
  #L28d180.  v12:= temp @kind object;
  #L28d182.  call temp:= `entrySet`(v12) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L28d188.  v12:= temp @kind object;
  #L28d18a.  call temp:= `iterator`(v12) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28d190.  v12:= temp @kind object;
  #L28d192.  call temp:= `hasNext`(v12) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28d198.  v13:= temp;
  #L28d19a.  if v13 == 0 then goto L28d1fa;
  #L28d19e.  call temp:= `next`(v12) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28d1a4.  v13:= temp @kind object;
  #L28d1a6.  v13:= (`java.util.Map$Entry`) v13 @kind object;
  #L28d1aa.  v2:= new `android.content.ContentValues`;
  #L28d1ae.  call `<init>`(v2) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L28d1b4.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28d1ba.  v3:= temp @kind object;
  #L28d1bc.  call `put`(v2, v0, v3) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Long;)V` @kind virtual;
  #L28d1c2.  call temp:= `getKey`(v13) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L28d1c8.  v3:= temp @kind object;
  #L28d1ca.  v3:= (`java.lang.String`) v3 @kind object;
  #L28d1ce.  v4:= "name" @kind object;
  #L28d1d2.  call `put`(v2, v4, v3) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L28d1d8.  call temp:= `getValue`(v13) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L28d1de.  v13:= temp @kind object;
  #L28d1e0.  v13:= (`java.lang.String`) v13 @kind object;
  #L28d1e4.  v3:= "value" @kind object;
  #L28d1e8.  call `put`(v2, v3, v13) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L28d1ee.  v13:= "event_metadata" @kind object;
  #L28d1f2.  call temp:= `insert`(v14, v13, v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.insert:(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J` @kind virtual;
  #L28d1f8.  goto L28d192;
  #L28d1fa.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28d200.  v12:= temp @kind object;
  #L28d202.  return v12 @kind object;
}
procedure `java.lang.Object` `f`(`long` v0 , `com.google.android.datatransport.runtime.TransportContext` v2 @kind object, `android.database.sqlite.SQLiteDatabase` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.f:(JLcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d24c.  call temp:= `k0`(v0, v2, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.k0:(JLcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @kind static;
  #L28d252.  v0:= temp @kind object;
  #L28d254.  return v0 @kind object;
}
procedure `byte`[] `f0`(`android.database.Cursor` v6 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.f0:(Landroid/database/Cursor;)[B` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28c718.  v0:= new `java.util.ArrayList`;
  #L28c71c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28c722.  v1:= 0I;
  #L28c724.  v2:= 0I;
  #L28c726.  call temp:= `moveToNext`(v6) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L28c72c.  v3:= temp;
  #L28c72e.  if v3 == 0 then goto L28c746;
  #L28c732.  call temp:= `getBlob`(v6, v1) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L28c738.  v3:= temp @kind object;
  #L28c73a.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L28c740.  v3:= length @variable v3;
  #L28c742.  v2:= v2 + v3 @kind int;
  #L28c744.  goto L28c726;
  #L28c746.  v6:= new `byte`[v2];
  #L28c74a.  v2:= 0I;
  #L28c74c.  v3:= 0I;
  #L28c74e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28c754.  v4:= temp;
  #L28c756.  if v2 >= v4 then goto L28c778;
  #L28c75a.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L28c760.  v4:= temp @kind object;
  #L28c762.  v4:= (`byte`[]) v4 @kind object;
  #L28c766.  v5:= length @variable v4;
  #L28c768.  call `arraycopy`(v4, v1, v6, v3, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L28c76e.  v4:= length @variable v4;
  #L28c770.  v3:= v3 + v4 @kind int;
  #L28c772.  v2:= v2 + 1;
  #L28c776.  goto L28c74e;
  #L28c778.  return v6 @kind object;
}
procedure `byte`[] `g`(`android.database.Cursor` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.g:(Landroid/database/Cursor;)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28c6fc.  call temp:= `f0`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.f0:(Landroid/database/Cursor;)[B` @kind static;
  #L28c702.  v0:= temp @kind object;
  #L28c704.  return v0 @kind object;
}
procedure `java.lang.Object` `g0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v4 @kind this, `android.database.Cursor` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.g0:(Landroid/database/Cursor;)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28d5d8.  call temp:= `moveToNext`(v5) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L28d5de.  v0:= temp;
  #L28d5e0.  if v0 == 0 then goto L28d606;
  #L28d5e4.  v0:= 0I;
  #L28d5e6.  call temp:= `getInt`(v5, v0) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L28d5ec.  v0:= temp;
  #L28d5ee.  v1:= 1I;
  #L28d5f0.  call temp:= `getString`(v5, v1) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L28d5f6.  v1:= temp @kind object;
  #L28d5f8.  v2:= (`long`) v0 @kind i2l;
  #L28d5fa.  v0:= `@@com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason.MAX_RETRIES_REACHED` @type ^`com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` @kind object;
  #L28d5fe.  call `recordLogEventDropped`(v4, v2, v0, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.recordLogEventDropped:(JLcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;Ljava/lang/String;)V` @kind virtual;
  #L28d604.  goto L28d5d8;
  #L28d606.  v5:= 0I;
  #L28d608.  return v5 @kind object;
}
procedure `long` `getPageSize`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v2 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.getPageSize:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L28df30.  call temp:= `E`(v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.E:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L28df36.  v0:= temp @kind object;
  #L28df38.  v1:= "PRAGMA page_size" @kind object;
  #L28df3c.  call temp:= `compileStatement`(v0, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #L28df42.  v0:= temp @kind object;
  #L28df44.  call temp:= `simpleQueryForLong`(v0) @signature `Landroid/database/sqlite/SQLiteStatement;.simpleQueryForLong:()J` @kind virtual;
  #L28df4a.  v0:= temp @kind wide;
  #L28df4c.  return v0 @kind wide;
}
procedure `java.lang.Object` `h`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.h:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d268.  call temp:= `O`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.O:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @kind static;
  #L28d26e.  v0:= temp @kind object;
  #L28d270.  return v0 @kind object;
}
procedure `java.lang.Object` `h0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.h0:(Ljava/lang/String;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L28d61c.  call temp:= `compileStatement`(v4, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #L28d622.  v2:= temp @kind object;
  #L28d624.  call `execute`(v2) @signature `Landroid/database/sqlite/SQLiteStatement;.execute:()V` @kind virtual;
  #L28d62a.  v2:= 0I;
  #L28d62c.  call temp:= `rawQuery`(v4, v3, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28d632.  v3:= temp @kind object;
  #L28d634.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.z`;
  #L28d638.  call `<init>`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/z;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;)V` @kind direct;
  #L28d63e.  call temp:= `u0`(v3, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28d644.  v3:= "DELETE FROM events WHERE num_attempts >= 16" @kind object;
  #L28d648.  call temp:= `compileStatement`(v4, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #L28d64e.  v3:= temp @kind object;
  #L28d650.  call `execute`(v3) @signature `Landroid/database/sqlite/SQLiteStatement;.execute:()V` @kind virtual;
  #L28d656.  return v2 @kind object;
}
procedure `java.util.List` `i`(`android.database.Cursor` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.i:(Landroid/database/Cursor;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d9fc.  call temp:= `Y`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.Y:(Landroid/database/Cursor;)Ljava/util/List;` @kind static;
  #L28da02.  v0:= temp @kind object;
  #L28da04.  return v0 @kind object;
}
procedure `java.lang.Boolean` `i0`(`android.database.Cursor` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.i0:(Landroid/database/Cursor;)Ljava/lang/Boolean;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L28cd18.  call temp:= `getCount`(v0) @signature `Landroid/database/Cursor;.getCount:()I` @kind interface;
  #L28cd1e.  v0:= temp;
  #L28cd20.  if v0 <= 0 then goto L28cd28;
  #L28cd24.  v0:= 1I;
  #L28cd26.  goto L28cd2a;
  #L28cd28.  v0:= 0I;
  #L28cd2a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L28cd30.  v0:= temp @kind object;
  #L28cd32.  return v0 @kind object;
}
procedure `java.lang.Object` `j`(`java.lang.String` v0 @kind object, `com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` v1 @kind object, `long` v2 , `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.j:(Ljava/lang/String;Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;JLandroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d284.  call temp:= `j0`(v0, v1, v2, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.j0:(Ljava/lang/String;Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;JLandroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @kind static;
  #L28d28a.  v0:= temp @kind object;
  #L28d28c.  return v0 @kind object;
}
procedure `java.lang.Object` `j0`(`java.lang.String` v6 @kind object, `com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` v7 @kind object, `long` v8 , `android.database.sqlite.SQLiteDatabase` v10 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.j0:(Ljava/lang/String;Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;JLandroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28d668.  v0:= 2I;
  #L28d66a.  v1:= new `java.lang.String`[v0];
  #L28d66e.  v2:= 0I;
  #L28d670.  v1[v2]:= v6 @kind object;
  #L28d674.  call temp:= `getNumber`(v7) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;.getNumber:()I` @kind virtual;
  #L28d67a.  v3:= temp;
  #L28d67c.  call temp:= `toString`(v3) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L28d682.  v3:= temp @kind object;
  #L28d684.  v4:= 1I;
  #L28d686.  v1[v4]:= v3 @kind object;
  #L28d68a.  v3:= "SELECT 1 FROM log_event_dropped WHERE log_source = ? AND reason = ?" @kind object;
  #L28d68e.  call temp:= `rawQuery`(v10, v3, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28d694.  v1:= temp @kind object;
  #L28d696.  v3:= `@@com.google.android.datatransport.runtime.scheduling.persistence.p.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.p` @kind object;
  #L28d69a.  call temp:= `u0`(v1, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28d6a0.  v1:= temp @kind object;
  #L28d6a2.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L28d6a6.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L28d6ac.  v1:= temp;
  #L28d6ae.  v3:= 0I;
  #L28d6b0.  if v1 != 0 then goto L28d700;
  #L28d6b4.  v0:= new `android.content.ContentValues`;
  #L28d6b8.  call `<init>`(v0) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L28d6be.  v1:= "log_source" @kind object;
  #L28d6c2.  call `put`(v0, v1, v6) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L28d6c8.  call temp:= `getNumber`(v7) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;.getNumber:()I` @kind virtual;
  #L28d6ce.  v6:= temp;
  #L28d6d0.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28d6d6.  v6:= temp @kind object;
  #L28d6d8.  v7:= "reason" @kind object;
  #L28d6dc.  call `put`(v0, v7, v6) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Integer;)V` @kind virtual;
  #L28d6e2.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28d6e8.  v6:= temp @kind object;
  #L28d6ea.  v7:= "events_dropped_count" @kind object;
  #L28d6ee.  call `put`(v0, v7, v6) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Long;)V` @kind virtual;
  #L28d6f4.  v6:= "log_event_dropped" @kind object;
  #L28d6f8.  call temp:= `insert`(v10, v6, v3, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.insert:(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J` @kind virtual;
  #L28d6fe.  goto L28d74e;
  #L28d700.  v1:= new `java.lang.StringBuilder`;
  #L28d704.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28d70a.  v5:= "UPDATE log_event_dropped SET events_dropped_count = events_dropped_count + " @kind object;
  #L28d70e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28d714.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L28d71a.  v8:= " WHERE log_source = ? AND reason = ?" @kind object;
  #L28d71e.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28d724.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28d72a.  v8:= temp @kind object;
  #L28d72c.  v9:= new `java.lang.String`[v0];
  #L28d730.  v9[v2]:= v6 @kind object;
  #L28d734.  call temp:= `getNumber`(v7) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;.getNumber:()I` @kind virtual;
  #L28d73a.  v6:= temp;
  #L28d73c.  call temp:= `toString`(v6) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L28d742.  v6:= temp @kind object;
  #L28d744.  v9[v4]:= v6 @kind object;
  #L28d748.  call `execSQL`(v10, v8, v9) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L28d74e.  return v3 @kind object;
}
procedure `java.lang.Object` `k`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.k:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Landroid/database/Cursor;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d2a0.  call temp:= `M`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.M:(Landroid/database/Cursor;)Ljava/lang/Object;` @kind direct;
  #L28d2a6.  v0:= temp @kind object;
  #L28d2a8.  return v0 @kind object;
}
procedure `java.lang.Object` `k0`(`long` v3 , `com.google.android.datatransport.runtime.TransportContext` v5 @kind object, `android.database.sqlite.SQLiteDatabase` v6 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.k0:(JLcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L28d760.  v0:= new `android.content.ContentValues`;
  #L28d764.  call `<init>`(v0) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L28d76a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L28d770.  v3:= temp @kind object;
  #L28d772.  v4:= "next_request_ms" @kind object;
  #L28d776.  call `put`(v0, v4, v3) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Long;)V` @kind virtual;
  #L28d77c.  v3:= 2I;
  #L28d77e.  v3:= new `java.lang.String`[v3];
  #L28d782.  call temp:= `getBackendName`(v5) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L28d788.  v4:= temp @kind object;
  #L28d78a.  v1:= 0I;
  #L28d78c.  v3[v1]:= v4 @kind object;
  #L28d790.  call temp:= `getPriority`(v5) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getPriority:()Lcom/google/android/datatransport/Priority;` @kind virtual;
  #L28d796.  v4:= temp @kind object;
  #L28d798.  call temp:= `toInt`(v4) @signature `Lcom/google/android/datatransport/runtime/util/PriorityMapping;.toInt:(Lcom/google/android/datatransport/Priority;)I` @kind static;
  #L28d79e.  v4:= temp;
  #L28d7a0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L28d7a6.  v4:= temp @kind object;
  #L28d7a8.  v1:= 1I;
  #L28d7aa.  v3[v1]:= v4 @kind object;
  #L28d7ae.  v4:= "transport_contexts" @kind object;
  #L28d7b2.  v2:= "backend_name = ? and priority = ?" @kind object;
  #L28d7b6.  call temp:= `update`(v6, v4, v0, v2, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.update:(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I` @kind virtual;
  #L28d7bc.  v3:= temp;
  #L28d7be.  v2:= 0I;
  #L28d7c0.  if v3 >= v1 then goto L28d7fe;
  #L28d7c4.  call temp:= `getBackendName`(v5) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L28d7ca.  v3:= temp @kind object;
  #L28d7cc.  v1:= "backend_name" @kind object;
  #L28d7d0.  call `put`(v0, v1, v3) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L28d7d6.  call temp:= `getPriority`(v5) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getPriority:()Lcom/google/android/datatransport/Priority;` @kind virtual;
  #L28d7dc.  v3:= temp @kind object;
  #L28d7de.  call temp:= `toInt`(v3) @signature `Lcom/google/android/datatransport/runtime/util/PriorityMapping;.toInt:(Lcom/google/android/datatransport/Priority;)I` @kind static;
  #L28d7e4.  v3:= temp;
  #L28d7e6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28d7ec.  v3:= temp @kind object;
  #L28d7ee.  v5:= "priority" @kind object;
  #L28d7f2.  call `put`(v0, v5, v3) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Integer;)V` @kind virtual;
  #L28d7f8.  call temp:= `insert`(v6, v4, v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.insert:(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J` @kind virtual;
  #L28d7fe.  return v2 @kind object;
}
procedure `java.lang.Boolean` `l`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `com.google.android.datatransport.runtime.TransportContext` v1 @kind object, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.l:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28cc84.  call temp:= `W`(v0, v1, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.W:(Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Boolean;` @kind direct;
  #L28cc8a.  v0:= temp @kind object;
  #L28cc8c.  return v0 @kind object;
}
procedure `java.lang.Object` `l0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v3 @kind this, `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.l0:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L28d810.  v0:= "DELETE FROM log_event_dropped" @kind object;
  #L28d814.  call temp:= `compileStatement`(v4, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #L28d81a.  v0:= temp @kind object;
  #L28d81c.  call `execute`(v0) @signature `Landroid/database/sqlite/SQLiteStatement;.execute:()V` @kind virtual;
  #L28d822.  v0:= new `java.lang.StringBuilder`;
  #L28d826.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28d82c.  v1:= "UPDATE global_log_event_state SET last_metrics_upload_ms=" @kind object;
  #L28d830.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28d836.  v1:= v3.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.b` @type ^`com.google.android.datatransport.runtime.time.Clock` @kind object;
  #L28d83a.  call temp:= `getTime`(v1) @signature `Lcom/google/android/datatransport/runtime/time/Clock;.getTime:()J` @kind interface;
  #L28d840.  v1:= temp @kind wide;
  #L28d842.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L28d848.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28d84e.  v0:= temp @kind object;
  #L28d850.  call temp:= `compileStatement`(v4, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #L28d856.  v4:= temp @kind object;
  #L28d858.  call `execute`(v4) @signature `Landroid/database/sqlite/SQLiteStatement;.execute:()V` @kind virtual;
  #L28d85e.  v4:= 0I;
  #L28d860.  return v4 @kind object;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.TimeWindow` `m`(`long` v0 , `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.m:(JLandroid/database/sqlite/SQLiteDatabase;)Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28cae0.  call temp:= `U`(v0, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.U:(JLandroid/database/sqlite/SQLiteDatabase;)Lcom/google/android/datatransport/runtime/firebase/transport/TimeWindow;` @kind static;
  #L28cae6.  v0:= temp @kind object;
  #L28cae8.  return v0 @kind object;
}
procedure `java.util.List` `m0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v19 @kind this, `android.database.sqlite.SQLiteDatabase` v20 @kind object, `com.google.android.datatransport.runtime.TransportContext` v21 @kind object, `int` v22 ) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.m0:(Landroid/database/sqlite/SQLiteDatabase;Lcom/google/android/datatransport/runtime/TransportContext;I)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L28dc54.  v0:= new `java.util.ArrayList`;
  #L28dc58.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28dc5e.  call temp:= `I`(v19, v20, v21) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.I:(Landroid/database/sqlite/SQLiteDatabase;Lcom/google/android/datatransport/runtime/TransportContext;)Ljava/lang/Long;` @kind direct;
  #L28dc64.  v1:= temp @kind object;
  #L28dc66.  if v1 != 0 then goto L28dc6c;
  #L28dc6a.  return v0 @kind object;
  #L28dc6c.  v2:= "_id" @kind object;
  #L28dc70.  v3:= "transport_name" @kind object;
  #L28dc74.  v4:= "timestamp_ms" @kind object;
  #L28dc78.  v5:= "uptime_ms" @kind object;
  #L28dc7c.  v6:= "payload_encoding" @kind object;
  #L28dc80.  v7:= "payload" @kind object;
  #L28dc84.  v8:= "code" @kind object;
  #L28dc88.  v9:= "inline" @kind object;
  #L28dc8c.  temp:= new `java.lang.String`[v2, v3, v4, v5, v6, v7, v8, v9];
  #L28dc92.  v12:= temp @kind object;
  #L28dc94.  v2:= 1I;
  #L28dc96.  v14:= new `java.lang.String`[v2];
  #L28dc9a.  v2:= 0I;
  #L28dc9c.  call temp:= `toString`(v1) @signature `Ljava/lang/Long;.toString:()Ljava/lang/String;` @kind virtual;
  #L28dca2.  v1:= temp @kind object;
  #L28dca4.  v14[v2]:= v1 @kind object;
  #L28dca8.  v15:= 0I;
  #L28dcaa.  v16:= 0I;
  #L28dcae.  v17:= 0I;
  #L28dcb2.  call temp:= `valueOf`(v22) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L28dcb8.  v18:= temp @kind object;
  #L28dcba.  v11:= "events" @kind object;
  #L28dcbe.  v13:= "context_id = ?" @kind object;
  #L28dcc2.  v10:= v20 @kind object;
  #L28dcc6.  call temp:= `query`(v10, v11, v12, v13, v14, v15, v16, v17, v18) @signature `Landroid/database/sqlite/SQLiteDatabase;.query:(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28dccc.  v1:= temp @kind object;
  #L28dcce.  v2:= new `com.google.android.datatransport.runtime.scheduling.persistence.g`;
  #L28dcd2.  v3:= v19 @kind object;
  #L28dcd6.  v4:= v21 @kind object;
  #L28dcda.  call `<init>`(v2, v3, v0, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/g;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Ljava/util/List;Lcom/google/android/datatransport/runtime/TransportContext;)V` @kind direct;
  #L28dce0.  call temp:= `u0`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28dce6.  return v0 @kind object;
}
procedure `java.lang.Long` `n`(`android.database.Cursor` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.n:(Landroid/database/Cursor;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28ce08.  call temp:= `S`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.S:(Landroid/database/Cursor;)Ljava/lang/Long;` @kind static;
  #L28ce0e.  v0:= temp @kind object;
  #L28ce10.  return v0 @kind object;
}
procedure `java.util.Map` `n0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v12 @kind this, `android.database.sqlite.SQLiteDatabase` v13 @kind object, `java.util.List` v14 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.n0:(Landroid/database/sqlite/SQLiteDatabase;Ljava/util/List;)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L28dcf8.  v0:= new `java.util.HashMap`;
  #L28dcfc.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L28dd02.  v1:= new `java.lang.StringBuilder`;
  #L28dd06.  v2:= "event_id IN (" @kind object;
  #L28dd0a.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28dd10.  v2:= 0I;
  #L28dd12.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28dd18.  v3:= temp;
  #L28dd1a.  if v2 >= v3 then goto L28dd58;
  #L28dd1e.  call temp:= `get`(v14, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L28dd24.  v3:= temp @kind object;
  #L28dd26.  v3:= (`com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent`) v3 @kind object;
  #L28dd2a.  call temp:= `getId`(v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.getId:()J` @kind virtual;
  #L28dd30.  v3:= temp @kind wide;
  #L28dd32.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dd38.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28dd3e.  v3:= temp;
  #L28dd40.  v3:= v3 + -1;
  #L28dd44.  if v2 >= v3 then goto L28dd52;
  #L28dd48.  v3:= 44I;
  #L28dd4c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dd52.  v2:= v2 + 1;
  #L28dd56.  goto L28dd12;
  #L28dd58.  v14:= 41I;
  #L28dd5c.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dd62.  v14:= "event_id" @kind object;
  #L28dd66.  v2:= "name" @kind object;
  #L28dd6a.  v3:= "value" @kind object;
  #L28dd6e.  temp:= new `java.lang.String`[v14, v2, v3];
  #L28dd74.  v6:= temp @kind object;
  #L28dd76.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28dd7c.  v7:= temp @kind object;
  #L28dd7e.  v8:= 0I;
  #L28dd80.  v9:= 0I;
  #L28dd82.  v10:= 0I;
  #L28dd84.  v11:= 0I;
  #L28dd86.  v5:= "event_metadata" @kind object;
  #L28dd8a.  v4:= v13 @kind object;
  #L28dd8c.  call temp:= `query`(v4, v5, v6, v7, v8, v9, v10, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.query:(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28dd92.  v13:= temp @kind object;
  #L28dd94.  v14:= new `com.google.android.datatransport.runtime.scheduling.persistence.j`;
  #L28dd98.  call `<init>`(v14, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/j;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L28dd9e.  call temp:= `u0`(v13, v14) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28dda4.  return v0 @kind object;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.ClientMetrics` `o`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `java.lang.String` v1 @kind object, `java.util.Map` v2 @kind object, `com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder` v3 @kind object, `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.o:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Ljava/lang/String;Ljava/util/Map;Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;Landroid/database/sqlite/SQLiteDatabase;)Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28c838.  call temp:= `b0`(v0, v1, v2, v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.b0:(Ljava/lang/String;Ljava/util/Map;Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;Landroid/database/sqlite/SQLiteDatabase;)Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics;` @kind direct;
  #L28c83e.  v0:= temp @kind object;
  #L28c840.  return v0 @kind object;
}
procedure `byte`[] `o0`(`java.lang.String` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.o0:(Ljava/lang/String;)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L28c78c.  if v1 != 0 then goto L28c794;
  #L28c790.  v1:= 0I;
  #L28c792.  return v1 @kind object;
  #L28c794.  v0:= 0I;
  #L28c796.  call temp:= `decode`(v1, v0) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L28c79c.  v1:= temp @kind object;
  #L28c79e.  return v1 @kind object;
}
procedure `java.lang.Object` `p`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `java.util.List` v1 @kind object, `com.google.android.datatransport.runtime.TransportContext` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.p:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Ljava/util/List;Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/Cursor;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d2bc.  call temp:= `c0`(v0, v1, v2, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.c0:(Ljava/util/List;Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/Cursor;)Ljava/lang/Object;` @kind direct;
  #L28d2c2.  v0:= temp @kind object;
  #L28d2c4.  return v0 @kind object;
}
procedure `void` `p0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v3 @kind this, `com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.p0:(Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;Ljava/util/Map;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L28e010.  call temp:= `entrySet`(v5) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L28e016.  v5:= temp @kind object;
  #L28e018.  call temp:= `iterator`(v5) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28e01e.  v5:= temp @kind object;
  #L28e020.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28e026.  v0:= temp;
  #L28e028.  if v0 == 0 then goto L28e078;
  #L28e02c.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28e032.  v0:= temp @kind object;
  #L28e034.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L28e038.  call temp:= `newBuilder`() @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogSourceMetrics;.newBuilder:()Lcom/google/android/datatransport/runtime/firebase/transport/LogSourceMetrics$Builder;` @kind static;
  #L28e03e.  v1:= temp @kind object;
  #L28e040.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L28e046.  v2:= temp @kind object;
  #L28e048.  v2:= (`java.lang.String`) v2 @kind object;
  #L28e04c.  call temp:= `setLogSource`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogSourceMetrics$Builder;.setLogSource:(Ljava/lang/String;)Lcom/google/android/datatransport/runtime/firebase/transport/LogSourceMetrics$Builder;` @kind virtual;
  #L28e052.  v1:= temp @kind object;
  #L28e054.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L28e05a.  v0:= temp @kind object;
  #L28e05c.  v0:= (`java.util.List`) v0 @kind object;
  #L28e060.  call temp:= `setLogEventDroppedList`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogSourceMetrics$Builder;.setLogEventDroppedList:(Ljava/util/List;)Lcom/google/android/datatransport/runtime/firebase/transport/LogSourceMetrics$Builder;` @kind virtual;
  #L28e066.  v0:= temp @kind object;
  #L28e068.  call temp:= `build`(v0) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/LogSourceMetrics$Builder;.build:()Lcom/google/android/datatransport/runtime/firebase/transport/LogSourceMetrics;` @kind virtual;
  #L28e06e.  v0:= temp @kind object;
  #L28e070.  call temp:= `addLogSourceMetrics`(v4, v0) @signature `Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;.addLogSourceMetrics:(Lcom/google/android/datatransport/runtime/firebase/transport/LogSourceMetrics;)Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;` @kind virtual;
  #L28e076.  goto L28e020;
  #L28e078.  return @kind void;
}
procedure `java.lang.Object` `q`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.q:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d2d8.  call temp:= `l0`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.l0:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @kind direct;
  #L28d2de.  v0:= temp @kind object;
  #L28d2e0.  return v0 @kind object;
}
procedure `byte`[] `q0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v8 @kind this, `long` v9 ) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.q0:(J)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L28c7b0.  call temp:= `E`(v8) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.E:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L28c7b6.  v0:= temp @kind object;
  #L28c7b8.  v1:= "bytes" @kind object;
  #L28c7bc.  temp:= new `java.lang.String`[v1];
  #L28c7c2.  v2:= temp @kind object;
  #L28c7c4.  v1:= 1I;
  #L28c7c6.  v4:= new `java.lang.String`[v1];
  #L28c7ca.  call temp:= `valueOf`(v9) @signature `Ljava/lang/String;.valueOf:(J)Ljava/lang/String;` @kind static;
  #L28c7d0.  v9:= temp @kind object;
  #L28c7d2.  v10:= 0I;
  #L28c7d4.  v4[v10]:= v9 @kind object;
  #L28c7d8.  v1:= "event_payloads" @kind object;
  #L28c7dc.  v3:= "event_id = ?" @kind object;
  #L28c7e0.  v5:= 0I;
  #L28c7e2.  v6:= 0I;
  #L28c7e4.  v7:= "sequence_num" @kind object;
  #L28c7e8.  call temp:= `query`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/database/sqlite/SQLiteDatabase;.query:(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28c7ee.  v9:= temp @kind object;
  #L28c7f0.  v10:= `@@com.google.android.datatransport.runtime.scheduling.persistence.k.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.k` @kind object;
  #L28c7f4.  call temp:= `u0`(v9, v10) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28c7fa.  v9:= temp @kind object;
  #L28c7fc.  v9:= (`byte`[]) v9 @kind object;
  #L28c800.  return v9 @kind object;
}
procedure `java.lang.Long` `r`(`android.database.Cursor` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.r:(Landroid/database/Cursor;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28ce24.  call temp:= `V`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.V:(Landroid/database/Cursor;)Ljava/lang/Long;` @kind static;
  #L28ce2a.  v0:= temp @kind object;
  #L28ce2c.  return v0 @kind object;
}
procedure `java.lang.Object` `r0`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v8 @kind this, `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$d` v9 @kind object, `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$b` v10 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.r0:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$d;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L28d874.  v0:= v8.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.c` @type ^`com.google.android.datatransport.runtime.time.Clock` @kind object;
  #L28d878.  call temp:= `getTime`(v0) @signature `Lcom/google/android/datatransport/runtime/time/Clock;.getTime:()J` @kind interface;
  #L28d87e.  v0:= temp @kind wide;
  #L28d880.  call temp:= `a`(v9) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$d;.a:()Ljava/lang/Object;` @kind interface;
  #L28d886.  v9:= temp @kind object;
  #L28d888.  return v9 @kind object;
  #L28d88a.  v2:= Exception @type ^`android.database.sqlite.SQLiteDatabaseLockedException` @kind object;
  #L28d88c.  v3:= v8.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.c` @type ^`com.google.android.datatransport.runtime.time.Clock` @kind object;
  #L28d890.  call temp:= `getTime`(v3) @signature `Lcom/google/android/datatransport/runtime/time/Clock;.getTime:()J` @kind interface;
  #L28d896.  v3:= temp @kind wide;
  #L28d898.  v5:= v8.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.d` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.c` @kind object;
  #L28d89c.  call temp:= `b`(v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c;.b:()I` @kind virtual;
  #L28d8a2.  v5:= temp;
  #L28d8a4.  v5:= (`long`) v5 @kind i2l;
  #L28d8a6.  v5:= v5 + v0 @kind long;
  #L28d8a8.  v7:= lcmp(v3, v5);
  #L28d8ac.  if v7 < 0 then goto L28d8ba;
  #L28d8b0.  call temp:= `apply`(v10, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28d8b6.  v9:= temp @kind object;
  #L28d8b8.  return v9 @kind object;
  #L28d8ba.  v2:= 50L;
  #L28d8be.  call `sleep`(v2) @signature `Landroid/os/SystemClock;.sleep:(J)V` @kind static;
  #L28d8c4.  goto L28d880;
  catch `android.database.sqlite.SQLiteDatabaseLockedException` @[L28d880..L28d888] goto L28d88a;
}
procedure `java.lang.Object` `s`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `android.database.sqlite.SQLiteDatabase` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.s:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Ljava/lang/String;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d2f4.  call temp:= `h0`(v0, v1, v2, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.h0:(Ljava/lang/String;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Object;` @kind direct;
  #L28d2fa.  v0:= temp @kind object;
  #L28d2fc.  return v0 @kind object;
}
procedure `com.google.android.datatransport.Encoding` `s0`(`java.lang.String` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.s0:(Ljava/lang/String;)Lcom/google/android/datatransport/Encoding;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L28c814.  if v0 != 0 then goto L28c81e;
  #L28c818.  v0:= `@@com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.f` @type ^`com.google.android.datatransport.Encoding` @kind object;
  #L28c81c.  return v0 @kind object;
  #L28c81e.  call temp:= `of`(v0) @signature `Lcom/google/android/datatransport/Encoding;.of:(Ljava/lang/String;)Lcom/google/android/datatransport/Encoding;` @kind static;
  #L28c824.  v0:= temp @kind object;
  #L28c826.  return v0 @kind object;
}
procedure `java.lang.Long` `t`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `com.google.android.datatransport.runtime.EventInternal` v1 @kind object, `com.google.android.datatransport.runtime.TransportContext` v2 @kind object, `android.database.sqlite.SQLiteDatabase` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.t:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Lcom/google/android/datatransport/runtime/EventInternal;Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28ce40.  call temp:= `e0`(v0, v1, v2, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.e0:(Lcom/google/android/datatransport/runtime/EventInternal;Lcom/google/android/datatransport/runtime/TransportContext;Landroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Long;` @kind direct;
  #L28ce46.  v0:= temp @kind object;
  #L28ce48.  return v0 @kind object;
}
procedure `java.lang.String` `t0`(`java.lang.Iterable` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.t0:(Ljava/lang/Iterable;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L28d968.  v0:= new `java.lang.StringBuilder`;
  #L28d96c.  v1:= "(" @kind object;
  #L28d970.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28d976.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28d97c.  v3:= temp @kind object;
  #L28d97e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28d984.  v1:= temp;
  #L28d986.  if v1 == 0 then goto L28d9bc;
  #L28d98a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28d990.  v1:= temp @kind object;
  #L28d992.  v1:= (`com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent`) v1 @kind object;
  #L28d996.  call temp:= `getId`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.getId:()J` @kind virtual;
  #L28d99c.  v1:= temp @kind wide;
  #L28d99e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L28d9a4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28d9aa.  v1:= temp;
  #L28d9ac.  if v1 == 0 then goto L28d97e;
  #L28d9b0.  v1:= 44I;
  #L28d9b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28d9ba.  goto L28d97e;
  #L28d9bc.  v3:= 41I;
  #L28d9c0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28d9c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28d9cc.  v3:= temp @kind object;
  #L28d9ce.  return v3 @kind object;
}
procedure `java.lang.Object` `u`(`java.util.Map` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u:(Ljava/util/Map;Landroid/database/Cursor;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d310.  call temp:= `d0`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.d0:(Ljava/util/Map;Landroid/database/Cursor;)Ljava/lang/Object;` @kind static;
  #L28d316.  v0:= temp @kind object;
  #L28d318.  return v0 @kind object;
}
procedure `java.lang.Object` `u0`(`android.database.Cursor` v0 @kind object, `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$b` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L28d930.  call temp:= `apply`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28d936.  v1:= temp @kind object;
  #L28d938.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L28d93e.  return v1 @kind object;
  #L28d940.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28d942.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L28d948.  throw v1;
  catch `java.lang.Throwable` @[L28d930..L28d938] goto L28d940;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.ClientMetrics` `v`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `java.util.Map` v1 @kind object, `com.google.android.datatransport.runtime.firebase.transport.ClientMetrics$Builder` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.v:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Ljava/util/Map;Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;Landroid/database/Cursor;)Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28c854.  call temp:= `a0`(v0, v1, v2, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.a0:(Ljava/util/Map;Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;Landroid/database/Cursor;)Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics;` @kind direct;
  #L28c85a.  v0:= temp @kind object;
  #L28c85c.  return v0 @kind object;
}
procedure `java.lang.Object` `w`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.w:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Landroid/database/Cursor;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28d32c.  call temp:= `g0`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.g0:(Landroid/database/Cursor;)Ljava/lang/Object;` @kind direct;
  #L28d332.  v0:= temp @kind object;
  #L28d334.  return v0 @kind object;
}
procedure `java.lang.Integer` `x`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v0 @kind object, `long` v1 , `android.database.sqlite.SQLiteDatabase` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.x:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;JLandroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28cd44.  call temp:= `N`(v0, v1, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.N:(JLandroid/database/sqlite/SQLiteDatabase;)Ljava/lang/Integer;` @kind direct;
  #L28cd4a.  v0:= temp @kind object;
  #L28cd4c.  return v0 @kind object;
}
procedure `java.util.List` `y`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.y:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28da18.  call temp:= `X`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.X:(Landroid/database/sqlite/SQLiteDatabase;)Ljava/util/List;` @kind static;
  #L28da1e.  v0:= temp @kind object;
  #L28da20.  return v0 @kind object;
}
procedure `java.lang.Boolean` `z`(`android.database.Cursor` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.z:(Landroid/database/Cursor;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L28cca0.  call temp:= `i0`(v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.i0:(Landroid/database/Cursor;)Ljava/lang/Boolean;` @kind static;
  #L28cca6.  v0:= temp @kind object;
  #L28cca8.  return v0 @kind object;
}
procedure `long` `D`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v4 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.D:()J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28de68.  call temp:= `G`(v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.G:()J` @kind direct;
  #L28de6e.  v0:= temp @kind wide;
  #L28de70.  call temp:= `getPageSize`(v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.getPageSize:()J` @kind direct;
  #L28de76.  v2:= temp @kind wide;
  #L28de78.  v0:= v0 * v2 @kind long;
  #L28de7c.  return v0 @kind wide;
}
procedure `android.database.sqlite.SQLiteDatabase` `E`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v2 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.E:()Landroid/database/sqlite/SQLiteDatabase;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L28c634.  v0:= v2.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` @kind object;
  #L28c638.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L28c63e.  v1:= new `com.google.android.datatransport.runtime.scheduling.persistence.w`;
  #L28c642.  call `<init>`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/w;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SchemaManager;)V` @kind direct;
  #L28c648.  v0:= `@@com.google.android.datatransport.runtime.scheduling.persistence.t.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.t` @kind object;
  #L28c64c.  call temp:= `r0`(v2, v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.r0:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$d;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind direct;
  #L28c652.  v0:= temp @kind object;
  #L28c654.  v0:= (`android.database.sqlite.SQLiteDatabase`) v0 @kind object;
  #L28c658.  return v0 @kind object;
}
procedure `java.lang.Object` `J`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this, `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$b` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L28d348.  call temp:= `E`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.E:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L28d34e.  v0:= temp @kind object;
  #L28d350.  call `beginTransaction`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.beginTransaction:()V` @kind virtual;
  #L28d356.  call temp:= `apply`(v2, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28d35c.  v2:= temp @kind object;
  #L28d35e.  call `setTransactionSuccessful`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.setTransactionSuccessful:()V` @kind virtual;
  #L28d364.  call `endTransaction`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.endTransaction:()V` @kind virtual;
  #L28d36a.  return v2 @kind object;
  #L28d36c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28d36e.  call `endTransaction`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.endTransaction:()V` @kind virtual;
  #L28d374.  throw v2;
  catch `java.lang.Throwable` @[L28d356..L28d364] goto L28d36c;
}
procedure `int` `cleanUp`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v4 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.cleanUp:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28cc38.  v0:= v4.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.b` @type ^`com.google.android.datatransport.runtime.time.Clock` @kind object;
  #L28cc3c.  call temp:= `getTime`(v0) @signature `Lcom/google/android/datatransport/runtime/time/Clock;.getTime:()J` @kind interface;
  #L28cc42.  v0:= temp @kind wide;
  #L28cc44.  v2:= v4.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.d` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.c` @kind object;
  #L28cc48.  call temp:= `c`(v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c;.c:()J` @kind virtual;
  #L28cc4e.  v2:= temp @kind wide;
  #L28cc50.  v0:= v0 - v2 @kind long;
  #L28cc52.  v2:= new `com.google.android.datatransport.runtime.scheduling.persistence.b0`;
  #L28cc56.  call `<init>`(v2, v4, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/b0;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;J)V` @kind direct;
  #L28cc5c.  call temp:= `J`(v4, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28cc62.  v0:= temp @kind object;
  #L28cc64.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L28cc68.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L28cc6e.  v0:= temp;
  #L28cc70.  return v0;
}
procedure `void` `clearDb`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.clearDb:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28dfb0.  v0:= `@@com.google.android.datatransport.runtime.scheduling.persistence.r.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.r` @kind object;
  #L28dfb4.  call temp:= `J`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28dfba.  return @kind void;
}
procedure `void` `close`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28dfcc.  v0:= v1.`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` @kind object;
  #L28dfd0.  call `close`(v0) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.close:()V` @kind virtual;
  #L28dfd6.  return @kind void;
}
procedure `long` `getNextCallTime`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v4 @kind this, `com.google.android.datatransport.runtime.TransportContext` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.getNextCallTime:(Lcom/google/android/datatransport/runtime/TransportContext;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28de90.  call temp:= `E`(v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.E:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L28de96.  v0:= temp @kind object;
  #L28de98.  v1:= 2I;
  #L28de9a.  v1:= new `java.lang.String`[v1];
  #L28de9e.  call temp:= `getBackendName`(v5) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L28dea4.  v2:= temp @kind object;
  #L28dea6.  v3:= 0I;
  #L28dea8.  v1[v3]:= v2 @kind object;
  #L28deac.  call temp:= `getPriority`(v5) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getPriority:()Lcom/google/android/datatransport/Priority;` @kind virtual;
  #L28deb2.  v5:= temp @kind object;
  #L28deb4.  call temp:= `toInt`(v5) @signature `Lcom/google/android/datatransport/runtime/util/PriorityMapping;.toInt:(Lcom/google/android/datatransport/Priority;)I` @kind static;
  #L28deba.  v5:= temp;
  #L28debc.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L28dec2.  v5:= temp @kind object;
  #L28dec4.  v2:= 1I;
  #L28dec6.  v1[v2]:= v5 @kind object;
  #L28deca.  v5:= "SELECT next_request_ms FROM transport_contexts WHERE backend_name = ? and priority = ?" @kind object;
  #L28dece.  call temp:= `rawQuery`(v0, v5, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L28ded4.  v5:= temp @kind object;
  #L28ded6.  v0:= `@@com.google.android.datatransport.runtime.scheduling.persistence.m.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.m` @kind object;
  #L28deda.  call temp:= `u0`(v5, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.u0:(Landroid/database/Cursor;Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind static;
  #L28dee0.  v5:= temp @kind object;
  #L28dee2.  v5:= (`java.lang.Long`) v5 @kind object;
  #L28dee6.  call temp:= `longValue`(v5) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L28deec.  v0:= temp @kind wide;
  #L28deee.  return v0 @kind wide;
}
procedure `boolean` `hasPendingEventsFor`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this, `com.google.android.datatransport.runtime.TransportContext` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.hasPendingEventsFor:(Lcom/google/android/datatransport/runtime/TransportContext;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28c68c.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.e0`;
  #L28c690.  call `<init>`(v0, v1, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/e0;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Lcom/google/android/datatransport/runtime/TransportContext;)V` @kind direct;
  #L28c696.  call temp:= `J`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28c69c.  v2:= temp @kind object;
  #L28c69e.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L28c6a2.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L28c6a8.  v2:= temp;
  #L28c6aa.  return v2;
}
procedure `java.lang.Iterable` `loadActiveContexts`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.loadActiveContexts:()Ljava/lang/Iterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28cdbc.  v0:= `@@com.google.android.datatransport.runtime.scheduling.persistence.s.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.s` @kind object;
  #L28cdc0.  call temp:= `J`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28cdc6.  v0:= temp @kind object;
  #L28cdc8.  v0:= (`java.lang.Iterable`) v0 @kind object;
  #L28cdcc.  return v0 @kind object;
}
procedure `java.lang.Iterable` `loadBatch`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this, `com.google.android.datatransport.runtime.TransportContext` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.loadBatch:(Lcom/google/android/datatransport/runtime/TransportContext;)Ljava/lang/Iterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28cde0.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.d0`;
  #L28cde4.  call `<init>`(v0, v1, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/d0;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Lcom/google/android/datatransport/runtime/TransportContext;)V` @kind direct;
  #L28cdea.  call temp:= `J`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28cdf0.  v2:= temp @kind object;
  #L28cdf2.  v2:= (`java.lang.Iterable`) v2 @kind object;
  #L28cdf6.  return v2 @kind object;
}
procedure `com.google.android.datatransport.runtime.firebase.transport.ClientMetrics` `loadClientMetrics`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v4 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.loadClientMetrics:()Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28c97c.  call temp:= `newBuilder`() @signature `Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics;.newBuilder:()Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;` @kind static;
  #L28c982.  v0:= temp @kind object;
  #L28c984.  v1:= new `java.util.HashMap`;
  #L28c988.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L28c98e.  v2:= new `com.google.android.datatransport.runtime.scheduling.persistence.f`;
  #L28c992.  v3:= "SELECT log_source, reason, events_dropped_count FROM log_event_dropped" @kind object;
  #L28c996.  call `<init>`(v2, v4, v3, v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/f;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Ljava/lang/String;Ljava/util/Map;Lcom/google/android/datatransport/runtime/firebase/transport/ClientMetrics$Builder;)V` @kind direct;
  #L28c99c.  call temp:= `J`(v4, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28c9a2.  v0:= temp @kind object;
  #L28c9a4.  v0:= (`com.google.android.datatransport.runtime.firebase.transport.ClientMetrics`) v0 @kind object;
  #L28c9a8.  return v0 @kind object;
}
procedure `com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent` `persist`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v5 @kind this, `com.google.android.datatransport.runtime.TransportContext` v6 @kind object, `com.google.android.datatransport.runtime.EventInternal` v7 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.persist:(Lcom/google/android/datatransport/runtime/TransportContext;Lcom/google/android/datatransport/runtime/EventInternal;)Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28cbb0.  v0:= 3I;
  #L28cbb2.  v0:= new `java.lang.Object`[v0];
  #L28cbb6.  call temp:= `getPriority`(v6) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getPriority:()Lcom/google/android/datatransport/Priority;` @kind virtual;
  #L28cbbc.  v1:= temp @kind object;
  #L28cbbe.  v2:= 0I;
  #L28cbc0.  v0[v2]:= v1 @kind object;
  #L28cbc4.  call temp:= `getTransportName`(v7) @signature `Lcom/google/android/datatransport/runtime/EventInternal;.getTransportName:()Ljava/lang/String;` @kind virtual;
  #L28cbca.  v1:= temp @kind object;
  #L28cbcc.  v2:= 1I;
  #L28cbce.  v0[v2]:= v1 @kind object;
  #L28cbd2.  call temp:= `getBackendName`(v6) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L28cbd8.  v1:= temp @kind object;
  #L28cbda.  v2:= 2I;
  #L28cbdc.  v0[v2]:= v1 @kind object;
  #L28cbe0.  v1:= "SQLiteEventStore" @kind object;
  #L28cbe4.  v2:= "Storing event with priority=%s, name=%s for destination %s" @kind object;
  #L28cbe8.  call `d`(v1, v2, v0) @signature `Lcom/google/android/datatransport/runtime/logging/Logging;.d:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L28cbee.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.c0`;
  #L28cbf2.  call `<init>`(v0, v5, v7, v6) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/c0;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Lcom/google/android/datatransport/runtime/EventInternal;Lcom/google/android/datatransport/runtime/TransportContext;)V` @kind direct;
  #L28cbf8.  call temp:= `J`(v5, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28cbfe.  v0:= temp @kind object;
  #L28cc00.  v0:= (`java.lang.Long`) v0 @kind object;
  #L28cc04.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L28cc0a.  v0:= temp @kind wide;
  #L28cc0c.  v2:= 1L;
  #L28cc10.  v4:= lcmp(v0, v2);
  #L28cc14.  if v4 >= 0 then goto L28cc1c;
  #L28cc18.  v6:= 0I;
  #L28cc1a.  return v6 @kind object;
  #L28cc1c.  call temp:= `create`(v0, v6, v7) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.create:(JLcom/google/android/datatransport/runtime/TransportContext;Lcom/google/android/datatransport/runtime/EventInternal;)Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;` @kind static;
  #L28cc22.  v6:= temp @kind object;
  #L28cc24.  return v6 @kind object;
}
procedure `void` `recordFailure`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.recordFailure:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28e08c.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28e092.  v0:= temp @kind object;
  #L28e094.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28e09a.  v0:= temp;
  #L28e09c.  if v0 != 0 then goto L28e0a2;
  #L28e0a0.  return @kind void;
  #L28e0a2.  v0:= new `java.lang.StringBuilder`;
  #L28e0a6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28e0ac.  v1:= "UPDATE events SET num_attempts = num_attempts + 1 WHERE _id in " @kind object;
  #L28e0b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e0b6.  call temp:= `t0`(v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.t0:(Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L28e0bc.  v3:= temp @kind object;
  #L28e0be.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e0c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28e0ca.  v3:= temp @kind object;
  #L28e0cc.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.e`;
  #L28e0d0.  v1:= "SELECT COUNT(*), transport_name FROM events WHERE num_attempts >= 16 GROUP BY transport_name" @kind object;
  #L28e0d4.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/e;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L28e0da.  call temp:= `J`(v2, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28e0e0.  return @kind void;
}
procedure `void` `recordLogEventDropped`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this, `long` v2 , `com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.recordLogEventDropped:(JLcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e0f4.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.i`;
  #L28e0f8.  call `<init>`(v0, v5, v4, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/i;.<init>:(Ljava/lang/String;Lcom/google/android/datatransport/runtime/firebase/transport/LogEventDropped$Reason;J)V` @kind direct;
  #L28e0fe.  call temp:= `J`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28e104.  return @kind void;
}
procedure `void` `recordNextCallTime`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this, `com.google.android.datatransport.runtime.TransportContext` v2 @kind object, `long` v3 ) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.recordNextCallTime:(Lcom/google/android/datatransport/runtime/TransportContext;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e118.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.x`;
  #L28e11c.  call `<init>`(v0, v3, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/x;.<init>:(JLcom/google/android/datatransport/runtime/TransportContext;)V` @kind direct;
  #L28e122.  call temp:= `J`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28e128.  return @kind void;
}
procedure `void` `recordSuccess`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.recordSuccess:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28e13c.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28e142.  v0:= temp @kind object;
  #L28e144.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28e14a.  v0:= temp;
  #L28e14c.  if v0 != 0 then goto L28e152;
  #L28e150.  return @kind void;
  #L28e152.  v0:= new `java.lang.StringBuilder`;
  #L28e156.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28e15c.  v1:= "DELETE FROM events WHERE _id in " @kind object;
  #L28e160.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e166.  call temp:= `t0`(v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.t0:(Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L28e16c.  v3:= temp @kind object;
  #L28e16e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e174.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28e17a.  v3:= temp @kind object;
  #L28e17c.  call temp:= `E`(v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.E:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L28e182.  v0:= temp @kind object;
  #L28e184.  call temp:= `compileStatement`(v0, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #L28e18a.  v3:= temp @kind object;
  #L28e18c.  call `execute`(v3) @signature `Landroid/database/sqlite/SQLiteStatement;.execute:()V` @kind virtual;
  #L28e192.  return @kind void;
}
procedure `void` `resetClientMetrics`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.resetClientMetrics:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e1a4.  v0:= new `com.google.android.datatransport.runtime.scheduling.persistence.a0`;
  #L28e1a8.  call `<init>`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/a0;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;)V` @kind direct;
  #L28e1ae.  call temp:= `J`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.J:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore$b;)Ljava/lang/Object;` @kind virtual;
  #L28e1b4.  return @kind void;
}
procedure `java.lang.Object` `runCriticalSection`(`com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore` v1 @kind this, `com.google.android.datatransport.runtime.synchronization.SynchronizationGuard$CriticalSection` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d8e4.  call temp:= `E`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.E:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L28d8ea.  v0:= temp @kind object;
  #L28d8ec.  call `B`(v1, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/SQLiteEventStore;.B:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L28d8f2.  call temp:= `execute`(v2) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;.execute:()Ljava/lang/Object;` @kind interface;
  #L28d8f8.  v2:= temp @kind object;
  #L28d8fa.  call `setTransactionSuccessful`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.setTransactionSuccessful:()V` @kind virtual;
  #L28d900.  call `endTransaction`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.endTransaction:()V` @kind virtual;
  #L28d906.  return v2 @kind object;
  #L28d908.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28d90a.  call `endTransaction`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.endTransaction:()V` @kind virtual;
  #L28d910.  throw v2;
  catch `java.lang.Throwable` @[L28d8f2..L28d900] goto L28d908;
}
