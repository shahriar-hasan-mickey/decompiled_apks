record `com.google.android.datatransport.runtime.scheduling.persistence.w` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore$d` @kind interface {
  `com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` `com.google.android.datatransport.runtime.scheduling.persistence.w.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.scheduling.persistence.w` v0 @kind this, `com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/w;.<init>:(Lcom/google/android/datatransport/runtime/scheduling/persistence/SchemaManager;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L28c29c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28c2a2.  v0.`com.google.android.datatransport.runtime.scheduling.persistence.w.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` := v1 @kind object;
  #L28c2a6.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.google.android.datatransport.runtime.scheduling.persistence.w` v1 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/w;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28c27c.  v0:= v1.`com.google.android.datatransport.runtime.scheduling.persistence.w.a` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager` @kind object;
  #L28c280.  call temp:= `getWritableDatabase`(v0) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L28c286.  v0:= temp @kind object;
  #L28c288.  return v0 @kind object;
}
