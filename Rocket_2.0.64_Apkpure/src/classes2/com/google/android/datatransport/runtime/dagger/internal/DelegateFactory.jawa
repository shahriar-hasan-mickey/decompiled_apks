record `com.google.android.datatransport.runtime.dagger.internal.DelegateFactory` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.android.datatransport.runtime.dagger.internal.Factory` @kind interface {
  `javax.inject.Provider` `com.google.android.datatransport.runtime.dagger.internal.DelegateFactory.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.dagger.internal.DelegateFactory` v0 @kind this) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DelegateFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2878f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2878fa.  return @kind void;
}
procedure `void` `setDelegate`(`javax.inject.Provider` v1 @kind object, `javax.inject.Provider` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DelegateFactory;.setDelegate:(Ljavax/inject/Provider;Ljavax/inject/Provider;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28790c.  call temp:= `checkNotNull`(v2) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L287912.  v1:= (`com.google.android.datatransport.runtime.dagger.internal.DelegateFactory`) v1 @kind object;
  #L287916.  v0:= v1.`com.google.android.datatransport.runtime.dagger.internal.DelegateFactory.a` @type ^`javax.inject.Provider` @kind object;
  #L28791a.  if v0 != 0 then goto L287924;
  #L28791e.  v1.`com.google.android.datatransport.runtime.dagger.internal.DelegateFactory.a` @type ^`javax.inject.Provider` := v2 @kind object;
  #L287922.  return @kind void;
  #L287924.  v1:= new `java.lang.IllegalStateException`;
  #L287928.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L28792e.  throw v1;
}
procedure `javax.inject.Provider` `a`(`com.google.android.datatransport.runtime.dagger.internal.DelegateFactory` v1 @kind this) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DelegateFactory;.a:()Ljavax/inject/Provider;` @AccessFlag  {
    temp;
    v0;

  #L2878d0.  v0:= v1.`com.google.android.datatransport.runtime.dagger.internal.DelegateFactory.a` @type ^`javax.inject.Provider` @kind object;
  #L2878d4.  call temp:= `checkNotNull`(v0) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2878da.  v0:= temp @kind object;
  #L2878dc.  v0:= (`javax.inject.Provider`) v0 @kind object;
  #L2878e0.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`com.google.android.datatransport.runtime.dagger.internal.DelegateFactory` v1 @kind this) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DelegateFactory;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2878a0.  v0:= v1.`com.google.android.datatransport.runtime.dagger.internal.DelegateFactory.a` @type ^`javax.inject.Provider` @kind object;
  #L2878a4.  if v0 == 0 then goto L2878b2;
  #L2878a8.  call temp:= `get`(v0) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L2878ae.  v0:= temp @kind object;
  #L2878b0.  return v0 @kind object;
  #L2878b2.  v0:= new `java.lang.IllegalStateException`;
  #L2878b6.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2878bc.  throw v0;
}
procedure `void` `setDelegatedProvider`(`com.google.android.datatransport.runtime.dagger.internal.DelegateFactory` v0 @kind this, `javax.inject.Provider` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DelegateFactory;.setDelegatedProvider:(Ljavax/inject/Provider;)V` @AccessFlag PUBLIC {
    temp;

  #L287940.  call `setDelegate`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/DelegateFactory;.setDelegate:(Ljavax/inject/Provider;Ljavax/inject/Provider;)V` @kind static;
  #L287946.  return @kind void;
}
