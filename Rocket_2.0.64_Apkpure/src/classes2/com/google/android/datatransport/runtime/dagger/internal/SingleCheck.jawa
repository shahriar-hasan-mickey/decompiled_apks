record `com.google.android.datatransport.runtime.dagger.internal.SingleCheck` @kind class @AccessFlag PUBLIC_FINAL extends `javax.inject.Provider` @kind interface {
  `javax.inject.Provider` `com.google.android.datatransport.runtime.dagger.internal.SingleCheck.a` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `com.google.android.datatransport.runtime.dagger.internal.SingleCheck.b` @AccessFlag PRIVATE_VOLATILE;
}
global `java.lang.Object` `@@com.google.android.datatransport.runtime.dagger.internal.SingleCheck.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/datatransport/runtime/dagger/internal/SingleCheck;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L288640.  v0:= new `java.lang.Object`;
  #L288644.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28864a.  `@@com.google.android.datatransport.runtime.dagger.internal.SingleCheck.c` @type ^`java.lang.Object` := v0 @kind object;
  #L28864e.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.dagger.internal.SingleCheck` v1 @kind this, `javax.inject.Provider` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/SingleCheck;.<init>:(Ljavax/inject/Provider;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L288660.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L288666.  v0:= `@@com.google.android.datatransport.runtime.dagger.internal.SingleCheck.c` @type ^`java.lang.Object` @kind object;
  #L28866a.  v1.`com.google.android.datatransport.runtime.dagger.internal.SingleCheck.b` @type ^`java.lang.Object` := v0 @kind object;
  #L28866e.  v1.`com.google.android.datatransport.runtime.dagger.internal.SingleCheck.a` @type ^`javax.inject.Provider` := v2 @kind object;
  #L288672.  return @kind void;
}
procedure `javax.inject.Provider` `provider`(`javax.inject.Provider` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/SingleCheck;.provider:(Ljavax/inject/Provider;)Ljavax/inject/Provider;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L288604.  v0:= instanceof @variable v1 @type ^`com.google.android.datatransport.runtime.dagger.internal.SingleCheck` @kind boolean;
  #L288608.  if v0 != 0 then goto L28862e;
  #L28860c.  v0:= instanceof @variable v1 @type ^`com.google.android.datatransport.runtime.dagger.internal.DoubleCheck` @kind boolean;
  #L288610.  if v0 == 0 then goto L288616;
  #L288614.  goto L28862e;
  #L288616.  v0:= new `com.google.android.datatransport.runtime.dagger.internal.SingleCheck`;
  #L28861a.  call temp:= `checkNotNull`(v1) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L288620.  v1:= temp @kind object;
  #L288622.  v1:= (`javax.inject.Provider`) v1 @kind object;
  #L288626.  call `<init>`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/SingleCheck;.<init>:(Ljavax/inject/Provider;)V` @kind direct;
  #L28862c.  return v0 @kind object;
  #L28862e.  return v1 @kind object;
}
procedure `java.lang.Object` `get`(`com.google.android.datatransport.runtime.dagger.internal.SingleCheck` v2 @kind this) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/SingleCheck;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2885c4.  v0:= v2.`com.google.android.datatransport.runtime.dagger.internal.SingleCheck.b` @type ^`java.lang.Object` @kind object;
  #L2885c8.  v1:= `@@com.google.android.datatransport.runtime.dagger.internal.SingleCheck.c` @type ^`java.lang.Object` @kind object;
  #L2885cc.  if v0 != v1 then goto L2885f0;
  #L2885d0.  v0:= v2.`com.google.android.datatransport.runtime.dagger.internal.SingleCheck.a` @type ^`javax.inject.Provider` @kind object;
  #L2885d4.  if v0 != 0 then goto L2885de;
  #L2885d8.  v0:= v2.`com.google.android.datatransport.runtime.dagger.internal.SingleCheck.b` @type ^`java.lang.Object` @kind object;
  #L2885dc.  goto L2885f0;
  #L2885de.  call temp:= `get`(v0) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L2885e4.  v0:= temp @kind object;
  #L2885e6.  v2.`com.google.android.datatransport.runtime.dagger.internal.SingleCheck.b` @type ^`java.lang.Object` := v0 @kind object;
  #L2885ea.  v1:= 0I;
  #L2885ec.  v2.`com.google.android.datatransport.runtime.dagger.internal.SingleCheck.a` @type ^`javax.inject.Provider` := v1 @kind object;
  #L2885f0.  return v0 @kind object;
}
