record `com.google.android.material.badge.BadgeDrawable` @kind class @AccessFlag PUBLIC extends `android.graphics.drawable.Drawable` @kind class, `com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate` @kind interface {
  `java.lang.ref.WeakReference` `com.google.android.material.badge.BadgeDrawable.anchorViewRef` @AccessFlag PRIVATE;
  `android.graphics.Rect` `com.google.android.material.badge.BadgeDrawable.badgeBounds` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.badge.BadgeDrawable.badgeCenterX` @AccessFlag PRIVATE;
  `float` `com.google.android.material.badge.BadgeDrawable.badgeCenterY` @AccessFlag PRIVATE;
  `java.lang.ref.WeakReference` `com.google.android.material.badge.BadgeDrawable.contextRef` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.badge.BadgeDrawable.cornerRadius` @AccessFlag PRIVATE;
  `java.lang.ref.WeakReference` `com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @AccessFlag PRIVATE;
  `float` `com.google.android.material.badge.BadgeDrawable.halfBadgeHeight` @AccessFlag PRIVATE;
  `float` `com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @AccessFlag PRIVATE;
  `int` `com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @AccessFlag PRIVATE;
  `com.google.android.material.shape.MaterialShapeDrawable` `com.google.android.material.badge.BadgeDrawable.shapeDrawable` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.badge.BadgeState` `com.google.android.material.badge.BadgeDrawable.state` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.internal.TextDrawableHelper` `com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.android.material.badge.BadgeDrawable.BOTTOM_END` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.BOTTOM_START` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_EXCEED_MAX_BADGE_NUMBER_SUFFIX` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_STYLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_THEME_ATTR` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.MAX_CIRCULAR_BADGE_NUMBER_COUNT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.TOP_END` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.badge.BadgeDrawable.TOP_START` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/badge/BadgeDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L46e148.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Badge` @type ^`int`;
  #L46e14c.  `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_STYLE` @type ^`int` := v0;
  #L46e150.  v0:= `@@com.google.android.material.R$attr.badgeStyle` @type ^`int`;
  #L46e154.  `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_THEME_ATTR` @type ^`int` := v0;
  #L46e158.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.badge.BadgeDrawable` v7 @kind this, `android.content.Context` v8 @kind object, `int` v9 , `int` v10 , `int` v11 , `com.google.android.material.badge.BadgeState$State` v12 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.<init>:(Landroid/content/Context;IIILcom/google/android/material/badge/BadgeState$State;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46e16c.  call `<init>`(v7) @signature `Landroid/graphics/drawable/Drawable;.<init>:()V` @kind direct;
  #L46e172.  v0:= new `java.lang.ref.WeakReference`;
  #L46e176.  call `<init>`(v0, v8) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L46e17c.  v7.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L46e180.  call `checkMaterialTheme`(v8) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.checkMaterialTheme:(Landroid/content/Context;)V` @kind static;
  #L46e186.  v0:= new `android.graphics.Rect`;
  #L46e18a.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L46e190.  v7.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` := v0 @kind object;
  #L46e194.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L46e198.  call `<init>`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @kind direct;
  #L46e19e.  v7.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` := v0 @kind object;
  #L46e1a2.  v0:= new `com.google.android.material.internal.TextDrawableHelper`;
  #L46e1a6.  call `<init>`(v0, v7) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.<init>:(Lcom/google/android/material/internal/TextDrawableHelper$TextDrawableDelegate;)V` @kind direct;
  #L46e1ac.  v7.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` := v0 @kind object;
  #L46e1b0.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L46e1b6.  v0:= temp @kind object;
  #L46e1b8.  v1:= `@@android.graphics.Paint$Align.CENTER` @type ^`android.graphics.Paint$Align` @kind object;
  #L46e1bc.  call `setTextAlign`(v0, v1) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L46e1c2.  v0:= `@@com.google.android.material.R$style.TextAppearance_MaterialComponents_Badge` @type ^`int`;
  #L46e1c6.  call `setTextAppearanceResource`(v7, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setTextAppearanceResource:(I)V` @kind direct;
  #L46e1cc.  v0:= new `com.google.android.material.badge.BadgeState`;
  #L46e1d0.  v1:= v0 @kind object;
  #L46e1d2.  v2:= v8 @kind object;
  #L46e1d4.  v3:= v9;
  #L46e1d6.  v4:= v10;
  #L46e1d8.  v5:= v11;
  #L46e1da.  v6:= v12 @kind object;
  #L46e1dc.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/badge/BadgeState;.<init>:(Landroid/content/Context;IIILcom/google/android/material/badge/BadgeState$State;)V` @kind direct;
  #L46e1e2.  v7.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` := v0 @kind object;
  #L46e1e6.  call `restoreState`(v7) @signature `Lcom/google/android/material/badge/BadgeDrawable;.restoreState:()V` @kind direct;
  #L46e1ec.  return @kind void;
}
procedure `void` `calculateCenterAndBounds`(`com.google.android.material.badge.BadgeDrawable` v4 @kind this, `android.content.Context` v5 @kind object, `android.graphics.Rect` v6 @kind object, `android.view.View` v7 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.calculateCenterAndBounds:(Landroid/content/Context;Landroid/graphics/Rect;Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46e200.  call temp:= `getTotalVerticalOffsetForState`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getTotalVerticalOffsetForState:()I` @kind direct;
  #L46e206.  v0:= temp;
  #L46e208.  v1:= v4.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e20c.  call temp:= `getBadgeGravity`(v1) @signature `Lcom/google/android/material/badge/BadgeState;.getBadgeGravity:()I` @kind virtual;
  #L46e212.  v1:= temp;
  #L46e214.  v2:= 8388691I;
  #L46e21a.  if v1 == v2 then goto L46e236;
  #L46e21e.  v3:= 8388693I;
  #L46e224.  if v1 == v3 then goto L46e236;
  #L46e228.  v1:= v6.`android.graphics.Rect.top` @type ^`int`;
  #L46e22c.  v1:= v1 + v0 @kind int;
  #L46e22e.  v0:= (`float`) v1 @kind i2f;
  #L46e230.  v4.`com.google.android.material.badge.BadgeDrawable.badgeCenterY` @type ^`float` := v0;
  #L46e234.  goto L46e242;
  #L46e236.  v1:= v6.`android.graphics.Rect.bottom` @type ^`int`;
  #L46e23a.  v1:= v1 - v0 @kind int;
  #L46e23c.  v0:= (`float`) v1 @kind i2f;
  #L46e23e.  v4.`com.google.android.material.badge.BadgeDrawable.badgeCenterY` @type ^`float` := v0;
  #L46e242.  call temp:= `getNumber`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L46e248.  v0:= temp;
  #L46e24a.  v1:= 9I;
  #L46e24e.  if v0 > v1 then goto L46e27e;
  #L46e252.  call temp:= `hasNumber`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L46e258.  v0:= temp;
  #L46e25a.  if v0 != 0 then goto L46e268;
  #L46e25e.  v0:= v4.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e262.  v0:= v0.`com.google.android.material.badge.BadgeState.badgeRadius` @type ^`float`;
  #L46e266.  goto L46e270;
  #L46e268.  v0:= v4.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e26c.  v0:= v0.`com.google.android.material.badge.BadgeState.badgeWithTextRadius` @type ^`float`;
  #L46e270.  v4.`com.google.android.material.badge.BadgeDrawable.cornerRadius` @type ^`float` := v0;
  #L46e274.  v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeHeight` @type ^`float` := v0;
  #L46e278.  v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float` := v0;
  #L46e27c.  goto L46e2b6;
  #L46e27e.  v0:= v4.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e282.  v0:= v0.`com.google.android.material.badge.BadgeState.badgeWithTextRadius` @type ^`float`;
  #L46e286.  v4.`com.google.android.material.badge.BadgeDrawable.cornerRadius` @type ^`float` := v0;
  #L46e28a.  v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeHeight` @type ^`float` := v0;
  #L46e28e.  call temp:= `getBadgeText`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeText:()Ljava/lang/String;` @kind direct;
  #L46e294.  v0:= temp @kind object;
  #L46e296.  v1:= v4.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46e29a.  call temp:= `getTextWidth`(v1, v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L46e2a0.  v0:= temp;
  #L46e2a2.  v1:= 2.0F;
  #L46e2a6.  v0:= v0 / v1 @kind float;
  #L46e2a8.  v1:= v4.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e2ac.  v1:= v1.`com.google.android.material.badge.BadgeState.badgeWidePadding` @type ^`float`;
  #L46e2b0.  v0:= v0 + v1 @kind float;
  #L46e2b2.  v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float` := v0;
  #L46e2b6.  call temp:= `getResources`(v5) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L46e2bc.  v5:= temp @kind object;
  #L46e2be.  call temp:= `hasNumber`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L46e2c4.  v0:= temp;
  #L46e2c6.  if v0 == 0 then goto L46e2d0;
  #L46e2ca.  v0:= `@@com.google.android.material.R$dimen.mtrl_badge_text_horizontal_edge_offset` @type ^`int`;
  #L46e2ce.  goto L46e2d4;
  #L46e2d0.  v0:= `@@com.google.android.material.R$dimen.mtrl_badge_horizontal_edge_offset` @type ^`int`;
  #L46e2d4.  call temp:= `getDimensionPixelSize`(v5, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L46e2da.  v5:= temp;
  #L46e2dc.  call temp:= `getTotalHorizontalOffsetForState`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getTotalHorizontalOffsetForState:()I` @kind direct;
  #L46e2e2.  v0:= temp;
  #L46e2e4.  v1:= v4.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e2e8.  call temp:= `getBadgeGravity`(v1) @signature `Lcom/google/android/material/badge/BadgeState;.getBadgeGravity:()I` @kind virtual;
  #L46e2ee.  v1:= temp;
  #L46e2f0.  v3:= 8388659I;
  #L46e2f6.  if v1 == v3 then goto L46e33a;
  #L46e2fa.  if v1 == v2 then goto L46e33a;
  #L46e2fe.  call temp:= `getLayoutDirection`(v7) @signature `Landroidx/core/view/ViewCompat;.getLayoutDirection:(Landroid/view/View;)I` @kind static;
  #L46e304.  v7:= temp;
  #L46e306.  if v7 != 0 then goto L46e320;
  #L46e30a.  v6:= v6.`android.graphics.Rect.right` @type ^`int`;
  #L46e30e.  v6:= (`float`) v6 @kind i2f;
  #L46e310.  v7:= v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float`;
  #L46e314.  v6:= v6 + v7 @kind float;
  #L46e316.  v5:= (`float`) v5 @kind i2f;
  #L46e318.  v6:= v6 - v5 @kind float;
  #L46e31a.  v5:= (`float`) v0 @kind i2f;
  #L46e31c.  v6:= v6 - v5 @kind float;
  #L46e31e.  goto L46e334;
  #L46e320.  v6:= v6.`android.graphics.Rect.left` @type ^`int`;
  #L46e324.  v6:= (`float`) v6 @kind i2f;
  #L46e326.  v7:= v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float`;
  #L46e32a.  v6:= v6 - v7 @kind float;
  #L46e32c.  v5:= (`float`) v5 @kind i2f;
  #L46e32e.  v6:= v6 + v5 @kind float;
  #L46e330.  v5:= (`float`) v0 @kind i2f;
  #L46e332.  v6:= v6 + v5 @kind float;
  #L46e334.  v4.`com.google.android.material.badge.BadgeDrawable.badgeCenterX` @type ^`float` := v6;
  #L46e338.  goto L46e374;
  #L46e33a.  call temp:= `getLayoutDirection`(v7) @signature `Landroidx/core/view/ViewCompat;.getLayoutDirection:(Landroid/view/View;)I` @kind static;
  #L46e340.  v7:= temp;
  #L46e342.  if v7 != 0 then goto L46e35c;
  #L46e346.  v6:= v6.`android.graphics.Rect.left` @type ^`int`;
  #L46e34a.  v6:= (`float`) v6 @kind i2f;
  #L46e34c.  v7:= v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float`;
  #L46e350.  v6:= v6 - v7 @kind float;
  #L46e352.  v5:= (`float`) v5 @kind i2f;
  #L46e354.  v6:= v6 + v5 @kind float;
  #L46e356.  v5:= (`float`) v0 @kind i2f;
  #L46e358.  v6:= v6 + v5 @kind float;
  #L46e35a.  goto L46e370;
  #L46e35c.  v6:= v6.`android.graphics.Rect.right` @type ^`int`;
  #L46e360.  v6:= (`float`) v6 @kind i2f;
  #L46e362.  v7:= v4.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float`;
  #L46e366.  v6:= v6 + v7 @kind float;
  #L46e368.  v5:= (`float`) v5 @kind i2f;
  #L46e36a.  v6:= v6 - v5 @kind float;
  #L46e36c.  v5:= (`float`) v0 @kind i2f;
  #L46e36e.  v6:= v6 - v5 @kind float;
  #L46e370.  v4.`com.google.android.material.badge.BadgeDrawable.badgeCenterX` @type ^`float` := v6;
  #L46e374.  return @kind void;
}
procedure `com.google.android.material.badge.BadgeDrawable` `create`(`android.content.Context` v7 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.create:(Landroid/content/Context;)Lcom/google/android/material/badge/BadgeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46dc38.  v6:= new `com.google.android.material.badge.BadgeDrawable`;
  #L46dc3c.  v3:= `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_THEME_ATTR` @type ^`int`;
  #L46dc40.  v4:= `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_STYLE` @type ^`int`;
  #L46dc44.  v2:= 0I;
  #L46dc46.  v5:= 0I;
  #L46dc48.  v0:= v6 @kind object;
  #L46dc4a.  v1:= v7 @kind object;
  #L46dc4c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/badge/BadgeDrawable;.<init>:(Landroid/content/Context;IIILcom/google/android/material/badge/BadgeState$State;)V` @kind direct;
  #L46dc52.  return v6 @kind object;
}
procedure `com.google.android.material.badge.BadgeDrawable` `createFromResource`(`android.content.Context` v7 @kind object, `int` v8 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/badge/BadgeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46dc64.  v6:= new `com.google.android.material.badge.BadgeDrawable`;
  #L46dc68.  v3:= `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_THEME_ATTR` @type ^`int`;
  #L46dc6c.  v4:= `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_STYLE` @type ^`int`;
  #L46dc70.  v5:= 0I;
  #L46dc72.  v0:= v6 @kind object;
  #L46dc74.  v1:= v7 @kind object;
  #L46dc76.  v2:= v8;
  #L46dc78.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/badge/BadgeDrawable;.<init>:(Landroid/content/Context;IIILcom/google/android/material/badge/BadgeState$State;)V` @kind direct;
  #L46dc7e.  return v6 @kind object;
}
procedure `com.google.android.material.badge.BadgeDrawable` `createFromSavedState`(`android.content.Context` v7 @kind object, `com.google.android.material.badge.BadgeState$State` v8 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.createFromSavedState:(Landroid/content/Context;Lcom/google/android/material/badge/BadgeState$State;)Lcom/google/android/material/badge/BadgeDrawable;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L46dc90.  v6:= new `com.google.android.material.badge.BadgeDrawable`;
  #L46dc94.  v3:= `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_THEME_ATTR` @type ^`int`;
  #L46dc98.  v4:= `@@com.google.android.material.badge.BadgeDrawable.DEFAULT_STYLE` @type ^`int`;
  #L46dc9c.  v2:= 0I;
  #L46dc9e.  v0:= v6 @kind object;
  #L46dca0.  v1:= v7 @kind object;
  #L46dca2.  v5:= v8 @kind object;
  #L46dca4.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/badge/BadgeDrawable;.<init>:(Landroid/content/Context;IIILcom/google/android/material/badge/BadgeState$State;)V` @kind direct;
  #L46dcaa.  return v6 @kind object;
}
procedure `void` `drawText`(`com.google.android.material.badge.BadgeDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.drawText:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46e414.  v0:= new `android.graphics.Rect`;
  #L46e418.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L46e41e.  call temp:= `getBadgeText`(v5) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeText:()Ljava/lang/String;` @kind direct;
  #L46e424.  v1:= temp @kind object;
  #L46e426.  v2:= v5.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46e42a.  call temp:= `getTextPaint`(v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L46e430.  v2:= temp @kind object;
  #L46e432.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L46e438.  v3:= temp;
  #L46e43a.  v4:= 0I;
  #L46e43c.  call `getTextBounds`(v2, v1, v4, v3, v0) @signature `Landroid/text/TextPaint;.getTextBounds:(Ljava/lang/String;IILandroid/graphics/Rect;)V` @kind virtual;
  #L46e442.  v2:= v5.`com.google.android.material.badge.BadgeDrawable.badgeCenterX` @type ^`float`;
  #L46e446.  v3:= v5.`com.google.android.material.badge.BadgeDrawable.badgeCenterY` @type ^`float`;
  #L46e44a.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L46e450.  v0:= temp;
  #L46e452.  v0:= v0 / 2;
  #L46e456.  v0:= (`float`) v0 @kind i2f;
  #L46e458.  v3:= v3 + v0 @kind float;
  #L46e45a.  v0:= v5.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46e45e.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L46e464.  v0:= temp @kind object;
  #L46e466.  call `drawText`(v6, v1, v2, v3, v0) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L46e46c.  return @kind void;
}
procedure `java.lang.String` `getBadgeText`(`com.google.android.material.badge.BadgeDrawable` v5 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeText:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46e080.  call temp:= `getNumber`(v5) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L46e086.  v0:= temp;
  #L46e088.  v1:= v5.`com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @type ^`int`;
  #L46e08c.  if v0 > v1 then goto L46e0b8;
  #L46e090.  v0:= v5.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e094.  call temp:= `getNumberLocale`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getNumberLocale:()Ljava/util/Locale;` @kind virtual;
  #L46e09a.  v0:= temp @kind object;
  #L46e09c.  call temp:= `getInstance`(v0) @signature `Ljava/text/NumberFormat;.getInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;` @kind static;
  #L46e0a2.  v0:= temp @kind object;
  #L46e0a4.  call temp:= `getNumber`(v5) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L46e0aa.  v1:= temp;
  #L46e0ac.  v1:= (`long`) v1 @kind i2l;
  #L46e0ae.  call temp:= `format`(v0, v1) @signature `Ljava/text/NumberFormat;.format:(J)Ljava/lang/String;` @kind virtual;
  #L46e0b4.  v0:= temp @kind object;
  #L46e0b6.  return v0 @kind object;
  #L46e0b8.  v0:= v5.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46e0bc.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46e0c2.  v0:= temp @kind object;
  #L46e0c4.  v0:= (`android.content.Context`) v0 @kind object;
  #L46e0c8.  if v0 != 0 then goto L46e0d2;
  #L46e0cc.  v0:= "" @kind object;
  #L46e0d0.  return v0 @kind object;
  #L46e0d2.  v1:= v5.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e0d6.  call temp:= `getNumberLocale`(v1) @signature `Lcom/google/android/material/badge/BadgeState;.getNumberLocale:()Ljava/util/Locale;` @kind virtual;
  #L46e0dc.  v1:= temp @kind object;
  #L46e0de.  v2:= `@@com.google.android.material.R$string.mtrl_exceed_max_badge_number_suffix` @type ^`int`;
  #L46e0e2.  call temp:= `getString`(v0, v2) @signature `Landroid/content/Context;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L46e0e8.  v0:= temp @kind object;
  #L46e0ea.  v2:= 2I;
  #L46e0ec.  v2:= new `java.lang.Object`[v2];
  #L46e0f0.  v3:= 0I;
  #L46e0f2.  v4:= v5.`com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @type ^`int`;
  #L46e0f6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L46e0fc.  v4:= temp @kind object;
  #L46e0fe.  v2[v3]:= v4 @kind object;
  #L46e102.  v3:= 1I;
  #L46e104.  v4:= "+" @kind object;
  #L46e108.  v2[v3]:= v4 @kind object;
  #L46e10c.  call temp:= `format`(v1, v0, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L46e112.  v0:= temp @kind object;
  #L46e114.  return v0 @kind object;
}
procedure `int` `getTotalHorizontalOffsetForState`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getTotalHorizontalOffsetForState:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46deb0.  call temp:= `hasNumber`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L46deb6.  v0:= temp;
  #L46deb8.  if v0 == 0 then goto L46deca;
  #L46debc.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46dec0.  call temp:= `getHorizontalOffsetWithText`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getHorizontalOffsetWithText:()I` @kind virtual;
  #L46dec6.  v0:= temp;
  #L46dec8.  goto L46ded6;
  #L46deca.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46dece.  call temp:= `getHorizontalOffsetWithoutText`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getHorizontalOffsetWithoutText:()I` @kind virtual;
  #L46ded4.  v0:= temp;
  #L46ded6.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46deda.  call temp:= `getAdditionalHorizontalOffset`(v1) @signature `Lcom/google/android/material/badge/BadgeState;.getAdditionalHorizontalOffset:()I` @kind virtual;
  #L46dee0.  v1:= temp;
  #L46dee2.  v0:= v0 + v1 @kind int;
  #L46dee4.  return v0;
}
procedure `int` `getTotalVerticalOffsetForState`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getTotalVerticalOffsetForState:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46def8.  call temp:= `hasNumber`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L46defe.  v0:= temp;
  #L46df00.  if v0 == 0 then goto L46df12;
  #L46df04.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46df08.  call temp:= `getVerticalOffsetWithText`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getVerticalOffsetWithText:()I` @kind virtual;
  #L46df0e.  v0:= temp;
  #L46df10.  goto L46df1e;
  #L46df12.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46df16.  call temp:= `getVerticalOffsetWithoutText`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getVerticalOffsetWithoutText:()I` @kind virtual;
  #L46df1c.  v0:= temp;
  #L46df1e.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46df22.  call temp:= `getAdditionalVerticalOffset`(v1) @signature `Lcom/google/android/material/badge/BadgeState;.getAdditionalVerticalOffset:()I` @kind virtual;
  #L46df28.  v1:= temp;
  #L46df2a.  v0:= v0 + v1 @kind int;
  #L46df2c.  return v0;
}
procedure `void` `onAlphaUpdated`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onAlphaUpdated:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46e480.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46e484.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L46e48a.  v0:= temp @kind object;
  #L46e48c.  call temp:= `getAlpha`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getAlpha:()I` @kind virtual;
  #L46e492.  v1:= temp;
  #L46e494.  call `setAlpha`(v0, v1) @signature `Landroid/text/TextPaint;.setAlpha:(I)V` @kind virtual;
  #L46e49a.  call `invalidateSelf`(v2) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L46e4a0.  return @kind void;
}
procedure `void` `onBackgroundColorUpdated`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onBackgroundColorUpdated:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46e4b4.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e4b8.  call temp:= `getBackgroundColor`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getBackgroundColor:()I` @kind virtual;
  #L46e4be.  v0:= temp;
  #L46e4c0.  call temp:= `valueOf`(v0) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L46e4c6.  v0:= temp @kind object;
  #L46e4c8.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L46e4cc.  call temp:= `getFillColor`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L46e4d2.  v1:= temp @kind object;
  #L46e4d4.  if v1 == v0 then goto L46e4e8;
  #L46e4d8.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L46e4dc.  call `setFillColor`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L46e4e2.  call `invalidateSelf`(v2) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L46e4e8.  return @kind void;
}
procedure `void` `onBadgeGravityUpdated`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onBadgeGravityUpdated:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46e4fc.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.anchorViewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46e500.  if v0 == 0 then goto L46e53e;
  #L46e504.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46e50a.  v0:= temp @kind object;
  #L46e50c.  if v0 == 0 then goto L46e53e;
  #L46e510.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.anchorViewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46e514.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46e51a.  v0:= temp @kind object;
  #L46e51c.  v0:= (`android.view.View`) v0 @kind object;
  #L46e520.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46e524.  if v1 == 0 then goto L46e536;
  #L46e528.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46e52e.  v1:= temp @kind object;
  #L46e530.  v1:= (`android.widget.FrameLayout`) v1 @kind object;
  #L46e534.  goto L46e538;
  #L46e536.  v1:= 0I;
  #L46e538.  call `updateBadgeCoordinates`(v2, v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;Landroid/widget/FrameLayout;)V` @kind virtual;
  #L46e53e.  return @kind void;
}
procedure `void` `onBadgeTextColorUpdated`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onBadgeTextColorUpdated:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46e550.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46e554.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L46e55a.  v0:= temp @kind object;
  #L46e55c.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e560.  call temp:= `getBadgeTextColor`(v1) @signature `Lcom/google/android/material/badge/BadgeState;.getBadgeTextColor:()I` @kind virtual;
  #L46e566.  v1:= temp;
  #L46e568.  call `setColor`(v0, v1) @signature `Landroid/text/TextPaint;.setColor:(I)V` @kind virtual;
  #L46e56e.  call `invalidateSelf`(v2) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L46e574.  return @kind void;
}
procedure `void` `onMaxCharacterCountUpdated`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onMaxCharacterCountUpdated:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46e588.  call `updateMaxBadgeNumber`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateMaxBadgeNumber:()V` @kind direct;
  #L46e58e.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46e592.  v1:= 1I;
  #L46e594.  call `setTextWidthDirty`(v0, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextWidthDirty:(Z)V` @kind virtual;
  #L46e59a.  call `updateCenterAndBounds`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46e5a0.  call `invalidateSelf`(v2) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L46e5a6.  return @kind void;
}
procedure `void` `onNumberUpdated`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onNumberUpdated:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46e5b8.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46e5bc.  v1:= 1I;
  #L46e5be.  call `setTextWidthDirty`(v0, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextWidthDirty:(Z)V` @kind virtual;
  #L46e5c4.  call `updateCenterAndBounds`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46e5ca.  call `invalidateSelf`(v2) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L46e5d0.  return @kind void;
}
procedure `void` `onVisibilityUpdated`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onVisibilityUpdated:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46e5fc.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e600.  call temp:= `isVisible`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.isVisible:()Z` @kind virtual;
  #L46e606.  v0:= temp;
  #L46e608.  v1:= 0I;
  #L46e60a.  call temp:= `setVisible`(v2, v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L46e610.  v1:= `@@com.google.android.material.badge.BadgeUtils.USE_COMPAT_PARENT` @type ^`boolean` @kind boolean;
  #L46e614.  if v1 == 0 then goto L46e642;
  #L46e618.  call temp:= `getCustomBadgeParent`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getCustomBadgeParent:()Landroid/widget/FrameLayout;` @kind virtual;
  #L46e61e.  v1:= temp @kind object;
  #L46e620.  if v1 == 0 then goto L46e642;
  #L46e624.  if v0 != 0 then goto L46e642;
  #L46e628.  call temp:= `getCustomBadgeParent`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getCustomBadgeParent:()Landroid/widget/FrameLayout;` @kind virtual;
  #L46e62e.  v0:= temp @kind object;
  #L46e630.  call temp:= `getParent`(v0) @signature `Landroid/widget/FrameLayout;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L46e636.  v0:= temp @kind object;
  #L46e638.  v0:= (`android.view.ViewGroup`) v0 @kind object;
  #L46e63c.  call `invalidate`(v0) @signature `Landroid/view/ViewGroup;.invalidate:()V` @kind virtual;
  #L46e642.  return @kind void;
}
procedure `void` `restoreState`(`com.google.android.material.badge.BadgeDrawable` v0 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.restoreState:()V` @AccessFlag PRIVATE {
    temp;

  #L46e654.  call `onMaxCharacterCountUpdated`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onMaxCharacterCountUpdated:()V` @kind direct;
  #L46e65a.  call `onNumberUpdated`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onNumberUpdated:()V` @kind direct;
  #L46e660.  call `onAlphaUpdated`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onAlphaUpdated:()V` @kind direct;
  #L46e666.  call `onBackgroundColorUpdated`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onBackgroundColorUpdated:()V` @kind direct;
  #L46e66c.  call `onBadgeTextColorUpdated`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onBadgeTextColorUpdated:()V` @kind direct;
  #L46e672.  call `onBadgeGravityUpdated`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onBadgeGravityUpdated:()V` @kind direct;
  #L46e678.  call `updateCenterAndBounds`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46e67e.  call `onVisibilityUpdated`(v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onVisibilityUpdated:()V` @kind direct;
  #L46e684.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `com.google.android.material.resources.TextAppearance` v3 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46e914.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46e918.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L46e91e.  v0:= temp @kind object;
  #L46e920.  if v0 != v3 then goto L46e926;
  #L46e924.  return @kind void;
  #L46e926.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46e92a.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46e930.  v0:= temp @kind object;
  #L46e932.  v0:= (`android.content.Context`) v0 @kind object;
  #L46e936.  if v0 != 0 then goto L46e93c;
  #L46e93a.  return @kind void;
  #L46e93c.  v1:= v2.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46e940.  call `setTextAppearance`(v1, v3, v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;Landroid/content/Context;)V` @kind virtual;
  #L46e946.  call `updateCenterAndBounds`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46e94c.  return @kind void;
}
procedure `void` `setTextAppearanceResource`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setTextAppearanceResource:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46e960.  v0:= v2.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46e964.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46e96a.  v0:= temp @kind object;
  #L46e96c.  v0:= (`android.content.Context`) v0 @kind object;
  #L46e970.  if v0 != 0 then goto L46e976;
  #L46e974.  return @kind void;
  #L46e976.  v1:= new `com.google.android.material.resources.TextAppearance`;
  #L46e97a.  call `<init>`(v1, v0, v3) @signature `Lcom/google/android/material/resources/TextAppearance;.<init>:(Landroid/content/Context;I)V` @kind direct;
  #L46e980.  call `setTextAppearance`(v2, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind direct;
  #L46e986.  return @kind void;
}
procedure `void` `tryWrapAnchorInCompatParent`(`com.google.android.material.badge.BadgeDrawable` v5 @kind this, `android.view.View` v6 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.tryWrapAnchorInCompatParent:(Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46ea24.  call temp:= `getParent`(v6) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L46ea2a.  v0:= temp @kind object;
  #L46ea2c.  v0:= (`android.view.ViewGroup`) v0 @kind object;
  #L46ea30.  if v0 == 0 then goto L46ea44;
  #L46ea34.  call temp:= `getId`(v0) @signature `Landroid/view/ViewGroup;.getId:()I` @kind virtual;
  #L46ea3a.  v1:= temp;
  #L46ea3c.  v2:= `@@com.google.android.material.R$id.mtrl_anchor_parent` @type ^`int`;
  #L46ea40.  if v1 == v2 then goto L46ea58;
  #L46ea44.  v1:= v5.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46ea48.  if v1 == 0 then goto L46ea5a;
  #L46ea4c.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46ea52.  v1:= temp @kind object;
  #L46ea54.  if v1 != v0 then goto L46ea5a;
  #L46ea58.  return @kind void;
  #L46ea5a.  call `updateAnchorParentToNotClip`(v6) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateAnchorParentToNotClip:(Landroid/view/View;)V` @kind static;
  #L46ea60.  v1:= new `android.widget.FrameLayout`;
  #L46ea64.  call temp:= `getContext`(v6) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L46ea6a.  v2:= temp @kind object;
  #L46ea6c.  call `<init>`(v1, v2) @signature `Landroid/widget/FrameLayout;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L46ea72.  v2:= `@@com.google.android.material.R$id.mtrl_anchor_parent` @type ^`int`;
  #L46ea76.  call `setId`(v1, v2) @signature `Landroid/widget/FrameLayout;.setId:(I)V` @kind virtual;
  #L46ea7c.  v2:= 0I;
  #L46ea7e.  call `setClipChildren`(v1, v2) @signature `Landroid/widget/FrameLayout;.setClipChildren:(Z)V` @kind virtual;
  #L46ea84.  call `setClipToPadding`(v1, v2) @signature `Landroid/widget/FrameLayout;.setClipToPadding:(Z)V` @kind virtual;
  #L46ea8a.  call temp:= `getLayoutParams`(v6) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L46ea90.  v2:= temp @kind object;
  #L46ea92.  call `setLayoutParams`(v1, v2) @signature `Landroid/widget/FrameLayout;.setLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)V` @kind virtual;
  #L46ea98.  call temp:= `getWidth`(v6) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L46ea9e.  v2:= temp;
  #L46eaa0.  call `setMinimumWidth`(v1, v2) @signature `Landroid/widget/FrameLayout;.setMinimumWidth:(I)V` @kind virtual;
  #L46eaa6.  call temp:= `getHeight`(v6) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L46eaac.  v2:= temp;
  #L46eaae.  call `setMinimumHeight`(v1, v2) @signature `Landroid/widget/FrameLayout;.setMinimumHeight:(I)V` @kind virtual;
  #L46eab4.  call temp:= `indexOfChild`(v0, v6) @signature `Landroid/view/ViewGroup;.indexOfChild:(Landroid/view/View;)I` @kind virtual;
  #L46eaba.  v2:= temp;
  #L46eabc.  call `removeViewAt`(v0, v2) @signature `Landroid/view/ViewGroup;.removeViewAt:(I)V` @kind virtual;
  #L46eac2.  v3:= new `android.widget.FrameLayout$LayoutParams`;
  #L46eac6.  v4:= -1I;
  #L46eac8.  call `<init>`(v3, v4, v4) @signature `Landroid/widget/FrameLayout$LayoutParams;.<init>:(II)V` @kind direct;
  #L46eace.  call `setLayoutParams`(v6, v3) @signature `Landroid/view/View;.setLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)V` @kind virtual;
  #L46ead4.  call `addView`(v1, v6) @signature `Landroid/widget/FrameLayout;.addView:(Landroid/view/View;)V` @kind virtual;
  #L46eada.  call `addView`(v0, v1, v2) @signature `Landroid/view/ViewGroup;.addView:(Landroid/view/View;I)V` @kind virtual;
  #L46eae0.  v0:= new `java.lang.ref.WeakReference`;
  #L46eae4.  call `<init>`(v0, v1) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L46eaea.  v5.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L46eaee.  v0:= new `com.google.android.material.badge.BadgeDrawable$1`;
  #L46eaf2.  call `<init>`(v0, v5, v6, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable$1;.<init>:(Lcom/google/android/material/badge/BadgeDrawable;Landroid/view/View;Landroid/widget/FrameLayout;)V` @kind direct;
  #L46eaf8.  call temp:= `post`(v1, v0) @signature `Landroid/widget/FrameLayout;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L46eafe.  return @kind void;
}
procedure `void` `updateAnchorParentToNotClip`(`android.view.View` v1 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateAnchorParentToNotClip:(Landroid/view/View;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L46eb10.  call temp:= `getParent`(v1) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L46eb16.  v1:= temp @kind object;
  #L46eb18.  v1:= (`android.view.ViewGroup`) v1 @kind object;
  #L46eb1c.  v0:= 0I;
  #L46eb1e.  call `setClipChildren`(v1, v0) @signature `Landroid/view/ViewGroup;.setClipChildren:(Z)V` @kind virtual;
  #L46eb24.  call `setClipToPadding`(v1, v0) @signature `Landroid/view/ViewGroup;.setClipToPadding:(Z)V` @kind virtual;
  #L46eb2a.  return @kind void;
}
procedure `void` `updateCenterAndBounds`(`com.google.android.material.badge.BadgeDrawable` v6 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46ebe4.  v0:= v6.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46ebe8.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46ebee.  v0:= temp @kind object;
  #L46ebf0.  v0:= (`android.content.Context`) v0 @kind object;
  #L46ebf4.  v1:= v6.`com.google.android.material.badge.BadgeDrawable.anchorViewRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46ebf8.  v2:= 0I;
  #L46ebfa.  if v1 == 0 then goto L46ec0c;
  #L46ebfe.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46ec04.  v1:= temp @kind object;
  #L46ec06.  v1:= (`android.view.View`) v1 @kind object;
  #L46ec0a.  goto L46ec0e;
  #L46ec0c.  v1:= v2 @kind object;
  #L46ec0e.  if v0 == 0 then goto L46ecbe;
  #L46ec12.  if v1 != 0 then goto L46ec18;
  #L46ec16.  goto L46ecbe;
  #L46ec18.  v3:= new `android.graphics.Rect`;
  #L46ec1c.  call `<init>`(v3) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L46ec22.  v4:= v6.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L46ec26.  call `set`(v3, v4) @signature `Landroid/graphics/Rect;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L46ec2c.  v4:= new `android.graphics.Rect`;
  #L46ec30.  call `<init>`(v4) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L46ec36.  call `getDrawingRect`(v1, v4) @signature `Landroid/view/View;.getDrawingRect:(Landroid/graphics/Rect;)V` @kind virtual;
  #L46ec3c.  v5:= v6.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46ec40.  if v5 == 0 then goto L46ec50;
  #L46ec44.  call temp:= `get`(v5) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46ec4a.  v2:= temp @kind object;
  #L46ec4c.  v2:= (`android.view.ViewGroup`) v2 @kind object;
  #L46ec50.  if v2 != 0 then goto L46ec5c;
  #L46ec54.  v5:= `@@com.google.android.material.badge.BadgeUtils.USE_COMPAT_PARENT` @type ^`boolean` @kind boolean;
  #L46ec58.  if v5 == 0 then goto L46ec72;
  #L46ec5c.  if v2 != 0 then goto L46ec6c;
  #L46ec60.  call temp:= `getParent`(v1) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L46ec66.  v2:= temp @kind object;
  #L46ec68.  v2:= (`android.view.ViewGroup`) v2 @kind object;
  #L46ec6c.  call `offsetDescendantRectToMyCoords`(v2, v1, v4) @signature `Landroid/view/ViewGroup;.offsetDescendantRectToMyCoords:(Landroid/view/View;Landroid/graphics/Rect;)V` @kind virtual;
  #L46ec72.  call `calculateCenterAndBounds`(v6, v0, v4, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.calculateCenterAndBounds:(Landroid/content/Context;Landroid/graphics/Rect;Landroid/view/View;)V` @kind direct;
  #L46ec78.  v0:= v6.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L46ec7c.  v1:= v6.`com.google.android.material.badge.BadgeDrawable.badgeCenterX` @type ^`float`;
  #L46ec80.  v2:= v6.`com.google.android.material.badge.BadgeDrawable.badgeCenterY` @type ^`float`;
  #L46ec84.  v4:= v6.`com.google.android.material.badge.BadgeDrawable.halfBadgeWidth` @type ^`float`;
  #L46ec88.  v5:= v6.`com.google.android.material.badge.BadgeDrawable.halfBadgeHeight` @type ^`float`;
  #L46ec8c.  call `updateBadgeBounds`(v0, v1, v2, v4, v5) @signature `Lcom/google/android/material/badge/BadgeUtils;.updateBadgeBounds:(Landroid/graphics/Rect;FFFF)V` @kind static;
  #L46ec92.  v0:= v6.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L46ec96.  v1:= v6.`com.google.android.material.badge.BadgeDrawable.cornerRadius` @type ^`float`;
  #L46ec9a.  call `setCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(F)V` @kind virtual;
  #L46eca0.  v0:= v6.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L46eca4.  call temp:= `equals`(v3, v0) @signature `Landroid/graphics/Rect;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L46ecaa.  v0:= temp;
  #L46ecac.  if v0 != 0 then goto L46ecbe;
  #L46ecb0.  v0:= v6.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L46ecb4.  v1:= v6.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L46ecb8.  call `setBounds`(v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L46ecbe.  return @kind void;
}
procedure `void` `updateMaxBadgeNumber`(`com.google.android.material.badge.BadgeDrawable` v4 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateMaxBadgeNumber:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46ecd0.  call temp:= `getMaxCharacterCount`(v4) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getMaxCharacterCount:()I` @kind virtual;
  #L46ecd6.  v0:= temp;
  #L46ecd8.  v0:= (`double`) v0 @kind i2d;
  #L46ecda.  v2:= 1.0D;
  #L46ecde.  v0:= v0 - v2 @kind double;
  #L46ece0.  v2:= 10.0D;
  #L46ece4.  call temp:= `pow`(v2, v0) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L46ecea.  v0:= temp @kind wide;
  #L46ecec.  v0:= (`int`) v0 @kind d2i;
  #L46ecee.  v0:= v0 + -1;
  #L46ecf2.  v4.`com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @type ^`int` := v0;
  #L46ecf6.  return @kind void;
}
procedure `void` `clearNumber`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.clearNumber:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e388.  call temp:= `hasNumber`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L46e38e.  v0:= temp;
  #L46e390.  if v0 == 0 then goto L46e3a4;
  #L46e394.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e398.  call `clearNumber`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.clearNumber:()V` @kind virtual;
  #L46e39e.  call `onNumberUpdated`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onNumberUpdated:()V` @kind direct;
  #L46e3a4.  return @kind void;
}
procedure `void` `draw`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `android.graphics.Canvas` v2 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e3b8.  call temp:= `getBounds`(v1) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L46e3be.  v0:= temp @kind object;
  #L46e3c0.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L46e3c6.  v0:= temp;
  #L46e3c8.  if v0 != 0 then goto L46e402;
  #L46e3cc.  call temp:= `getAlpha`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getAlpha:()I` @kind virtual;
  #L46e3d2.  v0:= temp;
  #L46e3d4.  if v0 == 0 then goto L46e402;
  #L46e3d8.  call temp:= `isVisible`(v1) @signature `Landroid/graphics/drawable/Drawable;.isVisible:()Z` @kind virtual;
  #L46e3de.  v0:= temp;
  #L46e3e0.  if v0 != 0 then goto L46e3e6;
  #L46e3e4.  goto L46e402;
  #L46e3e6.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L46e3ea.  call `draw`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L46e3f0.  call temp:= `hasNumber`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L46e3f6.  v0:= temp;
  #L46e3f8.  if v0 == 0 then goto L46e402;
  #L46e3fc.  call `drawText`(v1, v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.drawText:(Landroid/graphics/Canvas;)V` @kind direct;
  #L46e402.  return @kind void;
}
procedure `int` `getAdditionalHorizontalOffset`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getAdditionalHorizontalOffset:()I` @AccessFlag  {
    temp;
    v0;

  #L46dcdc.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46dce0.  call temp:= `getAdditionalHorizontalOffset`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getAdditionalHorizontalOffset:()I` @kind virtual;
  #L46dce6.  v0:= temp;
  #L46dce8.  return v0;
}
procedure `int` `getAdditionalVerticalOffset`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getAdditionalVerticalOffset:()I` @AccessFlag  {
    temp;
    v0;

  #L46dcfc.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46dd00.  call temp:= `getAdditionalVerticalOffset`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getAdditionalVerticalOffset:()I` @kind virtual;
  #L46dd06.  v0:= temp;
  #L46dd08.  return v0;
}
procedure `int` `getAlpha`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dd1c.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46dd20.  call temp:= `getAlpha`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getAlpha:()I` @kind virtual;
  #L46dd26.  v0:= temp;
  #L46dd28.  return v0;
}
procedure `int` `getBackgroundColor`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBackgroundColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dd3c.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.shapeDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L46dd40.  call temp:= `getFillColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L46dd46.  v0:= temp @kind object;
  #L46dd48.  call temp:= `getDefaultColor`(v0) @signature `Landroid/content/res/ColorStateList;.getDefaultColor:()I` @kind virtual;
  #L46dd4e.  v0:= temp;
  #L46dd50.  return v0;
}
procedure `int` `getBadgeGravity`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeGravity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dd64.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46dd68.  call temp:= `getBadgeGravity`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getBadgeGravity:()I` @kind virtual;
  #L46dd6e.  v0:= temp;
  #L46dd70.  return v0;
}
procedure `java.util.Locale` `getBadgeNumberLocale`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeNumberLocale:()Ljava/util/Locale;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e128.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e12c.  call temp:= `getNumberLocale`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getNumberLocale:()Ljava/util/Locale;` @kind virtual;
  #L46e132.  v0:= temp @kind object;
  #L46e134.  return v0 @kind object;
}
procedure `int` `getBadgeTextColor`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getBadgeTextColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dd84.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46dd88.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L46dd8e.  v0:= temp @kind object;
  #L46dd90.  call temp:= `getColor`(v0) @signature `Landroid/text/TextPaint;.getColor:()I` @kind virtual;
  #L46dd96.  v0:= temp;
  #L46dd98.  return v0;
}
procedure `java.lang.CharSequence` `getContentDescription`(`com.google.android.material.badge.BadgeDrawable` v6 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getContentDescription:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46dfa0.  call temp:= `isVisible`(v6) @signature `Landroid/graphics/drawable/Drawable;.isVisible:()Z` @kind virtual;
  #L46dfa6.  v0:= temp;
  #L46dfa8.  v1:= 0I;
  #L46dfaa.  if v0 != 0 then goto L46dfb0;
  #L46dfae.  return v1 @kind object;
  #L46dfb0.  call temp:= `hasNumber`(v6) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L46dfb6.  v0:= temp;
  #L46dfb8.  if v0 == 0 then goto L46e060;
  #L46dfbc.  v0:= v6.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46dfc0.  call temp:= `getContentDescriptionQuantityStrings`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getContentDescriptionQuantityStrings:()I` @kind virtual;
  #L46dfc6.  v0:= temp;
  #L46dfc8.  if v0 == 0 then goto L46e05e;
  #L46dfcc.  v0:= v6.`com.google.android.material.badge.BadgeDrawable.contextRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46dfd0.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46dfd6.  v0:= temp @kind object;
  #L46dfd8.  v0:= (`android.content.Context`) v0 @kind object;
  #L46dfdc.  if v0 != 0 then goto L46dfe2;
  #L46dfe0.  return v1 @kind object;
  #L46dfe2.  call temp:= `getNumber`(v6) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L46dfe8.  v1:= temp;
  #L46dfea.  v2:= v6.`com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @type ^`int`;
  #L46dfee.  v3:= 0I;
  #L46dff0.  v4:= 1I;
  #L46dff2.  if v1 > v2 then goto L46e034;
  #L46dff6.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L46dffc.  v0:= temp @kind object;
  #L46dffe.  v1:= v6.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e002.  call temp:= `getContentDescriptionQuantityStrings`(v1) @signature `Lcom/google/android/material/badge/BadgeState;.getContentDescriptionQuantityStrings:()I` @kind virtual;
  #L46e008.  v1:= temp;
  #L46e00a.  call temp:= `getNumber`(v6) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L46e010.  v2:= temp;
  #L46e012.  v4:= new `java.lang.Object`[v4];
  #L46e016.  call temp:= `getNumber`(v6) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @kind virtual;
  #L46e01c.  v5:= temp;
  #L46e01e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L46e024.  v5:= temp @kind object;
  #L46e026.  v4[v3]:= v5 @kind object;
  #L46e02a.  call temp:= `getQuantityString`(v0, v1, v2, v4) @signature `Landroid/content/res/Resources;.getQuantityString:(II[Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L46e030.  v0:= temp @kind object;
  #L46e032.  return v0 @kind object;
  #L46e034.  v1:= v6.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e038.  call temp:= `getContentDescriptionExceedsMaxBadgeNumberStringResource`(v1) @signature `Lcom/google/android/material/badge/BadgeState;.getContentDescriptionExceedsMaxBadgeNumberStringResource:()I` @kind virtual;
  #L46e03e.  v1:= temp;
  #L46e040.  v2:= new `java.lang.Object`[v4];
  #L46e044.  v4:= v6.`com.google.android.material.badge.BadgeDrawable.maxBadgeNumber` @type ^`int`;
  #L46e048.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L46e04e.  v4:= temp @kind object;
  #L46e050.  v2[v3]:= v4 @kind object;
  #L46e054.  call temp:= `getString`(v0, v1, v2) @signature `Landroid/content/Context;.getString:(I[Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L46e05a.  v0:= temp @kind object;
  #L46e05c.  return v0 @kind object;
  #L46e05e.  return v1 @kind object;
  #L46e060.  v0:= v6.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e064.  call temp:= `getContentDescriptionNumberless`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getContentDescriptionNumberless:()Ljava/lang/CharSequence;` @kind virtual;
  #L46e06a.  v0:= temp @kind object;
  #L46e06c.  return v0 @kind object;
}
procedure `android.widget.FrameLayout` `getCustomBadgeParent`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getCustomBadgeParent:()Landroid/widget/FrameLayout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dbbc.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` @kind object;
  #L46dbc0.  if v0 == 0 then goto L46dbd2;
  #L46dbc4.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L46dbca.  v0:= temp @kind object;
  #L46dbcc.  v0:= (`android.widget.FrameLayout`) v0 @kind object;
  #L46dbd0.  goto L46dbd4;
  #L46dbd2.  v0:= 0I;
  #L46dbd4.  return v0 @kind object;
}
procedure `int` `getHorizontalOffset`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getHorizontalOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ddac.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46ddb0.  call temp:= `getHorizontalOffsetWithoutText`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getHorizontalOffsetWithoutText:()I` @kind virtual;
  #L46ddb6.  v0:= temp;
  #L46ddb8.  return v0;
}
procedure `int` `getHorizontalOffsetWithText`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getHorizontalOffsetWithText:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ddcc.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46ddd0.  call temp:= `getHorizontalOffsetWithText`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getHorizontalOffsetWithText:()I` @kind virtual;
  #L46ddd6.  v0:= temp;
  #L46ddd8.  return v0;
}
procedure `int` `getHorizontalOffsetWithoutText`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getHorizontalOffsetWithoutText:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ddec.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46ddf0.  call temp:= `getHorizontalOffsetWithoutText`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getHorizontalOffsetWithoutText:()I` @kind virtual;
  #L46ddf6.  v0:= temp;
  #L46ddf8.  return v0;
}
procedure `int` `getIntrinsicHeight`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46de0c.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L46de10.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L46de16.  v0:= temp;
  #L46de18.  return v0;
}
procedure `int` `getIntrinsicWidth`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46de2c.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.badgeBounds` @type ^`android.graphics.Rect` @kind object;
  #L46de30.  call temp:= `width`(v0) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L46de36.  v0:= temp;
  #L46de38.  return v0;
}
procedure `int` `getMaxCharacterCount`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getMaxCharacterCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46de4c.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46de50.  call temp:= `getMaxCharacterCount`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getMaxCharacterCount:()I` @kind virtual;
  #L46de56.  v0:= temp;
  #L46de58.  return v0;
}
procedure `int` `getNumber`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getNumber:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46de6c.  call temp:= `hasNumber`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @kind virtual;
  #L46de72.  v0:= temp;
  #L46de74.  if v0 == 0 then goto L46de86;
  #L46de78.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46de7c.  call temp:= `getNumber`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getNumber:()I` @kind virtual;
  #L46de82.  v0:= temp;
  #L46de84.  goto L46de88;
  #L46de86.  v0:= 0I;
  #L46de88.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46de9c.  v0:= -3I;
  #L46de9e.  return v0;
}
procedure `com.google.android.material.badge.BadgeState$State` `getSavedState`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getSavedState:()Lcom/google/android/material/badge/BadgeState$State;` @AccessFlag  {
    temp;
    v0;

  #L46dcbc.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46dcc0.  call temp:= `getOverridingState`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getOverridingState:()Lcom/google/android/material/badge/BadgeState$State;` @kind virtual;
  #L46dcc6.  v0:= temp @kind object;
  #L46dcc8.  return v0 @kind object;
}
procedure `int` `getVerticalOffset`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getVerticalOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46df40.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46df44.  call temp:= `getVerticalOffsetWithoutText`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getVerticalOffsetWithoutText:()I` @kind virtual;
  #L46df4a.  v0:= temp;
  #L46df4c.  return v0;
}
procedure `int` `getVerticalOffsetWithText`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getVerticalOffsetWithText:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46df60.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46df64.  call temp:= `getVerticalOffsetWithText`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getVerticalOffsetWithText:()I` @kind virtual;
  #L46df6a.  v0:= temp;
  #L46df6c.  return v0;
}
procedure `int` `getVerticalOffsetWithoutText`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.getVerticalOffsetWithoutText:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46df80.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46df84.  call temp:= `getVerticalOffsetWithoutText`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getVerticalOffsetWithoutText:()I` @kind virtual;
  #L46df8a.  v0:= temp;
  #L46df8c.  return v0;
}
procedure `boolean` `hasNumber`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.hasNumber:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dbe8.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46dbec.  call temp:= `hasNumber`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.hasNumber:()Z` @kind virtual;
  #L46dbf2.  v0:= temp;
  #L46dbf4.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46dc08.  v0:= 0I;
  #L46dc0a.  return v0;
}
procedure `boolean` `onStateChange`(`com.google.android.material.badge.BadgeDrawable` v0 @kind this, `int`[] v1 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onStateChange:([I)Z` @AccessFlag PUBLIC {
    temp;

  #L46dc1c.  call temp:= `onStateChange`(v0, v1) @signature `Landroid/graphics/drawable/Drawable;.onStateChange:([I)Z` @kind super;
  #L46dc22.  v1:= temp;
  #L46dc24.  return v1;
}
procedure `void` `onTextSizeChange`(`com.google.android.material.badge.BadgeDrawable` v0 @kind this) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onTextSizeChange:()V` @AccessFlag PUBLIC {
    temp;

  #L46e5e4.  call `invalidateSelf`(v0) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L46e5ea.  return @kind void;
}
procedure `void` `setAdditionalHorizontalOffset`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setAdditionalHorizontalOffset:(I)V` @AccessFlag  {
    temp;
    v0;

  #L46e698.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e69c.  call `setAdditionalHorizontalOffset`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setAdditionalHorizontalOffset:(I)V` @kind virtual;
  #L46e6a2.  call `updateCenterAndBounds`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46e6a8.  return @kind void;
}
procedure `void` `setAdditionalVerticalOffset`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setAdditionalVerticalOffset:(I)V` @AccessFlag  {
    temp;
    v0;

  #L46e6bc.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e6c0.  call `setAdditionalVerticalOffset`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setAdditionalVerticalOffset:(I)V` @kind virtual;
  #L46e6c6.  call `updateCenterAndBounds`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46e6cc.  return @kind void;
}
procedure `void` `setAlpha`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e6e0.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e6e4.  call `setAlpha`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setAlpha:(I)V` @kind virtual;
  #L46e6ea.  call `onAlphaUpdated`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onAlphaUpdated:()V` @kind direct;
  #L46e6f0.  return @kind void;
}
procedure `void` `setBackgroundColor`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBackgroundColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e704.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e708.  call `setBackgroundColor`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setBackgroundColor:(I)V` @kind virtual;
  #L46e70e.  call `onBackgroundColorUpdated`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onBackgroundColorUpdated:()V` @kind direct;
  #L46e714.  return @kind void;
}
procedure `void` `setBadgeGravity`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBadgeGravity:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e728.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e72c.  call temp:= `getBadgeGravity`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getBadgeGravity:()I` @kind virtual;
  #L46e732.  v0:= temp;
  #L46e734.  if v0 == v2 then goto L46e748;
  #L46e738.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e73c.  call `setBadgeGravity`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setBadgeGravity:(I)V` @kind virtual;
  #L46e742.  call `onBadgeGravityUpdated`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onBadgeGravityUpdated:()V` @kind direct;
  #L46e748.  return @kind void;
}
procedure `void` `setBadgeNumberLocale`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBadgeNumberLocale:(Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e75c.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e760.  call temp:= `getNumberLocale`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getNumberLocale:()Ljava/util/Locale;` @kind virtual;
  #L46e766.  v0:= temp @kind object;
  #L46e768.  call temp:= `equals`(v2, v0) @signature `Ljava/util/Locale;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L46e76e.  v0:= temp;
  #L46e770.  if v0 != 0 then goto L46e784;
  #L46e774.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e778.  call `setNumberLocale`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setNumberLocale:(Ljava/util/Locale;)V` @kind virtual;
  #L46e77e.  call `invalidateSelf`(v1) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L46e784.  return @kind void;
}
procedure `void` `setBadgeTextColor`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setBadgeTextColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e798.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L46e79c.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L46e7a2.  v0:= temp @kind object;
  #L46e7a4.  call temp:= `getColor`(v0) @signature `Landroid/text/TextPaint;.getColor:()I` @kind virtual;
  #L46e7aa.  v0:= temp;
  #L46e7ac.  if v0 == v2 then goto L46e7c0;
  #L46e7b0.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e7b4.  call `setBadgeTextColor`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setBadgeTextColor:(I)V` @kind virtual;
  #L46e7ba.  call `onBadgeTextColorUpdated`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onBadgeTextColorUpdated:()V` @kind direct;
  #L46e7c0.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.badge.BadgeDrawable` v0 @kind this, `android.graphics.ColorFilter` v1 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;

  #L46e7d4.  return @kind void;
}
procedure `void` `setContentDescriptionExceedsMaxBadgeNumberStringResource`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setContentDescriptionExceedsMaxBadgeNumberStringResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e7e8.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e7ec.  call `setContentDescriptionExceedsMaxBadgeNumberStringResource`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setContentDescriptionExceedsMaxBadgeNumberStringResource:(I)V` @kind virtual;
  #L46e7f2.  return @kind void;
}
procedure `void` `setContentDescriptionNumberless`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setContentDescriptionNumberless:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e804.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e808.  call `setContentDescriptionNumberless`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setContentDescriptionNumberless:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L46e80e.  return @kind void;
}
procedure `void` `setContentDescriptionQuantityStringsResource`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setContentDescriptionQuantityStringsResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e820.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e824.  call `setContentDescriptionQuantityStringsResource`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setContentDescriptionQuantityStringsResource:(I)V` @kind virtual;
  #L46e82a.  return @kind void;
}
procedure `void` `setHorizontalOffset`(`com.google.android.material.badge.BadgeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setHorizontalOffset:(I)V` @AccessFlag PUBLIC {
    temp;

  #L46e83c.  call `setHorizontalOffsetWithoutText`(v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setHorizontalOffsetWithoutText:(I)V` @kind virtual;
  #L46e842.  call `setHorizontalOffsetWithText`(v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setHorizontalOffsetWithText:(I)V` @kind virtual;
  #L46e848.  return @kind void;
}
procedure `void` `setHorizontalOffsetWithText`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setHorizontalOffsetWithText:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e85c.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e860.  call `setHorizontalOffsetWithText`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setHorizontalOffsetWithText:(I)V` @kind virtual;
  #L46e866.  call `updateCenterAndBounds`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46e86c.  return @kind void;
}
procedure `void` `setHorizontalOffsetWithoutText`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setHorizontalOffsetWithoutText:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e880.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e884.  call `setHorizontalOffsetWithoutText`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setHorizontalOffsetWithoutText:(I)V` @kind virtual;
  #L46e88a.  call `updateCenterAndBounds`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46e890.  return @kind void;
}
procedure `void` `setMaxCharacterCount`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setMaxCharacterCount:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e8a4.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e8a8.  call temp:= `getMaxCharacterCount`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getMaxCharacterCount:()I` @kind virtual;
  #L46e8ae.  v0:= temp;
  #L46e8b0.  if v0 == v2 then goto L46e8c4;
  #L46e8b4.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e8b8.  call `setMaxCharacterCount`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setMaxCharacterCount:(I)V` @kind virtual;
  #L46e8be.  call `onMaxCharacterCountUpdated`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onMaxCharacterCountUpdated:()V` @kind direct;
  #L46e8c4.  return @kind void;
}
procedure `void` `setNumber`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setNumber:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e8d8.  v0:= 0I;
  #L46e8da.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L46e8e0.  v2:= temp;
  #L46e8e2.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e8e6.  call temp:= `getNumber`(v0) @signature `Lcom/google/android/material/badge/BadgeState;.getNumber:()I` @kind virtual;
  #L46e8ec.  v0:= temp;
  #L46e8ee.  if v0 == v2 then goto L46e902;
  #L46e8f2.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e8f6.  call `setNumber`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setNumber:(I)V` @kind virtual;
  #L46e8fc.  call `onNumberUpdated`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onNumberUpdated:()V` @kind direct;
  #L46e902.  return @kind void;
}
procedure `void` `setVerticalOffset`(`com.google.android.material.badge.BadgeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVerticalOffset:(I)V` @AccessFlag PUBLIC {
    temp;

  #L46e998.  call `setVerticalOffsetWithoutText`(v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVerticalOffsetWithoutText:(I)V` @kind virtual;
  #L46e99e.  call `setVerticalOffsetWithText`(v0, v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVerticalOffsetWithText:(I)V` @kind virtual;
  #L46e9a4.  return @kind void;
}
procedure `void` `setVerticalOffsetWithText`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVerticalOffsetWithText:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e9b8.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e9bc.  call `setVerticalOffsetWithText`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setVerticalOffsetWithText:(I)V` @kind virtual;
  #L46e9c2.  call `updateCenterAndBounds`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46e9c8.  return @kind void;
}
procedure `void` `setVerticalOffsetWithoutText`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVerticalOffsetWithoutText:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e9dc.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46e9e0.  call `setVerticalOffsetWithoutText`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setVerticalOffsetWithoutText:(I)V` @kind virtual;
  #L46e9e6.  call `updateCenterAndBounds`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46e9ec.  return @kind void;
}
procedure `void` `setVisible`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/badge/BadgeDrawable;.setVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46ea00.  v0:= v1.`com.google.android.material.badge.BadgeDrawable.state` @type ^`com.google.android.material.badge.BadgeState` @kind object;
  #L46ea04.  call `setVisible`(v0, v2) @signature `Lcom/google/android/material/badge/BadgeState;.setVisible:(Z)V` @kind virtual;
  #L46ea0a.  call `onVisibilityUpdated`(v1) @signature `Lcom/google/android/material/badge/BadgeDrawable;.onVisibilityUpdated:()V` @kind direct;
  #L46ea10.  return @kind void;
}
procedure `void` `updateBadgeCoordinates`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46eb3c.  v0:= 0I;
  #L46eb3e.  call `updateBadgeCoordinates`(v1, v2, v0) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;Landroid/widget/FrameLayout;)V` @kind virtual;
  #L46eb44.  return @kind void;
}
procedure `void` `updateBadgeCoordinates`(`com.google.android.material.badge.BadgeDrawable` v1 @kind this, `android.view.View` v2 @kind object, `android.view.ViewGroup` v3 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;Landroid/view/ViewGroup;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46eb58.  v0:= instanceof @variable v3 @type ^`android.widget.FrameLayout` @kind boolean;
  #L46eb5c.  if v0 == 0 then goto L46eb6c;
  #L46eb60.  v3:= (`android.widget.FrameLayout`) v3 @kind object;
  #L46eb64.  call `updateBadgeCoordinates`(v1, v2, v3) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;Landroid/widget/FrameLayout;)V` @kind virtual;
  #L46eb6a.  return @kind void;
  #L46eb6c.  v2:= new `java.lang.IllegalArgumentException`;
  #L46eb70.  v3:= "customBadgeParent must be a FrameLayout" @kind object;
  #L46eb74.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46eb7a.  throw v2;
}
procedure `void` `updateBadgeCoordinates`(`com.google.android.material.badge.BadgeDrawable` v2 @kind this, `android.view.View` v3 @kind object, `android.widget.FrameLayout` v4 @kind object) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateBadgeCoordinates:(Landroid/view/View;Landroid/widget/FrameLayout;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46eb8c.  v0:= new `java.lang.ref.WeakReference`;
  #L46eb90.  call `<init>`(v0, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L46eb96.  v2.`com.google.android.material.badge.BadgeDrawable.anchorViewRef` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L46eb9a.  v0:= `@@com.google.android.material.badge.BadgeUtils.USE_COMPAT_PARENT` @type ^`boolean` @kind boolean;
  #L46eb9e.  if v0 == 0 then goto L46ebae;
  #L46eba2.  if v4 != 0 then goto L46ebae;
  #L46eba6.  call `tryWrapAnchorInCompatParent`(v2, v3) @signature `Lcom/google/android/material/badge/BadgeDrawable;.tryWrapAnchorInCompatParent:(Landroid/view/View;)V` @kind direct;
  #L46ebac.  goto L46ebbc;
  #L46ebae.  v1:= new `java.lang.ref.WeakReference`;
  #L46ebb2.  call `<init>`(v1, v4) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L46ebb8.  v2.`com.google.android.material.badge.BadgeDrawable.customBadgeParentRef` @type ^`java.lang.ref.WeakReference` := v1 @kind object;
  #L46ebbc.  if v0 != 0 then goto L46ebc6;
  #L46ebc0.  call `updateAnchorParentToNotClip`(v3) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateAnchorParentToNotClip:(Landroid/view/View;)V` @kind static;
  #L46ebc6.  call `updateCenterAndBounds`(v2) @signature `Lcom/google/android/material/badge/BadgeDrawable;.updateCenterAndBounds:()V` @kind direct;
  #L46ebcc.  call `invalidateSelf`(v2) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L46ebd2.  return @kind void;
}
