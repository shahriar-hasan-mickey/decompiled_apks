record `com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` @kind class @AccessFlag PUBLIC extends `com.google.android.material.appbar.HeaderScrollingViewBehavior` @kind class {
}
procedure `void` `<init>`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4694c8.  call `<init>`(v0) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.<init>:()V` @kind direct;
  #L4694ce.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4694e0.  call `<init>`(v1, v2, v3) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L4694e6.  v0:= `@@com.google.android.material.R$styleable.ScrollingViewBehavior_Layout` @type ^`int`[] @kind object;
  #L4694ea.  call temp:= `obtainStyledAttributes`(v2, v3, v0) @signature `Landroid/content/Context;.obtainStyledAttributes:(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind virtual;
  #L4694f0.  v2:= temp @kind object;
  #L4694f2.  v3:= `@@com.google.android.material.R$styleable.ScrollingViewBehavior_Layout_behavior_overlapTop` @type ^`int`;
  #L4694f6.  v0:= 0I;
  #L4694f8.  call temp:= `getDimensionPixelSize`(v2, v3, v0) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L4694fe.  v3:= temp;
  #L469500.  call `setOverlayTop`(v1, v3) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.setOverlayTop:(I)V` @kind virtual;
  #L469506.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L46950c.  return @kind void;
}
procedure `int` `getAppBarLayoutOffset`(`com.google.android.material.appbar.AppBarLayout` v1 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getAppBarLayoutOffset:(Lcom/google/android/material/appbar/AppBarLayout;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L469420.  call temp:= `getLayoutParams`(v1) @signature `Landroid/widget/LinearLayout;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L469426.  v1:= temp @kind object;
  #L469428.  v1:= (`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams`) v1 @kind object;
  #L46942c.  call temp:= `getBehavior`(v1) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;.getBehavior:()Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;` @kind virtual;
  #L469432.  v1:= temp @kind object;
  #L469434.  v0:= instanceof @variable v1 @type ^`com.google.android.material.appbar.AppBarLayout$BaseBehavior` @kind boolean;
  #L469438.  if v0 == 0 then goto L46944a;
  #L46943c.  v1:= (`com.google.android.material.appbar.AppBarLayout$BaseBehavior`) v1 @kind object;
  #L469440.  call temp:= `getTopBottomOffsetForScrollingSibling`(v1) @signature `Lcom/google/android/material/appbar/AppBarLayout$BaseBehavior;.getTopBottomOffsetForScrollingSibling:()I` @kind virtual;
  #L469446.  v1:= temp;
  #L469448.  return v1;
  #L46944a.  v1:= 0I;
  #L46944c.  return v1;
}
procedure `void` `offsetChildAsNeeded`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v3 @kind this, `android.view.View` v4 @kind object, `android.view.View` v5 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.offsetChildAsNeeded:(Landroid/view/View;Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L469520.  call temp:= `getLayoutParams`(v5) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L469526.  v0:= temp @kind object;
  #L469528.  v0:= (`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams`) v0 @kind object;
  #L46952c.  call temp:= `getBehavior`(v0) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;.getBehavior:()Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;` @kind virtual;
  #L469532.  v0:= temp @kind object;
  #L469534.  v1:= instanceof @variable v0 @type ^`com.google.android.material.appbar.AppBarLayout$BaseBehavior` @kind boolean;
  #L469538.  if v1 == 0 then goto L469576;
  #L46953c.  v0:= (`com.google.android.material.appbar.AppBarLayout$BaseBehavior`) v0 @kind object;
  #L469540.  call temp:= `getBottom`(v5) @signature `Landroid/view/View;.getBottom:()I` @kind virtual;
  #L469546.  v1:= temp;
  #L469548.  call temp:= `getTop`(v4) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L46954e.  v2:= temp;
  #L469550.  v1:= v1 - v2 @kind int;
  #L469552.  call temp:= `access$300`(v0) @signature `Lcom/google/android/material/appbar/AppBarLayout$BaseBehavior;.access$300:(Lcom/google/android/material/appbar/AppBarLayout$BaseBehavior;)I` @kind static;
  #L469558.  v0:= temp;
  #L46955a.  v1:= v1 + v0 @kind int;
  #L46955c.  call temp:= `getVerticalLayoutGap`(v3) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getVerticalLayoutGap:()I` @kind virtual;
  #L469562.  v0:= temp;
  #L469564.  v1:= v1 + v0 @kind int;
  #L469566.  call temp:= `getOverlapPixelsForOffset`(v3, v5) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getOverlapPixelsForOffset:(Landroid/view/View;)I` @kind virtual;
  #L46956c.  v5:= temp;
  #L46956e.  v1:= v1 - v5 @kind int;
  #L469570.  call `offsetTopAndBottom`(v4, v1) @signature `Landroidx/core/view/ViewCompat;.offsetTopAndBottom:(Landroid/view/View;I)V` @kind static;
  #L469576.  return @kind void;
}
procedure `void` `updateLiftedStateIfNeeded`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.updateLiftedStateIfNeeded:(Landroid/view/View;Landroid/view/View;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L469600.  v0:= instanceof @variable v3 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L469604.  if v0 == 0 then goto L469626;
  #L469608.  v3:= (`com.google.android.material.appbar.AppBarLayout`) v3 @kind object;
  #L46960c.  call temp:= `isLiftOnScroll`(v3) @signature `Lcom/google/android/material/appbar/AppBarLayout;.isLiftOnScroll:()Z` @kind virtual;
  #L469612.  v0:= temp;
  #L469614.  if v0 == 0 then goto L469626;
  #L469618.  call temp:= `shouldLift`(v3, v2) @signature `Lcom/google/android/material/appbar/AppBarLayout;.shouldLift:(Landroid/view/View;)Z` @kind virtual;
  #L46961e.  v2:= temp;
  #L469620.  call temp:= `setLiftedState`(v3, v2) @signature `Lcom/google/android/material/appbar/AppBarLayout;.setLiftedState:(Z)Z` @kind virtual;
  #L469626.  return @kind void;
}
procedure `android.view.View` `findFirstDependency`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Landroid/view/View;` @AccessFlag SYNTHETIC {
    temp;

  #L469210.  call temp:= `findFirstDependency`(v0, v1) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Lcom/google/android/material/appbar/AppBarLayout;` @kind virtual;
  #L469216.  v1:= temp @kind object;
  #L469218.  return v1 @kind object;
}
procedure `com.google.android.material.appbar.AppBarLayout` `findFirstDependency`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Lcom/google/android/material/appbar/AppBarLayout;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L469380.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L469386.  v0:= temp;
  #L469388.  v1:= 0I;
  #L46938a.  if v1 >= v0 then goto L4693ae;
  #L46938e.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L469394.  v2:= temp @kind object;
  #L469396.  v2:= (`android.view.View`) v2 @kind object;
  #L46939a.  v3:= instanceof @variable v2 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L46939e.  if v3 == 0 then goto L4693a8;
  #L4693a2.  v2:= (`com.google.android.material.appbar.AppBarLayout`) v2 @kind object;
  #L4693a6.  return v2 @kind object;
  #L4693a8.  v1:= v1 + 1;
  #L4693ac.  goto L46938a;
  #L4693ae.  v5:= 0I;
  #L4693b0.  return v5 @kind object;
}
procedure `int` `getLeftAndRightOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getLeftAndRightOffset:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L469460.  call temp:= `getLeftAndRightOffset`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.getLeftAndRightOffset:()I` @kind super;
  #L469466.  v0:= temp;
  #L469468.  return v0;
}
procedure `float` `getOverlapRatioForOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v4 @kind this, `android.view.View` v5 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getOverlapRatioForOffset:(Landroid/view/View;)F` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4693c4.  v0:= instanceof @variable v5 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L4693c8.  v1:= 0I;
  #L4693ca.  if v0 == 0 then goto L46940c;
  #L4693ce.  v5:= (`com.google.android.material.appbar.AppBarLayout`) v5 @kind object;
  #L4693d2.  call temp:= `getTotalScrollRange`(v5) @signature `Lcom/google/android/material/appbar/AppBarLayout;.getTotalScrollRange:()I` @kind virtual;
  #L4693d8.  v0:= temp;
  #L4693da.  call temp:= `getDownNestedPreScrollRange`(v5) @signature `Lcom/google/android/material/appbar/AppBarLayout;.getDownNestedPreScrollRange:()I` @kind virtual;
  #L4693e0.  v2:= temp;
  #L4693e2.  call temp:= `getAppBarLayoutOffset`(v5) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getAppBarLayoutOffset:(Lcom/google/android/material/appbar/AppBarLayout;)I` @kind static;
  #L4693e8.  v5:= temp;
  #L4693ea.  if v2 == 0 then goto L4693f8;
  #L4693ee.  v3:= v0 + v5 @kind int;
  #L4693f2.  if v3 > v2 then goto L4693f8;
  #L4693f6.  return v1;
  #L4693f8.  v0:= v0 - v2 @kind int;
  #L4693fa.  if v0 == 0 then goto L46940c;
  #L4693fe.  v1:= 1.0F;
  #L469402.  v5:= (`float`) v5 @kind i2f;
  #L469404.  v0:= (`float`) v0 @kind i2f;
  #L469406.  v5:= v5 / v0 @kind float;
  #L469408.  v5:= v5 + v1 @kind float;
  #L46940a.  return v5;
  #L46940c.  return v1;
}
procedure `int` `getScrollRange`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getScrollRange:(Landroid/view/View;)I` @AccessFlag  {
    temp;
    v0;

  #L46947c.  v0:= instanceof @variable v2 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L469480.  if v0 == 0 then goto L469492;
  #L469484.  v2:= (`com.google.android.material.appbar.AppBarLayout`) v2 @kind object;
  #L469488.  call temp:= `getTotalScrollRange`(v2) @signature `Lcom/google/android/material/appbar/AppBarLayout;.getTotalScrollRange:()I` @kind virtual;
  #L46948e.  v2:= temp;
  #L469490.  return v2;
  #L469492.  call temp:= `getScrollRange`(v1, v2) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.getScrollRange:(Landroid/view/View;)I` @kind super;
  #L469498.  v2:= temp;
  #L46949a.  return v2;
}
procedure `int` `getTopAndBottomOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.getTopAndBottomOffset:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4694ac.  call temp:= `getTopAndBottomOffset`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.getTopAndBottomOffset:()I` @kind super;
  #L4694b2.  v0:= temp;
  #L4694b4.  return v0;
}
procedure `boolean` `isHorizontalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.isHorizontalOffsetEnabled:()Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L46922c.  call temp:= `isHorizontalOffsetEnabled`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.isHorizontalOffsetEnabled:()Z` @kind super;
  #L469232.  v0:= temp;
  #L469234.  return v0;
}
procedure `boolean` `isVerticalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v1 @kind this) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.isVerticalOffsetEnabled:()Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L469248.  call temp:= `isVerticalOffsetEnabled`(v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.isVerticalOffsetEnabled:()Z` @kind super;
  #L46924e.  v0:= temp;
  #L469250.  return v0;
}
procedure `boolean` `layoutDependsOn`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.layoutDependsOn:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC {
    temp;

  #L469264.  v1:= instanceof @variable v3 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L469268.  return v1;
}
procedure `boolean` `onDependentViewChanged`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onDependentViewChanged:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC {
    temp;

  #L46927c.  call `offsetChildAsNeeded`(v0, v2, v3) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.offsetChildAsNeeded:(Landroid/view/View;Landroid/view/View;)V` @kind direct;
  #L469282.  call `updateLiftedStateIfNeeded`(v0, v2, v3) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.updateLiftedStateIfNeeded:(Landroid/view/View;Landroid/view/View;)V` @kind direct;
  #L469288.  v1:= 0I;
  #L46928a.  return v1;
}
procedure `void` `onDependentViewRemoved`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onDependentViewRemoved:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;

  #L469588.  v2:= instanceof @variable v3 @type ^`com.google.android.material.appbar.AppBarLayout` @kind boolean;
  #L46958c.  if v2 == 0 then goto L4695bc;
  #L469590.  v2:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_SCROLL_FORWARD` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L469594.  call temp:= `getId`(v2) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;.getId:()I` @kind virtual;
  #L46959a.  v2:= temp;
  #L46959c.  call `removeAccessibilityAction`(v1, v2) @signature `Landroidx/core/view/ViewCompat;.removeAccessibilityAction:(Landroid/view/View;I)V` @kind static;
  #L4695a2.  v2:= `@@androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.ACTION_SCROLL_BACKWARD` @type ^`androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat` @kind object;
  #L4695a6.  call temp:= `getId`(v2) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;.getId:()I` @kind virtual;
  #L4695ac.  v2:= temp;
  #L4695ae.  call `removeAccessibilityAction`(v1, v2) @signature `Landroidx/core/view/ViewCompat;.removeAccessibilityAction:(Landroid/view/View;I)V` @kind static;
  #L4695b4.  v2:= 0I;
  #L4695b6.  call `setAccessibilityDelegate`(v1, v2) @signature `Landroidx/core/view/ViewCompat;.setAccessibilityDelegate:(Landroid/view/View;Landroidx/core/view/AccessibilityDelegateCompat;)V` @kind static;
  #L4695bc.  return @kind void;
}
procedure `boolean` `onLayoutChild`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `int` v3 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onLayoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L46929c.  call temp:= `onLayoutChild`(v0, v1, v2, v3) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.onLayoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)Z` @kind super;
  #L4692a2.  v1:= temp;
  #L4692a4.  return v1;
}
procedure `boolean` `onMeasureChild`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v1 @kind object, `android.view.View` v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onMeasureChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;IIII)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4692b8.  call temp:= `onMeasureChild`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/appbar/HeaderScrollingViewBehavior;.onMeasureChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;IIII)Z` @kind super;
  #L4692be.  v1:= temp;
  #L4692c0.  return v1;
}
procedure `boolean` `onRequestChildRectangleOnScreen`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v3 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v4 @kind object, `android.view.View` v5 @kind object, `android.graphics.Rect` v6 @kind object, `boolean` v7 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.onRequestChildRectangleOnScreen:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/graphics/Rect;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4692d4.  call temp:= `getDependencies`(v4, v5) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getDependencies:(Landroid/view/View;)Ljava/util/List;` @kind virtual;
  #L4692da.  v0:= temp @kind object;
  #L4692dc.  call temp:= `findFirstDependency`(v3, v0) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.findFirstDependency:(Ljava/util/List;)Lcom/google/android/material/appbar/AppBarLayout;` @kind virtual;
  #L4692e2.  v0:= temp @kind object;
  #L4692e4.  v1:= 0I;
  #L4692e6.  if v0 == 0 then goto L469334;
  #L4692ea.  call temp:= `getLeft`(v5) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L4692f0.  v2:= temp;
  #L4692f2.  call temp:= `getTop`(v5) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L4692f8.  v5:= temp;
  #L4692fa.  call `offset`(v6, v2, v5) @signature `Landroid/graphics/Rect;.offset:(II)V` @kind virtual;
  #L469300.  v5:= v3.`com.google.android.material.appbar.HeaderScrollingViewBehavior.tempRect1` @type ^`android.graphics.Rect` @kind object;
  #L469304.  call temp:= `getWidth`(v4) @signature `Landroid/view/ViewGroup;.getWidth:()I` @kind virtual;
  #L46930a.  v2:= temp;
  #L46930c.  call temp:= `getHeight`(v4) @signature `Landroid/view/ViewGroup;.getHeight:()I` @kind virtual;
  #L469312.  v4:= temp;
  #L469314.  call `set`(v5, v1, v1, v2, v4) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L46931a.  call temp:= `contains`(v5, v6) @signature `Landroid/graphics/Rect;.contains:(Landroid/graphics/Rect;)Z` @kind virtual;
  #L469320.  v4:= temp;
  #L469322.  if v4 != 0 then goto L469334;
  #L469326.  v4:= 1I;
  #L469328.  v5:= v7 ^~ 1;
  #L46932c.  call `setExpanded`(v0, v1, v5) @signature `Lcom/google/android/material/appbar/AppBarLayout;.setExpanded:(ZZ)V` @kind virtual;
  #L469332.  return v4;
  #L469334.  return v1;
}
procedure `void` `setHorizontalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setHorizontalOffsetEnabled:(Z)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4695d0.  call `setHorizontalOffsetEnabled`(v0, v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.setHorizontalOffsetEnabled:(Z)V` @kind super;
  #L4695d6.  return @kind void;
}
procedure `boolean` `setLeftAndRightOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setLeftAndRightOffset:(I)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L469348.  call temp:= `setLeftAndRightOffset`(v0, v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.setLeftAndRightOffset:(I)Z` @kind super;
  #L46934e.  v1:= temp;
  #L469350.  return v1;
}
procedure `boolean` `setTopAndBottomOffset`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setTopAndBottomOffset:(I)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L469364.  call temp:= `setTopAndBottomOffset`(v0, v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.setTopAndBottomOffset:(I)Z` @kind super;
  #L46936a.  v1:= temp;
  #L46936c.  return v1;
}
procedure `void` `setVerticalOffsetEnabled`(`com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/appbar/AppBarLayout$ScrollingViewBehavior;.setVerticalOffsetEnabled:(Z)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4695e8.  call `setVerticalOffsetEnabled`(v0, v1) @signature `Lcom/google/android/material/appbar/ViewOffsetBehavior;.setVerticalOffsetEnabled:(Z)V` @kind super;
  #L4695ee.  return @kind void;
}
