record `com.google.android.material.transformation.ExpandableBehavior` @kind class @AccessFlag PUBLIC_ABSTRACT extends `androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior` @kind class {
  `int` `com.google.android.material.transformation.ExpandableBehavior.currentState` @AccessFlag PRIVATE;
}
global `int` `@@com.google.android.material.transformation.ExpandableBehavior.STATE_COLLAPSED` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.transformation.ExpandableBehavior.STATE_EXPANDED` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.transformation.ExpandableBehavior.STATE_UNINITIALIZED` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.android.material.transformation.ExpandableBehavior` v1 @kind this) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ccb74.  call `<init>`(v1) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.<init>:()V` @kind direct;
  #L4ccb7a.  v0:= 0I;
  #L4ccb7c.  v1.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int` := v0;
  #L4ccb80.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.transformation.ExpandableBehavior` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ccb94.  call `<init>`(v0, v1, v2) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L4ccb9a.  v1:= 0I;
  #L4ccb9c.  v0.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int` := v1;
  #L4ccba0.  return @kind void;
}
procedure `int` `access$000`(`com.google.android.material.transformation.ExpandableBehavior` v0 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.access$000:(Lcom/google/android/material/transformation/ExpandableBehavior;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ccb5c.  v0:= v0.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int`;
  #L4ccb60.  return v0;
}
procedure `boolean` `didStateChange`(`com.google.android.material.transformation.ExpandableBehavior` v3 @kind this, `boolean` v4 ) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.didStateChange:(Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4cc9a4.  v0:= 0I;
  #L4cc9a6.  v1:= 1I;
  #L4cc9a8.  if v4 == 0 then goto L4cc9be;
  #L4cc9ac.  v4:= v3.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int`;
  #L4cc9b0.  if v4 == 0 then goto L4cc9ba;
  #L4cc9b4.  v2:= 2I;
  #L4cc9b6.  if v4 != v2 then goto L4cc9bc;
  #L4cc9ba.  v0:= 1I;
  #L4cc9bc.  return v0;
  #L4cc9be.  v4:= v3.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int`;
  #L4cc9c2.  if v4 != v1 then goto L4cc9c8;
  #L4cc9c6.  v0:= 1I;
  #L4cc9c8.  return v0;
}
procedure `com.google.android.material.transformation.ExpandableBehavior` `from`(`android.view.View` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.from:(Landroid/view/View;Ljava/lang/Class;)Lcom/google/android/material/transformation/ExpandableBehavior;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ccaf8.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L4ccafe.  v1:= temp @kind object;
  #L4ccb00.  v0:= instanceof @variable v1 @type ^`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams` @kind boolean;
  #L4ccb04.  if v0 == 0 then goto L4ccb3a;
  #L4ccb08.  v1:= (`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams`) v1 @kind object;
  #L4ccb0c.  call temp:= `getBehavior`(v1) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;.getBehavior:()Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;` @kind virtual;
  #L4ccb12.  v1:= temp @kind object;
  #L4ccb14.  v0:= instanceof @variable v1 @type ^`com.google.android.material.transformation.ExpandableBehavior` @kind boolean;
  #L4ccb18.  if v0 == 0 then goto L4ccb2a;
  #L4ccb1c.  call temp:= `cast`(v2, v1) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ccb22.  v1:= temp @kind object;
  #L4ccb24.  v1:= (`com.google.android.material.transformation.ExpandableBehavior`) v1 @kind object;
  #L4ccb28.  return v1 @kind object;
  #L4ccb2a.  v1:= new `java.lang.IllegalArgumentException`;
  #L4ccb2e.  v2:= "The view is not associated with ExpandableBehavior" @kind object;
  #L4ccb32.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ccb38.  throw v1;
  #L4ccb3a.  v1:= new `java.lang.IllegalArgumentException`;
  #L4ccb3e.  v2:= "The view is not a child of CoordinatorLayout" @kind object;
  #L4ccb42.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ccb48.  throw v1;
}
procedure `com.google.android.material.expandable.ExpandableWidget` `findExpandableWidget`(`com.google.android.material.transformation.ExpandableBehavior` v5 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v6 @kind object, `android.view.View` v7 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.findExpandableWidget:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;)Lcom/google/android/material/expandable/ExpandableWidget;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ccaa8.  call temp:= `getDependencies`(v6, v7) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getDependencies:(Landroid/view/View;)Ljava/util/List;` @kind virtual;
  #L4ccaae.  v0:= temp @kind object;
  #L4ccab0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4ccab6.  v1:= temp;
  #L4ccab8.  v2:= 0I;
  #L4ccaba.  if v2 >= v1 then goto L4ccae2;
  #L4ccabe.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4ccac4.  v3:= temp @kind object;
  #L4ccac6.  v3:= (`android.view.View`) v3 @kind object;
  #L4ccaca.  call temp:= `layoutDependsOn`(v5, v6, v7, v3) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.layoutDependsOn:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @kind virtual;
  #L4ccad0.  v4:= temp;
  #L4ccad2.  if v4 == 0 then goto L4ccadc;
  #L4ccad6.  v3:= (`com.google.android.material.expandable.ExpandableWidget`) v3 @kind object;
  #L4ccada.  return v3 @kind object;
  #L4ccadc.  v2:= v2 + 1;
  #L4ccae0.  goto L4ccaba;
  #L4ccae2.  v6:= 0I;
  #L4ccae4.  return v6 @kind object;
}
procedure `boolean` `layoutDependsOn`(`androidx.coordinatorlayout.widget.CoordinatorLayout` v0 @kind object, `android.view.View` v1 @kind object, `android.view.View` v2 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.layoutDependsOn:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `onDependentViewChanged`(`com.google.android.material.transformation.ExpandableBehavior` v1 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v2 @kind object, `android.view.View` v3 @kind object, `android.view.View` v4 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.onDependentViewChanged:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cc9dc.  v4:= (`com.google.android.material.expandable.ExpandableWidget`) v4 @kind object;
  #L4cc9e0.  call temp:= `isExpanded`(v4) @signature `Lcom/google/android/material/expandable/ExpandableWidget;.isExpanded:()Z` @kind interface;
  #L4cc9e6.  v2:= temp;
  #L4cc9e8.  call temp:= `didStateChange`(v1, v2) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.didStateChange:(Z)Z` @kind direct;
  #L4cc9ee.  v2:= temp;
  #L4cc9f0.  if v2 == 0 then goto L4cca24;
  #L4cc9f4.  call temp:= `isExpanded`(v4) @signature `Lcom/google/android/material/expandable/ExpandableWidget;.isExpanded:()Z` @kind interface;
  #L4cc9fa.  v2:= temp;
  #L4cc9fc.  v0:= 1I;
  #L4cc9fe.  if v2 == 0 then goto L4cca06;
  #L4cca02.  v2:= 1I;
  #L4cca04.  goto L4cca08;
  #L4cca06.  v2:= 2I;
  #L4cca08.  v1.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int` := v2;
  #L4cca0c.  v2:= v4 @kind object;
  #L4cca0e.  v2:= (`android.view.View`) v2 @kind object;
  #L4cca12.  call temp:= `isExpanded`(v4) @signature `Lcom/google/android/material/expandable/ExpandableWidget;.isExpanded:()Z` @kind interface;
  #L4cca18.  v4:= temp;
  #L4cca1a.  call temp:= `onExpandedStateChange`(v1, v2, v3, v4, v0) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.onExpandedStateChange:(Landroid/view/View;Landroid/view/View;ZZ)Z` @kind virtual;
  #L4cca20.  v2:= temp;
  #L4cca22.  return v2;
  #L4cca24.  v2:= 0I;
  #L4cca26.  return v2;
}
procedure `boolean` `onExpandedStateChange`(`android.view.View` v0 @kind object, `android.view.View` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.onExpandedStateChange:(Landroid/view/View;Landroid/view/View;ZZ)Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `onLayoutChild`(`com.google.android.material.transformation.ExpandableBehavior` v2 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v3 @kind object, `android.view.View` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.onLayoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4cca38.  call temp:= `isLaidOut`(v4) @signature `Landroidx/core/view/ViewCompat;.isLaidOut:(Landroid/view/View;)Z` @kind static;
  #L4cca3e.  v5:= temp;
  #L4cca40.  if v5 != 0 then goto L4cca92;
  #L4cca44.  call temp:= `findExpandableWidget`(v2, v3, v4) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.findExpandableWidget:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;)Lcom/google/android/material/expandable/ExpandableWidget;` @kind virtual;
  #L4cca4a.  v3:= temp @kind object;
  #L4cca4c.  if v3 == 0 then goto L4cca92;
  #L4cca50.  call temp:= `isExpanded`(v3) @signature `Lcom/google/android/material/expandable/ExpandableWidget;.isExpanded:()Z` @kind interface;
  #L4cca56.  v5:= temp;
  #L4cca58.  call temp:= `didStateChange`(v2, v5) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.didStateChange:(Z)Z` @kind direct;
  #L4cca5e.  v5:= temp;
  #L4cca60.  if v5 == 0 then goto L4cca92;
  #L4cca64.  call temp:= `isExpanded`(v3) @signature `Lcom/google/android/material/expandable/ExpandableWidget;.isExpanded:()Z` @kind interface;
  #L4cca6a.  v5:= temp;
  #L4cca6c.  if v5 == 0 then goto L4cca74;
  #L4cca70.  v5:= 1I;
  #L4cca72.  goto L4cca76;
  #L4cca74.  v5:= 2I;
  #L4cca76.  v2.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int` := v5;
  #L4cca7a.  call temp:= `getViewTreeObserver`(v4) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L4cca80.  v0:= temp @kind object;
  #L4cca82.  v1:= new `com.google.android.material.transformation.ExpandableBehavior$1`;
  #L4cca86.  call `<init>`(v1, v2, v4, v5, v3) @signature `Lcom/google/android/material/transformation/ExpandableBehavior$1;.<init>:(Lcom/google/android/material/transformation/ExpandableBehavior;Landroid/view/View;ILcom/google/android/material/expandable/ExpandableWidget;)V` @kind direct;
  #L4cca8c.  call `addOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.addOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L4cca92.  v3:= 0I;
  #L4cca94.  return v3;
}
