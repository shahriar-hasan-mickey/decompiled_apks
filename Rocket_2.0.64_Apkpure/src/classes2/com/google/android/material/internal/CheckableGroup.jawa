record `com.google.android.material.internal.CheckableGroup` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `com.google.android.material.internal.CheckableGroup.checkables` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.google.android.material.internal.CheckableGroup.checkedIds` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.internal.CheckableGroup$OnCheckedStateChangeListener` `com.google.android.material.internal.CheckableGroup.onCheckedStateChangeListener` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.internal.CheckableGroup.selectionRequired` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.internal.CheckableGroup.singleSelection` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.android.material.internal.CheckableGroup` v1 @kind this) @signature `Lcom/google/android/material/internal/CheckableGroup;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4985f8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4985fe.  v0:= new `java.util.HashMap`;
  #L498602.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L498608.  v1.`com.google.android.material.internal.CheckableGroup.checkables` @type ^`java.util.Map` := v0 @kind object;
  #L49860c.  v0:= new `java.util.HashSet`;
  #L498610.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L498616.  v1.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` := v0 @kind object;
  #L49861a.  return @kind void;
}
procedure `boolean` `access$000`(`com.google.android.material.internal.CheckableGroup` v0 @kind object, `com.google.android.material.internal.MaterialCheckable` v1 @kind object) @signature `Lcom/google/android/material/internal/CheckableGroup;.access$000:(Lcom/google/android/material/internal/CheckableGroup;Lcom/google/android/material/internal/MaterialCheckable;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L498370.  call temp:= `checkInternal`(v0, v1) @signature `Lcom/google/android/material/internal/CheckableGroup;.checkInternal:(Lcom/google/android/material/internal/MaterialCheckable;)Z` @kind direct;
  #L498376.  v0:= temp;
  #L498378.  return v0;
}
procedure `boolean` `access$100`(`com.google.android.material.internal.CheckableGroup` v0 @kind object) @signature `Lcom/google/android/material/internal/CheckableGroup;.access$100:(Lcom/google/android/material/internal/CheckableGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L49838c.  v0:= v0.`com.google.android.material.internal.CheckableGroup.selectionRequired` @type ^`boolean` @kind boolean;
  #L498390.  return v0;
}
procedure `boolean` `access$200`(`com.google.android.material.internal.CheckableGroup` v0 @kind object, `com.google.android.material.internal.MaterialCheckable` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/android/material/internal/CheckableGroup;.access$200:(Lcom/google/android/material/internal/CheckableGroup;Lcom/google/android/material/internal/MaterialCheckable;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4983a4.  call temp:= `uncheckInternal`(v0, v1, v2) @signature `Lcom/google/android/material/internal/CheckableGroup;.uncheckInternal:(Lcom/google/android/material/internal/MaterialCheckable;Z)Z` @kind direct;
  #L4983aa.  v0:= temp;
  #L4983ac.  return v0;
}
procedure `void` `access$300`(`com.google.android.material.internal.CheckableGroup` v0 @kind object) @signature `Lcom/google/android/material/internal/CheckableGroup;.access$300:(Lcom/google/android/material/internal/CheckableGroup;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L49862c.  call `onCheckedStateChanged`(v0) @signature `Lcom/google/android/material/internal/CheckableGroup;.onCheckedStateChanged:()V` @kind direct;
  #L498632.  return @kind void;
}
procedure `boolean` `checkInternal`(`com.google.android.material.internal.CheckableGroup` v4 @kind this, `com.google.android.material.internal.MaterialCheckable` v5 @kind object) @signature `Lcom/google/android/material/internal/CheckableGroup;.checkInternal:(Lcom/google/android/material/internal/MaterialCheckable;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4983c0.  call temp:= `getId`(v5) @signature `Lcom/google/android/material/internal/MaterialCheckable;.getId:()I` @kind interface;
  #L4983c6.  v0:= temp;
  #L4983c8.  v1:= v4.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L4983cc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4983d2.  v2:= temp @kind object;
  #L4983d4.  call temp:= `contains`(v1, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4983da.  v1:= temp;
  #L4983dc.  v2:= 0I;
  #L4983de.  if v1 == 0 then goto L4983e4;
  #L4983e2.  return v2;
  #L4983e4.  v1:= v4.`com.google.android.material.internal.CheckableGroup.checkables` @type ^`java.util.Map` @kind object;
  #L4983e8.  call temp:= `getSingleCheckedId`(v4) @signature `Lcom/google/android/material/internal/CheckableGroup;.getSingleCheckedId:()I` @kind virtual;
  #L4983ee.  v3:= temp;
  #L4983f0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4983f6.  v3:= temp @kind object;
  #L4983f8.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4983fe.  v1:= temp @kind object;
  #L498400.  v1:= (`com.google.android.material.internal.MaterialCheckable`) v1 @kind object;
  #L498404.  if v1 == 0 then goto L49840e;
  #L498408.  call temp:= `uncheckInternal`(v4, v1, v2) @signature `Lcom/google/android/material/internal/CheckableGroup;.uncheckInternal:(Lcom/google/android/material/internal/MaterialCheckable;Z)Z` @kind direct;
  #L49840e.  v1:= v4.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L498412.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L498418.  v0:= temp @kind object;
  #L49841a.  call temp:= `add`(v1, v0) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L498420.  v0:= temp;
  #L498422.  call temp:= `isChecked`(v5) @signature `Landroid/widget/Checkable;.isChecked:()Z` @kind interface;
  #L498428.  v1:= temp;
  #L49842a.  if v1 != 0 then goto L498436;
  #L49842e.  v1:= 1I;
  #L498430.  call `setChecked`(v5, v1) @signature `Landroid/widget/Checkable;.setChecked:(Z)V` @kind interface;
  #L498436.  return v0;
}
procedure `void` `onCheckedStateChanged`(`com.google.android.material.internal.CheckableGroup` v2 @kind this) @signature `Lcom/google/android/material/internal/CheckableGroup;.onCheckedStateChanged:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L49873c.  v0:= v2.`com.google.android.material.internal.CheckableGroup.onCheckedStateChangeListener` @type ^`com.google.android.material.internal.CheckableGroup$OnCheckedStateChangeListener` @kind object;
  #L498740.  if v0 == 0 then goto L498752;
  #L498744.  call temp:= `getCheckedIds`(v2) @signature `Lcom/google/android/material/internal/CheckableGroup;.getCheckedIds:()Ljava/util/Set;` @kind virtual;
  #L49874a.  v1:= temp @kind object;
  #L49874c.  call `onCheckedStateChanged`(v0, v1) @signature `Lcom/google/android/material/internal/CheckableGroup$OnCheckedStateChangeListener;.onCheckedStateChanged:(Ljava/util/Set;)V` @kind interface;
  #L498752.  return @kind void;
}
procedure `boolean` `uncheckInternal`(`com.google.android.material.internal.CheckableGroup` v4 @kind this, `com.google.android.material.internal.MaterialCheckable` v5 @kind object, `boolean` v6 ) @signature `Lcom/google/android/material/internal/CheckableGroup;.uncheckInternal:(Lcom/google/android/material/internal/MaterialCheckable;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L498478.  call temp:= `getId`(v5) @signature `Lcom/google/android/material/internal/MaterialCheckable;.getId:()I` @kind interface;
  #L49847e.  v0:= temp;
  #L498480.  v1:= v4.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L498484.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49848a.  v2:= temp @kind object;
  #L49848c.  call temp:= `contains`(v1, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L498492.  v1:= temp;
  #L498494.  v2:= 0I;
  #L498496.  if v1 != 0 then goto L49849c;
  #L49849a.  return v2;
  #L49849c.  if v6 == 0 then goto L4984d2;
  #L4984a0.  v6:= v4.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L4984a4.  call temp:= `size`(v6) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L4984aa.  v6:= temp;
  #L4984ac.  v1:= 1I;
  #L4984ae.  if v6 != v1 then goto L4984d2;
  #L4984b2.  v6:= v4.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L4984b6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4984bc.  v3:= temp @kind object;
  #L4984be.  call temp:= `contains`(v6, v3) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4984c4.  v6:= temp;
  #L4984c6.  if v6 == 0 then goto L4984d2;
  #L4984ca.  call `setChecked`(v5, v1) @signature `Landroid/widget/Checkable;.setChecked:(Z)V` @kind interface;
  #L4984d0.  return v2;
  #L4984d2.  v6:= v4.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L4984d6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4984dc.  v0:= temp @kind object;
  #L4984de.  call temp:= `remove`(v6, v0) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4984e4.  v6:= temp;
  #L4984e6.  call temp:= `isChecked`(v5) @signature `Landroid/widget/Checkable;.isChecked:()Z` @kind interface;
  #L4984ec.  v0:= temp;
  #L4984ee.  if v0 == 0 then goto L4984f8;
  #L4984f2.  call `setChecked`(v5, v2) @signature `Landroid/widget/Checkable;.setChecked:(Z)V` @kind interface;
  #L4984f8.  return v6;
}
procedure `void` `addCheckable`(`com.google.android.material.internal.CheckableGroup` v2 @kind this, `com.google.android.material.internal.MaterialCheckable` v3 @kind object) @signature `Lcom/google/android/material/internal/CheckableGroup;.addCheckable:(Lcom/google/android/material/internal/MaterialCheckable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L498644.  v0:= v2.`com.google.android.material.internal.CheckableGroup.checkables` @type ^`java.util.Map` @kind object;
  #L498648.  call temp:= `getId`(v3) @signature `Lcom/google/android/material/internal/MaterialCheckable;.getId:()I` @kind interface;
  #L49864e.  v1:= temp;
  #L498650.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L498656.  v1:= temp @kind object;
  #L498658.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49865e.  call temp:= `isChecked`(v3) @signature `Landroid/widget/Checkable;.isChecked:()Z` @kind interface;
  #L498664.  v0:= temp;
  #L498666.  if v0 == 0 then goto L498670;
  #L49866a.  call temp:= `checkInternal`(v2, v3) @signature `Lcom/google/android/material/internal/CheckableGroup;.checkInternal:(Lcom/google/android/material/internal/MaterialCheckable;)Z` @kind direct;
  #L498670.  v0:= new `com.google.android.material.internal.CheckableGroup$1`;
  #L498674.  call `<init>`(v0, v2) @signature `Lcom/google/android/material/internal/CheckableGroup$1;.<init>:(Lcom/google/android/material/internal/CheckableGroup;)V` @kind direct;
  #L49867a.  call `setInternalOnCheckedChangeListener`(v3, v0) @signature `Lcom/google/android/material/internal/MaterialCheckable;.setInternalOnCheckedChangeListener:(Lcom/google/android/material/internal/MaterialCheckable$OnCheckedChangeListener;)V` @kind interface;
  #L498680.  return @kind void;
}
procedure `void` `check`(`com.google.android.material.internal.CheckableGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/internal/CheckableGroup;.check:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L498694.  v0:= v1.`com.google.android.material.internal.CheckableGroup.checkables` @type ^`java.util.Map` @kind object;
  #L498698.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49869e.  v2:= temp @kind object;
  #L4986a0.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4986a6.  v2:= temp @kind object;
  #L4986a8.  v2:= (`com.google.android.material.internal.MaterialCheckable`) v2 @kind object;
  #L4986ac.  if v2 != 0 then goto L4986b2;
  #L4986b0.  return @kind void;
  #L4986b2.  call temp:= `checkInternal`(v1, v2) @signature `Lcom/google/android/material/internal/CheckableGroup;.checkInternal:(Lcom/google/android/material/internal/MaterialCheckable;)Z` @kind direct;
  #L4986b8.  v2:= temp;
  #L4986ba.  if v2 == 0 then goto L4986c4;
  #L4986be.  call `onCheckedStateChanged`(v1) @signature `Lcom/google/android/material/internal/CheckableGroup;.onCheckedStateChanged:()V` @kind direct;
  #L4986c4.  return @kind void;
}
procedure `void` `clearCheck`(`com.google.android.material.internal.CheckableGroup` v4 @kind this) @signature `Lcom/google/android/material/internal/CheckableGroup;.clearCheck:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4986d8.  v0:= v4.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L4986dc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L4986e2.  v0:= temp;
  #L4986e4.  v0:= v0 ^~ 1;
  #L4986e8.  v1:= v4.`com.google.android.material.internal.CheckableGroup.checkables` @type ^`java.util.Map` @kind object;
  #L4986ec.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L4986f2.  v1:= temp @kind object;
  #L4986f4.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4986fa.  v1:= temp @kind object;
  #L4986fc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L498702.  v2:= temp;
  #L498704.  if v2 == 0 then goto L49871e;
  #L498708.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L49870e.  v2:= temp @kind object;
  #L498710.  v2:= (`com.google.android.material.internal.MaterialCheckable`) v2 @kind object;
  #L498714.  v3:= 0I;
  #L498716.  call temp:= `uncheckInternal`(v4, v2, v3) @signature `Lcom/google/android/material/internal/CheckableGroup;.uncheckInternal:(Lcom/google/android/material/internal/MaterialCheckable;Z)Z` @kind direct;
  #L49871c.  goto L4986fc;
  #L49871e.  if v0 == 0 then goto L498728;
  #L498722.  call `onCheckedStateChanged`(v4) @signature `Lcom/google/android/material/internal/CheckableGroup;.onCheckedStateChanged:()V` @kind direct;
  #L498728.  return @kind void;
}
procedure `java.util.Set` `getCheckedIds`(`com.google.android.material.internal.CheckableGroup` v2 @kind this) @signature `Lcom/google/android/material/internal/CheckableGroup;.getCheckedIds:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4985d8.  v0:= new `java.util.HashSet`;
  #L4985dc.  v1:= v2.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L4985e0.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4985e6.  return v0 @kind object;
}
procedure `java.util.List` `getCheckedIdsSortedByChildOrder`(`com.google.android.material.internal.CheckableGroup` v5 @kind this, `android.view.ViewGroup` v6 @kind object) @signature `Lcom/google/android/material/internal/CheckableGroup;.getCheckedIdsSortedByChildOrder:(Landroid/view/ViewGroup;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L49855c.  call temp:= `getCheckedIds`(v5) @signature `Lcom/google/android/material/internal/CheckableGroup;.getCheckedIds:()Ljava/util/Set;` @kind virtual;
  #L498562.  v0:= temp @kind object;
  #L498564.  v1:= new `java.util.ArrayList`;
  #L498568.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L49856e.  v2:= 0I;
  #L498570.  call temp:= `getChildCount`(v6) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L498576.  v3:= temp;
  #L498578.  if v2 >= v3 then goto L4985c4;
  #L49857c.  call temp:= `getChildAt`(v6, v2) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L498582.  v3:= temp @kind object;
  #L498584.  v4:= instanceof @variable v3 @type ^`com.google.android.material.internal.MaterialCheckable` @kind boolean;
  #L498588.  if v4 == 0 then goto L4985be;
  #L49858c.  call temp:= `getId`(v3) @signature `Landroid/view/View;.getId:()I` @kind virtual;
  #L498592.  v4:= temp;
  #L498594.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49859a.  v4:= temp @kind object;
  #L49859c.  call temp:= `contains`(v0, v4) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4985a2.  v4:= temp;
  #L4985a4.  if v4 == 0 then goto L4985be;
  #L4985a8.  call temp:= `getId`(v3) @signature `Landroid/view/View;.getId:()I` @kind virtual;
  #L4985ae.  v3:= temp;
  #L4985b0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4985b6.  v3:= temp @kind object;
  #L4985b8.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4985be.  v2:= v2 + 1;
  #L4985c2.  goto L498570;
  #L4985c4.  return v1 @kind object;
}
procedure `int` `getSingleCheckedId`(`com.google.android.material.internal.CheckableGroup` v1 @kind this) @signature `Lcom/google/android/material/internal/CheckableGroup;.getSingleCheckedId:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49850c.  v0:= v1.`com.google.android.material.internal.CheckableGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L498510.  if v0 == 0 then goto L498546;
  #L498514.  v0:= v1.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L498518.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L49851e.  v0:= temp;
  #L498520.  if v0 != 0 then goto L498546;
  #L498524.  v0:= v1.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L498528.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L49852e.  v0:= temp @kind object;
  #L498530.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L498536.  v0:= temp @kind object;
  #L498538.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L49853c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L498542.  v0:= temp;
  #L498544.  goto L498548;
  #L498546.  v0:= -1I;
  #L498548.  return v0;
}
procedure `boolean` `isSelectionRequired`(`com.google.android.material.internal.CheckableGroup` v1 @kind this) @signature `Lcom/google/android/material/internal/CheckableGroup;.isSelectionRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L498448.  v0:= v1.`com.google.android.material.internal.CheckableGroup.selectionRequired` @type ^`boolean` @kind boolean;
  #L49844c.  return v0;
}
procedure `boolean` `isSingleSelection`(`com.google.android.material.internal.CheckableGroup` v1 @kind this) @signature `Lcom/google/android/material/internal/CheckableGroup;.isSingleSelection:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L498460.  v0:= v1.`com.google.android.material.internal.CheckableGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L498464.  return v0;
}
procedure `void` `removeCheckable`(`com.google.android.material.internal.CheckableGroup` v2 @kind this, `com.google.android.material.internal.MaterialCheckable` v3 @kind object) @signature `Lcom/google/android/material/internal/CheckableGroup;.removeCheckable:(Lcom/google/android/material/internal/MaterialCheckable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L498764.  v0:= 0I;
  #L498766.  call `setInternalOnCheckedChangeListener`(v3, v0) @signature `Lcom/google/android/material/internal/MaterialCheckable;.setInternalOnCheckedChangeListener:(Lcom/google/android/material/internal/MaterialCheckable$OnCheckedChangeListener;)V` @kind interface;
  #L49876c.  v0:= v2.`com.google.android.material.internal.CheckableGroup.checkables` @type ^`java.util.Map` @kind object;
  #L498770.  call temp:= `getId`(v3) @signature `Lcom/google/android/material/internal/MaterialCheckable;.getId:()I` @kind interface;
  #L498776.  v1:= temp;
  #L498778.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49877e.  v1:= temp @kind object;
  #L498780.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L498786.  v0:= v2.`com.google.android.material.internal.CheckableGroup.checkedIds` @type ^`java.util.Set` @kind object;
  #L49878a.  call temp:= `getId`(v3) @signature `Lcom/google/android/material/internal/MaterialCheckable;.getId:()I` @kind interface;
  #L498790.  v3:= temp;
  #L498792.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L498798.  v3:= temp @kind object;
  #L49879a.  call temp:= `remove`(v0, v3) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4987a0.  return @kind void;
}
procedure `void` `setOnCheckedStateChangeListener`(`com.google.android.material.internal.CheckableGroup` v0 @kind this, `com.google.android.material.internal.CheckableGroup$OnCheckedStateChangeListener` v1 @kind object) @signature `Lcom/google/android/material/internal/CheckableGroup;.setOnCheckedStateChangeListener:(Lcom/google/android/material/internal/CheckableGroup$OnCheckedStateChangeListener;)V` @AccessFlag PUBLIC {
    temp;

  #L4987b4.  v0.`com.google.android.material.internal.CheckableGroup.onCheckedStateChangeListener` @type ^`com.google.android.material.internal.CheckableGroup$OnCheckedStateChangeListener` := v1 @kind object;
  #L4987b8.  return @kind void;
}
procedure `void` `setSelectionRequired`(`com.google.android.material.internal.CheckableGroup` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/internal/CheckableGroup;.setSelectionRequired:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L4987cc.  v0.`com.google.android.material.internal.CheckableGroup.selectionRequired` @type ^`boolean` := v1 @kind boolean;
  #L4987d0.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.internal.CheckableGroup` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/internal/CheckableGroup;.setSingleSelection:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4987e4.  v0:= v1.`com.google.android.material.internal.CheckableGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L4987e8.  if v0 == v2 then goto L4987f6;
  #L4987ec.  v1.`com.google.android.material.internal.CheckableGroup.singleSelection` @type ^`boolean` := v2 @kind boolean;
  #L4987f0.  call `clearCheck`(v1) @signature `Lcom/google/android/material/internal/CheckableGroup;.clearCheck:()V` @kind virtual;
  #L4987f6.  return @kind void;
}
procedure `void` `uncheck`(`com.google.android.material.internal.CheckableGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/internal/CheckableGroup;.uncheck:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L498808.  v0:= v1.`com.google.android.material.internal.CheckableGroup.checkables` @type ^`java.util.Map` @kind object;
  #L49880c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L498812.  v2:= temp @kind object;
  #L498814.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L49881a.  v2:= temp @kind object;
  #L49881c.  v2:= (`com.google.android.material.internal.MaterialCheckable`) v2 @kind object;
  #L498820.  if v2 != 0 then goto L498826;
  #L498824.  return @kind void;
  #L498826.  v0:= v1.`com.google.android.material.internal.CheckableGroup.selectionRequired` @type ^`boolean` @kind boolean;
  #L49882a.  call temp:= `uncheckInternal`(v1, v2, v0) @signature `Lcom/google/android/material/internal/CheckableGroup;.uncheckInternal:(Lcom/google/android/material/internal/MaterialCheckable;Z)Z` @kind direct;
  #L498830.  v2:= temp;
  #L498832.  if v2 == 0 then goto L49883c;
  #L498836.  call `onCheckedStateChanged`(v1) @signature `Lcom/google/android/material/internal/CheckableGroup;.onCheckedStateChanged:()V` @kind direct;
  #L49883c.  return @kind void;
}
