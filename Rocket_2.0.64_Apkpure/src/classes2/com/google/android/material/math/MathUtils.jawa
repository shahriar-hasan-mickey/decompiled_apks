record `com.google.android.material.math.MathUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `float` `@@com.google.android.material.math.MathUtils.DEFAULT_EPSILON` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.google.android.material.math.MathUtils` v0 @kind this) @signature `Lcom/google/android/material/math/MathUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4a040c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a0412.  return @kind void;
}
procedure `float` `dist`(`float` v0 , `float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4a02bc.  v2:= v2 - v0 @kind float;
  #L4a02be.  v3:= v3 - v1 @kind float;
  #L4a02c0.  v0:= (`double`) v2 @kind f2d;
  #L4a02c2.  v2:= (`double`) v3 @kind f2d;
  #L4a02c4.  call temp:= `hypot`(v0, v2) @signature `Ljava/lang/Math;.hypot:(DD)D` @kind static;
  #L4a02ca.  v0:= temp @kind wide;
  #L4a02cc.  v0:= (`float`) v0 @kind d2f;
  #L4a02ce.  return v0;
}
procedure `float` `distanceToFurthestCorner`(`float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/google/android/material/math/MathUtils;.distanceToFurthestCorner:(FFFFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a02e0.  call temp:= `dist`(v1, v2, v3, v4) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L4a02e6.  v0:= temp;
  #L4a02e8.  call temp:= `dist`(v1, v2, v5, v4) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L4a02ee.  v4:= temp;
  #L4a02f0.  call temp:= `dist`(v1, v2, v5, v6) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L4a02f6.  v5:= temp;
  #L4a02f8.  call temp:= `dist`(v1, v2, v3, v6) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L4a02fe.  v1:= temp;
  #L4a0300.  call temp:= `max`(v0, v4, v5, v1) @signature `Lcom/google/android/material/math/MathUtils;.max:(FFFF)F` @kind static;
  #L4a0306.  v1:= temp;
  #L4a0308.  return v1;
}
procedure `float` `floorMod`(`float` v3 , `int` v4 ) @signature `Lcom/google/android/material/math/MathUtils;.floorMod:(FI)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a031c.  v0:= (`float`) v4 @kind i2f;
  #L4a031e.  v1:= v3 / v0 @kind float;
  #L4a0322.  v1:= (`int`) v1 @kind f2i;
  #L4a0324.  call temp:= `signum`(v3) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L4a032a.  v2:= temp;
  #L4a032c.  v2:= v2 * v0 @kind float;
  #L4a0330.  v0:= 0I;
  #L4a0332.  v0:= fcmpg(v2, v0);
  #L4a0336.  if v0 >= 0 then goto L4a034c;
  #L4a033a.  v0:= v1 * v4 @kind int;
  #L4a033e.  v0:= (`float`) v0 @kind i2f;
  #L4a0340.  v0:= fcmpl(v0, v3);
  #L4a0344.  if v0 == 0 then goto L4a034c;
  #L4a0348.  v1:= v1 + -1;
  #L4a034c.  v1:= v1 * v4 @kind int;
  #L4a0350.  v4:= (`float`) v1 @kind i2f;
  #L4a0352.  v3:= v3 - v4 @kind float;
  #L4a0354.  return v3;
}
procedure `int` `floorMod`(`int` v2 , `int` v3 ) @signature `Lcom/google/android/material/math/MathUtils;.floorMod:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4a03dc.  v0:= v2 / v3 @kind int;
  #L4a03e0.  v1:= v2 ^~ v3 @kind int;
  #L4a03e4.  if v1 >= 0 then goto L4a03f4;
  #L4a03e8.  v1:= v0 * v3 @kind int;
  #L4a03ec.  if v1 == v2 then goto L4a03f4;
  #L4a03f0.  v0:= v0 + -1;
  #L4a03f4.  v0:= v0 * v3 @kind int;
  #L4a03f8.  v2:= v2 - v0 @kind int;
  #L4a03fa.  return v2;
}
procedure `boolean` `geq`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lcom/google/android/material/math/MathUtils;.geq:(FFF)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4a0298.  v0:= v0 + v2 @kind float;
  #L4a029a.  v0:= fcmpl(v0, v1);
  #L4a029e.  if v0 < 0 then goto L4a02a6;
  #L4a02a2.  v0:= 1I;
  #L4a02a4.  goto L4a02a8;
  #L4a02a6.  v0:= 0I;
  #L4a02a8.  return v0;
}
procedure `float` `lerp`(`float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/google/android/material/math/MathUtils;.lerp:(FFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a0368.  v0:= 1.0F;
  #L4a036c.  v0:= v0 - v3 @kind float;
  #L4a036e.  v0:= v0 * v1 @kind float;
  #L4a0372.  v3:= v3 * v2 @kind float;
  #L4a0376.  v0:= v0 + v3 @kind float;
  #L4a0378.  return v0;
}
procedure `float` `max`(`float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/google/android/material/math/MathUtils;.max:(FFFF)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4a038c.  v0:= fcmpl(v1, v2);
  #L4a0390.  if v0 <= 0 then goto L4a03a6;
  #L4a0394.  v0:= fcmpl(v1, v3);
  #L4a0398.  if v0 <= 0 then goto L4a03a6;
  #L4a039c.  v0:= fcmpl(v1, v4);
  #L4a03a0.  if v0 <= 0 then goto L4a03a6;
  #L4a03a4.  goto L4a03c8;
  #L4a03a6.  v1:= fcmpl(v2, v3);
  #L4a03aa.  if v1 <= 0 then goto L4a03ba;
  #L4a03ae.  v1:= fcmpl(v2, v4);
  #L4a03b2.  if v1 <= 0 then goto L4a03ba;
  #L4a03b6.  v1:= v2;
  #L4a03b8.  goto L4a03c8;
  #L4a03ba.  v1:= fcmpl(v3, v4);
  #L4a03be.  if v1 <= 0 then goto L4a03c6;
  #L4a03c2.  v1:= v3;
  #L4a03c4.  goto L4a03c8;
  #L4a03c6.  v1:= v4;
  #L4a03c8.  return v1;
}
