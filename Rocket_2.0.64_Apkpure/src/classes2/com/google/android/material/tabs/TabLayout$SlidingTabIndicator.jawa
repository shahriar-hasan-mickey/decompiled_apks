record `com.google.android.material.tabs.TabLayout$SlidingTabIndicator` @kind class @AccessFlag  extends `android.widget.LinearLayout` @kind class {
  `android.animation.ValueAnimator` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @AccessFlag ;
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @AccessFlag PRIVATE;
  `com.google.android.material.tabs.TabLayout` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v0 @kind this, `com.google.android.material.tabs.TabLayout` v1 @kind object, `android.content.Context` v2 @kind object) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.<init>:(Lcom/google/android/material/tabs/TabLayout;Landroid/content/Context;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ba1b0.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` := v1 @kind object;
  #L4ba1b4.  call `<init>`(v0, v2) @signature `Landroid/widget/LinearLayout;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L4ba1ba.  v1:= -1I;
  #L4ba1bc.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @type ^`int` := v1;
  #L4ba1c0.  v1:= 0I;
  #L4ba1c2.  call `setWillNotDraw`(v0, v1) @signature `Landroid/widget/LinearLayout;.setWillNotDraw:(Z)V` @kind virtual;
  #L4ba1c8.  return @kind void;
}
procedure `void` `access$100`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v0 @kind object) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.access$100:(Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ba1dc.  call `jumpIndicatorToSelectedPosition`(v0) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.jumpIndicatorToSelectedPosition:()V` @kind direct;
  #L4ba1e2.  return @kind void;
}
procedure `void` `access$1400`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v0 @kind object, `android.view.View` v1 @kind object, `android.view.View` v2 @kind object, `float` v3 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.access$1400:(Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;Landroid/view/View;Landroid/view/View;F)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ba1f4.  call `tweenIndicatorPosition`(v0, v1, v2, v3) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.tweenIndicatorPosition:(Landroid/view/View;Landroid/view/View;F)V` @kind direct;
  #L4ba1fa.  return @kind void;
}
procedure `void` `jumpIndicatorToSelectedPosition`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v4 @kind this) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.jumpIndicatorToSelectedPosition:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ba338.  v0:= v4.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba33c.  call temp:= `getSelectedTabPosition`(v0) @signature `Lcom/google/android/material/tabs/TabLayout;.getSelectedTabPosition:()I` @kind virtual;
  #L4ba342.  v0:= temp;
  #L4ba344.  call temp:= `getChildAt`(v4, v0) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L4ba34a.  v0:= temp @kind object;
  #L4ba34c.  v1:= v4.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba350.  call temp:= `access$1300`(v1) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1300:(Lcom/google/android/material/tabs/TabLayout;)Lcom/google/android/material/tabs/TabIndicatorInterpolator;` @kind static;
  #L4ba356.  v1:= temp @kind object;
  #L4ba358.  v2:= v4.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba35c.  v3:= v2.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba360.  call `setIndicatorBoundsForTab`(v1, v2, v0, v3) @signature `Lcom/google/android/material/tabs/TabIndicatorInterpolator;.setIndicatorBoundsForTab:(Lcom/google/android/material/tabs/TabLayout;Landroid/view/View;Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L4ba366.  return @kind void;
}
procedure `void` `tweenIndicatorPosition`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v7 @kind this, `android.view.View` v8 @kind object, `android.view.View` v9 @kind object, `float` v10 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.tweenIndicatorPosition:(Landroid/view/View;Landroid/view/View;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4ba594.  if v8 == 0 then goto L4ba5a8;
  #L4ba598.  call temp:= `getWidth`(v8) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L4ba59e.  v0:= temp;
  #L4ba5a0.  if v0 <= 0 then goto L4ba5a8;
  #L4ba5a4.  v0:= 1I;
  #L4ba5a6.  goto L4ba5aa;
  #L4ba5a8.  v0:= 0I;
  #L4ba5aa.  if v0 == 0 then goto L4ba5d0;
  #L4ba5ae.  v0:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba5b2.  call temp:= `access$1300`(v0) @signature `Lcom/google/android/material/tabs/TabLayout;.access$1300:(Lcom/google/android/material/tabs/TabLayout;)Lcom/google/android/material/tabs/TabIndicatorInterpolator;` @kind static;
  #L4ba5b8.  v1:= temp @kind object;
  #L4ba5ba.  v2:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba5be.  v6:= v2.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba5c2.  v3:= v8 @kind object;
  #L4ba5c4.  v4:= v9 @kind object;
  #L4ba5c6.  v5:= v10;
  #L4ba5c8.  call `updateIndicatorForOffset`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/tabs/TabIndicatorInterpolator;.updateIndicatorForOffset:(Lcom/google/android/material/tabs/TabLayout;Landroid/view/View;Landroid/view/View;FLandroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L4ba5ce.  goto L4ba600;
  #L4ba5d0.  v8:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba5d4.  v8:= v8.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba5d8.  call temp:= `getBounds`(v8) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4ba5de.  v9:= temp @kind object;
  #L4ba5e0.  v9:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L4ba5e4.  v10:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba5e8.  v10:= v10.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba5ec.  call temp:= `getBounds`(v10) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4ba5f2.  v10:= temp @kind object;
  #L4ba5f4.  v10:= v10.`android.graphics.Rect.bottom` @type ^`int`;
  #L4ba5f8.  v0:= -1I;
  #L4ba5fa.  call `setBounds`(v8, v0, v9, v0, v10) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L4ba600.  call `postInvalidateOnAnimation`(v7) @signature `Landroidx/core/view/ViewCompat;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L4ba606.  return @kind void;
}
procedure `void` `updateOrRecreateIndicatorAnimation`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v2 @kind this, `boolean` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateOrRecreateIndicatorAnimation:(ZII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ba618.  v0:= v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba61c.  call temp:= `getSelectedTabPosition`(v0) @signature `Lcom/google/android/material/tabs/TabLayout;.getSelectedTabPosition:()I` @kind virtual;
  #L4ba622.  v0:= temp;
  #L4ba624.  call temp:= `getChildAt`(v2, v0) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L4ba62a.  v0:= temp @kind object;
  #L4ba62c.  call temp:= `getChildAt`(v2, v4) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L4ba632.  v4:= temp @kind object;
  #L4ba634.  if v4 != 0 then goto L4ba640;
  #L4ba638.  call `jumpIndicatorToSelectedPosition`(v2) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.jumpIndicatorToSelectedPosition:()V` @kind direct;
  #L4ba63e.  return @kind void;
  #L4ba640.  v1:= new `com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1`;
  #L4ba644.  call `<init>`(v1, v2, v0, v4) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator$1;.<init>:(Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;Landroid/view/View;Landroid/view/View;)V` @kind direct;
  #L4ba64a.  if v3 == 0 then goto L4ba68e;
  #L4ba64e.  v3:= new `android.animation.ValueAnimator`;
  #L4ba652.  call `<init>`(v3) @signature `Landroid/animation/ValueAnimator;.<init>:()V` @kind direct;
  #L4ba658.  v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` := v3 @kind object;
  #L4ba65c.  v4:= `@@com.google.android.material.animation.AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR` @type ^`android.animation.TimeInterpolator` @kind object;
  #L4ba660.  call `setInterpolator`(v3, v4) @signature `Landroid/animation/ValueAnimator;.setInterpolator:(Landroid/animation/TimeInterpolator;)V` @kind virtual;
  #L4ba666.  v4:= (`long`) v5 @kind i2l;
  #L4ba668.  call temp:= `setDuration`(v3, v4) @signature `Landroid/animation/ValueAnimator;.setDuration:(J)Landroid/animation/ValueAnimator;` @kind virtual;
  #L4ba66e.  v4:= 2I;
  #L4ba670.  v4:= new `float`[v4];
  #L4ba674.  goto L4ba6a4;
  #L4ba67a.  call `setFloatValues`(v3, v4) @signature `Landroid/animation/ValueAnimator;.setFloatValues:([F)V` @kind virtual;
  #L4ba680.  call `addUpdateListener`(v3, v1) @signature `Landroid/animation/ValueAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L4ba686.  call `start`(v3) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L4ba68c.  goto L4ba6a2;
  #L4ba68e.  v3:= v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4ba692.  call `removeAllUpdateListeners`(v3) @signature `Landroid/animation/ValueAnimator;.removeAllUpdateListeners:()V` @kind virtual;
  #L4ba698.  v3:= v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4ba69c.  call `addUpdateListener`(v3, v1) @signature `Landroid/animation/ValueAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L4ba6a2.  return @kind void;
  #L4ba6a4.  v4:= (0I, 1065353216I) @kind object;
  #L4ba6b3.  goto L4ba67a;
}
procedure `void` `animateIndicatorToPosition`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.animateIndicatorToPosition:(II)V` @AccessFlag  {
    temp;
    v0;

  #L4ba20c.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4ba210.  if v0 == 0 then goto L4ba22a;
  #L4ba214.  call temp:= `isRunning`(v0) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L4ba21a.  v0:= temp;
  #L4ba21c.  if v0 == 0 then goto L4ba22a;
  #L4ba220.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4ba224.  call `cancel`(v0) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L4ba22a.  v0:= 1I;
  #L4ba22c.  call `updateOrRecreateIndicatorAnimation`(v1, v0, v2, v3) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateOrRecreateIndicatorAnimation:(ZII)V` @kind direct;
  #L4ba232.  return @kind void;
}
procedure `boolean` `childrenNeedLayout`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v4 @kind this) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.childrenNeedLayout:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ba170.  call temp:= `getChildCount`(v4) @signature `Landroid/widget/LinearLayout;.getChildCount:()I` @kind virtual;
  #L4ba176.  v0:= temp;
  #L4ba178.  v1:= 0I;
  #L4ba17a.  v2:= 0I;
  #L4ba17c.  if v2 >= v0 then goto L4ba19e;
  #L4ba180.  call temp:= `getChildAt`(v4, v2) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L4ba186.  v3:= temp @kind object;
  #L4ba188.  call temp:= `getWidth`(v3) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L4ba18e.  v3:= temp;
  #L4ba190.  if v3 > 0 then goto L4ba198;
  #L4ba194.  v0:= 1I;
  #L4ba196.  return v0;
  #L4ba198.  v2:= v2 + 1;
  #L4ba19c.  goto L4ba17c;
  #L4ba19e.  return v1;
}
procedure `void` `draw`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v5 @kind this, `android.graphics.Canvas` v6 @kind object) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ba244.  v0:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba248.  v0:= v0.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba24c.  call temp:= `getBounds`(v0) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4ba252.  v0:= temp @kind object;
  #L4ba254.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L4ba25a.  v0:= temp;
  #L4ba25c.  if v0 >= 0 then goto L4ba270;
  #L4ba260.  v0:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba264.  v0:= v0.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba268.  call temp:= `getIntrinsicHeight`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicHeight:()I` @kind virtual;
  #L4ba26e.  v0:= temp;
  #L4ba270.  v1:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba274.  v1:= v1.`com.google.android.material.tabs.TabLayout.tabIndicatorGravity` @type ^`int`;
  #L4ba278.  v2:= 0I;
  #L4ba27a.  if v1 == 0 then goto L4ba2bc;
  #L4ba27e.  v3:= 1I;
  #L4ba280.  v4:= 2I;
  #L4ba282.  if v1 == v3 then goto L4ba29e;
  #L4ba286.  if v1 == v4 then goto L4ba2d0;
  #L4ba28a.  v0:= 3I;
  #L4ba28c.  if v1 == v0 then goto L4ba294;
  #L4ba290.  v0:= 0I;
  #L4ba292.  goto L4ba2d0;
  #L4ba294.  call temp:= `getHeight`(v5) @signature `Landroid/widget/LinearLayout;.getHeight:()I` @kind virtual;
  #L4ba29a.  v0:= temp;
  #L4ba29c.  goto L4ba2d0;
  #L4ba29e.  call temp:= `getHeight`(v5) @signature `Landroid/widget/LinearLayout;.getHeight:()I` @kind virtual;
  #L4ba2a4.  v1:= temp;
  #L4ba2a6.  v1:= v1 - v0 @kind int;
  #L4ba2a8.  v2:= v1 / 2;
  #L4ba2ac.  call temp:= `getHeight`(v5) @signature `Landroid/widget/LinearLayout;.getHeight:()I` @kind virtual;
  #L4ba2b2.  v1:= temp;
  #L4ba2b4.  v1:= v1 + v0 @kind int;
  #L4ba2b6.  v0:= v1 / 2;
  #L4ba2ba.  goto L4ba2d0;
  #L4ba2bc.  call temp:= `getHeight`(v5) @signature `Landroid/widget/LinearLayout;.getHeight:()I` @kind virtual;
  #L4ba2c2.  v1:= temp;
  #L4ba2c4.  v2:= v1 - v0 @kind int;
  #L4ba2c8.  call temp:= `getHeight`(v5) @signature `Landroid/widget/LinearLayout;.getHeight:()I` @kind virtual;
  #L4ba2ce.  v0:= temp;
  #L4ba2d0.  v1:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba2d4.  v1:= v1.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba2d8.  call temp:= `getBounds`(v1) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4ba2de.  v1:= temp @kind object;
  #L4ba2e0.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L4ba2e6.  v1:= temp;
  #L4ba2e8.  if v1 <= 0 then goto L4ba320;
  #L4ba2ec.  v1:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba2f0.  v1:= v1.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba2f4.  call temp:= `getBounds`(v1) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4ba2fa.  v1:= temp @kind object;
  #L4ba2fc.  v3:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba300.  v3:= v3.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba304.  v4:= v1.`android.graphics.Rect.left` @type ^`int`;
  #L4ba308.  v1:= v1.`android.graphics.Rect.right` @type ^`int`;
  #L4ba30c.  call `setBounds`(v3, v4, v2, v1, v0) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L4ba312.  v0:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba316.  v0:= v0.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba31a.  call `draw`(v0, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L4ba320.  call `draw`(v5, v6) @signature `Landroid/widget/LinearLayout;.draw:(Landroid/graphics/Canvas;)V` @kind super;
  #L4ba326.  return @kind void;
}
procedure `void` `onLayout`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v0 @kind this, `boolean` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.onLayout:(ZIIII)V` @AccessFlag PROTECTED {
    temp;

  #L4ba378.  call `onLayout`(v0, v1, v2, v3, v4, v5) @signature `Landroid/widget/LinearLayout;.onLayout:(ZIIII)V` @kind super;
  #L4ba37e.  v1:= v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4ba382.  if v1 == 0 then goto L4ba3aa;
  #L4ba386.  call temp:= `isRunning`(v1) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L4ba38c.  v1:= temp;
  #L4ba38e.  if v1 == 0 then goto L4ba3aa;
  #L4ba392.  v1:= 0I;
  #L4ba394.  v2:= v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba398.  call temp:= `getSelectedTabPosition`(v2) @signature `Lcom/google/android/material/tabs/TabLayout;.getSelectedTabPosition:()I` @kind virtual;
  #L4ba39e.  v2:= temp;
  #L4ba3a0.  v3:= -1I;
  #L4ba3a2.  call `updateOrRecreateIndicatorAnimation`(v0, v1, v2, v3) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateOrRecreateIndicatorAnimation:(ZII)V` @kind direct;
  #L4ba3a8.  goto L4ba3b0;
  #L4ba3aa.  call `jumpIndicatorToSelectedPosition`(v0) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.jumpIndicatorToSelectedPosition:()V` @kind direct;
  #L4ba3b0.  return @kind void;
}
procedure `void` `onMeasure`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v8 @kind this, `int` v9 , `int` v10 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.onMeasure:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ba3c4.  call `onMeasure`(v8, v9, v10) @signature `Landroid/widget/LinearLayout;.onMeasure:(II)V` @kind super;
  #L4ba3ca.  call temp:= `getMode`(v9) @signature `Landroid/view/View$MeasureSpec;.getMode:(I)I` @kind static;
  #L4ba3d0.  v0:= temp;
  #L4ba3d2.  v1:= 2.0F;
  #L4ba3d6.  if v0 == v1 then goto L4ba3dc;
  #L4ba3da.  return @kind void;
  #L4ba3dc.  v0:= v8.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba3e0.  v1:= v0.`com.google.android.material.tabs.TabLayout.tabGravity` @type ^`int`;
  #L4ba3e4.  v2:= 2I;
  #L4ba3e6.  v3:= 1I;
  #L4ba3e8.  if v1 == v3 then goto L4ba3f4;
  #L4ba3ec.  v0:= v0.`com.google.android.material.tabs.TabLayout.mode` @type ^`int`;
  #L4ba3f0.  if v0 != v2 then goto L4ba4be;
  #L4ba3f4.  call temp:= `getChildCount`(v8) @signature `Landroid/widget/LinearLayout;.getChildCount:()I` @kind virtual;
  #L4ba3fa.  v0:= temp;
  #L4ba3fc.  v1:= 0I;
  #L4ba3fe.  v4:= 0I;
  #L4ba400.  v5:= 0I;
  #L4ba402.  if v4 >= v0 then goto L4ba430;
  #L4ba406.  call temp:= `getChildAt`(v8, v4) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L4ba40c.  v6:= temp @kind object;
  #L4ba40e.  call temp:= `getVisibility`(v6) @signature `Landroid/view/View;.getVisibility:()I` @kind virtual;
  #L4ba414.  v7:= temp;
  #L4ba416.  if v7 != 0 then goto L4ba42a;
  #L4ba41a.  call temp:= `getMeasuredWidth`(v6) @signature `Landroid/view/View;.getMeasuredWidth:()I` @kind virtual;
  #L4ba420.  v6:= temp;
  #L4ba422.  call temp:= `max`(v5, v6) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4ba428.  v5:= temp;
  #L4ba42a.  v4:= v4 + 1;
  #L4ba42e.  goto L4ba402;
  #L4ba430.  if v5 > 0 then goto L4ba436;
  #L4ba434.  return @kind void;
  #L4ba436.  call temp:= `getContext`(v8) @signature `Landroid/widget/LinearLayout;.getContext:()Landroid/content/Context;` @kind virtual;
  #L4ba43c.  v4:= temp @kind object;
  #L4ba43e.  v6:= 16I;
  #L4ba442.  call temp:= `dpToPx`(v4, v6) @signature `Lcom/google/android/material/internal/ViewUtils;.dpToPx:(Landroid/content/Context;I)F` @kind static;
  #L4ba448.  v4:= temp;
  #L4ba44a.  v4:= (`int`) v4 @kind f2i;
  #L4ba44c.  v6:= v5 * v0 @kind int;
  #L4ba450.  call temp:= `getMeasuredWidth`(v8) @signature `Landroid/widget/LinearLayout;.getMeasuredWidth:()I` @kind virtual;
  #L4ba456.  v7:= temp;
  #L4ba458.  v4:= v4 * 2;
  #L4ba45c.  v7:= v7 - v4 @kind int;
  #L4ba45e.  if v6 > v7 then goto L4ba4a6;
  #L4ba462.  v2:= 0I;
  #L4ba464.  if v1 >= v0 then goto L4ba4a2;
  #L4ba468.  call temp:= `getChildAt`(v8, v1) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L4ba46e.  v4:= temp @kind object;
  #L4ba470.  call temp:= `getLayoutParams`(v4) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L4ba476.  v4:= temp @kind object;
  #L4ba478.  v4:= (`android.widget.LinearLayout$LayoutParams`) v4 @kind object;
  #L4ba47c.  v6:= v4.`android.widget.LinearLayout$LayoutParams.width` @type ^`int`;
  #L4ba480.  v7:= 0I;
  #L4ba482.  if v6 != v5 then goto L4ba492;
  #L4ba486.  v6:= v4.`android.widget.LinearLayout$LayoutParams.weight` @type ^`float`;
  #L4ba48a.  v6:= fcmpl(v6, v7);
  #L4ba48e.  if v6 == 0 then goto L4ba49c;
  #L4ba492.  v4.`android.widget.LinearLayout$LayoutParams.width` @type ^`int` := v5;
  #L4ba496.  v4.`android.widget.LinearLayout$LayoutParams.weight` @type ^`float` := v7;
  #L4ba49a.  v2:= 1I;
  #L4ba49c.  v1:= v1 + 1;
  #L4ba4a0.  goto L4ba464;
  #L4ba4a2.  v3:= v2;
  #L4ba4a4.  goto L4ba4b4;
  #L4ba4a6.  v0:= v8.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba4aa.  v0.`com.google.android.material.tabs.TabLayout.tabGravity` @type ^`int` := v1;
  #L4ba4ae.  call `updateTabViews`(v0, v1) @signature `Lcom/google/android/material/tabs/TabLayout;.updateTabViews:(Z)V` @kind virtual;
  #L4ba4b4.  if v3 == 0 then goto L4ba4be;
  #L4ba4b8.  call `onMeasure`(v8, v9, v10) @signature `Landroid/widget/LinearLayout;.onMeasure:(II)V` @kind super;
  #L4ba4be.  return @kind void;
}
procedure `void` `onRtlPropertiesChanged`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.onRtlPropertiesChanged:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ba4d0.  call `onRtlPropertiesChanged`(v2, v3) @signature `Landroid/widget/LinearLayout;.onRtlPropertiesChanged:(I)V` @kind super;
  #L4ba4d6.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4ba4da.  v1:= 23I;
  #L4ba4de.  if v0 >= v1 then goto L4ba4f4;
  #L4ba4e2.  v0:= v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @type ^`int`;
  #L4ba4e6.  if v0 == v3 then goto L4ba4f4;
  #L4ba4ea.  call `requestLayout`(v2) @signature `Landroid/widget/LinearLayout;.requestLayout:()V` @kind virtual;
  #L4ba4f0.  v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @type ^`int` := v3;
  #L4ba4f4.  return @kind void;
}
procedure `void` `setIndicatorPositionFromTabPosition`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v1 @kind this, `int` v2 , `float` v3 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.setIndicatorPositionFromTabPosition:(IF)V` @AccessFlag  {
    temp;
    v0;

  #L4ba508.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4ba50c.  if v0 == 0 then goto L4ba526;
  #L4ba510.  call temp:= `isRunning`(v0) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L4ba516.  v0:= temp;
  #L4ba518.  if v0 == 0 then goto L4ba526;
  #L4ba51c.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4ba520.  call `cancel`(v0) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L4ba526.  call temp:= `getChildAt`(v1, v2) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L4ba52c.  v0:= temp @kind object;
  #L4ba52e.  v2:= v2 + 1;
  #L4ba532.  call temp:= `getChildAt`(v1, v2) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L4ba538.  v2:= temp @kind object;
  #L4ba53a.  call `tweenIndicatorPosition`(v1, v0, v2, v3) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.tweenIndicatorPosition:(Landroid/view/View;Landroid/view/View;F)V` @kind direct;
  #L4ba540.  return @kind void;
}
procedure `void` `setSelectedIndicatorHeight`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v4 @kind this, `int` v5 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.setSelectedIndicatorHeight:(I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ba554.  v0:= v4.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba558.  v0:= v0.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba55c.  call temp:= `getBounds`(v0) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4ba562.  v0:= temp @kind object;
  #L4ba564.  v1:= v4.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.this$0` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L4ba568.  v1:= v1.`com.google.android.material.tabs.TabLayout.tabSelectedIndicator` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4ba56c.  v2:= v0.`android.graphics.Rect.left` @type ^`int`;
  #L4ba570.  v0:= v0.`android.graphics.Rect.right` @type ^`int`;
  #L4ba574.  v3:= 0I;
  #L4ba576.  call `setBounds`(v1, v2, v3, v0, v5) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L4ba57c.  call `requestLayout`(v4) @signature `Landroid/widget/LinearLayout;.requestLayout:()V` @kind virtual;
  #L4ba582.  return @kind void;
}
