record `com.google.android.material.shape.ShapePath$1` @kind class @AccessFlag  extends `com.google.android.material.shape.ShapePath$ShadowCompatOperation` @kind class {
  `com.google.android.material.shape.ShapePath` `com.google.android.material.shape.ShapePath$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `com.google.android.material.shape.ShapePath$1.val$operations` @AccessFlag FINAL_SYNTHETIC;
  `android.graphics.Matrix` `com.google.android.material.shape.ShapePath$1.val$transformCopy` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.android.material.shape.ShapePath$1` v0 @kind this, `com.google.android.material.shape.ShapePath` v1 @kind object, `java.util.List` v2 @kind object, `android.graphics.Matrix` v3 @kind object) @signature `Lcom/google/android/material/shape/ShapePath$1;.<init>:(Lcom/google/android/material/shape/ShapePath;Ljava/util/List;Landroid/graphics/Matrix;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b00a4.  v0.`com.google.android.material.shape.ShapePath$1.this$0` @type ^`com.google.android.material.shape.ShapePath` := v1 @kind object;
  #L4b00a8.  v0.`com.google.android.material.shape.ShapePath$1.val$operations` @type ^`java.util.List` := v2 @kind object;
  #L4b00ac.  v0.`com.google.android.material.shape.ShapePath$1.val$transformCopy` @type ^`android.graphics.Matrix` := v3 @kind object;
  #L4b00b0.  call `<init>`(v0) @signature `Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;.<init>:()V` @kind direct;
  #L4b00b6.  return @kind void;
}
procedure `void` `draw`(`com.google.android.material.shape.ShapePath$1` v2 @kind this, `android.graphics.Matrix` v3 @kind object, `com.google.android.material.shadow.ShadowRenderer` v4 @kind object, `int` v5 , `android.graphics.Canvas` v6 @kind object) @signature `Lcom/google/android/material/shape/ShapePath$1;.draw:(Landroid/graphics/Matrix;Lcom/google/android/material/shadow/ShadowRenderer;ILandroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b00c8.  v3:= v2.`com.google.android.material.shape.ShapePath$1.val$operations` @type ^`java.util.List` @kind object;
  #L4b00cc.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b00d2.  v3:= temp @kind object;
  #L4b00d4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b00da.  v0:= temp;
  #L4b00dc.  if v0 == 0 then goto L4b00f8;
  #L4b00e0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b00e6.  v0:= temp @kind object;
  #L4b00e8.  v0:= (`com.google.android.material.shape.ShapePath$ShadowCompatOperation`) v0 @kind object;
  #L4b00ec.  v1:= v2.`com.google.android.material.shape.ShapePath$1.val$transformCopy` @type ^`android.graphics.Matrix` @kind object;
  #L4b00f0.  call `draw`(v0, v1, v4, v5, v6) @signature `Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;.draw:(Landroid/graphics/Matrix;Lcom/google/android/material/shadow/ShadowRenderer;ILandroid/graphics/Canvas;)V` @kind virtual;
  #L4b00f6.  goto L4b00d4;
  #L4b00f8.  return @kind void;
}
