record `com.google.android.material.shape.OffsetEdgeTreatment` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.android.material.shape.EdgeTreatment` @kind class {
  `float` `com.google.android.material.shape.OffsetEdgeTreatment.offset` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.EdgeTreatment` `com.google.android.material.shape.OffsetEdgeTreatment.other` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.material.shape.OffsetEdgeTreatment` v0 @kind this, `com.google.android.material.shape.EdgeTreatment` v1 @kind object, `float` v2 ) @signature `Lcom/google/android/material/shape/OffsetEdgeTreatment;.<init>:(Lcom/google/android/material/shape/EdgeTreatment;F)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ae790.  call `<init>`(v0) @signature `Lcom/google/android/material/shape/EdgeTreatment;.<init>:()V` @kind direct;
  #L4ae796.  v0.`com.google.android.material.shape.OffsetEdgeTreatment.other` @type ^`com.google.android.material.shape.EdgeTreatment` := v1 @kind object;
  #L4ae79a.  v0.`com.google.android.material.shape.OffsetEdgeTreatment.offset` @type ^`float` := v2;
  #L4ae79e.  return @kind void;
}
procedure `boolean` `forceIntersection`(`com.google.android.material.shape.OffsetEdgeTreatment` v1 @kind this) @signature `Lcom/google/android/material/shape/OffsetEdgeTreatment;.forceIntersection:()Z` @AccessFlag  {
    temp;
    v0;

  #L4ae770.  v0:= v1.`com.google.android.material.shape.OffsetEdgeTreatment.other` @type ^`com.google.android.material.shape.EdgeTreatment` @kind object;
  #L4ae774.  call temp:= `forceIntersection`(v0) @signature `Lcom/google/android/material/shape/EdgeTreatment;.forceIntersection:()Z` @kind virtual;
  #L4ae77a.  v0:= temp;
  #L4ae77c.  return v0;
}
procedure `void` `getEdgePath`(`com.google.android.material.shape.OffsetEdgeTreatment` v2 @kind this, `float` v3 , `float` v4 , `float` v5 , `com.google.android.material.shape.ShapePath` v6 @kind object) @signature `Lcom/google/android/material/shape/OffsetEdgeTreatment;.getEdgePath:(FFFLcom/google/android/material/shape/ShapePath;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae7b0.  v0:= v2.`com.google.android.material.shape.OffsetEdgeTreatment.other` @type ^`com.google.android.material.shape.EdgeTreatment` @kind object;
  #L4ae7b4.  v1:= v2.`com.google.android.material.shape.OffsetEdgeTreatment.offset` @type ^`float`;
  #L4ae7b8.  v4:= v4 - v1 @kind float;
  #L4ae7ba.  call `getEdgePath`(v0, v3, v4, v5, v6) @signature `Lcom/google/android/material/shape/EdgeTreatment;.getEdgePath:(FFFLcom/google/android/material/shape/ShapePath;)V` @kind virtual;
  #L4ae7c0.  return @kind void;
}
