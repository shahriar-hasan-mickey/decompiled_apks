record `com.google.android.material.shape.ShapeAppearancePathProvider` @kind class @AccessFlag PUBLIC {
  `android.graphics.Path` `com.google.android.material.shape.ShapeAppearancePathProvider.boundsPath` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Path` `com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapePath`[] `com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Matrix`[] `com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.shape.ShapeAppearancePathProvider.edgeIntersectionCheckEnabled` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Matrix`[] `com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Path` `com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @AccessFlag PRIVATE_FINAL;
  `android.graphics.PointF` `com.google.android.material.shape.ShapeAppearancePathProvider.pointF` @AccessFlag PRIVATE_FINAL;
  `float`[] `com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @AccessFlag PRIVATE_FINAL;
  `float`[] `com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapePath` `com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.material.shape.ShapeAppearancePathProvider` v4 @kind this) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4afa7c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4afa82.  v0:= 4I;
  #L4afa84.  v1:= new `com.google.android.material.shape.ShapePath`[v0];
  #L4afa88.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] := v1 @kind object;
  #L4afa8c.  v1:= new `android.graphics.Matrix`[v0];
  #L4afa90.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] := v1 @kind object;
  #L4afa94.  v1:= new `android.graphics.Matrix`[v0];
  #L4afa98.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] := v1 @kind object;
  #L4afa9c.  v1:= new `android.graphics.PointF`;
  #L4afaa0.  call `<init>`(v1) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L4afaa6.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.pointF` @type ^`android.graphics.PointF` := v1 @kind object;
  #L4afaaa.  v1:= new `android.graphics.Path`;
  #L4afaae.  call `<init>`(v1) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L4afab4.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` := v1 @kind object;
  #L4afab8.  v1:= new `android.graphics.Path`;
  #L4afabc.  call `<init>`(v1) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L4afac2.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.boundsPath` @type ^`android.graphics.Path` := v1 @kind object;
  #L4afac6.  v1:= new `com.google.android.material.shape.ShapePath`;
  #L4afaca.  call `<init>`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.<init>:()V` @kind direct;
  #L4afad0.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` := v1 @kind object;
  #L4afad4.  v1:= 2I;
  #L4afad6.  v2:= new `float`[v1];
  #L4afada.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] := v2 @kind object;
  #L4afade.  v1:= new `float`[v1];
  #L4afae2.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @type ^`float`[] := v1 @kind object;
  #L4afae6.  v1:= new `android.graphics.Path`;
  #L4afaea.  call `<init>`(v1) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L4afaf0.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` := v1 @kind object;
  #L4afaf4.  v1:= new `android.graphics.Path`;
  #L4afaf8.  call `<init>`(v1) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L4afafe.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @type ^`android.graphics.Path` := v1 @kind object;
  #L4afb02.  v1:= 1I;
  #L4afb04.  v4.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeIntersectionCheckEnabled` @type ^`boolean` := v1 @kind boolean;
  #L4afb08.  v1:= 0I;
  #L4afb0a.  if v1 >= v0 then goto L4afb4a;
  #L4afb0e.  v2:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4afb12.  v3:= new `com.google.android.material.shape.ShapePath`;
  #L4afb16.  call `<init>`(v3) @signature `Lcom/google/android/material/shape/ShapePath;.<init>:()V` @kind direct;
  #L4afb1c.  v2[v1]:= v3 @kind object;
  #L4afb20.  v2:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afb24.  v3:= new `android.graphics.Matrix`;
  #L4afb28.  call `<init>`(v3) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L4afb2e.  v2[v1]:= v3 @kind object;
  #L4afb32.  v2:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afb36.  v3:= new `android.graphics.Matrix`;
  #L4afb3a.  call `<init>`(v3) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L4afb40.  v2[v1]:= v3 @kind object;
  #L4afb44.  v1:= v1 + 1;
  #L4afb48.  goto L4afb0a;
  #L4afb4a.  return @kind void;
}
procedure `float` `angleOfEdge`(`com.google.android.material.shape.ShapeAppearancePathProvider` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.angleOfEdge:(I)F` @AccessFlag PRIVATE {
    temp;

  #L4af9dc.  v1:= v1 + 1;
  #L4af9e0.  v1:= v1 * 90;
  #L4af9e4.  v1:= (`float`) v1 @kind i2f;
  #L4af9e6.  return v1;
}
procedure `void` `appendCornerPath`(`com.google.android.material.shape.ShapeAppearancePathProvider` v4 @kind this, `com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec` v5 @kind object, `int` v6 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.appendCornerPath:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4afb5c.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afb60.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4afb64.  v1:= v1[v6] @kind object;
  #L4afb68.  call temp:= `getStartX`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getStartX:()F` @kind virtual;
  #L4afb6e.  v1:= temp;
  #L4afb70.  v2:= 0I;
  #L4afb72.  v0[v2]:= v1;
  #L4afb76.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afb7a.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4afb7e.  v1:= v1[v6] @kind object;
  #L4afb82.  call temp:= `getStartY`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getStartY:()F` @kind virtual;
  #L4afb88.  v1:= temp;
  #L4afb8a.  v3:= 1I;
  #L4afb8c.  v0[v3]:= v1;
  #L4afb90.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afb94.  v0:= v0[v6] @kind object;
  #L4afb98.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afb9c.  call `mapPoints`(v0, v1) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L4afba2.  if v6 != 0 then goto L4afbbe;
  #L4afba6.  v0:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.path` @type ^`android.graphics.Path` @kind object;
  #L4afbaa.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afbae.  v2:= v1[v2];
  #L4afbb2.  v1:= v1[v3];
  #L4afbb6.  call `moveTo`(v0, v2, v1) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L4afbbc.  goto L4afbd4;
  #L4afbbe.  v0:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.path` @type ^`android.graphics.Path` @kind object;
  #L4afbc2.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afbc6.  v2:= v1[v2];
  #L4afbca.  v1:= v1[v3];
  #L4afbce.  call `lineTo`(v0, v2, v1) @signature `Landroid/graphics/Path;.lineTo:(FF)V` @kind virtual;
  #L4afbd4.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4afbd8.  v0:= v0[v6] @kind object;
  #L4afbdc.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afbe0.  v1:= v1[v6] @kind object;
  #L4afbe4.  v2:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.path` @type ^`android.graphics.Path` @kind object;
  #L4afbe8.  call `applyToPath`(v0, v1, v2) @signature `Lcom/google/android/material/shape/ShapePath;.applyToPath:(Landroid/graphics/Matrix;Landroid/graphics/Path;)V` @kind virtual;
  #L4afbee.  v5:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.pathListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` @kind object;
  #L4afbf2.  if v5 == 0 then goto L4afc0c;
  #L4afbf6.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4afbfa.  v0:= v0[v6] @kind object;
  #L4afbfe.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afc02.  v1:= v1[v6] @kind object;
  #L4afc06.  call `onCornerPathCreated`(v5, v0, v1, v6) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;.onCornerPathCreated:(Lcom/google/android/material/shape/ShapePath;Landroid/graphics/Matrix;I)V` @kind interface;
  #L4afc0c.  return @kind void;
}
procedure `void` `appendEdgePath`(`com.google.android.material.shape.ShapeAppearancePathProvider` v8 @kind this, `com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec` v9 @kind object, `int` v10 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.appendEdgePath:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4afc20.  v0:= v10 + 1;
  #L4afc24.  v0:= v0 %% 4;
  #L4afc28.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afc2c.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4afc30.  v2:= v2[v10] @kind object;
  #L4afc34.  call temp:= `getEndX`(v2) @signature `Lcom/google/android/material/shape/ShapePath;.getEndX:()F` @kind virtual;
  #L4afc3a.  v2:= temp;
  #L4afc3c.  v3:= 0I;
  #L4afc3e.  v1[v3]:= v2;
  #L4afc42.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afc46.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4afc4a.  v2:= v2[v10] @kind object;
  #L4afc4e.  call temp:= `getEndY`(v2) @signature `Lcom/google/android/material/shape/ShapePath;.getEndY:()F` @kind virtual;
  #L4afc54.  v2:= temp;
  #L4afc56.  v4:= 1I;
  #L4afc58.  v1[v4]:= v2;
  #L4afc5c.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afc60.  v1:= v1[v10] @kind object;
  #L4afc64.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afc68.  call `mapPoints`(v1, v2) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L4afc6e.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @type ^`float`[] @kind object;
  #L4afc72.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4afc76.  v2:= v2[v0] @kind object;
  #L4afc7a.  call temp:= `getStartX`(v2) @signature `Lcom/google/android/material/shape/ShapePath;.getStartX:()F` @kind virtual;
  #L4afc80.  v2:= temp;
  #L4afc82.  v1[v3]:= v2;
  #L4afc86.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @type ^`float`[] @kind object;
  #L4afc8a.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4afc8e.  v2:= v2[v0] @kind object;
  #L4afc92.  call temp:= `getStartY`(v2) @signature `Lcom/google/android/material/shape/ShapePath;.getStartY:()F` @kind virtual;
  #L4afc98.  v2:= temp;
  #L4afc9a.  v1[v4]:= v2;
  #L4afc9e.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afca2.  v1:= v1[v0] @kind object;
  #L4afca6.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @type ^`float`[] @kind object;
  #L4afcaa.  call `mapPoints`(v1, v2) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L4afcb0.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afcb4.  v2:= v1[v3];
  #L4afcb8.  v5:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch2` @type ^`float`[] @kind object;
  #L4afcbc.  v6:= v5[v3];
  #L4afcc0.  v2:= v2 - v6 @kind float;
  #L4afcc2.  v6:= (`double`) v2 @kind f2d;
  #L4afcc4.  v1:= v1[v4];
  #L4afcc8.  v2:= v5[v4];
  #L4afccc.  v1:= v1 - v2 @kind float;
  #L4afcce.  v1:= (`double`) v1 @kind f2d;
  #L4afcd0.  call temp:= `hypot`(v6, v1) @signature `Ljava/lang/Math;.hypot:(DD)D` @kind static;
  #L4afcd6.  v1:= temp @kind wide;
  #L4afcd8.  v1:= (`float`) v1 @kind d2f;
  #L4afcda.  v2:= 981668463I;
  #L4afce0.  v1:= v1 - v2 @kind float;
  #L4afce2.  v2:= 0I;
  #L4afce4.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L4afcea.  v1:= temp;
  #L4afcec.  v5:= v9.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.bounds` @type ^`android.graphics.RectF` @kind object;
  #L4afcf0.  call temp:= `getEdgeCenterForIndex`(v8, v5, v10) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getEdgeCenterForIndex:(Landroid/graphics/RectF;I)F` @kind direct;
  #L4afcf6.  v5:= temp;
  #L4afcf8.  v6:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L4afcfc.  call `reset`(v6, v2, v2) @signature `Lcom/google/android/material/shape/ShapePath;.reset:(FF)V` @kind virtual;
  #L4afd02.  v2:= v9.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4afd06.  call temp:= `getEdgeTreatmentForIndex`(v8, v10, v2) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getEdgeTreatmentForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/EdgeTreatment;` @kind direct;
  #L4afd0c.  v2:= temp @kind object;
  #L4afd0e.  v6:= v9.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.interpolation` @type ^`float`;
  #L4afd12.  v7:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L4afd16.  call `getEdgePath`(v2, v1, v5, v6, v7) @signature `Lcom/google/android/material/shape/EdgeTreatment;.getEdgePath:(FFFLcom/google/android/material/shape/ShapePath;)V` @kind virtual;
  #L4afd1c.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` @kind object;
  #L4afd20.  call `reset`(v1) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L4afd26.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L4afd2a.  v5:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afd2e.  v5:= v5[v10] @kind object;
  #L4afd32.  v6:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` @kind object;
  #L4afd36.  call `applyToPath`(v1, v5, v6) @signature `Lcom/google/android/material/shape/ShapePath;.applyToPath:(Landroid/graphics/Matrix;Landroid/graphics/Path;)V` @kind virtual;
  #L4afd3c.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeIntersectionCheckEnabled` @type ^`boolean` @kind boolean;
  #L4afd40.  if v1 == 0 then goto L4afdea;
  #L4afd44.  call temp:= `forceIntersection`(v2) @signature `Lcom/google/android/material/shape/EdgeTreatment;.forceIntersection:()Z` @kind virtual;
  #L4afd4a.  v1:= temp;
  #L4afd4c.  if v1 != 0 then goto L4afd70;
  #L4afd50.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` @kind object;
  #L4afd54.  call temp:= `pathOverlapsCorner`(v8, v1, v10) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.pathOverlapsCorner:(Landroid/graphics/Path;I)Z` @kind direct;
  #L4afd5a.  v1:= temp;
  #L4afd5c.  if v1 != 0 then goto L4afd70;
  #L4afd60.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` @kind object;
  #L4afd64.  call temp:= `pathOverlapsCorner`(v8, v1, v0) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.pathOverlapsCorner:(Landroid/graphics/Path;I)Z` @kind direct;
  #L4afd6a.  v0:= temp;
  #L4afd6c.  if v0 == 0 then goto L4afdea;
  #L4afd70.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgePath` @type ^`android.graphics.Path` @kind object;
  #L4afd74.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.boundsPath` @type ^`android.graphics.Path` @kind object;
  #L4afd78.  v2:= `@@android.graphics.Path$Op.DIFFERENCE` @type ^`android.graphics.Path$Op` @kind object;
  #L4afd7c.  call temp:= `op`(v0, v0, v1, v2) @signature `Landroid/graphics/Path;.op:(Landroid/graphics/Path;Landroid/graphics/Path;Landroid/graphics/Path$Op;)Z` @kind virtual;
  #L4afd82.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afd86.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L4afd8a.  call temp:= `getStartX`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getStartX:()F` @kind virtual;
  #L4afd90.  v1:= temp;
  #L4afd92.  v0[v3]:= v1;
  #L4afd96.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afd9a.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L4afd9e.  call temp:= `getStartY`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getStartY:()F` @kind virtual;
  #L4afda4.  v1:= temp;
  #L4afda6.  v0[v4]:= v1;
  #L4afdaa.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afdae.  v0:= v0[v10] @kind object;
  #L4afdb2.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afdb6.  call `mapPoints`(v0, v1) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L4afdbc.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L4afdc0.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afdc4.  v2:= v1[v3];
  #L4afdc8.  v1:= v1[v4];
  #L4afdcc.  call `moveTo`(v0, v2, v1) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L4afdd2.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L4afdd6.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afdda.  v1:= v1[v10] @kind object;
  #L4afdde.  v2:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L4afde2.  call `applyToPath`(v0, v1, v2) @signature `Lcom/google/android/material/shape/ShapePath;.applyToPath:(Landroid/graphics/Matrix;Landroid/graphics/Path;)V` @kind virtual;
  #L4afde8.  goto L4afe00;
  #L4afdea.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L4afdee.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afdf2.  v1:= v1[v10] @kind object;
  #L4afdf6.  v2:= v9.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.path` @type ^`android.graphics.Path` @kind object;
  #L4afdfa.  call `applyToPath`(v0, v1, v2) @signature `Lcom/google/android/material/shape/ShapePath;.applyToPath:(Landroid/graphics/Matrix;Landroid/graphics/Path;)V` @kind virtual;
  #L4afe00.  v9:= v9.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.pathListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` @kind object;
  #L4afe04.  if v9 == 0 then goto L4afe1a;
  #L4afe08.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.shapePath` @type ^`com.google.android.material.shape.ShapePath` @kind object;
  #L4afe0c.  v1:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afe10.  v1:= v1[v10] @kind object;
  #L4afe14.  call `onEdgePathCreated`(v9, v0, v1, v10) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;.onEdgePathCreated:(Lcom/google/android/material/shape/ShapePath;Landroid/graphics/Matrix;I)V` @kind interface;
  #L4afe1a.  return @kind void;
}
procedure `void` `getCoordinatesOfCorner`(`com.google.android.material.shape.ShapeAppearancePathProvider` v1 @kind this, `int` v2 , `android.graphics.RectF` v3 @kind object, `android.graphics.PointF` v4 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCoordinatesOfCorner:(ILandroid/graphics/RectF;Landroid/graphics/PointF;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4aff00.  v0:= 1I;
  #L4aff02.  if v2 == v0 then goto L4aff42;
  #L4aff06.  v0:= 2I;
  #L4aff08.  if v2 == v0 then goto L4aff32;
  #L4aff0c.  v0:= 3I;
  #L4aff0e.  if v2 == v0 then goto L4aff22;
  #L4aff12.  v2:= v3.`android.graphics.RectF.right` @type ^`float`;
  #L4aff16.  v3:= v3.`android.graphics.RectF.top` @type ^`float`;
  #L4aff1a.  call `set`(v4, v2, v3) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L4aff20.  goto L4aff50;
  #L4aff22.  v2:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L4aff26.  v3:= v3.`android.graphics.RectF.top` @type ^`float`;
  #L4aff2a.  call `set`(v4, v2, v3) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L4aff30.  goto L4aff50;
  #L4aff32.  v2:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L4aff36.  v3:= v3.`android.graphics.RectF.bottom` @type ^`float`;
  #L4aff3a.  call `set`(v4, v2, v3) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L4aff40.  goto L4aff50;
  #L4aff42.  v2:= v3.`android.graphics.RectF.right` @type ^`float`;
  #L4aff46.  v3:= v3.`android.graphics.RectF.bottom` @type ^`float`;
  #L4aff4a.  call `set`(v4, v2, v3) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L4aff50.  return @kind void;
}
procedure `com.google.android.material.shape.CornerSize` `getCornerSizeForIndex`(`com.google.android.material.shape.ShapeAppearancePathProvider` v1 @kind this, `int` v2 , `com.google.android.material.shape.ShapeAppearanceModel` v3 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCornerSizeForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/CornerSize;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4af8e0.  v0:= 1I;
  #L4af8e2.  if v2 == v0 then goto L4af910;
  #L4af8e6.  v0:= 2I;
  #L4af8e8.  if v2 == v0 then goto L4af906;
  #L4af8ec.  v0:= 3I;
  #L4af8ee.  if v2 == v0 then goto L4af8fc;
  #L4af8f2.  call temp:= `getTopRightCornerSize`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L4af8f8.  v2:= temp @kind object;
  #L4af8fa.  return v2 @kind object;
  #L4af8fc.  call temp:= `getTopLeftCornerSize`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L4af902.  v2:= temp @kind object;
  #L4af904.  return v2 @kind object;
  #L4af906.  call temp:= `getBottomLeftCornerSize`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L4af90c.  v2:= temp @kind object;
  #L4af90e.  return v2 @kind object;
  #L4af910.  call temp:= `getBottomRightCornerSize`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L4af916.  v2:= temp @kind object;
  #L4af918.  return v2 @kind object;
}
procedure `com.google.android.material.shape.CornerTreatment` `getCornerTreatmentForIndex`(`com.google.android.material.shape.ShapeAppearancePathProvider` v1 @kind this, `int` v2 , `com.google.android.material.shape.ShapeAppearanceModel` v3 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCornerTreatmentForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/CornerTreatment;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4af92c.  v0:= 1I;
  #L4af92e.  if v2 == v0 then goto L4af95c;
  #L4af932.  v0:= 2I;
  #L4af934.  if v2 == v0 then goto L4af952;
  #L4af938.  v0:= 3I;
  #L4af93a.  if v2 == v0 then goto L4af948;
  #L4af93e.  call temp:= `getTopRightCorner`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCorner:()Lcom/google/android/material/shape/CornerTreatment;` @kind virtual;
  #L4af944.  v2:= temp @kind object;
  #L4af946.  return v2 @kind object;
  #L4af948.  call temp:= `getTopLeftCorner`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopLeftCorner:()Lcom/google/android/material/shape/CornerTreatment;` @kind virtual;
  #L4af94e.  v2:= temp @kind object;
  #L4af950.  return v2 @kind object;
  #L4af952.  call temp:= `getBottomLeftCorner`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomLeftCorner:()Lcom/google/android/material/shape/CornerTreatment;` @kind virtual;
  #L4af958.  v2:= temp @kind object;
  #L4af95a.  return v2 @kind object;
  #L4af95c.  call temp:= `getBottomRightCorner`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomRightCorner:()Lcom/google/android/material/shape/CornerTreatment;` @kind virtual;
  #L4af962.  v2:= temp @kind object;
  #L4af964.  return v2 @kind object;
}
procedure `float` `getEdgeCenterForIndex`(`com.google.android.material.shape.ShapeAppearancePathProvider` v4 @kind this, `android.graphics.RectF` v5 @kind object, `int` v6 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getEdgeCenterForIndex:(Landroid/graphics/RectF;I)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4af9f8.  v0:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4af9fc.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4afa00.  v2:= v1[v6] @kind object;
  #L4afa04.  v2:= v2.`com.google.android.material.shape.ShapePath.endX` @type ^`float`;
  #L4afa08.  v3:= 0I;
  #L4afa0a.  v0[v3]:= v2;
  #L4afa0e.  v1:= v1[v6] @kind object;
  #L4afa12.  v1:= v1.`com.google.android.material.shape.ShapePath.endY` @type ^`float`;
  #L4afa16.  v2:= 1I;
  #L4afa18.  v0[v2]:= v1;
  #L4afa1c.  v1:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4afa20.  v1:= v1[v6] @kind object;
  #L4afa24.  call `mapPoints`(v1, v0) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L4afa2a.  if v6 == v2 then goto L4afa50;
  #L4afa2e.  v0:= 3I;
  #L4afa30.  if v6 == v0 then goto L4afa50;
  #L4afa34.  call temp:= `centerY`(v5) @signature `Landroid/graphics/RectF;.centerY:()F` @kind virtual;
  #L4afa3a.  v5:= temp;
  #L4afa3c.  v6:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afa40.  v6:= v6[v2];
  #L4afa44.  v5:= v5 - v6 @kind float;
  #L4afa46.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4afa4c.  v5:= temp;
  #L4afa4e.  return v5;
  #L4afa50.  call temp:= `centerX`(v5) @signature `Landroid/graphics/RectF;.centerX:()F` @kind virtual;
  #L4afa56.  v5:= temp;
  #L4afa58.  v6:= v4.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4afa5c.  v6:= v6[v3];
  #L4afa60.  v5:= v5 - v6 @kind float;
  #L4afa62.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4afa68.  v5:= temp;
  #L4afa6a.  return v5;
}
procedure `com.google.android.material.shape.EdgeTreatment` `getEdgeTreatmentForIndex`(`com.google.android.material.shape.ShapeAppearancePathProvider` v1 @kind this, `int` v2 , `com.google.android.material.shape.ShapeAppearanceModel` v3 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getEdgeTreatmentForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/EdgeTreatment;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4af978.  v0:= 1I;
  #L4af97a.  if v2 == v0 then goto L4af9a8;
  #L4af97e.  v0:= 2I;
  #L4af980.  if v2 == v0 then goto L4af99e;
  #L4af984.  v0:= 3I;
  #L4af986.  if v2 == v0 then goto L4af994;
  #L4af98a.  call temp:= `getRightEdge`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getRightEdge:()Lcom/google/android/material/shape/EdgeTreatment;` @kind virtual;
  #L4af990.  v2:= temp @kind object;
  #L4af992.  return v2 @kind object;
  #L4af994.  call temp:= `getTopEdge`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopEdge:()Lcom/google/android/material/shape/EdgeTreatment;` @kind virtual;
  #L4af99a.  v2:= temp @kind object;
  #L4af99c.  return v2 @kind object;
  #L4af99e.  call temp:= `getLeftEdge`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getLeftEdge:()Lcom/google/android/material/shape/EdgeTreatment;` @kind virtual;
  #L4af9a4.  v2:= temp @kind object;
  #L4af9a6.  return v2 @kind object;
  #L4af9a8.  call temp:= `getBottomEdge`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomEdge:()Lcom/google/android/material/shape/EdgeTreatment;` @kind virtual;
  #L4af9ae.  v2:= temp @kind object;
  #L4af9b0.  return v2 @kind object;
}
procedure `com.google.android.material.shape.ShapeAppearancePathProvider` `getInstance`() @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getInstance:()Lcom/google/android/material/shape/ShapeAppearancePathProvider;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4af9c4.  v0:= `@@com.google.android.material.shape.ShapeAppearancePathProvider$Lazy.INSTANCE` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L4af9c8.  return v0 @kind object;
}
procedure `boolean` `pathOverlapsCorner`(`com.google.android.material.shape.ShapeAppearancePathProvider` v3 @kind this, `android.graphics.Path` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.pathOverlapsCorner:(Landroid/graphics/Path;I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4af844.  v0:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @type ^`android.graphics.Path` @kind object;
  #L4af848.  call `reset`(v0) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L4af84e.  v0:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4af852.  v0:= v0[v5] @kind object;
  #L4af856.  v1:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4af85a.  v5:= v1[v5] @kind object;
  #L4af85e.  v1:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @type ^`android.graphics.Path` @kind object;
  #L4af862.  call `applyToPath`(v0, v5, v1) @signature `Lcom/google/android/material/shape/ShapePath;.applyToPath:(Landroid/graphics/Matrix;Landroid/graphics/Path;)V` @kind virtual;
  #L4af868.  v5:= new `android.graphics.RectF`;
  #L4af86c.  call `<init>`(v5) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L4af872.  v0:= 1I;
  #L4af874.  call `computeBounds`(v4, v5, v0) @signature `Landroid/graphics/Path;.computeBounds:(Landroid/graphics/RectF;Z)V` @kind virtual;
  #L4af87a.  v1:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @type ^`android.graphics.Path` @kind object;
  #L4af87e.  call `computeBounds`(v1, v5, v0) @signature `Landroid/graphics/Path;.computeBounds:(Landroid/graphics/RectF;Z)V` @kind virtual;
  #L4af884.  v1:= v3.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPath` @type ^`android.graphics.Path` @kind object;
  #L4af888.  v2:= `@@android.graphics.Path$Op.INTERSECT` @type ^`android.graphics.Path$Op` @kind object;
  #L4af88c.  call temp:= `op`(v4, v1, v2) @signature `Landroid/graphics/Path;.op:(Landroid/graphics/Path;Landroid/graphics/Path$Op;)Z` @kind virtual;
  #L4af892.  call `computeBounds`(v4, v5, v0) @signature `Landroid/graphics/Path;.computeBounds:(Landroid/graphics/RectF;Z)V` @kind virtual;
  #L4af898.  call temp:= `isEmpty`(v5) @signature `Landroid/graphics/RectF;.isEmpty:()Z` @kind virtual;
  #L4af89e.  v4:= temp;
  #L4af8a0.  if v4 == 0 then goto L4af8cc;
  #L4af8a4.  call temp:= `width`(v5) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L4af8aa.  v4:= temp;
  #L4af8ac.  v1:= 1.0F;
  #L4af8b0.  v4:= fcmpl(v4, v1);
  #L4af8b4.  if v4 <= 0 then goto L4af8ca;
  #L4af8b8.  call temp:= `height`(v5) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L4af8be.  v4:= temp;
  #L4af8c0.  v4:= fcmpl(v4, v1);
  #L4af8c4.  if v4 <= 0 then goto L4af8ca;
  #L4af8c8.  goto L4af8cc;
  #L4af8ca.  v0:= 0I;
  #L4af8cc.  return v0;
}
procedure `void` `setCornerPathAndTransform`(`com.google.android.material.shape.ShapeAppearancePathProvider` v7 @kind this, `com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec` v8 @kind object, `int` v9 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setCornerPathAndTransform:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4aff64.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4aff68.  call temp:= `getCornerSizeForIndex`(v7, v9, v0) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCornerSizeForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/CornerSize;` @kind direct;
  #L4aff6e.  v6:= temp @kind object;
  #L4aff70.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4aff74.  call temp:= `getCornerTreatmentForIndex`(v7, v9, v0) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCornerTreatmentForIndex:(ILcom/google/android/material/shape/ShapeAppearanceModel;)Lcom/google/android/material/shape/CornerTreatment;` @kind direct;
  #L4aff7a.  v1:= temp @kind object;
  #L4aff7c.  v0:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4aff80.  v2:= v0[v9] @kind object;
  #L4aff84.  v4:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.interpolation` @type ^`float`;
  #L4aff88.  v5:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.bounds` @type ^`android.graphics.RectF` @kind object;
  #L4aff8c.  v3:= 90.0F;
  #L4aff90.  call `getCornerPath`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/shape/CornerTreatment;.getCornerPath:(Lcom/google/android/material/shape/ShapePath;FFLandroid/graphics/RectF;Lcom/google/android/material/shape/CornerSize;)V` @kind virtual;
  #L4aff96.  call temp:= `angleOfEdge`(v7, v9) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.angleOfEdge:(I)F` @kind direct;
  #L4aff9c.  v0:= temp;
  #L4aff9e.  v1:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4affa2.  v1:= v1[v9] @kind object;
  #L4affa6.  call `reset`(v1) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L4affac.  v8:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec.bounds` @type ^`android.graphics.RectF` @kind object;
  #L4affb0.  v1:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.pointF` @type ^`android.graphics.PointF` @kind object;
  #L4affb4.  call `getCoordinatesOfCorner`(v7, v9, v8, v1) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getCoordinatesOfCorner:(ILandroid/graphics/RectF;Landroid/graphics/PointF;)V` @kind direct;
  #L4affba.  v8:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4affbe.  v8:= v8[v9] @kind object;
  #L4affc2.  v1:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.pointF` @type ^`android.graphics.PointF` @kind object;
  #L4affc6.  v2:= v1.`android.graphics.PointF.x` @type ^`float`;
  #L4affca.  v1:= v1.`android.graphics.PointF.y` @type ^`float`;
  #L4affce.  call `setTranslate`(v8, v2, v1) @signature `Landroid/graphics/Matrix;.setTranslate:(FF)V` @kind virtual;
  #L4affd4.  v8:= v7.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4affd8.  v8:= v8[v9] @kind object;
  #L4affdc.  call temp:= `preRotate`(v8, v0) @signature `Landroid/graphics/Matrix;.preRotate:(F)Z` @kind virtual;
  #L4affe2.  return @kind void;
}
procedure `void` `setEdgePathAndTransform`(`com.google.android.material.shape.ShapeAppearancePathProvider` v5 @kind this, `int` v6 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setEdgePathAndTransform:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b000c.  v0:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4b0010.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4b0014.  v1:= v1[v6] @kind object;
  #L4b0018.  call temp:= `getEndX`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getEndX:()F` @kind virtual;
  #L4b001e.  v1:= temp;
  #L4b0020.  v2:= 0I;
  #L4b0022.  v0[v2]:= v1;
  #L4b0026.  v0:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4b002a.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerPaths` @type ^`com.google.android.material.shape.ShapePath`[] @kind object;
  #L4b002e.  v1:= v1[v6] @kind object;
  #L4b0032.  call temp:= `getEndY`(v1) @signature `Lcom/google/android/material/shape/ShapePath;.getEndY:()F` @kind virtual;
  #L4b0038.  v1:= temp;
  #L4b003a.  v3:= 1I;
  #L4b003c.  v0[v3]:= v1;
  #L4b0040.  v0:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.cornerTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4b0044.  v0:= v0[v6] @kind object;
  #L4b0048.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4b004c.  call `mapPoints`(v0, v1) @signature `Landroid/graphics/Matrix;.mapPoints:([F)V` @kind virtual;
  #L4b0052.  call temp:= `angleOfEdge`(v5, v6) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.angleOfEdge:(I)F` @kind direct;
  #L4b0058.  v0:= temp;
  #L4b005a.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4b005e.  v1:= v1[v6] @kind object;
  #L4b0062.  call `reset`(v1) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L4b0068.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4b006c.  v1:= v1[v6] @kind object;
  #L4b0070.  v4:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.scratch` @type ^`float`[] @kind object;
  #L4b0074.  v2:= v4[v2];
  #L4b0078.  v3:= v4[v3];
  #L4b007c.  call `setTranslate`(v1, v2, v3) @signature `Landroid/graphics/Matrix;.setTranslate:(FF)V` @kind virtual;
  #L4b0082.  v1:= v5.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeTransforms` @type ^`android.graphics.Matrix`[] @kind object;
  #L4b0086.  v6:= v1[v6] @kind object;
  #L4b008a.  call temp:= `preRotate`(v6, v0) @signature `Landroid/graphics/Matrix;.preRotate:(F)Z` @kind virtual;
  #L4b0090.  return @kind void;
}
procedure `void` `calculatePath`(`com.google.android.material.shape.ShapeAppearancePathProvider` v6 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v7 @kind object, `float` v8 , `android.graphics.RectF` v9 @kind object, `android.graphics.Path` v10 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Landroid/graphics/Path;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4afe2c.  v4:= 0I;
  #L4afe2e.  v0:= v6 @kind object;
  #L4afe30.  v1:= v7 @kind object;
  #L4afe32.  v2:= v8;
  #L4afe34.  v3:= v9 @kind object;
  #L4afe36.  v5:= v10 @kind object;
  #L4afe38.  call `calculatePath`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;Landroid/graphics/Path;)V` @kind virtual;
  #L4afe3e.  return @kind void;
}
procedure `void` `calculatePath`(`com.google.android.material.shape.ShapeAppearancePathProvider` v8 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v9 @kind object, `float` v10 , `android.graphics.RectF` v11 @kind object, `com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` v12 @kind object, `android.graphics.Path` v13 @kind object) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;Landroid/graphics/Path;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4afe50.  call `rewind`(v13) @signature `Landroid/graphics/Path;.rewind:()V` @kind virtual;
  #L4afe56.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L4afe5a.  call `rewind`(v0) @signature `Landroid/graphics/Path;.rewind:()V` @kind virtual;
  #L4afe60.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.boundsPath` @type ^`android.graphics.Path` @kind object;
  #L4afe64.  call `rewind`(v0) @signature `Landroid/graphics/Path;.rewind:()V` @kind virtual;
  #L4afe6a.  v0:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.boundsPath` @type ^`android.graphics.Path` @kind object;
  #L4afe6e.  v1:= `@@android.graphics.Path$Direction.CW` @type ^`android.graphics.Path$Direction` @kind object;
  #L4afe72.  call `addRect`(v0, v11, v1) @signature `Landroid/graphics/Path;.addRect:(Landroid/graphics/RectF;Landroid/graphics/Path$Direction;)V` @kind virtual;
  #L4afe78.  v0:= new `com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec`;
  #L4afe7c.  v2:= v0 @kind object;
  #L4afe7e.  v3:= v9 @kind object;
  #L4afe80.  v4:= v10;
  #L4afe82.  v5:= v11 @kind object;
  #L4afe84.  v6:= v12 @kind object;
  #L4afe86.  v7:= v13 @kind object;
  #L4afe88.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;Landroid/graphics/Path;)V` @kind direct;
  #L4afe8e.  v9:= 0I;
  #L4afe90.  v10:= 0I;
  #L4afe92.  v11:= 4I;
  #L4afe94.  if v10 >= v11 then goto L4afeaa;
  #L4afe98.  call `setCornerPathAndTransform`(v8, v0, v10) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setCornerPathAndTransform:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @kind direct;
  #L4afe9e.  call `setEdgePathAndTransform`(v8, v10) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setEdgePathAndTransform:(I)V` @kind direct;
  #L4afea4.  v10:= v10 + 1;
  #L4afea8.  goto L4afe92;
  #L4afeaa.  if v9 >= v11 then goto L4afec0;
  #L4afeae.  call `appendCornerPath`(v8, v0, v9) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.appendCornerPath:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @kind direct;
  #L4afeb4.  call `appendEdgePath`(v8, v0, v9) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.appendEdgePath:(Lcom/google/android/material/shape/ShapeAppearancePathProvider$ShapeAppearancePathSpec;I)V` @kind direct;
  #L4afeba.  v9:= v9 + 1;
  #L4afebe.  goto L4afeaa;
  #L4afec0.  call `close`(v13) @signature `Landroid/graphics/Path;.close:()V` @kind virtual;
  #L4afec6.  v9:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L4afeca.  call `close`(v9) @signature `Landroid/graphics/Path;.close:()V` @kind virtual;
  #L4afed0.  v9:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L4afed4.  call temp:= `isEmpty`(v9) @signature `Landroid/graphics/Path;.isEmpty:()Z` @kind virtual;
  #L4afeda.  v9:= temp;
  #L4afedc.  if v9 != 0 then goto L4afeee;
  #L4afee0.  v9:= v8.`com.google.android.material.shape.ShapeAppearancePathProvider.overlappedEdgePath` @type ^`android.graphics.Path` @kind object;
  #L4afee4.  v10:= `@@android.graphics.Path$Op.UNION` @type ^`android.graphics.Path$Op` @kind object;
  #L4afee8.  call temp:= `op`(v13, v9, v10) @signature `Landroid/graphics/Path;.op:(Landroid/graphics/Path;Landroid/graphics/Path$Op;)Z` @kind virtual;
  #L4afeee.  return @kind void;
}
procedure `void` `setEdgeIntersectionCheckEnable`(`com.google.android.material.shape.ShapeAppearancePathProvider` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setEdgeIntersectionCheckEnable:(Z)V` @AccessFlag  {
    temp;

  #L4afff4.  v0.`com.google.android.material.shape.ShapeAppearancePathProvider.edgeIntersectionCheckEnabled` @type ^`boolean` := v1 @kind boolean;
  #L4afff8.  return @kind void;
}
