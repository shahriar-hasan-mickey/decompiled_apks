record `com.google.android.material.shape.MaterialShapeDrawable` @kind class @AccessFlag PUBLIC extends `android.graphics.drawable.Drawable` @kind class, `androidx.core.graphics.drawable.TintAwareDrawable` @kind interface, `com.google.android.material.shape.Shapeable` @kind interface {
  `java.util.BitSet` `com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` `com.google.android.material.shape.MaterialShapeDrawable.drawableState` @AccessFlag PRIVATE;
  `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Matrix` `com.google.android.material.shape.MaterialShapeDrawable.matrix` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Path` `com.google.android.material.shape.MaterialShapeDrawable.path` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearancePathProvider` `com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` `com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.rectF` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.shape.MaterialShapeDrawable.resolvedTintColor` @AccessFlag PRIVATE;
  `android.graphics.Region` `com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @AccessFlag PRIVATE;
  `com.google.android.material.shadow.ShadowRenderer` `com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearanceModel` `com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @AccessFlag PRIVATE;
  `android.graphics.Region` `com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_ALWAYS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_NEVER` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_OFFSET_MULTIPLIER` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_RADIUS_MULTIPLIER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.shape.MaterialShapeDrawable.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Paint` `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4ad854.  v0:= constclass @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4ad858.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L4ad85e.  v0:= temp @kind object;
  #L4ad860.  `@@com.google.android.material.shape.MaterialShapeDrawable.TAG` @type ^`java.lang.String` := v0 @kind object;
  #L4ad864.  v0:= new `android.graphics.Paint`;
  #L4ad868.  v1:= 1I;
  #L4ad86a.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L4ad870.  `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L4ad874.  v1:= -1I;
  #L4ad876.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4ad87c.  v1:= new `android.graphics.PorterDuffXfermode`;
  #L4ad880.  v2:= `@@android.graphics.PorterDuff$Mode.DST_OUT` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L4ad884.  call `<init>`(v1, v2) @signature `Landroid/graphics/PorterDuffXfermode;.<init>:(Landroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L4ad88a.  call temp:= `setXfermode`(v0, v1) @signature `Landroid/graphics/Paint;.setXfermode:(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;` @kind virtual;
  #L4ad890.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ad8a4.  v0:= new `com.google.android.material.shape.ShapeAppearanceModel`;
  #L4ad8a8.  call `<init>`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.<init>:()V` @kind direct;
  #L4ad8ae.  call `<init>`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L4ad8b4.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ad8c8.  call temp:= `builder`(v1, v2, v3, v4) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.builder:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind static;
  #L4ad8ce.  v1:= temp @kind object;
  #L4ad8d0.  call temp:= `build`(v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.build:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L4ad8d6.  v1:= temp @kind object;
  #L4ad8d8.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L4ad8de.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this, `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` v6 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ad8f0.  call `<init>`(v5) @signature `Landroid/graphics/drawable/Drawable;.<init>:()V` @kind direct;
  #L4ad8f6.  v0:= 4I;
  #L4ad8f8.  v1:= new `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[v0];
  #L4ad8fc.  v5.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] := v1 @kind object;
  #L4ad900.  v0:= new `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[v0];
  #L4ad904.  v5.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] := v0 @kind object;
  #L4ad908.  v0:= new `java.util.BitSet`;
  #L4ad90c.  v1:= 8I;
  #L4ad910.  call `<init>`(v0, v1) @signature `Ljava/util/BitSet;.<init>:(I)V` @kind direct;
  #L4ad916.  v5.`com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @type ^`java.util.BitSet` := v0 @kind object;
  #L4ad91a.  v0:= new `android.graphics.Matrix`;
  #L4ad91e.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L4ad924.  v5.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L4ad928.  v0:= new `android.graphics.Path`;
  #L4ad92c.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L4ad932.  v5.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` := v0 @kind object;
  #L4ad936.  v0:= new `android.graphics.Path`;
  #L4ad93a.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L4ad940.  v5.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` := v0 @kind object;
  #L4ad944.  v0:= new `android.graphics.RectF`;
  #L4ad948.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L4ad94e.  v5.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L4ad952.  v0:= new `android.graphics.RectF`;
  #L4ad956.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L4ad95c.  v5.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L4ad960.  v0:= new `android.graphics.Region`;
  #L4ad964.  call `<init>`(v0) @signature `Landroid/graphics/Region;.<init>:()V` @kind direct;
  #L4ad96a.  v5.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` := v0 @kind object;
  #L4ad96e.  v0:= new `android.graphics.Region`;
  #L4ad972.  call `<init>`(v0) @signature `Landroid/graphics/Region;.<init>:()V` @kind direct;
  #L4ad978.  v5.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` := v0 @kind object;
  #L4ad97c.  v0:= new `android.graphics.Paint`;
  #L4ad980.  v1:= 1I;
  #L4ad982.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L4ad988.  v5.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L4ad98c.  v2:= new `android.graphics.Paint`;
  #L4ad990.  call `<init>`(v2, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L4ad996.  v5.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L4ad99a.  v3:= new `com.google.android.material.shadow.ShadowRenderer`;
  #L4ad99e.  call `<init>`(v3) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.<init>:()V` @kind direct;
  #L4ad9a4.  v5.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` := v3 @kind object;
  #L4ad9a8.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L4ad9ae.  v3:= temp @kind object;
  #L4ad9b0.  call temp:= `getThread`(v3) @signature `Landroid/os/Looper;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L4ad9b6.  v3:= temp @kind object;
  #L4ad9b8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L4ad9be.  v4:= temp @kind object;
  #L4ad9c0.  if v3 != v4 then goto L4ad9ce;
  #L4ad9c4.  call temp:= `getInstance`() @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.getInstance:()Lcom/google/android/material/shape/ShapeAppearancePathProvider;` @kind static;
  #L4ad9ca.  v3:= temp @kind object;
  #L4ad9cc.  goto L4ad9d8;
  #L4ad9ce.  v3:= new `com.google.android.material.shape.ShapeAppearancePathProvider`;
  #L4ad9d2.  call `<init>`(v3) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.<init>:()V` @kind direct;
  #L4ad9d8.  v5.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` := v3 @kind object;
  #L4ad9dc.  v3:= new `android.graphics.RectF`;
  #L4ad9e0.  call `<init>`(v3) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L4ad9e6.  v5.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` := v3 @kind object;
  #L4ad9ea.  v5.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` := v1 @kind boolean;
  #L4ad9ee.  v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` := v6 @kind object;
  #L4ad9f2.  v6:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L4ad9f6.  call `setStyle`(v2, v6) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L4ad9fc.  v6:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L4ada00.  call `setStyle`(v0, v6) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L4ada06.  call temp:= `updateTintFilter`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L4ada0c.  call temp:= `getState`(v5) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L4ada12.  v6:= temp @kind object;
  #L4ada14.  call temp:= `updateColorsForState`(v5, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @kind direct;
  #L4ada1a.  v6:= new `com.google.android.material.shape.MaterialShapeDrawable$1`;
  #L4ada1e.  call `<init>`(v6, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$1;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable;)V` @kind direct;
  #L4ada24.  v5.`com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` := v6 @kind object;
  #L4ada28.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` v1 @kind object, `com.google.android.material.shape.MaterialShapeDrawable$1` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;Lcom/google/android/material/shape/MaterialShapeDrawable$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4ada3c.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L4ada42.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4ada54.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState`;
  #L4ada58.  v1:= 0I;
  #L4ada5a.  call `<init>`(v0, v3, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;Lcom/google/android/material/elevation/ElevationOverlayProvider;)V` @kind direct;
  #L4ada60.  call `<init>`(v2, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L4ada66.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.ShapePathModel` v1 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapePathModel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ada78.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L4ada7e.  return @kind void;
}
procedure `java.util.BitSet` `access$000`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$000:(Lcom/google/android/material/shape/MaterialShapeDrawable;)Ljava/util/BitSet;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ad83c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @type ^`java.util.BitSet` @kind object;
  #L4ad840.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `access$100`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$100:(Lcom/google/android/material/shape/MaterialShapeDrawable;)[Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ad474.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L4ad478.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `access$200`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$200:(Lcom/google/android/material/shape/MaterialShapeDrawable;)[Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ad48c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L4ad490.  return v0 @kind object;
}
procedure `boolean` `access$402`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object, `boolean` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.access$402:(Lcom/google/android/material/shape/MaterialShapeDrawable;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4acfe4.  v0.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v1 @kind boolean;
  #L4acfe8.  return v1;
}
procedure `android.graphics.PorterDuffColorFilter` `calculatePaintColorTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Paint` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePaintColorTintFilter:(Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4ace34.  if v3 == 0 then goto L4ace60;
  #L4ace38.  call temp:= `getColor`(v2) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L4ace3e.  v2:= temp;
  #L4ace40.  call temp:= `compositeElevationOverlayIfNeeded`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L4ace46.  v3:= temp;
  #L4ace48.  v1.`com.google.android.material.shape.MaterialShapeDrawable.resolvedTintColor` @type ^`int` := v3;
  #L4ace4c.  if v3 == v2 then goto L4ace60;
  #L4ace50.  v2:= new `android.graphics.PorterDuffColorFilter`;
  #L4ace54.  v0:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L4ace58.  call `<init>`(v2, v3, v0) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L4ace5e.  return v2 @kind object;
  #L4ace60.  v2:= 0I;
  #L4ace62.  return v2 @kind object;
}
procedure `void` `calculatePath`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.RectF` v5 @kind object, `android.graphics.Path` v6 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ada90.  call `calculatePathForSize`(v4, v5, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L4ada96.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ada9a.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L4ada9e.  v1:= 1.0F;
  #L4adaa2.  v0:= fcmpl(v0, v1);
  #L4adaa6.  if v0 == 0 then goto L4adae8;
  #L4adaaa.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L4adaae.  call `reset`(v0) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L4adab4.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L4adab8.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adabc.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L4adac0.  call temp:= `width`(v5) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L4adac6.  v2:= temp;
  #L4adac8.  v3:= 2.0F;
  #L4adacc.  v2:= v2 / v3 @kind float;
  #L4adace.  call temp:= `height`(v5) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L4adad4.  v5:= temp;
  #L4adad6.  v5:= v5 / v3 @kind float;
  #L4adad8.  call `setScale`(v0, v1, v1, v2, v5) @signature `Landroid/graphics/Matrix;.setScale:(FFFF)V` @kind virtual;
  #L4adade.  v5:= v4.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L4adae2.  call `transform`(v6, v5) @signature `Landroid/graphics/Path;.transform:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L4adae8.  v5:= v4.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L4adaec.  v0:= 1I;
  #L4adaee.  call `computeBounds`(v6, v5, v0) @signature `Landroid/graphics/Path;.computeBounds:(Landroid/graphics/RectF;Z)V` @kind virtual;
  #L4adaf4.  return @kind void;
}
procedure `void` `calculateStrokePath`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateStrokePath:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4adb3c.  call temp:= `getStrokeInsetLength`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @kind direct;
  #L4adb42.  v0:= temp;
  #L4adb44.  v0:= -v0 @kind float;
  #L4adb46.  call temp:= `getShapeAppearanceModel`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L4adb4c.  v1:= temp @kind object;
  #L4adb4e.  v2:= new `com.google.android.material.shape.MaterialShapeDrawable$2`;
  #L4adb52.  call `<init>`(v2, v5, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$2;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable;F)V` @kind direct;
  #L4adb58.  call temp:= `withTransformedCornerSizes`(v1, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withTransformedCornerSizes:(Lcom/google/android/material/shape/ShapeAppearanceModel$CornerSizeUnaryOperator;)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L4adb5e.  v0:= temp @kind object;
  #L4adb60.  v5.`com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @type ^`com.google.android.material.shape.ShapeAppearanceModel` := v0 @kind object;
  #L4adb64.  v1:= v5.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L4adb68.  v2:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adb6c.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L4adb70.  call temp:= `getBoundsInsetByStroke`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @kind direct;
  #L4adb76.  v3:= temp @kind object;
  #L4adb78.  v4:= v5.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` @kind object;
  #L4adb7c.  call `calculatePath`(v1, v0, v2, v3, v4) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L4adb82.  return @kind void;
}
procedure `android.graphics.PorterDuffColorFilter` `calculateTintColorTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object, `android.graphics.PorterDuff$Mode` v4 @kind object, `boolean` v5 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintColorTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ace74.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L4ace7a.  v0:= temp @kind object;
  #L4ace7c.  v1:= 0I;
  #L4ace7e.  call temp:= `getColorForState`(v3, v0, v1) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L4ace84.  v3:= temp;
  #L4ace86.  if v5 == 0 then goto L4ace92;
  #L4ace8a.  call temp:= `compositeElevationOverlayIfNeeded`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L4ace90.  v3:= temp;
  #L4ace92.  v2.`com.google.android.material.shape.MaterialShapeDrawable.resolvedTintColor` @type ^`int` := v3;
  #L4ace96.  v5:= new `android.graphics.PorterDuffColorFilter`;
  #L4ace9a.  call `<init>`(v5, v3, v4) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L4acea0.  return v5 @kind object;
}
procedure `android.graphics.PorterDuffColorFilter` `calculateTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `android.content.res.ColorStateList` v1 @kind object, `android.graphics.PorterDuff$Mode` v2 @kind object, `android.graphics.Paint` v3 @kind object, `boolean` v4 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;

  #L4aceb4.  if v1 == 0 then goto L4acec8;
  #L4aceb8.  if v2 != 0 then goto L4acebe;
  #L4acebc.  goto L4acec8;
  #L4acebe.  call temp:= `calculateTintColorTintFilter`(v0, v1, v2, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintColorTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L4acec4.  v1:= temp @kind object;
  #L4acec6.  goto L4aced0;
  #L4acec8.  call temp:= `calculatePaintColorTintFilter`(v0, v3, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePaintColorTintFilter:(Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L4acece.  v1:= temp @kind object;
  #L4aced0.  return v1 @kind object;
}
procedure `com.google.android.material.shape.MaterialShapeDrawable` `createWithElevationOverlay`(`android.content.Context` v1 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;)Lcom/google/android/material/shape/MaterialShapeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ad3ec.  v0:= 0I;
  #L4ad3ee.  call temp:= `createWithElevationOverlay`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;F)Lcom/google/android/material/shape/MaterialShapeDrawable;` @kind static;
  #L4ad3f4.  v1:= temp @kind object;
  #L4ad3f6.  return v1 @kind object;
}
procedure `com.google.android.material.shape.MaterialShapeDrawable` `createWithElevationOverlay`(`android.content.Context` v2 @kind object, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;F)Lcom/google/android/material/shape/MaterialShapeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4ad408.  v0:= `@@com.google.android.material.R$attr.colorSurface` @type ^`int`;
  #L4ad40c.  v1:= constclass @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4ad410.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L4ad416.  v1:= temp @kind object;
  #L4ad418.  call temp:= `getColor`(v2, v0, v1) @signature `Lcom/google/android/material/color/MaterialColors;.getColor:(Landroid/content/Context;ILjava/lang/String;)I` @kind static;
  #L4ad41e.  v0:= temp;
  #L4ad420.  v1:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L4ad424.  call `<init>`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @kind direct;
  #L4ad42a.  call `initializeElevationOverlay`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @kind virtual;
  #L4ad430.  call temp:= `valueOf`(v0) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L4ad436.  v2:= temp @kind object;
  #L4ad438.  call `setFillColor`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4ad43e.  call `setElevation`(v1, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L4ad444.  return v1 @kind object;
}
procedure `void` `drawCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4adc84.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.containsIncompatibleShadowOp` @type ^`java.util.BitSet` @kind object;
  #L4adc88.  call temp:= `cardinality`(v0) @signature `Ljava/util/BitSet;.cardinality:()I` @kind virtual;
  #L4adc8e.  v0:= temp;
  #L4adc90.  if v0 <= 0 then goto L4adca2;
  #L4adc94.  v0:= `@@com.google.android.material.shape.MaterialShapeDrawable.TAG` @type ^`java.lang.String` @kind object;
  #L4adc98.  v1:= "Compatibility shadow requested but can't be drawn for all operations in this shape." @kind object;
  #L4adc9c.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4adca2.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adca6.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L4adcaa.  if v0 == 0 then goto L4adcc4;
  #L4adcae.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L4adcb2.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L4adcb6.  call temp:= `getShadowPaint`(v1) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.getShadowPaint:()Landroid/graphics/Paint;` @kind virtual;
  #L4adcbc.  v1:= temp @kind object;
  #L4adcbe.  call `drawPath`(v5, v0, v1) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L4adcc4.  v0:= 0I;
  #L4adcc6.  v1:= 4I;
  #L4adcc8.  if v0 >= v1 then goto L4add06;
  #L4adccc.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L4adcd0.  v1:= v1[v0] @kind object;
  #L4adcd4.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L4adcd8.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adcdc.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L4adce0.  call `draw`(v1, v2, v3, v5) @signature `Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;.draw:(Lcom/google/android/material/shadow/ShadowRenderer;ILandroid/graphics/Canvas;)V` @kind virtual;
  #L4adce6.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L4adcea.  v1:= v1[v0] @kind object;
  #L4adcee.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L4adcf2.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adcf6.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L4adcfa.  call `draw`(v1, v2, v3, v5) @signature `Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;.draw:(Lcom/google/android/material/shadow/ShadowRenderer;ILandroid/graphics/Canvas;)V` @kind virtual;
  #L4add00.  v0:= v0 + 1;
  #L4add04.  goto L4adcc6;
  #L4add06.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` @kind boolean;
  #L4add0a.  if v0 == 0 then goto L4add44;
  #L4add0e.  call temp:= `getShadowOffsetX`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @kind virtual;
  #L4add14.  v0:= temp;
  #L4add16.  call temp:= `getShadowOffsetY`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @kind virtual;
  #L4add1c.  v1:= temp;
  #L4add1e.  v2:= -v0 @kind int;
  #L4add20.  v2:= (`float`) v2 @kind i2f;
  #L4add22.  v3:= -v1 @kind int;
  #L4add24.  v3:= (`float`) v3 @kind i2f;
  #L4add26.  call `translate`(v5, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L4add2c.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L4add30.  v3:= `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` @kind object;
  #L4add34.  call `drawPath`(v5, v2, v3) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L4add3a.  v0:= (`float`) v0 @kind i2f;
  #L4add3c.  v1:= (`float`) v1 @kind i2f;
  #L4add3e.  call `translate`(v5, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L4add44.  return @kind void;
}
procedure `void` `drawFillShape`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawFillShape:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4add58.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L4add5c.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L4add60.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4add64.  v4:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4add68.  call temp:= `getBoundsAsRectF`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L4add6e.  v5:= temp @kind object;
  #L4add70.  v0:= v6 @kind object;
  #L4add72.  v1:= v7 @kind object;
  #L4add74.  call `drawShape`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L4add7a.  return @kind void;
}
procedure `void` `drawShape`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Canvas` v2 @kind object, `android.graphics.Paint` v3 @kind object, `android.graphics.Path` v4 @kind object, `com.google.android.material.shape.ShapeAppearanceModel` v5 @kind object, `android.graphics.RectF` v6 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4addb8.  call temp:= `isRoundRect`(v5, v6) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.isRoundRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L4addbe.  v0:= temp;
  #L4addc0.  if v0 == 0 then goto L4adde8;
  #L4addc4.  call temp:= `getTopRightCornerSize`(v5) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L4addca.  v4:= temp @kind object;
  #L4addcc.  call temp:= `getCornerSize`(v4, v6) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L4addd2.  v4:= temp;
  #L4addd4.  v5:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4addd8.  v5:= v5.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L4adddc.  v4:= v4 * v5 @kind float;
  #L4adde0.  call `drawRoundRect`(v2, v6, v4, v4, v3) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L4adde6.  goto L4addee;
  #L4adde8.  call `drawPath`(v2, v4, v3) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L4addee.  return @kind void;
}
procedure `android.graphics.RectF` `getBoundsInsetByStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4acf0c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L4acf10.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L4acf16.  v1:= temp @kind object;
  #L4acf18.  call `set`(v0, v1) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/RectF;)V` @kind virtual;
  #L4acf1e.  call temp:= `getStrokeInsetLength`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @kind direct;
  #L4acf24.  v0:= temp;
  #L4acf26.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L4acf2a.  call `inset`(v1, v0, v0) @signature `Landroid/graphics/RectF;.inset:(FF)V` @kind virtual;
  #L4acf30.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L4acf34.  return v0 @kind object;
}
procedure `float` `getStrokeInsetLength`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ad5a8.  call temp:= `hasStroke`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @kind direct;
  #L4ad5ae.  v0:= temp;
  #L4ad5b0.  if v0 == 0 then goto L4ad5c8;
  #L4ad5b4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4ad5b8.  call temp:= `getStrokeWidth`(v0) @signature `Landroid/graphics/Paint;.getStrokeWidth:()F` @kind virtual;
  #L4ad5be.  v0:= temp;
  #L4ad5c0.  v1:= 2.0F;
  #L4ad5c4.  v0:= v0 / v1 @kind float;
  #L4ad5c6.  return v0;
  #L4ad5c8.  v0:= 0I;
  #L4ad5ca.  return v0;
}
procedure `boolean` `hasCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v3 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasCompatShadow:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4ad02c.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad030.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L4ad034.  v2:= 1I;
  #L4ad036.  if v1 == v2 then goto L4ad056;
  #L4ad03a.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L4ad03e.  if v0 <= 0 then goto L4ad056;
  #L4ad042.  v0:= 2I;
  #L4ad044.  if v1 == v0 then goto L4ad058;
  #L4ad048.  call temp:= `requiresCompatShadow`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.requiresCompatShadow:()Z` @kind virtual;
  #L4ad04e.  v0:= temp;
  #L4ad050.  if v0 == 0 then goto L4ad056;
  #L4ad054.  goto L4ad058;
  #L4ad056.  v2:= 0I;
  #L4ad058.  return v2;
}
procedure `boolean` `hasFill`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasFill:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ad06c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad070.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L4ad074.  v1:= `@@android.graphics.Paint$Style.FILL_AND_STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L4ad078.  if v0 == v1 then goto L4ad08a;
  #L4ad07c.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L4ad080.  if v0 != v1 then goto L4ad086;
  #L4ad084.  goto L4ad08a;
  #L4ad086.  v0:= 0I;
  #L4ad088.  goto L4ad08c;
  #L4ad08a.  v0:= 1I;
  #L4ad08c.  return v0;
}
procedure `boolean` `hasStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ad0a0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad0a4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L4ad0a8.  v1:= `@@android.graphics.Paint$Style.FILL_AND_STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L4ad0ac.  if v0 == v1 then goto L4ad0b8;
  #L4ad0b0.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L4ad0b4.  if v0 != v1 then goto L4ad0d2;
  #L4ad0b8.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4ad0bc.  call temp:= `getStrokeWidth`(v0) @signature `Landroid/graphics/Paint;.getStrokeWidth:()F` @kind virtual;
  #L4ad0c2.  v0:= temp;
  #L4ad0c4.  v1:= 0I;
  #L4ad0c6.  v0:= fcmpl(v0, v1);
  #L4ad0ca.  if v0 <= 0 then goto L4ad0d2;
  #L4ad0ce.  v0:= 1I;
  #L4ad0d0.  goto L4ad0d4;
  #L4ad0d2.  v0:= 0I;
  #L4ad0d4.  return v0;
}
procedure `void` `invalidateSelfIgnoreShape`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @AccessFlag PRIVATE {
    temp;

  #L4adf40.  call `invalidateSelf`(v0) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind super;
  #L4adf46.  return @kind void;
}
procedure `void` `maybeDrawCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.maybeDrawCompatShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4adf58.  call temp:= `hasCompatShadow`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasCompatShadow:()Z` @kind direct;
  #L4adf5e.  v0:= temp;
  #L4adf60.  if v0 != 0 then goto L4adf66;
  #L4adf64.  return @kind void;
  #L4adf66.  call temp:= `save`(v7) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L4adf6c.  call `prepareCanvasForShadow`(v6, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.prepareCanvasForShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L4adf72.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` @kind boolean;
  #L4adf76.  if v0 != 0 then goto L4adf88;
  #L4adf7a.  call `drawCompatShadow`(v6, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L4adf80.  call `restore`(v7) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L4adf86.  return @kind void;
  #L4adf88.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L4adf8c.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L4adf92.  v0:= temp;
  #L4adf94.  call temp:= `getBounds`(v6) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4adf9a.  v1:= temp @kind object;
  #L4adf9c.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L4adfa2.  v1:= temp;
  #L4adfa4.  v1:= (`float`) v1 @kind i2f;
  #L4adfa6.  v0:= v0 - v1 @kind float;
  #L4adfa8.  v0:= (`int`) v0 @kind f2i;
  #L4adfaa.  v1:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L4adfae.  call temp:= `height`(v1) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L4adfb4.  v1:= temp;
  #L4adfb6.  call temp:= `getBounds`(v6) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4adfbc.  v2:= temp @kind object;
  #L4adfbe.  call temp:= `height`(v2) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L4adfc4.  v2:= temp;
  #L4adfc6.  v2:= (`float`) v2 @kind i2f;
  #L4adfc8.  v1:= v1 - v2 @kind float;
  #L4adfca.  v1:= (`int`) v1 @kind f2i;
  #L4adfcc.  if v0 < 0 then goto L4ae080;
  #L4adfd0.  if v1 < 0 then goto L4ae080;
  #L4adfd4.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L4adfd8.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L4adfde.  v2:= temp;
  #L4adfe0.  v2:= (`int`) v2 @kind f2i;
  #L4adfe2.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adfe6.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L4adfea.  v3:= v3 * 2;
  #L4adfee.  v2:= v2 + v3 @kind int;
  #L4adff0.  v2:= v2 + v0 @kind int;
  #L4adff2.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L4adff6.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L4adffc.  v3:= temp;
  #L4adffe.  v3:= (`int`) v3 @kind f2i;
  #L4ae000.  v4:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae004.  v4:= v4.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L4ae008.  v4:= v4 * 2;
  #L4ae00c.  v3:= v3 + v4 @kind int;
  #L4ae00e.  v3:= v3 + v1 @kind int;
  #L4ae010.  v4:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L4ae014.  call temp:= `createBitmap`(v2, v3, v4) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L4ae01a.  v2:= temp @kind object;
  #L4ae01c.  v3:= new `android.graphics.Canvas`;
  #L4ae020.  call `<init>`(v3, v2) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L4ae026.  call temp:= `getBounds`(v6) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4ae02c.  v4:= temp @kind object;
  #L4ae02e.  v4:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L4ae032.  v5:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae036.  v5:= v5.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L4ae03a.  v4:= v4 - v5 @kind int;
  #L4ae03c.  v4:= v4 - v0 @kind int;
  #L4ae03e.  v0:= (`float`) v4 @kind i2f;
  #L4ae040.  call temp:= `getBounds`(v6) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4ae046.  v4:= temp @kind object;
  #L4ae048.  v4:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L4ae04c.  v5:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae050.  v5:= v5.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L4ae054.  v4:= v4 - v5 @kind int;
  #L4ae056.  v4:= v4 - v1 @kind int;
  #L4ae058.  v1:= (`float`) v4 @kind i2f;
  #L4ae05a.  v4:= -v0 @kind float;
  #L4ae05c.  v5:= -v1 @kind float;
  #L4ae05e.  call `translate`(v3, v4, v5) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L4ae064.  call `drawCompatShadow`(v6, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L4ae06a.  v3:= 0I;
  #L4ae06c.  call `drawBitmap`(v7, v2, v0, v1, v3) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L4ae072.  call `recycle`(v2) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L4ae078.  call `restore`(v7) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L4ae07e.  return @kind void;
  #L4ae080.  v7:= new `java.lang.IllegalStateException`;
  #L4ae084.  v0:= "Invalid shadow bounds. Check that the treatments result in a valid path." @kind object;
  #L4ae088.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ae08e.  throw v7;
}
procedure `int` `modulateAlpha`(`int` v1 , `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4ad81c.  v0:= v2 ^>> 7;
  #L4ad820.  v2:= v2 + v0 @kind int;
  #L4ad822.  v1:= v1 * v2 @kind int;
  #L4ad826.  v1:= v1 ^>> 8;
  #L4ad82a.  return v1;
}
procedure `void` `prepareCanvasForShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.graphics.Canvas` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.prepareCanvasForShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ae0c0.  call temp:= `getShadowOffsetX`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @kind virtual;
  #L4ae0c6.  v0:= temp;
  #L4ae0c8.  call temp:= `getShadowOffsetY`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @kind virtual;
  #L4ae0ce.  v1:= temp;
  #L4ae0d0.  v0:= (`float`) v0 @kind i2f;
  #L4ae0d2.  v1:= (`float`) v1 @kind i2f;
  #L4ae0d4.  call `translate`(v3, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L4ae0da.  return @kind void;
}
procedure `boolean` `updateColorsForState`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `int`[] v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ad2bc.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad2c0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad2c4.  v1:= 1I;
  #L4ad2c6.  if v0 == 0 then goto L4ad2f8;
  #L4ad2ca.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L4ad2ce.  call temp:= `getColor`(v0) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L4ad2d4.  v0:= temp;
  #L4ad2d6.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad2da.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad2de.  call temp:= `getColorForState`(v2, v5, v0) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L4ad2e4.  v2:= temp;
  #L4ad2e6.  if v0 == v2 then goto L4ad2f8;
  #L4ad2ea.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L4ad2ee.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4ad2f4.  v0:= 1I;
  #L4ad2f6.  goto L4ad2fa;
  #L4ad2f8.  v0:= 0I;
  #L4ad2fa.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad2fe.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad302.  if v2 == 0 then goto L4ad332;
  #L4ad306.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4ad30a.  call temp:= `getColor`(v2) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L4ad310.  v2:= temp;
  #L4ad312.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad316.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad31a.  call temp:= `getColorForState`(v3, v5, v2) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L4ad320.  v5:= temp;
  #L4ad322.  if v2 == v5 then goto L4ad332;
  #L4ad326.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4ad32a.  call `setColor`(v0, v5) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4ad330.  goto L4ad334;
  #L4ad332.  v1:= v0;
  #L4ad334.  return v1;
}
procedure `boolean` `updateTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v7 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4ad348.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L4ad34c.  v1:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L4ad350.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad354.  v3:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad358.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L4ad35c.  v4:= v7.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L4ad360.  v5:= 1I;
  #L4ad362.  call temp:= `calculateTintFilter`(v7, v3, v2, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L4ad368.  v2:= temp @kind object;
  #L4ad36a.  v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L4ad36e.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad372.  v3:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad376.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L4ad37a.  v4:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4ad37e.  v6:= 0I;
  #L4ad380.  call temp:= `calculateTintFilter`(v7, v3, v2, v4, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L4ad386.  v2:= temp @kind object;
  #L4ad388.  v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L4ad38c.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad390.  v3:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` @kind boolean;
  #L4ad394.  if v3 == 0 then goto L4ad3b6;
  #L4ad398.  v3:= v7.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L4ad39c.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad3a0.  call temp:= `getState`(v7) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L4ad3a6.  v4:= temp @kind object;
  #L4ad3a8.  call temp:= `getColorForState`(v2, v4, v6) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L4ad3ae.  v2:= temp;
  #L4ad3b0.  call `setShadowColor`(v3, v2) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.setShadowColor:(I)V` @kind virtual;
  #L4ad3b6.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L4ad3ba.  call temp:= `equals`(v0, v2) @signature `Landroidx/core/util/ObjectsCompat;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4ad3c0.  v0:= temp;
  #L4ad3c2.  if v0 == 0 then goto L4ad3da;
  #L4ad3c6.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L4ad3ca.  call temp:= `equals`(v1, v0) @signature `Landroidx/core/util/ObjectsCompat;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4ad3d0.  v0:= temp;
  #L4ad3d2.  if v0 != 0 then goto L4ad3d8;
  #L4ad3d6.  goto L4ad3da;
  #L4ad3d8.  v5:= 0I;
  #L4ad3da.  return v5;
}
procedure `void` `updateZ`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ae600.  call temp:= `getZ`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @kind virtual;
  #L4ae606.  v0:= temp;
  #L4ae608.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae60c.  v2:= 0.75F;
  #L4ae610.  v2:= v2 * v0 @kind float;
  #L4ae614.  v2:= (`double`) v2 @kind f2d;
  #L4ae616.  call temp:= `ceil`(v2) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L4ae61c.  v2:= temp @kind wide;
  #L4ae61e.  v2:= (`int`) v2 @kind d2i;
  #L4ae620.  v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int` := v2;
  #L4ae624.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae628.  v2:= 0.25F;
  #L4ae62c.  v0:= v0 * v2 @kind float;
  #L4ae630.  v2:= (`double`) v0 @kind f2d;
  #L4ae632.  call temp:= `ceil`(v2) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L4ae638.  v2:= temp @kind wide;
  #L4ae63a.  v0:= (`int`) v2 @kind d2i;
  #L4ae63c.  v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int` := v0;
  #L4ae640.  call temp:= `updateTintFilter`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L4ae646.  call `invalidateSelfIgnoreShape`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae64c.  return @kind void;
}
procedure `void` `calculatePathForSize`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.RectF` v7 @kind object, `android.graphics.Path` v8 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4adb08.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L4adb0c.  v1:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adb10.  v2:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4adb14.  v3:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L4adb18.  v4:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` @kind object;
  #L4adb1c.  v1:= v2 @kind object;
  #L4adb1e.  v2:= v3;
  #L4adb20.  v3:= v7 @kind object;
  #L4adb22.  v5:= v8 @kind object;
  #L4adb24.  call `calculatePath`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;Landroid/graphics/Path;)V` @kind virtual;
  #L4adb2a.  return @kind void;
}
procedure `int` `compositeElevationOverlayIfNeeded`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4ad6a0.  call temp:= `getZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @kind virtual;
  #L4ad6a6.  v0:= temp;
  #L4ad6a8.  call temp:= `getParentAbsoluteElevation`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getParentAbsoluteElevation:()F` @kind virtual;
  #L4ad6ae.  v1:= temp;
  #L4ad6b0.  v0:= v0 + v1 @kind float;
  #L4ad6b2.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad6b6.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L4ad6ba.  if v1 == 0 then goto L4ad6c6;
  #L4ad6be.  call temp:= `compositeOverlayIfNeeded`(v1, v3, v0) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayIfNeeded:(IF)I` @kind virtual;
  #L4ad6c4.  v3:= temp;
  #L4ad6c6.  return v3;
}
procedure `void` `draw`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4adb94.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L4adb98.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L4adb9c.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L4adba2.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L4adba6.  call temp:= `getAlpha`(v0) @signature `Landroid/graphics/Paint;.getAlpha:()I` @kind virtual;
  #L4adbac.  v0:= temp;
  #L4adbae.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L4adbb2.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adbb6.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L4adbba.  call temp:= `modulateAlpha`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @kind static;
  #L4adbc0.  v2:= temp;
  #L4adbc2.  call `setAlpha`(v1, v2) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L4adbc8.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4adbcc.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L4adbd0.  call temp:= `setColorFilter`(v1, v2) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L4adbd6.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4adbda.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adbde.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float`;
  #L4adbe2.  call `setStrokeWidth`(v1, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L4adbe8.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4adbec.  call temp:= `getAlpha`(v1) @signature `Landroid/graphics/Paint;.getAlpha:()I` @kind virtual;
  #L4adbf2.  v1:= temp;
  #L4adbf4.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4adbf8.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adbfc.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L4adc00.  call temp:= `modulateAlpha`(v1, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @kind static;
  #L4adc06.  v3:= temp;
  #L4adc08.  call `setAlpha`(v2, v3) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L4adc0e.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` @kind boolean;
  #L4adc12.  if v2 == 0 then goto L4adc34;
  #L4adc16.  call `calculateStrokePath`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateStrokePath:()V` @kind direct;
  #L4adc1c.  call temp:= `getBoundsAsRectF`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L4adc22.  v2:= temp @kind object;
  #L4adc24.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L4adc28.  call `calculatePath`(v4, v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L4adc2e.  v2:= 0I;
  #L4adc30.  v4.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v2 @kind boolean;
  #L4adc34.  call `maybeDrawCompatShadow`(v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.maybeDrawCompatShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L4adc3a.  call temp:= `hasFill`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasFill:()Z` @kind direct;
  #L4adc40.  v2:= temp;
  #L4adc42.  if v2 == 0 then goto L4adc4c;
  #L4adc46.  call `drawFillShape`(v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawFillShape:(Landroid/graphics/Canvas;)V` @kind direct;
  #L4adc4c.  call temp:= `hasStroke`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @kind direct;
  #L4adc52.  v2:= temp;
  #L4adc54.  if v2 == 0 then goto L4adc5e;
  #L4adc58.  call `drawStrokeShape`(v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawStrokeShape:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L4adc5e.  v5:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L4adc62.  call `setAlpha`(v5, v0) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L4adc68.  v5:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4adc6c.  call `setAlpha`(v5, v1) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L4adc72.  return @kind void;
}
procedure `void` `drawShape`(`com.google.android.material.shape.MaterialShapeDrawable` v7 @kind this, `android.graphics.Canvas` v8 @kind object, `android.graphics.Paint` v9 @kind object, `android.graphics.Path` v10 @kind object, `android.graphics.RectF` v11 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Landroid/graphics/RectF;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4add8c.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4add90.  v5:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4add94.  v1:= v7 @kind object;
  #L4add96.  v2:= v8 @kind object;
  #L4add98.  v3:= v9 @kind object;
  #L4add9a.  v4:= v10 @kind object;
  #L4add9c.  v6:= v11 @kind object;
  #L4add9e.  call `drawShape`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L4adda4.  return @kind void;
}
procedure `void` `drawStrokeShape`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawStrokeShape:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ade00.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L4ade04.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` @kind object;
  #L4ade08.  v4:= v6.`com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4ade0c.  call temp:= `getBoundsInsetByStroke`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @kind direct;
  #L4ade12.  v5:= temp @kind object;
  #L4ade14.  v0:= v6 @kind object;
  #L4ade16.  v1:= v7 @kind object;
  #L4ade18.  call `drawShape`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L4ade1e.  return @kind void;
}
procedure `int` `getAlpha`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad6d8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad6dc.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L4ad6e0.  return v0;
}
procedure `float` `getBottomLeftCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBottomLeftCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad4d0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad4d4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4ad4d8.  call temp:= `getBottomLeftCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L4ad4de.  v0:= temp @kind object;
  #L4ad4e0.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L4ad4e6.  v1:= temp @kind object;
  #L4ad4e8.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L4ad4ee.  v0:= temp;
  #L4ad4f0.  return v0;
}
procedure `float` `getBottomRightCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBottomRightCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad504.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad508.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4ad50c.  call temp:= `getBottomRightCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L4ad512.  v0:= temp @kind object;
  #L4ad514.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L4ad51a.  v1:= temp @kind object;
  #L4ad51c.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L4ad522.  v0:= temp;
  #L4ad524.  return v0;
}
procedure `android.graphics.RectF` `getBoundsAsRectF`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4acee4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L4acee8.  call temp:= `getBounds`(v2) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4aceee.  v1:= temp @kind object;
  #L4acef0.  call `set`(v0, v1) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L4acef6.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L4acefa.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable$ConstantState` `getConstantState`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4acfcc.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4acfd0.  return v0 @kind object;
}
procedure `float` `getElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad538.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad53c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float`;
  #L4ad540.  return v0;
}
procedure `android.content.res.ColorStateList` `getFillColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4acda8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4acdac.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4acdb0.  return v0 @kind object;
}
procedure `float` `getInterpolation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getInterpolation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad554.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad558.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L4ad55c.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad6f4.  v0:= -3I;
  #L4ad6f6.  return v0;
}
procedure `void` `getOutline`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.graphics.Outline` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOutline:(Landroid/graphics/Outline;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ade30.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ade34.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L4ade38.  v1:= 2I;
  #L4ade3a.  if v0 != v1 then goto L4ade40;
  #L4ade3e.  return @kind void;
  #L4ade40.  call temp:= `isRoundRect`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @kind virtual;
  #L4ade46.  v0:= temp;
  #L4ade48.  if v0 == 0 then goto L4ade70;
  #L4ade4c.  call temp:= `getTopLeftCornerResolvedSize`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @kind virtual;
  #L4ade52.  v0:= temp;
  #L4ade54.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ade58.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L4ade5c.  v0:= v0 * v1 @kind float;
  #L4ade60.  call temp:= `getBounds`(v2) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4ade66.  v1:= temp @kind object;
  #L4ade68.  call `setRoundRect`(v3, v1, v0) @signature `Landroid/graphics/Outline;.setRoundRect:(Landroid/graphics/Rect;F)V` @kind virtual;
  #L4ade6e.  return @kind void;
  #L4ade70.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L4ade76.  v0:= temp @kind object;
  #L4ade78.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L4ade7c.  call `calculatePath`(v2, v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L4ade82.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L4ade86.  call temp:= `isConvex`(v0) @signature `Landroid/graphics/Path;.isConvex:()Z` @kind virtual;
  #L4ade8c.  v0:= temp;
  #L4ade8e.  if v0 != 0 then goto L4ade9e;
  #L4ade92.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4ade96.  v1:= 29I;
  #L4ade9a.  if v0 < v1 then goto L4adea8;
  #L4ade9e.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L4adea2.  call `setConvexPath`(v3, v0) @signature `Landroid/graphics/Outline;.setConvexPath:(Landroid/graphics/Path;)V` @kind virtual;
  #L4adea8.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L4ade9e..L4adea8] goto L4adea8;
}
procedure `boolean` `getPadding`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPadding:(Landroid/graphics/Rect;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4acffc.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad000.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L4ad004.  if v0 == 0 then goto L4ad012;
  #L4ad008.  call `set`(v2, v0) @signature `Landroid/graphics/Rect;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L4ad00e.  v2:= 1I;
  #L4ad010.  return v2;
  #L4ad012.  call temp:= `getPadding`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.getPadding:(Landroid/graphics/Rect;)Z` @kind super;
  #L4ad018.  v2:= temp;
  #L4ad01a.  return v2;
}
procedure `android.graphics.Paint$Style` `getPaintStyle`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPaintStyle:()Landroid/graphics/Paint$Style;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ace18.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ace1c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L4ace20.  return v0 @kind object;
}
procedure `float` `getParentAbsoluteElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getParentAbsoluteElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad570.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad574.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float`;
  #L4ad578.  return v0;
}
procedure `void` `getPathForSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 , `int` v4 , `android.graphics.Path` v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPathForSize:(IILandroid/graphics/Path;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4adecc.  v0:= new `android.graphics.RectF`;
  #L4aded0.  v3:= (`float`) v3 @kind i2f;
  #L4aded2.  v4:= (`float`) v4 @kind i2f;
  #L4aded4.  v1:= 0I;
  #L4aded6.  call `<init>`(v0, v1, v1, v3, v4) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L4adedc.  call `calculatePathForSize`(v2, v0, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L4adee2.  return @kind void;
}
procedure `int` `getResolvedTintColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getResolvedTintColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad708.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.resolvedTintColor` @type ^`int`;
  #L4ad70c.  return v0;
}
procedure `float` `getScale`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getScale:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad58c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad590.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L4ad594.  return v0;
}
procedure `int` `getShadowCompatRotation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowCompatRotation:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad720.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad724.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L4ad728.  return v0;
}
procedure `int` `getShadowCompatibilityMode`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowCompatibilityMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad73c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad740.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L4ad744.  return v0;
}
procedure `int` `getShadowElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowElevation:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad758.  call temp:= `getElevation`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L4ad75e.  v0:= temp;
  #L4ad760.  v0:= (`int`) v0 @kind f2i;
  #L4ad762.  return v0;
}
procedure `int` `getShadowOffsetX`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ad774.  v0:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad778.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L4ad77c.  v1:= (`double`) v1 @kind i2d;
  #L4ad77e.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L4ad782.  v3:= (`double`) v0 @kind i2d;
  #L4ad784.  call temp:= `toRadians`(v3) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L4ad78a.  v3:= temp @kind wide;
  #L4ad78c.  call temp:= `sin`(v3) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L4ad792.  v3:= temp @kind wide;
  #L4ad794.  v1:= v1 * v3 @kind double;
  #L4ad798.  v0:= (`int`) v1 @kind d2i;
  #L4ad79a.  return v0;
}
procedure `int` `getShadowOffsetY`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ad7ac.  v0:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad7b0.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L4ad7b4.  v1:= (`double`) v1 @kind i2d;
  #L4ad7b6.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L4ad7ba.  v3:= (`double`) v0 @kind i2d;
  #L4ad7bc.  call temp:= `toRadians`(v3) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L4ad7c2.  v3:= temp @kind wide;
  #L4ad7c4.  call temp:= `cos`(v3) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L4ad7ca.  v3:= temp @kind wide;
  #L4ad7cc.  v1:= v1 * v3 @kind double;
  #L4ad7d0.  v0:= (`int`) v1 @kind d2i;
  #L4ad7d2.  return v0;
}
procedure `int` `getShadowRadius`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad7e4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad7e8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L4ad7ec.  return v0;
}
procedure `int` `getShadowVerticalOffset`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowVerticalOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad800.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad804.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L4ad808.  return v0;
}
procedure `com.google.android.material.shape.ShapeAppearanceModel` `getShapeAppearanceModel`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad458.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad45c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4ad460.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePathModel` `getShapedViewModel`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapedViewModel:()Lcom/google/android/material/shape/ShapePathModel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad4a4.  call temp:= `getShapeAppearanceModel`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L4ad4aa.  v0:= temp @kind object;
  #L4ad4ac.  v1:= instanceof @variable v0 @type ^`com.google.android.material.shape.ShapePathModel` @kind boolean;
  #L4ad4b0.  if v1 == 0 then goto L4ad4ba;
  #L4ad4b4.  v0:= (`com.google.android.material.shape.ShapePathModel`) v0 @kind object;
  #L4ad4b8.  goto L4ad4bc;
  #L4ad4ba.  v0:= 0I;
  #L4ad4bc.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getStrokeColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4acdc4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4acdc8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4acdcc.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getStrokeTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4acde0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4acde4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L4acde8.  return v0 @kind object;
}
procedure `float` `getStrokeWidth`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad5dc.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad5e0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float`;
  #L4ad5e4.  return v0;
}
procedure `android.content.res.ColorStateList` `getTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4acdfc.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ace00.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ace04.  return v0 @kind object;
}
procedure `float` `getTopLeftCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad5f8.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad5fc.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4ad600.  call temp:= `getTopLeftCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L4ad606.  v0:= temp @kind object;
  #L4ad608.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L4ad60e.  v1:= temp @kind object;
  #L4ad610.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L4ad616.  v0:= temp;
  #L4ad618.  return v0;
}
procedure `float` `getTopRightCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopRightCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad62c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad630.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4ad634.  call temp:= `getTopRightCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L4ad63a.  v0:= temp @kind object;
  #L4ad63c.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L4ad642.  v1:= temp @kind object;
  #L4ad644.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L4ad64a.  v0:= temp;
  #L4ad64c.  return v0;
}
procedure `float` `getTranslationZ`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTranslationZ:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad660.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad664.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float`;
  #L4ad668.  return v0;
}
procedure `android.graphics.Region` `getTransparentRegion`(`com.google.android.material.shape.MaterialShapeDrawable` v3 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTransparentRegion:()Landroid/graphics/Region;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4acf48.  call temp:= `getBounds`(v3) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4acf4e.  v0:= temp @kind object;
  #L4acf50.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L4acf54.  call temp:= `set`(v1, v0) @signature `Landroid/graphics/Region;.set:(Landroid/graphics/Rect;)Z` @kind virtual;
  #L4acf5a.  call temp:= `getBoundsAsRectF`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L4acf60.  v0:= temp @kind object;
  #L4acf62.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L4acf66.  call `calculatePath`(v3, v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L4acf6c.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` @kind object;
  #L4acf70.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L4acf74.  v2:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L4acf78.  call temp:= `setPath`(v0, v1, v2) @signature `Landroid/graphics/Region;.setPath:(Landroid/graphics/Path;Landroid/graphics/Region;)Z` @kind virtual;
  #L4acf7e.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L4acf82.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` @kind object;
  #L4acf86.  v2:= `@@android.graphics.Region$Op.DIFFERENCE` @type ^`android.graphics.Region$Op` @kind object;
  #L4acf8a.  call temp:= `op`(v0, v1, v2) @signature `Landroid/graphics/Region;.op:(Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z` @kind virtual;
  #L4acf90.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L4acf94.  return v0 @kind object;
}
procedure `float` `getZ`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad67c.  call temp:= `getElevation`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L4ad682.  v0:= temp;
  #L4ad684.  call temp:= `getTranslationZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTranslationZ:()F` @kind virtual;
  #L4ad68a.  v1:= temp;
  #L4ad68c.  v0:= v0 + v1 @kind float;
  #L4ad68e.  return v0;
}
procedure `void` `initializeElevationOverlay`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4adef4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4adef8.  v1:= new `com.google.android.material.elevation.ElevationOverlayProvider`;
  #L4adefc.  call `<init>`(v1, v3) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L4adf02.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` := v1 @kind object;
  #L4adf06.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L4adf0c.  return @kind void;
}
procedure `void` `invalidateSelf`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4adf20.  v0:= 1I;
  #L4adf22.  v1.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v0 @kind boolean;
  #L4adf26.  call `invalidateSelf`(v1) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind super;
  #L4adf2c.  return @kind void;
}
procedure `boolean` `isElevationOverlayEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isElevationOverlayEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad0e8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad0ec.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L4ad0f0.  if v0 == 0 then goto L4ad104;
  #L4ad0f4.  call temp:= `isThemeElevationOverlayEnabled`(v0) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.isThemeElevationOverlayEnabled:()Z` @kind virtual;
  #L4ad0fa.  v0:= temp;
  #L4ad0fc.  if v0 == 0 then goto L4ad104;
  #L4ad100.  v0:= 1I;
  #L4ad102.  goto L4ad106;
  #L4ad104.  v0:= 0I;
  #L4ad106.  return v0;
}
procedure `boolean` `isElevationOverlayInitialized`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isElevationOverlayInitialized:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad118.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad11c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L4ad120.  if v0 == 0 then goto L4ad128;
  #L4ad124.  v0:= 1I;
  #L4ad126.  goto L4ad12a;
  #L4ad128.  v0:= 0I;
  #L4ad12a.  return v0;
}
procedure `boolean` `isPointInTransparentRegion`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isPointInTransparentRegion:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad13c.  call temp:= `getTransparentRegion`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTransparentRegion:()Landroid/graphics/Region;` @kind virtual;
  #L4ad142.  v0:= temp @kind object;
  #L4ad144.  call temp:= `contains`(v0, v2, v3) @signature `Landroid/graphics/Region;.contains:(II)Z` @kind virtual;
  #L4ad14a.  v2:= temp;
  #L4ad14c.  return v2;
}
procedure `boolean` `isRoundRect`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad160.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad164.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4ad168.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L4ad16e.  v1:= temp @kind object;
  #L4ad170.  call temp:= `isRoundRect`(v0, v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.isRoundRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L4ad176.  v0:= temp;
  #L4ad178.  return v0;
}
procedure `boolean` `isShadowEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isShadowEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad18c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad190.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L4ad194.  if v0 == 0 then goto L4ad1a4;
  #L4ad198.  v1:= 2I;
  #L4ad19a.  if v0 != v1 then goto L4ad1a0;
  #L4ad19e.  goto L4ad1a4;
  #L4ad1a0.  v0:= 0I;
  #L4ad1a2.  goto L4ad1a6;
  #L4ad1a4.  v0:= 1I;
  #L4ad1a6.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ad1b8.  call temp:= `isStateful`(v1) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind super;
  #L4ad1be.  v0:= temp;
  #L4ad1c0.  if v0 != 0 then goto L4ad22a;
  #L4ad1c4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad1c8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad1cc.  if v0 == 0 then goto L4ad1dc;
  #L4ad1d0.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L4ad1d6.  v0:= temp;
  #L4ad1d8.  if v0 != 0 then goto L4ad22a;
  #L4ad1dc.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad1e0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad1e4.  if v0 == 0 then goto L4ad1f4;
  #L4ad1e8.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L4ad1ee.  v0:= temp;
  #L4ad1f0.  if v0 != 0 then goto L4ad22a;
  #L4ad1f4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad1f8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad1fc.  if v0 == 0 then goto L4ad20c;
  #L4ad200.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L4ad206.  v0:= temp;
  #L4ad208.  if v0 != 0 then goto L4ad22a;
  #L4ad20c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ad210.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ad214.  if v0 == 0 then goto L4ad226;
  #L4ad218.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L4ad21e.  v0:= temp;
  #L4ad220.  if v0 == 0 then goto L4ad226;
  #L4ad224.  goto L4ad22a;
  #L4ad226.  v0:= 0I;
  #L4ad228.  goto L4ad22c;
  #L4ad22a.  v0:= 1I;
  #L4ad22c.  return v0;
}
procedure `android.graphics.drawable.Drawable` `mutate`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.mutate:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4acfa8.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState`;
  #L4acfac.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4acfb0.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L4acfb6.  v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` := v0 @kind object;
  #L4acfba.  return v2 @kind object;
}
procedure `void` `onBoundsChange`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4ae0a0.  v0:= 1I;
  #L4ae0a2.  v1.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v0 @kind boolean;
  #L4ae0a6.  call `onBoundsChange`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @kind super;
  #L4ae0ac.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4ad240.  call temp:= `updateColorsForState`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @kind direct;
  #L4ad246.  v2:= temp;
  #L4ad248.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L4ad24e.  v0:= temp;
  #L4ad250.  if v2 != 0 then goto L4ad25e;
  #L4ad254.  if v0 == 0 then goto L4ad25a;
  #L4ad258.  goto L4ad25e;
  #L4ad25a.  v2:= 0I;
  #L4ad25c.  goto L4ad260;
  #L4ad25e.  v2:= 1I;
  #L4ad260.  if v2 == 0 then goto L4ad26a;
  #L4ad264.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L4ad26a.  return v2;
}
procedure `boolean` `requiresCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.requiresCompatShadow:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ad27c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4ad280.  call temp:= `isRoundRect`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @kind virtual;
  #L4ad286.  v1:= temp;
  #L4ad288.  if v1 != 0 then goto L4ad2a8;
  #L4ad28c.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L4ad290.  call temp:= `isConvex`(v1) @signature `Landroid/graphics/Path;.isConvex:()Z` @kind virtual;
  #L4ad296.  v1:= temp;
  #L4ad298.  if v1 != 0 then goto L4ad2a8;
  #L4ad29c.  v1:= 29I;
  #L4ad2a0.  if v0 >= v1 then goto L4ad2a8;
  #L4ad2a4.  v0:= 1I;
  #L4ad2a6.  goto L4ad2aa;
  #L4ad2a8.  v0:= 0I;
  #L4ad2aa.  return v0;
}
procedure `void` `setAlpha`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae0ec.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae0f0.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L4ae0f4.  if v1 == v3 then goto L4ae102;
  #L4ae0f8.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int` := v3;
  #L4ae0fc.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae102.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae114.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae118.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.colorFilter` @type ^`android.graphics.ColorFilter` := v2 @kind object;
  #L4ae11c.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae122.  return @kind void;
}
procedure `void` `setCornerSize`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae15c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae160.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4ae164.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(F)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L4ae16a.  v2:= temp @kind object;
  #L4ae16c.  call `setShapeAppearanceModel`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L4ae172.  return @kind void;
}
procedure `void` `setCornerSize`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `com.google.android.material.shape.CornerSize` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(Lcom/google/android/material/shape/CornerSize;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae134.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae138.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L4ae13c.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(Lcom/google/android/material/shape/CornerSize;)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L4ae142.  v2:= temp @kind object;
  #L4ae144.  call `setShapeAppearanceModel`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L4ae14a.  return @kind void;
}
procedure `void` `setEdgeIntersectionCheckEnable`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setEdgeIntersectionCheckEnable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae184.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L4ae188.  call `setEdgeIntersectionCheckEnable`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.setEdgeIntersectionCheckEnable:(Z)V` @kind virtual;
  #L4ae18e.  return @kind void;
}
procedure `void` `setElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae1a0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae1a4.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float`;
  #L4ae1a8.  v1:= fcmpl(v1, v3);
  #L4ae1ac.  if v1 == 0 then goto L4ae1ba;
  #L4ae1b0.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float` := v3;
  #L4ae1b4.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L4ae1ba.  return @kind void;
}
procedure `void` `setFillColor`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae1cc.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae1d0.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ae1d4.  if v1 == v3 then goto L4ae1ea;
  #L4ae1d8.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L4ae1dc.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L4ae1e2.  v3:= temp @kind object;
  #L4ae1e4.  call temp:= `onStateChange`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind virtual;
  #L4ae1ea.  return @kind void;
}
procedure `void` `setInterpolation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setInterpolation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae1fc.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae200.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L4ae204.  v1:= fcmpl(v1, v3);
  #L4ae208.  if v1 == 0 then goto L4ae21c;
  #L4ae20c.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float` := v3;
  #L4ae210.  v3:= 1I;
  #L4ae212.  v2.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v3 @kind boolean;
  #L4ae216.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L4ae21c.  return @kind void;
}
procedure `void` `setPadding`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setPadding:(IIII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae230.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae234.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L4ae238.  if v1 != 0 then goto L4ae24a;
  #L4ae23c.  v1:= new `android.graphics.Rect`;
  #L4ae240.  call `<init>`(v1) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L4ae246.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` := v1 @kind object;
  #L4ae24a.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae24e.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L4ae252.  call `set`(v0, v3, v4, v5, v6) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L4ae258.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L4ae25e.  return @kind void;
}
procedure `void` `setPaintStyle`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Paint$Style` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setPaintStyle:(Landroid/graphics/Paint$Style;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae270.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae274.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` := v2 @kind object;
  #L4ae278.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae27e.  return @kind void;
}
procedure `void` `setParentAbsoluteElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setParentAbsoluteElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae290.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae294.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float`;
  #L4ae298.  v1:= fcmpl(v1, v3);
  #L4ae29c.  if v1 == 0 then goto L4ae2aa;
  #L4ae2a0.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float` := v3;
  #L4ae2a4.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L4ae2aa.  return @kind void;
}
procedure `void` `setScale`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setScale:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae2bc.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae2c0.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L4ae2c4.  v1:= fcmpl(v1, v3);
  #L4ae2c8.  if v1 == 0 then goto L4ae2d6;
  #L4ae2cc.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float` := v3;
  #L4ae2d0.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L4ae2d6.  return @kind void;
}
procedure `void` `setShadowBitmapDrawingEnable`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowBitmapDrawingEnable:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L4ae2e8.  v0.`com.google.android.material.shape.MaterialShapeDrawable.shadowBitmapDrawingEnable` @type ^`boolean` := v1 @kind boolean;
  #L4ae2ec.  return @kind void;
}
procedure `void` `setShadowColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae300.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L4ae304.  call `setShadowColor`(v0, v2) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.setShadowColor:(I)V` @kind virtual;
  #L4ae30a.  v2:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae30e.  v0:= 0I;
  #L4ae310.  v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` := v0 @kind boolean;
  #L4ae314.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae31a.  return @kind void;
}
procedure `void` `setShadowCompatRotation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatRotation:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae32c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae330.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L4ae334.  if v1 == v3 then goto L4ae342;
  #L4ae338.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int` := v3;
  #L4ae33c.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae342.  return @kind void;
}
procedure `void` `setShadowCompatibilityMode`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae354.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae358.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L4ae35c.  if v1 == v3 then goto L4ae36a;
  #L4ae360.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int` := v3;
  #L4ae364.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae36a.  return @kind void;
}
procedure `void` `setShadowElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowElevation:(I)V` @AccessFlag PUBLIC {
    temp;

  #L4ae37c.  v1:= (`float`) v1 @kind i2f;
  #L4ae37e.  call `setElevation`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L4ae384.  return @kind void;
}
procedure `void` `setShadowEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L4ae398.  v1:= v1 ^~ 1;
  #L4ae39c.  call `setShadowCompatibilityMode`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @kind virtual;
  #L4ae3a2.  return @kind void;
}
procedure `void` `setShadowRadius`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowRadius:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae3b4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae3b8.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int` := v2;
  #L4ae3bc.  return @kind void;
}
procedure `void` `setShadowVerticalOffset`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowVerticalOffset:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae3d0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae3d4.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L4ae3d8.  if v1 == v3 then goto L4ae3e6;
  #L4ae3dc.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int` := v3;
  #L4ae3e0.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae3e6.  return @kind void;
}
procedure `void` `setShapeAppearanceModel`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae3f8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae3fc.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` := v2 @kind object;
  #L4ae400.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L4ae406.  return @kind void;
}
procedure `void` `setShapedViewModel`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.ShapePathModel` v1 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapedViewModel:(Lcom/google/android/material/shape/ShapePathModel;)V` @AccessFlag PUBLIC {
    temp;

  #L4ae418.  call `setShapeAppearanceModel`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L4ae41e.  return @kind void;
}
procedure `void` `setStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `float` v1 , `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStroke:(FI)V` @AccessFlag PUBLIC {
    temp;

  #L4ae450.  call `setStrokeWidth`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L4ae456.  call temp:= `valueOf`(v2) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L4ae45c.  v1:= temp @kind object;
  #L4ae45e.  call `setStrokeColor`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4ae464.  return @kind void;
}
procedure `void` `setStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `float` v1 , `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStroke:(FLandroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L4ae430.  call `setStrokeWidth`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L4ae436.  call `setStrokeColor`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4ae43c.  return @kind void;
}
procedure `void` `setStrokeColor`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae478.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae47c.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4ae480.  if v1 == v3 then goto L4ae496;
  #L4ae484.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L4ae488.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L4ae48e.  v3:= temp @kind object;
  #L4ae490.  call temp:= `onStateChange`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind virtual;
  #L4ae496.  return @kind void;
}
procedure `void` `setStrokeTint`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(I)V` @AccessFlag PUBLIC {
    temp;

  #L4ae4d0.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L4ae4d6.  v1:= temp @kind object;
  #L4ae4d8.  call `setStrokeTint`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4ae4de.  return @kind void;
}
procedure `void` `setStrokeTint`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae4a8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae4ac.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L4ae4b0.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L4ae4b6.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae4bc.  return @kind void;
}
procedure `void` `setStrokeWidth`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae4f0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae4f4.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float` := v2;
  #L4ae4f8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L4ae4fe.  return @kind void;
}
procedure `void` `setTint`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTint:(I)V` @AccessFlag PUBLIC {
    temp;

  #L4ae510.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L4ae516.  v1:= temp @kind object;
  #L4ae518.  call `setTintList`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4ae51e.  return @kind void;
}
procedure `void` `setTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae530.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae534.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L4ae538.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L4ae53e.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae544.  return @kind void;
}
procedure `void` `setTintMode`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.graphics.PorterDuff$Mode` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae558.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae55c.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L4ae560.  if v1 == v3 then goto L4ae574;
  #L4ae564.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v3 @kind object;
  #L4ae568.  call temp:= `updateTintFilter`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L4ae56e.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L4ae574.  return @kind void;
}
procedure `void` `setTranslationZ`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTranslationZ:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae588.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae58c.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float`;
  #L4ae590.  v1:= fcmpl(v1, v3);
  #L4ae594.  if v1 == 0 then goto L4ae5a2;
  #L4ae598.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float` := v3;
  #L4ae59c.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L4ae5a2.  return @kind void;
}
procedure `void` `setUseTintColorForShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `boolean` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setUseTintColorForShadow:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae5b4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L4ae5b8.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` @kind boolean;
  #L4ae5bc.  if v1 == v3 then goto L4ae5ca;
  #L4ae5c0.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` := v3 @kind boolean;
  #L4ae5c4.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L4ae5ca.  return @kind void;
}
procedure `void` `setZ`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setZ:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae5dc.  call temp:= `getElevation`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L4ae5e2.  v0:= temp;
  #L4ae5e4.  v2:= v2 - v0 @kind float;
  #L4ae5e6.  call `setTranslationZ`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTranslationZ:(F)V` @kind virtual;
  #L4ae5ec.  return @kind void;
}
