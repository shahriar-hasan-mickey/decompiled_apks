record `com.google.android.material.slider.BaseSlider` @kind class @AccessFlag ABSTRACT extends `android.view.View` @kind class {
  `com.google.android.material.slider.BaseSlider$AccessibilityEventSender` `com.google.android.material.slider.BaseSlider.accessibilityEventSender` @AccessFlag PRIVATE;
  `com.google.android.material.slider.BaseSlider$AccessibilityHelper` `com.google.android.material.slider.BaseSlider.accessibilityHelper` @AccessFlag PRIVATE_FINAL;
  `android.view.accessibility.AccessibilityManager` `com.google.android.material.slider.BaseSlider.accessibilityManager` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.activeThumbIdx` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.activeTicksPaint` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.activeTrackPaint` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.google.android.material.slider.BaseSlider.changeListeners` @AccessFlag PRIVATE_FINAL;
  `android.graphics.drawable.Drawable` `com.google.android.material.slider.BaseSlider.customThumbDrawable` @AccessFlag PRIVATE;
  `java.util.List` `com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues` @AccessFlag PRIVATE;
  `com.google.android.material.shape.MaterialShapeDrawable` `com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.defaultThumbRadius` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.defaultTrackHeight` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.slider.BaseSlider.dirtyConfig` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.focusedThumbIdx` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.slider.BaseSlider.forceDrawCompatHalo` @AccessFlag PRIVATE;
  `com.google.android.material.slider.LabelFormatter` `com.google.android.material.slider.BaseSlider.formatter` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.haloColor` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.haloPaint` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.haloRadius` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.slider.BaseSlider.isLongPress` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.labelBehavior` @AccessFlag PRIVATE;
  `com.google.android.material.slider.BaseSlider$TooltipDrawableFactory` `com.google.android.material.slider.BaseSlider.labelMaker` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.labelPadding` @AccessFlag PRIVATE;
  `java.util.List` `com.google.android.material.slider.BaseSlider.labels` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @AccessFlag PRIVATE;
  `android.animation.ValueAnimator` `com.google.android.material.slider.BaseSlider.labelsInAnimator` @AccessFlag PRIVATE;
  `android.animation.ValueAnimator` `com.google.android.material.slider.BaseSlider.labelsOutAnimator` @AccessFlag PRIVATE;
  `android.view.MotionEvent` `com.google.android.material.slider.BaseSlider.lastEvent` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.minTrackSidePadding` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.minWidgetHeight` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.scaledTouchSlop` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.separationUnit` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.stepSize` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.slider.BaseSlider.thumbIsPressed` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.slider.BaseSlider.thumbPaint` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.slider.BaseSlider.thumbRadius` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.tickColorActive` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.tickColorInactive` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.slider.BaseSlider.tickVisible` @AccessFlag PRIVATE;
  `float`[] `com.google.android.material.slider.BaseSlider.ticksCoordinates` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.touchDownX` @AccessFlag PRIVATE;
  `java.util.List` `com.google.android.material.slider.BaseSlider.touchListeners` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.slider.BaseSlider.touchPosition` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.trackColorActive` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.slider.BaseSlider.trackColorInactive` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackHeight` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackSidePadding` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.trackWidth` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.valueFrom` @AccessFlag PRIVATE;
  `float` `com.google.android.material.slider.BaseSlider.valueTo` @AccessFlag PRIVATE;
  `java.util.ArrayList` `com.google.android.material.slider.BaseSlider.values` @AccessFlag PRIVATE;
  `int` `com.google.android.material.slider.BaseSlider.widgetHeight` @AccessFlag PRIVATE;
}
global `int` `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_DISCRETE_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_MIN_SEPARATION` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_MIN_SEPARATION_STEP_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_MIN_SEPARATION_STEP_SIZE_UNIT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_STEP_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_VALUE_FROM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.EXCEPTION_ILLEGAL_VALUE_TO` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.HALO_ALPHA` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.android.material.slider.BaseSlider.LABEL_ANIMATION_ENTER_DURATION` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.android.material.slider.BaseSlider.LABEL_ANIMATION_EXIT_DURATION` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `double` `@@com.google.android.material.slider.BaseSlider.THRESHOLD` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.TIMEOUT_SEND_ACCESSIBILITY_EVENT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.UNIT_PX` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.android.material.slider.BaseSlider.UNIT_VALUE` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.slider.BaseSlider.WARNING_FLOATING_POINT_ERROR` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/slider/BaseSlider;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b3004.  v0:= constclass @type ^`com.google.android.material.slider.BaseSlider` @kind object;
  #L4b3008.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L4b300e.  v0:= temp @kind object;
  #L4b3010.  `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` := v0 @kind object;
  #L4b3014.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Slider` @type ^`int`;
  #L4b3018.  `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @type ^`int` := v0;
  #L4b301c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b3030.  v0:= 0I;
  #L4b3032.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L4b3038.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b304c.  v0:= `@@com.google.android.material.R$attr.sliderStyle` @type ^`int`;
  #L4b3050.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L4b3056.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `android.content.Context` v6 @kind object, `android.util.AttributeSet` v7 @kind object, `int` v8 ) @signature `Lcom/google/android/material/slider/BaseSlider;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b3068.  v0:= `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @type ^`int`;
  #L4b306c.  call temp:= `wrap`(v6, v7, v8, v0) @signature `Lcom/google/android/material/theme/overlay/MaterialThemeOverlay;.wrap:(Landroid/content/Context;Landroid/util/AttributeSet;II)Landroid/content/Context;` @kind static;
  #L4b3072.  v6:= temp @kind object;
  #L4b3074.  call `<init>`(v5, v6, v7, v8) @signature `Landroid/view/View;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L4b307a.  v6:= new `java.util.ArrayList`;
  #L4b307e.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4b3084.  v5.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` := v6 @kind object;
  #L4b3088.  v6:= new `java.util.ArrayList`;
  #L4b308c.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4b3092.  v5.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` := v6 @kind object;
  #L4b3096.  v6:= new `java.util.ArrayList`;
  #L4b309a.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4b30a0.  v5.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` := v6 @kind object;
  #L4b30a4.  v6:= 0I;
  #L4b30a6.  v5.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v6 @kind boolean;
  #L4b30aa.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v6 @kind boolean;
  #L4b30ae.  v0:= new `java.util.ArrayList`;
  #L4b30b2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4b30b8.  v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` := v0 @kind object;
  #L4b30bc.  v0:= -1I;
  #L4b30be.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v0;
  #L4b30c2.  v5.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v0;
  #L4b30c6.  v0:= 0I;
  #L4b30c8.  v5.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v0;
  #L4b30cc.  v0:= 1I;
  #L4b30ce.  v5.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` := v0 @kind boolean;
  #L4b30d2.  v5.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` := v6 @kind boolean;
  #L4b30d6.  v1:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L4b30da.  call `<init>`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @kind direct;
  #L4b30e0.  v5.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` := v1 @kind object;
  #L4b30e4.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4b30ea.  v2:= temp @kind object;
  #L4b30ec.  v5.`com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues` @type ^`java.util.List` := v2 @kind object;
  #L4b30f0.  v5.`com.google.android.material.slider.BaseSlider.separationUnit` @type ^`int` := v6;
  #L4b30f4.  call temp:= `getContext`(v5) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L4b30fa.  v6:= temp @kind object;
  #L4b30fc.  v2:= new `android.graphics.Paint`;
  #L4b3100.  call `<init>`(v2) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L4b3106.  v5.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L4b310a.  v3:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L4b310e.  call `setStyle`(v2, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L4b3114.  v3:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L4b3118.  call `setStrokeCap`(v2, v3) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L4b311e.  v2:= new `android.graphics.Paint`;
  #L4b3122.  call `<init>`(v2) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L4b3128.  v5.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L4b312c.  v3:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L4b3130.  call `setStyle`(v2, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L4b3136.  v3:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L4b313a.  call `setStrokeCap`(v2, v3) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L4b3140.  v2:= new `android.graphics.Paint`;
  #L4b3144.  call `<init>`(v2, v0) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L4b314a.  v5.`com.google.android.material.slider.BaseSlider.thumbPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L4b314e.  v3:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L4b3152.  call `setStyle`(v2, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L4b3158.  v3:= new `android.graphics.PorterDuffXfermode`;
  #L4b315c.  v4:= `@@android.graphics.PorterDuff$Mode.CLEAR` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L4b3160.  call `<init>`(v3, v4) @signature `Landroid/graphics/PorterDuffXfermode;.<init>:(Landroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L4b3166.  call temp:= `setXfermode`(v2, v3) @signature `Landroid/graphics/Paint;.setXfermode:(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;` @kind virtual;
  #L4b316c.  v2:= new `android.graphics.Paint`;
  #L4b3170.  call `<init>`(v2, v0) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L4b3176.  v5.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L4b317a.  v3:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L4b317e.  call `setStyle`(v2, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L4b3184.  v2:= new `android.graphics.Paint`;
  #L4b3188.  call `<init>`(v2) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L4b318e.  v5.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L4b3192.  v3:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L4b3196.  call `setStyle`(v2, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L4b319c.  v3:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L4b31a0.  call `setStrokeCap`(v2, v3) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L4b31a6.  v2:= new `android.graphics.Paint`;
  #L4b31aa.  call `<init>`(v2) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L4b31b0.  v5.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L4b31b4.  v3:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L4b31b8.  call `setStyle`(v2, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L4b31be.  v3:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L4b31c2.  call `setStrokeCap`(v2, v3) @signature `Landroid/graphics/Paint;.setStrokeCap:(Landroid/graphics/Paint$Cap;)V` @kind virtual;
  #L4b31c8.  call temp:= `getResources`(v6) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4b31ce.  v2:= temp @kind object;
  #L4b31d0.  call `loadResources`(v5, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.loadResources:(Landroid/content/res/Resources;)V` @kind direct;
  #L4b31d6.  v2:= new `com.google.android.material.slider.BaseSlider$1`;
  #L4b31da.  call `<init>`(v2, v5, v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider$1;.<init>:(Lcom/google/android/material/slider/BaseSlider;Landroid/util/AttributeSet;I)V` @kind direct;
  #L4b31e0.  v5.`com.google.android.material.slider.BaseSlider.labelMaker` @type ^`com.google.android.material.slider.BaseSlider$TooltipDrawableFactory` := v2 @kind object;
  #L4b31e4.  call `processAttributes`(v5, v6, v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.processAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L4b31ea.  call `setFocusable`(v5, v0) @signature `Landroid/view/View;.setFocusable:(Z)V` @kind virtual;
  #L4b31f0.  call `setClickable`(v5, v0) @signature `Landroid/view/View;.setClickable:(Z)V` @kind virtual;
  #L4b31f6.  v7:= 2I;
  #L4b31f8.  call `setShadowCompatibilityMode`(v1, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @kind virtual;
  #L4b31fe.  call temp:= `get`(v6) @signature `Landroid/view/ViewConfiguration;.get:(Landroid/content/Context;)Landroid/view/ViewConfiguration;` @kind static;
  #L4b3204.  v6:= temp @kind object;
  #L4b3206.  call temp:= `getScaledTouchSlop`(v6) @signature `Landroid/view/ViewConfiguration;.getScaledTouchSlop:()I` @kind virtual;
  #L4b320c.  v6:= temp;
  #L4b320e.  v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int` := v6;
  #L4b3212.  v6:= new `com.google.android.material.slider.BaseSlider$AccessibilityHelper`;
  #L4b3216.  call `<init>`(v6, v5) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;.<init>:(Lcom/google/android/material/slider/BaseSlider;)V` @kind direct;
  #L4b321c.  v5.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` := v6 @kind object;
  #L4b3220.  call `setAccessibilityDelegate`(v5, v6) @signature `Landroidx/core/view/ViewCompat;.setAccessibilityDelegate:(Landroid/view/View;Landroidx/core/view/AccessibilityDelegateCompat;)V` @kind static;
  #L4b3226.  call temp:= `getContext`(v5) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L4b322c.  v6:= temp @kind object;
  #L4b322e.  v7:= "accessibility" @kind object;
  #L4b3232.  call temp:= `getSystemService`(v6, v7) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L4b3238.  v6:= temp @kind object;
  #L4b323a.  v6:= (`android.view.accessibility.AccessibilityManager`) v6 @kind object;
  #L4b323e.  v5.`com.google.android.material.slider.BaseSlider.accessibilityManager` @type ^`android.view.accessibility.AccessibilityManager` := v6 @kind object;
  #L4b3242.  return @kind void;
}
procedure `com.google.android.material.tooltip.TooltipDrawable` `access$000`(`android.content.Context` v0 @kind object, `android.content.res.TypedArray` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.access$000:(Landroid/content/Context;Landroid/content/res/TypedArray;)Lcom/google/android/material/tooltip/TooltipDrawable;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b27dc.  call temp:= `parseLabelDrawable`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.parseLabelDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;)Lcom/google/android/material/tooltip/TooltipDrawable;` @kind static;
  #L4b27e2.  v0:= temp @kind object;
  #L4b27e4.  return v0 @kind object;
}
procedure `java.util.List` `access$100`(`com.google.android.material.slider.BaseSlider` v0 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.access$100:(Lcom/google/android/material/slider/BaseSlider;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b2fcc.  v0:= v0.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b2fd0.  return v0 @kind object;
}
procedure `com.google.android.material.slider.BaseSlider$AccessibilityHelper` `access$300`(`com.google.android.material.slider.BaseSlider` v0 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.access$300:(Lcom/google/android/material/slider/BaseSlider;)Lcom/google/android/material/slider/BaseSlider$AccessibilityHelper;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b27c4.  v0:= v0.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L4b27c8.  return v0 @kind object;
}
procedure `java.lang.String` `access$500`(`com.google.android.material.slider.BaseSlider` v0 @kind object, `float` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.access$500:(Lcom/google/android/material/slider/BaseSlider;F)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b2f50.  call temp:= `formatValue`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.formatValue:(F)Ljava/lang/String;` @kind direct;
  #L4b2f56.  v0:= temp @kind object;
  #L4b2f58.  return v0 @kind object;
}
procedure `boolean` `access$600`(`com.google.android.material.slider.BaseSlider` v0 @kind object, `int` v1 , `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.access$600:(Lcom/google/android/material/slider/BaseSlider;IF)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b1ef4.  call temp:= `snapThumbToValue`(v0, v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.snapThumbToValue:(IF)Z` @kind direct;
  #L4b1efa.  v0:= temp;
  #L4b1efc.  return v0;
}
procedure `void` `access$700`(`com.google.android.material.slider.BaseSlider` v0 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.access$700:(Lcom/google/android/material/slider/BaseSlider;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b3254.  call `updateHaloHotspot`(v0) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L4b325a.  return @kind void;
}
procedure `float` `access$800`(`com.google.android.material.slider.BaseSlider` v0 @kind object, `int` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.access$800:(Lcom/google/android/material/slider/BaseSlider;I)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b2870.  call temp:= `calculateStepIncrement`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:(I)F` @kind direct;
  #L4b2876.  v0:= temp;
  #L4b2878.  return v0;
}
procedure `void` `adjustCustomThumbDrawableBounds`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `android.graphics.drawable.Drawable` v6 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.adjustCustomThumbDrawableBounds:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b32a4.  v0:= v5.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4b32a8.  v0:= v0 * 2;
  #L4b32ac.  call temp:= `getIntrinsicWidth`(v6) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicWidth:()I` @kind virtual;
  #L4b32b2.  v1:= temp;
  #L4b32b4.  call temp:= `getIntrinsicHeight`(v6) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicHeight:()I` @kind virtual;
  #L4b32ba.  v2:= temp;
  #L4b32bc.  v3:= -1I;
  #L4b32be.  v4:= 0I;
  #L4b32c0.  if v1 != v3 then goto L4b32d0;
  #L4b32c4.  if v2 != v3 then goto L4b32d0;
  #L4b32c8.  call `setBounds`(v6, v4, v4, v0, v0) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L4b32ce.  goto L4b32f4;
  #L4b32d0.  v0:= (`float`) v0 @kind i2f;
  #L4b32d2.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4b32d8.  v3:= temp;
  #L4b32da.  v3:= (`float`) v3 @kind i2f;
  #L4b32dc.  v0:= v0 / v3 @kind float;
  #L4b32de.  v1:= (`float`) v1 @kind i2f;
  #L4b32e0.  v1:= v1 * v0 @kind float;
  #L4b32e4.  v1:= (`int`) v1 @kind f2i;
  #L4b32e6.  v2:= (`float`) v2 @kind i2f;
  #L4b32e8.  v2:= v2 * v0 @kind float;
  #L4b32ec.  v0:= (`int`) v2 @kind f2i;
  #L4b32ee.  call `setBounds`(v6, v4, v4, v1, v0) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L4b32f4.  return @kind void;
}
procedure `void` `attachLabelToContentView`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.tooltip.TooltipDrawable` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.attachLabelToContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b3308.  call temp:= `getContentView`(v1) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @kind static;
  #L4b330e.  v0:= temp @kind object;
  #L4b3310.  call `setRelativeToView`(v2, v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.setRelativeToView:(Landroid/view/View;)V` @kind virtual;
  #L4b3316.  return @kind void;
}
procedure `java.lang.Float` `calculateIncrementForKey`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateIncrementForKey:(I)Ljava/lang/Float;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b2eac.  v0:= v2.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` @kind boolean;
  #L4b2eb0.  if v0 == 0 then goto L4b2ec2;
  #L4b2eb4.  v0:= 20I;
  #L4b2eb8.  call temp:= `calculateStepIncrement`(v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:(I)F` @kind direct;
  #L4b2ebe.  v0:= temp;
  #L4b2ec0.  goto L4b2eca;
  #L4b2ec2.  call temp:= `calculateStepIncrement`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:()F` @kind direct;
  #L4b2ec8.  v0:= temp;
  #L4b2eca.  v1:= 21I;
  #L4b2ece.  if v3 == v1 then goto L4b2f24;
  #L4b2ed2.  v1:= 22I;
  #L4b2ed6.  if v3 == v1 then goto L4b2f0c;
  #L4b2eda.  v1:= 69I;
  #L4b2ede.  if v3 == v1 then goto L4b2f00;
  #L4b2ee2.  v1:= 70I;
  #L4b2ee6.  if v3 == v1 then goto L4b2ef6;
  #L4b2eea.  v1:= 81I;
  #L4b2eee.  if v3 == v1 then goto L4b2ef6;
  #L4b2ef2.  v3:= 0I;
  #L4b2ef4.  return v3 @kind object;
  #L4b2ef6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b2efc.  v3:= temp @kind object;
  #L4b2efe.  return v3 @kind object;
  #L4b2f00.  v3:= -v0 @kind float;
  #L4b2f02.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b2f08.  v3:= temp @kind object;
  #L4b2f0a.  return v3 @kind object;
  #L4b2f0c.  call temp:= `isRtl`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4b2f12.  v3:= temp;
  #L4b2f14.  if v3 == 0 then goto L4b2f1a;
  #L4b2f18.  v0:= -v0 @kind float;
  #L4b2f1a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b2f20.  v3:= temp @kind object;
  #L4b2f22.  return v3 @kind object;
  #L4b2f24.  call temp:= `isRtl`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4b2f2a.  v3:= temp;
  #L4b2f2c.  if v3 == 0 then goto L4b2f32;
  #L4b2f30.  goto L4b2f34;
  #L4b2f32.  v0:= -v0 @kind float;
  #L4b2f34.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b2f3a.  v3:= temp @kind object;
  #L4b2f3c.  return v3 @kind object;
}
procedure `float` `calculateStepIncrement`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b288c.  v0:= v2.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b2890.  v1:= 0I;
  #L4b2892.  v1:= fcmpl(v0, v1);
  #L4b2896.  if v1 != 0 then goto L4b289e;
  #L4b289a.  v0:= 1.0F;
  #L4b289e.  return v0;
}
procedure `float` `calculateStepIncrement`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:(I)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4b28b0.  call temp:= `calculateStepIncrement`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateStepIncrement:()F` @kind direct;
  #L4b28b6.  v0:= temp;
  #L4b28b8.  v1:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b28bc.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b28c0.  v1:= v1 - v2 @kind float;
  #L4b28c2.  v1:= v1 / v0 @kind float;
  #L4b28c4.  v4:= (`float`) v4 @kind i2f;
  #L4b28c6.  v2:= fcmpg(v1, v4);
  #L4b28ca.  if v2 > 0 then goto L4b28d0;
  #L4b28ce.  return v0;
  #L4b28d0.  v1:= v1 / v4 @kind float;
  #L4b28d2.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L4b28d8.  v4:= temp;
  #L4b28da.  v4:= (`float`) v4 @kind i2f;
  #L4b28dc.  v4:= v4 * v0 @kind float;
  #L4b28e0.  return v4;
}
procedure `int` `calculateTrackCenter`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTrackCenter:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b2c28.  v0:= v4.`com.google.android.material.slider.BaseSlider.widgetHeight` @type ^`int`;
  #L4b2c2c.  v0:= v0 / 2;
  #L4b2c30.  v1:= v4.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L4b2c34.  v2:= 0I;
  #L4b2c36.  v3:= 1I;
  #L4b2c38.  if v1 == v3 then goto L4b2c48;
  #L4b2c3c.  call temp:= `shouldAlwaysShowLabel`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldAlwaysShowLabel:()Z` @kind direct;
  #L4b2c42.  v1:= temp;
  #L4b2c44.  if v1 == 0 then goto L4b2c60;
  #L4b2c48.  v1:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b2c4c.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4b2c52.  v1:= temp @kind object;
  #L4b2c54.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L4b2c58.  call temp:= `getIntrinsicHeight`(v1) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L4b2c5e.  v2:= temp;
  #L4b2c60.  v0:= v0 + v2 @kind int;
  #L4b2c62.  return v0;
}
procedure `android.animation.ValueAnimator` `createLabelAnimator`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `boolean` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelAnimator:(Z)Landroid/animation/ValueAnimator;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b1ca4.  v0:= 0I;
  #L4b1ca6.  v1:= 1.0F;
  #L4b1caa.  if v5 == 0 then goto L4b1cb2;
  #L4b1cae.  v2:= 0I;
  #L4b1cb0.  goto L4b1cb6;
  #L4b1cb2.  v2:= 1.0F;
  #L4b1cb6.  if v5 == 0 then goto L4b1cc0;
  #L4b1cba.  v3:= v4.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4b1cbe.  goto L4b1cc4;
  #L4b1cc0.  v3:= v4.`com.google.android.material.slider.BaseSlider.labelsInAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4b1cc4.  call temp:= `getAnimatorCurrentValueOrDefault`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getAnimatorCurrentValueOrDefault:(Landroid/animation/ValueAnimator;F)F` @kind static;
  #L4b1cca.  v2:= temp;
  #L4b1ccc.  if v5 == 0 then goto L4b1cd4;
  #L4b1cd0.  v0:= 1.0F;
  #L4b1cd4.  v1:= 2I;
  #L4b1cd6.  v1:= new `float`[v1];
  #L4b1cda.  v3:= 0I;
  #L4b1cdc.  v1[v3]:= v2;
  #L4b1ce0.  v2:= 1I;
  #L4b1ce2.  v1[v2]:= v0;
  #L4b1ce6.  call temp:= `ofFloat`(v1) @signature `Landroid/animation/ValueAnimator;.ofFloat:([F)Landroid/animation/ValueAnimator;` @kind static;
  #L4b1cec.  v0:= temp @kind object;
  #L4b1cee.  if v5 == 0 then goto L4b1cf8;
  #L4b1cf2.  v1:= 83L;
  #L4b1cf6.  goto L4b1cfc;
  #L4b1cf8.  v1:= 117L;
  #L4b1cfc.  call temp:= `setDuration`(v0, v1) @signature `Landroid/animation/ValueAnimator;.setDuration:(J)Landroid/animation/ValueAnimator;` @kind virtual;
  #L4b1d02.  if v5 == 0 then goto L4b1d0c;
  #L4b1d06.  v5:= `@@com.google.android.material.animation.AnimationUtils.DECELERATE_INTERPOLATOR` @type ^`android.animation.TimeInterpolator` @kind object;
  #L4b1d0a.  goto L4b1d10;
  #L4b1d0c.  v5:= `@@com.google.android.material.animation.AnimationUtils.FAST_OUT_LINEAR_IN_INTERPOLATOR` @type ^`android.animation.TimeInterpolator` @kind object;
  #L4b1d10.  call `setInterpolator`(v0, v5) @signature `Landroid/animation/ValueAnimator;.setInterpolator:(Landroid/animation/TimeInterpolator;)V` @kind virtual;
  #L4b1d16.  v5:= new `com.google.android.material.slider.BaseSlider$2`;
  #L4b1d1a.  call `<init>`(v5, v4) @signature `Lcom/google/android/material/slider/BaseSlider$2;.<init>:(Lcom/google/android/material/slider/BaseSlider;)V` @kind direct;
  #L4b1d20.  call `addUpdateListener`(v0, v5) @signature `Landroid/animation/ValueAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L4b1d26.  return v0 @kind object;
}
procedure `void` `createLabelPool`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelPool:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b3360.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b3364.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4b336a.  v0:= temp;
  #L4b336c.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b3370.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b3376.  v1:= temp;
  #L4b3378.  if v0 <= v1 then goto L4b33da;
  #L4b337c.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b3380.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b3384.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b338a.  v1:= temp;
  #L4b338c.  v2:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b3390.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4b3396.  v2:= temp;
  #L4b3398.  call temp:= `subList`(v0, v1, v2) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L4b339e.  v0:= temp @kind object;
  #L4b33a0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b33a6.  v1:= temp @kind object;
  #L4b33a8.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b33ae.  v2:= temp;
  #L4b33b0.  if v2 == 0 then goto L4b33d4;
  #L4b33b4.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b33ba.  v2:= temp @kind object;
  #L4b33bc.  v2:= (`com.google.android.material.tooltip.TooltipDrawable`) v2 @kind object;
  #L4b33c0.  call temp:= `isAttachedToWindow`(v4) @signature `Landroidx/core/view/ViewCompat;.isAttachedToWindow:(Landroid/view/View;)Z` @kind static;
  #L4b33c6.  v3:= temp;
  #L4b33c8.  if v3 == 0 then goto L4b33a8;
  #L4b33cc.  call `detachLabelFromContentView`(v4, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.detachLabelFromContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L4b33d2.  goto L4b33a8;
  #L4b33d4.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4b33da.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b33de.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4b33e4.  v0:= temp;
  #L4b33e6.  v1:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b33ea.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b33f0.  v1:= temp;
  #L4b33f2.  if v0 >= v1 then goto L4b3420;
  #L4b33f6.  v0:= v4.`com.google.android.material.slider.BaseSlider.labelMaker` @type ^`com.google.android.material.slider.BaseSlider$TooltipDrawableFactory` @kind object;
  #L4b33fa.  call temp:= `createTooltipDrawable`(v0) @signature `Lcom/google/android/material/slider/BaseSlider$TooltipDrawableFactory;.createTooltipDrawable:()Lcom/google/android/material/tooltip/TooltipDrawable;` @kind interface;
  #L4b3400.  v0:= temp @kind object;
  #L4b3402.  v1:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b3406.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4b340c.  call temp:= `isAttachedToWindow`(v4) @signature `Landroidx/core/view/ViewCompat;.isAttachedToWindow:(Landroid/view/View;)Z` @kind static;
  #L4b3412.  v1:= temp;
  #L4b3414.  if v1 == 0 then goto L4b33da;
  #L4b3418.  call `attachLabelToContentView`(v4, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.attachLabelToContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L4b341e.  goto L4b33da;
  #L4b3420.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b3424.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4b342a.  v0:= temp;
  #L4b342c.  v1:= 1I;
  #L4b342e.  if v0 != v1 then goto L4b3434;
  #L4b3432.  v1:= 0I;
  #L4b3434.  v0:= v4.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b3438.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b343e.  v0:= temp @kind object;
  #L4b3440.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b3446.  v2:= temp;
  #L4b3448.  if v2 == 0 then goto L4b3462;
  #L4b344c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b3452.  v2:= temp @kind object;
  #L4b3454.  v2:= (`com.google.android.material.tooltip.TooltipDrawable`) v2 @kind object;
  #L4b3458.  v3:= (`float`) v1 @kind i2f;
  #L4b345a.  call `setStrokeWidth`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L4b3460.  goto L4b3440;
  #L4b3462.  return @kind void;
}
procedure `void` `detachLabelFromContentView`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.tooltip.TooltipDrawable` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.detachLabelFromContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b3474.  call temp:= `getContentViewOverlay`(v1) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentViewOverlay:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayImpl;` @kind static;
  #L4b347a.  v0:= temp @kind object;
  #L4b347c.  if v0 == 0 then goto L4b3494;
  #L4b3480.  call `remove`(v0, v2) @signature `Lcom/google/android/material/internal/ViewOverlayImpl;.remove:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L4b3486.  call temp:= `getContentView`(v1) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @kind static;
  #L4b348c.  v0:= temp @kind object;
  #L4b348e.  call `detachView`(v2, v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.detachView:(Landroid/view/View;)V` @kind virtual;
  #L4b3494.  return @kind void;
}
procedure `float` `dimenToValue`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/slider/BaseSlider;.dimenToValue:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b28f4.  v0:= 0I;
  #L4b28f6.  v1:= fcmpl(v3, v0);
  #L4b28fa.  if v1 != 0 then goto L4b2900;
  #L4b28fe.  return v0;
  #L4b2900.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b2904.  v0:= (`float`) v0 @kind i2f;
  #L4b2906.  v3:= v3 - v0 @kind float;
  #L4b2908.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b290c.  v0:= (`float`) v0 @kind i2f;
  #L4b290e.  v3:= v3 / v0 @kind float;
  #L4b2910.  v0:= v2.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b2914.  v1:= v2.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b2918.  v1:= v0 - v1 @kind float;
  #L4b291c.  v3:= v3 * v1 @kind float;
  #L4b2920.  v3:= v3 + v0 @kind float;
  #L4b2922.  return v3;
}
procedure `void` `dispatchOnChangedFromUser`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `int` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedFromUser:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b34a8.  v0:= v4.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L4b34ac.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b34b2.  v0:= temp @kind object;
  #L4b34b4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b34ba.  v1:= temp;
  #L4b34bc.  if v1 == 0 then goto L4b34ee;
  #L4b34c0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b34c6.  v1:= temp @kind object;
  #L4b34c8.  v1:= (`com.google.android.material.slider.BaseOnChangeListener`) v1 @kind object;
  #L4b34cc.  v2:= v4.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b34d0.  call temp:= `get`(v2, v5) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b34d6.  v2:= temp @kind object;
  #L4b34d8.  v2:= (`java.lang.Float`) v2 @kind object;
  #L4b34dc.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b34e2.  v2:= temp;
  #L4b34e4.  v3:= 1I;
  #L4b34e6.  call `onValueChange`(v1, v4, v2, v3) @signature `Lcom/google/android/material/slider/BaseOnChangeListener;.onValueChange:(Ljava/lang/Object;FZ)V` @kind interface;
  #L4b34ec.  goto L4b34b4;
  #L4b34ee.  v0:= v4.`com.google.android.material.slider.BaseSlider.accessibilityManager` @type ^`android.view.accessibility.AccessibilityManager` @kind object;
  #L4b34f2.  if v0 == 0 then goto L4b3508;
  #L4b34f6.  call temp:= `isEnabled`(v0) @signature `Landroid/view/accessibility/AccessibilityManager;.isEnabled:()Z` @kind virtual;
  #L4b34fc.  v0:= temp;
  #L4b34fe.  if v0 == 0 then goto L4b3508;
  #L4b3502.  call `scheduleAccessibilityEventSender`(v4, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.scheduleAccessibilityEventSender:(I)V` @kind direct;
  #L4b3508.  return @kind void;
}
procedure `void` `dispatchOnChangedProgrammatically`(`com.google.android.material.slider.BaseSlider` v5 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedProgrammatically:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b351c.  v0:= v5.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L4b3520.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b3526.  v0:= temp @kind object;
  #L4b3528.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b352e.  v1:= temp;
  #L4b3530.  if v1 == 0 then goto L4b3576;
  #L4b3534.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b353a.  v1:= temp @kind object;
  #L4b353c.  v1:= (`com.google.android.material.slider.BaseOnChangeListener`) v1 @kind object;
  #L4b3540.  v2:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b3544.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4b354a.  v2:= temp @kind object;
  #L4b354c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b3552.  v3:= temp;
  #L4b3554.  if v3 == 0 then goto L4b3528;
  #L4b3558.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b355e.  v3:= temp @kind object;
  #L4b3560.  v3:= (`java.lang.Float`) v3 @kind object;
  #L4b3564.  call temp:= `floatValue`(v3) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b356a.  v3:= temp;
  #L4b356c.  v4:= 0I;
  #L4b356e.  call `onValueChange`(v1, v5, v3, v4) @signature `Lcom/google/android/material/slider/BaseOnChangeListener;.onValueChange:(Ljava/lang/Object;FZ)V` @kind interface;
  #L4b3574.  goto L4b354c;
  #L4b3576.  return @kind void;
}
procedure `void` `drawActiveTrack`(`com.google.android.material.slider.BaseSlider` v10 @kind this, `android.graphics.Canvas` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lcom/google/android/material/slider/BaseSlider;.drawActiveTrack:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4b3588.  call temp:= `getActiveRange`(v10) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @kind direct;
  #L4b358e.  v0:= temp @kind object;
  #L4b3590.  v1:= v10.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b3594.  v2:= (`float`) v1 @kind i2f;
  #L4b3596.  v3:= 1I;
  #L4b3598.  v3:= v0[v3];
  #L4b359c.  v12:= (`float`) v12 @kind i2f;
  #L4b359e.  v3:= v3 * v12 @kind float;
  #L4b35a2.  v7:= v2 + v3 @kind float;
  #L4b35a6.  v1:= (`float`) v1 @kind i2f;
  #L4b35a8.  v2:= 0I;
  #L4b35aa.  v0:= v0[v2];
  #L4b35ae.  v0:= v0 * v12 @kind float;
  #L4b35b2.  v5:= v1 + v0 @kind float;
  #L4b35b6.  v8:= (`float`) v13 @kind i2f;
  #L4b35b8.  v9:= v10.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b35bc.  v4:= v11 @kind object;
  #L4b35be.  v6:= v8;
  #L4b35c0.  call `drawLine`(v4, v5, v6, v7, v8, v9) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L4b35c6.  return @kind void;
}
procedure `void` `drawInactiveTrack`(`com.google.android.material.slider.BaseSlider` v11 @kind this, `android.graphics.Canvas` v12 @kind object, `int` v13 , `int` v14 ) @signature `Lcom/google/android/material/slider/BaseSlider;.drawInactiveTrack:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4b35d8.  call temp:= `getActiveRange`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @kind direct;
  #L4b35de.  v0:= temp @kind object;
  #L4b35e0.  v1:= v11.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b35e4.  v2:= (`float`) v1 @kind i2f;
  #L4b35e6.  v3:= 1I;
  #L4b35e8.  v3:= v0[v3];
  #L4b35ec.  v4:= (`float`) v13 @kind i2f;
  #L4b35ee.  v3:= v3 * v4 @kind float;
  #L4b35f2.  v6:= v2 + v3 @kind float;
  #L4b35f6.  v2:= v1 + v13 @kind int;
  #L4b35fa.  v2:= (`float`) v2 @kind i2f;
  #L4b35fc.  v2:= fcmpg(v6, v2);
  #L4b3600.  if v2 >= 0 then goto L4b3618;
  #L4b3604.  v9:= (`float`) v14 @kind i2f;
  #L4b3606.  v1:= v1 + v13 @kind int;
  #L4b3608.  v8:= (`float`) v1 @kind i2f;
  #L4b360a.  v10:= v11.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b360e.  v5:= v12 @kind object;
  #L4b3610.  v7:= v9;
  #L4b3612.  call `drawLine`(v5, v6, v7, v8, v9, v10) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L4b3618.  v13:= v11.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b361c.  v1:= (`float`) v13 @kind i2f;
  #L4b361e.  v2:= 0I;
  #L4b3620.  v0:= v0[v2];
  #L4b3624.  v0:= v0 * v4 @kind float;
  #L4b3628.  v5:= v1 + v0 @kind float;
  #L4b362c.  v0:= (`float`) v13 @kind i2f;
  #L4b362e.  v0:= fcmpl(v5, v0);
  #L4b3632.  if v0 <= 0 then goto L4b3648;
  #L4b3636.  v3:= (`float`) v13 @kind i2f;
  #L4b3638.  v6:= (`float`) v14 @kind i2f;
  #L4b363a.  v7:= v11.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b363e.  v2:= v12 @kind object;
  #L4b3640.  v4:= v6;
  #L4b3642.  call `drawLine`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L4b3648.  return @kind void;
}
procedure `void` `drawThumbDrawable`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.graphics.Canvas` v2 @kind object, `int` v3 , `int` v4 , `float` v5 , `android.graphics.drawable.Drawable` v6 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.drawThumbDrawable:(Landroid/graphics/Canvas;IIFLandroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b365c.  call temp:= `save`(v2) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L4b3662.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b3666.  call temp:= `normalizeValue`(v1, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4b366c.  v5:= temp;
  #L4b366e.  v3:= (`float`) v3 @kind i2f;
  #L4b3670.  v5:= v5 * v3 @kind float;
  #L4b3674.  v3:= (`int`) v5 @kind f2i;
  #L4b3676.  v0:= v0 + v3 @kind int;
  #L4b3678.  v3:= (`float`) v0 @kind i2f;
  #L4b367a.  call temp:= `getBounds`(v6) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4b3680.  v5:= temp @kind object;
  #L4b3682.  call temp:= `width`(v5) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L4b3688.  v5:= temp;
  #L4b368a.  v5:= (`float`) v5 @kind i2f;
  #L4b368c.  v0:= 2.0F;
  #L4b3690.  v5:= v5 / v0 @kind float;
  #L4b3692.  v3:= v3 - v5 @kind float;
  #L4b3694.  v4:= (`float`) v4 @kind i2f;
  #L4b3696.  call temp:= `getBounds`(v6) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4b369c.  v5:= temp @kind object;
  #L4b369e.  call temp:= `height`(v5) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L4b36a4.  v5:= temp;
  #L4b36a6.  v5:= (`float`) v5 @kind i2f;
  #L4b36a8.  v5:= v5 / v0 @kind float;
  #L4b36aa.  v4:= v4 - v5 @kind float;
  #L4b36ac.  call `translate`(v2, v3, v4) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L4b36b2.  call `draw`(v6, v2) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L4b36b8.  call `restore`(v2) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L4b36be.  return @kind void;
}
procedure `void` `drawThumbs`(`com.google.android.material.slider.BaseSlider` v8 @kind this, `android.graphics.Canvas` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/google/android/material/slider/BaseSlider;.drawThumbs:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4b36d0.  v0:= 0I;
  #L4b36d2.  v1:= v8.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b36d6.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b36dc.  v1:= temp;
  #L4b36de.  if v0 >= v1 then goto L4b3790;
  #L4b36e2.  v1:= v8.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b36e6.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b36ec.  v1:= temp @kind object;
  #L4b36ee.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4b36f2.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b36f8.  v6:= temp;
  #L4b36fa.  v7:= v8.`com.google.android.material.slider.BaseSlider.customThumbDrawable` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4b36fe.  if v7 == 0 then goto L4b3712;
  #L4b3702.  v2:= v8 @kind object;
  #L4b3704.  v3:= v9 @kind object;
  #L4b3706.  v4:= v10;
  #L4b3708.  v5:= v11;
  #L4b370a.  call `drawThumbDrawable`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/android/material/slider/BaseSlider;.drawThumbDrawable:(Landroid/graphics/Canvas;IIFLandroid/graphics/drawable/Drawable;)V` @kind direct;
  #L4b3710.  goto L4b378a;
  #L4b3712.  v1:= v8.`com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues` @type ^`java.util.List` @kind object;
  #L4b3716.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4b371c.  v1:= temp;
  #L4b371e.  if v0 >= v1 then goto L4b3744;
  #L4b3722.  v1:= v8.`com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues` @type ^`java.util.List` @kind object;
  #L4b3726.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4b372c.  v1:= temp @kind object;
  #L4b372e.  v7:= v1 @kind object;
  #L4b3730.  v7:= (`android.graphics.drawable.Drawable`) v7 @kind object;
  #L4b3734.  v2:= v8 @kind object;
  #L4b3736.  v3:= v9 @kind object;
  #L4b3738.  v4:= v10;
  #L4b373a.  v5:= v11;
  #L4b373c.  call `drawThumbDrawable`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/android/material/slider/BaseSlider;.drawThumbDrawable:(Landroid/graphics/Canvas;IIFLandroid/graphics/drawable/Drawable;)V` @kind direct;
  #L4b3742.  goto L4b378a;
  #L4b3744.  call temp:= `isEnabled`(v8) @signature `Landroid/view/View;.isEnabled:()Z` @kind virtual;
  #L4b374a.  v1:= temp;
  #L4b374c.  if v1 != 0 then goto L4b3778;
  #L4b3750.  v1:= v8.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b3754.  v1:= (`float`) v1 @kind i2f;
  #L4b3756.  call temp:= `normalizeValue`(v8, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4b375c.  v2:= temp;
  #L4b375e.  v3:= (`float`) v10 @kind i2f;
  #L4b3760.  v2:= v2 * v3 @kind float;
  #L4b3764.  v1:= v1 + v2 @kind float;
  #L4b3766.  v2:= (`float`) v11 @kind i2f;
  #L4b3768.  v3:= v8.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4b376c.  v3:= (`float`) v3 @kind i2f;
  #L4b376e.  v4:= v8.`com.google.android.material.slider.BaseSlider.thumbPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b3772.  call `drawCircle`(v9, v1, v2, v3, v4) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L4b3778.  v7:= v8.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b377c.  v2:= v8 @kind object;
  #L4b377e.  v3:= v9 @kind object;
  #L4b3780.  v4:= v10;
  #L4b3782.  v5:= v11;
  #L4b3784.  call `drawThumbDrawable`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/android/material/slider/BaseSlider;.drawThumbDrawable:(Landroid/graphics/Canvas;IIFLandroid/graphics/drawable/Drawable;)V` @kind direct;
  #L4b378a.  v0:= v0 + 1;
  #L4b378e.  goto L4b36d2;
  #L4b3790.  return @kind void;
}
procedure `void` `ensureLabelsAdded`(`com.google.android.material.slider.BaseSlider` v7 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsAdded:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4b389c.  v0:= v7.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L4b38a0.  v1:= 2I;
  #L4b38a2.  if v0 != v1 then goto L4b38a8;
  #L4b38a6.  return @kind void;
  #L4b38a8.  v0:= v7.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` @kind boolean;
  #L4b38ac.  v2:= 1I;
  #L4b38ae.  if v0 != 0 then goto L4b38ce;
  #L4b38b2.  v7.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v2 @kind boolean;
  #L4b38b6.  call temp:= `createLabelAnimator`(v7, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelAnimator:(Z)Landroid/animation/ValueAnimator;` @kind direct;
  #L4b38bc.  v0:= temp @kind object;
  #L4b38be.  v7.`com.google.android.material.slider.BaseSlider.labelsInAnimator` @type ^`android.animation.ValueAnimator` := v0 @kind object;
  #L4b38c2.  v3:= 0I;
  #L4b38c4.  v7.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` := v3 @kind object;
  #L4b38c8.  call `start`(v0) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L4b38ce.  v0:= v7.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b38d2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b38d8.  v0:= temp @kind object;
  #L4b38da.  v3:= 0I;
  #L4b38dc.  v4:= 0I;
  #L4b38de.  v5:= v7.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b38e2.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b38e8.  v5:= temp;
  #L4b38ea.  if v4 >= v5 then goto L4b3934;
  #L4b38ee.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b38f4.  v5:= temp;
  #L4b38f6.  if v5 == 0 then goto L4b3934;
  #L4b38fa.  v5:= v7.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4b38fe.  if v4 != v5 then goto L4b3904;
  #L4b3902.  goto L4b392e;
  #L4b3904.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b390a.  v5:= temp @kind object;
  #L4b390c.  v5:= (`com.google.android.material.tooltip.TooltipDrawable`) v5 @kind object;
  #L4b3910.  v6:= v7.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b3914.  call temp:= `get`(v6, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b391a.  v6:= temp @kind object;
  #L4b391c.  v6:= (`java.lang.Float`) v6 @kind object;
  #L4b3920.  call temp:= `floatValue`(v6) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b3926.  v6:= temp;
  #L4b3928.  call `setValueForLabel`(v7, v5, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueForLabel:(Lcom/google/android/material/tooltip/TooltipDrawable;F)V` @kind direct;
  #L4b392e.  v4:= v4 + 1;
  #L4b3932.  goto L4b38de;
  #L4b3934.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b393a.  v4:= temp;
  #L4b393c.  if v4 == 0 then goto L4b3970;
  #L4b3940.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b3946.  v0:= temp @kind object;
  #L4b3948.  v0:= (`com.google.android.material.tooltip.TooltipDrawable`) v0 @kind object;
  #L4b394c.  v1:= v7.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b3950.  v2:= v7.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4b3954.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b395a.  v1:= temp @kind object;
  #L4b395c.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4b3960.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b3966.  v1:= temp;
  #L4b3968.  call `setValueForLabel`(v7, v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueForLabel:(Lcom/google/android/material/tooltip/TooltipDrawable;F)V` @kind direct;
  #L4b396e.  return @kind void;
  #L4b3970.  v0:= new `java.lang.IllegalStateException`;
  #L4b3974.  v1:= new `java.lang.Object`[v1];
  #L4b3978.  v4:= v7.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b397c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4b3982.  v4:= temp;
  #L4b3984.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4b398a.  v4:= temp @kind object;
  #L4b398c.  v1[v3]:= v4 @kind object;
  #L4b3990.  v3:= v7.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b3994.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b399a.  v3:= temp;
  #L4b399c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4b39a2.  v3:= temp @kind object;
  #L4b39a4.  v1[v2]:= v3 @kind object;
  #L4b39a8.  v2:= "Not enough labels(%d) to display all the values(%d)" @kind object;
  #L4b39ac.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b39b2.  v1:= temp @kind object;
  #L4b39b4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b39ba.  throw v0;
}
procedure `void` `ensureLabelsRemoved`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b39cc.  v0:= v2.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` @kind boolean;
  #L4b39d0.  if v0 == 0 then goto L4b3a06;
  #L4b39d4.  v0:= 0I;
  #L4b39d6.  v2.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v0 @kind boolean;
  #L4b39da.  call temp:= `createLabelAnimator`(v2, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelAnimator:(Z)Landroid/animation/ValueAnimator;` @kind direct;
  #L4b39e0.  v0:= temp @kind object;
  #L4b39e2.  v2.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` := v0 @kind object;
  #L4b39e6.  v1:= 0I;
  #L4b39e8.  v2.`com.google.android.material.slider.BaseSlider.labelsInAnimator` @type ^`android.animation.ValueAnimator` := v1 @kind object;
  #L4b39ec.  v1:= new `com.google.android.material.slider.BaseSlider$3`;
  #L4b39f0.  call `<init>`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider$3;.<init>:(Lcom/google/android/material/slider/BaseSlider;)V` @kind direct;
  #L4b39f6.  call `addListener`(v0, v1) @signature `Landroid/animation/ValueAnimator;.addListener:(Landroid/animation/Animator$AnimatorListener;)V` @kind virtual;
  #L4b39fc.  v0:= v2.`com.google.android.material.slider.BaseSlider.labelsOutAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4b3a00.  call `start`(v0) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L4b3a06.  return @kind void;
}
procedure `void` `focusThumbOnFocusGained`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider;.focusThumbOnFocusGained:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4b3a18.  v0:= 1I;
  #L4b3a1a.  v1:= 2147483647I;
  #L4b3a20.  if v4 == v0 then goto L4b3a58;
  #L4b3a24.  v0:= 2I;
  #L4b3a26.  v2:= -2147483648I;
  #L4b3a2a.  if v4 == v0 then goto L4b3a50;
  #L4b3a2e.  v0:= 17I;
  #L4b3a32.  if v4 == v0 then goto L4b3a48;
  #L4b3a36.  v0:= 66I;
  #L4b3a3a.  if v4 == v0 then goto L4b3a40;
  #L4b3a3e.  goto L4b3a5e;
  #L4b3a40.  call temp:= `moveFocusInAbsoluteDirection`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L4b3a46.  goto L4b3a5e;
  #L4b3a48.  call temp:= `moveFocusInAbsoluteDirection`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L4b3a4e.  goto L4b3a5e;
  #L4b3a50.  call temp:= `moveFocus`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4b3a56.  goto L4b3a5e;
  #L4b3a58.  call temp:= `moveFocus`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4b3a5e.  return @kind void;
}
procedure `java.lang.String` `formatValue`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `float` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider;.formatValue:(F)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4b2f6c.  call temp:= `hasLabelFormatter`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.hasLabelFormatter:()Z` @kind virtual;
  #L4b2f72.  v0:= temp;
  #L4b2f74.  if v0 == 0 then goto L4b2f86;
  #L4b2f78.  v0:= v3.`com.google.android.material.slider.BaseSlider.formatter` @type ^`com.google.android.material.slider.LabelFormatter` @kind object;
  #L4b2f7c.  call temp:= `getFormattedValue`(v0, v4) @signature `Lcom/google/android/material/slider/LabelFormatter;.getFormattedValue:(F)Ljava/lang/String;` @kind interface;
  #L4b2f82.  v4:= temp @kind object;
  #L4b2f84.  return v4 @kind object;
  #L4b2f86.  v0:= (`int`) v4 @kind f2i;
  #L4b2f88.  v0:= (`float`) v0 @kind i2f;
  #L4b2f8a.  v0:= fcmpl(v0, v4);
  #L4b2f8e.  if v0 != 0 then goto L4b2f98;
  #L4b2f92.  v0:= "%.0f" @kind object;
  #L4b2f96.  goto L4b2f9c;
  #L4b2f98.  v0:= "%.2f" @kind object;
  #L4b2f9c.  v1:= 1I;
  #L4b2f9e.  v1:= new `java.lang.Object`[v1];
  #L4b2fa2.  v2:= 0I;
  #L4b2fa4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b2faa.  v4:= temp @kind object;
  #L4b2fac.  v1[v2]:= v4 @kind object;
  #L4b2fb0.  call temp:= `format`(v0, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b2fb6.  v4:= temp @kind object;
  #L4b2fb8.  return v4 @kind object;
}
procedure `float`[] `getActiveRange`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b2b8c.  call temp:= `getValues`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L4b2b92.  v0:= temp @kind object;
  #L4b2b94.  call temp:= `max`(v0) @signature `Ljava/util/Collections;.max:(Ljava/util/Collection;)Ljava/lang/Object;` @kind static;
  #L4b2b9a.  v0:= temp @kind object;
  #L4b2b9c.  v0:= (`java.lang.Float`) v0 @kind object;
  #L4b2ba0.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b2ba6.  v0:= temp;
  #L4b2ba8.  call temp:= `getValues`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L4b2bae.  v1:= temp @kind object;
  #L4b2bb0.  call temp:= `min`(v1) @signature `Ljava/util/Collections;.min:(Ljava/util/Collection;)Ljava/lang/Object;` @kind static;
  #L4b2bb6.  v1:= temp @kind object;
  #L4b2bb8.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4b2bbc.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b2bc2.  v1:= temp;
  #L4b2bc4.  v2:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b2bc8.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b2bce.  v2:= temp;
  #L4b2bd0.  v3:= 1I;
  #L4b2bd2.  if v2 != v3 then goto L4b2bda;
  #L4b2bd6.  v1:= v6.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b2bda.  call temp:= `normalizeValue`(v6, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4b2be0.  v1:= temp;
  #L4b2be2.  call temp:= `normalizeValue`(v6, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4b2be8.  v0:= temp;
  #L4b2bea.  call temp:= `isRtl`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4b2bf0.  v2:= temp;
  #L4b2bf2.  v4:= 0I;
  #L4b2bf4.  v5:= 2I;
  #L4b2bf6.  if v2 == 0 then goto L4b2c08;
  #L4b2bfa.  v2:= new `float`[v5];
  #L4b2bfe.  v2[v4]:= v0;
  #L4b2c02.  v2[v3]:= v1;
  #L4b2c06.  goto L4b2c14;
  #L4b2c08.  v2:= new `float`[v5];
  #L4b2c0c.  v2[v4]:= v1;
  #L4b2c10.  v2[v3]:= v0;
  #L4b2c14.  return v2 @kind object;
}
procedure `float` `getAnimatorCurrentValueOrDefault`(`android.animation.ValueAnimator` v1 @kind object, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.getAnimatorCurrentValueOrDefault:(Landroid/animation/ValueAnimator;F)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4b2934.  if v1 == 0 then goto L4b295e;
  #L4b2938.  call temp:= `isRunning`(v1) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L4b293e.  v0:= temp;
  #L4b2940.  if v0 == 0 then goto L4b295e;
  #L4b2944.  call temp:= `getAnimatedValue`(v1) @signature `Landroid/animation/ValueAnimator;.getAnimatedValue:()Ljava/lang/Object;` @kind virtual;
  #L4b294a.  v2:= temp @kind object;
  #L4b294c.  v2:= (`java.lang.Float`) v2 @kind object;
  #L4b2950.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b2956.  v2:= temp;
  #L4b2958.  call `cancel`(v1) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L4b295e.  return v2;
}
procedure `float` `getClampedValue`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 , `float` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.getClampedValue:(IF)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4b2970.  call temp:= `getMinSeparation`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getMinSeparation:()F` @kind virtual;
  #L4b2976.  v0:= temp;
  #L4b2978.  v1:= v3.`com.google.android.material.slider.BaseSlider.separationUnit` @type ^`int`;
  #L4b297c.  if v1 != 0 then goto L4b2988;
  #L4b2980.  call temp:= `dimenToValue`(v3, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.dimenToValue:(F)F` @kind direct;
  #L4b2986.  v0:= temp;
  #L4b2988.  call temp:= `isRtl`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4b298e.  v1:= temp;
  #L4b2990.  if v1 == 0 then goto L4b2996;
  #L4b2994.  v0:= -v0 @kind float;
  #L4b2996.  v1:= v4 + 1;
  #L4b299a.  v2:= v3.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b299e.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b29a4.  v2:= temp;
  #L4b29a6.  if v1 < v2 then goto L4b29b0;
  #L4b29aa.  v1:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b29ae.  goto L4b29ca;
  #L4b29b0.  v2:= v3.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b29b4.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b29ba.  v1:= temp @kind object;
  #L4b29bc.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4b29c0.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b29c6.  v1:= temp;
  #L4b29c8.  v1:= v1 - v0 @kind float;
  #L4b29ca.  v4:= v4 + -1;
  #L4b29ce.  if v4 >= 0 then goto L4b29d8;
  #L4b29d2.  v4:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b29d6.  goto L4b29f2;
  #L4b29d8.  v2:= v3.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b29dc.  call temp:= `get`(v2, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b29e2.  v4:= temp @kind object;
  #L4b29e4.  v4:= (`java.lang.Float`) v4 @kind object;
  #L4b29e8.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b29ee.  v4:= temp;
  #L4b29f0.  v4:= v4 + v0 @kind float;
  #L4b29f2.  call temp:= `clamp`(v5, v4, v1) @signature `Landroidx/core/math/MathUtils;.clamp:(FFF)F` @kind static;
  #L4b29f8.  v4:= temp;
  #L4b29fa.  return v4;
}
procedure `int` `getColorForState`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b2cac.  call temp:= `getDrawableState`(v2) @signature `Landroid/view/View;.getDrawableState:()[I` @kind virtual;
  #L4b2cb2.  v0:= temp @kind object;
  #L4b2cb4.  call temp:= `getDefaultColor`(v3) @signature `Landroid/content/res/ColorStateList;.getDefaultColor:()I` @kind virtual;
  #L4b2cba.  v1:= temp;
  #L4b2cbc.  call temp:= `getColorForState`(v3, v0, v1) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L4b2cc2.  v3:= temp;
  #L4b2cc4.  return v3;
}
procedure `float` `getValueOfTouchPosition`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPosition:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b2a90.  v0:= v6.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float`;
  #L4b2a94.  call temp:= `snapPosition`(v6, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.snapPosition:(F)D` @kind direct;
  #L4b2a9a.  v0:= temp @kind wide;
  #L4b2a9c.  call temp:= `isRtl`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4b2aa2.  v2:= temp;
  #L4b2aa4.  if v2 == 0 then goto L4b2ab0;
  #L4b2aa8.  v2:= 1.0D;
  #L4b2aac.  v0:= v2 - v0 @kind double;
  #L4b2ab0.  v2:= v6.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b2ab4.  v3:= v6.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b2ab8.  v2:= v2 - v3 @kind float;
  #L4b2aba.  v4:= (`double`) v2 @kind f2d;
  #L4b2abc.  v0:= v0 * v4 @kind double;
  #L4b2ac0.  v2:= (`double`) v3 @kind f2d;
  #L4b2ac2.  v0:= v0 + v2 @kind double;
  #L4b2ac4.  v0:= (`float`) v0 @kind d2f;
  #L4b2ac6.  return v0;
}
procedure `float` `getValueOfTouchPositionAbsolute`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPositionAbsolute:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4b2ad8.  v0:= v3.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float`;
  #L4b2adc.  call temp:= `isRtl`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4b2ae2.  v1:= temp;
  #L4b2ae4.  if v1 == 0 then goto L4b2af0;
  #L4b2ae8.  v1:= 1.0F;
  #L4b2aec.  v0:= v1 - v0 @kind float;
  #L4b2af0.  v1:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b2af4.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b2af8.  v1:= v1 - v2 @kind float;
  #L4b2afa.  v0:= v0 * v1 @kind float;
  #L4b2afe.  v0:= v0 + v2 @kind float;
  #L4b2b00.  return v0;
}
procedure `android.graphics.drawable.Drawable` `initializeCustomThumbDrawable`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.initializeCustomThumbDrawable:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;

  #L4b1e68.  call temp:= `mutate`(v1) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L4b1e6e.  v1:= temp @kind object;
  #L4b1e70.  call temp:= `getConstantState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @kind virtual;
  #L4b1e76.  v1:= temp @kind object;
  #L4b1e78.  call temp:= `newDrawable`(v1) @signature `Landroid/graphics/drawable/Drawable$ConstantState;.newDrawable:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L4b1e7e.  v1:= temp @kind object;
  #L4b1e80.  call `adjustCustomThumbDrawableBounds`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.adjustCustomThumbDrawableBounds:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L4b1e86.  return v1 @kind object;
}
procedure `void` `invalidateTrack`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidateTrack:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4b3a88.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b3a8c.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L4b3a90.  v1:= (`float`) v1 @kind i2f;
  #L4b3a92.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L4b3a98.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b3a9c.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L4b3aa0.  v1:= (`float`) v1 @kind i2f;
  #L4b3aa2.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L4b3aa8.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b3aac.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L4b3ab0.  v1:= (`float`) v1 @kind i2f;
  #L4b3ab2.  v2:= 2.0F;
  #L4b3ab6.  v1:= v1 / v2 @kind float;
  #L4b3ab8.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L4b3abe.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b3ac2.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L4b3ac6.  v1:= (`float`) v1 @kind i2f;
  #L4b3ac8.  v1:= v1 / v2 @kind float;
  #L4b3aca.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L4b3ad0.  return @kind void;
}
procedure `boolean` `isInVerticalScrollingContainer`(`com.google.android.material.slider.BaseSlider` v5 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.isInVerticalScrollingContainer:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b1f84.  call temp:= `getParent`(v5) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L4b1f8a.  v0:= temp @kind object;
  #L4b1f8c.  v1:= instanceof @variable v0 @type ^`android.view.ViewGroup` @kind boolean;
  #L4b1f90.  v2:= 0I;
  #L4b1f92.  if v1 == 0 then goto L4b1fd6;
  #L4b1f96.  v1:= v0 @kind object;
  #L4b1f98.  v1:= (`android.view.ViewGroup`) v1 @kind object;
  #L4b1f9c.  v3:= 1I;
  #L4b1f9e.  call temp:= `canScrollVertically`(v1, v3) @signature `Landroid/view/ViewGroup;.canScrollVertically:(I)Z` @kind virtual;
  #L4b1fa4.  v4:= temp;
  #L4b1fa6.  if v4 != 0 then goto L4b1fb8;
  #L4b1faa.  v4:= -1I;
  #L4b1fac.  call temp:= `canScrollVertically`(v1, v4) @signature `Landroid/view/ViewGroup;.canScrollVertically:(I)Z` @kind virtual;
  #L4b1fb2.  v4:= temp;
  #L4b1fb4.  if v4 == 0 then goto L4b1fba;
  #L4b1fb8.  v2:= 1I;
  #L4b1fba.  if v2 == 0 then goto L4b1fcc;
  #L4b1fbe.  call temp:= `shouldDelayChildPressedState`(v1) @signature `Landroid/view/ViewGroup;.shouldDelayChildPressedState:()Z` @kind virtual;
  #L4b1fc4.  v1:= temp;
  #L4b1fc6.  if v1 == 0 then goto L4b1fcc;
  #L4b1fca.  return v3;
  #L4b1fcc.  call temp:= `getParent`(v0) @signature `Landroid/view/ViewParent;.getParent:()Landroid/view/ViewParent;` @kind interface;
  #L4b1fd2.  v0:= temp @kind object;
  #L4b1fd4.  goto L4b1f8c;
  #L4b1fd6.  return v2;
}
procedure `boolean` `isMultipleOfStepSize`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `float` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.isMultipleOfStepSize:(F)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b1fe8.  v0:= new `java.math.BigDecimal`;
  #L4b1fec.  call temp:= `toString`(v5) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L4b1ff2.  v5:= temp @kind object;
  #L4b1ff4.  call `<init>`(v0, v5) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b1ffa.  v5:= new `java.math.BigDecimal`;
  #L4b1ffe.  v1:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b2002.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L4b2008.  v1:= temp @kind object;
  #L4b200a.  call `<init>`(v5, v1) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b2010.  v1:= `@@java.math.MathContext.DECIMAL64` @type ^`java.math.MathContext` @kind object;
  #L4b2014.  call temp:= `divide`(v0, v5, v1) @signature `Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;` @kind virtual;
  #L4b201a.  v5:= temp @kind object;
  #L4b201c.  call temp:= `doubleValue`(v5) @signature `Ljava/math/BigDecimal;.doubleValue:()D` @kind virtual;
  #L4b2022.  v0:= temp @kind wide;
  #L4b2024.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L4b202a.  v2:= temp @kind wide;
  #L4b202c.  v2:= (`double`) v2 @kind l2d;
  #L4b202e.  v2:= v2 - v0 @kind double;
  #L4b2030.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L4b2036.  v0:= temp @kind wide;
  #L4b2038.  v2:= 1.0E-4D;
  #L4b2042.  v5:= dcmpg(v0, v2);
  #L4b2046.  if v5 >= 0 then goto L4b204e;
  #L4b204a.  v5:= 1I;
  #L4b204c.  goto L4b2050;
  #L4b204e.  v5:= 0I;
  #L4b2050.  return v5;
}
procedure `void` `loadResources`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.Resources` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.loadResources:(Landroid/content/res/Resources;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b3ae4.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_widget_height` @type ^`int`;
  #L4b3ae8.  call temp:= `getDimensionPixelSize`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4b3aee.  v0:= temp;
  #L4b3af0.  v1.`com.google.android.material.slider.BaseSlider.minWidgetHeight` @type ^`int` := v0;
  #L4b3af4.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_track_side_padding` @type ^`int`;
  #L4b3af8.  call temp:= `getDimensionPixelOffset`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L4b3afe.  v0:= temp;
  #L4b3b00.  v1.`com.google.android.material.slider.BaseSlider.minTrackSidePadding` @type ^`int` := v0;
  #L4b3b04.  v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int` := v0;
  #L4b3b08.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_thumb_radius` @type ^`int`;
  #L4b3b0c.  call temp:= `getDimensionPixelSize`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4b3b12.  v0:= temp;
  #L4b3b14.  v1.`com.google.android.material.slider.BaseSlider.defaultThumbRadius` @type ^`int` := v0;
  #L4b3b18.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_track_height` @type ^`int`;
  #L4b3b1c.  call temp:= `getDimensionPixelSize`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4b3b22.  v0:= temp;
  #L4b3b24.  v1.`com.google.android.material.slider.BaseSlider.defaultTrackHeight` @type ^`int` := v0;
  #L4b3b28.  v0:= `@@com.google.android.material.R$dimen.mtrl_slider_label_padding` @type ^`int`;
  #L4b3b2c.  call temp:= `getDimensionPixelSize`(v2, v0) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4b3b32.  v2:= temp;
  #L4b3b34.  v1.`com.google.android.material.slider.BaseSlider.labelPadding` @type ^`int` := v2;
  #L4b3b38.  return @kind void;
}
procedure `void` `maybeCalculateTicksCoordinates`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeCalculateTicksCoordinates:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b3b4c.  v0:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b3b50.  v1:= 0I;
  #L4b3b52.  v0:= fcmpg(v0, v1);
  #L4b3b56.  if v0 > 0 then goto L4b3b5c;
  #L4b3b5a.  return @kind void;
  #L4b3b5c.  call `validateConfigurationIfDirty`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.validateConfigurationIfDirty:()V` @kind direct;
  #L4b3b62.  v0:= v6.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b3b66.  v1:= v6.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b3b6a.  v0:= v0 - v1 @kind float;
  #L4b3b6c.  v1:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b3b70.  v0:= v0 / v1 @kind float;
  #L4b3b72.  v1:= 1.0F;
  #L4b3b76.  v0:= v0 + v1 @kind float;
  #L4b3b78.  v0:= (`int`) v0 @kind f2i;
  #L4b3b7a.  v1:= v6.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b3b7e.  v2:= v6.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L4b3b82.  v2:= v2 * 2;
  #L4b3b86.  v1:= v1 / v2 @kind int;
  #L4b3b88.  v1:= v1 + 1;
  #L4b3b8c.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4b3b92.  v0:= temp;
  #L4b3b94.  v1:= v6.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L4b3b98.  if v1 == 0 then goto L4b3ba6;
  #L4b3b9c.  v1:= length @variable v1;
  #L4b3b9e.  v2:= v0 * 2;
  #L4b3ba2.  if v1 == v2 then goto L4b3bb2;
  #L4b3ba6.  v1:= v0 * 2;
  #L4b3baa.  v1:= new `float`[v1];
  #L4b3bae.  v6.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] := v1 @kind object;
  #L4b3bb2.  v1:= v6.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b3bb6.  v1:= (`float`) v1 @kind i2f;
  #L4b3bb8.  v2:= v0 + -1;
  #L4b3bbc.  v2:= (`float`) v2 @kind i2f;
  #L4b3bbe.  v1:= v1 / v2 @kind float;
  #L4b3bc0.  v2:= 0I;
  #L4b3bc2.  v3:= v0 * 2;
  #L4b3bc6.  if v2 >= v3 then goto L4b3bfc;
  #L4b3bca.  v3:= v6.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L4b3bce.  v4:= v6.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b3bd2.  v4:= (`float`) v4 @kind i2f;
  #L4b3bd4.  v5:= v2 / 2;
  #L4b3bd8.  v5:= (`float`) v5 @kind i2f;
  #L4b3bda.  v5:= v5 * v1 @kind float;
  #L4b3bde.  v4:= v4 + v5 @kind float;
  #L4b3be0.  v3[v2]:= v4;
  #L4b3be4.  v4:= v2 + 1;
  #L4b3be8.  call temp:= `calculateTrackCenter`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTrackCenter:()I` @kind direct;
  #L4b3bee.  v5:= temp;
  #L4b3bf0.  v5:= (`float`) v5 @kind i2f;
  #L4b3bf2.  v3[v4]:= v5;
  #L4b3bf6.  v2:= v2 + 2;
  #L4b3bfa.  goto L4b3bc2;
  #L4b3bfc.  return @kind void;
}
procedure `void` `maybeDrawHalo`(`com.google.android.material.slider.BaseSlider` v8 @kind this, `android.graphics.Canvas` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawHalo:(Landroid/graphics/Canvas;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4b3c10.  call temp:= `shouldDrawCompatHalo`(v8) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L4b3c16.  v0:= temp;
  #L4b3c18.  if v0 == 0 then goto L4b3c96;
  #L4b3c1c.  v0:= v8.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b3c20.  v0:= (`float`) v0 @kind i2f;
  #L4b3c22.  v1:= v8.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b3c26.  v2:= v8.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4b3c2a.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b3c30.  v1:= temp @kind object;
  #L4b3c32.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4b3c36.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b3c3c.  v1:= temp;
  #L4b3c3e.  call temp:= `normalizeValue`(v8, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4b3c44.  v1:= temp;
  #L4b3c46.  v10:= (`float`) v10 @kind i2f;
  #L4b3c48.  v1:= v1 * v10 @kind float;
  #L4b3c4c.  v0:= v0 + v1 @kind float;
  #L4b3c4e.  v10:= (`int`) v0 @kind f2i;
  #L4b3c50.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4b3c54.  v1:= 28I;
  #L4b3c58.  if v0 >= v1 then goto L4b3c82;
  #L4b3c5c.  v0:= v8.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L4b3c60.  v1:= v10 - v0 @kind int;
  #L4b3c64.  v3:= (`float`) v1 @kind i2f;
  #L4b3c66.  v1:= v11 - v0 @kind int;
  #L4b3c6a.  v4:= (`float`) v1 @kind i2f;
  #L4b3c6c.  v1:= v10 + v0 @kind int;
  #L4b3c70.  v5:= (`float`) v1 @kind i2f;
  #L4b3c72.  v0:= v0 + v11 @kind int;
  #L4b3c74.  v6:= (`float`) v0 @kind i2f;
  #L4b3c76.  v7:= `@@android.graphics.Region$Op.UNION` @type ^`android.graphics.Region$Op` @kind object;
  #L4b3c7a.  v2:= v9 @kind object;
  #L4b3c7c.  call temp:= `clipRect`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Canvas;.clipRect:(FFFFLandroid/graphics/Region$Op;)Z` @kind virtual;
  #L4b3c82.  v10:= (`float`) v10 @kind i2f;
  #L4b3c84.  v11:= (`float`) v11 @kind i2f;
  #L4b3c86.  v0:= v8.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L4b3c8a.  v0:= (`float`) v0 @kind i2f;
  #L4b3c8c.  v1:= v8.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b3c90.  call `drawCircle`(v9, v10, v11, v0, v1) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L4b3c96.  return @kind void;
}
procedure `void` `maybeDrawTicks`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `android.graphics.Canvas` v6 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawTicks:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b3ca8.  v0:= v5.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` @kind boolean;
  #L4b3cac.  if v0 == 0 then goto L4b3d26;
  #L4b3cb0.  v0:= v5.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b3cb4.  v1:= 0I;
  #L4b3cb6.  v0:= fcmpg(v0, v1);
  #L4b3cba.  if v0 > 0 then goto L4b3cc0;
  #L4b3cbe.  goto L4b3d26;
  #L4b3cc0.  call temp:= `getActiveRange`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveRange:()[F` @kind direct;
  #L4b3cc6.  v0:= temp @kind object;
  #L4b3cc8.  v1:= v5.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L4b3ccc.  v2:= 0I;
  #L4b3cce.  v3:= v0[v2];
  #L4b3cd2.  call temp:= `pivotIndex`(v1, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.pivotIndex:([FF)I` @kind static;
  #L4b3cd8.  v1:= temp;
  #L4b3cda.  v3:= v5.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L4b3cde.  v4:= 1I;
  #L4b3ce0.  v0:= v0[v4];
  #L4b3ce4.  call temp:= `pivotIndex`(v3, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.pivotIndex:([FF)I` @kind static;
  #L4b3cea.  v0:= temp;
  #L4b3cec.  v3:= v5.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L4b3cf0.  v1:= v1 * 2;
  #L4b3cf4.  v4:= v5.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b3cf8.  call `drawPoints`(v6, v3, v2, v1, v4) @signature `Landroid/graphics/Canvas;.drawPoints:([FIILandroid/graphics/Paint;)V` @kind virtual;
  #L4b3cfe.  v2:= v5.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L4b3d02.  v0:= v0 * 2;
  #L4b3d06.  v3:= v0 - v1 @kind int;
  #L4b3d0a.  v4:= v5.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b3d0e.  call `drawPoints`(v6, v2, v1, v3, v4) @signature `Landroid/graphics/Canvas;.drawPoints:([FIILandroid/graphics/Paint;)V` @kind virtual;
  #L4b3d14.  v1:= v5.`com.google.android.material.slider.BaseSlider.ticksCoordinates` @type ^`float`[] @kind object;
  #L4b3d18.  v2:= length @variable v1;
  #L4b3d1a.  v2:= v2 - v0 @kind int;
  #L4b3d1c.  v3:= v5.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b3d20.  call `drawPoints`(v6, v1, v0, v2, v3) @signature `Landroid/graphics/Canvas;.drawPoints:([FIILandroid/graphics/Paint;)V` @kind virtual;
  #L4b3d26.  return @kind void;
}
procedure `boolean` `maybeIncreaseTrackSidePadding`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeIncreaseTrackSidePadding:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b20a0.  v0:= v4.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4b20a4.  v1:= v4.`com.google.android.material.slider.BaseSlider.defaultThumbRadius` @type ^`int`;
  #L4b20a8.  v0:= v0 - v1 @kind int;
  #L4b20aa.  v1:= 0I;
  #L4b20ac.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4b20b2.  v0:= temp;
  #L4b20b4.  v2:= v4.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L4b20b8.  v3:= v4.`com.google.android.material.slider.BaseSlider.defaultTrackHeight` @type ^`int`;
  #L4b20bc.  v2:= v2 - v3 @kind int;
  #L4b20be.  v2:= v2 / 2;
  #L4b20c2.  call temp:= `max`(v2, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4b20c8.  v2:= temp;
  #L4b20ca.  v3:= v4.`com.google.android.material.slider.BaseSlider.minTrackSidePadding` @type ^`int`;
  #L4b20ce.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4b20d4.  v0:= temp;
  #L4b20d6.  v3:= v3 + v0 @kind int;
  #L4b20d8.  v0:= v4.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b20dc.  if v0 != v3 then goto L4b20e2;
  #L4b20e0.  return v1;
  #L4b20e2.  v4.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int` := v3;
  #L4b20e6.  call temp:= `isLaidOut`(v4) @signature `Landroidx/core/view/ViewCompat;.isLaidOut:(Landroid/view/View;)Z` @kind static;
  #L4b20ec.  v0:= temp;
  #L4b20ee.  if v0 == 0 then goto L4b2100;
  #L4b20f2.  call temp:= `getWidth`(v4) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L4b20f8.  v0:= temp;
  #L4b20fa.  call `updateTrackWidth`(v4, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.updateTrackWidth:(I)V` @kind direct;
  #L4b2100.  v0:= 1I;
  #L4b2102.  return v0;
}
procedure `boolean` `maybeIncreaseWidgetHeight`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeIncreaseWidgetHeight:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4b2114.  call temp:= `getPaddingTop`(v3) @signature `Landroid/view/View;.getPaddingTop:()I` @kind virtual;
  #L4b211a.  v0:= temp;
  #L4b211c.  call temp:= `getPaddingBottom`(v3) @signature `Landroid/view/View;.getPaddingBottom:()I` @kind virtual;
  #L4b2122.  v1:= temp;
  #L4b2124.  v0:= v0 + v1 @kind int;
  #L4b2126.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L4b212a.  v1:= v1 + v0 @kind int;
  #L4b212c.  v0:= v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4b2130.  v0:= v0 * 2;
  #L4b2134.  call temp:= `getPaddingTop`(v3) @signature `Landroid/view/View;.getPaddingTop:()I` @kind virtual;
  #L4b213a.  v2:= temp;
  #L4b213c.  v0:= v0 + v2 @kind int;
  #L4b213e.  call temp:= `getPaddingBottom`(v3) @signature `Landroid/view/View;.getPaddingBottom:()I` @kind virtual;
  #L4b2144.  v2:= temp;
  #L4b2146.  v0:= v0 + v2 @kind int;
  #L4b2148.  v2:= v3.`com.google.android.material.slider.BaseSlider.minWidgetHeight` @type ^`int`;
  #L4b214c.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4b2152.  v0:= temp;
  #L4b2154.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4b215a.  v0:= temp;
  #L4b215c.  v1:= v3.`com.google.android.material.slider.BaseSlider.widgetHeight` @type ^`int`;
  #L4b2160.  if v0 != v1 then goto L4b2168;
  #L4b2164.  v0:= 0I;
  #L4b2166.  return v0;
  #L4b2168.  v3.`com.google.android.material.slider.BaseSlider.widgetHeight` @type ^`int` := v0;
  #L4b216c.  v0:= 1I;
  #L4b216e.  return v0;
}
procedure `boolean` `moveFocus`(`com.google.android.material.slider.BaseSlider` v11 @kind this, `int` v12 ) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4b2180.  v0:= v11.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4b2184.  v1:= (`long`) v0 @kind i2l;
  #L4b2186.  v3:= (`long`) v12 @kind i2l;
  #L4b2188.  v5:= v1 + v3 @kind long;
  #L4b218c.  v12:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b2190.  call temp:= `size`(v12) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b2196.  v12:= temp;
  #L4b2198.  v1:= 1I;
  #L4b219a.  v12:= v12 - v1 @kind int;
  #L4b219c.  v9:= (`long`) v12 @kind i2l;
  #L4b219e.  v7:= 0L;
  #L4b21a2.  call temp:= `clamp`(v5, v7, v9) @signature `Landroidx/core/math/MathUtils;.clamp:(JJJ)J` @kind static;
  #L4b21a8.  v2:= temp @kind wide;
  #L4b21aa.  v12:= (`int`) v2 @kind l2i;
  #L4b21ac.  v11.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v12;
  #L4b21b0.  if v12 != v0 then goto L4b21b8;
  #L4b21b4.  v12:= 0I;
  #L4b21b6.  return v12;
  #L4b21b8.  v0:= v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4b21bc.  v2:= -1I;
  #L4b21be.  if v0 == v2 then goto L4b21c6;
  #L4b21c2.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v12;
  #L4b21c6.  call `updateHaloHotspot`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L4b21cc.  call `postInvalidate`(v11) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b21d2.  return v1;
}
procedure `boolean` `moveFocusInAbsoluteDirection`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b21e4.  call temp:= `isRtl`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4b21ea.  v0:= temp;
  #L4b21ec.  if v0 == 0 then goto L4b2202;
  #L4b21f0.  v0:= -2147483648I;
  #L4b21f4.  if v2 != v0 then goto L4b2200;
  #L4b21f8.  v2:= 2147483647I;
  #L4b21fe.  goto L4b2202;
  #L4b2200.  v2:= -v2 @kind int;
  #L4b2202.  call temp:= `moveFocus`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4b2208.  v2:= temp;
  #L4b220a.  return v2;
}
procedure `float` `normalizeValue`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b2b2c.  v0:= v2.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b2b30.  v3:= v3 - v0 @kind float;
  #L4b2b32.  v1:= v2.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b2b36.  v1:= v1 - v0 @kind float;
  #L4b2b38.  v3:= v3 / v1 @kind float;
  #L4b2b3a.  call temp:= `isRtl`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4b2b40.  v0:= temp;
  #L4b2b42.  if v0 == 0 then goto L4b2b4e;
  #L4b2b46.  v0:= 1.0F;
  #L4b2b4a.  v0:= v0 - v3 @kind float;
  #L4b2b4c.  return v0;
  #L4b2b4e.  return v3;
}
procedure `java.lang.Boolean` `onKeyDownNoActiveThumb`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 , `android.view.KeyEvent` v5 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyDownNoActiveThumb:(ILandroid/view/KeyEvent;)Ljava/lang/Boolean;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4b2dac.  v0:= 61I;
  #L4b2db0.  v1:= 1I;
  #L4b2db2.  v2:= -1I;
  #L4b2db4.  if v4 == v0 then goto L4b2e26;
  #L4b2db8.  v5:= 66I;
  #L4b2dbc.  if v4 == v5 then goto L4b2e12;
  #L4b2dc0.  v5:= 81I;
  #L4b2dc4.  if v4 == v5 then goto L4b2e06;
  #L4b2dc8.  v5:= 69I;
  #L4b2dcc.  if v4 == v5 then goto L4b2dfa;
  #L4b2dd0.  v5:= 70I;
  #L4b2dd4.  if v4 == v5 then goto L4b2e06;
  #L4b2dd8.  goto L4b2e68;
  #L4b2dde.  v4:= 0I;
  #L4b2de0.  return v4 @kind object;
  #L4b2de2.  call temp:= `moveFocusInAbsoluteDirection`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L4b2de8.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4b2dec.  return v4 @kind object;
  #L4b2dee.  call temp:= `moveFocusInAbsoluteDirection`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocusInAbsoluteDirection:(I)Z` @kind direct;
  #L4b2df4.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4b2df8.  return v4 @kind object;
  #L4b2dfa.  call temp:= `moveFocus`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4b2e00.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4b2e04.  return v4 @kind object;
  #L4b2e06.  call temp:= `moveFocus`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4b2e0c.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4b2e10.  return v4 @kind object;
  #L4b2e12.  v4:= v3.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4b2e16.  v3.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v4;
  #L4b2e1a.  call `postInvalidate`(v3) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b2e20.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4b2e24.  return v4 @kind object;
  #L4b2e26.  call temp:= `hasNoModifiers`(v5) @signature `Landroid/view/KeyEvent;.hasNoModifiers:()Z` @kind virtual;
  #L4b2e2c.  v4:= temp;
  #L4b2e2e.  if v4 == 0 then goto L4b2e44;
  #L4b2e32.  call temp:= `moveFocus`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4b2e38.  v4:= temp;
  #L4b2e3a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L4b2e40.  v4:= temp @kind object;
  #L4b2e42.  return v4 @kind object;
  #L4b2e44.  call temp:= `isShiftPressed`(v5) @signature `Landroid/view/KeyEvent;.isShiftPressed:()Z` @kind virtual;
  #L4b2e4a.  v4:= temp;
  #L4b2e4c.  if v4 == 0 then goto L4b2e62;
  #L4b2e50.  call temp:= `moveFocus`(v3, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4b2e56.  v4:= temp;
  #L4b2e58.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L4b2e5e.  v4:= temp @kind object;
  #L4b2e60.  return v4 @kind object;
  #L4b2e62.  v4:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4b2e66.  return v4 @kind object;
  #L4b2e68.  switch v4
                  | 21 => goto L4b2dee
                  | 22 => goto L4b2de2
                  | 23 => goto L4b2e12
                  | else => goto L4b2dde;
}
procedure `void` `onStartTrackingTouch`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b3fd0.  v0:= v2.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L4b3fd4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b3fda.  v0:= temp @kind object;
  #L4b3fdc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b3fe2.  v1:= temp;
  #L4b3fe4.  if v1 == 0 then goto L4b3ffc;
  #L4b3fe8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b3fee.  v1:= temp @kind object;
  #L4b3ff0.  v1:= (`com.google.android.material.slider.BaseOnSliderTouchListener`) v1 @kind object;
  #L4b3ff4.  call `onStartTrackingTouch`(v1, v2) @signature `Lcom/google/android/material/slider/BaseOnSliderTouchListener;.onStartTrackingTouch:(Ljava/lang/Object;)V` @kind interface;
  #L4b3ffa.  goto L4b3fdc;
  #L4b3ffc.  return @kind void;
}
procedure `void` `onStopTrackingTouch`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onStopTrackingTouch:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b4010.  v0:= v2.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L4b4014.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b401a.  v0:= temp @kind object;
  #L4b401c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b4022.  v1:= temp;
  #L4b4024.  if v1 == 0 then goto L4b403c;
  #L4b4028.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b402e.  v1:= temp @kind object;
  #L4b4030.  v1:= (`com.google.android.material.slider.BaseOnSliderTouchListener`) v1 @kind object;
  #L4b4034.  call `onStopTrackingTouch`(v1, v2) @signature `Lcom/google/android/material/slider/BaseOnSliderTouchListener;.onStopTrackingTouch:(Ljava/lang/Object;)V` @kind interface;
  #L4b403a.  goto L4b401c;
  #L4b403c.  return @kind void;
}
procedure `com.google.android.material.tooltip.TooltipDrawable` `parseLabelDrawable`(`android.content.Context` v2 @kind object, `android.content.res.TypedArray` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.parseLabelDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;)Lcom/google/android/material/tooltip/TooltipDrawable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4b27f8.  v0:= `@@com.google.android.material.R$styleable.Slider_labelStyle` @type ^`int`;
  #L4b27fc.  v1:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Tooltip` @type ^`int`;
  #L4b2800.  call temp:= `getResourceId`(v3, v0, v1) @signature `Landroid/content/res/TypedArray;.getResourceId:(II)I` @kind virtual;
  #L4b2806.  v3:= temp;
  #L4b2808.  v0:= 0I;
  #L4b280a.  v1:= 0I;
  #L4b280c.  call temp:= `createFromAttributes`(v2, v0, v1, v3) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/tooltip/TooltipDrawable;` @kind static;
  #L4b2812.  v2:= temp @kind object;
  #L4b2814.  return v2 @kind object;
}
procedure `int` `pivotIndex`(`float`[] v0 @kind object, `float` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.pivotIndex:([FF)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4b2d80.  v0:= length @variable v0;
  #L4b2d82.  v0:= v0 / 2;
  #L4b2d86.  v0:= v0 + -1;
  #L4b2d8a.  v0:= (`float`) v0 @kind i2f;
  #L4b2d8c.  v1:= v1 * v0 @kind float;
  #L4b2d90.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L4b2d96.  v0:= temp;
  #L4b2d98.  return v0;
}
procedure `void` `processAttributes`(`com.google.android.material.slider.BaseSlider` v7 @kind this, `android.content.Context` v8 @kind object, `android.util.AttributeSet` v9 @kind object, `int` v10 ) @signature `Lcom/google/android/material/slider/BaseSlider;.processAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4b40a8.  v2:= `@@com.google.android.material.R$styleable.Slider` @type ^`int`[] @kind object;
  #L4b40ac.  v4:= `@@com.google.android.material.slider.BaseSlider.DEF_STYLE_RES` @type ^`int`;
  #L4b40b0.  v6:= 0I;
  #L4b40b2.  v5:= new `int`[v6];
  #L4b40b6.  v0:= v8 @kind object;
  #L4b40b8.  v1:= v9 @kind object;
  #L4b40ba.  v3:= v10;
  #L4b40bc.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L4b40c2.  v9:= temp @kind object;
  #L4b40c4.  v10:= `@@com.google.android.material.R$styleable.Slider_android_valueFrom` @type ^`int`;
  #L4b40c8.  v0:= 0I;
  #L4b40ca.  call temp:= `getFloat`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L4b40d0.  v10:= temp;
  #L4b40d2.  v7.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float` := v10;
  #L4b40d6.  v10:= `@@com.google.android.material.R$styleable.Slider_android_valueTo` @type ^`int`;
  #L4b40da.  v1:= 1.0F;
  #L4b40de.  call temp:= `getFloat`(v9, v10, v1) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L4b40e4.  v10:= temp;
  #L4b40e6.  v7.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float` := v10;
  #L4b40ea.  v10:= 1I;
  #L4b40ec.  v1:= new `java.lang.Float`[v10];
  #L4b40f0.  v2:= v7.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b40f4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b40fa.  v2:= temp @kind object;
  #L4b40fc.  v1[v6]:= v2 @kind object;
  #L4b4100.  call `setValues`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setValues:([Ljava/lang/Float;)V` @kind virtual;
  #L4b4106.  v1:= `@@com.google.android.material.R$styleable.Slider_android_stepSize` @type ^`int`;
  #L4b410a.  call temp:= `getFloat`(v9, v1, v0) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L4b4110.  v1:= temp;
  #L4b4112.  v7.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v1;
  #L4b4116.  v1:= `@@com.google.android.material.R$styleable.Slider_trackColor` @type ^`int`;
  #L4b411a.  call temp:= `hasValue`(v9, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L4b4120.  v2:= temp;
  #L4b4122.  if v2 == 0 then goto L4b412a;
  #L4b4126.  v3:= v1;
  #L4b4128.  goto L4b412e;
  #L4b412a.  v3:= `@@com.google.android.material.R$styleable.Slider_trackColorInactive` @type ^`int`;
  #L4b412e.  if v2 == 0 then goto L4b4134;
  #L4b4132.  goto L4b4138;
  #L4b4134.  v1:= `@@com.google.android.material.R$styleable.Slider_trackColorActive` @type ^`int`;
  #L4b4138.  call temp:= `getColorStateList`(v8, v9, v3) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b413e.  v2:= temp @kind object;
  #L4b4140.  if v2 == 0 then goto L4b4146;
  #L4b4144.  goto L4b4152;
  #L4b4146.  v2:= `@@com.google.android.material.R$color.material_slider_inactive_track_color` @type ^`int`;
  #L4b414a.  call temp:= `getColorStateList`(v8, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b4150.  v2:= temp @kind object;
  #L4b4152.  call `setTrackInactiveTintList`(v7, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b4158.  call temp:= `getColorStateList`(v8, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b415e.  v1:= temp @kind object;
  #L4b4160.  if v1 == 0 then goto L4b4166;
  #L4b4164.  goto L4b4172;
  #L4b4166.  v1:= `@@com.google.android.material.R$color.material_slider_active_track_color` @type ^`int`;
  #L4b416a.  call temp:= `getColorStateList`(v8, v1) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b4170.  v1:= temp @kind object;
  #L4b4172.  call `setTrackActiveTintList`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b4178.  v1:= `@@com.google.android.material.R$styleable.Slider_thumbColor` @type ^`int`;
  #L4b417c.  call temp:= `getColorStateList`(v8, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b4182.  v1:= temp @kind object;
  #L4b4184.  v2:= v7.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b4188.  call `setFillColor`(v2, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b418e.  v1:= `@@com.google.android.material.R$styleable.Slider_thumbStrokeColor` @type ^`int`;
  #L4b4192.  call temp:= `hasValue`(v9, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L4b4198.  v2:= temp;
  #L4b419a.  if v2 == 0 then goto L4b41ac;
  #L4b419e.  call temp:= `getColorStateList`(v8, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b41a4.  v1:= temp @kind object;
  #L4b41a6.  call `setThumbStrokeColor`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b41ac.  v1:= `@@com.google.android.material.R$styleable.Slider_thumbStrokeWidth` @type ^`int`;
  #L4b41b0.  call temp:= `getDimension`(v9, v1, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L4b41b6.  v1:= temp;
  #L4b41b8.  call `setThumbStrokeWidth`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidth:(F)V` @kind virtual;
  #L4b41be.  v1:= `@@com.google.android.material.R$styleable.Slider_haloColor` @type ^`int`;
  #L4b41c2.  call temp:= `getColorStateList`(v8, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b41c8.  v1:= temp @kind object;
  #L4b41ca.  if v1 == 0 then goto L4b41d0;
  #L4b41ce.  goto L4b41dc;
  #L4b41d0.  v1:= `@@com.google.android.material.R$color.material_slider_halo_color` @type ^`int`;
  #L4b41d4.  call temp:= `getColorStateList`(v8, v1) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b41da.  v1:= temp @kind object;
  #L4b41dc.  call `setHaloTintList`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b41e2.  v1:= `@@com.google.android.material.R$styleable.Slider_tickVisible` @type ^`int`;
  #L4b41e6.  call temp:= `getBoolean`(v9, v1, v10) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L4b41ec.  v1:= temp;
  #L4b41ee.  v7.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` := v1 @kind boolean;
  #L4b41f2.  v1:= `@@com.google.android.material.R$styleable.Slider_tickColor` @type ^`int`;
  #L4b41f6.  call temp:= `hasValue`(v9, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L4b41fc.  v2:= temp;
  #L4b41fe.  if v2 == 0 then goto L4b4206;
  #L4b4202.  v3:= v1;
  #L4b4204.  goto L4b420a;
  #L4b4206.  v3:= `@@com.google.android.material.R$styleable.Slider_tickColorInactive` @type ^`int`;
  #L4b420a.  if v2 == 0 then goto L4b4210;
  #L4b420e.  goto L4b4214;
  #L4b4210.  v1:= `@@com.google.android.material.R$styleable.Slider_tickColorActive` @type ^`int`;
  #L4b4214.  call temp:= `getColorStateList`(v8, v9, v3) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b421a.  v2:= temp @kind object;
  #L4b421c.  if v2 == 0 then goto L4b4222;
  #L4b4220.  goto L4b422e;
  #L4b4222.  v2:= `@@com.google.android.material.R$color.material_slider_inactive_tick_marks_color` @type ^`int`;
  #L4b4226.  call temp:= `getColorStateList`(v8, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b422c.  v2:= temp @kind object;
  #L4b422e.  call `setTickInactiveTintList`(v7, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b4234.  call temp:= `getColorStateList`(v8, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b423a.  v1:= temp @kind object;
  #L4b423c.  if v1 == 0 then goto L4b4242;
  #L4b4240.  goto L4b424e;
  #L4b4242.  v1:= `@@com.google.android.material.R$color.material_slider_active_tick_marks_color` @type ^`int`;
  #L4b4246.  call temp:= `getColorStateList`(v8, v1) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b424c.  v1:= temp @kind object;
  #L4b424e.  call `setTickActiveTintList`(v7, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b4254.  v8:= `@@com.google.android.material.R$styleable.Slider_thumbRadius` @type ^`int`;
  #L4b4258.  call temp:= `getDimensionPixelSize`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L4b425e.  v8:= temp;
  #L4b4260.  call `setThumbRadius`(v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadius:(I)V` @kind virtual;
  #L4b4266.  v8:= `@@com.google.android.material.R$styleable.Slider_haloRadius` @type ^`int`;
  #L4b426a.  call temp:= `getDimensionPixelSize`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L4b4270.  v8:= temp;
  #L4b4272.  call `setHaloRadius`(v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadius:(I)V` @kind virtual;
  #L4b4278.  v8:= `@@com.google.android.material.R$styleable.Slider_thumbElevation` @type ^`int`;
  #L4b427c.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L4b4282.  v8:= temp;
  #L4b4284.  call `setThumbElevation`(v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevation:(F)V` @kind virtual;
  #L4b428a.  v8:= `@@com.google.android.material.R$styleable.Slider_trackHeight` @type ^`int`;
  #L4b428e.  call temp:= `getDimensionPixelSize`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L4b4294.  v8:= temp;
  #L4b4296.  call `setTrackHeight`(v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackHeight:(I)V` @kind virtual;
  #L4b429c.  v8:= `@@com.google.android.material.R$styleable.Slider_labelBehavior` @type ^`int`;
  #L4b42a0.  call temp:= `getInt`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L4b42a6.  v8:= temp;
  #L4b42a8.  call `setLabelBehavior`(v7, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.setLabelBehavior:(I)V` @kind virtual;
  #L4b42ae.  v8:= `@@com.google.android.material.R$styleable.Slider_android_enabled` @type ^`int`;
  #L4b42b2.  call temp:= `getBoolean`(v9, v8, v10) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L4b42b8.  v8:= temp;
  #L4b42ba.  if v8 != 0 then goto L4b42c4;
  #L4b42be.  call `setEnabled`(v7, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.setEnabled:(Z)V` @kind virtual;
  #L4b42c4.  call `recycle`(v9) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L4b42ca.  return @kind void;
}
procedure `void` `scheduleAccessibilityEventSender`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/slider/BaseSlider;.scheduleAccessibilityEventSender:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b4314.  v0:= v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L4b4318.  if v0 != 0 then goto L4b432e;
  #L4b431c.  v0:= new `com.google.android.material.slider.BaseSlider$AccessibilityEventSender`;
  #L4b4320.  v1:= 0I;
  #L4b4322.  call `<init>`(v0, v2, v1) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityEventSender;.<init>:(Lcom/google/android/material/slider/BaseSlider;Lcom/google/android/material/slider/BaseSlider$1;)V` @kind direct;
  #L4b4328.  v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` := v0 @kind object;
  #L4b432c.  goto L4b4334;
  #L4b432e.  call temp:= `removeCallbacks`(v2, v0) @signature `Landroid/view/View;.removeCallbacks:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L4b4334.  v0:= v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L4b4338.  call `setVirtualViewId`(v0, v3) @signature `Lcom/google/android/material/slider/BaseSlider$AccessibilityEventSender;.setVirtualViewId:(I)V` @kind virtual;
  #L4b433e.  v3:= v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L4b4342.  v0:= 200L;
  #L4b4346.  call temp:= `postDelayed`(v2, v3, v0) @signature `Landroid/view/View;.postDelayed:(Ljava/lang/Runnable;J)Z` @kind virtual;
  #L4b434c.  return @kind void;
}
procedure `void` `setValueForLabel`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `com.google.android.material.tooltip.TooltipDrawable` v4 @kind object, `float` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueForLabel:(Lcom/google/android/material/tooltip/TooltipDrawable;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4b4a30.  call temp:= `formatValue`(v3, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.formatValue:(F)Ljava/lang/String;` @kind direct;
  #L4b4a36.  v0:= temp @kind object;
  #L4b4a38.  call `setText`(v4, v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L4b4a3e.  v0:= v3.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b4a42.  call temp:= `normalizeValue`(v3, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4b4a48.  v5:= temp;
  #L4b4a4a.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b4a4e.  v1:= (`float`) v1 @kind i2f;
  #L4b4a50.  v5:= v5 * v1 @kind float;
  #L4b4a54.  v5:= (`int`) v5 @kind f2i;
  #L4b4a56.  v0:= v0 + v5 @kind int;
  #L4b4a58.  call temp:= `getIntrinsicWidth`(v4) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L4b4a5e.  v5:= temp;
  #L4b4a60.  v5:= v5 / 2;
  #L4b4a64.  v0:= v0 - v5 @kind int;
  #L4b4a66.  call temp:= `calculateTrackCenter`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTrackCenter:()I` @kind direct;
  #L4b4a6c.  v5:= temp;
  #L4b4a6e.  v1:= v3.`com.google.android.material.slider.BaseSlider.labelPadding` @type ^`int`;
  #L4b4a72.  v2:= v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4b4a76.  v1:= v1 + v2 @kind int;
  #L4b4a78.  v5:= v5 - v1 @kind int;
  #L4b4a7a.  call temp:= `getIntrinsicHeight`(v4) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L4b4a80.  v1:= temp;
  #L4b4a82.  v1:= v5 - v1 @kind int;
  #L4b4a86.  call temp:= `getIntrinsicWidth`(v4) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L4b4a8c.  v2:= temp;
  #L4b4a8e.  v2:= v2 + v0 @kind int;
  #L4b4a90.  call `setBounds`(v4, v0, v1, v2, v5) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L4b4a96.  v5:= new `android.graphics.Rect`;
  #L4b4a9a.  call temp:= `getBounds`(v4) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L4b4aa0.  v0:= temp @kind object;
  #L4b4aa2.  call `<init>`(v5, v0) @signature `Landroid/graphics/Rect;.<init>:(Landroid/graphics/Rect;)V` @kind direct;
  #L4b4aa8.  call temp:= `getContentView`(v3) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentView:(Landroid/view/View;)Landroid/view/ViewGroup;` @kind static;
  #L4b4aae.  v0:= temp @kind object;
  #L4b4ab0.  call `offsetDescendantRect`(v0, v3, v5) @signature `Lcom/google/android/material/internal/DescendantOffsetUtils;.offsetDescendantRect:(Landroid/view/ViewGroup;Landroid/view/View;Landroid/graphics/Rect;)V` @kind static;
  #L4b4ab6.  call `setBounds`(v4, v5) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L4b4abc.  call temp:= `getContentViewOverlay`(v3) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentViewOverlay:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayImpl;` @kind static;
  #L4b4ac2.  v5:= temp @kind object;
  #L4b4ac4.  call `add`(v5, v4) @signature `Lcom/google/android/material/internal/ViewOverlayImpl;.add:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L4b4aca.  return @kind void;
}
procedure `void` `setValuesInternal`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `java.util.ArrayList` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b4b70.  call temp:= `isEmpty`(v3) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L4b4b76.  v0:= temp;
  #L4b4b78.  if v0 != 0 then goto L4b4bd6;
  #L4b4b7c.  call `sort`(v3) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L4b4b82.  v0:= v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b4b86.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b4b8c.  v0:= temp;
  #L4b4b8e.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b4b94.  v1:= temp;
  #L4b4b96.  if v0 != v1 then goto L4b4bac;
  #L4b4b9a.  v0:= v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b4b9e.  call temp:= `equals`(v0, v3) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b4ba4.  v0:= temp;
  #L4b4ba6.  if v0 == 0 then goto L4b4bac;
  #L4b4baa.  return @kind void;
  #L4b4bac.  v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` := v3 @kind object;
  #L4b4bb0.  v3:= 1I;
  #L4b4bb2.  v2.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v3 @kind boolean;
  #L4b4bb6.  v3:= 0I;
  #L4b4bb8.  v2.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v3;
  #L4b4bbc.  call `updateHaloHotspot`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L4b4bc2.  call `createLabelPool`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.createLabelPool:()V` @kind direct;
  #L4b4bc8.  call `dispatchOnChangedProgrammatically`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedProgrammatically:()V` @kind direct;
  #L4b4bce.  call `postInvalidate`(v2) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b4bd4.  return @kind void;
  #L4b4bd6.  v3:= new `java.lang.IllegalArgumentException`;
  #L4b4bda.  v0:= "At least one value must be set" @kind object;
  #L4b4bde.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b4be4.  throw v3;
}
procedure `boolean` `shouldAlwaysShowLabel`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldAlwaysShowLabel:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b2694.  v0:= v2.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L4b2698.  v1:= 3I;
  #L4b269a.  if v0 != v1 then goto L4b26a2;
  #L4b269e.  v0:= 1I;
  #L4b26a0.  goto L4b26a4;
  #L4b26a2.  v0:= 0I;
  #L4b26a4.  return v0;
}
procedure `boolean` `shouldDrawCompatHalo`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b26b8.  v0:= v1.`com.google.android.material.slider.BaseSlider.forceDrawCompatHalo` @type ^`boolean` @kind boolean;
  #L4b26bc.  if v0 != 0 then goto L4b26d6;
  #L4b26c0.  call temp:= `getBackground`(v1) @signature `Landroid/view/View;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L4b26c6.  v0:= temp @kind object;
  #L4b26c8.  v0:= instanceof @variable v0 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L4b26cc.  if v0 != 0 then goto L4b26d2;
  #L4b26d0.  goto L4b26d6;
  #L4b26d2.  v0:= 0I;
  #L4b26d4.  goto L4b26d8;
  #L4b26d6.  v0:= 1I;
  #L4b26d8.  return v0;
}
procedure `boolean` `snapActiveThumbToValue`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.snapActiveThumbToValue:(F)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b26ec.  v0:= v1.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4b26f0.  call temp:= `snapThumbToValue`(v1, v0, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.snapThumbToValue:(IF)Z` @kind direct;
  #L4b26f6.  v2:= temp;
  #L4b26f8.  return v2;
}
procedure `double` `snapPosition`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `float` v6 ) @signature `Lcom/google/android/material/slider/BaseSlider;.snapPosition:(F)D` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b2828.  v0:= v5.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b282c.  v1:= 0I;
  #L4b282e.  v1:= fcmpl(v0, v1);
  #L4b2832.  if v1 <= 0 then goto L4b285a;
  #L4b2836.  v1:= v5.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b283a.  v2:= v5.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b283e.  v1:= v1 - v2 @kind float;
  #L4b2840.  v1:= v1 / v0 @kind float;
  #L4b2842.  v0:= (`int`) v1 @kind f2i;
  #L4b2844.  v1:= (`float`) v0 @kind i2f;
  #L4b2846.  v6:= v6 * v1 @kind float;
  #L4b284a.  call temp:= `round`(v6) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L4b2850.  v6:= temp;
  #L4b2852.  v1:= (`double`) v6 @kind i2d;
  #L4b2854.  v3:= (`double`) v0 @kind i2d;
  #L4b2856.  v1:= v1 / v3 @kind double;
  #L4b2858.  return v1 @kind wide;
  #L4b285a.  v0:= (`double`) v6 @kind f2d;
  #L4b285c.  return v0 @kind wide;
}
procedure `boolean` `snapThumbToValue`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `int` v6 , `float` v7 ) @signature `Lcom/google/android/material/slider/BaseSlider;.snapThumbToValue:(IF)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b270c.  v5.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v6;
  #L4b2710.  v0:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b2714.  call temp:= `get`(v0, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b271a.  v0:= temp @kind object;
  #L4b271c.  v0:= (`java.lang.Float`) v0 @kind object;
  #L4b2720.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b2726.  v0:= temp;
  #L4b2728.  v0:= v7 - v0 @kind float;
  #L4b272c.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4b2732.  v0:= temp;
  #L4b2734.  v0:= (`double`) v0 @kind f2d;
  #L4b2736.  v2:= 1.0E-4D;
  #L4b2740.  v4:= dcmpg(v0, v2);
  #L4b2744.  if v4 >= 0 then goto L4b274c;
  #L4b2748.  v6:= 0I;
  #L4b274a.  return v6;
  #L4b274c.  call temp:= `getClampedValue`(v5, v6, v7) @signature `Lcom/google/android/material/slider/BaseSlider;.getClampedValue:(IF)F` @kind direct;
  #L4b2752.  v7:= temp;
  #L4b2754.  v0:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b2758.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b275e.  v7:= temp @kind object;
  #L4b2760.  call temp:= `set`(v0, v6, v7) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4b2766.  call `dispatchOnChangedFromUser`(v5, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchOnChangedFromUser:(I)V` @kind direct;
  #L4b276c.  v6:= 1I;
  #L4b276e.  return v6;
}
procedure `boolean` `snapTouchPosition`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b2780.  call temp:= `getValueOfTouchPosition`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPosition:()F` @kind direct;
  #L4b2786.  v0:= temp;
  #L4b2788.  call temp:= `snapActiveThumbToValue`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.snapActiveThumbToValue:(F)Z` @kind direct;
  #L4b278e.  v0:= temp;
  #L4b2790.  return v0;
}
procedure `void` `updateHaloHotspot`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b4c60.  call temp:= `shouldDrawCompatHalo`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L4b4c66.  v0:= temp;
  #L4b4c68.  if v0 != 0 then goto L4b4cde;
  #L4b4c6c.  call temp:= `getMeasuredWidth`(v6) @signature `Landroid/view/View;.getMeasuredWidth:()I` @kind virtual;
  #L4b4c72.  v0:= temp;
  #L4b4c74.  if v0 <= 0 then goto L4b4cde;
  #L4b4c78.  call temp:= `getBackground`(v6) @signature `Landroid/view/View;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L4b4c7e.  v0:= temp @kind object;
  #L4b4c80.  v1:= instanceof @variable v0 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L4b4c84.  if v1 == 0 then goto L4b4cde;
  #L4b4c88.  v1:= v6.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b4c8c.  v2:= v6.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4b4c90.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b4c96.  v1:= temp @kind object;
  #L4b4c98.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4b4c9c.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b4ca2.  v1:= temp;
  #L4b4ca4.  call temp:= `normalizeValue`(v6, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4b4caa.  v1:= temp;
  #L4b4cac.  v2:= v6.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b4cb0.  v2:= (`float`) v2 @kind i2f;
  #L4b4cb2.  v1:= v1 * v2 @kind float;
  #L4b4cb6.  v2:= v6.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b4cba.  v2:= (`float`) v2 @kind i2f;
  #L4b4cbc.  v1:= v1 + v2 @kind float;
  #L4b4cbe.  v1:= (`int`) v1 @kind f2i;
  #L4b4cc0.  call temp:= `calculateTrackCenter`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTrackCenter:()I` @kind direct;
  #L4b4cc6.  v2:= temp;
  #L4b4cc8.  v3:= v6.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L4b4ccc.  v4:= v1 - v3 @kind int;
  #L4b4cd0.  v5:= v2 - v3 @kind int;
  #L4b4cd4.  v1:= v1 + v3 @kind int;
  #L4b4cd6.  v2:= v2 + v3 @kind int;
  #L4b4cd8.  call `setHotspotBounds`(v0, v4, v5, v1, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setHotspotBounds:(Landroid/graphics/drawable/Drawable;IIII)V` @kind static;
  #L4b4cde.  return @kind void;
}
procedure `void` `updateTrackWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.updateTrackWidth:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b4cf0.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b4cf4.  v0:= v0 * 2;
  #L4b4cf8.  v2:= v2 - v0 @kind int;
  #L4b4cfa.  v0:= 0I;
  #L4b4cfc.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4b4d02.  v2:= temp;
  #L4b4d04.  v1.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int` := v2;
  #L4b4d08.  call `maybeCalculateTicksCoordinates`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeCalculateTicksCoordinates:()V` @kind direct;
  #L4b4d0e.  return @kind void;
}
procedure `void` `updateWidgetLayout`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.updateWidgetLayout:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b4d20.  call temp:= `maybeIncreaseWidgetHeight`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeIncreaseWidgetHeight:()Z` @kind direct;
  #L4b4d26.  v0:= temp;
  #L4b4d28.  call temp:= `maybeIncreaseTrackSidePadding`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeIncreaseTrackSidePadding:()Z` @kind direct;
  #L4b4d2e.  v1:= temp;
  #L4b4d30.  if v0 == 0 then goto L4b4d3c;
  #L4b4d34.  call `requestLayout`(v2) @signature `Landroid/view/View;.requestLayout:()V` @kind virtual;
  #L4b4d3a.  goto L4b4d46;
  #L4b4d3c.  if v1 == 0 then goto L4b4d46;
  #L4b4d40.  call `postInvalidate`(v2) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b4d46.  return @kind void;
}
procedure `void` `validateConfigurationIfDirty`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateConfigurationIfDirty:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b4d58.  v0:= v1.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` @kind boolean;
  #L4b4d5c.  if v0 == 0 then goto L4b4d8a;
  #L4b4d60.  call `validateValueFrom`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueFrom:()V` @kind direct;
  #L4b4d66.  call `validateValueTo`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueTo:()V` @kind direct;
  #L4b4d6c.  call `validateStepSize`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateStepSize:()V` @kind direct;
  #L4b4d72.  call `validateValues`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValues:()V` @kind direct;
  #L4b4d78.  call `validateMinSeparation`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.validateMinSeparation:()V` @kind direct;
  #L4b4d7e.  call `warnAboutFloatingPointError`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.warnAboutFloatingPointError:()V` @kind direct;
  #L4b4d84.  v0:= 0I;
  #L4b4d86.  v1.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v0 @kind boolean;
  #L4b4d8a.  return @kind void;
}
procedure `void` `validateMinSeparation`(`com.google.android.material.slider.BaseSlider` v6 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateMinSeparation:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b4d9c.  call temp:= `getMinSeparation`(v6) @signature `Lcom/google/android/material/slider/BaseSlider;.getMinSeparation:()F` @kind virtual;
  #L4b4da2.  v0:= temp;
  #L4b4da4.  v1:= 0I;
  #L4b4da6.  v2:= 0I;
  #L4b4da8.  v3:= 1I;
  #L4b4daa.  v4:= fcmpg(v0, v2);
  #L4b4dae.  if v4 < 0 then goto L4b4e6a;
  #L4b4db2.  v4:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b4db6.  v5:= fcmpl(v4, v2);
  #L4b4dba.  if v5 <= 0 then goto L4b4e68;
  #L4b4dbe.  v2:= fcmpl(v0, v2);
  #L4b4dc2.  if v2 <= 0 then goto L4b4e68;
  #L4b4dc6.  v2:= v6.`com.google.android.material.slider.BaseSlider.separationUnit` @type ^`int`;
  #L4b4dca.  v5:= 2I;
  #L4b4dcc.  if v2 != v3 then goto L4b4e30;
  #L4b4dd0.  v2:= fcmpg(v0, v4);
  #L4b4dd4.  if v2 < 0 then goto L4b4de6;
  #L4b4dd8.  call temp:= `isMultipleOfStepSize`(v6, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.isMultipleOfStepSize:(F)Z` @kind direct;
  #L4b4dde.  v2:= temp;
  #L4b4de0.  if v2 == 0 then goto L4b4de6;
  #L4b4de4.  goto L4b4e68;
  #L4b4de6.  v2:= new `java.lang.IllegalStateException`;
  #L4b4dea.  v4:= 3I;
  #L4b4dec.  v4:= new `java.lang.Object`[v4];
  #L4b4df0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4df6.  v0:= temp @kind object;
  #L4b4df8.  v4[v1]:= v0 @kind object;
  #L4b4dfc.  v0:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b4e00.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4e06.  v0:= temp @kind object;
  #L4b4e08.  v4[v3]:= v0 @kind object;
  #L4b4e0c.  v0:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b4e10.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4e16.  v0:= temp @kind object;
  #L4b4e18.  v4[v5]:= v0 @kind object;
  #L4b4e1c.  v0:= "minSeparation(%s) must be greater or equal and a multiple of stepSize(%s) when using stepSize(%s)" @kind object;
  #L4b4e20.  call temp:= `format`(v0, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b4e26.  v0:= temp @kind object;
  #L4b4e28.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b4e2e.  throw v2;
  #L4b4e30.  v2:= new `java.lang.IllegalStateException`;
  #L4b4e34.  v4:= new `java.lang.Object`[v5];
  #L4b4e38.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4e3e.  v0:= temp @kind object;
  #L4b4e40.  v4[v1]:= v0 @kind object;
  #L4b4e44.  v0:= v6.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b4e48.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4e4e.  v0:= temp @kind object;
  #L4b4e50.  v4[v3]:= v0 @kind object;
  #L4b4e54.  v0:= "minSeparation(%s) cannot be set as a dimension when using stepSize(%s)" @kind object;
  #L4b4e58.  call temp:= `format`(v0, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b4e5e.  v0:= temp @kind object;
  #L4b4e60.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b4e66.  throw v2;
  #L4b4e68.  return @kind void;
  #L4b4e6a.  v2:= new `java.lang.IllegalStateException`;
  #L4b4e6e.  v3:= new `java.lang.Object`[v3];
  #L4b4e72.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4e78.  v0:= temp @kind object;
  #L4b4e7a.  v3[v1]:= v0 @kind object;
  #L4b4e7e.  v0:= "minSeparation(%s) must be greater or equal to 0" @kind object;
  #L4b4e82.  call temp:= `format`(v0, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b4e88.  v0:= temp @kind object;
  #L4b4e8a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b4e90.  throw v2;
}
procedure `void` `validateStepSize`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateStepSize:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b4ea4.  v0:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b4ea8.  v1:= 0I;
  #L4b4eaa.  v0:= fcmpl(v0, v1);
  #L4b4eae.  if v0 <= 0 then goto L4b4f18;
  #L4b4eb2.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b4eb6.  call temp:= `valueLandsOnTick`(v4, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.valueLandsOnTick:(F)Z` @kind direct;
  #L4b4ebc.  v0:= temp;
  #L4b4ebe.  if v0 == 0 then goto L4b4ec4;
  #L4b4ec2.  goto L4b4f18;
  #L4b4ec4.  v0:= new `java.lang.IllegalStateException`;
  #L4b4ec8.  v1:= 3I;
  #L4b4eca.  v1:= new `java.lang.Object`[v1];
  #L4b4ece.  v2:= 0I;
  #L4b4ed0.  v3:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b4ed4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4eda.  v3:= temp @kind object;
  #L4b4edc.  v1[v2]:= v3 @kind object;
  #L4b4ee0.  v2:= 1I;
  #L4b4ee2.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b4ee6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4eec.  v3:= temp @kind object;
  #L4b4eee.  v1[v2]:= v3 @kind object;
  #L4b4ef2.  v2:= 2I;
  #L4b4ef4.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b4ef8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4efe.  v3:= temp @kind object;
  #L4b4f00.  v1[v2]:= v3 @kind object;
  #L4b4f04.  v2:= "The stepSize(%s) must be 0, or a factor of the valueFrom(%s)-valueTo(%s) range" @kind object;
  #L4b4f08.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b4f0e.  v1:= temp @kind object;
  #L4b4f10.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b4f16.  throw v0;
  #L4b4f18.  return @kind void;
}
procedure `void` `validateValueFrom`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueFrom:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b4f2c.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b4f30.  v1:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b4f34.  v0:= fcmpl(v0, v1);
  #L4b4f38.  if v0 >= 0 then goto L4b4f3e;
  #L4b4f3c.  return @kind void;
  #L4b4f3e.  v0:= new `java.lang.IllegalStateException`;
  #L4b4f42.  v1:= 2I;
  #L4b4f44.  v1:= new `java.lang.Object`[v1];
  #L4b4f48.  v2:= 0I;
  #L4b4f4a.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b4f4e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4f54.  v3:= temp @kind object;
  #L4b4f56.  v1[v2]:= v3 @kind object;
  #L4b4f5a.  v2:= 1I;
  #L4b4f5c.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b4f60.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4f66.  v3:= temp @kind object;
  #L4b4f68.  v1[v2]:= v3 @kind object;
  #L4b4f6c.  v2:= "valueFrom(%s) must be smaller than valueTo(%s)" @kind object;
  #L4b4f70.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b4f76.  v1:= temp @kind object;
  #L4b4f78.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b4f7e.  throw v0;
}
procedure `void` `validateValueTo`(`com.google.android.material.slider.BaseSlider` v4 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValueTo:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b4f90.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b4f94.  v1:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b4f98.  v0:= fcmpg(v0, v1);
  #L4b4f9c.  if v0 <= 0 then goto L4b4fa2;
  #L4b4fa0.  return @kind void;
  #L4b4fa2.  v0:= new `java.lang.IllegalStateException`;
  #L4b4fa6.  v1:= 2I;
  #L4b4fa8.  v1:= new `java.lang.Object`[v1];
  #L4b4fac.  v2:= 0I;
  #L4b4fae.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b4fb2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4fb8.  v3:= temp @kind object;
  #L4b4fba.  v1[v2]:= v3 @kind object;
  #L4b4fbe.  v2:= 1I;
  #L4b4fc0.  v3:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b4fc4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b4fca.  v3:= temp @kind object;
  #L4b4fcc.  v1[v2]:= v3 @kind object;
  #L4b4fd0.  v2:= "valueTo(%s) must be greater than valueFrom(%s)" @kind object;
  #L4b4fd4.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b4fda.  v1:= temp @kind object;
  #L4b4fdc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b4fe2.  throw v0;
}
procedure `void` `validateValues`(`com.google.android.material.slider.BaseSlider` v8 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.validateValues:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4b4ff4.  v0:= v8.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b4ff8.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4b4ffe.  v0:= temp @kind object;
  #L4b5000.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b5006.  v1:= temp;
  #L4b5008.  if v1 == 0 then goto L4b50fe;
  #L4b500c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b5012.  v1:= temp @kind object;
  #L4b5014.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4b5018.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b501e.  v2:= temp;
  #L4b5020.  v3:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b5024.  v4:= 2I;
  #L4b5026.  v5:= 1I;
  #L4b5028.  v6:= 0I;
  #L4b502a.  v7:= 3I;
  #L4b502c.  v2:= fcmpg(v2, v3);
  #L4b5030.  if v2 < 0 then goto L4b50be;
  #L4b5034.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b503a.  v2:= temp;
  #L4b503c.  v3:= v8.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b5040.  v2:= fcmpl(v2, v3);
  #L4b5044.  if v2 > 0 then goto L4b50be;
  #L4b5048.  v2:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b504c.  v3:= 0I;
  #L4b504e.  v2:= fcmpl(v2, v3);
  #L4b5052.  if v2 <= 0 then goto L4b5000;
  #L4b5056.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b505c.  v2:= temp;
  #L4b505e.  call temp:= `valueLandsOnTick`(v8, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.valueLandsOnTick:(F)Z` @kind direct;
  #L4b5064.  v2:= temp;
  #L4b5066.  if v2 == 0 then goto L4b506c;
  #L4b506a.  goto L4b5000;
  #L4b506c.  v0:= new `java.lang.IllegalStateException`;
  #L4b5070.  v2:= 4I;
  #L4b5072.  v2:= new `java.lang.Object`[v2];
  #L4b5076.  v2[v6]:= v1 @kind object;
  #L4b507a.  v1:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b507e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b5084.  v1:= temp @kind object;
  #L4b5086.  v2[v5]:= v1 @kind object;
  #L4b508a.  v1:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b508e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b5094.  v1:= temp @kind object;
  #L4b5096.  v2[v4]:= v1 @kind object;
  #L4b509a.  v1:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b509e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b50a4.  v1:= temp @kind object;
  #L4b50a6.  v2[v7]:= v1 @kind object;
  #L4b50aa.  v1:= "Value(%s) must be equal to valueFrom(%s) plus a multiple of stepSize(%s) when using stepSize(%s)" @kind object;
  #L4b50ae.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b50b4.  v1:= temp @kind object;
  #L4b50b6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b50bc.  throw v0;
  #L4b50be.  v0:= new `java.lang.IllegalStateException`;
  #L4b50c2.  v2:= new `java.lang.Object`[v7];
  #L4b50c6.  v2[v6]:= v1 @kind object;
  #L4b50ca.  v1:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b50ce.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b50d4.  v1:= temp @kind object;
  #L4b50d6.  v2[v5]:= v1 @kind object;
  #L4b50da.  v1:= v8.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b50de.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b50e4.  v1:= temp @kind object;
  #L4b50e6.  v2[v4]:= v1 @kind object;
  #L4b50ea.  v1:= "Slider value(%s) must be greater or equal to valueFrom(%s), and lower or equal to valueTo(%s)" @kind object;
  #L4b50ee.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b50f4.  v1:= temp @kind object;
  #L4b50f6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b50fc.  throw v0;
  #L4b50fe.  return @kind void;
}
procedure `boolean` `valueLandsOnTick`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.valueLandsOnTick:(F)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b27a4.  v0:= v1.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b27a8.  v2:= v2 - v0 @kind float;
  #L4b27aa.  call temp:= `isMultipleOfStepSize`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.isMultipleOfStepSize:(F)Z` @kind direct;
  #L4b27b0.  v2:= temp;
  #L4b27b2.  return v2;
}
procedure `float` `valueToX`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.valueToX:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b2b60.  call temp:= `normalizeValue`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4b2b66.  v2:= temp;
  #L4b2b68.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b2b6c.  v0:= (`float`) v0 @kind i2f;
  #L4b2b6e.  v2:= v2 * v0 @kind float;
  #L4b2b72.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b2b76.  v0:= (`float`) v0 @kind i2f;
  #L4b2b78.  v2:= v2 + v0 @kind float;
  #L4b2b7a.  return v2;
}
procedure `void` `warnAboutFloatingPointError`(`com.google.android.material.slider.BaseSlider` v8 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.warnAboutFloatingPointError:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4b5110.  v0:= v8.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b5114.  v1:= 0I;
  #L4b5116.  v1:= fcmpl(v0, v1);
  #L4b511a.  if v1 != 0 then goto L4b5120;
  #L4b511e.  return @kind void;
  #L4b5120.  v1:= (`int`) v0 @kind f2i;
  #L4b5122.  v1:= (`float`) v1 @kind i2f;
  #L4b5124.  v2:= 1I;
  #L4b5126.  v3:= 0I;
  #L4b5128.  v4:= 2I;
  #L4b512a.  v5:= "Floating point value used for %s(%s). Using floats can have rounding errors which may result in incorrect values. Instead, consider using integers with a custom LabelFormatter to display the value correctly." @kind object;
  #L4b512e.  v1:= fcmpl(v1, v0);
  #L4b5132.  if v1 == 0 then goto L4b5160;
  #L4b5136.  v1:= `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` @kind object;
  #L4b513a.  v6:= new `java.lang.Object`[v4];
  #L4b513e.  v7:= "stepSize" @kind object;
  #L4b5142.  v6[v3]:= v7 @kind object;
  #L4b5146.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b514c.  v0:= temp @kind object;
  #L4b514e.  v6[v2]:= v0 @kind object;
  #L4b5152.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b5158.  v0:= temp @kind object;
  #L4b515a.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4b5160.  v0:= v8.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b5164.  v1:= (`int`) v0 @kind f2i;
  #L4b5166.  v1:= (`float`) v1 @kind i2f;
  #L4b5168.  v1:= fcmpl(v1, v0);
  #L4b516c.  if v1 == 0 then goto L4b519a;
  #L4b5170.  v1:= `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` @kind object;
  #L4b5174.  v6:= new `java.lang.Object`[v4];
  #L4b5178.  v7:= "valueFrom" @kind object;
  #L4b517c.  v6[v3]:= v7 @kind object;
  #L4b5180.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b5186.  v0:= temp @kind object;
  #L4b5188.  v6[v2]:= v0 @kind object;
  #L4b518c.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b5192.  v0:= temp @kind object;
  #L4b5194.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4b519a.  v0:= v8.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b519e.  v1:= (`int`) v0 @kind f2i;
  #L4b51a0.  v1:= (`float`) v1 @kind i2f;
  #L4b51a2.  v1:= fcmpl(v1, v0);
  #L4b51a6.  if v1 == 0 then goto L4b51d4;
  #L4b51aa.  v1:= `@@com.google.android.material.slider.BaseSlider.TAG` @type ^`java.lang.String` @kind object;
  #L4b51ae.  v4:= new `java.lang.Object`[v4];
  #L4b51b2.  v6:= "valueTo" @kind object;
  #L4b51b6.  v4[v3]:= v6 @kind object;
  #L4b51ba.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b51c0.  v0:= temp @kind object;
  #L4b51c2.  v4[v2]:= v0 @kind object;
  #L4b51c6.  call temp:= `format`(v5, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b51cc.  v0:= temp @kind object;
  #L4b51ce.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4b51d4.  return @kind void;
}
procedure `void` `addOnChangeListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnChangeListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.addOnChangeListener:(Lcom/google/android/material/slider/BaseOnChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b326c.  v0:= v1.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L4b3270.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4b3276.  return @kind void;
}
procedure `void` `addOnSliderTouchListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnSliderTouchListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.addOnSliderTouchListener:(Lcom/google/android/material/slider/BaseOnSliderTouchListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3288.  v0:= v1.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L4b328c.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4b3292.  return @kind void;
}
procedure `void` `clearOnChangeListeners`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.clearOnChangeListeners:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3328.  v0:= v1.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L4b332c.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4b3332.  return @kind void;
}
procedure `void` `clearOnSliderTouchListeners`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.clearOnSliderTouchListeners:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b3344.  v0:= v1.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L4b3348.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4b334e.  return @kind void;
}
procedure `boolean` `dispatchHoverEvent`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.view.MotionEvent` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1f10.  v0:= v1.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L4b1f14.  call temp:= `dispatchHoverEvent`(v0, v2) @signature `Landroidx/customview/widget/ExploreByTouchHelper;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L4b1f1a.  v0:= temp;
  #L4b1f1c.  if v0 != 0 then goto L4b1f32;
  #L4b1f20.  call temp:= `dispatchHoverEvent`(v1, v2) @signature `Landroid/view/View;.dispatchHoverEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L4b1f26.  v2:= temp;
  #L4b1f28.  if v2 == 0 then goto L4b1f2e;
  #L4b1f2c.  goto L4b1f32;
  #L4b1f2e.  v2:= 0I;
  #L4b1f30.  goto L4b1f34;
  #L4b1f32.  v2:= 1I;
  #L4b1f34.  return v2;
}
procedure `boolean` `dispatchKeyEvent`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `android.view.KeyEvent` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.dispatchKeyEvent:(Landroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;

  #L4b1f48.  call temp:= `dispatchKeyEvent`(v0, v1) @signature `Landroid/view/View;.dispatchKeyEvent:(Landroid/view/KeyEvent;)Z` @kind super;
  #L4b1f4e.  v1:= temp;
  #L4b1f50.  return v1;
}
procedure `void` `drawableStateChanged`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.drawableStateChanged:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4b37a4.  call `drawableStateChanged`(v3) @signature `Landroid/view/View;.drawableStateChanged:()V` @kind super;
  #L4b37aa.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b37ae.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b37b2.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L4b37b8.  v1:= temp;
  #L4b37ba.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4b37c0.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b37c4.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b37c8.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L4b37ce.  v1:= temp;
  #L4b37d0.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4b37d6.  v0:= v3.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b37da.  v1:= v3.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b37de.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L4b37e4.  v1:= temp;
  #L4b37e6.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4b37ec.  v0:= v3.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b37f0.  v1:= v3.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b37f4.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L4b37fa.  v1:= temp;
  #L4b37fc.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4b3802.  v0:= v3.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b3806.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b380c.  v0:= temp @kind object;
  #L4b380e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b3814.  v1:= temp;
  #L4b3816.  if v1 == 0 then goto L4b3842;
  #L4b381a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b3820.  v1:= temp @kind object;
  #L4b3822.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L4b3826.  call temp:= `isStateful`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isStateful:()Z` @kind virtual;
  #L4b382c.  v2:= temp;
  #L4b382e.  if v2 == 0 then goto L4b380e;
  #L4b3832.  call temp:= `getDrawableState`(v3) @signature `Landroid/view/View;.getDrawableState:()[I` @kind virtual;
  #L4b3838.  v2:= temp @kind object;
  #L4b383a.  call temp:= `setState`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L4b3840.  goto L4b380e;
  #L4b3842.  v0:= v3.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b3846.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isStateful:()Z` @kind virtual;
  #L4b384c.  v0:= temp;
  #L4b384e.  if v0 == 0 then goto L4b3864;
  #L4b3852.  v0:= v3.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b3856.  call temp:= `getDrawableState`(v3) @signature `Landroid/view/View;.getDrawableState:()[I` @kind virtual;
  #L4b385c.  v1:= temp @kind object;
  #L4b385e.  call temp:= `setState`(v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L4b3864.  v0:= v3.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b3868.  v1:= v3.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b386c.  call temp:= `getColorForState`(v3, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L4b3872.  v1:= temp;
  #L4b3874.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4b387a.  v0:= v3.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b387e.  v1:= 63I;
  #L4b3882.  call `setAlpha`(v0, v1) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L4b3888.  return @kind void;
}
procedure `void` `forceDrawCompatHalo`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.forceDrawCompatHalo:(Z)V` @AccessFlag  {
    temp;

  #L4b3a70.  v0.`com.google.android.material.slider.BaseSlider.forceDrawCompatHalo` @type ^`boolean` := v1 @kind boolean;
  #L4b3a74.  return @kind void;
}
procedure `java.lang.CharSequence` `getAccessibilityClassName`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getAccessibilityClassName:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2e8c.  v0:= constclass @type ^`android.widget.SeekBar` @kind object;
  #L4b2e90.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4b2e96.  v0:= temp @kind object;
  #L4b2e98.  return v0 @kind object;
}
procedure `int` `getAccessibilityFocusedVirtualViewId`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getAccessibilityFocusedVirtualViewId:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L4b2c74.  v0:= v1.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L4b2c78.  call temp:= `getAccessibilityFocusedVirtualViewId`(v0) @signature `Landroidx/customview/widget/ExploreByTouchHelper;.getAccessibilityFocusedVirtualViewId:()I` @kind virtual;
  #L4b2c7e.  v0:= temp;
  #L4b2c80.  return v0;
}
procedure `int` `getActiveThumbIndex`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getActiveThumbIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2c94.  v0:= v1.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4b2c98.  return v0;
}
procedure `int` `getFocusedThumbIndex`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getFocusedThumbIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2cd8.  v0:= v1.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4b2cdc.  return v0;
}
procedure `int` `getHaloRadius`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getHaloRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2cf0.  v0:= v1.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L4b2cf4.  return v0;
}
procedure `android.content.res.ColorStateList` `getHaloTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getHaloTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1d38.  v0:= v1.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1d3c.  return v0 @kind object;
}
procedure `int` `getLabelBehavior`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getLabelBehavior:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2d08.  v0:= v1.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L4b2d0c.  return v0;
}
procedure `float` `getMinSeparation`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getMinSeparation:()F` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4b2a0c.  v0:= 0I;
  #L4b2a0e.  return v0;
}
procedure `float` `getStepSize`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getStepSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2a20.  v0:= v1.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b2a24.  return v0;
}
procedure `float` `getThumbElevation`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2a38.  v0:= v1.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b2a3c.  call temp:= `getElevation`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L4b2a42.  v0:= temp;
  #L4b2a44.  return v0;
}
procedure `int` `getThumbRadius`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2d20.  v0:= v1.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4b2d24.  return v0;
}
procedure `android.content.res.ColorStateList` `getThumbStrokeColor`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1d50.  v0:= v1.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b1d54.  call temp:= `getStrokeColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L4b1d5a.  v0:= temp @kind object;
  #L4b1d5c.  return v0 @kind object;
}
procedure `float` `getThumbStrokeWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2a58.  v0:= v1.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b2a5c.  call temp:= `getStrokeWidth`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeWidth:()F` @kind virtual;
  #L4b2a62.  v0:= temp;
  #L4b2a64.  return v0;
}
procedure `android.content.res.ColorStateList` `getThumbTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getThumbTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1d70.  v0:= v1.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b1d74.  call temp:= `getFillColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L4b1d7a.  v0:= temp @kind object;
  #L4b1d7c.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getTickActiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTickActiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1d90.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1d94.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getTickInactiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTickInactiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1da8.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1dac.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getTickTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTickTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b1dc0.  v0:= v2.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1dc4.  v1:= v2.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1dc8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b1dce.  v0:= temp;
  #L4b1dd0.  if v0 == 0 then goto L4b1dda;
  #L4b1dd4.  v0:= v2.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1dd8.  return v0 @kind object;
  #L4b1dda.  v0:= new `java.lang.IllegalStateException`;
  #L4b1dde.  v1:= "The inactive and active ticks are different colors. Use the getTickColorInactive() and getTickColorActive() methods instead." @kind object;
  #L4b1de2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b1de8.  throw v0;
}
procedure `android.content.res.ColorStateList` `getTrackActiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackActiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1dfc.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1e00.  return v0 @kind object;
}
procedure `int` `getTrackHeight`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2d38.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L4b2d3c.  return v0;
}
procedure `android.content.res.ColorStateList` `getTrackInactiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackInactiveTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1e14.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1e18.  return v0 @kind object;
}
procedure `int` `getTrackSidePadding`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackSidePadding:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2d50.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b2d54.  return v0;
}
procedure `android.content.res.ColorStateList` `getTrackTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b1e2c.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1e30.  v1:= v2.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1e34.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b1e3a.  v0:= temp;
  #L4b1e3c.  if v0 == 0 then goto L4b1e46;
  #L4b1e40.  v0:= v2.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b1e44.  return v0 @kind object;
  #L4b1e46.  v0:= new `java.lang.IllegalStateException`;
  #L4b1e4a.  v1:= "The inactive and active parts of the track are different colors. Use the getInactiveTrackColor() and getActiveTrackColor() methods instead." @kind object;
  #L4b1e4e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b1e54.  throw v0;
}
procedure `int` `getTrackWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getTrackWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2d68.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b2d6c.  return v0;
}
procedure `float` `getValueFrom`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueFrom:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2a78.  v0:= v1.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b2a7c.  return v0;
}
procedure `float` `getValueTo`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueTo:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2b14.  v0:= v1.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b2b18.  return v0;
}
procedure `java.util.List` `getValues`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4b2fe4.  v0:= new `java.util.ArrayList`;
  #L4b2fe8.  v1:= v2.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b2fec.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4b2ff2.  return v0 @kind object;
}
procedure `boolean` `hasLabelFormatter`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.hasLabelFormatter:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1f64.  v0:= v1.`com.google.android.material.slider.BaseSlider.formatter` @type ^`com.google.android.material.slider.LabelFormatter` @kind object;
  #L4b1f68.  if v0 == 0 then goto L4b1f70;
  #L4b1f6c.  v0:= 1I;
  #L4b1f6e.  goto L4b1f72;
  #L4b1f70.  v0:= 0I;
  #L4b1f72.  return v0;
}
procedure `boolean` `isRtl`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L4b2064.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/view/ViewCompat;.getLayoutDirection:(Landroid/view/View;)I` @kind static;
  #L4b206a.  v0:= temp;
  #L4b206c.  v1:= 1I;
  #L4b206e.  if v0 != v1 then goto L4b2074;
  #L4b2072.  goto L4b2076;
  #L4b2074.  v1:= 0I;
  #L4b2076.  return v1;
}
procedure `boolean` `isTickVisible`(`com.google.android.material.slider.BaseSlider` v1 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.isTickVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2088.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` @kind boolean;
  #L4b208c.  return v0;
}
procedure `void` `onAttachedToWindow`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onAttachedToWindow:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4b3d38.  call `onAttachedToWindow`(v2) @signature `Landroid/view/View;.onAttachedToWindow:()V` @kind super;
  #L4b3d3e.  v0:= v2.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b3d42.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b3d48.  v0:= temp @kind object;
  #L4b3d4a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b3d50.  v1:= temp;
  #L4b3d52.  if v1 == 0 then goto L4b3d6a;
  #L4b3d56.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b3d5c.  v1:= temp @kind object;
  #L4b3d5e.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L4b3d62.  call `attachLabelToContentView`(v2, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.attachLabelToContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L4b3d68.  goto L4b3d4a;
  #L4b3d6a.  return @kind void;
}
procedure `void` `onDetachedFromWindow`(`com.google.android.material.slider.BaseSlider` v2 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onDetachedFromWindow:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4b3d7c.  v0:= v2.`com.google.android.material.slider.BaseSlider.accessibilityEventSender` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityEventSender` @kind object;
  #L4b3d80.  if v0 == 0 then goto L4b3d8a;
  #L4b3d84.  call temp:= `removeCallbacks`(v2, v0) @signature `Landroid/view/View;.removeCallbacks:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L4b3d8a.  v0:= 0I;
  #L4b3d8c.  v2.`com.google.android.material.slider.BaseSlider.labelsAreAnimatedIn` @type ^`boolean` := v0 @kind boolean;
  #L4b3d90.  v0:= v2.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b3d94.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b3d9a.  v0:= temp @kind object;
  #L4b3d9c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b3da2.  v1:= temp;
  #L4b3da4.  if v1 == 0 then goto L4b3dbc;
  #L4b3da8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b3dae.  v1:= temp @kind object;
  #L4b3db0.  v1:= (`com.google.android.material.tooltip.TooltipDrawable`) v1 @kind object;
  #L4b3db4.  call `detachLabelFromContentView`(v2, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.detachLabelFromContentView:(Lcom/google/android/material/tooltip/TooltipDrawable;)V` @kind direct;
  #L4b3dba.  goto L4b3d9c;
  #L4b3dbc.  call `onDetachedFromWindow`(v2) @signature `Landroid/view/View;.onDetachedFromWindow:()V` @kind super;
  #L4b3dc2.  return @kind void;
}
procedure `void` `onDraw`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `android.graphics.Canvas` v4 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4b3dd4.  v0:= v3.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` @kind boolean;
  #L4b3dd8.  if v0 == 0 then goto L4b3de8;
  #L4b3ddc.  call `validateConfigurationIfDirty`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.validateConfigurationIfDirty:()V` @kind direct;
  #L4b3de2.  call `maybeCalculateTicksCoordinates`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeCalculateTicksCoordinates:()V` @kind direct;
  #L4b3de8.  call `onDraw`(v3, v4) @signature `Landroid/view/View;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L4b3dee.  call temp:= `calculateTrackCenter`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTrackCenter:()I` @kind direct;
  #L4b3df4.  v0:= temp;
  #L4b3df6.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b3dfa.  call `drawInactiveTrack`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.drawInactiveTrack:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L4b3e00.  call temp:= `getValues`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L4b3e06.  v1:= temp @kind object;
  #L4b3e08.  call temp:= `max`(v1) @signature `Ljava/util/Collections;.max:(Ljava/util/Collection;)Ljava/lang/Object;` @kind static;
  #L4b3e0e.  v1:= temp @kind object;
  #L4b3e10.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4b3e14.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b3e1a.  v1:= temp;
  #L4b3e1c.  v2:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b3e20.  v1:= fcmpl(v1, v2);
  #L4b3e24.  if v1 <= 0 then goto L4b3e32;
  #L4b3e28.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b3e2c.  call `drawActiveTrack`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.drawActiveTrack:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L4b3e32.  call `maybeDrawTicks`(v3, v4) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawTicks:(Landroid/graphics/Canvas;)V` @kind direct;
  #L4b3e38.  v1:= v3.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` @kind boolean;
  #L4b3e3c.  if v1 != 0 then goto L4b3e58;
  #L4b3e40.  call temp:= `isFocused`(v3) @signature `Landroid/view/View;.isFocused:()Z` @kind virtual;
  #L4b3e46.  v1:= temp;
  #L4b3e48.  if v1 != 0 then goto L4b3e58;
  #L4b3e4c.  call temp:= `shouldAlwaysShowLabel`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldAlwaysShowLabel:()Z` @kind direct;
  #L4b3e52.  v1:= temp;
  #L4b3e54.  if v1 == 0 then goto L4b3e96;
  #L4b3e58.  call temp:= `isEnabled`(v3) @signature `Landroid/view/View;.isEnabled:()Z` @kind virtual;
  #L4b3e5e.  v1:= temp;
  #L4b3e60.  if v1 == 0 then goto L4b3e96;
  #L4b3e64.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b3e68.  call `maybeDrawHalo`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.maybeDrawHalo:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L4b3e6e.  v1:= v3.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4b3e72.  v2:= -1I;
  #L4b3e74.  if v1 != v2 then goto L4b3e8e;
  #L4b3e78.  call temp:= `shouldAlwaysShowLabel`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldAlwaysShowLabel:()Z` @kind direct;
  #L4b3e7e.  v1:= temp;
  #L4b3e80.  if v1 == 0 then goto L4b3e86;
  #L4b3e84.  goto L4b3e8e;
  #L4b3e86.  call `ensureLabelsRemoved`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @kind direct;
  #L4b3e8c.  goto L4b3e9c;
  #L4b3e8e.  call `ensureLabelsAdded`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsAdded:()V` @kind direct;
  #L4b3e94.  goto L4b3e9c;
  #L4b3e96.  call `ensureLabelsRemoved`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.ensureLabelsRemoved:()V` @kind direct;
  #L4b3e9c.  v1:= v3.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b3ea0.  call `drawThumbs`(v3, v4, v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.drawThumbs:(Landroid/graphics/Canvas;II)V` @kind direct;
  #L4b3ea6.  return @kind void;
}
procedure `void` `onFocusChanged`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `boolean` v1 , `int` v2 , `android.graphics.Rect` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onFocusChanged:(ZILandroid/graphics/Rect;)V` @AccessFlag PROTECTED {
    temp;

  #L4b3eb8.  call `onFocusChanged`(v0, v1, v2, v3) @signature `Landroid/view/View;.onFocusChanged:(ZILandroid/graphics/Rect;)V` @kind super;
  #L4b3ebe.  if v1 != 0 then goto L4b3ed8;
  #L4b3ec2.  v1:= -1I;
  #L4b3ec4.  v0.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L4b3ec8.  v1:= v0.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L4b3ecc.  v2:= v0.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4b3ed0.  call temp:= `clearKeyboardFocusForVirtualView`(v1, v2) @signature `Landroidx/customview/widget/ExploreByTouchHelper;.clearKeyboardFocusForVirtualView:(I)Z` @kind virtual;
  #L4b3ed6.  goto L4b3eec;
  #L4b3ed8.  call `focusThumbOnFocusGained`(v0, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.focusThumbOnFocusGained:(I)V` @kind direct;
  #L4b3ede.  v1:= v0.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L4b3ee2.  v2:= v0.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int`;
  #L4b3ee6.  call temp:= `requestKeyboardFocusForVirtualView`(v1, v2) @signature `Landroidx/customview/widget/ExploreByTouchHelper;.requestKeyboardFocusForVirtualView:(I)Z` @kind virtual;
  #L4b3eec.  return @kind void;
}
procedure `boolean` `onKeyDown`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `int` v6 , `android.view.KeyEvent` v7 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b221c.  call temp:= `isEnabled`(v5) @signature `Landroid/view/View;.isEnabled:()Z` @kind virtual;
  #L4b2222.  v0:= temp;
  #L4b2224.  if v0 != 0 then goto L4b2232;
  #L4b2228.  call temp:= `onKeyDown`(v5, v6, v7) @signature `Landroid/view/View;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L4b222e.  v6:= temp;
  #L4b2230.  return v6;
  #L4b2232.  v0:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b2236.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b223c.  v0:= temp;
  #L4b223e.  v1:= 0I;
  #L4b2240.  v2:= 1I;
  #L4b2242.  if v0 != v2 then goto L4b224a;
  #L4b2246.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L4b224a.  v0:= v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4b224e.  v3:= -1I;
  #L4b2250.  if v0 != v3 then goto L4b2274;
  #L4b2254.  call temp:= `onKeyDownNoActiveThumb`(v5, v6, v7) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyDownNoActiveThumb:(ILandroid/view/KeyEvent;)Ljava/lang/Boolean;` @kind direct;
  #L4b225a.  v0:= temp @kind object;
  #L4b225c.  if v0 == 0 then goto L4b226a;
  #L4b2260.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4b2266.  v6:= temp;
  #L4b2268.  goto L4b2272;
  #L4b226a.  call temp:= `onKeyDown`(v5, v6, v7) @signature `Landroid/view/View;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L4b2270.  v6:= temp;
  #L4b2272.  return v6;
  #L4b2274.  v0:= v5.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` @kind boolean;
  #L4b2278.  call temp:= `isLongPress`(v7) @signature `Landroid/view/KeyEvent;.isLongPress:()Z` @kind virtual;
  #L4b227e.  v4:= temp;
  #L4b2280.  v0:= v0 ^| v4 @kind int;
  #L4b2282.  v5.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` := v0 @kind boolean;
  #L4b2286.  call temp:= `calculateIncrementForKey`(v5, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateIncrementForKey:(I)Ljava/lang/Float;` @kind direct;
  #L4b228c.  v0:= temp @kind object;
  #L4b228e.  if v0 == 0 then goto L4b22d2;
  #L4b2292.  v6:= v5.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b2296.  v7:= v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4b229a.  call temp:= `get`(v6, v7) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b22a0.  v6:= temp @kind object;
  #L4b22a2.  v6:= (`java.lang.Float`) v6 @kind object;
  #L4b22a6.  call temp:= `floatValue`(v6) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b22ac.  v6:= temp;
  #L4b22ae.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b22b4.  v7:= temp;
  #L4b22b6.  v6:= v6 + v7 @kind float;
  #L4b22b8.  call temp:= `snapActiveThumbToValue`(v5, v6) @signature `Lcom/google/android/material/slider/BaseSlider;.snapActiveThumbToValue:(F)Z` @kind direct;
  #L4b22be.  v6:= temp;
  #L4b22c0.  if v6 == 0 then goto L4b22d0;
  #L4b22c4.  call `updateHaloHotspot`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L4b22ca.  call `postInvalidate`(v5) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b22d0.  return v2;
  #L4b22d2.  v0:= 23I;
  #L4b22d6.  if v6 == v0 then goto L4b2322;
  #L4b22da.  v0:= 61I;
  #L4b22de.  if v6 == v0 then goto L4b22f4;
  #L4b22e2.  v0:= 66I;
  #L4b22e6.  if v6 == v0 then goto L4b2322;
  #L4b22ea.  call temp:= `onKeyDown`(v5, v6, v7) @signature `Landroid/view/View;.onKeyDown:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L4b22f0.  v6:= temp;
  #L4b22f2.  return v6;
  #L4b22f4.  call temp:= `hasNoModifiers`(v7) @signature `Landroid/view/KeyEvent;.hasNoModifiers:()Z` @kind virtual;
  #L4b22fa.  v6:= temp;
  #L4b22fc.  if v6 == 0 then goto L4b230a;
  #L4b2300.  call temp:= `moveFocus`(v5, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4b2306.  v6:= temp;
  #L4b2308.  return v6;
  #L4b230a.  call temp:= `isShiftPressed`(v7) @signature `Landroid/view/KeyEvent;.isShiftPressed:()Z` @kind virtual;
  #L4b2310.  v6:= temp;
  #L4b2312.  if v6 == 0 then goto L4b2320;
  #L4b2316.  call temp:= `moveFocus`(v5, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.moveFocus:(I)Z` @kind direct;
  #L4b231c.  v6:= temp;
  #L4b231e.  return v6;
  #L4b2320.  return v1;
  #L4b2322.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v3;
  #L4b2326.  call `postInvalidate`(v5) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b232c.  return v2;
}
procedure `boolean` `onKeyUp`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 , `android.view.KeyEvent` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onKeyUp:(ILandroid/view/KeyEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b2340.  v0:= 0I;
  #L4b2342.  v1.`com.google.android.material.slider.BaseSlider.isLongPress` @type ^`boolean` := v0 @kind boolean;
  #L4b2346.  call temp:= `onKeyUp`(v1, v2, v3) @signature `Landroid/view/View;.onKeyUp:(ILandroid/view/KeyEvent;)Z` @kind super;
  #L4b234c.  v2:= temp;
  #L4b234e.  return v2;
}
procedure `void` `onMeasure`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.onMeasure:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4b3f00.  v5:= v3.`com.google.android.material.slider.BaseSlider.widgetHeight` @type ^`int`;
  #L4b3f04.  v0:= v3.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L4b3f08.  v1:= 0I;
  #L4b3f0a.  v2:= 1I;
  #L4b3f0c.  if v0 == v2 then goto L4b3f1c;
  #L4b3f10.  call temp:= `shouldAlwaysShowLabel`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldAlwaysShowLabel:()Z` @kind direct;
  #L4b3f16.  v0:= temp;
  #L4b3f18.  if v0 == 0 then goto L4b3f34;
  #L4b3f1c.  v0:= v3.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b3f20.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4b3f26.  v0:= temp @kind object;
  #L4b3f28.  v0:= (`com.google.android.material.tooltip.TooltipDrawable`) v0 @kind object;
  #L4b3f2c.  call temp:= `getIntrinsicHeight`(v0) @signature `Lcom/google/android/material/tooltip/TooltipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L4b3f32.  v1:= temp;
  #L4b3f34.  v5:= v5 + v1 @kind int;
  #L4b3f36.  v0:= 2.0F;
  #L4b3f3a.  call temp:= `makeMeasureSpec`(v5, v0) @signature `Landroid/view/View$MeasureSpec;.makeMeasureSpec:(II)I` @kind static;
  #L4b3f40.  v5:= temp;
  #L4b3f42.  call `onMeasure`(v3, v4, v5) @signature `Landroid/view/View;.onMeasure:(II)V` @kind super;
  #L4b3f48.  return @kind void;
}
procedure `void` `onRestoreInstanceState`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.os.Parcelable` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onRestoreInstanceState:(Landroid/os/Parcelable;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4b3f5c.  v2:= (`com.google.android.material.slider.BaseSlider$SliderState`) v2 @kind object;
  #L4b3f60.  call temp:= `getSuperState`(v2) @signature `Landroid/view/View$BaseSavedState;.getSuperState:()Landroid/os/Parcelable;` @kind virtual;
  #L4b3f66.  v0:= temp @kind object;
  #L4b3f68.  call `onRestoreInstanceState`(v1, v0) @signature `Landroid/view/View;.onRestoreInstanceState:(Landroid/os/Parcelable;)V` @kind super;
  #L4b3f6e.  v0:= v2.`com.google.android.material.slider.BaseSlider$SliderState.valueFrom` @type ^`float`;
  #L4b3f72.  v1.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float` := v0;
  #L4b3f76.  v0:= v2.`com.google.android.material.slider.BaseSlider$SliderState.valueTo` @type ^`float`;
  #L4b3f7a.  v1.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float` := v0;
  #L4b3f7e.  v0:= v2.`com.google.android.material.slider.BaseSlider$SliderState.values` @type ^`java.util.ArrayList` @kind object;
  #L4b3f82.  call `setValuesInternal`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @kind direct;
  #L4b3f88.  v0:= v2.`com.google.android.material.slider.BaseSlider$SliderState.stepSize` @type ^`float`;
  #L4b3f8c.  v1.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v0;
  #L4b3f90.  v2:= v2.`com.google.android.material.slider.BaseSlider$SliderState.hasFocus` @type ^`boolean` @kind boolean;
  #L4b3f94.  if v2 == 0 then goto L4b3f9e;
  #L4b3f98.  call temp:= `requestFocus`(v1) @signature `Landroid/view/View;.requestFocus:()Z` @kind virtual;
  #L4b3f9e.  return @kind void;
}
procedure `android.os.Parcelable` `onSaveInstanceState`(`com.google.android.material.slider.BaseSlider` v3 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.onSaveInstanceState:()Landroid/os/Parcelable;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4b1e98.  call temp:= `onSaveInstanceState`(v3) @signature `Landroid/view/View;.onSaveInstanceState:()Landroid/os/Parcelable;` @kind super;
  #L4b1e9e.  v0:= temp @kind object;
  #L4b1ea0.  v1:= new `com.google.android.material.slider.BaseSlider$SliderState`;
  #L4b1ea4.  call `<init>`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider$SliderState;.<init>:(Landroid/os/Parcelable;)V` @kind direct;
  #L4b1eaa.  v0:= v3.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b1eae.  v1.`com.google.android.material.slider.BaseSlider$SliderState.valueFrom` @type ^`float` := v0;
  #L4b1eb2.  v0:= v3.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b1eb6.  v1.`com.google.android.material.slider.BaseSlider$SliderState.valueTo` @type ^`float` := v0;
  #L4b1eba.  v0:= new `java.util.ArrayList`;
  #L4b1ebe.  v2:= v3.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b1ec2.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4b1ec8.  v1.`com.google.android.material.slider.BaseSlider$SliderState.values` @type ^`java.util.ArrayList` := v0 @kind object;
  #L4b1ecc.  v0:= v3.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b1ed0.  v1.`com.google.android.material.slider.BaseSlider$SliderState.stepSize` @type ^`float` := v0;
  #L4b1ed4.  call temp:= `hasFocus`(v3) @signature `Landroid/view/View;.hasFocus:()Z` @kind virtual;
  #L4b1eda.  v0:= temp;
  #L4b1edc.  v1.`com.google.android.material.slider.BaseSlider$SliderState.hasFocus` @type ^`boolean` := v0 @kind boolean;
  #L4b1ee0.  return v1 @kind object;
}
procedure `void` `onSizeChanged`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider;.onSizeChanged:(IIII)V` @AccessFlag PROTECTED {
    temp;

  #L4b3fb0.  call `updateTrackWidth`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.updateTrackWidth:(I)V` @kind direct;
  #L4b3fb6.  call `updateHaloHotspot`(v0) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L4b3fbc.  return @kind void;
}
procedure `boolean` `onTouchEvent`(`com.google.android.material.slider.BaseSlider` v5 @kind this, `android.view.MotionEvent` v6 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b2360.  call temp:= `isEnabled`(v5) @signature `Landroid/view/View;.isEnabled:()Z` @kind virtual;
  #L4b2366.  v0:= temp;
  #L4b2368.  v1:= 0I;
  #L4b236a.  if v0 != 0 then goto L4b2370;
  #L4b236e.  return v1;
  #L4b2370.  call temp:= `getX`(v6) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L4b2376.  v0:= temp;
  #L4b2378.  v2:= v5.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b237c.  v2:= (`float`) v2 @kind i2f;
  #L4b237e.  v2:= v0 - v2 @kind float;
  #L4b2382.  v3:= v5.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b2386.  v3:= (`float`) v3 @kind i2f;
  #L4b2388.  v2:= v2 / v3 @kind float;
  #L4b238a.  v5.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float` := v2;
  #L4b238e.  v3:= 0I;
  #L4b2390.  call temp:= `max`(v3, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L4b2396.  v2:= temp;
  #L4b2398.  v5.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float` := v2;
  #L4b239c.  v3:= 1.0F;
  #L4b23a0.  call temp:= `min`(v3, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L4b23a6.  v2:= temp;
  #L4b23a8.  v5.`com.google.android.material.slider.BaseSlider.touchPosition` @type ^`float` := v2;
  #L4b23ac.  call temp:= `getActionMasked`(v6) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L4b23b2.  v2:= temp;
  #L4b23b4.  v3:= 1I;
  #L4b23b6.  if v2 == 0 then goto L4b24dc;
  #L4b23ba.  if v2 == v3 then goto L4b2438;
  #L4b23be.  v4:= 2I;
  #L4b23c0.  if v2 == v4 then goto L4b23c8;
  #L4b23c4.  goto L4b252c;
  #L4b23c8.  v2:= v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` @kind boolean;
  #L4b23cc.  if v2 != 0 then goto L4b240e;
  #L4b23d0.  call temp:= `isInVerticalScrollingContainer`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.isInVerticalScrollingContainer:()Z` @kind direct;
  #L4b23d6.  v2:= temp;
  #L4b23d8.  if v2 == 0 then goto L4b23fa;
  #L4b23dc.  v2:= v5.`com.google.android.material.slider.BaseSlider.touchDownX` @type ^`float`;
  #L4b23e0.  v0:= v0 - v2 @kind float;
  #L4b23e2.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4b23e8.  v0:= temp;
  #L4b23ea.  v2:= v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L4b23ee.  v2:= (`float`) v2 @kind i2f;
  #L4b23f0.  v0:= fcmpg(v0, v2);
  #L4b23f4.  if v0 >= 0 then goto L4b23fa;
  #L4b23f8.  return v1;
  #L4b23fa.  call temp:= `getParent`(v5) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L4b2400.  v0:= temp @kind object;
  #L4b2402.  call `requestDisallowInterceptTouchEvent`(v0, v3) @signature `Landroid/view/ViewParent;.requestDisallowInterceptTouchEvent:(Z)V` @kind interface;
  #L4b2408.  call `onStartTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @kind direct;
  #L4b240e.  call temp:= `pickActiveThumb`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @kind virtual;
  #L4b2414.  v0:= temp;
  #L4b2416.  if v0 != 0 then goto L4b241e;
  #L4b241a.  goto L4b252c;
  #L4b241e.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v3 @kind boolean;
  #L4b2422.  call temp:= `snapTouchPosition`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @kind direct;
  #L4b2428.  call `updateHaloHotspot`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L4b242e.  call `invalidate`(v5) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4b2434.  goto L4b252c;
  #L4b2438.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v1 @kind boolean;
  #L4b243c.  v0:= v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` @kind object;
  #L4b2440.  if v0 == 0 then goto L4b24ba;
  #L4b2444.  call temp:= `getActionMasked`(v0) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L4b244a.  v0:= temp;
  #L4b244c.  if v0 != 0 then goto L4b24ba;
  #L4b2450.  v0:= v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` @kind object;
  #L4b2454.  call temp:= `getX`(v0) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L4b245a.  v0:= temp;
  #L4b245c.  call temp:= `getX`(v6) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L4b2462.  v1:= temp;
  #L4b2464.  v0:= v0 - v1 @kind float;
  #L4b2466.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4b246c.  v0:= temp;
  #L4b246e.  v1:= v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L4b2472.  v1:= (`float`) v1 @kind i2f;
  #L4b2474.  v0:= fcmpg(v0, v1);
  #L4b2478.  if v0 > 0 then goto L4b24ba;
  #L4b247c.  v0:= v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` @kind object;
  #L4b2480.  call temp:= `getY`(v0) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L4b2486.  v0:= temp;
  #L4b2488.  call temp:= `getY`(v6) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L4b248e.  v1:= temp;
  #L4b2490.  v0:= v0 - v1 @kind float;
  #L4b2492.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4b2498.  v0:= temp;
  #L4b249a.  v1:= v5.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L4b249e.  v1:= (`float`) v1 @kind i2f;
  #L4b24a0.  v0:= fcmpg(v0, v1);
  #L4b24a4.  if v0 > 0 then goto L4b24ba;
  #L4b24a8.  call temp:= `pickActiveThumb`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @kind virtual;
  #L4b24ae.  v0:= temp;
  #L4b24b0.  if v0 == 0 then goto L4b24ba;
  #L4b24b4.  call `onStartTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @kind direct;
  #L4b24ba.  v0:= v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4b24be.  v1:= -1I;
  #L4b24c0.  if v0 == v1 then goto L4b24d4;
  #L4b24c4.  call temp:= `snapTouchPosition`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @kind direct;
  #L4b24ca.  v5.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L4b24ce.  call `onStopTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStopTrackingTouch:()V` @kind direct;
  #L4b24d4.  call `invalidate`(v5) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4b24da.  goto L4b252c;
  #L4b24dc.  v5.`com.google.android.material.slider.BaseSlider.touchDownX` @type ^`float` := v0;
  #L4b24e0.  call temp:= `isInVerticalScrollingContainer`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.isInVerticalScrollingContainer:()Z` @kind direct;
  #L4b24e6.  v0:= temp;
  #L4b24e8.  if v0 == 0 then goto L4b24ee;
  #L4b24ec.  goto L4b252c;
  #L4b24ee.  call temp:= `getParent`(v5) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L4b24f4.  v0:= temp @kind object;
  #L4b24f6.  call `requestDisallowInterceptTouchEvent`(v0, v3) @signature `Landroid/view/ViewParent;.requestDisallowInterceptTouchEvent:(Z)V` @kind interface;
  #L4b24fc.  call temp:= `pickActiveThumb`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @kind virtual;
  #L4b2502.  v0:= temp;
  #L4b2504.  if v0 != 0 then goto L4b250a;
  #L4b2508.  goto L4b252c;
  #L4b250a.  call temp:= `requestFocus`(v5) @signature `Landroid/view/View;.requestFocus:()Z` @kind virtual;
  #L4b2510.  v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` := v3 @kind boolean;
  #L4b2514.  call temp:= `snapTouchPosition`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.snapTouchPosition:()Z` @kind direct;
  #L4b251a.  call `updateHaloHotspot`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.updateHaloHotspot:()V` @kind direct;
  #L4b2520.  call `invalidate`(v5) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4b2526.  call `onStartTrackingTouch`(v5) @signature `Lcom/google/android/material/slider/BaseSlider;.onStartTrackingTouch:()V` @kind direct;
  #L4b252c.  v0:= v5.`com.google.android.material.slider.BaseSlider.thumbIsPressed` @type ^`boolean` @kind boolean;
  #L4b2530.  call `setPressed`(v5, v0) @signature `Landroid/view/View;.setPressed:(Z)V` @kind virtual;
  #L4b2536.  call temp:= `obtain`(v6) @signature `Landroid/view/MotionEvent;.obtain:(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;` @kind static;
  #L4b253c.  v6:= temp @kind object;
  #L4b253e.  v5.`com.google.android.material.slider.BaseSlider.lastEvent` @type ^`android.view.MotionEvent` := v6 @kind object;
  #L4b2542.  return v3;
}
procedure `void` `onVisibilityChanged`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.view.View` v2 @kind object, `int` v3 ) @signature `Lcom/google/android/material/slider/BaseSlider;.onVisibilityChanged:(Landroid/view/View;I)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4b4050.  call `onVisibilityChanged`(v1, v2, v3) @signature `Landroid/view/View;.onVisibilityChanged:(Landroid/view/View;I)V` @kind super;
  #L4b4056.  if v3 == 0 then goto L4b4094;
  #L4b405a.  call temp:= `getContentViewOverlay`(v1) @signature `Lcom/google/android/material/internal/ViewUtils;.getContentViewOverlay:(Landroid/view/View;)Lcom/google/android/material/internal/ViewOverlayImpl;` @kind static;
  #L4b4060.  v2:= temp @kind object;
  #L4b4062.  if v2 != 0 then goto L4b4068;
  #L4b4066.  return @kind void;
  #L4b4068.  v3:= v1.`com.google.android.material.slider.BaseSlider.labels` @type ^`java.util.List` @kind object;
  #L4b406c.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b4072.  v3:= temp @kind object;
  #L4b4074.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b407a.  v0:= temp;
  #L4b407c.  if v0 == 0 then goto L4b4094;
  #L4b4080.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b4086.  v0:= temp @kind object;
  #L4b4088.  v0:= (`com.google.android.material.tooltip.TooltipDrawable`) v0 @kind object;
  #L4b408c.  call `remove`(v2, v0) @signature `Lcom/google/android/material/internal/ViewOverlayImpl;.remove:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L4b4092.  goto L4b4074;
  #L4b4094.  return @kind void;
}
procedure `boolean` `pickActiveThumb`(`com.google.android.material.slider.BaseSlider` v11 @kind this) @signature `Lcom/google/android/material/slider/BaseSlider;.pickActiveThumb:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4b2554.  v0:= v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4b2558.  v1:= -1I;
  #L4b255a.  v2:= 1I;
  #L4b255c.  if v0 == v1 then goto L4b2562;
  #L4b2560.  return v2;
  #L4b2562.  call temp:= `getValueOfTouchPositionAbsolute`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.getValueOfTouchPositionAbsolute:()F` @kind direct;
  #L4b2568.  v0:= temp;
  #L4b256a.  call temp:= `valueToX`(v11, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.valueToX:(F)F` @kind direct;
  #L4b2570.  v3:= temp;
  #L4b2572.  v4:= 0I;
  #L4b2574.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v4;
  #L4b2578.  v5:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b257c.  call temp:= `get`(v5, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b2582.  v5:= temp @kind object;
  #L4b2584.  v5:= (`java.lang.Float`) v5 @kind object;
  #L4b2588.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b258e.  v5:= temp;
  #L4b2590.  v5:= v5 - v0 @kind float;
  #L4b2592.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4b2598.  v5:= temp;
  #L4b259a.  v6:= 1I;
  #L4b259c.  v7:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b25a0.  call temp:= `size`(v7) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b25a6.  v7:= temp;
  #L4b25a8.  if v6 >= v7 then goto L4b2676;
  #L4b25ac.  v7:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b25b0.  call temp:= `get`(v7, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b25b6.  v7:= temp @kind object;
  #L4b25b8.  v7:= (`java.lang.Float`) v7 @kind object;
  #L4b25bc.  call temp:= `floatValue`(v7) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b25c2.  v7:= temp;
  #L4b25c4.  v7:= v7 - v0 @kind float;
  #L4b25c6.  call temp:= `abs`(v7) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4b25cc.  v7:= temp;
  #L4b25ce.  v8:= v11.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b25d2.  call temp:= `get`(v8, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4b25d8.  v8:= temp @kind object;
  #L4b25da.  v8:= (`java.lang.Float`) v8 @kind object;
  #L4b25de.  call temp:= `floatValue`(v8) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b25e4.  v8:= temp;
  #L4b25e6.  call temp:= `valueToX`(v11, v8) @signature `Lcom/google/android/material/slider/BaseSlider;.valueToX:(F)F` @kind direct;
  #L4b25ec.  v8:= temp;
  #L4b25ee.  call temp:= `compare`(v7, v5) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L4b25f4.  v9:= temp;
  #L4b25f6.  if v9 <= v2 then goto L4b25fc;
  #L4b25fa.  goto L4b2676;
  #L4b25fc.  call temp:= `isRtl`(v11) @signature `Lcom/google/android/material/slider/BaseSlider;.isRtl:()Z` @kind virtual;
  #L4b2602.  v9:= temp;
  #L4b2604.  v10:= 0I;
  #L4b2606.  if v9 == 0 then goto L4b2618;
  #L4b260a.  v9:= v8 - v3 @kind float;
  #L4b260e.  v9:= fcmpl(v9, v10);
  #L4b2612.  if v9 <= 0 then goto L4b2628;
  #L4b2616.  goto L4b2624;
  #L4b2618.  v9:= v8 - v3 @kind float;
  #L4b261c.  v9:= fcmpg(v9, v10);
  #L4b2620.  if v9 >= 0 then goto L4b2628;
  #L4b2624.  v9:= 1I;
  #L4b2626.  goto L4b262a;
  #L4b2628.  v9:= 0I;
  #L4b262a.  call temp:= `compare`(v7, v5) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L4b2630.  v10:= temp;
  #L4b2632.  if v10 >= 0 then goto L4b263c;
  #L4b2636.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v6;
  #L4b263a.  goto L4b266e;
  #L4b263c.  call temp:= `compare`(v7, v5) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L4b2642.  v10:= temp;
  #L4b2644.  if v10 != 0 then goto L4b2670;
  #L4b2648.  v8:= v8 - v3 @kind float;
  #L4b264a.  call temp:= `abs`(v8) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4b2650.  v8:= temp;
  #L4b2652.  v10:= v11.`com.google.android.material.slider.BaseSlider.scaledTouchSlop` @type ^`int`;
  #L4b2656.  v10:= (`float`) v10 @kind i2f;
  #L4b2658.  v8:= fcmpg(v8, v10);
  #L4b265c.  if v8 >= 0 then goto L4b2666;
  #L4b2660.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L4b2664.  return v4;
  #L4b2666.  if v9 == 0 then goto L4b2670;
  #L4b266a.  v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v6;
  #L4b266e.  v5:= v7;
  #L4b2670.  v6:= v6 + 1;
  #L4b2674.  goto L4b259c;
  #L4b2676.  v0:= v11.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int`;
  #L4b267a.  if v0 == v1 then goto L4b2680;
  #L4b267e.  goto L4b2682;
  #L4b2680.  v2:= 0I;
  #L4b2682.  return v2;
}
procedure `void` `removeOnChangeListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnChangeListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.removeOnChangeListener:(Lcom/google/android/material/slider/BaseOnChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b42dc.  v0:= v1.`com.google.android.material.slider.BaseSlider.changeListeners` @type ^`java.util.List` @kind object;
  #L4b42e0.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4b42e6.  return @kind void;
}
procedure `void` `removeOnSliderTouchListener`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `com.google.android.material.slider.BaseOnSliderTouchListener` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.removeOnSliderTouchListener:(Lcom/google/android/material/slider/BaseOnSliderTouchListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b42f8.  v0:= v1.`com.google.android.material.slider.BaseSlider.touchListeners` @type ^`java.util.List` @kind object;
  #L4b42fc.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4b4302.  return @kind void;
}
procedure `void` `setActiveThumbIndex`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setActiveThumbIndex:(I)V` @AccessFlag PROTECTED {
    temp;

  #L4b4360.  v0.`com.google.android.material.slider.BaseSlider.activeThumbIdx` @type ^`int` := v1;
  #L4b4364.  return @kind void;
}
procedure `void` `setCustomThumbDrawable`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setCustomThumbDrawable:(I)V` @AccessFlag  {
    temp;
    v0;

  #L4b43a8.  call temp:= `getResources`(v1) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4b43ae.  v0:= temp @kind object;
  #L4b43b0.  call temp:= `getDrawable`(v0, v2) @signature `Landroid/content/res/Resources;.getDrawable:(I)Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L4b43b6.  v2:= temp @kind object;
  #L4b43b8.  call `setCustomThumbDrawable`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setCustomThumbDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L4b43be.  return @kind void;
}
procedure `void` `setCustomThumbDrawable`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setCustomThumbDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag  {
    temp;

  #L4b4378.  call temp:= `initializeCustomThumbDrawable`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.initializeCustomThumbDrawable:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L4b437e.  v1:= temp @kind object;
  #L4b4380.  v0.`com.google.android.material.slider.BaseSlider.customThumbDrawable` @type ^`android.graphics.drawable.Drawable` := v1 @kind object;
  #L4b4384.  v1:= v0.`com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues` @type ^`java.util.List` @kind object;
  #L4b4388.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4b438e.  call `postInvalidate`(v0) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b4394.  return @kind void;
}
procedure `void` `setCustomThumbDrawablesForValues`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `int`[] v5 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setCustomThumbDrawablesForValues:([I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b4420.  v0:= length @variable v5;
  #L4b4422.  v0:= new `android.graphics.drawable.Drawable`[v0];
  #L4b4426.  v1:= 0I;
  #L4b4428.  v2:= length @variable v5;
  #L4b442a.  if v1 >= v2 then goto L4b444c;
  #L4b442e.  call temp:= `getResources`(v4) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4b4434.  v2:= temp @kind object;
  #L4b4436.  v3:= v5[v1];
  #L4b443a.  call temp:= `getDrawable`(v2, v3) @signature `Landroid/content/res/Resources;.getDrawable:(I)Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L4b4440.  v2:= temp @kind object;
  #L4b4442.  v0[v1]:= v2 @kind object;
  #L4b4446.  v1:= v1 + 1;
  #L4b444a.  goto L4b4428;
  #L4b444c.  call `setCustomThumbDrawablesForValues`(v4, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setCustomThumbDrawablesForValues:([Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L4b4452.  return @kind void;
}
procedure `void` `setCustomThumbDrawablesForValues`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `android.graphics.drawable.Drawable`[] v5 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setCustomThumbDrawablesForValues:([Landroid/graphics/drawable/Drawable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b43d0.  v0:= 0I;
  #L4b43d2.  v4.`com.google.android.material.slider.BaseSlider.customThumbDrawable` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L4b43d6.  v0:= new `java.util.ArrayList`;
  #L4b43da.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4b43e0.  v4.`com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues` @type ^`java.util.List` := v0 @kind object;
  #L4b43e4.  v0:= length @variable v5;
  #L4b43e6.  v1:= 0I;
  #L4b43e8.  if v1 >= v0 then goto L4b4408;
  #L4b43ec.  v2:= v5[v1] @kind object;
  #L4b43f0.  v3:= v4.`com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues` @type ^`java.util.List` @kind object;
  #L4b43f4.  call temp:= `initializeCustomThumbDrawable`(v4, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.initializeCustomThumbDrawable:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L4b43fa.  v2:= temp @kind object;
  #L4b43fc.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4b4402.  v1:= v1 + 1;
  #L4b4406.  goto L4b43e8;
  #L4b4408.  call `postInvalidate`(v4) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b440e.  return @kind void;
}
procedure `void` `setEnabled`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4464.  call `setEnabled`(v1, v2) @signature `Landroid/view/View;.setEnabled:(Z)V` @kind super;
  #L4b446a.  if v2 == 0 then goto L4b4472;
  #L4b446e.  v2:= 0I;
  #L4b4470.  goto L4b4474;
  #L4b4472.  v2:= 2I;
  #L4b4474.  v0:= 0I;
  #L4b4476.  call `setLayerType`(v1, v2, v0) @signature `Landroid/view/View;.setLayerType:(ILandroid/graphics/Paint;)V` @kind virtual;
  #L4b447c.  return @kind void;
}
procedure `void` `setFocusedThumbIndex`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setFocusedThumbIndex:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4490.  if v2 < 0 then goto L4b44ba;
  #L4b4494.  v0:= v1.`com.google.android.material.slider.BaseSlider.values` @type ^`java.util.ArrayList` @kind object;
  #L4b4498.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4b449e.  v0:= temp;
  #L4b44a0.  if v2 >= v0 then goto L4b44ba;
  #L4b44a4.  v1.`com.google.android.material.slider.BaseSlider.focusedThumbIdx` @type ^`int` := v2;
  #L4b44a8.  v0:= v1.`com.google.android.material.slider.BaseSlider.accessibilityHelper` @type ^`com.google.android.material.slider.BaseSlider$AccessibilityHelper` @kind object;
  #L4b44ac.  call temp:= `requestKeyboardFocusForVirtualView`(v0, v2) @signature `Landroidx/customview/widget/ExploreByTouchHelper;.requestKeyboardFocusForVirtualView:(I)Z` @kind virtual;
  #L4b44b2.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b44b8.  return @kind void;
  #L4b44ba.  v2:= new `java.lang.IllegalArgumentException`;
  #L4b44be.  v0:= "index out of range" @kind object;
  #L4b44c2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b44c8.  throw v2;
}
procedure `void` `setHaloRadius`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadius:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b44dc.  v0:= v1.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L4b44e0.  if v2 != v0 then goto L4b44e6;
  #L4b44e4.  return @kind void;
  #L4b44e6.  v1.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int` := v2;
  #L4b44ea.  call temp:= `getBackground`(v1) @signature `Landroid/view/View;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L4b44f0.  v2:= temp @kind object;
  #L4b44f2.  call temp:= `shouldDrawCompatHalo`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L4b44f8.  v0:= temp;
  #L4b44fa.  if v0 != 0 then goto L4b4516;
  #L4b44fe.  v0:= instanceof @variable v2 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L4b4502.  if v0 == 0 then goto L4b4516;
  #L4b4506.  v2:= (`android.graphics.drawable.RippleDrawable`) v2 @kind object;
  #L4b450a.  v0:= v1.`com.google.android.material.slider.BaseSlider.haloRadius` @type ^`int`;
  #L4b450e.  call `setRippleDrawableRadius`(v2, v0) @signature `Lcom/google/android/material/drawable/DrawableUtils;.setRippleDrawableRadius:(Landroid/graphics/drawable/RippleDrawable;I)V` @kind static;
  #L4b4514.  return @kind void;
  #L4b4516.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b451c.  return @kind void;
}
procedure `void` `setHaloRadiusResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4530.  call temp:= `getResources`(v1) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4b4536.  v0:= temp @kind object;
  #L4b4538.  call temp:= `getDimensionPixelSize`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4b453e.  v2:= temp;
  #L4b4540.  call `setHaloRadius`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloRadius:(I)V` @kind virtual;
  #L4b4546.  return @kind void;
}
procedure `void` `setHaloTintList`(`com.google.android.material.slider.BaseSlider` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setHaloTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b4558.  v0:= v2.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b455c.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b4562.  v0:= temp;
  #L4b4564.  if v0 == 0 then goto L4b456a;
  #L4b4568.  return @kind void;
  #L4b456a.  v2.`com.google.android.material.slider.BaseSlider.haloColor` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L4b456e.  call temp:= `getBackground`(v2) @signature `Landroid/view/View;.getBackground:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L4b4574.  v0:= temp @kind object;
  #L4b4576.  call temp:= `shouldDrawCompatHalo`(v2) @signature `Lcom/google/android/material/slider/BaseSlider;.shouldDrawCompatHalo:()Z` @kind direct;
  #L4b457c.  v1:= temp;
  #L4b457e.  if v1 != 0 then goto L4b4596;
  #L4b4582.  v1:= instanceof @variable v0 @type ^`android.graphics.drawable.RippleDrawable` @kind boolean;
  #L4b4586.  if v1 == 0 then goto L4b4596;
  #L4b458a.  v0:= (`android.graphics.drawable.RippleDrawable`) v0 @kind object;
  #L4b458e.  call `setColor`(v0, v3) @signature `Landroid/graphics/drawable/RippleDrawable;.setColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b4594.  return @kind void;
  #L4b4596.  v0:= v2.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b459a.  call temp:= `getColorForState`(v2, v3) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L4b45a0.  v3:= temp;
  #L4b45a2.  call `setColor`(v0, v3) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4b45a8.  v3:= v2.`com.google.android.material.slider.BaseSlider.haloPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b45ac.  v0:= 63I;
  #L4b45b0.  call `setAlpha`(v3, v0) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L4b45b6.  call `invalidate`(v2) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4b45bc.  return @kind void;
}
procedure `void` `setLabelBehavior`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setLabelBehavior:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b45d0.  v0:= v1.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int`;
  #L4b45d4.  if v0 == v2 then goto L4b45e2;
  #L4b45d8.  v1.`com.google.android.material.slider.BaseSlider.labelBehavior` @type ^`int` := v2;
  #L4b45dc.  call `requestLayout`(v1) @signature `Landroid/view/View;.requestLayout:()V` @kind virtual;
  #L4b45e2.  return @kind void;
}
procedure `void` `setLabelFormatter`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `com.google.android.material.slider.LabelFormatter` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setLabelFormatter:(Lcom/google/android/material/slider/LabelFormatter;)V` @AccessFlag PUBLIC {
    temp;

  #L4b45f4.  v0.`com.google.android.material.slider.BaseSlider.formatter` @type ^`com.google.android.material.slider.LabelFormatter` := v1 @kind object;
  #L4b45f8.  return @kind void;
}
procedure `void` `setSeparationUnit`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setSeparationUnit:(I)V` @AccessFlag PROTECTED {
    temp;

  #L4b460c.  v0.`com.google.android.material.slider.BaseSlider.separationUnit` @type ^`int` := v1;
  #L4b4610.  v1:= 1I;
  #L4b4612.  v0.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v1 @kind boolean;
  #L4b4616.  call `postInvalidate`(v0) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b461c.  return @kind void;
}
procedure `void` `setStepSize`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `float` v5 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setStepSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b4630.  v0:= 1I;
  #L4b4632.  v1:= 0I;
  #L4b4634.  v1:= fcmpg(v5, v1);
  #L4b4638.  if v1 < 0 then goto L4b4658;
  #L4b463c.  v1:= v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float`;
  #L4b4640.  v1:= fcmpl(v1, v5);
  #L4b4644.  if v1 == 0 then goto L4b4656;
  #L4b4648.  v4.`com.google.android.material.slider.BaseSlider.stepSize` @type ^`float` := v5;
  #L4b464c.  v4.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v0 @kind boolean;
  #L4b4650.  call `postInvalidate`(v4) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b4656.  return @kind void;
  #L4b4658.  v1:= new `java.lang.IllegalArgumentException`;
  #L4b465c.  v2:= 3I;
  #L4b465e.  v2:= new `java.lang.Object`[v2];
  #L4b4662.  v3:= 0I;
  #L4b4664.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b466a.  v5:= temp @kind object;
  #L4b466c.  v2[v3]:= v5 @kind object;
  #L4b4670.  v5:= v4.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float`;
  #L4b4674.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b467a.  v5:= temp @kind object;
  #L4b467c.  v2[v0]:= v5 @kind object;
  #L4b4680.  v5:= 2I;
  #L4b4682.  v0:= v4.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float`;
  #L4b4686.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4b468c.  v0:= temp @kind object;
  #L4b468e.  v2[v5]:= v0 @kind object;
  #L4b4692.  v5:= "The stepSize(%s) must be 0, or a factor of the valueFrom(%s)-valueTo(%s) range" @kind object;
  #L4b4696.  call temp:= `format`(v5, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4b469c.  v5:= temp @kind object;
  #L4b469e.  call `<init>`(v1, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b46a4.  throw v1;
}
procedure `void` `setThumbElevation`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b46b8.  v0:= v1.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b46bc.  call `setElevation`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L4b46c2.  return @kind void;
}
procedure `void` `setThumbElevationResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevationResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b46d4.  call temp:= `getResources`(v1) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4b46da.  v0:= temp @kind object;
  #L4b46dc.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L4b46e2.  v2:= temp;
  #L4b46e4.  call `setThumbElevation`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbElevation:(F)V` @kind virtual;
  #L4b46ea.  return @kind void;
}
procedure `void` `setThumbRadius`(`com.google.android.material.slider.BaseSlider` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadius:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b46fc.  v0:= v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4b4700.  if v4 != v0 then goto L4b4706;
  #L4b4704.  return @kind void;
  #L4b4706.  v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int` := v4;
  #L4b470a.  v4:= v3.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b470e.  call temp:= `builder`() @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.builder:()Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind static;
  #L4b4714.  v0:= temp @kind object;
  #L4b4716.  v1:= v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4b471a.  v1:= (`float`) v1 @kind i2f;
  #L4b471c.  v2:= 0I;
  #L4b471e.  call temp:= `setAllCorners`(v0, v2, v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.setAllCorners:(IF)Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind virtual;
  #L4b4724.  v0:= temp @kind object;
  #L4b4726.  call temp:= `build`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.build:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L4b472c.  v0:= temp @kind object;
  #L4b472e.  call `setShapeAppearanceModel`(v4, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L4b4734.  v4:= v3.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b4738.  v0:= v3.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4b473c.  v1:= v0 * 2;
  #L4b4740.  v0:= v0 * 2;
  #L4b4744.  call `setBounds`(v4, v2, v2, v1, v0) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L4b474a.  v4:= v3.`com.google.android.material.slider.BaseSlider.customThumbDrawable` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4b474e.  if v4 == 0 then goto L4b4758;
  #L4b4752.  call `adjustCustomThumbDrawableBounds`(v3, v4) @signature `Lcom/google/android/material/slider/BaseSlider;.adjustCustomThumbDrawableBounds:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L4b4758.  v4:= v3.`com.google.android.material.slider.BaseSlider.customThumbDrawablesForValues` @type ^`java.util.List` @kind object;
  #L4b475c.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b4762.  v4:= temp @kind object;
  #L4b4764.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b476a.  v0:= temp;
  #L4b476c.  if v0 == 0 then goto L4b4784;
  #L4b4770.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b4776.  v0:= temp @kind object;
  #L4b4778.  v0:= (`android.graphics.drawable.Drawable`) v0 @kind object;
  #L4b477c.  call `adjustCustomThumbDrawableBounds`(v3, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.adjustCustomThumbDrawableBounds:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L4b4782.  goto L4b4764;
  #L4b4784.  call `updateWidgetLayout`(v3) @signature `Lcom/google/android/material/slider/BaseSlider;.updateWidgetLayout:()V` @kind direct;
  #L4b478a.  return @kind void;
}
procedure `void` `setThumbRadiusResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b479c.  call temp:= `getResources`(v1) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4b47a2.  v0:= temp @kind object;
  #L4b47a4.  call temp:= `getDimensionPixelSize`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4b47aa.  v2:= temp;
  #L4b47ac.  call `setThumbRadius`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbRadius:(I)V` @kind virtual;
  #L4b47b2.  return @kind void;
}
procedure `void` `setThumbStrokeColor`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b47c4.  v0:= v1.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b47c8.  call `setStrokeColor`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b47ce.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b47d4.  return @kind void;
}
procedure `void` `setThumbStrokeColorResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b47e8.  if v2 == 0 then goto L4b4802;
  #L4b47ec.  call temp:= `getContext`(v1) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L4b47f2.  v0:= temp @kind object;
  #L4b47f4.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L4b47fa.  v2:= temp @kind object;
  #L4b47fc.  call `setThumbStrokeColor`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b4802.  return @kind void;
}
procedure `void` `setThumbStrokeWidth`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4814.  v0:= v1.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b4818.  call `setStrokeWidth`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L4b481e.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b4824.  return @kind void;
}
procedure `void` `setThumbStrokeWidthResource`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidthResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4838.  if v2 == 0 then goto L4b4852;
  #L4b483c.  call temp:= `getResources`(v1) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4b4842.  v0:= temp @kind object;
  #L4b4844.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L4b484a.  v2:= temp;
  #L4b484c.  call `setThumbStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbStrokeWidth:(F)V` @kind virtual;
  #L4b4852.  return @kind void;
}
procedure `void` `setThumbTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setThumbTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4864.  v0:= v1.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b4868.  call temp:= `getFillColor`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L4b486e.  v0:= temp @kind object;
  #L4b4870.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b4876.  v0:= temp;
  #L4b4878.  if v0 == 0 then goto L4b487e;
  #L4b487c.  return @kind void;
  #L4b487e.  v0:= v1.`com.google.android.material.slider.BaseSlider.defaultThumbDrawable` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L4b4882.  call `setFillColor`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b4888.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4b488e.  return @kind void;
}
procedure `void` `setTickActiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickActiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b48a0.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b48a4.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b48aa.  v0:= temp;
  #L4b48ac.  if v0 == 0 then goto L4b48b2;
  #L4b48b0.  return @kind void;
  #L4b48b2.  v1.`com.google.android.material.slider.BaseSlider.tickColorActive` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L4b48b6.  v0:= v1.`com.google.android.material.slider.BaseSlider.activeTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b48ba.  call temp:= `getColorForState`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L4b48c0.  v2:= temp;
  #L4b48c2.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4b48c8.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4b48ce.  return @kind void;
}
procedure `void` `setTickInactiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickInactiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b48e0.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b48e4.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b48ea.  v0:= temp;
  #L4b48ec.  if v0 == 0 then goto L4b48f2;
  #L4b48f0.  return @kind void;
  #L4b48f2.  v1.`com.google.android.material.slider.BaseSlider.tickColorInactive` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L4b48f6.  v0:= v1.`com.google.android.material.slider.BaseSlider.inactiveTicksPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b48fa.  call temp:= `getColorForState`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L4b4900.  v2:= temp;
  #L4b4902.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4b4908.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4b490e.  return @kind void;
}
procedure `void` `setTickTintList`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `android.content.res.ColorStateList` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L4b4920.  call `setTickInactiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b4926.  call `setTickActiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b492c.  return @kind void;
}
procedure `void` `setTickVisible`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setTickVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4940.  v0:= v1.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` @kind boolean;
  #L4b4944.  if v0 == v2 then goto L4b4952;
  #L4b4948.  v1.`com.google.android.material.slider.BaseSlider.tickVisible` @type ^`boolean` := v2 @kind boolean;
  #L4b494c.  call `postInvalidate`(v1) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b4952.  return @kind void;
}
procedure `void` `setTrackActiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackActiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b4964.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b4968.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b496e.  v0:= temp;
  #L4b4970.  if v0 == 0 then goto L4b4976;
  #L4b4974.  return @kind void;
  #L4b4976.  v1.`com.google.android.material.slider.BaseSlider.trackColorActive` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L4b497a.  v0:= v1.`com.google.android.material.slider.BaseSlider.activeTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b497e.  call temp:= `getColorForState`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L4b4984.  v2:= temp;
  #L4b4986.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4b498c.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4b4992.  return @kind void;
}
procedure `void` `setTrackHeight`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackHeight:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b49a4.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int`;
  #L4b49a8.  if v0 == v2 then goto L4b49bc;
  #L4b49ac.  v1.`com.google.android.material.slider.BaseSlider.trackHeight` @type ^`int` := v2;
  #L4b49b0.  call `invalidateTrack`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.invalidateTrack:()V` @kind direct;
  #L4b49b6.  call `updateWidgetLayout`(v1) @signature `Lcom/google/android/material/slider/BaseSlider;.updateWidgetLayout:()V` @kind direct;
  #L4b49bc.  return @kind void;
}
procedure `void` `setTrackInactiveTintList`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackInactiveTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b49d0.  v0:= v1.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` @kind object;
  #L4b49d4.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b49da.  v0:= temp;
  #L4b49dc.  if v0 == 0 then goto L4b49e2;
  #L4b49e0.  return @kind void;
  #L4b49e2.  v1.`com.google.android.material.slider.BaseSlider.trackColorInactive` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L4b49e6.  v0:= v1.`com.google.android.material.slider.BaseSlider.inactiveTrackPaint` @type ^`android.graphics.Paint` @kind object;
  #L4b49ea.  call temp:= `getColorForState`(v1, v2) @signature `Lcom/google/android/material/slider/BaseSlider;.getColorForState:(Landroid/content/res/ColorStateList;)I` @kind direct;
  #L4b49f0.  v2:= temp;
  #L4b49f2.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4b49f8.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4b49fe.  return @kind void;
}
procedure `void` `setTrackTintList`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `android.content.res.ColorStateList` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L4b4a10.  call `setTrackInactiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackInactiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b4a16.  call `setTrackActiveTintList`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider;.setTrackActiveTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L4b4a1c.  return @kind void;
}
procedure `void` `setValueFrom`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `float` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueFrom:(F)V` @AccessFlag PUBLIC {
    temp;

  #L4b4adc.  v0.`com.google.android.material.slider.BaseSlider.valueFrom` @type ^`float` := v1;
  #L4b4ae0.  v1:= 1I;
  #L4b4ae2.  v0.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v1 @kind boolean;
  #L4b4ae6.  call `postInvalidate`(v0) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b4aec.  return @kind void;
}
procedure `void` `setValueTo`(`com.google.android.material.slider.BaseSlider` v0 @kind this, `float` v1 ) @signature `Lcom/google/android/material/slider/BaseSlider;.setValueTo:(F)V` @AccessFlag PUBLIC {
    temp;

  #L4b4b00.  v0.`com.google.android.material.slider.BaseSlider.valueTo` @type ^`float` := v1;
  #L4b4b04.  v1:= 1I;
  #L4b4b06.  v0.`com.google.android.material.slider.BaseSlider.dirtyConfig` @type ^`boolean` := v1 @kind boolean;
  #L4b4b0a.  call `postInvalidate`(v0) @signature `Landroid/view/View;.postInvalidate:()V` @kind virtual;
  #L4b4b10.  return @kind void;
}
procedure `void` `setValues`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setValues:(Ljava/util/List;)V` @AccessFlag  {
    temp;
    v0;

  #L4b4b4c.  v0:= new `java.util.ArrayList`;
  #L4b4b50.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4b4b56.  call `setValuesInternal`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @kind direct;
  #L4b4b5c.  return @kind void;
}
procedure `void` `setValues`(`com.google.android.material.slider.BaseSlider` v1 @kind this, `java.lang.Float`[] v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.setValues:([Ljava/lang/Float;)V` @AccessFlag  {
    temp;
    v0;

  #L4b4b24.  v0:= new `java.util.ArrayList`;
  #L4b4b28.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4b4b2e.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L4b4b34.  call `setValuesInternal`(v1, v0) @signature `Lcom/google/android/material/slider/BaseSlider;.setValuesInternal:(Ljava/util/ArrayList;)V` @kind direct;
  #L4b4b3a.  return @kind void;
}
procedure `void` `updateBoundsForVirtualViewId`(`com.google.android.material.slider.BaseSlider` v4 @kind this, `int` v5 , `android.graphics.Rect` v6 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider;.updateBoundsForVirtualViewId:(ILandroid/graphics/Rect;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b4bf8.  v0:= v4.`com.google.android.material.slider.BaseSlider.trackSidePadding` @type ^`int`;
  #L4b4bfc.  call temp:= `getValues`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.getValues:()Ljava/util/List;` @kind virtual;
  #L4b4c02.  v1:= temp @kind object;
  #L4b4c04.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4b4c0a.  v5:= temp @kind object;
  #L4b4c0c.  v5:= (`java.lang.Float`) v5 @kind object;
  #L4b4c10.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4b4c16.  v5:= temp;
  #L4b4c18.  call temp:= `normalizeValue`(v4, v5) @signature `Lcom/google/android/material/slider/BaseSlider;.normalizeValue:(F)F` @kind direct;
  #L4b4c1e.  v5:= temp;
  #L4b4c20.  v1:= v4.`com.google.android.material.slider.BaseSlider.trackWidth` @type ^`int`;
  #L4b4c24.  v1:= (`float`) v1 @kind i2f;
  #L4b4c26.  v5:= v5 * v1 @kind float;
  #L4b4c2a.  v5:= (`int`) v5 @kind f2i;
  #L4b4c2c.  v0:= v0 + v5 @kind int;
  #L4b4c2e.  call temp:= `calculateTrackCenter`(v4) @signature `Lcom/google/android/material/slider/BaseSlider;.calculateTrackCenter:()I` @kind direct;
  #L4b4c34.  v5:= temp;
  #L4b4c36.  v1:= v4.`com.google.android.material.slider.BaseSlider.thumbRadius` @type ^`int`;
  #L4b4c3a.  v2:= v0 - v1 @kind int;
  #L4b4c3e.  v3:= v5 - v1 @kind int;
  #L4b4c42.  v0:= v0 + v1 @kind int;
  #L4b4c44.  v5:= v5 + v1 @kind int;
  #L4b4c46.  call `set`(v6, v2, v3, v0, v5) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L4b4c4c.  return @kind void;
}
