record `com.google.android.material.timepicker.ClockHandView` @kind class @AccessFlag  extends `android.view.View` @kind class {
  `boolean` `com.google.android.material.timepicker.ClockHandView.animatingOnTouchUp` @AccessFlag PRIVATE;
  `float` `com.google.android.material.timepicker.ClockHandView.centerDotRadius` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.timepicker.ClockHandView.changedDuringTouch` @AccessFlag PRIVATE;
  `int` `com.google.android.material.timepicker.ClockHandView.circleRadius` @AccessFlag PRIVATE;
  `double` `com.google.android.material.timepicker.ClockHandView.degRad` @AccessFlag PRIVATE;
  `float` `com.google.android.material.timepicker.ClockHandView.downX` @AccessFlag PRIVATE;
  `float` `com.google.android.material.timepicker.ClockHandView.downY` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.timepicker.ClockHandView.isInTapRegion` @AccessFlag PRIVATE;
  `java.util.List` `com.google.android.material.timepicker.ClockHandView.listeners` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.timepicker.ClockHandView$OnActionUpListener` `com.google.android.material.timepicker.ClockHandView.onActionUpListener` @AccessFlag PRIVATE;
  `float` `com.google.android.material.timepicker.ClockHandView.originalDeg` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.timepicker.ClockHandView.paint` @AccessFlag PRIVATE_FINAL;
  `android.animation.ValueAnimator` `com.google.android.material.timepicker.ClockHandView.rotationAnimator` @AccessFlag PRIVATE;
  `int` `com.google.android.material.timepicker.ClockHandView.scaledTouchSlop` @AccessFlag PRIVATE;
  `android.graphics.RectF` `com.google.android.material.timepicker.ClockHandView.selectorBox` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.timepicker.ClockHandView.selectorRadius` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.timepicker.ClockHandView.selectorStrokeWidth` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.android.material.timepicker.ClockHandView.ANIMATION_DURATION` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.android.material.timepicker.ClockHandView` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/google/android/material/timepicker/ClockHandView;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4c8ccc.  v0:= 0I;
  #L4c8cce.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/timepicker/ClockHandView;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L4c8cd4.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.timepicker.ClockHandView` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/timepicker/ClockHandView;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4c8ce8.  v0:= `@@com.google.android.material.R$attr.materialClockStyle` @type ^`int`;
  #L4c8cec.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/timepicker/ClockHandView;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L4c8cf2.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.timepicker.ClockHandView` v3 @kind this, `android.content.Context` v4 @kind object, `android.util.AttributeSet` v5 @kind object, `int` v6 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4c8d04.  call `<init>`(v3, v4, v5, v6) @signature `Landroid/view/View;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L4c8d0a.  v0:= new `java.util.ArrayList`;
  #L4c8d0e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4c8d14.  v3.`com.google.android.material.timepicker.ClockHandView.listeners` @type ^`java.util.List` := v0 @kind object;
  #L4c8d18.  v0:= new `android.graphics.Paint`;
  #L4c8d1c.  call `<init>`(v0) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L4c8d22.  v3.`com.google.android.material.timepicker.ClockHandView.paint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L4c8d26.  v1:= new `android.graphics.RectF`;
  #L4c8d2a.  call `<init>`(v1) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L4c8d30.  v3.`com.google.android.material.timepicker.ClockHandView.selectorBox` @type ^`android.graphics.RectF` := v1 @kind object;
  #L4c8d34.  v1:= `@@com.google.android.material.R$styleable.ClockHandView` @type ^`int`[] @kind object;
  #L4c8d38.  v2:= `@@com.google.android.material.R$style.Widget_MaterialComponents_TimePicker_Clock` @type ^`int`;
  #L4c8d3c.  call temp:= `obtainStyledAttributes`(v4, v5, v1, v6, v2) @signature `Landroid/content/Context;.obtainStyledAttributes:(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;` @kind virtual;
  #L4c8d42.  v5:= temp @kind object;
  #L4c8d44.  v6:= `@@com.google.android.material.R$styleable.ClockHandView_materialCircleRadius` @type ^`int`;
  #L4c8d48.  v1:= 0I;
  #L4c8d4a.  call temp:= `getDimensionPixelSize`(v5, v6, v1) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L4c8d50.  v6:= temp;
  #L4c8d52.  v3.`com.google.android.material.timepicker.ClockHandView.circleRadius` @type ^`int` := v6;
  #L4c8d56.  v6:= `@@com.google.android.material.R$styleable.ClockHandView_selectorSize` @type ^`int`;
  #L4c8d5a.  call temp:= `getDimensionPixelSize`(v5, v6, v1) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L4c8d60.  v6:= temp;
  #L4c8d62.  v3.`com.google.android.material.timepicker.ClockHandView.selectorRadius` @type ^`int` := v6;
  #L4c8d66.  call temp:= `getResources`(v3) @signature `Landroid/view/View;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4c8d6c.  v6:= temp @kind object;
  #L4c8d6e.  v2:= `@@com.google.android.material.R$dimen.material_clock_hand_stroke_width` @type ^`int`;
  #L4c8d72.  call temp:= `getDimensionPixelSize`(v6, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4c8d78.  v2:= temp;
  #L4c8d7a.  v3.`com.google.android.material.timepicker.ClockHandView.selectorStrokeWidth` @type ^`int` := v2;
  #L4c8d7e.  v2:= `@@com.google.android.material.R$dimen.material_clock_hand_center_dot_radius` @type ^`int`;
  #L4c8d82.  call temp:= `getDimensionPixelSize`(v6, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelSize:(I)I` @kind virtual;
  #L4c8d88.  v6:= temp;
  #L4c8d8a.  v6:= (`float`) v6 @kind i2f;
  #L4c8d8c.  v3.`com.google.android.material.timepicker.ClockHandView.centerDotRadius` @type ^`float` := v6;
  #L4c8d90.  v6:= `@@com.google.android.material.R$styleable.ClockHandView_clockHandColor` @type ^`int`;
  #L4c8d94.  call temp:= `getColor`(v5, v6, v1) @signature `Landroid/content/res/TypedArray;.getColor:(II)I` @kind virtual;
  #L4c8d9a.  v6:= temp;
  #L4c8d9c.  v1:= 1I;
  #L4c8d9e.  call `setAntiAlias`(v0, v1) @signature `Landroid/graphics/Paint;.setAntiAlias:(Z)V` @kind virtual;
  #L4c8da4.  call `setColor`(v0, v6) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L4c8daa.  v6:= 0I;
  #L4c8dac.  call `setHandRotation`(v3, v6) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setHandRotation:(F)V` @kind virtual;
  #L4c8db2.  call temp:= `get`(v4) @signature `Landroid/view/ViewConfiguration;.get:(Landroid/content/Context;)Landroid/view/ViewConfiguration;` @kind static;
  #L4c8db8.  v4:= temp @kind object;
  #L4c8dba.  call temp:= `getScaledTouchSlop`(v4) @signature `Landroid/view/ViewConfiguration;.getScaledTouchSlop:()I` @kind virtual;
  #L4c8dc0.  v4:= temp;
  #L4c8dc2.  v3.`com.google.android.material.timepicker.ClockHandView.scaledTouchSlop` @type ^`int` := v4;
  #L4c8dc6.  v4:= 2I;
  #L4c8dc8.  call `setImportantForAccessibility`(v3, v4) @signature `Landroidx/core/view/ViewCompat;.setImportantForAccessibility:(Landroid/view/View;I)V` @kind static;
  #L4c8dce.  call `recycle`(v5) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L4c8dd4.  return @kind void;
}
procedure `void` `access$000`(`com.google.android.material.timepicker.ClockHandView` v0 @kind object, `float` v1 , `boolean` v2 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.access$000:(Lcom/google/android/material/timepicker/ClockHandView;FZ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4c8de8.  call `setHandRotationInternal`(v0, v1, v2) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setHandRotationInternal:(FZ)V` @kind direct;
  #L4c8dee.  return @kind void;
}
procedure `void` `drawSelector`(`com.google.android.material.timepicker.ClockHandView` v10 @kind this, `android.graphics.Canvas` v11 @kind object) @signature `Lcom/google/android/material/timepicker/ClockHandView;.drawSelector:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4c8e1c.  call temp:= `getHeight`(v10) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L4c8e22.  v0:= temp;
  #L4c8e24.  v0:= v0 / 2;
  #L4c8e28.  call temp:= `getWidth`(v10) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L4c8e2e.  v1:= temp;
  #L4c8e30.  v1:= v1 / 2;
  #L4c8e34.  v8:= (`float`) v1 @kind i2f;
  #L4c8e36.  v2:= v10.`com.google.android.material.timepicker.ClockHandView.circleRadius` @type ^`int`;
  #L4c8e3a.  v2:= (`float`) v2 @kind i2f;
  #L4c8e3c.  v3:= v10.`com.google.android.material.timepicker.ClockHandView.degRad` @type ^`double` @kind wide;
  #L4c8e40.  call temp:= `cos`(v3) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L4c8e46.  v3:= temp @kind wide;
  #L4c8e48.  v3:= (`float`) v3 @kind d2f;
  #L4c8e4a.  v2:= v2 * v3 @kind float;
  #L4c8e4e.  v2:= v2 + v8 @kind float;
  #L4c8e50.  v9:= (`float`) v0 @kind i2f;
  #L4c8e52.  v3:= v10.`com.google.android.material.timepicker.ClockHandView.circleRadius` @type ^`int`;
  #L4c8e56.  v3:= (`float`) v3 @kind i2f;
  #L4c8e58.  v4:= v10.`com.google.android.material.timepicker.ClockHandView.degRad` @type ^`double` @kind wide;
  #L4c8e5c.  call temp:= `sin`(v4) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L4c8e62.  v4:= temp @kind wide;
  #L4c8e64.  v4:= (`float`) v4 @kind d2f;
  #L4c8e66.  v3:= v3 * v4 @kind float;
  #L4c8e6a.  v3:= v3 + v9 @kind float;
  #L4c8e6c.  v4:= v10.`com.google.android.material.timepicker.ClockHandView.paint` @type ^`android.graphics.Paint` @kind object;
  #L4c8e70.  v5:= 0I;
  #L4c8e72.  call `setStrokeWidth`(v4, v5) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L4c8e78.  v4:= v10.`com.google.android.material.timepicker.ClockHandView.selectorRadius` @type ^`int`;
  #L4c8e7c.  v4:= (`float`) v4 @kind i2f;
  #L4c8e7e.  v5:= v10.`com.google.android.material.timepicker.ClockHandView.paint` @type ^`android.graphics.Paint` @kind object;
  #L4c8e82.  call `drawCircle`(v11, v2, v3, v4, v5) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L4c8e88.  v2:= v10.`com.google.android.material.timepicker.ClockHandView.degRad` @type ^`double` @kind wide;
  #L4c8e8c.  call temp:= `sin`(v2) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L4c8e92.  v2:= temp @kind wide;
  #L4c8e94.  v4:= v10.`com.google.android.material.timepicker.ClockHandView.degRad` @type ^`double` @kind wide;
  #L4c8e98.  call temp:= `cos`(v4) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L4c8e9e.  v4:= temp @kind wide;
  #L4c8ea0.  v6:= v10.`com.google.android.material.timepicker.ClockHandView.circleRadius` @type ^`int`;
  #L4c8ea4.  v7:= v10.`com.google.android.material.timepicker.ClockHandView.selectorRadius` @type ^`int`;
  #L4c8ea8.  v6:= v6 - v7 @kind int;
  #L4c8eaa.  v6:= (`float`) v6 @kind i2f;
  #L4c8eac.  v6:= (`double`) v6 @kind f2d;
  #L4c8eae.  v4:= v4 * v6 @kind double;
  #L4c8eb2.  v4:= (`int`) v4 @kind d2i;
  #L4c8eb4.  v1:= v1 + v4 @kind int;
  #L4c8eb6.  v5:= (`float`) v1 @kind i2f;
  #L4c8eb8.  v6:= v6 * v2 @kind double;
  #L4c8ebc.  v1:= (`int`) v6 @kind d2i;
  #L4c8ebe.  v0:= v0 + v1 @kind int;
  #L4c8ec0.  v6:= (`float`) v0 @kind i2f;
  #L4c8ec2.  v0:= v10.`com.google.android.material.timepicker.ClockHandView.paint` @type ^`android.graphics.Paint` @kind object;
  #L4c8ec6.  v1:= v10.`com.google.android.material.timepicker.ClockHandView.selectorStrokeWidth` @type ^`int`;
  #L4c8eca.  v1:= (`float`) v1 @kind i2f;
  #L4c8ecc.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L4c8ed2.  v7:= v10.`com.google.android.material.timepicker.ClockHandView.paint` @type ^`android.graphics.Paint` @kind object;
  #L4c8ed6.  v2:= v11 @kind object;
  #L4c8ed8.  v3:= v8;
  #L4c8eda.  v4:= v9;
  #L4c8edc.  call `drawLine`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L4c8ee2.  v0:= v10.`com.google.android.material.timepicker.ClockHandView.centerDotRadius` @type ^`float`;
  #L4c8ee6.  v1:= v10.`com.google.android.material.timepicker.ClockHandView.paint` @type ^`android.graphics.Paint` @kind object;
  #L4c8eea.  call `drawCircle`(v11, v8, v9, v0, v1) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L4c8ef0.  return @kind void;
}
procedure `int` `getDegreesFromXY`(`com.google.android.material.timepicker.ClockHandView` v4 @kind this, `float` v5 , `float` v6 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getDegreesFromXY:(FF)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c8c60.  call temp:= `getWidth`(v4) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L4c8c66.  v0:= temp;
  #L4c8c68.  v0:= v0 / 2;
  #L4c8c6c.  call temp:= `getHeight`(v4) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L4c8c72.  v1:= temp;
  #L4c8c74.  v1:= v1 / 2;
  #L4c8c78.  v0:= (`float`) v0 @kind i2f;
  #L4c8c7a.  v5:= v5 - v0 @kind float;
  #L4c8c7c.  v2:= (`double`) v5 @kind f2d;
  #L4c8c7e.  v5:= (`float`) v1 @kind i2f;
  #L4c8c80.  v6:= v6 - v5 @kind float;
  #L4c8c82.  v5:= (`double`) v6 @kind f2d;
  #L4c8c84.  call temp:= `atan2`(v5, v2) @signature `Ljava/lang/Math;.atan2:(DD)D` @kind static;
  #L4c8c8a.  v5:= temp @kind wide;
  #L4c8c8c.  call temp:= `toDegrees`(v5) @signature `Ljava/lang/Math;.toDegrees:(D)D` @kind static;
  #L4c8c92.  v5:= temp @kind wide;
  #L4c8c94.  v5:= (`int`) v5 @kind d2i;
  #L4c8c96.  v5:= v5 + 90;
  #L4c8c9a.  if v5 >= 0 then goto L4c8ca2;
  #L4c8c9e.  v5:= v5 + 360;
  #L4c8ca2.  return v5;
}
procedure `android.util.Pair` `getValuesForAnimation`(`com.google.android.material.timepicker.ClockHandView` v4 @kind this, `float` v5 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getValuesForAnimation:(F)Landroid/util/Pair;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c8a98.  call temp:= `getHandRotation`(v4) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getHandRotation:()F` @kind virtual;
  #L4c8a9e.  v0:= temp;
  #L4c8aa0.  v1:= v0 - v5 @kind float;
  #L4c8aa4.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4c8aaa.  v1:= temp;
  #L4c8aac.  v2:= 180.0F;
  #L4c8ab0.  v1:= fcmpl(v1, v2);
  #L4c8ab4.  if v1 <= 0 then goto L4c8ae0;
  #L4c8ab8.  v1:= 360.0F;
  #L4c8abc.  v3:= fcmpl(v0, v2);
  #L4c8ac0.  if v3 <= 0 then goto L4c8ace;
  #L4c8ac4.  v3:= fcmpg(v5, v2);
  #L4c8ac8.  if v3 >= 0 then goto L4c8ace;
  #L4c8acc.  v5:= v5 + v1 @kind float;
  #L4c8ace.  v3:= fcmpg(v0, v2);
  #L4c8ad2.  if v3 >= 0 then goto L4c8ae0;
  #L4c8ad6.  v2:= fcmpl(v5, v2);
  #L4c8ada.  if v2 <= 0 then goto L4c8ae0;
  #L4c8ade.  v0:= v0 + v1 @kind float;
  #L4c8ae0.  v1:= new `android.util.Pair`;
  #L4c8ae4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4c8aea.  v0:= temp @kind object;
  #L4c8aec.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L4c8af2.  v5:= temp @kind object;
  #L4c8af4.  call `<init>`(v1, v0, v5) @signature `Landroid/util/Pair;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L4c8afa.  return v1 @kind object;
}
procedure `boolean` `handleTouchInput`(`com.google.android.material.timepicker.ClockHandView` v2 @kind this, `float` v3 , `float` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.handleTouchInput:(FFZZZ)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4c8b0c.  call temp:= `getDegreesFromXY`(v2, v3, v4) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getDegreesFromXY:(FF)I` @kind direct;
  #L4c8b12.  v3:= temp;
  #L4c8b14.  call temp:= `getHandRotation`(v2) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getHandRotation:()F` @kind virtual;
  #L4c8b1a.  v4:= temp;
  #L4c8b1c.  v3:= (`float`) v3 @kind i2f;
  #L4c8b1e.  v0:= 0I;
  #L4c8b20.  v1:= 1I;
  #L4c8b22.  v4:= fcmpl(v4, v3);
  #L4c8b26.  if v4 == 0 then goto L4c8b2e;
  #L4c8b2a.  v4:= 1I;
  #L4c8b2c.  goto L4c8b30;
  #L4c8b2e.  v4:= 0I;
  #L4c8b30.  if v6 == 0 then goto L4c8b3a;
  #L4c8b34.  if v4 == 0 then goto L4c8b3a;
  #L4c8b38.  return v1;
  #L4c8b3a.  if v4 != 0 then goto L4c8b46;
  #L4c8b3e.  if v5 == 0 then goto L4c8b44;
  #L4c8b42.  goto L4c8b46;
  #L4c8b44.  return v0;
  #L4c8b46.  if v7 == 0 then goto L4c8b54;
  #L4c8b4a.  v4:= v2.`com.google.android.material.timepicker.ClockHandView.animatingOnTouchUp` @type ^`boolean` @kind boolean;
  #L4c8b4e.  if v4 == 0 then goto L4c8b54;
  #L4c8b52.  v0:= 1I;
  #L4c8b54.  call `setHandRotation`(v2, v3, v0) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setHandRotation:(FZ)V` @kind virtual;
  #L4c8b5a.  return v1;
}
procedure `void` `setHandRotationInternal`(`com.google.android.material.timepicker.ClockHandView` v7 @kind this, `float` v8 , `boolean` v9 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setHandRotationInternal:(FZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4c904c.  v0:= 360.0F;
  #L4c9050.  v8:= v8 %% v0 @kind float;
  #L4c9052.  v7.`com.google.android.material.timepicker.ClockHandView.originalDeg` @type ^`float` := v8;
  #L4c9056.  v0:= 90.0F;
  #L4c905a.  v0:= v8 - v0 @kind float;
  #L4c905e.  v0:= (`double`) v0 @kind f2d;
  #L4c9060.  call temp:= `toRadians`(v0) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L4c9066.  v0:= temp @kind wide;
  #L4c9068.  v7.`com.google.android.material.timepicker.ClockHandView.degRad` @type ^`double` := v0 @kind wide;
  #L4c906c.  call temp:= `getHeight`(v7) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L4c9072.  v0:= temp;
  #L4c9074.  v0:= v0 / 2;
  #L4c9078.  call temp:= `getWidth`(v7) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L4c907e.  v1:= temp;
  #L4c9080.  v1:= v1 / 2;
  #L4c9084.  v1:= (`float`) v1 @kind i2f;
  #L4c9086.  v2:= v7.`com.google.android.material.timepicker.ClockHandView.circleRadius` @type ^`int`;
  #L4c908a.  v2:= (`float`) v2 @kind i2f;
  #L4c908c.  v3:= v7.`com.google.android.material.timepicker.ClockHandView.degRad` @type ^`double` @kind wide;
  #L4c9090.  call temp:= `cos`(v3) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L4c9096.  v3:= temp @kind wide;
  #L4c9098.  v3:= (`float`) v3 @kind d2f;
  #L4c909a.  v2:= v2 * v3 @kind float;
  #L4c909e.  v1:= v1 + v2 @kind float;
  #L4c90a0.  v0:= (`float`) v0 @kind i2f;
  #L4c90a2.  v2:= v7.`com.google.android.material.timepicker.ClockHandView.circleRadius` @type ^`int`;
  #L4c90a6.  v2:= (`float`) v2 @kind i2f;
  #L4c90a8.  v3:= v7.`com.google.android.material.timepicker.ClockHandView.degRad` @type ^`double` @kind wide;
  #L4c90ac.  call temp:= `sin`(v3) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L4c90b2.  v3:= temp @kind wide;
  #L4c90b4.  v3:= (`float`) v3 @kind d2f;
  #L4c90b6.  v2:= v2 * v3 @kind float;
  #L4c90ba.  v0:= v0 + v2 @kind float;
  #L4c90bc.  v2:= v7.`com.google.android.material.timepicker.ClockHandView.selectorBox` @type ^`android.graphics.RectF` @kind object;
  #L4c90c0.  v3:= v7.`com.google.android.material.timepicker.ClockHandView.selectorRadius` @type ^`int`;
  #L4c90c4.  v4:= (`float`) v3 @kind i2f;
  #L4c90c6.  v4:= v1 - v4 @kind float;
  #L4c90ca.  v5:= (`float`) v3 @kind i2f;
  #L4c90cc.  v5:= v0 - v5 @kind float;
  #L4c90d0.  v6:= (`float`) v3 @kind i2f;
  #L4c90d2.  v1:= v1 + v6 @kind float;
  #L4c90d4.  v3:= (`float`) v3 @kind i2f;
  #L4c90d6.  v0:= v0 + v3 @kind float;
  #L4c90d8.  call `set`(v2, v4, v5, v1, v0) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L4c90de.  v0:= v7.`com.google.android.material.timepicker.ClockHandView.listeners` @type ^`java.util.List` @kind object;
  #L4c90e2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4c90e8.  v0:= temp @kind object;
  #L4c90ea.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4c90f0.  v1:= temp;
  #L4c90f2.  if v1 == 0 then goto L4c910a;
  #L4c90f6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4c90fc.  v1:= temp @kind object;
  #L4c90fe.  v1:= (`com.google.android.material.timepicker.ClockHandView$OnRotateListener`) v1 @kind object;
  #L4c9102.  call `onRotate`(v1, v8, v9) @signature `Lcom/google/android/material/timepicker/ClockHandView$OnRotateListener;.onRotate:(FZ)V` @kind interface;
  #L4c9108.  goto L4c90ea;
  #L4c910a.  call `invalidate`(v7) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4c9110.  return @kind void;
}
procedure `void` `addOnRotateListener`(`com.google.android.material.timepicker.ClockHandView` v1 @kind this, `com.google.android.material.timepicker.ClockHandView$OnRotateListener` v2 @kind object) @signature `Lcom/google/android/material/timepicker/ClockHandView;.addOnRotateListener:(Lcom/google/android/material/timepicker/ClockHandView$OnRotateListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8e00.  v0:= v1.`com.google.android.material.timepicker.ClockHandView.listeners` @type ^`java.util.List` @kind object;
  #L4c8e04.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4c8e0a.  return @kind void;
}
procedure `android.graphics.RectF` `getCurrentSelectorBox`(`com.google.android.material.timepicker.ClockHandView` v1 @kind this) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getCurrentSelectorBox:()Landroid/graphics/RectF;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8a80.  v0:= v1.`com.google.android.material.timepicker.ClockHandView.selectorBox` @type ^`android.graphics.RectF` @kind object;
  #L4c8a84.  return v0 @kind object;
}
procedure `float` `getHandRotation`(`com.google.android.material.timepicker.ClockHandView` v1 @kind this) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getHandRotation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8c48.  v0:= v1.`com.google.android.material.timepicker.ClockHandView.originalDeg` @type ^`float`;
  #L4c8c4c.  return v0;
}
procedure `int` `getSelectorRadius`(`com.google.android.material.timepicker.ClockHandView` v1 @kind this) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getSelectorRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8cb4.  v0:= v1.`com.google.android.material.timepicker.ClockHandView.selectorRadius` @type ^`int`;
  #L4c8cb8.  return v0;
}
procedure `void` `onDraw`(`com.google.android.material.timepicker.ClockHandView` v0 @kind this, `android.graphics.Canvas` v1 @kind object) @signature `Lcom/google/android/material/timepicker/ClockHandView;.onDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;

  #L4c8f04.  call `onDraw`(v0, v1) @signature `Landroid/view/View;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L4c8f0a.  call `drawSelector`(v0, v1) @signature `Lcom/google/android/material/timepicker/ClockHandView;.drawSelector:(Landroid/graphics/Canvas;)V` @kind direct;
  #L4c8f10.  return @kind void;
}
procedure `void` `onLayout`(`com.google.android.material.timepicker.ClockHandView` v0 @kind this, `boolean` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.onLayout:(ZIIII)V` @AccessFlag PROTECTED {
    temp;

  #L4c8f24.  call `onLayout`(v0, v1, v2, v3, v4, v5) @signature `Landroid/view/View;.onLayout:(ZIIII)V` @kind super;
  #L4c8f2a.  call temp:= `getHandRotation`(v0) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getHandRotation:()F` @kind virtual;
  #L4c8f30.  v1:= temp;
  #L4c8f32.  call `setHandRotation`(v0, v1) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setHandRotation:(F)V` @kind virtual;
  #L4c8f38.  return @kind void;
}
procedure `boolean` `onTouchEvent`(`com.google.android.material.timepicker.ClockHandView` v10 @kind this, `android.view.MotionEvent` v11 @kind object) @signature `Lcom/google/android/material/timepicker/ClockHandView;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4c8b6c.  call temp:= `getActionMasked`(v11) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L4c8b72.  v0:= temp;
  #L4c8b74.  call temp:= `getX`(v11) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L4c8b7a.  v7:= temp;
  #L4c8b7c.  call temp:= `getY`(v11) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L4c8b82.  v11:= temp;
  #L4c8b84.  v1:= 0I;
  #L4c8b86.  v8:= 1I;
  #L4c8b88.  if v0 == 0 then goto L4c8be0;
  #L4c8b8c.  if v0 == v8 then goto L4c8b9e;
  #L4c8b90.  v2:= 2I;
  #L4c8b92.  if v0 == v2 then goto L4c8b9e;
  #L4c8b96.  v0:= 0I;
  #L4c8b98.  v4:= 0I;
  #L4c8b9a.  v5:= 0I;
  #L4c8b9c.  goto L4c8bf6;
  #L4c8b9e.  v2:= v10.`com.google.android.material.timepicker.ClockHandView.downX` @type ^`float`;
  #L4c8ba2.  v2:= v7 - v2 @kind float;
  #L4c8ba6.  v2:= (`int`) v2 @kind f2i;
  #L4c8ba8.  v3:= v10.`com.google.android.material.timepicker.ClockHandView.downY` @type ^`float`;
  #L4c8bac.  v3:= v11 - v3 @kind float;
  #L4c8bb0.  v3:= (`int`) v3 @kind f2i;
  #L4c8bb2.  v2:= v2 * v2 @kind int;
  #L4c8bb6.  v3:= v3 * v3 @kind int;
  #L4c8bba.  v2:= v2 + v3 @kind int;
  #L4c8bbc.  v3:= v10.`com.google.android.material.timepicker.ClockHandView.scaledTouchSlop` @type ^`int`;
  #L4c8bc0.  if v2 <= v3 then goto L4c8bc8;
  #L4c8bc4.  v2:= 1I;
  #L4c8bc6.  goto L4c8bca;
  #L4c8bc8.  v2:= 0I;
  #L4c8bca.  v10.`com.google.android.material.timepicker.ClockHandView.isInTapRegion` @type ^`boolean` := v2 @kind boolean;
  #L4c8bce.  v2:= v10.`com.google.android.material.timepicker.ClockHandView.changedDuringTouch` @type ^`boolean` @kind boolean;
  #L4c8bd2.  if v0 != v8 then goto L4c8bda;
  #L4c8bd6.  v0:= 1I;
  #L4c8bd8.  goto L4c8bdc;
  #L4c8bda.  v0:= 0I;
  #L4c8bdc.  v4:= v2;
  #L4c8bde.  goto L4c8b9a;
  #L4c8be0.  v10.`com.google.android.material.timepicker.ClockHandView.downX` @type ^`float` := v7;
  #L4c8be4.  v10.`com.google.android.material.timepicker.ClockHandView.downY` @type ^`float` := v11;
  #L4c8be8.  v10.`com.google.android.material.timepicker.ClockHandView.isInTapRegion` @type ^`boolean` := v8 @kind boolean;
  #L4c8bec.  v10.`com.google.android.material.timepicker.ClockHandView.changedDuringTouch` @type ^`boolean` := v1 @kind boolean;
  #L4c8bf0.  v0:= 0I;
  #L4c8bf2.  v4:= 0I;
  #L4c8bf4.  v5:= 1I;
  #L4c8bf6.  v9:= v10.`com.google.android.material.timepicker.ClockHandView.changedDuringTouch` @type ^`boolean` @kind boolean;
  #L4c8bfa.  v1:= v10 @kind object;
  #L4c8bfc.  v2:= v7;
  #L4c8bfe.  v3:= v11;
  #L4c8c00.  v6:= v0;
  #L4c8c02.  call temp:= `handleTouchInput`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/timepicker/ClockHandView;.handleTouchInput:(FFZZZ)Z` @kind direct;
  #L4c8c08.  v1:= temp;
  #L4c8c0a.  v1:= v1 ^| v9 @kind int;
  #L4c8c0c.  v10.`com.google.android.material.timepicker.ClockHandView.changedDuringTouch` @type ^`boolean` := v1 @kind boolean;
  #L4c8c10.  if v1 == 0 then goto L4c8c34;
  #L4c8c14.  if v0 == 0 then goto L4c8c34;
  #L4c8c18.  v0:= v10.`com.google.android.material.timepicker.ClockHandView.onActionUpListener` @type ^`com.google.android.material.timepicker.ClockHandView$OnActionUpListener` @kind object;
  #L4c8c1c.  if v0 == 0 then goto L4c8c34;
  #L4c8c20.  call temp:= `getDegreesFromXY`(v10, v7, v11) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getDegreesFromXY:(FF)I` @kind direct;
  #L4c8c26.  v11:= temp;
  #L4c8c28.  v11:= (`float`) v11 @kind i2f;
  #L4c8c2a.  v1:= v10.`com.google.android.material.timepicker.ClockHandView.isInTapRegion` @type ^`boolean` @kind boolean;
  #L4c8c2e.  call `onActionUp`(v0, v11, v1) @signature `Lcom/google/android/material/timepicker/ClockHandView$OnActionUpListener;.onActionUp:(FZ)V` @kind interface;
  #L4c8c34.  return v8;
}
procedure `void` `setAnimateOnTouchUp`(`com.google.android.material.timepicker.ClockHandView` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setAnimateOnTouchUp:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L4c8f4c.  v0.`com.google.android.material.timepicker.ClockHandView.animatingOnTouchUp` @type ^`boolean` := v1 @kind boolean;
  #L4c8f50.  return @kind void;
}
procedure `void` `setCircleRadius`(`com.google.android.material.timepicker.ClockHandView` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setCircleRadius:(I)V` @AccessFlag PUBLIC {
    temp;

  #L4c8f64.  v0.`com.google.android.material.timepicker.ClockHandView.circleRadius` @type ^`int` := v1;
  #L4c8f68.  call `invalidate`(v0) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L4c8f6e.  return @kind void;
}
procedure `void` `setHandRotation`(`com.google.android.material.timepicker.ClockHandView` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setHandRotation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8f80.  v0:= 0I;
  #L4c8f82.  call `setHandRotation`(v1, v2, v0) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setHandRotation:(FZ)V` @kind virtual;
  #L4c8f88.  return @kind void;
}
procedure `void` `setHandRotation`(`com.google.android.material.timepicker.ClockHandView` v2 @kind this, `float` v3 , `boolean` v4 ) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setHandRotation:(FZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c8f9c.  v0:= v2.`com.google.android.material.timepicker.ClockHandView.rotationAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4c8fa0.  if v0 == 0 then goto L4c8faa;
  #L4c8fa4.  call `cancel`(v0) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L4c8faa.  v0:= 0I;
  #L4c8fac.  if v4 != 0 then goto L4c8fb8;
  #L4c8fb0.  call `setHandRotationInternal`(v2, v3, v0) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setHandRotationInternal:(FZ)V` @kind direct;
  #L4c8fb6.  return @kind void;
  #L4c8fb8.  call temp:= `getValuesForAnimation`(v2, v3) @signature `Lcom/google/android/material/timepicker/ClockHandView;.getValuesForAnimation:(F)Landroid/util/Pair;` @kind direct;
  #L4c8fbe.  v3:= temp @kind object;
  #L4c8fc0.  v4:= 2I;
  #L4c8fc2.  v4:= new `float`[v4];
  #L4c8fc6.  v1:= v3.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L4c8fca.  v1:= (`java.lang.Float`) v1 @kind object;
  #L4c8fce.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4c8fd4.  v1:= temp;
  #L4c8fd6.  v4[v0]:= v1;
  #L4c8fda.  v0:= 1I;
  #L4c8fdc.  v3:= v3.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L4c8fe0.  v3:= (`java.lang.Float`) v3 @kind object;
  #L4c8fe4.  call temp:= `floatValue`(v3) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4c8fea.  v3:= temp;
  #L4c8fec.  v4[v0]:= v3;
  #L4c8ff0.  call temp:= `ofFloat`(v4) @signature `Landroid/animation/ValueAnimator;.ofFloat:([F)Landroid/animation/ValueAnimator;` @kind static;
  #L4c8ff6.  v3:= temp @kind object;
  #L4c8ff8.  v2.`com.google.android.material.timepicker.ClockHandView.rotationAnimator` @type ^`android.animation.ValueAnimator` := v3 @kind object;
  #L4c8ffc.  v0:= 200L;
  #L4c9000.  call temp:= `setDuration`(v3, v0) @signature `Landroid/animation/ValueAnimator;.setDuration:(J)Landroid/animation/ValueAnimator;` @kind virtual;
  #L4c9006.  v3:= v2.`com.google.android.material.timepicker.ClockHandView.rotationAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4c900a.  v4:= new `com.google.android.material.timepicker.ClockHandView$1`;
  #L4c900e.  call `<init>`(v4, v2) @signature `Lcom/google/android/material/timepicker/ClockHandView$1;.<init>:(Lcom/google/android/material/timepicker/ClockHandView;)V` @kind direct;
  #L4c9014.  call `addUpdateListener`(v3, v4) @signature `Landroid/animation/ValueAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L4c901a.  v3:= v2.`com.google.android.material.timepicker.ClockHandView.rotationAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4c901e.  v4:= new `com.google.android.material.timepicker.ClockHandView$2`;
  #L4c9022.  call `<init>`(v4, v2) @signature `Lcom/google/android/material/timepicker/ClockHandView$2;.<init>:(Lcom/google/android/material/timepicker/ClockHandView;)V` @kind direct;
  #L4c9028.  call `addListener`(v3, v4) @signature `Landroid/animation/ValueAnimator;.addListener:(Landroid/animation/Animator$AnimatorListener;)V` @kind virtual;
  #L4c902e.  v3:= v2.`com.google.android.material.timepicker.ClockHandView.rotationAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L4c9032.  call `start`(v3) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L4c9038.  return @kind void;
}
procedure `void` `setOnActionUpListener`(`com.google.android.material.timepicker.ClockHandView` v0 @kind this, `com.google.android.material.timepicker.ClockHandView$OnActionUpListener` v1 @kind object) @signature `Lcom/google/android/material/timepicker/ClockHandView;.setOnActionUpListener:(Lcom/google/android/material/timepicker/ClockHandView$OnActionUpListener;)V` @AccessFlag PUBLIC {
    temp;

  #L4c9124.  v0.`com.google.android.material.timepicker.ClockHandView.onActionUpListener` @type ^`com.google.android.material.timepicker.ClockHandView$OnActionUpListener` := v1 @kind object;
  #L4c9128.  return @kind void;
}
