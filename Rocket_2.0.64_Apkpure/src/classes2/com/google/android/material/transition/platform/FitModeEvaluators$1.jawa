record `com.google.android.material.transition.platform.FitModeEvaluators$1` @kind class @AccessFlag  extends `com.google.android.material.transition.platform.FitModeEvaluator` @kind interface {
}
procedure `void` `<init>`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v0 @kind this) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4d2580.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d2586.  return @kind void;
}
procedure `void` `applyMask`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v1 @kind this, `android.graphics.RectF` v2 @kind object, `float` v3 , `com.google.android.material.transition.platform.FitModeResult` v4 @kind object) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.applyMask:(Landroid/graphics/RectF;FLcom/google/android/material/transition/platform/FitModeResult;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d2598.  v0:= v4.`com.google.android.material.transition.platform.FitModeResult.currentEndHeight` @type ^`float`;
  #L4d259c.  v4:= v4.`com.google.android.material.transition.platform.FitModeResult.currentStartHeight` @type ^`float`;
  #L4d25a0.  v0:= v0 - v4 @kind float;
  #L4d25a2.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L4d25a8.  v4:= temp;
  #L4d25aa.  v0:= v2.`android.graphics.RectF.bottom` @type ^`float`;
  #L4d25ae.  v4:= v4 * v3 @kind float;
  #L4d25b2.  v0:= v0 - v4 @kind float;
  #L4d25b4.  v2.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L4d25b8.  return @kind void;
}
procedure `com.google.android.material.transition.platform.FitModeResult` `evaluate`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v6 @kind this, `float` v7 , `float` v8 , `float` v9 , `float` v10 , `float` v11 , `float` v12 , `float` v13 ) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.evaluate:(FFFFFFF)Lcom/google/android/material/transition/platform/FitModeResult;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4d2538.  v5:= 1I;
  #L4d253a.  v0:= v10;
  #L4d253c.  v1:= v12;
  #L4d253e.  v2:= v8;
  #L4d2540.  v3:= v9;
  #L4d2542.  v4:= v7;
  #L4d2544.  call temp:= `lerp`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/transition/platform/TransitionUtils;.lerp:(FFFFFZ)F` @kind static;
  #L4d254a.  v0:= temp;
  #L4d254c.  v8:= v0 / v10 @kind float;
  #L4d2550.  v9:= v0 / v12 @kind float;
  #L4d2554.  v11:= v11 * v8 @kind float;
  #L4d2558.  v13:= v13 * v9 @kind float;
  #L4d255c.  v1:= new `com.google.android.material.transition.platform.FitModeResult`;
  #L4d2560.  v7:= v1 @kind object;
  #L4d2562.  v10:= v0;
  #L4d2564.  v12:= v0;
  #L4d2566.  call `<init>`(v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/google/android/material/transition/platform/FitModeResult;.<init>:(FFFFFF)V` @kind direct;
  #L4d256c.  return v1 @kind object;
}
procedure `boolean` `shouldMaskStartBounds`(`com.google.android.material.transition.platform.FitModeEvaluators$1` v1 @kind this, `com.google.android.material.transition.platform.FitModeResult` v2 @kind object) @signature `Lcom/google/android/material/transition/platform/FitModeEvaluators$1;.shouldMaskStartBounds:(Lcom/google/android/material/transition/platform/FitModeResult;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d2510.  v0:= v2.`com.google.android.material.transition.platform.FitModeResult.currentStartHeight` @type ^`float`;
  #L4d2514.  v2:= v2.`com.google.android.material.transition.platform.FitModeResult.currentEndHeight` @type ^`float`;
  #L4d2518.  v2:= fcmpl(v0, v2);
  #L4d251c.  if v2 <= 0 then goto L4d2524;
  #L4d2520.  v2:= 1I;
  #L4d2522.  goto L4d2526;
  #L4d2524.  v2:= 0I;
  #L4d2526.  return v2;
}
