record `com.google.android.material.chip.ChipDrawable` @kind class @AccessFlag PUBLIC extends `com.google.android.material.shape.MaterialShapeDrawable` @kind class, `android.graphics.drawable.Drawable$Callback` @kind interface, `com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate` @kind interface {
  `int` `com.google.android.material.chip.ChipDrawable.alpha` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkable` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.checkedIcon` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.checkedIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkedIconVisible` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipCornerRadius` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.chipIcon` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipIconSize` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.chipIconVisible` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipMinHeight` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.chipPaint` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.chipStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipStrokeColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIcon` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIconRipple` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconSize` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @AccessFlag PRIVATE;
  `int`[] `com.google.android.material.chip.ChipDrawable.closeIconStateSet` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.closeIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.closeIconVisible` @AccessFlag PRIVATE;
  `android.graphics.ColorFilter` `com.google.android.material.chip.ChipDrawable.colorFilter` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.compatRippleColor` @AccessFlag PRIVATE;
  `android.content.Context` `com.google.android.material.chip.ChipDrawable.context` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.currentChecked` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTextColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTint` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.debugPaint` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.google.android.material.chip.ChipDrawable.delegate` @AccessFlag PRIVATE;
  `android.graphics.Paint$FontMetrics` `com.google.android.material.chip.ChipDrawable.fontMetrics` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.hasChipIconTint` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.hideMotionSpec` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconStartPadding` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.maxWidth` @AccessFlag PRIVATE;
  `android.graphics.PointF` `com.google.android.material.chip.ChipDrawable.pointF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.chip.ChipDrawable.rectF` @AccessFlag PRIVATE_FINAL;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.rippleColor` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.chip.ChipDrawable.shapePath` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.shouldDrawText` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.showMotionSpec` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.text` @AccessFlag PRIVATE;
  `com.google.android.material.internal.TextDrawableHelper` `com.google.android.material.chip.ChipDrawable.textDrawableHelper` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.textEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.textStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.tint` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.chip.ChipDrawable.tintFilter` @AccessFlag PRIVATE;
  `android.graphics.PorterDuff$Mode` `com.google.android.material.chip.ChipDrawable.tintMode` @AccessFlag PRIVATE;
  `android.text.TextUtils$TruncateAt` `com.google.android.material.chip.ChipDrawable.truncateAt` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.useCompatRipple` @AccessFlag PRIVATE;
}
global `boolean` `@@com.google.android.material.chip.ChipDrawable.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.chip.ChipDrawable.MAX_CHIP_ICON_HEIGHT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.chip.ChipDrawable.NAMESPACE_APP` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.drawable.ShapeDrawable` `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/ChipDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L47e104.  v0:= 1I;
  #L47e106.  v0:= new `int`[v0];
  #L47e10a.  v1:= 0I;
  #L47e10c.  v2:= 16842910I;
  #L47e112.  v0[v1]:= v2;
  #L47e116.  `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] := v0 @kind object;
  #L47e11a.  v0:= new `android.graphics.drawable.ShapeDrawable`;
  #L47e11e.  v1:= new `android.graphics.drawable.shapes.OvalShape`;
  #L47e122.  call `<init>`(v1) @signature `Landroid/graphics/drawable/shapes/OvalShape;.<init>:()V` @kind direct;
  #L47e128.  call `<init>`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.<init>:(Landroid/graphics/drawable/shapes/Shape;)V` @kind direct;
  #L47e12e.  `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` := v0 @kind object;
  #L47e132.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L47e144.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L47e14a.  v3:= -1.0F;
  #L47e14e.  v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float` := v3;
  #L47e152.  v3:= new `android.graphics.Paint`;
  #L47e156.  v4:= 1I;
  #L47e158.  call `<init>`(v3, v4) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L47e15e.  v1.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` := v3 @kind object;
  #L47e162.  v3:= new `android.graphics.Paint$FontMetrics`;
  #L47e166.  call `<init>`(v3) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L47e16c.  v1.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` := v3 @kind object;
  #L47e170.  v3:= new `android.graphics.RectF`;
  #L47e174.  call `<init>`(v3) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L47e17a.  v1.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` := v3 @kind object;
  #L47e17e.  v3:= new `android.graphics.PointF`;
  #L47e182.  call `<init>`(v3) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L47e188.  v1.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` := v3 @kind object;
  #L47e18c.  v3:= new `android.graphics.Path`;
  #L47e190.  call `<init>`(v3) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L47e196.  v1.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` := v3 @kind object;
  #L47e19a.  v3:= 255I;
  #L47e19e.  v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v3;
  #L47e1a2.  v3:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L47e1a6.  v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v3 @kind object;
  #L47e1aa.  v3:= new `java.lang.ref.WeakReference`;
  #L47e1ae.  v5:= 0I;
  #L47e1b0.  call `<init>`(v3, v5) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L47e1b6.  v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v3 @kind object;
  #L47e1ba.  call `initializeElevationOverlay`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @kind virtual;
  #L47e1c0.  v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` := v2 @kind object;
  #L47e1c4.  v3:= new `com.google.android.material.internal.TextDrawableHelper`;
  #L47e1c8.  call `<init>`(v3, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.<init>:(Lcom/google/android/material/internal/TextDrawableHelper$TextDrawableDelegate;)V` @kind direct;
  #L47e1ce.  v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` := v3 @kind object;
  #L47e1d2.  v0:= "" @kind object;
  #L47e1d6.  v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` := v0 @kind object;
  #L47e1da.  call temp:= `getTextPaint`(v3) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L47e1e0.  v3:= temp @kind object;
  #L47e1e2.  call temp:= `getResources`(v2) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47e1e8.  v2:= temp @kind object;
  #L47e1ea.  call temp:= `getDisplayMetrics`(v2) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L47e1f0.  v2:= temp @kind object;
  #L47e1f2.  v2:= v2.`android.util.DisplayMetrics.density` @type ^`float`;
  #L47e1f6.  v3.`android.text.TextPaint.density` @type ^`float` := v2;
  #L47e1fa.  v1.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` := v5 @kind object;
  #L47e1fe.  v2:= `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] @kind object;
  #L47e202.  call temp:= `setState`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L47e208.  call temp:= `setCloseIconState`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @kind virtual;
  #L47e20e.  v1.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v4 @kind boolean;
  #L47e212.  v2:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L47e216.  if v2 == 0 then goto L47e226;
  #L47e21a.  v2:= `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` @kind object;
  #L47e21e.  v3:= -1I;
  #L47e220.  call `setTint`(v2, v3) @signature `Landroid/graphics/drawable/ShapeDrawable;.setTint:(I)V` @kind virtual;
  #L47e226.  return @kind void;
}
procedure `void` `applyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47e238.  if v3 != 0 then goto L47e23e;
  #L47e23c.  return @kind void;
  #L47e23e.  call `setCallback`(v3, v2) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L47e244.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L47e24a.  v0:= temp;
  #L47e24c.  call temp:= `setLayoutDirection`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L47e252.  call temp:= `getLevel`(v2) @signature `Landroid/graphics/drawable/Drawable;.getLevel:()I` @kind virtual;
  #L47e258.  v0:= temp;
  #L47e25a.  call temp:= `setLevel`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L47e260.  call temp:= `isVisible`(v2) @signature `Landroid/graphics/drawable/Drawable;.isVisible:()Z` @kind virtual;
  #L47e266.  v0:= temp;
  #L47e268.  v1:= 0I;
  #L47e26a.  call temp:= `setVisible`(v3, v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L47e270.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e274.  if v3 != v0 then goto L47e29e;
  #L47e278.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L47e27e.  v0:= temp;
  #L47e280.  if v0 == 0 then goto L47e292;
  #L47e284.  call temp:= `getCloseIconState`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L47e28a.  v0:= temp @kind object;
  #L47e28c.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L47e292.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47e296.  call `setTintList`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L47e29c.  return @kind void;
  #L47e29e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e2a2.  if v3 != v0 then goto L47e2b8;
  #L47e2a6.  v1:= v2.`com.google.android.material.chip.ChipDrawable.hasChipIconTint` @type ^`boolean` @kind boolean;
  #L47e2aa.  if v1 == 0 then goto L47e2b8;
  #L47e2ae.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47e2b2.  call `setTintList`(v0, v1) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L47e2b8.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L47e2be.  v0:= temp;
  #L47e2c0.  if v0 == 0 then goto L47e2d2;
  #L47e2c4.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47e2ca.  v0:= temp @kind object;
  #L47e2cc.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L47e2d2.  return @kind void;
}
procedure `void` `calculateChipIconBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object, `android.graphics.RectF` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47e2e4.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L47e2ea.  call temp:= `showsChipIcon`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47e2f0.  v0:= temp;
  #L47e2f2.  if v0 != 0 then goto L47e302;
  #L47e2f6.  call temp:= `showsCheckedIcon`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L47e2fc.  v0:= temp;
  #L47e2fe.  if v0 == 0 then goto L47e36a;
  #L47e302.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L47e306.  v1:= v3.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L47e30a.  v0:= v0 + v1 @kind float;
  #L47e30c.  call temp:= `getCurrentChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconWidth:()F` @kind direct;
  #L47e312.  v1:= temp;
  #L47e314.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L47e31a.  v2:= temp;
  #L47e31c.  if v2 != 0 then goto L47e334;
  #L47e320.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L47e324.  v2:= (`float`) v2 @kind i2f;
  #L47e326.  v2:= v2 + v0 @kind float;
  #L47e328.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L47e32c.  v2:= v2 + v1 @kind float;
  #L47e32e.  v5.`android.graphics.RectF.right` @type ^`float` := v2;
  #L47e332.  goto L47e346;
  #L47e334.  v2:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L47e338.  v2:= (`float`) v2 @kind i2f;
  #L47e33a.  v2:= v2 - v0 @kind float;
  #L47e33c.  v5.`android.graphics.RectF.right` @type ^`float` := v2;
  #L47e340.  v2:= v2 - v1 @kind float;
  #L47e342.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L47e346.  call temp:= `getCurrentChipIconHeight`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconHeight:()F` @kind direct;
  #L47e34c.  v0:= temp;
  #L47e34e.  call temp:= `exactCenterY`(v4) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L47e354.  v4:= temp;
  #L47e356.  v1:= 2.0F;
  #L47e35a.  v1:= v0 / v1 @kind float;
  #L47e35e.  v4:= v4 - v1 @kind float;
  #L47e360.  v5.`android.graphics.RectF.top` @type ^`float` := v4;
  #L47e364.  v4:= v4 + v0 @kind float;
  #L47e366.  v5.`android.graphics.RectF.bottom` @type ^`float` := v4;
  #L47e36a.  return @kind void;
}
procedure `void` `calculateChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47e37c.  call `set`(v4, v3) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L47e382.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47e388.  v0:= temp;
  #L47e38a.  if v0 == 0 then goto L47e3d0;
  #L47e38e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L47e392.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L47e396.  v0:= v0 + v1 @kind float;
  #L47e398.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L47e39c.  v0:= v0 + v1 @kind float;
  #L47e39e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L47e3a2.  v0:= v0 + v1 @kind float;
  #L47e3a4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L47e3a8.  v0:= v0 + v1 @kind float;
  #L47e3aa.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L47e3b0.  v1:= temp;
  #L47e3b2.  if v1 != 0 then goto L47e3c4;
  #L47e3b6.  v3:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L47e3ba.  v3:= (`float`) v3 @kind i2f;
  #L47e3bc.  v3:= v3 - v0 @kind float;
  #L47e3be.  v4.`android.graphics.RectF.right` @type ^`float` := v3;
  #L47e3c2.  goto L47e3d0;
  #L47e3c4.  v3:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L47e3c8.  v3:= (`float`) v3 @kind i2f;
  #L47e3ca.  v3:= v3 + v0 @kind float;
  #L47e3cc.  v4.`android.graphics.RectF.left` @type ^`float` := v3;
  #L47e3d0.  return @kind void;
}
procedure `void` `calculateCloseIconBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47e3e4.  call `setEmpty`(v4) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L47e3ea.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47e3f0.  v0:= temp;
  #L47e3f2.  if v0 == 0 then goto L47e45a;
  #L47e3f6.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L47e3fa.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L47e3fe.  v0:= v0 + v1 @kind float;
  #L47e400.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L47e406.  v1:= temp;
  #L47e408.  if v1 != 0 then goto L47e424;
  #L47e40c.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L47e410.  v1:= (`float`) v1 @kind i2f;
  #L47e412.  v1:= v1 - v0 @kind float;
  #L47e414.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L47e418.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L47e41c.  v1:= v1 - v0 @kind float;
  #L47e41e.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L47e422.  goto L47e43a;
  #L47e424.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L47e428.  v1:= (`float`) v1 @kind i2f;
  #L47e42a.  v1:= v1 + v0 @kind float;
  #L47e42c.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L47e430.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L47e434.  v1:= v1 + v0 @kind float;
  #L47e436.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L47e43a.  call temp:= `exactCenterY`(v3) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L47e440.  v3:= temp;
  #L47e442.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L47e446.  v1:= 2.0F;
  #L47e44a.  v1:= v0 / v1 @kind float;
  #L47e44e.  v3:= v3 - v1 @kind float;
  #L47e450.  v4.`android.graphics.RectF.top` @type ^`float` := v3;
  #L47e454.  v3:= v3 + v0 @kind float;
  #L47e456.  v4.`android.graphics.RectF.bottom` @type ^`float` := v3;
  #L47e45a.  return @kind void;
}
procedure `void` `calculateCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object, `android.graphics.RectF` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47e46c.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L47e472.  call temp:= `showsCloseIcon`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47e478.  v0:= temp;
  #L47e47a.  if v0 == 0 then goto L47e4de;
  #L47e47e.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L47e482.  v1:= v3.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L47e486.  v0:= v0 + v1 @kind float;
  #L47e488.  v1:= v3.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L47e48c.  v0:= v0 + v1 @kind float;
  #L47e48e.  v1:= v3.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L47e492.  v0:= v0 + v1 @kind float;
  #L47e494.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L47e498.  v0:= v0 + v1 @kind float;
  #L47e49a.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L47e4a0.  v1:= temp;
  #L47e4a2.  if v1 != 0 then goto L47e4b8;
  #L47e4a6.  v1:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L47e4aa.  v1:= (`float`) v1 @kind i2f;
  #L47e4ac.  v5.`android.graphics.RectF.right` @type ^`float` := v1;
  #L47e4b0.  v1:= v1 - v0 @kind float;
  #L47e4b2.  v5.`android.graphics.RectF.left` @type ^`float` := v1;
  #L47e4b6.  goto L47e4ca;
  #L47e4b8.  v1:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L47e4bc.  v2:= (`float`) v1 @kind i2f;
  #L47e4be.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L47e4c2.  v1:= (`float`) v1 @kind i2f;
  #L47e4c4.  v1:= v1 + v0 @kind float;
  #L47e4c6.  v5.`android.graphics.RectF.right` @type ^`float` := v1;
  #L47e4ca.  v0:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L47e4ce.  v0:= (`float`) v0 @kind i2f;
  #L47e4d0.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L47e4d4.  v4:= v4.`android.graphics.Rect.bottom` @type ^`int`;
  #L47e4d8.  v4:= (`float`) v4 @kind i2f;
  #L47e4da.  v5.`android.graphics.RectF.bottom` @type ^`float` := v4;
  #L47e4de.  return @kind void;
}
procedure `void` `calculateTextBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object, `android.graphics.RectF` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47e4f0.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L47e4f6.  v0:= v3.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L47e4fa.  if v0 == 0 then goto L47e578;
  #L47e4fe.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L47e502.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47e508.  v1:= temp;
  #L47e50a.  v0:= v0 + v1 @kind float;
  #L47e50c.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L47e510.  v0:= v0 + v1 @kind float;
  #L47e512.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L47e516.  call temp:= `calculateCloseIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L47e51c.  v2:= temp;
  #L47e51e.  v1:= v1 + v2 @kind float;
  #L47e520.  v2:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L47e524.  v1:= v1 + v2 @kind float;
  #L47e526.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L47e52c.  v2:= temp;
  #L47e52e.  if v2 != 0 then goto L47e54c;
  #L47e532.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L47e536.  v2:= (`float`) v2 @kind i2f;
  #L47e538.  v2:= v2 + v0 @kind float;
  #L47e53a.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L47e53e.  v0:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L47e542.  v0:= (`float`) v0 @kind i2f;
  #L47e544.  v0:= v0 - v1 @kind float;
  #L47e546.  v5.`android.graphics.RectF.right` @type ^`float` := v0;
  #L47e54a.  goto L47e564;
  #L47e54c.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L47e550.  v2:= (`float`) v2 @kind i2f;
  #L47e552.  v2:= v2 + v1 @kind float;
  #L47e554.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L47e558.  v1:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L47e55c.  v1:= (`float`) v1 @kind i2f;
  #L47e55e.  v1:= v1 - v0 @kind float;
  #L47e560.  v5.`android.graphics.RectF.right` @type ^`float` := v1;
  #L47e564.  v0:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L47e568.  v0:= (`float`) v0 @kind i2f;
  #L47e56a.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L47e56e.  v4:= v4.`android.graphics.Rect.bottom` @type ^`int`;
  #L47e572.  v4:= (`float`) v4 @kind i2f;
  #L47e574.  v5.`android.graphics.RectF.bottom` @type ^`float` := v4;
  #L47e578.  return @kind void;
}
procedure `float` `calculateTextCenterFromBaseline`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47ddb8.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47ddbc.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L47ddc2.  v0:= temp @kind object;
  #L47ddc4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L47ddc8.  call temp:= `getFontMetrics`(v0, v1) @signature `Landroid/text/TextPaint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L47ddce.  v0:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L47ddd2.  v1:= v0.`android.graphics.Paint$FontMetrics.descent` @type ^`float`;
  #L47ddd6.  v0:= v0.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L47ddda.  v1:= v1 + v0 @kind float;
  #L47dddc.  v0:= 2.0F;
  #L47dde0.  v1:= v1 / v0 @kind float;
  #L47dde2.  return v1;
}
procedure `boolean` `canShowCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L47d4b4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L47d4b8.  if v0 == 0 then goto L47d4d0;
  #L47d4bc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d4c0.  if v0 == 0 then goto L47d4d0;
  #L47d4c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L47d4c8.  if v0 == 0 then goto L47d4d0;
  #L47d4cc.  v0:= 1I;
  #L47d4ce.  goto L47d4d2;
  #L47d4d0.  v0:= 0I;
  #L47d4d2.  return v0;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromAttributes`(`android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47dcc0.  v0:= new `com.google.android.material.chip.ChipDrawable`;
  #L47dcc4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L47dcca.  call `loadFromAttributes`(v0, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @kind direct;
  #L47dcd0.  return v0 @kind object;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromResource`(`android.content.Context` v2 @kind object, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47dce4.  v0:= "chip" @kind object;
  #L47dce8.  call temp:= `parseDrawableXml`(v2, v3, v0) @signature `Lcom/google/android/material/drawable/DrawableUtils;.parseDrawableXml:(Landroid/content/Context;ILjava/lang/CharSequence;)Landroid/util/AttributeSet;` @kind static;
  #L47dcee.  v3:= temp @kind object;
  #L47dcf0.  call temp:= `getStyleAttribute`(v3) @signature `Landroid/util/AttributeSet;.getStyleAttribute:()I` @kind interface;
  #L47dcf6.  v0:= temp;
  #L47dcf8.  if v0 != 0 then goto L47dd00;
  #L47dcfc.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Chip_Entry` @type ^`int`;
  #L47dd00.  v1:= `@@com.google.android.material.R$attr.chipStandaloneStyle` @type ^`int`;
  #L47dd04.  call temp:= `createFromAttributes`(v2, v3, v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @kind static;
  #L47dd0a.  v2:= temp @kind object;
  #L47dd0c.  return v2 @kind object;
}
procedure `void` `drawCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47e64c.  call temp:= `showsCheckedIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L47e652.  v0:= temp;
  #L47e654.  if v0 == 0 then goto L47e6b0;
  #L47e658.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e65c.  call `calculateChipIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L47e662.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e666.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L47e66a.  v7:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L47e66e.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L47e674.  v1:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e678.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e67c.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L47e682.  v2:= temp;
  #L47e684.  v2:= (`int`) v2 @kind f2i;
  #L47e686.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e68a.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L47e690.  v3:= temp;
  #L47e692.  v3:= (`int`) v3 @kind f2i;
  #L47e694.  v4:= 0I;
  #L47e696.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L47e69c.  v1:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e6a0.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L47e6a6.  v0:= -v0 @kind float;
  #L47e6a8.  v7:= -v7 @kind float;
  #L47e6aa.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L47e6b0.  return @kind void;
}
procedure `void` `drawChipBackground`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Canvas` v4 @kind object, `android.graphics.Rect` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47e6c4.  v0:= v3.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47e6c8.  if v0 != 0 then goto L47e722;
  #L47e6cc.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e6d0.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L47e6d4.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L47e6da.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e6de.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L47e6e2.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L47e6e8.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e6ec.  call temp:= `getTintColorFilter`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L47e6f2.  v1:= temp @kind object;
  #L47e6f4.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L47e6fa.  v0:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e6fe.  call `set`(v0, v5) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L47e704.  v5:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e708.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L47e70e.  v0:= temp;
  #L47e710.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L47e716.  v1:= temp;
  #L47e718.  v2:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e71c.  call `drawRoundRect`(v4, v5, v0, v1, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L47e722.  return @kind void;
}
procedure `void` `drawChipIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47e734.  call temp:= `showsChipIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47e73a.  v0:= temp;
  #L47e73c.  if v0 == 0 then goto L47e798;
  #L47e740.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e744.  call `calculateChipIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L47e74a.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e74e.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L47e752.  v7:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L47e756.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L47e75c.  v1:= v5.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e760.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e764.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L47e76a.  v2:= temp;
  #L47e76c.  v2:= (`int`) v2 @kind f2i;
  #L47e76e.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e772.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L47e778.  v3:= temp;
  #L47e77a.  v3:= (`int`) v3 @kind f2i;
  #L47e77c.  v4:= 0I;
  #L47e77e.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L47e784.  v1:= v5.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e788.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L47e78e.  v0:= -v0 @kind float;
  #L47e790.  v7:= -v7 @kind float;
  #L47e792.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L47e798.  return @kind void;
}
procedure `void` `drawChipStroke`(`com.google.android.material.chip.ChipDrawable` v7 @kind this, `android.graphics.Canvas` v8 @kind object, `android.graphics.Rect` v9 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47e7ac.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L47e7b0.  v1:= 0I;
  #L47e7b2.  v0:= fcmpl(v0, v1);
  #L47e7b6.  if v0 <= 0 then goto L47e852;
  #L47e7ba.  v0:= v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47e7be.  if v0 != 0 then goto L47e852;
  #L47e7c2.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e7c6.  v1:= v7.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L47e7ca.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L47e7d0.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e7d4.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L47e7d8.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L47e7de.  v0:= v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47e7e2.  if v0 != 0 then goto L47e7f8;
  #L47e7e6.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e7ea.  call temp:= `getTintColorFilter`(v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L47e7f0.  v1:= temp @kind object;
  #L47e7f2.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L47e7f8.  v0:= v7.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e7fc.  v1:= v9.`android.graphics.Rect.left` @type ^`int`;
  #L47e800.  v1:= (`float`) v1 @kind i2f;
  #L47e802.  v2:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L47e806.  v3:= 2.0F;
  #L47e80a.  v4:= v2 / v3 @kind float;
  #L47e80e.  v1:= v1 + v4 @kind float;
  #L47e810.  v4:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L47e814.  v4:= (`float`) v4 @kind i2f;
  #L47e816.  v5:= v2 / v3 @kind float;
  #L47e81a.  v4:= v4 + v5 @kind float;
  #L47e81c.  v5:= v9.`android.graphics.Rect.right` @type ^`int`;
  #L47e820.  v5:= (`float`) v5 @kind i2f;
  #L47e822.  v6:= v2 / v3 @kind float;
  #L47e826.  v5:= v5 - v6 @kind float;
  #L47e828.  v9:= v9.`android.graphics.Rect.bottom` @type ^`int`;
  #L47e82c.  v9:= (`float`) v9 @kind i2f;
  #L47e82e.  v2:= v2 / v3 @kind float;
  #L47e830.  v9:= v9 - v2 @kind float;
  #L47e832.  call `set`(v0, v1, v4, v5, v9) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L47e838.  v9:= v7.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L47e83c.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L47e840.  v0:= v0 / v3 @kind float;
  #L47e842.  v9:= v9 - v0 @kind float;
  #L47e844.  v0:= v7.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e848.  v1:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e84c.  call `drawRoundRect`(v8, v0, v9, v9, v1) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L47e852.  return @kind void;
}
procedure `void` `drawChipSurface`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Canvas` v4 @kind object, `android.graphics.Rect` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipSurface:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47e864.  v0:= v3.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47e868.  if v0 != 0 then goto L47e8b0;
  #L47e86c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e870.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L47e874.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L47e87a.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e87e.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L47e882.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L47e888.  v0:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e88c.  call `set`(v0, v5) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L47e892.  v5:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e896.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L47e89c.  v0:= temp;
  #L47e89e.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L47e8a4.  v1:= temp;
  #L47e8a6.  v2:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e8aa.  call `drawRoundRect`(v4, v5, v0, v1, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L47e8b0.  return @kind void;
}
procedure `void` `drawCloseIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47e8c4.  call temp:= `showsCloseIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47e8ca.  v0:= temp;
  #L47e8cc.  if v0 == 0 then goto L47e95c;
  #L47e8d0.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e8d4.  call `calculateCloseIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L47e8da.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e8de.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L47e8e2.  v7:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L47e8e6.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L47e8ec.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e8f0.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e8f4.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L47e8fa.  v2:= temp;
  #L47e8fc.  v2:= (`int`) v2 @kind f2i;
  #L47e8fe.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e902.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L47e908.  v3:= temp;
  #L47e90a.  v3:= (`int`) v3 @kind f2i;
  #L47e90c.  v4:= 0I;
  #L47e90e.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L47e914.  v1:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L47e918.  if v1 == 0 then goto L47e948;
  #L47e91c.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e920.  v2:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e924.  call temp:= `getBounds`(v2) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L47e92a.  v2:= temp @kind object;
  #L47e92c.  call `setBounds`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L47e932.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e936.  call `jumpToCurrentState`(v1) @signature `Landroid/graphics/drawable/Drawable;.jumpToCurrentState:()V` @kind virtual;
  #L47e93c.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e940.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L47e946.  goto L47e952;
  #L47e948.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47e94c.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L47e952.  v0:= -v0 @kind float;
  #L47e954.  v7:= -v7 @kind float;
  #L47e956.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L47e95c.  return @kind void;
}
procedure `void` `drawCompatRipple`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Canvas` v4 @kind object, `android.graphics.Rect` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47e970.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e974.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L47e978.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L47e97e.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e982.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L47e986.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L47e98c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e990.  call `set`(v0, v5) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L47e996.  v0:= v3.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47e99a.  if v0 != 0 then goto L47e9be;
  #L47e99e.  v5:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47e9a2.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L47e9a8.  v0:= temp;
  #L47e9aa.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L47e9b0.  v1:= temp;
  #L47e9b2.  v2:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e9b6.  call `drawRoundRect`(v4, v5, v0, v1, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L47e9bc.  goto L47e9e8;
  #L47e9be.  v0:= new `android.graphics.RectF`;
  #L47e9c2.  call `<init>`(v0, v5) @signature `Landroid/graphics/RectF;.<init>:(Landroid/graphics/Rect;)V` @kind direct;
  #L47e9c8.  v5:= v3.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` @kind object;
  #L47e9cc.  call `calculatePathForSize`(v3, v0, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L47e9d2.  v5:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47e9d6.  v0:= v3.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` @kind object;
  #L47e9da.  call temp:= `getBoundsAsRectF`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L47e9e0.  v1:= temp @kind object;
  #L47e9e2.  call `drawShape`(v3, v4, v5, v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Landroid/graphics/RectF;)V` @kind super;
  #L47e9e8.  return @kind void;
}
procedure `void` `drawDebug`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object, `android.graphics.Rect` v11 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L47e9fc.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L47ea00.  if v0 == 0 then goto L47eb06;
  #L47ea04.  v1:= -16777216I;
  #L47ea08.  v2:= 127I;
  #L47ea0c.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L47ea12.  v1:= temp;
  #L47ea14.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L47ea1a.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L47ea1e.  call `drawRect`(v10, v11, v0) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/Rect;Landroid/graphics/Paint;)V` @kind virtual;
  #L47ea24.  call temp:= `showsChipIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47ea2a.  v0:= temp;
  #L47ea2c.  if v0 != 0 then goto L47ea3c;
  #L47ea30.  call temp:= `showsCheckedIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L47ea36.  v0:= temp;
  #L47ea38.  if v0 == 0 then goto L47ea54;
  #L47ea3c.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47ea40.  call `calculateChipIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L47ea46.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47ea4a.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L47ea4e.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L47ea54.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L47ea58.  if v0 == 0 then goto L47ea84;
  #L47ea5c.  v0:= v11.`android.graphics.Rect.left` @type ^`int`;
  #L47ea60.  v4:= (`float`) v0 @kind i2f;
  #L47ea62.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L47ea68.  v5:= temp;
  #L47ea6a.  v0:= v11.`android.graphics.Rect.right` @type ^`int`;
  #L47ea6e.  v6:= (`float`) v0 @kind i2f;
  #L47ea70.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L47ea76.  v7:= temp;
  #L47ea78.  v8:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L47ea7c.  v3:= v10 @kind object;
  #L47ea7e.  call `drawLine`(v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L47ea84.  call temp:= `showsCloseIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47ea8a.  v0:= temp;
  #L47ea8c.  if v0 == 0 then goto L47eaa8;
  #L47ea90.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47ea94.  call `calculateCloseIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L47ea9a.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47ea9e.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L47eaa2.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L47eaa8.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L47eaac.  v1:= -65536I;
  #L47eab0.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L47eab6.  v1:= temp;
  #L47eab8.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L47eabe.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47eac2.  call `calculateChipTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L47eac8.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47eacc.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L47ead0.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L47ead6.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L47eada.  v1:= -16711936I;
  #L47eae0.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L47eae6.  v1:= temp;
  #L47eae8.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L47eaee.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47eaf2.  call `calculateCloseIconTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L47eaf8.  v11:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47eafc.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L47eb00.  call `drawRect`(v10, v11, v0) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L47eb06.  return @kind void;
}
procedure `void` `drawText`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object, `android.graphics.Rect` v11 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L47eb18.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L47eb1c.  if v0 == 0 then goto L47ec42;
  #L47eb20.  v0:= v9.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L47eb24.  call temp:= `calculateTextOriginAndAlignment`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextOriginAndAlignment:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @kind virtual;
  #L47eb2a.  v0:= temp @kind object;
  #L47eb2c.  v1:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47eb30.  call `calculateTextBounds`(v9, v11, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L47eb36.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47eb3a.  call temp:= `getTextAppearance`(v11) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L47eb40.  v11:= temp @kind object;
  #L47eb42.  if v11 == 0 then goto L47eb6c;
  #L47eb46.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47eb4a.  call temp:= `getTextPaint`(v11) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L47eb50.  v11:= temp @kind object;
  #L47eb52.  call temp:= `getState`(v9) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47eb58.  v1:= temp @kind object;
  #L47eb5a.  v11.`android.text.TextPaint.drawableState` @type ^`int`[] := v1 @kind object;
  #L47eb5e.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47eb62.  v1:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47eb66.  call `updateTextPaintDrawState`(v11, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.updateTextPaintDrawState:(Landroid/content/Context;)V` @kind virtual;
  #L47eb6c.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47eb70.  call temp:= `getTextPaint`(v11) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L47eb76.  v11:= temp @kind object;
  #L47eb78.  call `setTextAlign`(v11, v0) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L47eb7e.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47eb82.  call temp:= `getText`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L47eb88.  v0:= temp @kind object;
  #L47eb8a.  call temp:= `toString`(v0) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L47eb90.  v0:= temp @kind object;
  #L47eb92.  call temp:= `getTextWidth`(v11, v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L47eb98.  v11:= temp;
  #L47eb9a.  call temp:= `round`(v11) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L47eba0.  v11:= temp;
  #L47eba2.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47eba6.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L47ebac.  v0:= temp;
  #L47ebae.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L47ebb4.  v0:= temp;
  #L47ebb6.  v1:= 0I;
  #L47ebb8.  if v11 <= v0 then goto L47ebc0;
  #L47ebbc.  v11:= 1I;
  #L47ebbe.  goto L47ebc2;
  #L47ebc0.  v11:= 0I;
  #L47ebc2.  if v11 == 0 then goto L47ebd8;
  #L47ebc6.  call temp:= `save`(v10) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L47ebcc.  v1:= temp;
  #L47ebce.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47ebd2.  call temp:= `clipRect`(v10, v0) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L47ebd8.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L47ebdc.  if v11 == 0 then goto L47ec0c;
  #L47ebe0.  v2:= v9.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L47ebe4.  if v2 == 0 then goto L47ec0c;
  #L47ebe8.  v2:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47ebec.  call temp:= `getTextPaint`(v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L47ebf2.  v2:= temp @kind object;
  #L47ebf4.  v3:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L47ebf8.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L47ebfe.  v3:= temp;
  #L47ec00.  v4:= v9.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L47ec04.  call temp:= `ellipsize`(v0, v2, v3, v4) @signature `Landroid/text/TextUtils;.ellipsize:(Ljava/lang/CharSequence;Landroid/text/TextPaint;FLandroid/text/TextUtils$TruncateAt;)Ljava/lang/CharSequence;` @kind static;
  #L47ec0a.  v0:= temp @kind object;
  #L47ec0c.  v3:= v0 @kind object;
  #L47ec0e.  v4:= 0I;
  #L47ec10.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L47ec16.  v5:= temp;
  #L47ec18.  v0:= v9.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L47ec1c.  v6:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L47ec20.  v7:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L47ec24.  v0:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47ec28.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L47ec2e.  v8:= temp @kind object;
  #L47ec30.  v2:= v10 @kind object;
  #L47ec32.  call `drawText`(v2, v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/CharSequence;IIFFLandroid/graphics/Paint;)V` @kind virtual;
  #L47ec38.  if v11 == 0 then goto L47ec42;
  #L47ec3c.  call `restoreToCount`(v10, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L47ec42.  return @kind void;
}
procedure `float` `getCurrentChipIconHeight`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconHeight:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47dedc.  v0:= v3.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L47dee0.  if v0 == 0 then goto L47deea;
  #L47dee4.  v0:= v3.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47dee8.  goto L47deee;
  #L47deea.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47deee.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L47def2.  v2:= 0I;
  #L47def4.  v2:= fcmpg(v1, v2);
  #L47def8.  if v2 > 0 then goto L47df3a;
  #L47defc.  if v0 == 0 then goto L47df3a;
  #L47df00.  v1:= v3.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47df04.  v2:= 24I;
  #L47df08.  call temp:= `dpToPx`(v1, v2) @signature `Lcom/google/android/material/internal/ViewUtils;.dpToPx:(Landroid/content/Context;I)F` @kind static;
  #L47df0e.  v1:= temp;
  #L47df10.  v1:= (`double`) v1 @kind f2d;
  #L47df12.  call temp:= `ceil`(v1) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L47df18.  v1:= temp @kind wide;
  #L47df1a.  v1:= (`float`) v1 @kind d2f;
  #L47df1c.  call temp:= `getIntrinsicHeight`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicHeight:()I` @kind virtual;
  #L47df22.  v2:= temp;
  #L47df24.  v2:= (`float`) v2 @kind i2f;
  #L47df26.  v2:= fcmpg(v2, v1);
  #L47df2a.  if v2 > 0 then goto L47df3a;
  #L47df2e.  call temp:= `getIntrinsicHeight`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicHeight:()I` @kind virtual;
  #L47df34.  v0:= temp;
  #L47df36.  v0:= (`float`) v0 @kind i2f;
  #L47df38.  return v0;
  #L47df3a.  return v1;
}
procedure `float` `getCurrentChipIconWidth`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconWidth:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47df4c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L47df50.  if v0 == 0 then goto L47df5a;
  #L47df54.  v0:= v3.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47df58.  goto L47df5e;
  #L47df5a.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47df5e.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L47df62.  v2:= 0I;
  #L47df64.  v2:= fcmpg(v1, v2);
  #L47df68.  if v2 > 0 then goto L47df7c;
  #L47df6c.  if v0 == 0 then goto L47df7c;
  #L47df70.  call temp:= `getIntrinsicWidth`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicWidth:()I` @kind virtual;
  #L47df76.  v0:= temp;
  #L47df78.  v0:= (`float`) v0 @kind i2f;
  #L47df7a.  return v0;
  #L47df7c.  return v1;
}
procedure `android.graphics.ColorFilter` `getTintColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L47d394.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L47d398.  if v0 == 0 then goto L47d39e;
  #L47d39c.  goto L47d3a2;
  #L47d39e.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L47d3a2.  return v0 @kind object;
}
procedure `boolean` `hasState`(`int`[] v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47d4fc.  v0:= 0I;
  #L47d4fe.  if v4 != 0 then goto L47d504;
  #L47d502.  return v0;
  #L47d504.  v1:= length @variable v4;
  #L47d506.  v2:= 0I;
  #L47d508.  if v2 >= v1 then goto L47d51e;
  #L47d50c.  v3:= v4[v2];
  #L47d510.  if v3 != v5 then goto L47d518;
  #L47d514.  v4:= 1I;
  #L47d516.  return v4;
  #L47d518.  v2:= v2 + 1;
  #L47d51c.  goto L47d508;
  #L47d51e.  return v0;
}
procedure `boolean` `isStateful`(`android.content.res.ColorStateList` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L47d6d4.  if v0 == 0 then goto L47d6e8;
  #L47d6d8.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L47d6de.  v0:= temp;
  #L47d6e0.  if v0 == 0 then goto L47d6e8;
  #L47d6e4.  v0:= 1I;
  #L47d6e6.  goto L47d6ea;
  #L47d6e8.  v0:= 0I;
  #L47d6ea.  return v0;
}
procedure `boolean` `isStateful`(`android.graphics.drawable.Drawable` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L47d6fc.  if v0 == 0 then goto L47d710;
  #L47d700.  call temp:= `isStateful`(v0) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L47d706.  v0:= temp;
  #L47d708.  if v0 == 0 then goto L47d710;
  #L47d70c.  v0:= 1I;
  #L47d70e.  goto L47d712;
  #L47d710.  v0:= 0I;
  #L47d712.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.resources.TextAppearance` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L47d724.  if v1 == 0 then goto L47d74c;
  #L47d728.  call temp:= `getTextColor`(v1) @signature `Lcom/google/android/material/resources/TextAppearance;.getTextColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L47d72e.  v0:= temp @kind object;
  #L47d730.  if v0 == 0 then goto L47d74c;
  #L47d734.  call temp:= `getTextColor`(v1) @signature `Lcom/google/android/material/resources/TextAppearance;.getTextColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L47d73a.  v1:= temp @kind object;
  #L47d73c.  call temp:= `isStateful`(v1) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L47d742.  v1:= temp;
  #L47d744.  if v1 == 0 then goto L47d74c;
  #L47d748.  v1:= 1I;
  #L47d74a.  goto L47d74e;
  #L47d74c.  v1:= 0I;
  #L47d74e.  return v1;
}
procedure `void` `loadFromAttributes`(`com.google.android.material.chip.ChipDrawable` v7 @kind this, `android.util.AttributeSet` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47ed30.  v0:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ed34.  v2:= `@@com.google.android.material.R$styleable.Chip` @type ^`int`[] @kind object;
  #L47ed38.  v6:= 0I;
  #L47ed3a.  v5:= new `int`[v6];
  #L47ed3e.  v1:= v8 @kind object;
  #L47ed40.  v3:= v9;
  #L47ed42.  v4:= v10;
  #L47ed44.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L47ed4a.  v9:= temp @kind object;
  #L47ed4c.  v10:= `@@com.google.android.material.R$styleable.Chip_shapeAppearance` @type ^`int`;
  #L47ed50.  call temp:= `hasValue`(v9, v10) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L47ed56.  v10:= temp;
  #L47ed58.  v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` := v10 @kind boolean;
  #L47ed5c.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ed60.  v0:= `@@com.google.android.material.R$styleable.Chip_chipSurfaceColor` @type ^`int`;
  #L47ed64.  call temp:= `getColorStateList`(v10, v9, v0) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47ed6a.  v10:= temp @kind object;
  #L47ed6c.  call `setChipSurfaceColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipSurfaceColor:(Landroid/content/res/ColorStateList;)V` @kind direct;
  #L47ed72.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ed76.  v0:= `@@com.google.android.material.R$styleable.Chip_chipBackgroundColor` @type ^`int`;
  #L47ed7a.  call temp:= `getColorStateList`(v10, v9, v0) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47ed80.  v10:= temp @kind object;
  #L47ed82.  call `setChipBackgroundColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47ed88.  v10:= `@@com.google.android.material.R$styleable.Chip_chipMinHeight` @type ^`int`;
  #L47ed8c.  v0:= 0I;
  #L47ed8e.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47ed94.  v10:= temp;
  #L47ed96.  call `setChipMinHeight`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L47ed9c.  v10:= `@@com.google.android.material.R$styleable.Chip_chipCornerRadius` @type ^`int`;
  #L47eda0.  call temp:= `hasValue`(v9, v10) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L47eda6.  v1:= temp;
  #L47eda8.  if v1 == 0 then goto L47edba;
  #L47edac.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47edb2.  v10:= temp;
  #L47edb4.  call `setChipCornerRadius`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L47edba.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47edbe.  v1:= `@@com.google.android.material.R$styleable.Chip_chipStrokeColor` @type ^`int`;
  #L47edc2.  call temp:= `getColorStateList`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47edc8.  v10:= temp @kind object;
  #L47edca.  call `setChipStrokeColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47edd0.  v10:= `@@com.google.android.material.R$styleable.Chip_chipStrokeWidth` @type ^`int`;
  #L47edd4.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47edda.  v10:= temp;
  #L47eddc.  call `setChipStrokeWidth`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L47ede2.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ede6.  v1:= `@@com.google.android.material.R$styleable.Chip_rippleColor` @type ^`int`;
  #L47edea.  call temp:= `getColorStateList`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47edf0.  v10:= temp @kind object;
  #L47edf2.  call `setRippleColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47edf8.  v10:= `@@com.google.android.material.R$styleable.Chip_android_text` @type ^`int`;
  #L47edfc.  call temp:= `getText`(v9, v10) @signature `Landroid/content/res/TypedArray;.getText:(I)Ljava/lang/CharSequence;` @kind virtual;
  #L47ee02.  v10:= temp @kind object;
  #L47ee04.  call `setText`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L47ee0a.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ee0e.  v1:= `@@com.google.android.material.R$styleable.Chip_android_textAppearance` @type ^`int`;
  #L47ee12.  call temp:= `getTextAppearance`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getTextAppearance:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/resources/TextAppearance;` @kind static;
  #L47ee18.  v10:= temp @kind object;
  #L47ee1a.  v1:= `@@com.google.android.material.R$styleable.Chip_android_textSize` @type ^`int`;
  #L47ee1e.  call temp:= `getTextSize`(v10) @signature `Lcom/google/android/material/resources/TextAppearance;.getTextSize:()F` @kind virtual;
  #L47ee24.  v2:= temp;
  #L47ee26.  call temp:= `getDimension`(v9, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47ee2c.  v1:= temp;
  #L47ee2e.  call `setTextSize`(v10, v1) @signature `Lcom/google/android/material/resources/TextAppearance;.setTextSize:(F)V` @kind virtual;
  #L47ee34.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L47ee38.  v2:= 23I;
  #L47ee3c.  if v1 >= v2 then goto L47ee56;
  #L47ee40.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ee44.  v2:= `@@com.google.android.material.R$styleable.Chip_android_textColor` @type ^`int`;
  #L47ee48.  call temp:= `getColorStateList`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47ee4e.  v1:= temp @kind object;
  #L47ee50.  call `setTextColor`(v10, v1) @signature `Lcom/google/android/material/resources/TextAppearance;.setTextColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47ee56.  call `setTextAppearance`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L47ee5c.  v10:= `@@com.google.android.material.R$styleable.Chip_android_ellipsize` @type ^`int`;
  #L47ee60.  call temp:= `getInt`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L47ee66.  v10:= temp;
  #L47ee68.  v1:= 1I;
  #L47ee6a.  if v10 == v1 then goto L47ee94;
  #L47ee6e.  v1:= 2I;
  #L47ee70.  if v10 == v1 then goto L47ee88;
  #L47ee74.  v1:= 3I;
  #L47ee76.  if v10 == v1 then goto L47ee7c;
  #L47ee7a.  goto L47ee9e;
  #L47ee7c.  v10:= `@@android.text.TextUtils$TruncateAt.END` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L47ee80.  call `setEllipsize`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L47ee86.  goto L47ee9e;
  #L47ee88.  v10:= `@@android.text.TextUtils$TruncateAt.MIDDLE` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L47ee8c.  call `setEllipsize`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L47ee92.  goto L47ee9e;
  #L47ee94.  v10:= `@@android.text.TextUtils$TruncateAt.START` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L47ee98.  call `setEllipsize`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L47ee9e.  v10:= `@@com.google.android.material.R$styleable.Chip_chipIconVisible` @type ^`int`;
  #L47eea2.  call temp:= `getBoolean`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L47eea8.  v10:= temp;
  #L47eeaa.  call `setChipIconVisible`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L47eeb0.  v10:= "http://schemas.android.com/apk/res-auto" @kind object;
  #L47eeb4.  if v8 == 0 then goto L47eeea;
  #L47eeb8.  v1:= "chipIconEnabled" @kind object;
  #L47eebc.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L47eec2.  v1:= temp @kind object;
  #L47eec4.  if v1 == 0 then goto L47eeea;
  #L47eec8.  v1:= "chipIconVisible" @kind object;
  #L47eecc.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L47eed2.  v1:= temp @kind object;
  #L47eed4.  if v1 != 0 then goto L47eeea;
  #L47eed8.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconEnabled` @type ^`int`;
  #L47eedc.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L47eee2.  v1:= temp;
  #L47eee4.  call `setChipIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L47eeea.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47eeee.  v2:= `@@com.google.android.material.R$styleable.Chip_chipIcon` @type ^`int`;
  #L47eef2.  call temp:= `getDrawable`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L47eef8.  v1:= temp @kind object;
  #L47eefa.  call `setChipIcon`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L47ef00.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconTint` @type ^`int`;
  #L47ef04.  call temp:= `hasValue`(v9, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L47ef0a.  v2:= temp;
  #L47ef0c.  if v2 == 0 then goto L47ef22;
  #L47ef10.  v2:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ef14.  call temp:= `getColorStateList`(v2, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47ef1a.  v1:= temp @kind object;
  #L47ef1c.  call `setChipIconTint`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47ef22.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconSize` @type ^`int`;
  #L47ef26.  v2:= -1.0F;
  #L47ef2a.  call temp:= `getDimension`(v9, v1, v2) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47ef30.  v1:= temp;
  #L47ef32.  call `setChipIconSize`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L47ef38.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconVisible` @type ^`int`;
  #L47ef3c.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L47ef42.  v1:= temp;
  #L47ef44.  call `setCloseIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L47ef4a.  if v8 == 0 then goto L47ef80;
  #L47ef4e.  v1:= "closeIconEnabled" @kind object;
  #L47ef52.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L47ef58.  v1:= temp @kind object;
  #L47ef5a.  if v1 == 0 then goto L47ef80;
  #L47ef5e.  v1:= "closeIconVisible" @kind object;
  #L47ef62.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L47ef68.  v1:= temp @kind object;
  #L47ef6a.  if v1 != 0 then goto L47ef80;
  #L47ef6e.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconEnabled` @type ^`int`;
  #L47ef72.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L47ef78.  v1:= temp;
  #L47ef7a.  call `setCloseIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L47ef80.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ef84.  v2:= `@@com.google.android.material.R$styleable.Chip_closeIcon` @type ^`int`;
  #L47ef88.  call temp:= `getDrawable`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L47ef8e.  v1:= temp @kind object;
  #L47ef90.  call `setCloseIcon`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L47ef96.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ef9a.  v2:= `@@com.google.android.material.R$styleable.Chip_closeIconTint` @type ^`int`;
  #L47ef9e.  call temp:= `getColorStateList`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47efa4.  v1:= temp @kind object;
  #L47efa6.  call `setCloseIconTint`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47efac.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconSize` @type ^`int`;
  #L47efb0.  call temp:= `getDimension`(v9, v1, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47efb6.  v1:= temp;
  #L47efb8.  call `setCloseIconSize`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L47efbe.  v1:= `@@com.google.android.material.R$styleable.Chip_android_checkable` @type ^`int`;
  #L47efc2.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L47efc8.  v1:= temp;
  #L47efca.  call `setCheckable`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L47efd0.  v1:= `@@com.google.android.material.R$styleable.Chip_checkedIconVisible` @type ^`int`;
  #L47efd4.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L47efda.  v1:= temp;
  #L47efdc.  call `setCheckedIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L47efe2.  if v8 == 0 then goto L47f018;
  #L47efe6.  v1:= "checkedIconEnabled" @kind object;
  #L47efea.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L47eff0.  v1:= temp @kind object;
  #L47eff2.  if v1 == 0 then goto L47f018;
  #L47eff6.  v1:= "checkedIconVisible" @kind object;
  #L47effa.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L47f000.  v8:= temp @kind object;
  #L47f002.  if v8 != 0 then goto L47f018;
  #L47f006.  v8:= `@@com.google.android.material.R$styleable.Chip_checkedIconEnabled` @type ^`int`;
  #L47f00a.  call temp:= `getBoolean`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L47f010.  v8:= temp;
  #L47f012.  call `setCheckedIconVisible`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L47f018.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f01c.  v10:= `@@com.google.android.material.R$styleable.Chip_checkedIcon` @type ^`int`;
  #L47f020.  call temp:= `getDrawable`(v8, v9, v10) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L47f026.  v8:= temp @kind object;
  #L47f028.  call `setCheckedIcon`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L47f02e.  v8:= `@@com.google.android.material.R$styleable.Chip_checkedIconTint` @type ^`int`;
  #L47f032.  call temp:= `hasValue`(v9, v8) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L47f038.  v10:= temp;
  #L47f03a.  if v10 == 0 then goto L47f050;
  #L47f03e.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f042.  call temp:= `getColorStateList`(v10, v9, v8) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47f048.  v8:= temp @kind object;
  #L47f04a.  call `setCheckedIconTint`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47f050.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f054.  v10:= `@@com.google.android.material.R$styleable.Chip_showMotionSpec` @type ^`int`;
  #L47f058.  call temp:= `createFromAttribute`(v8, v9, v10) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L47f05e.  v8:= temp @kind object;
  #L47f060.  call `setShowMotionSpec`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L47f066.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f06a.  v10:= `@@com.google.android.material.R$styleable.Chip_hideMotionSpec` @type ^`int`;
  #L47f06e.  call temp:= `createFromAttribute`(v8, v9, v10) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L47f074.  v8:= temp @kind object;
  #L47f076.  call `setHideMotionSpec`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L47f07c.  v8:= `@@com.google.android.material.R$styleable.Chip_chipStartPadding` @type ^`int`;
  #L47f080.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47f086.  v8:= temp;
  #L47f088.  call `setChipStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L47f08e.  v8:= `@@com.google.android.material.R$styleable.Chip_iconStartPadding` @type ^`int`;
  #L47f092.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47f098.  v8:= temp;
  #L47f09a.  call `setIconStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L47f0a0.  v8:= `@@com.google.android.material.R$styleable.Chip_iconEndPadding` @type ^`int`;
  #L47f0a4.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47f0aa.  v8:= temp;
  #L47f0ac.  call `setIconEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L47f0b2.  v8:= `@@com.google.android.material.R$styleable.Chip_textStartPadding` @type ^`int`;
  #L47f0b6.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47f0bc.  v8:= temp;
  #L47f0be.  call `setTextStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L47f0c4.  v8:= `@@com.google.android.material.R$styleable.Chip_textEndPadding` @type ^`int`;
  #L47f0c8.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47f0ce.  v8:= temp;
  #L47f0d0.  call `setTextEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L47f0d6.  v8:= `@@com.google.android.material.R$styleable.Chip_closeIconStartPadding` @type ^`int`;
  #L47f0da.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47f0e0.  v8:= temp;
  #L47f0e2.  call `setCloseIconStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L47f0e8.  v8:= `@@com.google.android.material.R$styleable.Chip_closeIconEndPadding` @type ^`int`;
  #L47f0ec.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47f0f2.  v8:= temp;
  #L47f0f4.  call `setCloseIconEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L47f0fa.  v8:= `@@com.google.android.material.R$styleable.Chip_chipEndPadding` @type ^`int`;
  #L47f0fe.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L47f104.  v8:= temp;
  #L47f106.  call `setChipEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L47f10c.  v8:= `@@com.google.android.material.R$styleable.Chip_android_maxWidth` @type ^`int`;
  #L47f110.  v10:= 2147483647I;
  #L47f116.  call temp:= `getDimensionPixelSize`(v9, v8, v10) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L47f11c.  v8:= temp;
  #L47f11e.  call `setMaxWidth`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @kind virtual;
  #L47f124.  call `recycle`(v9) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L47f12a.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v6 @kind this, `int`[] v7 @kind object, `int`[] v8 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47d878.  call temp:= `onStateChange`(v6, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind super;
  #L47d87e.  v0:= temp;
  #L47d880.  v1:= v6.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d884.  v2:= 0I;
  #L47d886.  if v1 == 0 then goto L47d898;
  #L47d88a.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L47d88e.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L47d894.  v1:= temp;
  #L47d896.  goto L47d89a;
  #L47d898.  v1:= 0I;
  #L47d89a.  call temp:= `compositeElevationOverlayIfNeeded`(v6, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L47d8a0.  v1:= temp;
  #L47d8a2.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L47d8a6.  v4:= 1I;
  #L47d8a8.  if v3 == v1 then goto L47d8b2;
  #L47d8ac.  v6.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int` := v1;
  #L47d8b0.  v0:= 1I;
  #L47d8b2.  v3:= v6.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d8b6.  if v3 == 0 then goto L47d8c8;
  #L47d8ba.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L47d8be.  call temp:= `getColorForState`(v3, v7, v5) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L47d8c4.  v3:= temp;
  #L47d8c6.  goto L47d8ca;
  #L47d8c8.  v3:= 0I;
  #L47d8ca.  call temp:= `compositeElevationOverlayIfNeeded`(v6, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind virtual;
  #L47d8d0.  v3:= temp;
  #L47d8d2.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L47d8d6.  if v5 == v3 then goto L47d8e0;
  #L47d8da.  v6.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int` := v3;
  #L47d8de.  v0:= 1I;
  #L47d8e0.  call temp:= `layer`(v1, v3) @signature `Lcom/google/android/material/color/MaterialColors;.layer:(II)I` @kind static;
  #L47d8e6.  v1:= temp;
  #L47d8e8.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @type ^`int`;
  #L47d8ec.  if v3 == v1 then goto L47d8f4;
  #L47d8f0.  v3:= 1I;
  #L47d8f2.  goto L47d8f6;
  #L47d8f4.  v3:= 0I;
  #L47d8f6.  call temp:= `getFillColor`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L47d8fc.  v5:= temp @kind object;
  #L47d8fe.  if v5 != 0 then goto L47d906;
  #L47d902.  v5:= 1I;
  #L47d904.  goto L47d908;
  #L47d906.  v5:= 0I;
  #L47d908.  v3:= v3 ^| v5 @kind int;
  #L47d90a.  if v3 == 0 then goto L47d922;
  #L47d90e.  v6.`com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @type ^`int` := v1;
  #L47d912.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L47d918.  v0:= temp @kind object;
  #L47d91a.  call `setFillColor`(v6, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47d920.  v0:= 1I;
  #L47d922.  v1:= v6.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d926.  if v1 == 0 then goto L47d938;
  #L47d92a.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L47d92e.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L47d934.  v1:= temp;
  #L47d936.  goto L47d93a;
  #L47d938.  v1:= 0I;
  #L47d93a.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L47d93e.  if v3 == v1 then goto L47d948;
  #L47d942.  v6.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int` := v1;
  #L47d946.  v0:= 1I;
  #L47d948.  v1:= v6.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d94c.  if v1 == 0 then goto L47d96e;
  #L47d950.  call temp:= `shouldDrawRippleCompat`(v7) @signature `Lcom/google/android/material/ripple/RippleUtils;.shouldDrawRippleCompat:([I)Z` @kind static;
  #L47d956.  v1:= temp;
  #L47d958.  if v1 == 0 then goto L47d96e;
  #L47d95c.  v1:= v6.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d960.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L47d964.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L47d96a.  v1:= temp;
  #L47d96c.  goto L47d970;
  #L47d96e.  v1:= 0I;
  #L47d970.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L47d974.  if v3 == v1 then goto L47d986;
  #L47d978.  v6.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int` := v1;
  #L47d97c.  v1:= v6.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L47d980.  if v1 == 0 then goto L47d986;
  #L47d984.  v0:= 1I;
  #L47d986.  v1:= v6.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47d98a.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L47d990.  v1:= temp @kind object;
  #L47d992.  if v1 == 0 then goto L47d9d0;
  #L47d996.  v1:= v6.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47d99a.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L47d9a0.  v1:= temp @kind object;
  #L47d9a2.  call temp:= `getTextColor`(v1) @signature `Lcom/google/android/material/resources/TextAppearance;.getTextColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L47d9a8.  v1:= temp @kind object;
  #L47d9aa.  if v1 == 0 then goto L47d9d0;
  #L47d9ae.  v1:= v6.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47d9b2.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L47d9b8.  v1:= temp @kind object;
  #L47d9ba.  call temp:= `getTextColor`(v1) @signature `Lcom/google/android/material/resources/TextAppearance;.getTextColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L47d9c0.  v1:= temp @kind object;
  #L47d9c2.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L47d9c6.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L47d9cc.  v1:= temp;
  #L47d9ce.  goto L47d9d2;
  #L47d9d0.  v1:= 0I;
  #L47d9d2.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L47d9d6.  if v3 == v1 then goto L47d9e0;
  #L47d9da.  v6.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int` := v1;
  #L47d9de.  v0:= 1I;
  #L47d9e0.  call temp:= `getState`(v6) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47d9e6.  v1:= temp @kind object;
  #L47d9e8.  v3:= 16842912I;
  #L47d9ee.  call temp:= `hasState`(v1, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @kind static;
  #L47d9f4.  v1:= temp;
  #L47d9f6.  if v1 == 0 then goto L47da06;
  #L47d9fa.  v1:= v6.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L47d9fe.  if v1 == 0 then goto L47da06;
  #L47da02.  v1:= 1I;
  #L47da04.  goto L47da08;
  #L47da06.  v1:= 0I;
  #L47da08.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L47da0c.  if v3 == v1 then goto L47da3c;
  #L47da10.  v3:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47da14.  if v3 == 0 then goto L47da3c;
  #L47da18.  call temp:= `calculateChipIconWidth`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47da1e.  v0:= temp;
  #L47da20.  v6.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v1 @kind boolean;
  #L47da24.  call temp:= `calculateChipIconWidth`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47da2a.  v1:= temp;
  #L47da2c.  v0:= fcmpl(v0, v1);
  #L47da30.  if v0 == 0 then goto L47da3a;
  #L47da34.  v0:= 1I;
  #L47da36.  v1:= 1I;
  #L47da38.  goto L47da3e;
  #L47da3a.  v0:= 1I;
  #L47da3c.  v1:= 0I;
  #L47da3e.  v3:= v6.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47da42.  if v3 == 0 then goto L47da54;
  #L47da46.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L47da4a.  call temp:= `getColorForState`(v3, v7, v5) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L47da50.  v3:= temp;
  #L47da52.  goto L47da56;
  #L47da54.  v3:= 0I;
  #L47da56.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L47da5a.  if v5 == v3 then goto L47da78;
  #L47da5e.  v6.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int` := v3;
  #L47da62.  v0:= v6.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47da66.  v3:= v6.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L47da6a.  call temp:= `updateTintFilter`(v6, v0, v3) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L47da70.  v0:= temp @kind object;
  #L47da72.  v6.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v0 @kind object;
  #L47da76.  goto L47da7a;
  #L47da78.  v4:= v0;
  #L47da7a.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47da7e.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L47da84.  v0:= temp;
  #L47da86.  if v0 == 0 then goto L47da98;
  #L47da8a.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47da8e.  call temp:= `setState`(v0, v7) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L47da94.  v0:= temp;
  #L47da96.  v4:= v4 ^| v0 @kind int;
  #L47da98.  v0:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47da9c.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L47daa2.  v0:= temp;
  #L47daa4.  if v0 == 0 then goto L47dab6;
  #L47daa8.  v0:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47daac.  call temp:= `setState`(v0, v7) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L47dab2.  v0:= temp;
  #L47dab4.  v4:= v4 ^| v0 @kind int;
  #L47dab6.  v0:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47daba.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L47dac0.  v0:= temp;
  #L47dac2.  if v0 == 0 then goto L47daf0;
  #L47dac6.  v0:= length @variable v7;
  #L47dac8.  v3:= length @variable v8;
  #L47daca.  v0:= v0 + v3 @kind int;
  #L47dacc.  v0:= new `int`[v0];
  #L47dad0.  v3:= length @variable v7;
  #L47dad2.  call `arraycopy`(v7, v2, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L47dad8.  v7:= length @variable v7;
  #L47dada.  v3:= length @variable v8;
  #L47dadc.  call `arraycopy`(v8, v2, v0, v7, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L47dae2.  v7:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47dae6.  call temp:= `setState`(v7, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L47daec.  v7:= temp;
  #L47daee.  v4:= v4 ^| v7 @kind int;
  #L47daf0.  v7:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L47daf4.  if v7 == 0 then goto L47db16;
  #L47daf8.  v7:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47dafc.  call temp:= `isStateful`(v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L47db02.  v7:= temp;
  #L47db04.  if v7 == 0 then goto L47db16;
  #L47db08.  v7:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47db0c.  call temp:= `setState`(v7, v8) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L47db12.  v7:= temp;
  #L47db14.  v4:= v4 ^| v7 @kind int;
  #L47db16.  if v4 == 0 then goto L47db20;
  #L47db1a.  call `invalidateSelf`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47db20.  if v1 == 0 then goto L47db2a;
  #L47db24.  call `onSizeChange`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47db2a.  return v4;
}
procedure `void` `setChipSurfaceColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipSurfaceColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L47f8dc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47f8e0.  if v0 == v2 then goto L47f8f6;
  #L47f8e4.  v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L47f8e8.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47f8ee.  v2:= temp @kind object;
  #L47f8f0.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L47f8f6.  return @kind void;
}
procedure `boolean` `showsCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L47dc10.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L47dc14.  if v0 == 0 then goto L47dc2c;
  #L47dc18.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47dc1c.  if v0 == 0 then goto L47dc2c;
  #L47dc20.  v0:= v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L47dc24.  if v0 == 0 then goto L47dc2c;
  #L47dc28.  v0:= 1I;
  #L47dc2a.  goto L47dc2e;
  #L47dc2c.  v0:= 0I;
  #L47dc2e.  return v0;
}
procedure `boolean` `showsChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L47dc40.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L47dc44.  if v0 == 0 then goto L47dc54;
  #L47dc48.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47dc4c.  if v0 == 0 then goto L47dc54;
  #L47dc50.  v0:= 1I;
  #L47dc52.  goto L47dc56;
  #L47dc54.  v0:= 0I;
  #L47dc56.  return v0;
}
procedure `boolean` `showsCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L47dc68.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L47dc6c.  if v0 == 0 then goto L47dc7c;
  #L47dc70.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47dc74.  if v0 == 0 then goto L47dc7c;
  #L47dc78.  v0:= 1I;
  #L47dc7a.  goto L47dc7e;
  #L47dc7c.  v0:= 0I;
  #L47dc7e.  return v0;
}
procedure `void` `unapplyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48011c.  if v2 == 0 then goto L480128;
  #L480120.  v0:= 0I;
  #L480122.  call `setCallback`(v2, v0) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L480128.  return @kind void;
}
procedure `void` `updateCompatRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L480160.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L480164.  if v0 == 0 then goto L480176;
  #L480168.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L48016c.  call temp:= `sanitizeRippleDrawableColor`(v0) @signature `Lcom/google/android/material/ripple/RippleUtils;.sanitizeRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L480172.  v0:= temp @kind object;
  #L480174.  goto L480178;
  #L480176.  v0:= 0I;
  #L480178.  v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` := v0 @kind object;
  #L48017c.  return @kind void;
}
procedure `void` `updateFrameworkCloseIconRipple`(`com.google.android.material.chip.ChipDrawable` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateFrameworkCloseIconRipple:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L480190.  v0:= new `android.graphics.drawable.RippleDrawable`;
  #L480194.  call temp:= `getRippleColor`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L48019a.  v1:= temp @kind object;
  #L48019c.  call temp:= `sanitizeRippleDrawableColor`(v1) @signature `Lcom/google/android/material/ripple/RippleUtils;.sanitizeRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L4801a2.  v1:= temp @kind object;
  #L4801a4.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L4801a8.  v3:= `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` @kind object;
  #L4801ac.  call `<init>`(v0, v1, v2, v3) @signature `Landroid/graphics/drawable/RippleDrawable;.<init>:(Landroid/content/res/ColorStateList;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L4801b2.  v4.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L4801b6.  return @kind void;
}
procedure `float` `calculateChipIconWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L47dd40.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47dd46.  v0:= temp;
  #L47dd48.  if v0 != 0 then goto L47dd5e;
  #L47dd4c.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L47dd52.  v0:= temp;
  #L47dd54.  if v0 == 0 then goto L47dd5a;
  #L47dd58.  goto L47dd5e;
  #L47dd5a.  v0:= 0I;
  #L47dd5c.  return v0;
  #L47dd5e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L47dd62.  call temp:= `getCurrentChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCurrentChipIconWidth:()F` @kind direct;
  #L47dd68.  v1:= temp;
  #L47dd6a.  v0:= v0 + v1 @kind float;
  #L47dd6c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L47dd70.  v0:= v0 + v1 @kind float;
  #L47dd72.  return v0;
}
procedure `float` `calculateCloseIconWidth`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L47dd84.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47dd8a.  v0:= temp;
  #L47dd8c.  if v0 == 0 then goto L47dda2;
  #L47dd90.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L47dd94.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L47dd98.  v0:= v0 + v1 @kind float;
  #L47dd9a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L47dd9e.  v0:= v0 + v1 @kind float;
  #L47dda0.  return v0;
  #L47dda2.  v0:= 0I;
  #L47dda4.  return v0;
}
procedure `android.graphics.Paint$Align` `calculateTextOriginAndAlignment`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.PointF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextOriginAndAlignment:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L47d3b4.  v0:= 0I;
  #L47d3b6.  call `set`(v4, v0, v0) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L47d3bc.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L47d3c0.  v1:= v2.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L47d3c4.  if v1 == 0 then goto L47d422;
  #L47d3c8.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L47d3cc.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47d3d2.  v1:= temp;
  #L47d3d4.  v0:= v0 + v1 @kind float;
  #L47d3d6.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L47d3da.  v0:= v0 + v1 @kind float;
  #L47d3dc.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L47d3e2.  v1:= temp;
  #L47d3e4.  if v1 != 0 then goto L47d3fa;
  #L47d3e8.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L47d3ec.  v1:= (`float`) v1 @kind i2f;
  #L47d3ee.  v1:= v1 + v0 @kind float;
  #L47d3f0.  v4.`android.graphics.PointF.x` @type ^`float` := v1;
  #L47d3f4.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L47d3f8.  goto L47d40a;
  #L47d3fa.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L47d3fe.  v1:= (`float`) v1 @kind i2f;
  #L47d400.  v1:= v1 - v0 @kind float;
  #L47d402.  v4.`android.graphics.PointF.x` @type ^`float` := v1;
  #L47d406.  v0:= `@@android.graphics.Paint$Align.RIGHT` @type ^`android.graphics.Paint$Align` @kind object;
  #L47d40a.  call temp:= `centerY`(v3) @signature `Landroid/graphics/Rect;.centerY:()I` @kind virtual;
  #L47d410.  v3:= temp;
  #L47d412.  v3:= (`float`) v3 @kind i2f;
  #L47d414.  call temp:= `calculateTextCenterFromBaseline`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @kind direct;
  #L47d41a.  v1:= temp;
  #L47d41c.  v3:= v3 - v1 @kind float;
  #L47d41e.  v4.`android.graphics.PointF.y` @type ^`float` := v3;
  #L47d422.  return v0 @kind object;
}
procedure `void` `draw`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L47e58c.  call temp:= `getBounds`(v9) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L47e592.  v0:= temp @kind object;
  #L47e594.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L47e59a.  v1:= temp;
  #L47e59c.  if v1 != 0 then goto L47e638;
  #L47e5a0.  call temp:= `getAlpha`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L47e5a6.  v1:= temp;
  #L47e5a8.  if v1 != 0 then goto L47e5ae;
  #L47e5ac.  goto L47e638;
  #L47e5ae.  v1:= 0I;
  #L47e5b0.  v7:= v9.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L47e5b4.  v8:= 255I;
  #L47e5b8.  if v7 >= v8 then goto L47e5de;
  #L47e5bc.  v1:= v0.`android.graphics.Rect.left` @type ^`int`;
  #L47e5c0.  v3:= (`float`) v1 @kind i2f;
  #L47e5c2.  v1:= v0.`android.graphics.Rect.top` @type ^`int`;
  #L47e5c6.  v4:= (`float`) v1 @kind i2f;
  #L47e5c8.  v1:= v0.`android.graphics.Rect.right` @type ^`int`;
  #L47e5cc.  v5:= (`float`) v1 @kind i2f;
  #L47e5ce.  v1:= v0.`android.graphics.Rect.bottom` @type ^`int`;
  #L47e5d2.  v6:= (`float`) v1 @kind i2f;
  #L47e5d4.  v2:= v10 @kind object;
  #L47e5d6.  call temp:= `saveLayerAlpha`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/android/material/canvas/CanvasCompat;.saveLayerAlpha:(Landroid/graphics/Canvas;FFFFI)I` @kind static;
  #L47e5dc.  v1:= temp;
  #L47e5de.  call `drawChipSurface`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipSurface:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L47e5e4.  call `drawChipBackground`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L47e5ea.  v2:= v9.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47e5ee.  if v2 == 0 then goto L47e5f8;
  #L47e5f2.  call `draw`(v9, v10) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @kind super;
  #L47e5f8.  call `drawChipStroke`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L47e5fe.  call `drawCompatRipple`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L47e604.  call `drawChipIcon`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L47e60a.  call `drawCheckedIcon`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L47e610.  v2:= v9.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L47e614.  if v2 == 0 then goto L47e61e;
  #L47e618.  call `drawText`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L47e61e.  call `drawCloseIcon`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L47e624.  call `drawDebug`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L47e62a.  v0:= v9.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L47e62e.  if v0 >= v8 then goto L47e638;
  #L47e632.  call `restoreToCount`(v10, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L47e638.  return @kind void;
}
procedure `int` `getAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47dff0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L47dff4.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d434.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d438.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getCheckedIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d2ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d2f0.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipBackgroundColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d304.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d308.  return v0 @kind object;
}
procedure `float` `getChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ddf4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47ddf8.  if v0 == 0 then goto L47de06;
  #L47ddfc.  call temp:= `getTopLeftCornerResolvedSize`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @kind virtual;
  #L47de02.  v0:= temp;
  #L47de04.  goto L47de0a;
  #L47de06.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L47de0a.  return v0;
}
procedure `float` `getChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47de1c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L47de20.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d44c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d450.  if v0 == 0 then goto L47d45e;
  #L47d454.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L47d45a.  v0:= temp @kind object;
  #L47d45c.  goto L47d460;
  #L47d45e.  v0:= 0I;
  #L47d460.  return v0 @kind object;
}
procedure `float` `getChipIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47de34.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L47de38.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d31c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d320.  return v0 @kind object;
}
procedure `float` `getChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipMinHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47de4c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L47de50.  return v0;
}
procedure `float` `getChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47de64.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L47de68.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d334.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d338.  return v0 @kind object;
}
procedure `float` `getChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47de7c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L47de80.  return v0;
}
procedure `void` `getChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ec54.  call temp:= `getBounds`(v1) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L47ec5a.  v0:= temp @kind object;
  #L47ec5c.  call `calculateChipTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L47ec62.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `getCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d474.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d478.  if v0 == 0 then goto L47d486;
  #L47d47c.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L47d482.  v0:= temp @kind object;
  #L47d484.  goto L47d488;
  #L47d486.  v0:= 0I;
  #L47d488.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconContentDescription:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47e0d4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L47e0d8.  return v0 @kind object;
}
procedure `float` `getCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47de94.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L47de98.  return v0;
}
procedure `float` `getCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47deac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L47deb0.  return v0;
}
procedure `float` `getCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47dec4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L47dec8.  return v0;
}
procedure `int`[] `getCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47e0bc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L47e0c0.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d34c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d350.  return v0 @kind object;
}
procedure `void` `getCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ec74.  call temp:= `getBounds`(v1) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L47ec7a.  v0:= temp @kind object;
  #L47ec7c.  call `calculateCloseIconTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L47ec82.  return @kind void;
}
procedure `android.graphics.ColorFilter` `getColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d37c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L47d380.  return v0 @kind object;
}
procedure `android.text.TextUtils$TruncateAt` `getEllipsize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getEllipsize:()Landroid/text/TextUtils$TruncateAt;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d49c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L47d4a0.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getHideMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47dc90.  v0:= v1.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L47dc94.  return v0 @kind object;
}
procedure `float` `getIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47df90.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L47df94.  return v0;
}
procedure `float` `getIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47dfa8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L47dfac.  return v0;
}
procedure `int` `getIntrinsicHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47e008.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L47e00c.  v0:= (`int`) v0 @kind f2i;
  #L47e00e.  return v0;
}
procedure `int` `getIntrinsicWidth`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47e020.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L47e024.  call temp:= `calculateChipIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47e02a.  v1:= temp;
  #L47e02c.  v0:= v0 + v1 @kind float;
  #L47e02e.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L47e032.  v0:= v0 + v1 @kind float;
  #L47e034.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47e038.  call temp:= `getText`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L47e03e.  v2:= temp @kind object;
  #L47e040.  call temp:= `toString`(v2) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L47e046.  v2:= temp @kind object;
  #L47e048.  call temp:= `getTextWidth`(v1, v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L47e04e.  v1:= temp;
  #L47e050.  v0:= v0 + v1 @kind float;
  #L47e052.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L47e056.  v0:= v0 + v1 @kind float;
  #L47e058.  call temp:= `calculateCloseIconWidth`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L47e05e.  v1:= temp;
  #L47e060.  v0:= v0 + v1 @kind float;
  #L47e062.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L47e066.  v0:= v0 + v1 @kind float;
  #L47e068.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L47e06e.  v0:= temp;
  #L47e070.  v1:= v3.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L47e074.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L47e07a.  v0:= temp;
  #L47e07c.  return v0;
}
procedure `int` `getMaxWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getMaxWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47e090.  v0:= v1.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L47e094.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47e0a8.  v0:= -3I;
  #L47e0aa.  return v0;
}
procedure `void` `getOutline`(`com.google.android.material.chip.ChipDrawable` v8 @kind this, `android.graphics.Outline` v9 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOutline:(Landroid/graphics/Outline;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L47ec94.  v0:= v8.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47ec98.  if v0 == 0 then goto L47eca4;
  #L47ec9c.  call `getOutline`(v8, v9) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOutline:(Landroid/graphics/Outline;)V` @kind super;
  #L47eca2.  return @kind void;
  #L47eca4.  call temp:= `getBounds`(v8) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L47ecaa.  v0:= temp @kind object;
  #L47ecac.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L47ecb2.  v1:= temp;
  #L47ecb4.  if v1 != 0 then goto L47ecc4;
  #L47ecb8.  v1:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L47ecbc.  call `setRoundRect`(v9, v0, v1) @signature `Landroid/graphics/Outline;.setRoundRect:(Landroid/graphics/Rect;F)V` @kind virtual;
  #L47ecc2.  goto L47ece4;
  #L47ecc4.  v3:= 0I;
  #L47ecc6.  v4:= 0I;
  #L47ecc8.  call temp:= `getIntrinsicWidth`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L47ecce.  v5:= temp;
  #L47ecd0.  call temp:= `getIntrinsicHeight`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L47ecd6.  v6:= temp;
  #L47ecd8.  v7:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L47ecdc.  v2:= v9 @kind object;
  #L47ecde.  call `setRoundRect`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Outline;.setRoundRect:(IIIIF)V` @kind virtual;
  #L47ece4.  call temp:= `getAlpha`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L47ecea.  v0:= temp;
  #L47ecec.  v0:= (`float`) v0 @kind i2f;
  #L47ecee.  v1:= 255.0F;
  #L47ecf2.  v0:= v0 / v1 @kind float;
  #L47ecf4.  call `setAlpha`(v9, v0) @signature `Landroid/graphics/Outline;.setAlpha:(F)V` @kind virtual;
  #L47ecfa.  return @kind void;
}
procedure `android.content.res.ColorStateList` `getRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d364.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d368.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getShowMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47dca8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L47dcac.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47e0ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L47e0f0.  return v0 @kind object;
}
procedure `com.google.android.material.resources.TextAppearance` `getTextAppearance`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47dd20.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47dd24.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L47dd2a.  v0:= temp @kind object;
  #L47dd2c.  return v0 @kind object;
}
procedure `float` `getTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47dfc0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L47dfc4.  return v0;
}
procedure `float` `getTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47dfd8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L47dfdc.  return v0;
}
procedure `boolean` `getUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getUseCompatRipple:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d4e4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L47d4e8.  return v0;
}
procedure `void` `invalidateDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L47ed0c.  call temp:= `getCallback`(v0) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L47ed12.  v1:= temp @kind object;
  #L47ed14.  if v1 == 0 then goto L47ed1e;
  #L47ed18.  call `invalidateDrawable`(v1, v0) @signature `Landroid/graphics/drawable/Drawable$Callback;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L47ed1e.  return @kind void;
}
procedure `boolean` `isCheckable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d530.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L47d534.  return v0;
}
procedure `boolean` `isCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d548.  call temp:= `isCheckedIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @kind virtual;
  #L47d54e.  v0:= temp;
  #L47d550.  return v0;
}
procedure `boolean` `isCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d564.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L47d568.  return v0;
}
procedure `boolean` `isChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d57c.  call temp:= `isChipIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @kind virtual;
  #L47d582.  v0:= temp;
  #L47d584.  return v0;
}
procedure `boolean` `isChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d598.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L47d59c.  return v0;
}
procedure `boolean` `isCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d5b0.  call temp:= `isCloseIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @kind virtual;
  #L47d5b6.  v0:= temp;
  #L47d5b8.  return v0;
}
procedure `boolean` `isCloseIconStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d5cc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d5d0.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L47d5d6.  v0:= temp;
  #L47d5d8.  return v0;
}
procedure `boolean` `isCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d5ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L47d5f0.  return v0;
}
procedure `boolean` `isShapeThemingEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isShapeThemingEnabled:()Z` @AccessFlag  {
    temp;
    v0;

  #L47d604.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47d608.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d61c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d620.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L47d626.  v0:= temp;
  #L47d628.  if v0 != 0 then goto L47d6be;
  #L47d62c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d630.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L47d636.  v0:= temp;
  #L47d638.  if v0 != 0 then goto L47d6be;
  #L47d63c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d640.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L47d646.  v0:= temp;
  #L47d648.  if v0 != 0 then goto L47d6be;
  #L47d64c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L47d650.  if v0 == 0 then goto L47d664;
  #L47d654.  v0:= v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d658.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L47d65e.  v0:= temp;
  #L47d660.  if v0 != 0 then goto L47d6be;
  #L47d664.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47d668.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L47d66e.  v0:= temp @kind object;
  #L47d670.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @kind static;
  #L47d676.  v0:= temp;
  #L47d678.  if v0 != 0 then goto L47d6be;
  #L47d67c.  call temp:= `canShowCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @kind direct;
  #L47d682.  v0:= temp;
  #L47d684.  if v0 != 0 then goto L47d6be;
  #L47d688.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d68c.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L47d692.  v0:= temp;
  #L47d694.  if v0 != 0 then goto L47d6be;
  #L47d698.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d69c.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L47d6a2.  v0:= temp;
  #L47d6a4.  if v0 != 0 then goto L47d6be;
  #L47d6a8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47d6ac.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L47d6b2.  v0:= temp;
  #L47d6b4.  if v0 == 0 then goto L47d6ba;
  #L47d6b8.  goto L47d6be;
  #L47d6ba.  v0:= 0I;
  #L47d6bc.  goto L47d6c0;
  #L47d6be.  v0:= 1I;
  #L47d6c0.  return v0;
}
procedure `boolean` `onLayoutDirectionChanged`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLayoutDirectionChanged:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47d760.  call temp:= `onLayoutDirectionChanged`(v2, v3) @signature `Landroid/graphics/drawable/Drawable;.onLayoutDirectionChanged:(I)Z` @kind super;
  #L47d766.  v0:= temp;
  #L47d768.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47d76e.  v1:= temp;
  #L47d770.  if v1 == 0 then goto L47d782;
  #L47d774.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d778.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L47d77e.  v1:= temp;
  #L47d780.  v0:= v0 ^| v1 @kind int;
  #L47d782.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L47d788.  v1:= temp;
  #L47d78a.  if v1 == 0 then goto L47d79c;
  #L47d78e.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d792.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L47d798.  v1:= temp;
  #L47d79a.  v0:= v0 ^| v1 @kind int;
  #L47d79c.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47d7a2.  v1:= temp;
  #L47d7a4.  if v1 == 0 then goto L47d7b6;
  #L47d7a8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d7ac.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L47d7b2.  v3:= temp;
  #L47d7b4.  v0:= v0 ^| v3 @kind int;
  #L47d7b6.  if v0 == 0 then goto L47d7c0;
  #L47d7ba.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47d7c0.  v3:= 1I;
  #L47d7c2.  return v3;
}
procedure `boolean` `onLevelChange`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLevelChange:(I)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L47d7d4.  call temp:= `onLevelChange`(v2, v3) @signature `Landroid/graphics/drawable/Drawable;.onLevelChange:(I)Z` @kind super;
  #L47d7da.  v0:= temp;
  #L47d7dc.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47d7e2.  v1:= temp;
  #L47d7e4.  if v1 == 0 then goto L47d7f6;
  #L47d7e8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d7ec.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L47d7f2.  v1:= temp;
  #L47d7f4.  v0:= v0 ^| v1 @kind int;
  #L47d7f6.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L47d7fc.  v1:= temp;
  #L47d7fe.  if v1 == 0 then goto L47d810;
  #L47d802.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d806.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L47d80c.  v1:= temp;
  #L47d80e.  v0:= v0 ^| v1 @kind int;
  #L47d810.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47d816.  v1:= temp;
  #L47d818.  if v1 == 0 then goto L47d82a;
  #L47d81c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47d820.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L47d826.  v3:= temp;
  #L47d828.  v0:= v0 ^| v3 @kind int;
  #L47d82a.  if v0 == 0 then goto L47d834;
  #L47d82e.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47d834.  return v0;
}
procedure `void` `onSizeChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L47f13c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` @kind object;
  #L47f140.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L47f146.  v0:= temp @kind object;
  #L47f148.  v0:= (`com.google.android.material.chip.ChipDrawable$Delegate`) v0 @kind object;
  #L47f14c.  if v0 == 0 then goto L47f156;
  #L47f150.  call `onChipDrawableSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable$Delegate;.onChipDrawableSizeChange:()V` @kind interface;
  #L47f156.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47d848.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47d84c.  if v0 == 0 then goto L47d856;
  #L47d850.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind super;
  #L47d856.  call temp:= `getCloseIconState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L47d85c.  v0:= temp @kind object;
  #L47d85e.  call temp:= `onStateChange`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L47d864.  v2:= temp;
  #L47d866.  return v2;
}
procedure `void` `onTextSizeChange`(`com.google.android.material.chip.ChipDrawable` v0 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onTextSizeChange:()V` @AccessFlag PUBLIC {
    temp;

  #L47f168.  call `onSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f16e.  call `invalidateSelf`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f174.  return @kind void;
}
procedure `void` `scheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `java.lang.Runnable` v2 @kind object, `long` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @AccessFlag PUBLIC {
    temp;

  #L47f188.  call temp:= `getCallback`(v0) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L47f18e.  v1:= temp @kind object;
  #L47f190.  if v1 == 0 then goto L47f19a;
  #L47f194.  call `scheduleDrawable`(v1, v0, v2, v3) @signature `Landroid/graphics/drawable/Drawable$Callback;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @kind interface;
  #L47f19a.  return @kind void;
}
procedure `void` `setAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f1ac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L47f1b0.  if v0 == v2 then goto L47f1be;
  #L47f1b4.  v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v2;
  #L47f1b8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f1be.  return @kind void;
}
procedure `void` `setCheckable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f1d0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L47f1d4.  if v0 == v2 then goto L47f212;
  #L47f1d8.  v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` := v2 @kind boolean;
  #L47f1dc.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47f1e2.  v0:= temp;
  #L47f1e4.  if v2 != 0 then goto L47f1f6;
  #L47f1e8.  v2:= v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L47f1ec.  if v2 == 0 then goto L47f1f6;
  #L47f1f0.  v2:= 0I;
  #L47f1f2.  v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v2 @kind boolean;
  #L47f1f6.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47f1fc.  v2:= temp;
  #L47f1fe.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f204.  v2:= fcmpl(v0, v2);
  #L47f208.  if v2 == 0 then goto L47f212;
  #L47f20c.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f212.  return @kind void;
}
procedure `void` `setCheckableResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckableResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f224.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f228.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47f22e.  v0:= temp @kind object;
  #L47f230.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L47f236.  v2:= temp;
  #L47f238.  call `setCheckable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L47f23e.  return @kind void;
}
procedure `void` `setCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f250.  v0:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f254.  if v0 == v3 then goto L47f294;
  #L47f258.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47f25e.  v0:= temp;
  #L47f260.  v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L47f264.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47f26a.  v3:= temp;
  #L47f26c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f270.  call `unapplyChildDrawable`(v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47f276.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f27a.  call `applyChildDrawable`(v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47f280.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f286.  v3:= fcmpl(v0, v3);
  #L47f28a.  if v3 == 0 then goto L47f294;
  #L47f28e.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f294.  return @kind void;
}
procedure `void` `setCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L47f2a8.  call `setCheckedIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L47f2ae.  return @kind void;
}
procedure `void` `setCheckedIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f2c0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f2c4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47f2ca.  v0:= temp @kind object;
  #L47f2cc.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L47f2d2.  v2:= temp;
  #L47f2d4.  call `setCheckedIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L47f2da.  return @kind void;
}
procedure `void` `setCheckedIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f2ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f2f0.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L47f2f6.  v2:= temp @kind object;
  #L47f2f8.  call `setCheckedIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L47f2fe.  return @kind void;
}
procedure `void` `setCheckedIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f310.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47f314.  if v0 == v2 then goto L47f340;
  #L47f318.  v1.`com.google.android.material.chip.ChipDrawable.checkedIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L47f31c.  call temp:= `canShowCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @kind direct;
  #L47f322.  v0:= temp;
  #L47f324.  if v0 == 0 then goto L47f332;
  #L47f328.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f32c.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L47f332.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47f338.  v2:= temp @kind object;
  #L47f33a.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L47f340.  return @kind void;
}
procedure `void` `setCheckedIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f354.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f358.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47f35e.  v2:= temp @kind object;
  #L47f360.  call `setCheckedIconTint`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47f366.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f3dc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f3e0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47f3e6.  v0:= temp @kind object;
  #L47f3e8.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L47f3ee.  v2:= temp;
  #L47f3f0.  call `setCheckedIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L47f3f6.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f378.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L47f37c.  if v0 == v2 then goto L47f3c8;
  #L47f380.  call temp:= `showsCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L47f386.  v0:= temp;
  #L47f388.  v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L47f38c.  call temp:= `showsCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L47f392.  v2:= temp;
  #L47f394.  if v0 == v2 then goto L47f39c;
  #L47f398.  v0:= 1I;
  #L47f39a.  goto L47f39e;
  #L47f39c.  v0:= 0I;
  #L47f39e.  if v0 == 0 then goto L47f3c8;
  #L47f3a2.  if v2 == 0 then goto L47f3b2;
  #L47f3a6.  v2:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f3aa.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47f3b0.  goto L47f3bc;
  #L47f3b2.  v2:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f3b6.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47f3bc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f3c2.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f3c8.  return @kind void;
}
procedure `void` `setChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f408.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47f40c.  if v0 == v2 then goto L47f422;
  #L47f410.  v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L47f414.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47f41a.  v2:= temp @kind object;
  #L47f41c.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L47f422.  return @kind void;
}
procedure `void` `setChipBackgroundColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f434.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f438.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47f43e.  v2:= temp @kind object;
  #L47f440.  call `setChipBackgroundColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47f446.  return @kind void;
}
procedure `void` `setChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f458.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L47f45c.  v0:= fcmpl(v0, v2);
  #L47f460.  if v0 == 0 then goto L47f47e;
  #L47f464.  v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float` := v2;
  #L47f468.  call temp:= `getShapeAppearanceModel`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L47f46e.  v0:= temp @kind object;
  #L47f470.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(F)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L47f476.  v2:= temp @kind object;
  #L47f478.  call `setShapeAppearanceModel`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L47f47e.  return @kind void;
}
procedure `void` `setChipCornerRadiusResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f490.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f494.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47f49a.  v0:= temp @kind object;
  #L47f49c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47f4a2.  v2:= temp;
  #L47f4a4.  call `setChipCornerRadius`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L47f4aa.  return @kind void;
}
procedure `void` `setChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f4bc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L47f4c0.  v0:= fcmpl(v0, v2);
  #L47f4c4.  if v0 == 0 then goto L47f4d8;
  #L47f4c8.  v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float` := v2;
  #L47f4cc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f4d2.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f4d8.  return @kind void;
}
procedure `void` `setChipEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f4ec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f4f0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47f4f6.  v0:= temp @kind object;
  #L47f4f8.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47f4fe.  v2:= temp;
  #L47f500.  call `setChipEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L47f506.  return @kind void;
}
procedure `void` `setChipIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f518.  call temp:= `getChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L47f51e.  v0:= temp @kind object;
  #L47f520.  if v0 == v3 then goto L47f580;
  #L47f524.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47f52a.  v1:= temp;
  #L47f52c.  if v3 == 0 then goto L47f542;
  #L47f530.  call temp:= `wrap`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L47f536.  v3:= temp @kind object;
  #L47f538.  call temp:= `mutate`(v3) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L47f53e.  v3:= temp @kind object;
  #L47f540.  goto L47f544;
  #L47f542.  v3:= 0I;
  #L47f544.  v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L47f548.  call temp:= `calculateChipIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47f54e.  v3:= temp;
  #L47f550.  call `unapplyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47f556.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47f55c.  v0:= temp;
  #L47f55e.  if v0 == 0 then goto L47f56c;
  #L47f562.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f566.  call `applyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47f56c.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f572.  v3:= fcmpl(v1, v3);
  #L47f576.  if v3 == 0 then goto L47f580;
  #L47f57a.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f580.  return @kind void;
}
procedure `void` `setChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L47f594.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L47f59a.  return @kind void;
}
procedure `void` `setChipIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L47f5ac.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @kind virtual;
  #L47f5b2.  return @kind void;
}
procedure `void` `setChipIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f5c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f5c8.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L47f5ce.  v2:= temp @kind object;
  #L47f5d0.  call `setChipIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L47f5d6.  return @kind void;
}
procedure `void` `setChipIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f5e8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L47f5ec.  v0:= fcmpl(v0, v2);
  #L47f5f0.  if v0 == 0 then goto L47f61c;
  #L47f5f4.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47f5fa.  v0:= temp;
  #L47f5fc.  v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float` := v2;
  #L47f600.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47f606.  v2:= temp;
  #L47f608.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f60e.  v2:= fcmpl(v0, v2);
  #L47f612.  if v2 == 0 then goto L47f61c;
  #L47f616.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f61c.  return @kind void;
}
procedure `void` `setChipIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f630.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f634.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47f63a.  v0:= temp @kind object;
  #L47f63c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47f642.  v2:= temp;
  #L47f644.  call `setChipIconSize`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L47f64a.  return @kind void;
}
procedure `void` `setChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f65c.  v0:= 1I;
  #L47f65e.  v1.`com.google.android.material.chip.ChipDrawable.hasChipIconTint` @type ^`boolean` := v0 @kind boolean;
  #L47f662.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47f666.  if v0 == v2 then goto L47f692;
  #L47f66a.  v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L47f66e.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47f674.  v0:= temp;
  #L47f676.  if v0 == 0 then goto L47f684;
  #L47f67a.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f67e.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L47f684.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47f68a.  v2:= temp @kind object;
  #L47f68c.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L47f692.  return @kind void;
}
procedure `void` `setChipIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f6a4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f6a8.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47f6ae.  v2:= temp @kind object;
  #L47f6b0.  call `setChipIconTint`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47f6b6.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f72c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f730.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47f736.  v0:= temp @kind object;
  #L47f738.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L47f73e.  v2:= temp;
  #L47f740.  call `setChipIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L47f746.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f6c8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L47f6cc.  if v0 == v2 then goto L47f718;
  #L47f6d0.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47f6d6.  v0:= temp;
  #L47f6d8.  v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L47f6dc.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47f6e2.  v2:= temp;
  #L47f6e4.  if v0 == v2 then goto L47f6ec;
  #L47f6e8.  v0:= 1I;
  #L47f6ea.  goto L47f6ee;
  #L47f6ec.  v0:= 0I;
  #L47f6ee.  if v0 == 0 then goto L47f718;
  #L47f6f2.  if v2 == 0 then goto L47f702;
  #L47f6f6.  v2:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f6fa.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47f700.  goto L47f70c;
  #L47f702.  v2:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f706.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47f70c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f712.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f718.  return @kind void;
}
procedure `void` `setChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f758.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L47f75c.  v0:= fcmpl(v0, v2);
  #L47f760.  if v0 == 0 then goto L47f774;
  #L47f764.  v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float` := v2;
  #L47f768.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f76e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f774.  return @kind void;
}
procedure `void` `setChipMinHeightResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeightResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f788.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f78c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47f792.  v0:= temp @kind object;
  #L47f794.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47f79a.  v2:= temp;
  #L47f79c.  call `setChipMinHeight`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L47f7a2.  return @kind void;
}
procedure `void` `setChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f7b4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L47f7b8.  v0:= fcmpl(v0, v2);
  #L47f7bc.  if v0 == 0 then goto L47f7d0;
  #L47f7c0.  v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float` := v2;
  #L47f7c4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f7ca.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f7d0.  return @kind void;
}
procedure `void` `setChipStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f7e4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f7e8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47f7ee.  v0:= temp @kind object;
  #L47f7f0.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47f7f6.  v2:= temp;
  #L47f7f8.  call `setChipStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L47f7fe.  return @kind void;
}
procedure `void` `setChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f810.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47f814.  if v0 == v2 then goto L47f838;
  #L47f818.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L47f81c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47f820.  if v0 == 0 then goto L47f82a;
  #L47f824.  call `setStrokeColor`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47f82a.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47f830.  v2:= temp @kind object;
  #L47f832.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L47f838.  return @kind void;
}
procedure `void` `setChipStrokeColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f84c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f850.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47f856.  v2:= temp @kind object;
  #L47f858.  call `setChipStrokeColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47f85e.  return @kind void;
}
procedure `void` `setChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f870.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L47f874.  v0:= fcmpl(v0, v2);
  #L47f878.  if v0 == 0 then goto L47f89e;
  #L47f87c.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float` := v2;
  #L47f880.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L47f884.  call `setStrokeWidth`(v0, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L47f88a.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L47f88e.  if v0 == 0 then goto L47f898;
  #L47f892.  call `setStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind super;
  #L47f898.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f89e.  return @kind void;
}
procedure `void` `setChipStrokeWidthResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidthResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f8b0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47f8b4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47f8ba.  v0:= temp @kind object;
  #L47f8bc.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47f8c2.  v2:= temp;
  #L47f8c4.  call `setChipStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L47f8ca.  return @kind void;
}
procedure `void` `setCloseIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47f908.  call temp:= `getCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L47f90e.  v0:= temp @kind object;
  #L47f910.  if v0 == v3 then goto L47f97e;
  #L47f914.  call temp:= `calculateCloseIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L47f91a.  v1:= temp;
  #L47f91c.  if v3 == 0 then goto L47f932;
  #L47f920.  call temp:= `wrap`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L47f926.  v3:= temp @kind object;
  #L47f928.  call temp:= `mutate`(v3) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L47f92e.  v3:= temp @kind object;
  #L47f930.  goto L47f934;
  #L47f932.  v3:= 0I;
  #L47f934.  v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L47f938.  v3:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L47f93c.  if v3 == 0 then goto L47f946;
  #L47f940.  call `updateFrameworkCloseIconRipple`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateFrameworkCloseIconRipple:()V` @kind direct;
  #L47f946.  call temp:= `calculateCloseIconWidth`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconWidth:()F` @kind virtual;
  #L47f94c.  v3:= temp;
  #L47f94e.  call `unapplyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47f954.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47f95a.  v0:= temp;
  #L47f95c.  if v0 == 0 then goto L47f96a;
  #L47f960.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47f964.  call `applyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47f96a.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f970.  v3:= fcmpl(v1, v3);
  #L47f974.  if v3 == 0 then goto L47f97e;
  #L47f978.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47f97e.  return @kind void;
}
procedure `void` `setCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconContentDescription:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f990.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L47f994.  if v0 == v2 then goto L47f9b2;
  #L47f998.  call temp:= `getInstance`() @signature `Landroidx/core/text/BidiFormatter;.getInstance:()Landroidx/core/text/BidiFormatter;` @kind static;
  #L47f99e.  v0:= temp @kind object;
  #L47f9a0.  call temp:= `unicodeWrap`(v0, v2) @signature `Landroidx/core/text/BidiFormatter;.unicodeWrap:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind virtual;
  #L47f9a6.  v2:= temp @kind object;
  #L47f9a8.  v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L47f9ac.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47f9b2.  return @kind void;
}
procedure `void` `setCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L47f9c4.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L47f9ca.  return @kind void;
}
procedure `void` `setCloseIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L47f9dc.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @kind virtual;
  #L47f9e2.  return @kind void;
}
procedure `void` `setCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f9f4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L47f9f8.  v0:= fcmpl(v0, v2);
  #L47f9fc.  if v0 == 0 then goto L47fa1c;
  #L47fa00.  v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float` := v2;
  #L47fa04.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47fa0a.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47fa10.  v2:= temp;
  #L47fa12.  if v2 == 0 then goto L47fa1c;
  #L47fa16.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47fa1c.  return @kind void;
}
procedure `void` `setCloseIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fa30.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fa34.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47fa3a.  v0:= temp @kind object;
  #L47fa3c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47fa42.  v2:= temp;
  #L47fa44.  call `setCloseIconEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L47fa4a.  return @kind void;
}
procedure `void` `setCloseIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fa5c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fa60.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L47fa66.  v2:= temp @kind object;
  #L47fa68.  call `setCloseIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L47fa6e.  return @kind void;
}
procedure `void` `setCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fa80.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L47fa84.  v0:= fcmpl(v0, v2);
  #L47fa88.  if v0 == 0 then goto L47faa8;
  #L47fa8c.  v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float` := v2;
  #L47fa90.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47fa96.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47fa9c.  v2:= temp;
  #L47fa9e.  if v2 == 0 then goto L47faa8;
  #L47faa2.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47faa8.  return @kind void;
}
procedure `void` `setCloseIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fabc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fac0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47fac6.  v0:= temp @kind object;
  #L47fac8.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47face.  v2:= temp;
  #L47fad0.  call `setCloseIconSize`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L47fad6.  return @kind void;
}
procedure `void` `setCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fae8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L47faec.  v0:= fcmpl(v0, v2);
  #L47faf0.  if v0 == 0 then goto L47fb10;
  #L47faf4.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float` := v2;
  #L47faf8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47fafe.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47fb04.  v2:= temp;
  #L47fb06.  if v2 == 0 then goto L47fb10;
  #L47fb0a.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47fb10.  return @kind void;
}
procedure `void` `setCloseIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fb24.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fb28.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47fb2e.  v0:= temp @kind object;
  #L47fb30.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47fb36.  v2:= temp;
  #L47fb38.  call `setCloseIconStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L47fb3e.  return @kind void;
}
procedure `boolean` `setCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47db3c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L47db40.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L47db46.  v0:= temp;
  #L47db48.  if v0 != 0 then goto L47db6e;
  #L47db4c.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] := v2 @kind object;
  #L47db50.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47db56.  v0:= temp;
  #L47db58.  if v0 == 0 then goto L47db6e;
  #L47db5c.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47db62.  v0:= temp @kind object;
  #L47db64.  call temp:= `onStateChange`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L47db6a.  v2:= temp;
  #L47db6c.  return v2;
  #L47db6e.  v2:= 0I;
  #L47db70.  return v2;
}
procedure `void` `setCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fb50.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L47fb54.  if v0 == v2 then goto L47fb80;
  #L47fb58.  v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L47fb5c.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47fb62.  v0:= temp;
  #L47fb64.  if v0 == 0 then goto L47fb72;
  #L47fb68.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47fb6c.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L47fb72.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47fb78.  v2:= temp @kind object;
  #L47fb7a.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L47fb80.  return @kind void;
}
procedure `void` `setCloseIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fb94.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fb98.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47fb9e.  v2:= temp @kind object;
  #L47fba0.  call `setCloseIconTint`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47fba6.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fc1c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fc20.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47fc26.  v0:= temp @kind object;
  #L47fc28.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L47fc2e.  v2:= temp;
  #L47fc30.  call `setCloseIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L47fc36.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fbb8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L47fbbc.  if v0 == v2 then goto L47fc08;
  #L47fbc0.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47fbc6.  v0:= temp;
  #L47fbc8.  v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L47fbcc.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47fbd2.  v2:= temp;
  #L47fbd4.  if v0 == v2 then goto L47fbdc;
  #L47fbd8.  v0:= 1I;
  #L47fbda.  goto L47fbde;
  #L47fbdc.  v0:= 0I;
  #L47fbde.  if v0 == 0 then goto L47fc08;
  #L47fbe2.  if v2 == 0 then goto L47fbf2;
  #L47fbe6.  v2:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47fbea.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47fbf0.  goto L47fbfc;
  #L47fbf2.  v2:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47fbf6.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L47fbfc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47fc02.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47fc08.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fc48.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L47fc4c.  if v0 == v2 then goto L47fc5a;
  #L47fc50.  v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` := v2 @kind object;
  #L47fc54.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47fc5a.  return @kind void;
}
procedure `void` `setDelegate`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `com.google.android.material.chip.ChipDrawable$Delegate` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setDelegate:(Lcom/google/android/material/chip/ChipDrawable$Delegate;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fc6c.  v0:= new `java.lang.ref.WeakReference`;
  #L47fc70.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L47fc76.  v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L47fc7a.  return @kind void;
}
procedure `void` `setEllipsize`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.text.TextUtils$TruncateAt` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @AccessFlag PUBLIC {
    temp;

  #L47fc8c.  v0.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` := v1 @kind object;
  #L47fc90.  return @kind void;
}
procedure `void` `setHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L47fca4.  v0.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L47fca8.  return @kind void;
}
procedure `void` `setHideMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fcbc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fcc0.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L47fcc6.  v2:= temp @kind object;
  #L47fcc8.  call `setHideMotionSpec`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L47fcce.  return @kind void;
}
procedure `void` `setIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fce0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L47fce4.  v0:= fcmpl(v0, v2);
  #L47fce8.  if v0 == 0 then goto L47fd14;
  #L47fcec.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47fcf2.  v0:= temp;
  #L47fcf4.  v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float` := v2;
  #L47fcf8.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47fcfe.  v2:= temp;
  #L47fd00.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47fd06.  v2:= fcmpl(v0, v2);
  #L47fd0a.  if v2 == 0 then goto L47fd14;
  #L47fd0e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47fd14.  return @kind void;
}
procedure `void` `setIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fd28.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fd2c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47fd32.  v0:= temp @kind object;
  #L47fd34.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47fd3a.  v2:= temp;
  #L47fd3c.  call `setIconEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L47fd42.  return @kind void;
}
procedure `void` `setIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fd54.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L47fd58.  v0:= fcmpl(v0, v2);
  #L47fd5c.  if v0 == 0 then goto L47fd88;
  #L47fd60.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47fd66.  v0:= temp;
  #L47fd68.  v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float` := v2;
  #L47fd6c.  call temp:= `calculateChipIconWidth`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconWidth:()F` @kind virtual;
  #L47fd72.  v2:= temp;
  #L47fd74.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47fd7a.  v2:= fcmpl(v0, v2);
  #L47fd7e.  if v2 == 0 then goto L47fd88;
  #L47fd82.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47fd88.  return @kind void;
}
procedure `void` `setIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fd9c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fda0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47fda6.  v0:= temp @kind object;
  #L47fda8.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47fdae.  v2:= temp;
  #L47fdb0.  call `setIconStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L47fdb6.  return @kind void;
}
procedure `void` `setMaxWidth`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @AccessFlag PUBLIC {
    temp;

  #L47fdc8.  v0.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int` := v1;
  #L47fdcc.  return @kind void;
}
procedure `void` `setRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fde0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L47fde4.  if v0 == v2 then goto L47fe00;
  #L47fde8.  v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L47fdec.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L47fdf2.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L47fdf8.  v2:= temp @kind object;
  #L47fdfa.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L47fe00.  return @kind void;
}
procedure `void` `setRippleColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fe14.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fe18.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L47fe1e.  v2:= temp @kind object;
  #L47fe20.  call `setRippleColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47fe26.  return @kind void;
}
procedure `void` `setShouldDrawText`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShouldDrawText:(Z)V` @AccessFlag  {
    temp;

  #L47fe38.  v0.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v1 @kind boolean;
  #L47fe3c.  return @kind void;
}
procedure `void` `setShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L47fe50.  v0.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L47fe54.  return @kind void;
}
procedure `void` `setShowMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fe68.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fe6c.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L47fe72.  v2:= temp @kind object;
  #L47fe74.  call `setShowMotionSpec`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L47fe7a.  return @kind void;
}
procedure `void` `setText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fe8c.  if v2 != 0 then goto L47fe94;
  #L47fe90.  v2:= "" @kind object;
  #L47fe94.  v0:= v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L47fe98.  call temp:= `equals`(v0, v2) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L47fe9e.  v0:= temp;
  #L47fea0.  if v0 != 0 then goto L47fec0;
  #L47fea4.  v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L47fea8.  v2:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47feac.  v0:= 1I;
  #L47feae.  call `setTextWidthDirty`(v2, v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextWidthDirty:(Z)V` @kind virtual;
  #L47feb4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47feba.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47fec0.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `com.google.android.material.resources.TextAppearance` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47fed4.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L47fed8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fedc.  call `setTextAppearance`(v0, v3, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;Landroid/content/Context;)V` @kind virtual;
  #L47fee2.  return @kind void;
}
procedure `void` `setTextAppearanceResource`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearanceResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47fef4.  v0:= new `com.google.android.material.resources.TextAppearance`;
  #L47fef8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47fefc.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/resources/TextAppearance;.<init>:(Landroid/content/Context;I)V` @kind direct;
  #L47ff02.  call `setTextAppearance`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L47ff08.  return @kind void;
}
procedure `void` `setTextColor`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L47ff48.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L47ff4e.  v1:= temp @kind object;
  #L47ff50.  call `setTextColor`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47ff56.  return @kind void;
}
procedure `void` `setTextColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ff1c.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L47ff22.  v0:= temp @kind object;
  #L47ff24.  if v0 == 0 then goto L47ff34;
  #L47ff28.  call `setTextColor`(v0, v2) @signature `Lcom/google/android/material/resources/TextAppearance;.setTextColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L47ff2e.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47ff34.  return @kind void;
}
procedure `void` `setTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ff68.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L47ff6c.  v0:= fcmpl(v0, v2);
  #L47ff70.  if v0 == 0 then goto L47ff84;
  #L47ff74.  v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float` := v2;
  #L47ff78.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47ff7e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L47ff84.  return @kind void;
}
procedure `void` `setTextEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ff98.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ff9c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47ffa2.  v0:= temp @kind object;
  #L47ffa4.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L47ffaa.  v2:= temp;
  #L47ffac.  call `setTextEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L47ffb2.  return @kind void;
}
procedure `void` `setTextResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ffc4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L47ffc8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L47ffce.  v0:= temp @kind object;
  #L47ffd0.  call temp:= `getString`(v0, v2) @signature `Landroid/content/res/Resources;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L47ffd6.  v2:= temp @kind object;
  #L47ffd8.  call `setText`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L47ffde.  return @kind void;
}
procedure `void` `setTextSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fff0.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L47fff6.  v0:= temp @kind object;
  #L47fff8.  if v0 == 0 then goto L48001a;
  #L47fffc.  call `setTextSize`(v0, v2) @signature `Lcom/google/android/material/resources/TextAppearance;.setTextSize:(F)V` @kind virtual;
  #L480002.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L480006.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L48000c.  v0:= temp @kind object;
  #L48000e.  call `setTextSize`(v0, v2) @signature `Landroid/text/TextPaint;.setTextSize:(F)V` @kind virtual;
  #L480014.  call `onTextSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onTextSizeChange:()V` @kind virtual;
  #L48001a.  return @kind void;
}
procedure `void` `setTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48002c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L480030.  v0:= fcmpl(v0, v2);
  #L480034.  if v0 == 0 then goto L480048;
  #L480038.  v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float` := v2;
  #L48003c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L480042.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L480048.  return @kind void;
}
procedure `void` `setTextStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48005c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L480060.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L480066.  v0:= temp @kind object;
  #L480068.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L48006e.  v2:= temp;
  #L480070.  call `setTextStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L480076.  return @kind void;
}
procedure `void` `setTintList`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480088.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L48008c.  if v0 == v2 then goto L4800a2;
  #L480090.  v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L480094.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L48009a.  v2:= temp @kind object;
  #L48009c.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L4800a2.  return @kind void;
}
procedure `void` `setTintMode`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.PorterDuff$Mode` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4800b4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L4800b8.  if v0 == v2 then goto L4800d6;
  #L4800bc.  v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v2 @kind object;
  #L4800c0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L4800c4.  call temp:= `updateTintFilter`(v1, v0, v2) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L4800ca.  v2:= temp @kind object;
  #L4800cc.  v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L4800d0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L4800d6.  return @kind void;
}
procedure `void` `setUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setUseCompatRipple:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4800e8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L4800ec.  if v0 == v2 then goto L480108;
  #L4800f0.  v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` := v2 @kind boolean;
  #L4800f4.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L4800fa.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L480100.  v2:= temp @kind object;
  #L480102.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L480108.  return @kind void;
}
procedure `boolean` `setVisible`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `boolean` v3 , `boolean` v4 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47db84.  call temp:= `setVisible`(v2, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind super;
  #L47db8a.  v0:= temp;
  #L47db8c.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L47db92.  v1:= temp;
  #L47db94.  if v1 == 0 then goto L47dba6;
  #L47db98.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47db9c.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L47dba2.  v1:= temp;
  #L47dba4.  v0:= v0 ^| v1 @kind int;
  #L47dba6.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L47dbac.  v1:= temp;
  #L47dbae.  if v1 == 0 then goto L47dbc0;
  #L47dbb2.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47dbb6.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L47dbbc.  v1:= temp;
  #L47dbbe.  v0:= v0 ^| v1 @kind int;
  #L47dbc0.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L47dbc6.  v1:= temp;
  #L47dbc8.  if v1 == 0 then goto L47dbda;
  #L47dbcc.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L47dbd0.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L47dbd6.  v3:= temp;
  #L47dbd8.  v0:= v0 ^| v3 @kind int;
  #L47dbda.  if v0 == 0 then goto L47dbe4;
  #L47dbde.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L47dbe4.  return v0;
}
procedure `boolean` `shouldDrawText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.shouldDrawText:()Z` @AccessFlag  {
    temp;
    v0;

  #L47dbf8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L47dbfc.  return v0;
}
procedure `void` `unscheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L48013c.  call temp:= `getCallback`(v0) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L480142.  v1:= temp @kind object;
  #L480144.  if v1 == 0 then goto L48014e;
  #L480148.  call `unscheduleDrawable`(v1, v0, v2) @signature `Landroid/graphics/drawable/Drawable$Callback;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @kind interface;
  #L48014e.  return @kind void;
}
