record `com.google.android.material.chip.ChipGroup` @kind class @AccessFlag PUBLIC extends `com.google.android.material.internal.FlowLayout` @kind class {
  `com.google.android.material.internal.CheckableGroup` `com.google.android.material.chip.ChipGroup.checkableGroup` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipGroup.chipSpacingVertical` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipGroup.defaultCheckedId` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener` `com.google.android.material.chip.ChipGroup.onCheckedStateChangeListener` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` `com.google.android.material.chip.ChipGroup.passThroughListener` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.android.material.chip.ChipGroup.DEF_STYLE_RES` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/ChipGroup;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L480644.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_ChipGroup` @type ^`int`;
  #L480648.  `@@com.google.android.material.chip.ChipGroup.DEF_STYLE_RES` @type ^`int` := v0;
  #L48064c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L480660.  v0:= 0I;
  #L480662.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L480668.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L48067c.  v0:= `@@com.google.android.material.R$attr.chipGroupStyle` @type ^`int`;
  #L480680.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L480686.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v8 @kind this, `android.content.Context` v9 @kind object, `android.util.AttributeSet` v10 @kind object, `int` v11 ) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L480698.  v4:= `@@com.google.android.material.chip.ChipGroup.DEF_STYLE_RES` @type ^`int`;
  #L48069c.  call temp:= `wrap`(v9, v10, v11, v4) @signature `Lcom/google/android/material/theme/overlay/MaterialThemeOverlay;.wrap:(Landroid/content/Context;Landroid/util/AttributeSet;II)Landroid/content/Context;` @kind static;
  #L4806a2.  v9:= temp @kind object;
  #L4806a4.  call `<init>`(v8, v9, v10, v11) @signature `Lcom/google/android/material/internal/FlowLayout;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L4806aa.  v9:= new `com.google.android.material.internal.CheckableGroup`;
  #L4806ae.  call `<init>`(v9) @signature `Lcom/google/android/material/internal/CheckableGroup;.<init>:()V` @kind direct;
  #L4806b4.  v8.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` := v9 @kind object;
  #L4806b8.  v6:= new `com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener`;
  #L4806bc.  v0:= 0I;
  #L4806be.  call `<init>`(v6, v8, v0) @signature `Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;.<init>:(Lcom/google/android/material/chip/ChipGroup;Lcom/google/android/material/chip/ChipGroup$1;)V` @kind direct;
  #L4806c4.  v8.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` := v6 @kind object;
  #L4806c8.  call temp:= `getContext`(v8) @signature `Landroid/view/ViewGroup;.getContext:()Landroid/content/Context;` @kind virtual;
  #L4806ce.  v0:= temp @kind object;
  #L4806d0.  v2:= `@@com.google.android.material.R$styleable.ChipGroup` @type ^`int`[] @kind object;
  #L4806d4.  v7:= 0I;
  #L4806d6.  v5:= new `int`[v7];
  #L4806da.  v1:= v10 @kind object;
  #L4806dc.  v3:= v11;
  #L4806de.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L4806e4.  v10:= temp @kind object;
  #L4806e6.  v11:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacing` @type ^`int`;
  #L4806ea.  call temp:= `getDimensionPixelOffset`(v10, v11, v7) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L4806f0.  v11:= temp;
  #L4806f2.  v0:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacingHorizontal` @type ^`int`;
  #L4806f6.  call temp:= `getDimensionPixelOffset`(v10, v0, v11) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L4806fc.  v0:= temp;
  #L4806fe.  call `setChipSpacingHorizontal`(v8, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L480704.  v0:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacingVertical` @type ^`int`;
  #L480708.  call temp:= `getDimensionPixelOffset`(v10, v0, v11) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L48070e.  v11:= temp;
  #L480710.  call `setChipSpacingVertical`(v8, v11) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L480716.  v11:= `@@com.google.android.material.R$styleable.ChipGroup_singleLine` @type ^`int`;
  #L48071a.  call temp:= `getBoolean`(v10, v11, v7) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L480720.  v11:= temp;
  #L480722.  call `setSingleLine`(v8, v11) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @kind virtual;
  #L480728.  v11:= `@@com.google.android.material.R$styleable.ChipGroup_singleSelection` @type ^`int`;
  #L48072c.  call temp:= `getBoolean`(v10, v11, v7) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L480732.  v11:= temp;
  #L480734.  call `setSingleSelection`(v8, v11) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L48073a.  v11:= `@@com.google.android.material.R$styleable.ChipGroup_selectionRequired` @type ^`int`;
  #L48073e.  call temp:= `getBoolean`(v10, v11, v7) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L480744.  v11:= temp;
  #L480746.  call `setSelectionRequired`(v8, v11) @signature `Lcom/google/android/material/chip/ChipGroup;.setSelectionRequired:(Z)V` @kind virtual;
  #L48074c.  v11:= `@@com.google.android.material.R$styleable.ChipGroup_checkedChip` @type ^`int`;
  #L480750.  v0:= -1I;
  #L480752.  call temp:= `getResourceId`(v10, v11, v0) @signature `Landroid/content/res/TypedArray;.getResourceId:(II)I` @kind virtual;
  #L480758.  v11:= temp;
  #L48075a.  v8.`com.google.android.material.chip.ChipGroup.defaultCheckedId` @type ^`int` := v11;
  #L48075e.  call `recycle`(v10) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L480764.  v10:= new `com.google.android.material.chip.ChipGroup$1`;
  #L480768.  call `<init>`(v10, v8) @signature `Lcom/google/android/material/chip/ChipGroup$1;.<init>:(Lcom/google/android/material/chip/ChipGroup;)V` @kind direct;
  #L48076e.  call `setOnCheckedStateChangeListener`(v9, v10) @signature `Lcom/google/android/material/internal/CheckableGroup;.setOnCheckedStateChangeListener:(Lcom/google/android/material/internal/CheckableGroup$OnCheckedStateChangeListener;)V` @kind virtual;
  #L480774.  call `setOnHierarchyChangeListener`(v8, v6) @signature `Landroid/view/ViewGroup;.setOnHierarchyChangeListener:(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V` @kind super;
  #L48077a.  v9:= 1I;
  #L48077c.  call `setImportantForAccessibility`(v8, v9) @signature `Landroidx/core/view/ViewCompat;.setImportantForAccessibility:(Landroid/view/View;I)V` @kind static;
  #L480782.  return @kind void;
}
procedure `com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener` `access$100`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$100:(Lcom/google/android/material/chip/ChipGroup;)Lcom/google/android/material/chip/ChipGroup$OnCheckedStateChangeListener;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4804fc.  v0:= v0.`com.google.android.material.chip.ChipGroup.onCheckedStateChangeListener` @type ^`com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener` @kind object;
  #L480500.  return v0 @kind object;
}
procedure `com.google.android.material.internal.CheckableGroup` `access$200`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$200:(Lcom/google/android/material/chip/ChipGroup;)Lcom/google/android/material/internal/CheckableGroup;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L480514.  v0:= v0.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` @kind object;
  #L480518.  return v0 @kind object;
}
procedure `int` `getVisibleChipCount`(`com.google.android.material.chip.ChipGroup` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getVisibleChipCount:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4805dc.  v0:= 0I;
  #L4805de.  v1:= 0I;
  #L4805e0.  call temp:= `getChildCount`(v3) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L4805e6.  v2:= temp;
  #L4805e8.  if v0 >= v2 then goto L480612;
  #L4805ec.  call temp:= `getChildAt`(v3, v0) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L4805f2.  v2:= temp @kind object;
  #L4805f4.  v2:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L4805f8.  if v2 == 0 then goto L48060c;
  #L4805fc.  call temp:= `isChildVisible`(v3, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.isChildVisible:(I)Z` @kind direct;
  #L480602.  v2:= temp;
  #L480604.  if v2 == 0 then goto L48060c;
  #L480608.  v1:= v1 + 1;
  #L48060c.  v0:= v0 + 1;
  #L480610.  goto L4805e0;
  #L480612.  return v1;
}
procedure `boolean` `isChildVisible`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.isChildVisible:(I)Z` @AccessFlag PRIVATE {
    temp;

  #L480474.  call temp:= `getChildAt`(v0, v1) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L48047a.  v1:= temp @kind object;
  #L48047c.  call temp:= `getVisibility`(v1) @signature `Landroid/view/View;.getVisibility:()I` @kind virtual;
  #L480482.  v1:= temp;
  #L480484.  if v1 != 0 then goto L48048c;
  #L480488.  v1:= 1I;
  #L48048a.  goto L48048e;
  #L48048c.  v1:= 0I;
  #L48048e.  return v1;
}
procedure `void` `check`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.check:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480794.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` @kind object;
  #L480798.  call `check`(v0, v2) @signature `Lcom/google/android/material/internal/CheckableGroup;.check:(I)V` @kind virtual;
  #L48079e.  return @kind void;
}
procedure `boolean` `checkLayoutParams`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$LayoutParams` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.checkLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L480448.  call temp:= `checkLayoutParams`(v1, v2) @signature `Landroid/view/ViewGroup;.checkLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Z` @kind super;
  #L48044e.  v0:= temp;
  #L480450.  if v0 == 0 then goto L480460;
  #L480454.  v2:= instanceof @variable v2 @type ^`com.google.android.material.chip.ChipGroup$LayoutParams` @kind boolean;
  #L480458.  if v2 == 0 then goto L480460;
  #L48045c.  v2:= 1I;
  #L48045e.  goto L480462;
  #L480460.  v2:= 0I;
  #L480462.  return v2;
}
procedure `void` `clearCheck`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.clearCheck:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4807b0.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` @kind object;
  #L4807b4.  call `clearCheck`(v0) @signature `Lcom/google/android/material/internal/CheckableGroup;.clearCheck:()V` @kind virtual;
  #L4807ba.  return @kind void;
}
procedure `android.view.ViewGroup$LayoutParams` `generateDefaultLayoutParams`(`com.google.android.material.chip.ChipGroup` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.generateDefaultLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4803e8.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L4803ec.  v1:= -2I;
  #L4803ee.  call `<init>`(v0, v1, v1) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(II)V` @kind direct;
  #L4803f4.  return v0 @kind object;
}
procedure `android.view.ViewGroup$LayoutParams` `generateLayoutParams`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.generateLayoutParams:(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L480408.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L48040c.  call temp:= `getContext`(v2) @signature `Landroid/view/ViewGroup;.getContext:()Landroid/content/Context;` @kind virtual;
  #L480412.  v1:= temp @kind object;
  #L480414.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L48041a.  return v0 @kind object;
}
procedure `android.view.ViewGroup$LayoutParams` `generateLayoutParams`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$LayoutParams` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.generateLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L48042c.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L480430.  call `<init>`(v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(Landroid/view/ViewGroup$LayoutParams;)V` @kind direct;
  #L480436.  return v0 @kind object;
}
procedure `int` `getCheckedChipId`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getCheckedChipId:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48052c.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` @kind object;
  #L480530.  call temp:= `getSingleCheckedId`(v0) @signature `Lcom/google/android/material/internal/CheckableGroup;.getSingleCheckedId:()I` @kind virtual;
  #L480536.  v0:= temp;
  #L480538.  return v0;
}
procedure `java.util.List` `getCheckedChipIds`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getCheckedChipIds:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480624.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` @kind object;
  #L480628.  call temp:= `getCheckedIdsSortedByChildOrder`(v0, v1) @signature `Lcom/google/android/material/internal/CheckableGroup;.getCheckedIdsSortedByChildOrder:(Landroid/view/ViewGroup;)Ljava/util/List;` @kind virtual;
  #L48062e.  v0:= temp @kind object;
  #L480630.  return v0 @kind object;
}
procedure `int` `getChipSpacingHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipSpacingHorizontal:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48054c.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int`;
  #L480550.  return v0;
}
procedure `int` `getChipSpacingVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipSpacingVertical:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480564.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int`;
  #L480568.  return v0;
}
procedure `int` `getIndexOfChip`(`com.google.android.material.chip.ChipGroup` v5 @kind this, `android.view.View` v6 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.getIndexOfChip:(Landroid/view/View;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48057c.  v0:= instanceof @variable v6 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L480580.  v1:= -1I;
  #L480582.  if v0 != 0 then goto L480588;
  #L480586.  return v1;
  #L480588.  v0:= 0I;
  #L48058a.  v2:= 0I;
  #L48058c.  call temp:= `getChildCount`(v5) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L480592.  v3:= temp;
  #L480594.  if v0 >= v3 then goto L4805c8;
  #L480598.  call temp:= `getChildAt`(v5, v0) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L48059e.  v3:= temp @kind object;
  #L4805a0.  v4:= instanceof @variable v3 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L4805a4.  if v4 == 0 then goto L4805c2;
  #L4805a8.  call temp:= `isChildVisible`(v5, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.isChildVisible:(I)Z` @kind direct;
  #L4805ae.  v4:= temp;
  #L4805b0.  if v4 == 0 then goto L4805c2;
  #L4805b4.  v3:= (`com.google.android.material.chip.Chip`) v3 @kind object;
  #L4805b8.  if v3 != v6 then goto L4805be;
  #L4805bc.  return v2;
  #L4805be.  v2:= v2 + 1;
  #L4805c2.  v0:= v0 + 1;
  #L4805c6.  goto L48058c;
  #L4805c8.  return v1;
}
procedure `boolean` `isSelectionRequired`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSelectionRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4804a0.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` @kind object;
  #L4804a4.  call temp:= `isSelectionRequired`(v0) @signature `Lcom/google/android/material/internal/CheckableGroup;.isSelectionRequired:()Z` @kind virtual;
  #L4804aa.  v0:= temp;
  #L4804ac.  return v0;
}
procedure `boolean` `isSingleLine`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleLine:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4804c0.  call temp:= `isSingleLine`(v1) @signature `Lcom/google/android/material/internal/FlowLayout;.isSingleLine:()Z` @kind super;
  #L4804c6.  v0:= temp;
  #L4804c8.  return v0;
}
procedure `boolean` `isSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleSelection:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4804dc.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` @kind object;
  #L4804e0.  call temp:= `isSingleSelection`(v0) @signature `Lcom/google/android/material/internal/CheckableGroup;.isSingleSelection:()Z` @kind virtual;
  #L4804e6.  v0:= temp;
  #L4804e8.  return v0;
}
procedure `void` `onFinishInflate`(`com.google.android.material.chip.ChipGroup` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.onFinishInflate:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4807cc.  call `onFinishInflate`(v2) @signature `Landroid/view/ViewGroup;.onFinishInflate:()V` @kind super;
  #L4807d2.  v0:= v2.`com.google.android.material.chip.ChipGroup.defaultCheckedId` @type ^`int`;
  #L4807d6.  v1:= -1I;
  #L4807d8.  if v0 == v1 then goto L4807e6;
  #L4807dc.  v1:= v2.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` @kind object;
  #L4807e0.  call `check`(v1, v0) @signature `Lcom/google/android/material/internal/CheckableGroup;.check:(I)V` @kind virtual;
  #L4807e6.  return @kind void;
}
procedure `void` `onInitializeAccessibilityNodeInfo`(`com.google.android.material.chip.ChipGroup` v4 @kind this, `android.view.accessibility.AccessibilityNodeInfo` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.onInitializeAccessibilityNodeInfo:(Landroid/view/accessibility/AccessibilityNodeInfo;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4807f8.  call `onInitializeAccessibilityNodeInfo`(v4, v5) @signature `Landroid/view/ViewGroup;.onInitializeAccessibilityNodeInfo:(Landroid/view/accessibility/AccessibilityNodeInfo;)V` @kind super;
  #L4807fe.  call temp:= `wrap`(v5) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;.wrap:(Landroid/view/accessibility/AccessibilityNodeInfo;)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;` @kind static;
  #L480804.  v5:= temp @kind object;
  #L480806.  call temp:= `isSingleLine`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleLine:()Z` @kind virtual;
  #L48080c.  v0:= temp;
  #L48080e.  if v0 == 0 then goto L48081c;
  #L480812.  call temp:= `getVisibleChipCount`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.getVisibleChipCount:()I` @kind direct;
  #L480818.  v0:= temp;
  #L48081a.  goto L48081e;
  #L48081c.  v0:= -1I;
  #L48081e.  call temp:= `getRowCount`(v4) @signature `Lcom/google/android/material/internal/FlowLayout;.getRowCount:()I` @kind virtual;
  #L480824.  v1:= temp;
  #L480826.  v2:= 0I;
  #L480828.  call temp:= `isSingleSelection`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleSelection:()Z` @kind virtual;
  #L48082e.  v3:= temp;
  #L480830.  if v3 == 0 then goto L480838;
  #L480834.  v3:= 1I;
  #L480836.  goto L48083a;
  #L480838.  v3:= 2I;
  #L48083a.  call temp:= `obtain`(v1, v0, v2, v3) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$CollectionInfoCompat;.obtain:(IIZI)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$CollectionInfoCompat;` @kind static;
  #L480840.  v0:= temp @kind object;
  #L480842.  call `setCollectionInfo`(v5, v0) @signature `Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;.setCollectionInfo:(Ljava/lang/Object;)V` @kind virtual;
  #L480848.  return @kind void;
}
procedure `void` `setChipSpacing`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacing:(I)V` @AccessFlag PUBLIC {
    temp;

  #L48085c.  call `setChipSpacingHorizontal`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L480862.  call `setChipSpacingVertical`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L480868.  return @kind void;
}
procedure `void` `setChipSpacingHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48087c.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int`;
  #L480880.  if v0 == v2 then goto L480894;
  #L480884.  v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int` := v2;
  #L480888.  call `setItemSpacing`(v1, v2) @signature `Lcom/google/android/material/internal/FlowLayout;.setItemSpacing:(I)V` @kind virtual;
  #L48088e.  call `requestLayout`(v1) @signature `Landroid/view/ViewGroup;.requestLayout:()V` @kind virtual;
  #L480894.  return @kind void;
}
procedure `void` `setChipSpacingHorizontalResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontalResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4808a8.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4808ae.  v0:= temp @kind object;
  #L4808b0.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L4808b6.  v2:= temp;
  #L4808b8.  call `setChipSpacingHorizontal`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L4808be.  return @kind void;
}
procedure `void` `setChipSpacingResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4808d0.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L4808d6.  v0:= temp @kind object;
  #L4808d8.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L4808de.  v2:= temp;
  #L4808e0.  call `setChipSpacing`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacing:(I)V` @kind virtual;
  #L4808e6.  return @kind void;
}
procedure `void` `setChipSpacingVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4808f8.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int`;
  #L4808fc.  if v0 == v2 then goto L480910;
  #L480900.  v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int` := v2;
  #L480904.  call `setLineSpacing`(v1, v2) @signature `Lcom/google/android/material/internal/FlowLayout;.setLineSpacing:(I)V` @kind virtual;
  #L48090a.  call `requestLayout`(v1) @signature `Landroid/view/ViewGroup;.requestLayout:()V` @kind virtual;
  #L480910.  return @kind void;
}
procedure `void` `setChipSpacingVerticalResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVerticalResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480924.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L48092a.  v0:= temp @kind object;
  #L48092c.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L480932.  v2:= temp;
  #L480934.  call `setChipSpacingVertical`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L48093a.  return @kind void;
}
procedure `void` `setDividerDrawableHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setDividerDrawableHorizontal:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48094c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L480950.  v0:= "Changing divider drawables have no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L480954.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48095a.  throw v2;
}
procedure `void` `setDividerDrawableVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setDividerDrawableVertical:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48096c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L480970.  v0:= "Changing divider drawables have no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L480974.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48097a.  throw v2;
}
procedure `void` `setFlexWrap`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setFlexWrap:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48098c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L480990.  v0:= "Changing flex wrap not allowed. ChipGroup exposes a singleLine attribute instead." @kind object;
  #L480994.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48099a.  throw v2;
}
procedure `void` `setOnCheckedChangeListener`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnCheckedChangeListener:(Lcom/google/android/material/chip/ChipGroup$OnCheckedChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4809ac.  if v2 != 0 then goto L4809ba;
  #L4809b0.  v2:= 0I;
  #L4809b2.  call `setOnCheckedStateChangeListener`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnCheckedStateChangeListener:(Lcom/google/android/material/chip/ChipGroup$OnCheckedStateChangeListener;)V` @kind virtual;
  #L4809b8.  return @kind void;
  #L4809ba.  v0:= new `com.google.android.material.chip.ChipGroup$2`;
  #L4809be.  call `<init>`(v0, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup$2;.<init>:(Lcom/google/android/material/chip/ChipGroup;Lcom/google/android/material/chip/ChipGroup$OnCheckedChangeListener;)V` @kind direct;
  #L4809c4.  call `setOnCheckedStateChangeListener`(v1, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnCheckedStateChangeListener:(Lcom/google/android/material/chip/ChipGroup$OnCheckedStateChangeListener;)V` @kind virtual;
  #L4809ca.  return @kind void;
}
procedure `void` `setOnCheckedStateChangeListener`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnCheckedStateChangeListener:(Lcom/google/android/material/chip/ChipGroup$OnCheckedStateChangeListener;)V` @AccessFlag PUBLIC {
    temp;

  #L4809dc.  v0.`com.google.android.material.chip.ChipGroup.onCheckedStateChangeListener` @type ^`com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener` := v1 @kind object;
  #L4809e0.  return @kind void;
}
procedure `void` `setOnHierarchyChangeListener`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$OnHierarchyChangeListener` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnHierarchyChangeListener:(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4809f4.  v0:= v1.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` @kind object;
  #L4809f8.  call temp:= `access$302`(v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;.access$302:(Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;Landroid/view/ViewGroup$OnHierarchyChangeListener;)Landroid/view/ViewGroup$OnHierarchyChangeListener;` @kind static;
  #L4809fe.  return @kind void;
}
procedure `void` `setSelectionRequired`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSelectionRequired:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480a10.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` @kind object;
  #L480a14.  call `setSelectionRequired`(v0, v2) @signature `Lcom/google/android/material/internal/CheckableGroup;.setSelectionRequired:(Z)V` @kind virtual;
  #L480a1a.  return @kind void;
}
procedure `void` `setShowDividerHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setShowDividerHorizontal:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480a2c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L480a30.  v0:= "Changing divider modes has no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L480a34.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480a3a.  throw v2;
}
procedure `void` `setShowDividerVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setShowDividerVertical:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480a4c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L480a50.  v0:= "Changing divider modes has no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L480a54.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480a5a.  throw v2;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480a84.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L480a8a.  v0:= temp @kind object;
  #L480a8c.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L480a92.  v2:= temp;
  #L480a94.  call `setSingleLine`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @kind virtual;
  #L480a9a.  return @kind void;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L480a6c.  call `setSingleLine`(v0, v1) @signature `Lcom/google/android/material/internal/FlowLayout;.setSingleLine:(Z)V` @kind super;
  #L480a72.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480ac8.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L480ace.  v0:= temp @kind object;
  #L480ad0.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L480ad6.  v2:= temp;
  #L480ad8.  call `setSingleSelection`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L480ade.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480aac.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkableGroup` @type ^`com.google.android.material.internal.CheckableGroup` @kind object;
  #L480ab0.  call `setSingleSelection`(v0, v2) @signature `Lcom/google/android/material/internal/CheckableGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L480ab6.  return @kind void;
}
