record `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` @kind class @AccessFlag PUBLIC extends `com.google.android.play.core.appupdate.AppUpdateManager` @kind interface {
  `com.google.android.play.core.appupdate.zzc` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.a` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @AccessFlag PRIVATE;
  `int` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.e` @AccessFlag PRIVATE;
  `boolean` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.f` @AccessFlag PRIVATE;
  `int` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.g` @AccessFlag PRIVATE;
  `java.lang.Integer` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.h` @AccessFlag PRIVATE;
  `int` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.i` @AccessFlag PRIVATE;
  `long` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.j` @AccessFlag PRIVATE;
  `long` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.k` @AccessFlag PRIVATE;
  `boolean` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.l` @AccessFlag PRIVATE;
  `boolean` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @AccessFlag PRIVATE;
  `boolean` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.n` @AccessFlag PRIVATE;
  `java.lang.Integer` `com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v3 @kind this, `android.content.Context` v4 @kind object) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4d8e70.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d8e76.  v0:= new `java.util.ArrayList`;
  #L4d8e7a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4d8e80.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.c` @type ^`java.util.List` := v0 @kind object;
  #L4d8e84.  v0:= 0I;
  #L4d8e86.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d8e8a.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.e` @type ^`int` := v0;
  #L4d8e8e.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.f` @type ^`boolean` := v0 @kind boolean;
  #L4d8e92.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.g` @type ^`int` := v0;
  #L4d8e96.  v1:= 0I;
  #L4d8e98.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.h` @type ^`java.lang.Integer` := v1 @kind object;
  #L4d8e9c.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.i` @type ^`int` := v0;
  #L4d8ea0.  v1:= 0L;
  #L4d8ea4.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.j` @type ^`long` := v1 @kind wide;
  #L4d8ea8.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.k` @type ^`long` := v1 @kind wide;
  #L4d8eac.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.l` @type ^`boolean` := v0 @kind boolean;
  #L4d8eb0.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @type ^`boolean` := v0 @kind boolean;
  #L4d8eb4.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.n` @type ^`boolean` := v0 @kind boolean;
  #L4d8eb8.  v0:= new `com.google.android.play.core.appupdate.zzc`;
  #L4d8ebc.  call `<init>`(v0, v4) @signature `Lcom/google/android/play/core/appupdate/zzc;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L4d8ec2.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.a` @type ^`com.google.android.play.core.appupdate.zzc` := v0 @kind object;
  #L4d8ec6.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.b` @type ^`android.content.Context` := v4 @kind object;
  #L4d8eca.  return @kind void;
}
procedure `int` `a`() @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.a:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4d8df0.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4d8df4.  v1:= 23I;
  #L4d8df8.  if v0 < v1 then goto L4d8e02;
  #L4d8dfc.  v0:= 67108864I;
  #L4d8e00.  return v0;
  #L4d8e02.  v0:= 0I;
  #L4d8e04.  return v0;
}
procedure `int` `b`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v2 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.b:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L4d8e18.  v0:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.f` @type ^`boolean` @kind boolean;
  #L4d8e1c.  if v0 == 0 then goto L4d8e44;
  #L4d8e20.  v0:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d8e24.  if v0 == 0 then goto L4d8e40;
  #L4d8e28.  v1:= 4I;
  #L4d8e2a.  if v0 == v1 then goto L4d8e40;
  #L4d8e2e.  v1:= 5I;
  #L4d8e30.  if v0 == v1 then goto L4d8e40;
  #L4d8e34.  v1:= 6I;
  #L4d8e36.  if v0 != v1 then goto L4d8e3c;
  #L4d8e3a.  goto L4d8e40;
  #L4d8e3c.  v0:= 3I;
  #L4d8e3e.  return v0;
  #L4d8e40.  v0:= 2I;
  #L4d8e42.  return v0;
  #L4d8e44.  v0:= 1I;
  #L4d8e46.  return v0;
}
procedure `void` `c`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v8 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4d935c.  v0:= v8.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.a` @type ^`com.google.android.play.core.appupdate.zzc` @kind object;
  #L4d9360.  v1:= v8.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d9364.  v2:= v8.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.j` @type ^`long` @kind wide;
  #L4d9368.  v4:= v8.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.k` @type ^`long` @kind wide;
  #L4d936c.  v6:= v8.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.e` @type ^`int`;
  #L4d9370.  v7:= v8.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.b` @type ^`android.content.Context` @kind object;
  #L4d9374.  call temp:= `getPackageName`(v7) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L4d937a.  v7:= temp @kind object;
  #L4d937c.  call temp:= `zza`(v1, v2, v4, v6, v7) @signature `Lcom/google/android/play/core/install/InstallState;.zza:(IJJILjava/lang/String;)Lcom/google/android/play/core/install/InstallState;` @kind static;
  #L4d9382.  v1:= temp @kind object;
  #L4d9384.  call `zzd`(v0, v1) @signature `Lcom/google/android/play/core/appupdate/internal/zzl;.zzd:(Ljava/lang/Object;)V` @kind virtual;
  #L4d938a.  return @kind void;
}
procedure `boolean` `d`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v2 @kind this, `com.google.android.play.core.appupdate.AppUpdateInfo` v3 @kind object, `com.google.android.play.core.appupdate.AppUpdateOptions` v4 @kind object) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.d:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;Lcom/google/android/play/core/appupdate/AppUpdateOptions;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L4d8b04.  call temp:= `isUpdateTypeAllowed`(v3, v4) @signature `Lcom/google/android/play/core/appupdate/AppUpdateInfo;.isUpdateTypeAllowed:(Lcom/google/android/play/core/appupdate/AppUpdateOptions;)Z` @kind virtual;
  #L4d8b0a.  v0:= temp;
  #L4d8b0c.  v1:= 0I;
  #L4d8b0e.  if v0 != 0 then goto L4d8b46;
  #L4d8b12.  call temp:= `appUpdateType`(v4) @signature `Lcom/google/android/play/core/appupdate/AppUpdateOptions;.appUpdateType:()I` @kind virtual;
  #L4d8b18.  v0:= temp;
  #L4d8b1a.  call temp:= `defaultOptions`(v0) @signature `Lcom/google/android/play/core/appupdate/AppUpdateOptions;.defaultOptions:(I)Lcom/google/android/play/core/appupdate/AppUpdateOptions;` @kind static;
  #L4d8b20.  v0:= temp @kind object;
  #L4d8b22.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d8b28.  v0:= temp;
  #L4d8b2a.  if v0 == 0 then goto L4d8b44;
  #L4d8b2e.  call temp:= `appUpdateType`(v4) @signature `Lcom/google/android/play/core/appupdate/AppUpdateOptions;.appUpdateType:()I` @kind virtual;
  #L4d8b34.  v0:= temp;
  #L4d8b36.  call temp:= `isUpdateTypeAllowed`(v3, v0) @signature `Lcom/google/android/play/core/appupdate/AppUpdateInfo;.isUpdateTypeAllowed:(I)Z` @kind virtual;
  #L4d8b3c.  v3:= temp;
  #L4d8b3e.  if v3 == 0 then goto L4d8b44;
  #L4d8b42.  goto L4d8b46;
  #L4d8b44.  return v1;
  #L4d8b46.  call temp:= `appUpdateType`(v4) @signature `Lcom/google/android/play/core/appupdate/AppUpdateOptions;.appUpdateType:()I` @kind virtual;
  #L4d8b4c.  v3:= temp;
  #L4d8b4e.  v4:= 1I;
  #L4d8b50.  if v3 != v4 then goto L4d8b66;
  #L4d8b54.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @type ^`boolean` := v4 @kind boolean;
  #L4d8b58.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d8b5e.  v3:= temp @kind object;
  #L4d8b60.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` := v3 @kind object;
  #L4d8b64.  goto L4d8b76;
  #L4d8b66.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.l` @type ^`boolean` := v4 @kind boolean;
  #L4d8b6a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d8b70.  v3:= temp @kind object;
  #L4d8b72.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` := v3 @kind object;
  #L4d8b76.  return v4;
}
procedure `com.google.android.gms.tasks.Task` `completeUpdate`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v3 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.completeUpdate:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d8b88.  v0:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.e` @type ^`int`;
  #L4d8b8c.  if v0 == 0 then goto L4d8ba8;
  #L4d8b90.  v0:= new `com.google.android.play.core.install.InstallException`;
  #L4d8b94.  v1:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.e` @type ^`int`;
  #L4d8b98.  call `<init>`(v0, v1) @signature `Lcom/google/android/play/core/install/InstallException;.<init>:(I)V` @kind direct;
  #L4d8b9e.  call temp:= `forException`(v0) @signature `Lcom/google/android/gms/tasks/Tasks;.forException:(Ljava/lang/Exception;)Lcom/google/android/gms/tasks/Task;` @kind static;
  #L4d8ba4.  v0:= temp @kind object;
  #L4d8ba6.  return v0 @kind object;
  #L4d8ba8.  v0:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d8bac.  v1:= 11I;
  #L4d8bb0.  v2:= 3I;
  #L4d8bb2.  if v0 != v1 then goto L4d8bec;
  #L4d8bb6.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v2;
  #L4d8bba.  v0:= 1I;
  #L4d8bbc.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.n` @type ^`boolean` := v0 @kind boolean;
  #L4d8bc0.  v0:= 0I;
  #L4d8bc2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d8bc8.  v0:= temp @kind object;
  #L4d8bca.  v1:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d8bce.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d8bd4.  v0:= temp;
  #L4d8bd6.  if v0 == 0 then goto L4d8be0;
  #L4d8bda.  call `c`(v3) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @kind direct;
  #L4d8be0.  v0:= 0I;
  #L4d8be2.  call temp:= `forResult`(v0) @signature `Lcom/google/android/gms/tasks/Tasks;.forResult:(Ljava/lang/Object;)Lcom/google/android/gms/tasks/Task;` @kind static;
  #L4d8be8.  v0:= temp @kind object;
  #L4d8bea.  return v0 @kind object;
  #L4d8bec.  if v0 != v2 then goto L4d8c06;
  #L4d8bf0.  v0:= new `com.google.android.play.core.install.InstallException`;
  #L4d8bf4.  v1:= -8I;
  #L4d8bf6.  call `<init>`(v0, v1) @signature `Lcom/google/android/play/core/install/InstallException;.<init>:(I)V` @kind direct;
  #L4d8bfc.  call temp:= `forException`(v0) @signature `Lcom/google/android/gms/tasks/Tasks;.forException:(Ljava/lang/Exception;)Lcom/google/android/gms/tasks/Task;` @kind static;
  #L4d8c02.  v0:= temp @kind object;
  #L4d8c04.  return v0 @kind object;
  #L4d8c06.  v0:= new `com.google.android.play.core.install.InstallException`;
  #L4d8c0a.  v1:= -7I;
  #L4d8c0c.  call `<init>`(v0, v1) @signature `Lcom/google/android/play/core/install/InstallException;.<init>:(I)V` @kind direct;
  #L4d8c12.  call temp:= `forException`(v0) @signature `Lcom/google/android/gms/tasks/Tasks;.forException:(Ljava/lang/Exception;)Lcom/google/android/gms/tasks/Task;` @kind static;
  #L4d8c18.  v0:= temp @kind object;
  #L4d8c1a.  return v0 @kind object;
}
procedure `void` `downloadCompletes`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v4 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.downloadCompletes:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4d8edc.  v0:= v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d8ee0.  v1:= 1I;
  #L4d8ee2.  v2:= 2I;
  #L4d8ee4.  if v0 == v2 then goto L4d8eec;
  #L4d8ee8.  if v0 != v1 then goto L4d8f40;
  #L4d8eec.  v0:= 11I;
  #L4d8ef0.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d8ef4.  v2:= 0L;
  #L4d8ef8.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.j` @type ^`long` := v2 @kind wide;
  #L4d8efc.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.k` @type ^`long` := v2 @kind wide;
  #L4d8f00.  v0:= 0I;
  #L4d8f02.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d8f08.  v0:= temp @kind object;
  #L4d8f0a.  v2:= v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d8f0e.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d8f14.  v0:= temp;
  #L4d8f16.  if v0 == 0 then goto L4d8f22;
  #L4d8f1a.  call `c`(v4) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @kind direct;
  #L4d8f20.  return @kind void;
  #L4d8f22.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d8f28.  v0:= temp @kind object;
  #L4d8f2a.  v1:= v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d8f2e.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d8f34.  v0:= temp;
  #L4d8f36.  if v0 == 0 then goto L4d8f40;
  #L4d8f3a.  call temp:= `completeUpdate`(v4) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.completeUpdate:()Lcom/google/android/gms/tasks/Task;` @kind virtual;
  #L4d8f40.  return @kind void;
}
procedure `void` `downloadFails`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v3 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.downloadFails:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d8f54.  v0:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d8f58.  v1:= 1I;
  #L4d8f5a.  if v0 == v1 then goto L4d8f68;
  #L4d8f5e.  v1:= 2I;
  #L4d8f60.  if v0 != v1 then goto L4d8f66;
  #L4d8f64.  goto L4d8f68;
  #L4d8f66.  return @kind void;
  #L4d8f68.  v0:= 5I;
  #L4d8f6a.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d8f6e.  v0:= 0I;
  #L4d8f70.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d8f76.  v1:= temp @kind object;
  #L4d8f78.  v2:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d8f7c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d8f82.  v1:= temp;
  #L4d8f84.  if v1 == 0 then goto L4d8f8e;
  #L4d8f88.  call `c`(v3) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @kind direct;
  #L4d8f8e.  v1:= 0I;
  #L4d8f90.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` := v1 @kind object;
  #L4d8f94.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @type ^`boolean` := v0 @kind boolean;
  #L4d8f98.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d8f9c.  return @kind void;
}
procedure `void` `downloadStarts`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v2 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.downloadStarts:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d8fb0.  v0:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d8fb4.  v1:= 1I;
  #L4d8fb6.  if v0 != v1 then goto L4d8fe0;
  #L4d8fba.  v0:= 2I;
  #L4d8fbc.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d8fc0.  v0:= 0I;
  #L4d8fc2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d8fc8.  v0:= temp @kind object;
  #L4d8fca.  v1:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d8fce.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d8fd4.  v0:= temp;
  #L4d8fd6.  if v0 == 0 then goto L4d8fe0;
  #L4d8fda.  call `c`(v2) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @kind direct;
  #L4d8fe0.  return @kind void;
}
procedure `com.google.android.gms.tasks.Task` `getAppUpdateInfo`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v24 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.getAppUpdateInfo:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L4d8c2c.  v0:= v24 @kind object;
  #L4d8c30.  v1:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.e` @type ^`int`;
  #L4d8c34.  if v1 == 0 then goto L4d8c50;
  #L4d8c38.  v1:= new `com.google.android.play.core.install.InstallException`;
  #L4d8c3c.  v2:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.e` @type ^`int`;
  #L4d8c40.  call `<init>`(v1, v2) @signature `Lcom/google/android/play/core/install/InstallException;.<init>:(I)V` @kind direct;
  #L4d8c46.  call temp:= `forException`(v1) @signature `Lcom/google/android/gms/tasks/Tasks;.forException:(Ljava/lang/Exception;)Lcom/google/android/gms/tasks/Task;` @kind static;
  #L4d8c4c.  v1:= temp @kind object;
  #L4d8c4e.  return v1 @kind object;
  #L4d8c50.  call temp:= `b`(v24) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.b:()I` @kind direct;
  #L4d8c56.  v1:= temp;
  #L4d8c58.  v2:= 2I;
  #L4d8c5a.  v3:= 0I;
  #L4d8c5c.  if v1 != v2 then goto L4d8d32;
  #L4d8c60.  v1:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.c` @type ^`java.util.List` @kind object;
  #L4d8c64.  v2:= 0I;
  #L4d8c66.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d8c6c.  v4:= temp @kind object;
  #L4d8c6e.  call temp:= `contains`(v1, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4d8c74.  v1:= temp;
  #L4d8c76.  if v1 == 0 then goto L4d8cb8;
  #L4d8c7a.  v1:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.b` @type ^`android.content.Context` @kind object;
  #L4d8c7e.  v4:= new `android.content.Intent`;
  #L4d8c82.  call `<init>`(v4) @signature `Landroid/content/Intent;.<init>:()V` @kind direct;
  #L4d8c88.  call temp:= `a`() @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.a:()I` @kind static;
  #L4d8c8e.  v5:= temp;
  #L4d8c90.  call temp:= `getBroadcast`(v1, v2, v4, v5) @signature `Landroid/app/PendingIntent;.getBroadcast:(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;` @kind static;
  #L4d8c96.  v1:= temp @kind object;
  #L4d8c98.  v4:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.b` @type ^`android.content.Context` @kind object;
  #L4d8c9c.  v5:= new `android.content.Intent`;
  #L4d8ca0.  call `<init>`(v5) @signature `Landroid/content/Intent;.<init>:()V` @kind direct;
  #L4d8ca6.  call temp:= `a`() @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.a:()I` @kind static;
  #L4d8cac.  v6:= temp;
  #L4d8cae.  call temp:= `getBroadcast`(v4, v2, v5, v6) @signature `Landroid/app/PendingIntent;.getBroadcast:(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;` @kind static;
  #L4d8cb4.  v4:= temp @kind object;
  #L4d8cb6.  goto L4d8cbc;
  #L4d8cb8.  v1:= v3 @kind object;
  #L4d8cba.  v4:= v1 @kind object;
  #L4d8cbc.  v5:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.c` @type ^`java.util.List` @kind object;
  #L4d8cc0.  v6:= 1I;
  #L4d8cc2.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d8cc8.  v6:= temp @kind object;
  #L4d8cca.  call temp:= `contains`(v5, v6) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4d8cd0.  v5:= temp;
  #L4d8cd2.  if v5 == 0 then goto L4d8d20;
  #L4d8cd6.  v3:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.b` @type ^`android.content.Context` @kind object;
  #L4d8cda.  v5:= new `android.content.Intent`;
  #L4d8cde.  call `<init>`(v5) @signature `Landroid/content/Intent;.<init>:()V` @kind direct;
  #L4d8ce4.  call temp:= `a`() @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.a:()I` @kind static;
  #L4d8cea.  v6:= temp;
  #L4d8cec.  call temp:= `getBroadcast`(v3, v2, v5, v6) @signature `Landroid/app/PendingIntent;.getBroadcast:(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;` @kind static;
  #L4d8cf2.  v3:= temp @kind object;
  #L4d8cf4.  v5:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.b` @type ^`android.content.Context` @kind object;
  #L4d8cf8.  v6:= new `android.content.Intent`;
  #L4d8cfc.  call `<init>`(v6) @signature `Landroid/content/Intent;.<init>:()V` @kind direct;
  #L4d8d02.  call temp:= `a`() @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.a:()I` @kind static;
  #L4d8d08.  v7:= temp;
  #L4d8d0a.  call temp:= `getBroadcast`(v5, v2, v6, v7) @signature `Landroid/app/PendingIntent;.getBroadcast:(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;` @kind static;
  #L4d8d10.  v2:= temp @kind object;
  #L4d8d12.  v20:= v1 @kind object;
  #L4d8d16.  v21:= v2 @kind object;
  #L4d8d1a.  v19:= v3 @kind object;
  #L4d8d1e.  goto L4d8d2c;
  #L4d8d20.  v20:= v1 @kind object;
  #L4d8d24.  v19:= v3 @kind object;
  #L4d8d28.  v21:= v19 @kind object;
  #L4d8d2c.  v22:= v4 @kind object;
  #L4d8d30.  goto L4d8d42;
  #L4d8d32.  v19:= v3 @kind object;
  #L4d8d36.  v20:= v19 @kind object;
  #L4d8d3a.  v21:= v20 @kind object;
  #L4d8d3e.  v22:= v21 @kind object;
  #L4d8d42.  v1:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.b` @type ^`android.content.Context` @kind object;
  #L4d8d46.  call temp:= `getPackageName`(v1) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L4d8d4c.  v5:= temp @kind object;
  #L4d8d4e.  v6:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.g` @type ^`int`;
  #L4d8d52.  call temp:= `b`(v24) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.b:()I` @kind direct;
  #L4d8d58.  v7:= temp;
  #L4d8d5a.  v8:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d8d5e.  v9:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.h` @type ^`java.lang.Integer` @kind object;
  #L4d8d62.  v10:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.i` @type ^`int`;
  #L4d8d66.  v11:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.j` @type ^`long` @kind wide;
  #L4d8d6a.  v13:= v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.k` @type ^`long` @kind wide;
  #L4d8d6e.  v1:= new `java.util.HashMap`;
  #L4d8d72.  v23:= v1 @kind object;
  #L4d8d76.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4d8d7c.  v15:= 0L;
  #L4d8d80.  v17:= 0L;
  #L4d8d84.  call temp:= `zzb`(v5, v6, v7, v8, v9, v10, v11, v13, v15, v17, v19, v20, v21, v22, v23) @signature `Lcom/google/android/play/core/appupdate/AppUpdateInfo;.zzb:(Ljava/lang/String;IIILjava/lang/Integer;IJJJJLandroid/app/PendingIntent;Landroid/app/PendingIntent;Landroid/app/PendingIntent;Landroid/app/PendingIntent;Ljava/util/Map;)Lcom/google/android/play/core/appupdate/AppUpdateInfo;` @kind static;
  #L4d8d8a.  v1:= temp @kind object;
  #L4d8d8c.  call temp:= `forResult`(v1) @signature `Lcom/google/android/gms/tasks/Tasks;.forResult:(Ljava/lang/Object;)Lcom/google/android/gms/tasks/Task;` @kind static;
  #L4d8d92.  v1:= temp @kind object;
  #L4d8d94.  return v1 @kind object;
}
procedure `java.lang.Integer` `getTypeForUpdateInProgress`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v1 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.getTypeForUpdateInProgress:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d8e58.  v0:= v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d8e5c.  return v0 @kind object;
}
procedure `void` `installCompletes`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v4 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.installCompletes:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4d8ff4.  v0:= v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d8ff8.  v1:= 3I;
  #L4d8ffa.  if v0 != v1 then goto L4d9052;
  #L4d8ffe.  v0:= 4I;
  #L4d9000.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d9004.  v0:= 0I;
  #L4d9006.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.f` @type ^`boolean` := v0 @kind boolean;
  #L4d900a.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.g` @type ^`int` := v0;
  #L4d900e.  v1:= 0I;
  #L4d9010.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.h` @type ^`java.lang.Integer` := v1 @kind object;
  #L4d9014.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.i` @type ^`int` := v0;
  #L4d9018.  v2:= 0L;
  #L4d901c.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.j` @type ^`long` := v2 @kind wide;
  #L4d9020.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.k` @type ^`long` := v2 @kind wide;
  #L4d9024.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @type ^`boolean` := v0 @kind boolean;
  #L4d9028.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.n` @type ^`boolean` := v0 @kind boolean;
  #L4d902c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d9032.  v2:= temp @kind object;
  #L4d9034.  v3:= v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d9038.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d903e.  v2:= temp;
  #L4d9040.  if v2 == 0 then goto L4d904a;
  #L4d9044.  call `c`(v4) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @kind direct;
  #L4d904a.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` := v1 @kind object;
  #L4d904e.  v4.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d9052.  return @kind void;
}
procedure `void` `installFails`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v3 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.installFails:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d9064.  v0:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d9068.  v1:= 3I;
  #L4d906a.  if v0 != v1 then goto L4d90a6;
  #L4d906e.  v0:= 5I;
  #L4d9070.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d9074.  v0:= 0I;
  #L4d9076.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d907c.  v1:= temp @kind object;
  #L4d907e.  v2:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d9082.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d9088.  v1:= temp;
  #L4d908a.  if v1 == 0 then goto L4d9094;
  #L4d908e.  call `c`(v3) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @kind direct;
  #L4d9094.  v1:= 0I;
  #L4d9096.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` := v1 @kind object;
  #L4d909a.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.n` @type ^`boolean` := v0 @kind boolean;
  #L4d909e.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @type ^`boolean` := v0 @kind boolean;
  #L4d90a2.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d90a6.  return @kind void;
}
procedure `boolean` `isConfirmationDialogVisible`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v1 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.isConfirmationDialogVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d8a2c.  v0:= v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.l` @type ^`boolean` @kind boolean;
  #L4d8a30.  return v0;
}
procedure `boolean` `isImmediateFlowVisible`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v1 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.isImmediateFlowVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d8a44.  v0:= v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @type ^`boolean` @kind boolean;
  #L4d8a48.  return v0;
}
procedure `boolean` `isInstallSplashScreenVisible`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v1 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.isInstallSplashScreenVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d8a5c.  v0:= v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.n` @type ^`boolean` @kind boolean;
  #L4d8a60.  return v0;
}
procedure `void` `registerListener`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v1 @kind this, `com.google.android.play.core.install.InstallStateUpdatedListener` v2 @kind object) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.registerListener:(Lcom/google/android/play/core/install/InstallStateUpdatedListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d90b8.  v0:= v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.a` @type ^`com.google.android.play.core.appupdate.zzc` @kind object;
  #L4d90bc.  call `zzb`(v0, v2) @signature `Lcom/google/android/play/core/appupdate/internal/zzl;.zzb:(Lcom/google/android/play/core/listener/StateUpdatedListener;)V` @kind virtual;
  #L4d90c2.  return @kind void;
}
procedure `void` `setBytesDownloaded`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v3 @kind this, `long` v4 ) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.setBytesDownloaded:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d90d4.  v0:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d90d8.  v1:= 2I;
  #L4d90da.  if v0 != v1 then goto L4d910e;
  #L4d90de.  v0:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.k` @type ^`long` @kind wide;
  #L4d90e2.  v2:= lcmp(v4, v0);
  #L4d90e6.  if v2 > 0 then goto L4d910e;
  #L4d90ea.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.j` @type ^`long` := v4 @kind wide;
  #L4d90ee.  v4:= 0I;
  #L4d90f0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d90f6.  v4:= temp @kind object;
  #L4d90f8.  v5:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d90fc.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d9102.  v4:= temp;
  #L4d9104.  if v4 == 0 then goto L4d910e;
  #L4d9108.  call `c`(v3) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @kind direct;
  #L4d910e.  return @kind void;
}
procedure `void` `setClientVersionStalenessDays`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v1 @kind this, `java.lang.Integer` v2 @kind object) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.setClientVersionStalenessDays:(Ljava/lang/Integer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d9120.  v0:= v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.f` @type ^`boolean` @kind boolean;
  #L4d9124.  if v0 == 0 then goto L4d912c;
  #L4d9128.  v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.h` @type ^`java.lang.Integer` := v2 @kind object;
  #L4d912c.  return @kind void;
}
procedure `void` `setInstallErrorCode`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.setInstallErrorCode:(I)V` @AccessFlag PUBLIC {
    temp;

  #L4d9140.  v0.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.e` @type ^`int` := v1;
  #L4d9144.  return @kind void;
}
procedure `void` `setTotalBytesToDownload`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v2 @kind this, `long` v3 ) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.setTotalBytesToDownload:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d9158.  v0:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d915c.  v1:= 2I;
  #L4d915e.  if v0 != v1 then goto L4d9186;
  #L4d9162.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.k` @type ^`long` := v3 @kind wide;
  #L4d9166.  v3:= 0I;
  #L4d9168.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d916e.  v3:= temp @kind object;
  #L4d9170.  v4:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d9174.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d917a.  v3:= temp;
  #L4d917c.  if v3 == 0 then goto L4d9186;
  #L4d9180.  call `c`(v2) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @kind direct;
  #L4d9186.  return @kind void;
}
procedure `void` `setUpdateAvailable`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.setUpdateAvailable:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d9198.  v0:= 1I;
  #L4d919a.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.f` @type ^`boolean` := v0 @kind boolean;
  #L4d919e.  v1:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.c` @type ^`java.util.List` @kind object;
  #L4d91a2.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4d91a8.  v1:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.c` @type ^`java.util.List` @kind object;
  #L4d91ac.  v2:= 0I;
  #L4d91ae.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d91b4.  v2:= temp @kind object;
  #L4d91b6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4d91bc.  v1:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.c` @type ^`java.util.List` @kind object;
  #L4d91c0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d91c6.  v0:= temp @kind object;
  #L4d91c8.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4d91ce.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.g` @type ^`int` := v4;
  #L4d91d2.  return @kind void;
}
procedure `void` `setUpdateAvailable`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.setUpdateAvailable:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d91e4.  v0:= 1I;
  #L4d91e6.  v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.f` @type ^`boolean` := v0 @kind boolean;
  #L4d91ea.  v0:= v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.c` @type ^`java.util.List` @kind object;
  #L4d91ee.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4d91f4.  v0:= v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.c` @type ^`java.util.List` @kind object;
  #L4d91f8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d91fe.  v3:= temp @kind object;
  #L4d9200.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4d9206.  v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.g` @type ^`int` := v2;
  #L4d920a.  return @kind void;
}
procedure `void` `setUpdateNotAvailable`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v1 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.setUpdateNotAvailable:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d921c.  v0:= 0I;
  #L4d921e.  v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.f` @type ^`boolean` := v0 @kind boolean;
  #L4d9222.  v0:= 0I;
  #L4d9224.  v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.h` @type ^`java.lang.Integer` := v0 @kind object;
  #L4d9228.  return @kind void;
}
procedure `void` `setUpdatePriority`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.setUpdatePriority:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d923c.  v0:= v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.f` @type ^`boolean` @kind boolean;
  #L4d9240.  if v0 == 0 then goto L4d9248;
  #L4d9244.  v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.i` @type ^`int` := v2;
  #L4d9248.  return @kind void;
}
procedure `com.google.android.gms.tasks.Task` `startUpdateFlow`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v0 @kind this, `com.google.android.play.core.appupdate.AppUpdateInfo` v1 @kind object, `android.app.Activity` v2 @kind object, `com.google.android.play.core.appupdate.AppUpdateOptions` v3 @kind object) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.startUpdateFlow:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;Landroid/app/Activity;Lcom/google/android/play/core/appupdate/AppUpdateOptions;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4d8da8.  call temp:= `d`(v0, v1, v3) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.d:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;Lcom/google/android/play/core/appupdate/AppUpdateOptions;)Z` @kind direct;
  #L4d8dae.  v1:= temp;
  #L4d8db0.  if v1 == 0 then goto L4d8dc8;
  #L4d8db4.  v1:= -1I;
  #L4d8db6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d8dbc.  v1:= temp @kind object;
  #L4d8dbe.  call temp:= `forResult`(v1) @signature `Lcom/google/android/gms/tasks/Tasks;.forResult:(Ljava/lang/Object;)Lcom/google/android/gms/tasks/Task;` @kind static;
  #L4d8dc4.  v1:= temp @kind object;
  #L4d8dc6.  return v1 @kind object;
  #L4d8dc8.  v1:= new `com.google.android.play.core.install.InstallException`;
  #L4d8dcc.  v2:= -6I;
  #L4d8dce.  call `<init>`(v1, v2) @signature `Lcom/google/android/play/core/install/InstallException;.<init>:(I)V` @kind direct;
  #L4d8dd4.  call temp:= `forException`(v1) @signature `Lcom/google/android/gms/tasks/Tasks;.forException:(Ljava/lang/Exception;)Lcom/google/android/gms/tasks/Task;` @kind static;
  #L4d8dda.  v1:= temp @kind object;
  #L4d8ddc.  return v1 @kind object;
}
procedure `boolean` `startUpdateFlowForResult`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v0 @kind this, `com.google.android.play.core.appupdate.AppUpdateInfo` v1 @kind object, `int` v2 , `android.app.Activity` v3 @kind object, `int` v4 ) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.startUpdateFlowForResult:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;ILandroid/app/Activity;I)Z` @AccessFlag PUBLIC {
    temp;

  #L4d8aac.  call temp:= `newBuilder`(v2) @signature `Lcom/google/android/play/core/appupdate/AppUpdateOptions;.newBuilder:(I)Lcom/google/android/play/core/appupdate/AppUpdateOptions$Builder;` @kind static;
  #L4d8ab2.  v2:= temp @kind object;
  #L4d8ab4.  call temp:= `build`(v2) @signature `Lcom/google/android/play/core/appupdate/AppUpdateOptions$Builder;.build:()Lcom/google/android/play/core/appupdate/AppUpdateOptions;` @kind virtual;
  #L4d8aba.  v2:= temp @kind object;
  #L4d8abc.  call temp:= `d`(v0, v1, v2) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.d:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;Lcom/google/android/play/core/appupdate/AppUpdateOptions;)Z` @kind direct;
  #L4d8ac2.  v1:= temp;
  #L4d8ac4.  return v1;
}
procedure `boolean` `startUpdateFlowForResult`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v0 @kind this, `com.google.android.play.core.appupdate.AppUpdateInfo` v1 @kind object, `int` v2 , `com.google.android.play.core.common.IntentSenderForResultStarter` v3 @kind object, `int` v4 ) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.startUpdateFlowForResult:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;ILcom/google/android/play/core/common/IntentSenderForResultStarter;I)Z` @AccessFlag PUBLIC {
    temp;

  #L4d8ad8.  call temp:= `newBuilder`(v2) @signature `Lcom/google/android/play/core/appupdate/AppUpdateOptions;.newBuilder:(I)Lcom/google/android/play/core/appupdate/AppUpdateOptions$Builder;` @kind static;
  #L4d8ade.  v2:= temp @kind object;
  #L4d8ae0.  call temp:= `build`(v2) @signature `Lcom/google/android/play/core/appupdate/AppUpdateOptions$Builder;.build:()Lcom/google/android/play/core/appupdate/AppUpdateOptions;` @kind virtual;
  #L4d8ae6.  v2:= temp @kind object;
  #L4d8ae8.  call temp:= `d`(v0, v1, v2) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.d:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;Lcom/google/android/play/core/appupdate/AppUpdateOptions;)Z` @kind direct;
  #L4d8aee.  v1:= temp;
  #L4d8af0.  return v1;
}
procedure `boolean` `startUpdateFlowForResult`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v0 @kind this, `com.google.android.play.core.appupdate.AppUpdateInfo` v1 @kind object, `android.app.Activity` v2 @kind object, `com.google.android.play.core.appupdate.AppUpdateOptions` v3 @kind object, `int` v4 ) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.startUpdateFlowForResult:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;Landroid/app/Activity;Lcom/google/android/play/core/appupdate/AppUpdateOptions;I)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4d8a74.  call temp:= `d`(v0, v1, v3) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.d:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;Lcom/google/android/play/core/appupdate/AppUpdateOptions;)Z` @kind direct;
  #L4d8a7a.  v1:= temp;
  #L4d8a7c.  return v1;
}
procedure `boolean` `startUpdateFlowForResult`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v0 @kind this, `com.google.android.play.core.appupdate.AppUpdateInfo` v1 @kind object, `com.google.android.play.core.common.IntentSenderForResultStarter` v2 @kind object, `com.google.android.play.core.appupdate.AppUpdateOptions` v3 @kind object, `int` v4 ) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.startUpdateFlowForResult:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;Lcom/google/android/play/core/common/IntentSenderForResultStarter;Lcom/google/android/play/core/appupdate/AppUpdateOptions;I)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4d8a90.  call temp:= `d`(v0, v1, v3) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.d:(Lcom/google/android/play/core/appupdate/AppUpdateInfo;Lcom/google/android/play/core/appupdate/AppUpdateOptions;)Z` @kind direct;
  #L4d8a96.  v1:= temp;
  #L4d8a98.  return v1;
}
procedure `void` `unregisterListener`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v1 @kind this, `com.google.android.play.core.install.InstallStateUpdatedListener` v2 @kind object) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.unregisterListener:(Lcom/google/android/play/core/install/InstallStateUpdatedListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d925c.  v0:= v1.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.a` @type ^`com.google.android.play.core.appupdate.zzc` @kind object;
  #L4d9260.  call `zzc`(v0, v2) @signature `Lcom/google/android/play/core/appupdate/internal/zzl;.zzc:(Lcom/google/android/play/core/listener/StateUpdatedListener;)V` @kind virtual;
  #L4d9266.  return @kind void;
}
procedure `void` `userAcceptsUpdate`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v2 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.userAcceptsUpdate:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d9278.  v0:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.l` @type ^`boolean` @kind boolean;
  #L4d927c.  if v0 != 0 then goto L4d9288;
  #L4d9280.  v0:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @type ^`boolean` @kind boolean;
  #L4d9284.  if v0 == 0 then goto L4d92b2;
  #L4d9288.  v0:= 0I;
  #L4d928a.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.l` @type ^`boolean` := v0 @kind boolean;
  #L4d928e.  v1:= 1I;
  #L4d9290.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v1;
  #L4d9294.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d929a.  v0:= temp @kind object;
  #L4d929c.  v1:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d92a0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d92a6.  v0:= temp;
  #L4d92a8.  if v0 == 0 then goto L4d92b2;
  #L4d92ac.  call `c`(v2) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @kind direct;
  #L4d92b2.  return @kind void;
}
procedure `void` `userCancelsDownload`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v3 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.userCancelsDownload:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4d92c4.  v0:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int`;
  #L4d92c8.  v1:= 1I;
  #L4d92ca.  if v0 == v1 then goto L4d92d8;
  #L4d92ce.  v1:= 2I;
  #L4d92d0.  if v0 != v1 then goto L4d92d6;
  #L4d92d4.  goto L4d92d8;
  #L4d92d6.  return @kind void;
  #L4d92d8.  v0:= 6I;
  #L4d92da.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d92de.  v0:= 0I;
  #L4d92e0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4d92e6.  v1:= temp @kind object;
  #L4d92e8.  v2:= v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` @kind object;
  #L4d92ec.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d92f2.  v1:= temp;
  #L4d92f4.  if v1 == 0 then goto L4d92fe;
  #L4d92f8.  call `c`(v3) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.c:()V` @kind direct;
  #L4d92fe.  v1:= 0I;
  #L4d9300.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` := v1 @kind object;
  #L4d9304.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @type ^`boolean` := v0 @kind boolean;
  #L4d9308.  v3.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d930c.  return @kind void;
}
procedure `void` `userRejectsUpdate`(`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager` v2 @kind this) @signature `Lcom/google/android/play/core/appupdate/testing/FakeAppUpdateManager;.userRejectsUpdate:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d9320.  v0:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.l` @type ^`boolean` @kind boolean;
  #L4d9324.  if v0 != 0 then goto L4d9334;
  #L4d9328.  v0:= v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @type ^`boolean` @kind boolean;
  #L4d932c.  if v0 == 0 then goto L4d9332;
  #L4d9330.  goto L4d9334;
  #L4d9332.  return @kind void;
  #L4d9334.  v0:= 0I;
  #L4d9336.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.l` @type ^`boolean` := v0 @kind boolean;
  #L4d933a.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.m` @type ^`boolean` := v0 @kind boolean;
  #L4d933e.  v1:= 0I;
  #L4d9340.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.o` @type ^`java.lang.Integer` := v1 @kind object;
  #L4d9344.  v2.`com.google.android.play.core.appupdate.testing.FakeAppUpdateManager.d` @type ^`int` := v0;
  #L4d9348.  return @kind void;
}
