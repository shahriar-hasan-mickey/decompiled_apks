record `kotlin._Assertions` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@kotlin._Assertions.ENABLED` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlin._Assertions` `@@kotlin._Assertions.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/_Assertions;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L511fe8.  v0:= new `kotlin._Assertions`;
  #L511fec.  call `<init>`(v0) @signature `Lkotlin/_Assertions;.<init>:()V` @kind direct;
  #L511ff2.  `@@kotlin._Assertions.INSTANCE` @type ^`kotlin._Assertions` := v0 @kind object;
  #L511ff6.  return @kind void;
}
procedure `void` `<init>`(`kotlin._Assertions` v0 @kind this) @signature `Lkotlin/_Assertions;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L512008.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L51200e.  return @kind void;
}
procedure `void` `getENABLED$annotations`() @signature `Lkotlin/_Assertions;.getENABLED$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L512020.  return @kind void;
}
