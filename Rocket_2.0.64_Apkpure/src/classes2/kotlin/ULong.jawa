record `kotlin.ULong` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `long` `kotlin.ULong.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.ULong$Companion` `@@kotlin.ULong.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.ULong.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.ULong.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.ULong.SIZE_BITS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.ULong.SIZE_BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ULong;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L511208.  v0:= new `kotlin.ULong$Companion`;
  #L51120c.  v1:= 0I;
  #L51120e.  call `<init>`(v0, v1) @signature `Lkotlin/ULong$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L511214.  `@@kotlin.ULong.Companion` @type ^`kotlin.ULong$Companion` := v0 @kind object;
  #L511218.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ULong` v0 @kind this, `long` v1 ) @signature `Lkotlin/ULong;.<init>:(J)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L51122c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L511232.  v0.`kotlin.ULong.a` @type ^`long` := v1 @kind wide;
  #L511236.  return @kind void;
}
procedure `kotlin.ULong` `box-impl`(`long` v1 ) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L5111c0.  v0:= new `kotlin.ULong`;
  #L5111c4.  call `<init>`(v0, v1) @signature `Lkotlin/ULong;.<init>:(J)V` @kind direct;
  #L5111ca.  return v0 @kind object;
}
procedure `long` `constructor-impl`(`long` v0 ) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5111dc.  return v0 @kind wide;
}
procedure `boolean` `equals-impl`(`long` v4 , `java.lang.Object` v6 @kind object) @signature `Lkotlin/ULong;.equals-impl:(JLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5110bc.  v0:= instanceof @variable v6 @type ^`kotlin.ULong` @kind boolean;
  #L5110c0.  v1:= 0I;
  #L5110c2.  if v0 != 0 then goto L5110c8;
  #L5110c6.  return v1;
  #L5110c8.  v6:= (`kotlin.ULong`) v6 @kind object;
  #L5110cc.  call temp:= `unbox-impl`(v6) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L5110d2.  v2:= temp @kind wide;
  #L5110d4.  v6:= lcmp(v4, v2);
  #L5110d8.  if v6 == 0 then goto L5110de;
  #L5110dc.  return v1;
  #L5110de.  v4:= 1I;
  #L5110e0.  return v4;
}
procedure `boolean` `equals-impl0`(`long` v1 , `long` v3 ) @signature `Lkotlin/ULong;.equals-impl0:(JJ)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5110f4.  v0:= lcmp(v1, v3);
  #L5110f8.  if v0 != 0 then goto L511100;
  #L5110fc.  v1:= 1I;
  #L5110fe.  goto L511102;
  #L511100.  v1:= 0I;
  #L511102.  return v1;
}
procedure `void` `getData$annotations`() @signature `Lkotlin/ULong;.getData$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L511248.  return @kind void;
}
procedure `int` `hashCode-impl`(`long` v2 ) @signature `Lkotlin/ULong;.hashCode-impl:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L511164.  v0:= 32I;
  #L511168.  v0:= v2 ^>> v0 @kind long;
  #L51116c.  v2:= v2 ^~ v0 @kind long;
  #L51116e.  v3:= (`int`) v2 @kind l2i;
  #L511170.  return v3;
}
procedure `java.lang.String` `toString-impl`(`long` v0 ) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5111a4.  call temp:= `ulongToString`(v0) @signature `Lkotlin/UnsignedKt;.ulongToString:(J)Ljava/lang/String;` @kind static;
  #L5111aa.  v0:= temp @kind object;
  #L5111ac.  return v0 @kind object;
}
procedure `int` `compareTo`(`kotlin.ULong` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/ULong;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L511114.  v5:= (`kotlin.ULong`) v5 @kind object;
  #L511118.  call temp:= `unbox-impl`(v5) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L51111e.  v0:= temp @kind wide;
  #L511120.  call temp:= `unbox-impl`(v4) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L511126.  v2:= temp @kind wide;
  #L511128.  call temp:= `ulongCompare`(v2, v0) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L51112e.  v5:= temp;
  #L511130.  return v5;
}
procedure `boolean` `equals`(`kotlin.ULong` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ULong;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L51109c.  v0:= v2.`kotlin.ULong.a` @type ^`long` @kind wide;
  #L5110a0.  call temp:= `equals-impl`(v0, v3) @signature `Lkotlin/ULong;.equals-impl:(JLjava/lang/Object;)Z` @kind static;
  #L5110a6.  v3:= temp;
  #L5110a8.  return v3;
}
procedure `int` `hashCode`(`kotlin.ULong` v2 @kind this) @signature `Lkotlin/ULong;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L511144.  v0:= v2.`kotlin.ULong.a` @type ^`long` @kind wide;
  #L511148.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/ULong;.hashCode-impl:(J)I` @kind static;
  #L51114e.  v0:= temp;
  #L511150.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.ULong` v2 @kind this) @signature `Lkotlin/ULong;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L511184.  v0:= v2.`kotlin.ULong.a` @type ^`long` @kind wide;
  #L511188.  call temp:= `toString-impl`(v0) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L51118e.  v0:= temp @kind object;
  #L511190.  return v0 @kind object;
}
procedure `long` `unbox-impl`(`kotlin.ULong` v2 @kind this) @signature `Lkotlin/ULong;.unbox-impl:()J` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L5111f0.  v0:= v2.`kotlin.ULong.a` @type ^`long` @kind wide;
  #L5111f4.  return v0 @kind wide;
}
