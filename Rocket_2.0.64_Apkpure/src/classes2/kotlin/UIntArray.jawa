record `kotlin.UIntArray` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Collection` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `int`[] `kotlin.UIntArray.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.UIntArray` v0 @kind this, `int`[] v1 @kind object) @signature `Lkotlin/UIntArray;.<init>:([I)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L51087c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L510882.  v0.`kotlin.UIntArray.a` @type ^`int`[] := v1 @kind object;
  #L510886.  return @kind void;
}
procedure `kotlin.UIntArray` `box-impl`(`int`[] v1 @kind object) @signature `Lkotlin/UIntArray;.box-impl:([I)Lkotlin/UIntArray;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L510860.  v0:= new `kotlin.UIntArray`;
  #L510864.  call `<init>`(v0, v1) @signature `Lkotlin/UIntArray;.<init>:([I)V` @kind direct;
  #L51086a.  return v0 @kind object;
}
procedure `int`[] `constructor-impl`(`int` v0 ) @signature `Lkotlin/UIntArray;.constructor-impl:(I)[I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L510728.  v0:= new `int`[v0];
  #L51072c.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UIntArray;.constructor-impl:([I)[I` @kind static;
  #L510732.  v0:= temp @kind object;
  #L510734.  return v0 @kind object;
}
procedure `int`[] `constructor-impl`(`int`[] v1 @kind object) @signature `Lkotlin/UIntArray;.constructor-impl:([I)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L510748.  v0:= "storage" @kind object;
  #L51074c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L510752.  return v1 @kind object;
}
procedure `boolean` `contains-WZ4Q5Ns`(`int`[] v0 @kind object, `int` v1 ) @signature `Lkotlin/UIntArray;.contains-WZ4Q5Ns:([II)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5104a8.  call temp:= `contains`(v0, v1) @signature `Lkotlin/collections/ArraysKt;.contains:([II)Z` @kind static;
  #L5104ae.  v0:= temp;
  #L5104b0.  return v0;
}
procedure `boolean` `containsAll-impl`(`int`[] v4 @kind object, `java.util.Collection` v5 @kind object) @signature `Lkotlin/UIntArray;.containsAll-impl:([ILjava/util/Collection;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5104ec.  v0:= "elements" @kind object;
  #L5104f0.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5104f6.  call temp:= `isEmpty`(v5) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L5104fc.  v0:= temp;
  #L5104fe.  v1:= 0I;
  #L510500.  v2:= 1I;
  #L510502.  if v0 == 0 then goto L51050a;
  #L510506.  v1:= 1I;
  #L510508.  goto L510550;
  #L51050a.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L510510.  v5:= temp @kind object;
  #L510512.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L510518.  v0:= temp;
  #L51051a.  if v0 == 0 then goto L510506;
  #L51051e.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L510524.  v0:= temp @kind object;
  #L510526.  v3:= instanceof @variable v0 @type ^`kotlin.UInt` @kind boolean;
  #L51052a.  if v3 == 0 then goto L51054a;
  #L51052e.  v0:= (`kotlin.UInt`) v0 @kind object;
  #L510532.  call temp:= `unbox-impl`(v0) @signature `Lkotlin/UInt;.unbox-impl:()I` @kind virtual;
  #L510538.  v0:= temp;
  #L51053a.  call temp:= `contains`(v4, v0) @signature `Lkotlin/collections/ArraysKt;.contains:([II)Z` @kind static;
  #L510540.  v0:= temp;
  #L510542.  if v0 == 0 then goto L51054a;
  #L510546.  v0:= 1I;
  #L510548.  goto L51054c;
  #L51054a.  v0:= 0I;
  #L51054c.  if v0 != 0 then goto L510512;
  #L510550.  return v1;
}
procedure `boolean` `equals-impl`(`int`[] v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/UIntArray;.equals-impl:([ILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L510584.  v0:= instanceof @variable v3 @type ^`kotlin.UIntArray` @kind boolean;
  #L510588.  v1:= 0I;
  #L51058a.  if v0 != 0 then goto L510590;
  #L51058e.  return v1;
  #L510590.  v3:= (`kotlin.UIntArray`) v3 @kind object;
  #L510594.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/UIntArray;.unbox-impl:()[I` @kind virtual;
  #L51059a.  v3:= temp @kind object;
  #L51059c.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L5105a2.  v2:= temp;
  #L5105a4.  if v2 != 0 then goto L5105aa;
  #L5105a8.  return v1;
  #L5105aa.  v2:= 1I;
  #L5105ac.  return v2;
}
procedure `boolean` `equals-impl0`(`int`[] v0 @kind object, `int`[] v1 @kind object) @signature `Lkotlin/UIntArray;.equals-impl0:([I[I)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L5105c0.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L5105c6.  v0:= temp;
  #L5105c8.  return v0;
}
procedure `int` `get-pVg5ArA`(`int`[] v0 @kind object, `int` v1 ) @signature `Lkotlin/UIntArray;.get-pVg5ArA:([II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L51067c.  v0:= v0[v1];
  #L510680.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L510686.  v0:= temp;
  #L510688.  return v0;
}
procedure `int` `getSize-impl`(`int`[] v0 @kind object) @signature `Lkotlin/UIntArray;.getSize-impl:([I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5106bc.  v0:= length @variable v0;
  #L5106be.  return v0;
}
procedure `void` `getStorage$annotations`() @signature `Lkotlin/UIntArray;.getStorage$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L5108b8.  return @kind void;
}
procedure `int` `hashCode-impl`(`int`[] v0 @kind object) @signature `Lkotlin/UIntArray;.hashCode-impl:([I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5106f0.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([I)I` @kind static;
  #L5106f6.  v0:= temp;
  #L5106f8.  return v0;
}
procedure `boolean` `isEmpty-impl`(`int`[] v0 @kind object) @signature `Lkotlin/UIntArray;.isEmpty-impl:([I)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5105fc.  v0:= length @variable v0;
  #L5105fe.  if v0 != 0 then goto L510606;
  #L510602.  v0:= 1I;
  #L510604.  goto L510608;
  #L510606.  v0:= 0I;
  #L510608.  return v0;
}
procedure `java.util.Iterator` `iterator-impl`(`int`[] v1 @kind object) @signature `Lkotlin/UIntArray;.iterator-impl:([I)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L510844.  v0:= new `kotlin.UIntArray$a`;
  #L510848.  call `<init>`(v0, v1) @signature `Lkotlin/UIntArray$a;.<init>:([I)V` @kind direct;
  #L51084e.  return v0 @kind object;
}
procedure `void` `set-VXSXFK8`(`int`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lkotlin/UIntArray;.set-VXSXFK8:([III)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L5108cc.  v0[v1]:= v2;
  #L5108d0.  return @kind void;
}
procedure `java.lang.String` `toString-impl`(`int`[] v2 @kind object) @signature `Lkotlin/UIntArray;.toString-impl:([I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L5107dc.  v0:= new `java.lang.StringBuilder`;
  #L5107e0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5107e6.  v1:= "UIntArray(storage=" @kind object;
  #L5107ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5107f0.  call temp:= `toString`(v2) @signature `Ljava/util/Arrays;.toString:([I)Ljava/lang/String;` @kind static;
  #L5107f6.  v2:= temp @kind object;
  #L5107f8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5107fe.  v2:= 41I;
  #L510802.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L510808.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L51080e.  v2:= temp @kind object;
  #L510810.  return v2 @kind object;
}
procedure `boolean` `add`(`kotlin.UIntArray` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/UIntArray;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L5103f4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L5103f8.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L5103fc.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L510402.  throw v2;
}
procedure `boolean` `add-WZ4Q5Ns`(`kotlin.UIntArray` v1 @kind this, `int` v2 ) @signature `Lkotlin/UIntArray;.add-WZ4Q5Ns:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510414.  v2:= new `java.lang.UnsupportedOperationException`;
  #L510418.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L51041c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L510422.  throw v2;
}
procedure `boolean` `addAll`(`kotlin.UIntArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/UIntArray;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510434.  v2:= new `java.lang.UnsupportedOperationException`;
  #L510438.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L51043c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L510442.  throw v2;
}
procedure `void` `clear`(`kotlin.UIntArray` v2 @kind this) @signature `Lkotlin/UIntArray;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L510898.  v0:= new `java.lang.UnsupportedOperationException`;
  #L51089c.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L5108a0.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5108a6.  throw v0;
}
procedure `boolean` `contains`(`kotlin.UIntArray` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/UIntArray;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L510454.  v0:= instanceof @variable v2 @type ^`kotlin.UInt` @kind boolean;
  #L510458.  if v0 != 0 then goto L510460;
  #L51045c.  v2:= 0I;
  #L51045e.  return v2;
  #L510460.  v2:= (`kotlin.UInt`) v2 @kind object;
  #L510464.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/UInt;.unbox-impl:()I` @kind virtual;
  #L51046a.  v2:= temp;
  #L51046c.  call temp:= `contains-WZ4Q5Ns`(v1, v2) @signature `Lkotlin/UIntArray;.contains-WZ4Q5Ns:(I)Z` @kind virtual;
  #L510472.  v2:= temp;
  #L510474.  return v2;
}
procedure `boolean` `contains-WZ4Q5Ns`(`kotlin.UIntArray` v1 @kind this, `int` v2 ) @signature `Lkotlin/UIntArray;.contains-WZ4Q5Ns:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510488.  v0:= v1.`kotlin.UIntArray.a` @type ^`int`[] @kind object;
  #L51048c.  call temp:= `contains-WZ4Q5Ns`(v0, v2) @signature `Lkotlin/UIntArray;.contains-WZ4Q5Ns:([II)Z` @kind static;
  #L510492.  v2:= temp;
  #L510494.  return v2;
}
procedure `boolean` `containsAll`(`kotlin.UIntArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/UIntArray;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5104c4.  v0:= "elements" @kind object;
  #L5104c8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5104ce.  v0:= v1.`kotlin.UIntArray.a` @type ^`int`[] @kind object;
  #L5104d2.  call temp:= `containsAll-impl`(v0, v2) @signature `Lkotlin/UIntArray;.containsAll-impl:([ILjava/util/Collection;)Z` @kind static;
  #L5104d8.  v2:= temp;
  #L5104da.  return v2;
}
procedure `boolean` `equals`(`kotlin.UIntArray` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/UIntArray;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510564.  v0:= v1.`kotlin.UIntArray.a` @type ^`int`[] @kind object;
  #L510568.  call temp:= `equals-impl`(v0, v2) @signature `Lkotlin/UIntArray;.equals-impl:([ILjava/lang/Object;)Z` @kind static;
  #L51056e.  v2:= temp;
  #L510570.  return v2;
}
procedure `int` `getSize`(`kotlin.UIntArray` v1 @kind this) @signature `Lkotlin/UIntArray;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51069c.  v0:= v1.`kotlin.UIntArray.a` @type ^`int`[] @kind object;
  #L5106a0.  call temp:= `getSize-impl`(v0) @signature `Lkotlin/UIntArray;.getSize-impl:([I)I` @kind static;
  #L5106a6.  v0:= temp;
  #L5106a8.  return v0;
}
procedure `int` `hashCode`(`kotlin.UIntArray` v1 @kind this) @signature `Lkotlin/UIntArray;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5106d0.  v0:= v1.`kotlin.UIntArray.a` @type ^`int`[] @kind object;
  #L5106d4.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/UIntArray;.hashCode-impl:([I)I` @kind static;
  #L5106da.  v0:= temp;
  #L5106dc.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.UIntArray` v1 @kind this) @signature `Lkotlin/UIntArray;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5105dc.  v0:= v1.`kotlin.UIntArray.a` @type ^`int`[] @kind object;
  #L5105e0.  call temp:= `isEmpty-impl`(v0) @signature `Lkotlin/UIntArray;.isEmpty-impl:([I)Z` @kind static;
  #L5105e6.  v0:= temp;
  #L5105e8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.UIntArray` v1 @kind this) @signature `Lkotlin/UIntArray;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510824.  v0:= v1.`kotlin.UIntArray.a` @type ^`int`[] @kind object;
  #L510828.  call temp:= `iterator-impl`(v0) @signature `Lkotlin/UIntArray;.iterator-impl:([I)Ljava/util/Iterator;` @kind static;
  #L51082e.  v0:= temp @kind object;
  #L510830.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.UIntArray` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/UIntArray;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51061c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L510620.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L510624.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L51062a.  throw v2;
}
procedure `boolean` `removeAll`(`kotlin.UIntArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/UIntArray;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51063c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L510640.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L510644.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L51064a.  throw v2;
}
procedure `boolean` `retainAll`(`kotlin.UIntArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/UIntArray;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51065c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L510660.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L510664.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L51066a.  throw v2;
}
procedure `int` `size`(`kotlin.UIntArray` v1 @kind this) @signature `Lkotlin/UIntArray;.size:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L51070c.  call temp:= `getSize`(v1) @signature `Lkotlin/UIntArray;.getSize:()I` @kind virtual;
  #L510712.  v0:= temp;
  #L510714.  return v0;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.UIntArray` v1 @kind this) @signature `Lkotlin/UIntArray;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51077c.  call temp:= `toArray`(v1) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;)[Ljava/lang/Object;` @kind static;
  #L510782.  v0:= temp @kind object;
  #L510784.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.UIntArray` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/UIntArray;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510798.  v0:= "array" @kind object;
  #L51079c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5107a2.  call temp:= `toArray`(v1, v2) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L5107a8.  v2:= temp @kind object;
  #L5107aa.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.UIntArray` v1 @kind this) @signature `Lkotlin/UIntArray;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5107bc.  v0:= v1.`kotlin.UIntArray.a` @type ^`int`[] @kind object;
  #L5107c0.  call temp:= `toString-impl`(v0) @signature `Lkotlin/UIntArray;.toString-impl:([I)Ljava/lang/String;` @kind static;
  #L5107c6.  v0:= temp @kind object;
  #L5107c8.  return v0 @kind object;
}
procedure `int`[] `unbox-impl`(`kotlin.UIntArray` v1 @kind this) @signature `Lkotlin/UIntArray;.unbox-impl:()[I` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L510764.  v0:= v1.`kotlin.UIntArray.a` @type ^`int`[] @kind object;
  #L510768.  return v0 @kind object;
}
