record `kotlin.UByte` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `byte` `kotlin.UByte.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.UByte$Companion` `@@kotlin.UByte.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@kotlin.UByte.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@kotlin.UByte.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.UByte.SIZE_BITS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.UByte.SIZE_BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/UByte;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L510290.  v0:= new `kotlin.UByte$Companion`;
  #L510294.  v1:= 0I;
  #L510296.  call `<init>`(v0, v1) @signature `Lkotlin/UByte$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L51029c.  `@@kotlin.UByte.Companion` @type ^`kotlin.UByte$Companion` := v0 @kind object;
  #L5102a0.  return @kind void;
}
procedure `void` `<init>`(`kotlin.UByte` v0 @kind this, `byte` v1 ) @signature `Lkotlin/UByte;.<init>:(B)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L5102b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5102ba.  v0.`kotlin.UByte.a` @type ^`byte` := v1 @kind byte;
  #L5102be.  return @kind void;
}
procedure `kotlin.UByte` `box-impl`(`byte` v1 ) @signature `Lkotlin/UByte;.box-impl:(B)Lkotlin/UByte;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L510274.  v0:= new `kotlin.UByte`;
  #L510278.  call `<init>`(v0, v1) @signature `Lkotlin/UByte;.<init>:(B)V` @kind direct;
  #L51027e.  return v0 @kind object;
}
procedure `byte` `constructor-impl`(`byte` v0 ) @signature `Lkotlin/UByte;.constructor-impl:(B)B` @AccessFlag PUBLIC_STATIC {
    temp;

  #L51019c.  return v0;
}
procedure `boolean` `equals-impl`(`byte` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/UByte;.equals-impl:(BLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L51014c.  v0:= instanceof @variable v3 @type ^`kotlin.UByte` @kind boolean;
  #L510150.  v1:= 0I;
  #L510152.  if v0 != 0 then goto L510158;
  #L510156.  return v1;
  #L510158.  v3:= (`kotlin.UByte`) v3 @kind object;
  #L51015c.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/UByte;.unbox-impl:()B` @kind virtual;
  #L510162.  v3:= temp;
  #L510164.  if v2 == v3 then goto L51016a;
  #L510168.  return v1;
  #L51016a.  v2:= 1I;
  #L51016c.  return v2;
}
procedure `boolean` `equals-impl0`(`byte` v0 , `byte` v1 ) @signature `Lkotlin/UByte;.equals-impl0:(BB)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L510180.  if v0 != v1 then goto L510188;
  #L510184.  v0:= 1I;
  #L510186.  goto L51018a;
  #L510188.  v0:= 0I;
  #L51018a.  return v0;
}
procedure `void` `getData$annotations`() @signature `Lkotlin/UByte;.getData$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L5102d0.  return @kind void;
}
procedure `int` `hashCode-impl`(`byte` v0 ) @signature `Lkotlin/UByte;.hashCode-impl:(B)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L510220.  return v0;
}
procedure `java.lang.String` `toString-impl`(`byte` v0 ) @signature `Lkotlin/UByte;.toString-impl:(B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L510254.  v0:= v0 ^& 255;
  #L510258.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L51025e.  v0:= temp @kind object;
  #L510260.  return v0 @kind object;
}
procedure `int` `compareTo`(`kotlin.UByte` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/UByte;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L5101c8.  v2:= (`kotlin.UByte`) v2 @kind object;
  #L5101cc.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/UByte;.unbox-impl:()B` @kind virtual;
  #L5101d2.  v2:= temp;
  #L5101d4.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UByte;.unbox-impl:()B` @kind virtual;
  #L5101da.  v0:= temp;
  #L5101dc.  v0:= v0 ^& 255;
  #L5101e0.  v2:= v2 ^& 255;
  #L5101e4.  call temp:= `compare`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L5101ea.  v2:= temp;
  #L5101ec.  return v2;
}
procedure `boolean` `equals`(`kotlin.UByte` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/UByte;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L51012c.  v0:= v1.`kotlin.UByte.a` @type ^`byte` @kind byte;
  #L510130.  call temp:= `equals-impl`(v0, v2) @signature `Lkotlin/UByte;.equals-impl:(BLjava/lang/Object;)Z` @kind static;
  #L510136.  v2:= temp;
  #L510138.  return v2;
}
procedure `int` `hashCode`(`kotlin.UByte` v1 @kind this) @signature `Lkotlin/UByte;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510200.  v0:= v1.`kotlin.UByte.a` @type ^`byte` @kind byte;
  #L510204.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/UByte;.hashCode-impl:(B)I` @kind static;
  #L51020a.  v0:= temp;
  #L51020c.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.UByte` v1 @kind this) @signature `Lkotlin/UByte;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510234.  v0:= v1.`kotlin.UByte.a` @type ^`byte` @kind byte;
  #L510238.  call temp:= `toString-impl`(v0) @signature `Lkotlin/UByte;.toString-impl:(B)Ljava/lang/String;` @kind static;
  #L51023e.  v0:= temp @kind object;
  #L510240.  return v0 @kind object;
}
procedure `byte` `unbox-impl`(`kotlin.UByte` v1 @kind this) @signature `Lkotlin/UByte;.unbox-impl:()B` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L5101b0.  v0:= v1.`kotlin.UByte.a` @type ^`byte` @kind byte;
  #L5101b4.  return v0;
}
