record `kotlin.ULongArray` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Collection` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `long`[] `kotlin.ULongArray.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.ULongArray` v0 @kind this, `long`[] v1 @kind object) @signature `Lkotlin/ULongArray;.<init>:([J)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L511034.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L51103a.  v0.`kotlin.ULongArray.a` @type ^`long`[] := v1 @kind object;
  #L51103e.  return @kind void;
}
procedure `kotlin.ULongArray` `box-impl`(`long`[] v1 @kind object) @signature `Lkotlin/ULongArray;.box-impl:([J)Lkotlin/ULongArray;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L510fa4.  v0:= new `kotlin.ULongArray`;
  #L510fa8.  call `<init>`(v0, v1) @signature `Lkotlin/ULongArray;.<init>:([J)V` @kind direct;
  #L510fae.  return v0 @kind object;
}
procedure `long`[] `constructor-impl`(`int` v0 ) @signature `Lkotlin/ULongArray;.constructor-impl:(I)[J` @AccessFlag PUBLIC_STATIC {
    temp;

  #L510fe0.  v0:= new `long`[v0];
  #L510fe4.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULongArray;.constructor-impl:([J)[J` @kind static;
  #L510fea.  v0:= temp @kind object;
  #L510fec.  return v0 @kind object;
}
procedure `long`[] `constructor-impl`(`long`[] v1 @kind object) @signature `Lkotlin/ULongArray;.constructor-impl:([J)[J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L511000.  v0:= "storage" @kind object;
  #L511004.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51100a.  return v1 @kind object;
}
procedure `boolean` `contains-VKZWuLQ`(`long`[] v0 @kind object, `long` v1 ) @signature `Lkotlin/ULongArray;.contains-VKZWuLQ:([JJ)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L510c60.  call temp:= `contains`(v0, v1) @signature `Lkotlin/collections/ArraysKt;.contains:([JJ)Z` @kind static;
  #L510c66.  v0:= temp;
  #L510c68.  return v0;
}
procedure `boolean` `containsAll-impl`(`long`[] v5 @kind object, `java.util.Collection` v6 @kind object) @signature `Lkotlin/ULongArray;.containsAll-impl:([JLjava/util/Collection;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L510ca4.  v0:= "elements" @kind object;
  #L510ca8.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L510cae.  call temp:= `isEmpty`(v6) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L510cb4.  v0:= temp;
  #L510cb6.  v1:= 0I;
  #L510cb8.  v2:= 1I;
  #L510cba.  if v0 == 0 then goto L510cc2;
  #L510cbe.  v1:= 1I;
  #L510cc0.  goto L510d08;
  #L510cc2.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L510cc8.  v6:= temp @kind object;
  #L510cca.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L510cd0.  v0:= temp;
  #L510cd2.  if v0 == 0 then goto L510cbe;
  #L510cd6.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L510cdc.  v0:= temp @kind object;
  #L510cde.  v3:= instanceof @variable v0 @type ^`kotlin.ULong` @kind boolean;
  #L510ce2.  if v3 == 0 then goto L510d02;
  #L510ce6.  v0:= (`kotlin.ULong`) v0 @kind object;
  #L510cea.  call temp:= `unbox-impl`(v0) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L510cf0.  v3:= temp @kind wide;
  #L510cf2.  call temp:= `contains`(v5, v3) @signature `Lkotlin/collections/ArraysKt;.contains:([JJ)Z` @kind static;
  #L510cf8.  v0:= temp;
  #L510cfa.  if v0 == 0 then goto L510d02;
  #L510cfe.  v0:= 1I;
  #L510d00.  goto L510d04;
  #L510d02.  v0:= 0I;
  #L510d04.  if v0 != 0 then goto L510cca;
  #L510d08.  return v1;
}
procedure `boolean` `equals-impl`(`long`[] v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ULongArray;.equals-impl:([JLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L510d3c.  v0:= instanceof @variable v3 @type ^`kotlin.ULongArray` @kind boolean;
  #L510d40.  v1:= 0I;
  #L510d42.  if v0 != 0 then goto L510d48;
  #L510d46.  return v1;
  #L510d48.  v3:= (`kotlin.ULongArray`) v3 @kind object;
  #L510d4c.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/ULongArray;.unbox-impl:()[J` @kind virtual;
  #L510d52.  v3:= temp @kind object;
  #L510d54.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L510d5a.  v2:= temp;
  #L510d5c.  if v2 != 0 then goto L510d62;
  #L510d60.  return v1;
  #L510d62.  v2:= 1I;
  #L510d64.  return v2;
}
procedure `boolean` `equals-impl0`(`long`[] v0 @kind object, `long`[] v1 @kind object) @signature `Lkotlin/ULongArray;.equals-impl0:([J[J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L510d78.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L510d7e.  v0:= temp;
  #L510d80.  return v0;
}
procedure `long` `get-s-VKNKU`(`long`[] v2 @kind object, `int` v3 ) @signature `Lkotlin/ULongArray;.get-s-VKNKU:([JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L510fc0.  v0:= v2[v3] @kind wide;
  #L510fc4.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L510fca.  v2:= temp @kind wide;
  #L510fcc.  return v2 @kind wide;
}
procedure `int` `getSize-impl`(`long`[] v0 @kind object) @signature `Lkotlin/ULongArray;.getSize-impl:([J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L510e54.  v0:= length @variable v0;
  #L510e56.  return v0;
}
procedure `void` `getStorage$annotations`() @signature `Lkotlin/ULongArray;.getStorage$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L511070.  return @kind void;
}
procedure `int` `hashCode-impl`(`long`[] v0 @kind object) @signature `Lkotlin/ULongArray;.hashCode-impl:([J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L510e88.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([J)I` @kind static;
  #L510e8e.  v0:= temp;
  #L510e90.  return v0;
}
procedure `boolean` `isEmpty-impl`(`long`[] v0 @kind object) @signature `Lkotlin/ULongArray;.isEmpty-impl:([J)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L510db4.  v0:= length @variable v0;
  #L510db6.  if v0 != 0 then goto L510dbe;
  #L510dba.  v0:= 1I;
  #L510dbc.  goto L510dc0;
  #L510dbe.  v0:= 0I;
  #L510dc0.  return v0;
}
procedure `java.util.Iterator` `iterator-impl`(`long`[] v1 @kind object) @signature `Lkotlin/ULongArray;.iterator-impl:([J)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L510f88.  v0:= new `kotlin.ULongArray$a`;
  #L510f8c.  call `<init>`(v0, v1) @signature `Lkotlin/ULongArray$a;.<init>:([J)V` @kind direct;
  #L510f92.  return v0 @kind object;
}
procedure `void` `set-k8EXiF4`(`long`[] v0 @kind object, `int` v1 , `long` v2 ) @signature `Lkotlin/ULongArray;.set-k8EXiF4:([JIJ)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L511084.  v0[v1]:= v2 @kind wide;
  #L511088.  return @kind void;
}
procedure `java.lang.String` `toString-impl`(`long`[] v2 @kind object) @signature `Lkotlin/ULongArray;.toString-impl:([J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L510f20.  v0:= new `java.lang.StringBuilder`;
  #L510f24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L510f2a.  v1:= "ULongArray(storage=" @kind object;
  #L510f2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L510f34.  call temp:= `toString`(v2) @signature `Ljava/util/Arrays;.toString:([J)Ljava/lang/String;` @kind static;
  #L510f3a.  v2:= temp @kind object;
  #L510f3c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L510f42.  v2:= 41I;
  #L510f46.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L510f4c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L510f52.  v2:= temp @kind object;
  #L510f54.  return v2 @kind object;
}
procedure `boolean` `add`(`kotlin.ULongArray` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/ULongArray;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L510bac.  v2:= new `java.lang.UnsupportedOperationException`;
  #L510bb0.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L510bb4.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L510bba.  throw v2;
}
procedure `boolean` `add-VKZWuLQ`(`kotlin.ULongArray` v0 @kind this, `long` v1 ) @signature `Lkotlin/ULongArray;.add-VKZWuLQ:(J)Z` @AccessFlag PUBLIC {
    temp;

  #L510bcc.  v1:= new `java.lang.UnsupportedOperationException`;
  #L510bd0.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L510bd4.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L510bda.  throw v1;
}
procedure `boolean` `addAll`(`kotlin.ULongArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/ULongArray;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510bec.  v2:= new `java.lang.UnsupportedOperationException`;
  #L510bf0.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L510bf4.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L510bfa.  throw v2;
}
procedure `void` `clear`(`kotlin.ULongArray` v2 @kind this) @signature `Lkotlin/ULongArray;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L511050.  v0:= new `java.lang.UnsupportedOperationException`;
  #L511054.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L511058.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L51105e.  throw v0;
}
procedure `boolean` `contains`(`kotlin.ULongArray` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ULongArray;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L510c0c.  v0:= instanceof @variable v3 @type ^`kotlin.ULong` @kind boolean;
  #L510c10.  if v0 != 0 then goto L510c18;
  #L510c14.  v3:= 0I;
  #L510c16.  return v3;
  #L510c18.  v3:= (`kotlin.ULong`) v3 @kind object;
  #L510c1c.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L510c22.  v0:= temp @kind wide;
  #L510c24.  call temp:= `contains-VKZWuLQ`(v2, v0) @signature `Lkotlin/ULongArray;.contains-VKZWuLQ:(J)Z` @kind virtual;
  #L510c2a.  v3:= temp;
  #L510c2c.  return v3;
}
procedure `boolean` `contains-VKZWuLQ`(`kotlin.ULongArray` v1 @kind this, `long` v2 ) @signature `Lkotlin/ULongArray;.contains-VKZWuLQ:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510c40.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L510c44.  call temp:= `contains-VKZWuLQ`(v0, v2) @signature `Lkotlin/ULongArray;.contains-VKZWuLQ:([JJ)Z` @kind static;
  #L510c4a.  v2:= temp;
  #L510c4c.  return v2;
}
procedure `boolean` `containsAll`(`kotlin.ULongArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/ULongArray;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510c7c.  v0:= "elements" @kind object;
  #L510c80.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L510c86.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L510c8a.  call temp:= `containsAll-impl`(v0, v2) @signature `Lkotlin/ULongArray;.containsAll-impl:([JLjava/util/Collection;)Z` @kind static;
  #L510c90.  v2:= temp;
  #L510c92.  return v2;
}
procedure `boolean` `equals`(`kotlin.ULongArray` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/ULongArray;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510d1c.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L510d20.  call temp:= `equals-impl`(v0, v2) @signature `Lkotlin/ULongArray;.equals-impl:([JLjava/lang/Object;)Z` @kind static;
  #L510d26.  v2:= temp;
  #L510d28.  return v2;
}
procedure `int` `getSize`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510e34.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L510e38.  call temp:= `getSize-impl`(v0) @signature `Lkotlin/ULongArray;.getSize-impl:([J)I` @kind static;
  #L510e3e.  v0:= temp;
  #L510e40.  return v0;
}
procedure `int` `hashCode`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510e68.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L510e6c.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/ULongArray;.hashCode-impl:([J)I` @kind static;
  #L510e72.  v0:= temp;
  #L510e74.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510d94.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L510d98.  call temp:= `isEmpty-impl`(v0) @signature `Lkotlin/ULongArray;.isEmpty-impl:([J)Z` @kind static;
  #L510d9e.  v0:= temp;
  #L510da0.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510f68.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L510f6c.  call temp:= `iterator-impl`(v0) @signature `Lkotlin/ULongArray;.iterator-impl:([J)Ljava/util/Iterator;` @kind static;
  #L510f72.  v0:= temp @kind object;
  #L510f74.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.ULongArray` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/ULongArray;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510dd4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L510dd8.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L510ddc.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L510de2.  throw v2;
}
procedure `boolean` `removeAll`(`kotlin.ULongArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/ULongArray;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510df4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L510df8.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L510dfc.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L510e02.  throw v2;
}
procedure `boolean` `retainAll`(`kotlin.ULongArray` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/ULongArray;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510e14.  v2:= new `java.lang.UnsupportedOperationException`;
  #L510e18.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L510e1c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L510e22.  throw v2;
}
procedure `int` `size`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.size:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L510ea4.  call temp:= `getSize`(v1) @signature `Lkotlin/ULongArray;.getSize:()I` @kind virtual;
  #L510eaa.  v0:= temp;
  #L510eac.  return v0;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510ec0.  call temp:= `toArray`(v1) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;)[Ljava/lang/Object;` @kind static;
  #L510ec6.  v0:= temp @kind object;
  #L510ec8.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.ULongArray` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/ULongArray;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510edc.  v0:= "array" @kind object;
  #L510ee0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L510ee6.  call temp:= `toArray`(v1, v2) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L510eec.  v2:= temp @kind object;
  #L510eee.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L510f00.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L510f04.  call temp:= `toString-impl`(v0) @signature `Lkotlin/ULongArray;.toString-impl:([J)Ljava/lang/String;` @kind static;
  #L510f0a.  v0:= temp @kind object;
  #L510f0c.  return v0 @kind object;
}
procedure `long`[] `unbox-impl`(`kotlin.ULongArray` v1 @kind this) @signature `Lkotlin/ULongArray;.unbox-impl:()[J` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L51101c.  v0:= v1.`kotlin.ULongArray.a` @type ^`long`[] @kind object;
  #L511020.  return v0 @kind object;
}
