record `kotlin.DeepRecursiveScopeImpl` @kind class @AccessFlag FINAL extends `kotlin.DeepRecursiveScope` @kind class, `kotlin.coroutines.Continuation` @kind interface {
  `kotlin.jvm.functions.Function3` `kotlin.DeepRecursiveScopeImpl.a` @AccessFlag PRIVATE;
  `java.lang.Object` `kotlin.DeepRecursiveScopeImpl.b` @AccessFlag PRIVATE;
  `kotlin.coroutines.Continuation` `kotlin.DeepRecursiveScopeImpl.c` @AccessFlag PRIVATE;
  `java.lang.Object` `kotlin.DeepRecursiveScopeImpl.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this, `kotlin.jvm.functions.Function3` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.<init>:(Lkotlin/jvm/functions/Function3;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L50e028.  v0:= "block" @kind object;
  #L50e02c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50e032.  v0:= 0I;
  #L50e034.  call `<init>`(v1, v0) @signature `Lkotlin/DeepRecursiveScope;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L50e03a.  v1.`kotlin.DeepRecursiveScopeImpl.a` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L50e03e.  v1.`kotlin.DeepRecursiveScopeImpl.b` @type ^`java.lang.Object` := v3 @kind object;
  #L50e042.  v2:= "null cannot be cast to non-null type kotlin.coroutines.Continuation<kotlin.Any?>" @kind object;
  #L50e046.  call `checkNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50e04c.  v1.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L50e050.  call temp:= `access$getUNDEFINED_RESULT$p`() @signature `Lkotlin/DeepRecursiveKt;.access$getUNDEFINED_RESULT$p:()Ljava/lang/Object;` @kind static;
  #L50e056.  v2:= temp @kind object;
  #L50e058.  v1.`kotlin.DeepRecursiveScopeImpl.d` @type ^`java.lang.Object` := v2 @kind object;
  #L50e05c.  return @kind void;
}
procedure `void` `a`(`kotlin.DeepRecursiveScopeImpl` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.a:(Lkotlin/DeepRecursiveScopeImpl;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L50e070.  v0.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L50e074.  return @kind void;
}
procedure `void` `b`(`kotlin.DeepRecursiveScopeImpl` v0 @kind object, `kotlin.jvm.functions.Function3` v1 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.b:(Lkotlin/DeepRecursiveScopeImpl;Lkotlin/jvm/functions/Function3;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L50e088.  v0.`kotlin.DeepRecursiveScopeImpl.a` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L50e08c.  return @kind void;
}
procedure `void` `c`(`kotlin.DeepRecursiveScopeImpl` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.c:(Lkotlin/DeepRecursiveScopeImpl;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L50e0a0.  v0.`kotlin.DeepRecursiveScopeImpl.d` @type ^`java.lang.Object` := v1 @kind object;
  #L50e0a4.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `d`(`kotlin.DeepRecursiveScopeImpl` v2 @kind this, `kotlin.jvm.functions.Function3` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.d:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L50dff0.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L50dff4.  v1:= new `kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1`;
  #L50dff8.  call `<init>`(v1, v0, v2, v3, v4) @signature `Lkotlin/DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/DeepRecursiveScopeImpl;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L50dffe.  return v1 @kind object;
}
procedure `java.lang.Object` `callRecursive`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.callRecursive:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50de80.  v0:= "null cannot be cast to non-null type kotlin.coroutines.Continuation<kotlin.Any?>" @kind object;
  #L50de84.  call `checkNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50de8a.  v1.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v3 @kind object;
  #L50de8e.  v1.`kotlin.DeepRecursiveScopeImpl.b` @type ^`java.lang.Object` := v2 @kind object;
  #L50de92.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L50de98.  v2:= temp @kind object;
  #L50de9a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L50dea0.  v0:= temp @kind object;
  #L50dea2.  if v2 != v0 then goto L50deac;
  #L50dea6.  call `probeCoroutineSuspended`(v3) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L50deac.  return v2 @kind object;
}
procedure `java.lang.Object` `callRecursive`(`kotlin.DeepRecursiveScopeImpl` v2 @kind this, `kotlin.DeepRecursiveFunction` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.callRecursive:(Lkotlin/DeepRecursiveFunction;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50dec0.  call temp:= `getBlock$kotlin_stdlib`(v3) @signature `Lkotlin/DeepRecursiveFunction;.getBlock$kotlin_stdlib:()Lkotlin/jvm/functions/Function3;` @kind virtual;
  #L50dec6.  v3:= temp @kind object;
  #L50dec8.  v0:= "null cannot be cast to non-null type @[ExtensionFunctionType] kotlin.coroutines.SuspendFunction2<kotlin.DeepRecursiveScope<*, *>, kotlin.Any?, kotlin.Any?>{ kotlin.DeepRecursiveKt.DeepRecursiveFunctionBlock }" @kind object;
  #L50decc.  call `checkNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50ded2.  v0:= v2.`kotlin.DeepRecursiveScopeImpl.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L50ded6.  v1:= "null cannot be cast to non-null type kotlin.coroutines.Continuation<kotlin.Any?>" @kind object;
  #L50deda.  if v3 == v0 then goto L50def6;
  #L50dede.  v2.`kotlin.DeepRecursiveScopeImpl.a` @type ^`kotlin.jvm.functions.Function3` := v3 @kind object;
  #L50dee2.  call `checkNotNull`(v5, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50dee8.  call temp:= `d`(v2, v0, v5) @signature `Lkotlin/DeepRecursiveScopeImpl;.d:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind direct;
  #L50deee.  v3:= temp @kind object;
  #L50def0.  v2.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v3 @kind object;
  #L50def4.  goto L50df00;
  #L50def6.  call `checkNotNull`(v5, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50defc.  v2.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v5 @kind object;
  #L50df00.  v2.`kotlin.DeepRecursiveScopeImpl.b` @type ^`java.lang.Object` := v4 @kind object;
  #L50df04.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L50df0a.  v3:= temp @kind object;
  #L50df0c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L50df12.  v4:= temp @kind object;
  #L50df14.  if v3 != v4 then goto L50df1e;
  #L50df18.  call `probeCoroutineSuspended`(v5) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L50df1e.  return v3 @kind object;
}
procedure `java.lang.Object` `e`(`kotlin.DeepRecursiveScopeImpl` v4 @kind this) @signature `Lkotlin/DeepRecursiveScopeImpl;.e:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L50df30.  v0:= v4.`kotlin.DeepRecursiveScopeImpl.d` @type ^`java.lang.Object` @kind object;
  #L50df34.  v1:= v4.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L50df38.  if v1 != 0 then goto L50df44;
  #L50df3c.  call `throwOnFailure`(v0) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L50df42.  return v0 @kind object;
  #L50df44.  call temp:= `access$getUNDEFINED_RESULT$p`() @signature `Lkotlin/DeepRecursiveKt;.access$getUNDEFINED_RESULT$p:()Ljava/lang/Object;` @kind static;
  #L50df4a.  v2:= temp @kind object;
  #L50df4c.  call temp:= `equals-impl0`(v2, v0) @signature `Lkotlin/Result;.equals-impl0:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L50df52.  v2:= temp;
  #L50df54.  if v2 == 0 then goto L50dfbe;
  #L50df58.  v0:= v4.`kotlin.DeepRecursiveScopeImpl.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L50df5c.  v2:= v4.`kotlin.DeepRecursiveScopeImpl.b` @type ^`java.lang.Object` @kind object;
  #L50df60.  v3:= "null cannot be cast to non-null type kotlin.Function3<R of kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.startCoroutineUninterceptedOrReturn, P of kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.startCoroutineUninterceptedOrReturn, kotlin.coroutines.Continuation<T of kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.startCoroutineUninterceptedOrReturn>, kotlin.Any?>" @kind object;
  #L50df64.  call `checkNotNull`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50df6a.  v3:= 3I;
  #L50df6c.  call temp:= `beforeCheckcastToFunctionOfArity`(v0, v3) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L50df72.  v0:= temp @kind object;
  #L50df74.  v0:= (`kotlin.jvm.functions.Function3`) v0 @kind object;
  #L50df78.  call temp:= `invoke`(v0, v4, v2, v1) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L50df7e.  v0:= temp @kind object;
  #L50df80.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L50df86.  v2:= temp @kind object;
  #L50df88.  if v0 == v2 then goto L50df30;
  #L50df8c.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L50df90.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L50df96.  v0:= temp @kind object;
  #L50df98.  call `resumeWith`(v1, v0) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L50df9e.  goto L50df30;
  #L50dfa0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L50dfa2.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L50dfa6.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L50dfac.  v0:= temp @kind object;
  #L50dfae.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L50dfb4.  v0:= temp @kind object;
  #L50dfb6.  call `resumeWith`(v1, v0) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L50dfbc.  goto L50df30;
  #L50dfbe.  call temp:= `access$getUNDEFINED_RESULT$p`() @signature `Lkotlin/DeepRecursiveKt;.access$getUNDEFINED_RESULT$p:()Ljava/lang/Object;` @kind static;
  #L50dfc4.  v2:= temp @kind object;
  #L50dfc6.  v4.`kotlin.DeepRecursiveScopeImpl.d` @type ^`java.lang.Object` := v2 @kind object;
  #L50dfca.  call `resumeWith`(v1, v0) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L50dfd0.  goto L50df30;
  catch `java.lang.Throwable` @[L50df58..L50df80] goto L50dfa0;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this) @signature `Lkotlin/DeepRecursiveScopeImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50e010.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L50e014.  return v0 @kind object;
}
procedure `void` `resumeWith`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50e0b8.  v0:= 0I;
  #L50e0ba.  v1.`kotlin.DeepRecursiveScopeImpl.c` @type ^`kotlin.coroutines.Continuation` := v0 @kind object;
  #L50e0be.  v1.`kotlin.DeepRecursiveScopeImpl.d` @type ^`java.lang.Object` := v2 @kind object;
  #L50e0c2.  return @kind void;
}
