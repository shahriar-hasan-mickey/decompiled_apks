record `kotlin.LazyKt__LazyJVMKt$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.LazyKt__LazyJVMKt$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/LazyKt__LazyJVMKt$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L50e8c4.  call temp:= `values`() @signature `Lkotlin/LazyThreadSafetyMode;.values:()[Lkotlin/LazyThreadSafetyMode;` @kind static;
  #L50e8ca.  v0:= temp @kind object;
  #L50e8cc.  v0:= length @variable v0;
  #L50e8ce.  v0:= new `int`[v0];
  #L50e8d2.  v1:= `@@kotlin.LazyThreadSafetyMode.SYNCHRONIZED` @type ^`kotlin.LazyThreadSafetyMode` @kind object;
  #L50e8d6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L50e8dc.  v1:= temp;
  #L50e8de.  v2:= 1I;
  #L50e8e0.  v0[v1]:= v2;
  #L50e8e4.  v1:= `@@kotlin.LazyThreadSafetyMode.PUBLICATION` @type ^`kotlin.LazyThreadSafetyMode` @kind object;
  #L50e8e8.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L50e8ee.  v1:= temp;
  #L50e8f0.  v2:= 2I;
  #L50e8f2.  v0[v1]:= v2;
  #L50e8f6.  v1:= `@@kotlin.LazyThreadSafetyMode.NONE` @type ^`kotlin.LazyThreadSafetyMode` @kind object;
  #L50e8fa.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L50e900.  v1:= temp;
  #L50e902.  v2:= 3I;
  #L50e904.  v0[v1]:= v2;
  #L50e908.  `@@kotlin.LazyKt__LazyJVMKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L50e90c.  return @kind void;
}
