record `kotlin.LazyKt__LazyJVMKt` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.LazyKt__LazyJVMKt` v0 @kind this) @signature `Lkotlin/LazyKt__LazyJVMKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L50e9ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50e9f2.  return @kind void;
}
procedure `kotlin.Lazy` `lazy`(`java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/LazyKt__LazyJVMKt;.lazy:(Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L50e920.  v0:= "initializer" @kind object;
  #L50e924.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50e92a.  v0:= new `kotlin.m`;
  #L50e92e.  call `<init>`(v0, v2, v1) @signature `Lkotlin/m;.<init>:(Lkotlin/jvm/functions/Function0;Ljava/lang/Object;)V` @kind direct;
  #L50e934.  return v0 @kind object;
}
procedure `kotlin.Lazy` `lazy`(`kotlin.LazyThreadSafetyMode` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlin/LazyKt__LazyJVMKt;.lazy:(Lkotlin/LazyThreadSafetyMode;Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L50e948.  v0:= "mode" @kind object;
  #L50e94c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50e952.  v0:= "initializer" @kind object;
  #L50e956.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50e95c.  v0:= `@@kotlin.LazyKt__LazyJVMKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L50e960.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L50e966.  v2:= temp;
  #L50e968.  v2:= v0[v2];
  #L50e96c.  v0:= 1I;
  #L50e96e.  v1:= 2I;
  #L50e970.  if v2 == v0 then goto L50e9a2;
  #L50e974.  if v2 == v1 then goto L50e996;
  #L50e978.  v0:= 3I;
  #L50e97a.  if v2 != v0 then goto L50e98a;
  #L50e97e.  v2:= new `kotlin.UnsafeLazyImpl`;
  #L50e982.  call `<init>`(v2, v3) @signature `Lkotlin/UnsafeLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L50e988.  goto L50e9ae;
  #L50e98a.  v2:= new `kotlin.NoWhenBranchMatchedException`;
  #L50e98e.  call `<init>`(v2) @signature `Lkotlin/NoWhenBranchMatchedException;.<init>:()V` @kind direct;
  #L50e994.  throw v2;
  #L50e996.  v2:= new `kotlin.SafePublicationLazyImpl`;
  #L50e99a.  call `<init>`(v2, v3) @signature `Lkotlin/SafePublicationLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L50e9a0.  goto L50e9ae;
  #L50e9a2.  v2:= new `kotlin.m`;
  #L50e9a6.  v0:= 0I;
  #L50e9a8.  call `<init>`(v2, v3, v0, v1, v0) @signature `Lkotlin/m;.<init>:(Lkotlin/jvm/functions/Function0;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L50e9ae.  return v2 @kind object;
}
procedure `kotlin.Lazy` `lazy`(`kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlin/LazyKt__LazyJVMKt;.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L50e9c0.  v0:= "initializer" @kind object;
  #L50e9c4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50e9ca.  v0:= new `kotlin.m`;
  #L50e9ce.  v1:= 0I;
  #L50e9d0.  v2:= 2I;
  #L50e9d2.  call `<init>`(v0, v3, v1, v2, v1) @signature `Lkotlin/m;.<init>:(Lkotlin/jvm/functions/Function0;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L50e9d8.  return v0 @kind object;
}
