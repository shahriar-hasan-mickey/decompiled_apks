record `kotlin.UnsafeLazyImpl` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.Lazy` @kind interface, `java.io.Serializable` @kind interface {
  `kotlin.jvm.functions.Function0` `kotlin.UnsafeLazyImpl.a` @AccessFlag PRIVATE;
  `java.lang.Object` `kotlin.UnsafeLazyImpl.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.UnsafeLazyImpl` v1 @kind this, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/UnsafeLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L511bbc.  v0:= "initializer" @kind object;
  #L511bc0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L511bc6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L511bcc.  v1.`kotlin.UnsafeLazyImpl.a` @type ^`kotlin.jvm.functions.Function0` := v2 @kind object;
  #L511bd0.  v2:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L511bd4.  v1.`kotlin.UnsafeLazyImpl.b` @type ^`java.lang.Object` := v2 @kind object;
  #L511bd8.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.UnsafeLazyImpl` v2 @kind this) @signature `Lkotlin/UnsafeLazyImpl;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L511b64.  v0:= new `kotlin.InitializedLazyImpl`;
  #L511b68.  call temp:= `getValue`(v2) @signature `Lkotlin/UnsafeLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L511b6e.  v1:= temp @kind object;
  #L511b70.  call `<init>`(v0, v1) @signature `Lkotlin/InitializedLazyImpl;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L511b76.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`kotlin.UnsafeLazyImpl` v2 @kind this) @signature `Lkotlin/UnsafeLazyImpl;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L511b24.  v0:= v2.`kotlin.UnsafeLazyImpl.b` @type ^`java.lang.Object` @kind object;
  #L511b28.  v1:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L511b2c.  if v0 != v1 then goto L511b4c;
  #L511b30.  v0:= v2.`kotlin.UnsafeLazyImpl.a` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L511b34.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L511b3a.  call temp:= `invoke`(v0) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L511b40.  v0:= temp @kind object;
  #L511b42.  v2.`kotlin.UnsafeLazyImpl.b` @type ^`java.lang.Object` := v0 @kind object;
  #L511b46.  v0:= 0I;
  #L511b48.  v2.`kotlin.UnsafeLazyImpl.a` @type ^`kotlin.jvm.functions.Function0` := v0 @kind object;
  #L511b4c.  v0:= v2.`kotlin.UnsafeLazyImpl.b` @type ^`java.lang.Object` @kind object;
  #L511b50.  return v0 @kind object;
}
procedure `boolean` `isInitialized`(`kotlin.UnsafeLazyImpl` v2 @kind this) @signature `Lkotlin/UnsafeLazyImpl;.isInitialized:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L511b00.  v0:= v2.`kotlin.UnsafeLazyImpl.b` @type ^`java.lang.Object` @kind object;
  #L511b04.  v1:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L511b08.  if v0 == v1 then goto L511b10;
  #L511b0c.  v0:= 1I;
  #L511b0e.  goto L511b12;
  #L511b10.  v0:= 0I;
  #L511b12.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.UnsafeLazyImpl` v1 @kind this) @signature `Lkotlin/UnsafeLazyImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L511b88.  call temp:= `isInitialized`(v1) @signature `Lkotlin/UnsafeLazyImpl;.isInitialized:()Z` @kind virtual;
  #L511b8e.  v0:= temp;
  #L511b90.  if v0 == 0 then goto L511ba6;
  #L511b94.  call temp:= `getValue`(v1) @signature `Lkotlin/UnsafeLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L511b9a.  v0:= temp @kind object;
  #L511b9c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L511ba2.  v0:= temp @kind object;
  #L511ba4.  goto L511baa;
  #L511ba6.  v0:= "Lazy value not initialized yet." @kind object;
  #L511baa.  return v0 @kind object;
}
