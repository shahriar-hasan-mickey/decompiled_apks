record `kotlin.Result$Failure` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `java.lang.Throwable` `kotlin.Result$Failure.exception` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlin.Result$Failure` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlin/Result$Failure;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L50f140.  v0:= "exception" @kind object;
  #L50f144.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50f14a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50f150.  v1.`kotlin.Result$Failure.exception` @type ^`java.lang.Throwable` := v2 @kind object;
  #L50f154.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.Result$Failure` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/Result$Failure;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50f0a4.  v0:= instanceof @variable v2 @type ^`kotlin.Result$Failure` @kind boolean;
  #L50f0a8.  if v0 == 0 then goto L50f0c8;
  #L50f0ac.  v0:= v1.`kotlin.Result$Failure.exception` @type ^`java.lang.Throwable` @kind object;
  #L50f0b0.  v2:= (`kotlin.Result$Failure`) v2 @kind object;
  #L50f0b4.  v2:= v2.`kotlin.Result$Failure.exception` @type ^`java.lang.Throwable` @kind object;
  #L50f0b8.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L50f0be.  v2:= temp;
  #L50f0c0.  if v2 == 0 then goto L50f0c8;
  #L50f0c4.  v2:= 1I;
  #L50f0c6.  goto L50f0ca;
  #L50f0c8.  v2:= 0I;
  #L50f0ca.  return v2;
}
procedure `int` `hashCode`(`kotlin.Result$Failure` v1 @kind this) @signature `Lkotlin/Result$Failure;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50f0dc.  v0:= v1.`kotlin.Result$Failure.exception` @type ^`java.lang.Throwable` @kind object;
  #L50f0e0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Throwable;.hashCode:()I` @kind virtual;
  #L50f0e6.  v0:= temp;
  #L50f0e8.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.Result$Failure` v2 @kind this) @signature `Lkotlin/Result$Failure;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50f0fc.  v0:= new `java.lang.StringBuilder`;
  #L50f100.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50f106.  v1:= "Failure(" @kind object;
  #L50f10a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50f110.  v1:= v2.`kotlin.Result$Failure.exception` @type ^`java.lang.Throwable` @kind object;
  #L50f114.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50f11a.  v1:= 41I;
  #L50f11e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L50f124.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50f12a.  v0:= temp @kind object;
  #L50f12c.  return v0 @kind object;
}
