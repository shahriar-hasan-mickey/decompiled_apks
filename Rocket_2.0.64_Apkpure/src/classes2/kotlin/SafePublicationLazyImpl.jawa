record `kotlin.SafePublicationLazyImpl` @kind class @AccessFlag FINAL extends `kotlin.Lazy` @kind interface, `java.io.Serializable` @kind interface {
  `kotlin.jvm.functions.Function0` `kotlin.SafePublicationLazyImpl.a` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `kotlin.SafePublicationLazyImpl.b` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `kotlin.SafePublicationLazyImpl.c` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.SafePublicationLazyImpl$Companion` `@@kotlin.SafePublicationLazyImpl.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlin.SafePublicationLazyImpl.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/SafePublicationLazyImpl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L50f4d4.  v0:= new `kotlin.SafePublicationLazyImpl$Companion`;
  #L50f4d8.  v1:= 0I;
  #L50f4da.  call `<init>`(v0, v1) @signature `Lkotlin/SafePublicationLazyImpl$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L50f4e0.  `@@kotlin.SafePublicationLazyImpl.d` @type ^`kotlin.SafePublicationLazyImpl$Companion` := v0 @kind object;
  #L50f4e4.  v0:= constclass @type ^`kotlin.SafePublicationLazyImpl` @kind object;
  #L50f4e8.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L50f4ec.  v2:= "b" @kind object;
  #L50f4f0.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L50f4f6.  v0:= temp @kind object;
  #L50f4f8.  `@@kotlin.SafePublicationLazyImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L50f4fc.  return @kind void;
}
procedure `void` `<init>`(`kotlin.SafePublicationLazyImpl` v1 @kind this, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/SafePublicationLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L50f510.  v0:= "initializer" @kind object;
  #L50f514.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50f51a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50f520.  v1.`kotlin.SafePublicationLazyImpl.a` @type ^`kotlin.jvm.functions.Function0` := v2 @kind object;
  #L50f524.  v2:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L50f528.  v1.`kotlin.SafePublicationLazyImpl.b` @type ^`java.lang.Object` := v2 @kind object;
  #L50f52c.  v1.`kotlin.SafePublicationLazyImpl.c` @type ^`java.lang.Object` := v2 @kind object;
  #L50f530.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.SafePublicationLazyImpl` v2 @kind this) @signature `Lkotlin/SafePublicationLazyImpl;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L50f47c.  v0:= new `kotlin.InitializedLazyImpl`;
  #L50f480.  call temp:= `getValue`(v2) @signature `Lkotlin/SafePublicationLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L50f486.  v1:= temp @kind object;
  #L50f488.  call `<init>`(v0, v1) @signature `Lkotlin/InitializedLazyImpl;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L50f48e.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`kotlin.SafePublicationLazyImpl` v3 @kind this) @signature `Lkotlin/SafePublicationLazyImpl;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L50f430.  v0:= v3.`kotlin.SafePublicationLazyImpl.b` @type ^`java.lang.Object` @kind object;
  #L50f434.  v1:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L50f438.  if v0 == v1 then goto L50f43e;
  #L50f43c.  return v0 @kind object;
  #L50f43e.  v0:= v3.`kotlin.SafePublicationLazyImpl.a` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L50f442.  if v0 == 0 then goto L50f466;
  #L50f446.  call temp:= `invoke`(v0) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L50f44c.  v0:= temp @kind object;
  #L50f44e.  v2:= `@@kotlin.SafePublicationLazyImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L50f452.  call temp:= `a`(v2, v3, v1, v0) @signature `Landroidx/concurrent/futures/a;.a:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L50f458.  v1:= temp;
  #L50f45a.  if v1 == 0 then goto L50f466;
  #L50f45e.  v1:= 0I;
  #L50f460.  v3.`kotlin.SafePublicationLazyImpl.a` @type ^`kotlin.jvm.functions.Function0` := v1 @kind object;
  #L50f464.  return v0 @kind object;
  #L50f466.  v0:= v3.`kotlin.SafePublicationLazyImpl.b` @type ^`java.lang.Object` @kind object;
  #L50f46a.  return v0 @kind object;
}
procedure `boolean` `isInitialized`(`kotlin.SafePublicationLazyImpl` v2 @kind this) @signature `Lkotlin/SafePublicationLazyImpl;.isInitialized:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50f40c.  v0:= v2.`kotlin.SafePublicationLazyImpl.b` @type ^`java.lang.Object` @kind object;
  #L50f410.  v1:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L50f414.  if v0 == v1 then goto L50f41c;
  #L50f418.  v0:= 1I;
  #L50f41a.  goto L50f41e;
  #L50f41c.  v0:= 0I;
  #L50f41e.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.SafePublicationLazyImpl` v1 @kind this) @signature `Lkotlin/SafePublicationLazyImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50f4a0.  call temp:= `isInitialized`(v1) @signature `Lkotlin/SafePublicationLazyImpl;.isInitialized:()Z` @kind virtual;
  #L50f4a6.  v0:= temp;
  #L50f4a8.  if v0 == 0 then goto L50f4be;
  #L50f4ac.  call temp:= `getValue`(v1) @signature `Lkotlin/SafePublicationLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L50f4b2.  v0:= temp @kind object;
  #L50f4b4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L50f4ba.  v0:= temp @kind object;
  #L50f4bc.  goto L50f4c2;
  #L50f4be.  v0:= "Lazy value not initialized yet." @kind object;
  #L50f4c2.  return v0 @kind object;
}
