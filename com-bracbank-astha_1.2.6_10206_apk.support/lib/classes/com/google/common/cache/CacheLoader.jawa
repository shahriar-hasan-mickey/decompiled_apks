record `com.google.common.cache.CacheLoader` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.google.common.cache.CacheLoader` v0 @kind this) @signature `Lcom/google/common/cache/CacheLoader;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.cache.CacheLoader` `asyncReloading`(`com.google.common.cache.CacheLoader` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/common/cache/CacheLoader;.asyncReloading:(Lcom/google/common/cache/CacheLoader;Ljava/util/concurrent/Executor;)Lcom/google/common/cache/CacheLoader;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.cache.CacheLoader` `from`(`com.google.common.base.Function` v1 @kind object) @signature `Lcom/google/common/cache/CacheLoader;.from:(Lcom/google/common/base/Function;)Lcom/google/common/cache/CacheLoader;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.cache.CacheLoader` `from`(`com.google.common.base.Supplier` v1 @kind object) @signature `Lcom/google/common/cache/CacheLoader;.from:(Lcom/google/common/base/Supplier;)Lcom/google/common/cache/CacheLoader;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `load`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/cache/CacheLoader;.load:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `loadAll`(`com.google.common.cache.CacheLoader` v0 @kind this, `java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/cache/CacheLoader;.loadAll:(Ljava/lang/Iterable;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `reload`(`com.google.common.cache.CacheLoader` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/cache/CacheLoader;.reload:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC {

  # return;
}
