record `com.google.common.cache.LocalCache$Values` @kind class @AccessFlag FINAL extends `java.util.AbstractCollection` @kind class {
  `com.google.common.cache.LocalCache` `com.google.common.cache.LocalCache$Values.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.cache.LocalCache$Values` v0 @kind this, `com.google.common.cache.LocalCache` v1 @kind object) @signature `Lcom/google/common/cache/LocalCache$Values;.<init>:(Lcom/google/common/cache/LocalCache;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `clear`(`com.google.common.cache.LocalCache$Values` v1 @kind this) @signature `Lcom/google/common/cache/LocalCache$Values;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.cache.LocalCache$Values` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/cache/LocalCache$Values;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.cache.LocalCache$Values` v1 @kind this) @signature `Lcom/google/common/cache/LocalCache$Values;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.cache.LocalCache$Values` v2 @kind this) @signature `Lcom/google/common/cache/LocalCache$Values;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.cache.LocalCache$Values` v1 @kind this) @signature `Lcom/google/common/cache/LocalCache$Values;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.cache.LocalCache$Values` v1 @kind this) @signature `Lcom/google/common/cache/LocalCache$Values;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.cache.LocalCache$Values` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lcom/google/common/cache/LocalCache$Values;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
