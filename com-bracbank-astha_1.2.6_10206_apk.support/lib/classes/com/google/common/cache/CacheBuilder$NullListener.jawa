record `com.google.common.cache.CacheBuilder$NullListener` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `com.google.common.cache.RemovalListener` @kind interface {
}
global `com.google.common.cache.CacheBuilder$NullListener`[] `@@com.google.common.cache.CacheBuilder$NullListener.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.google.common.cache.CacheBuilder$NullListener` `@@com.google.common.cache.CacheBuilder$NullListener.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `com.google.common.cache.CacheBuilder$NullListener`[] `$values`() @signature `Lcom/google/common/cache/CacheBuilder$NullListener;.$values:()[Lcom/google/common/cache/CacheBuilder$NullListener;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `<clinit>`() @signature `Lcom/google/common/cache/CacheBuilder$NullListener;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.cache.CacheBuilder$NullListener` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/cache/CacheBuilder$NullListener;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.cache.CacheBuilder$NullListener` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/common/cache/CacheBuilder$NullListener;.valueOf:(Ljava/lang/String;)Lcom/google/common/cache/CacheBuilder$NullListener;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.cache.CacheBuilder$NullListener`[] `values`() @signature `Lcom/google/common/cache/CacheBuilder$NullListener;.values:()[Lcom/google/common/cache/CacheBuilder$NullListener;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `onRemoval`(`com.google.common.cache.CacheBuilder$NullListener` v0 @kind this, `com.google.common.cache.RemovalNotification` v1 @kind object) @signature `Lcom/google/common/cache/CacheBuilder$NullListener;.onRemoval:(Lcom/google/common/cache/RemovalNotification;)V` @AccessFlag PUBLIC {

  # return;
}
