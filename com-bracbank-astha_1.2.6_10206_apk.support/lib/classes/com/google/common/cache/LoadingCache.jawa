record `com.google.common.cache.LoadingCache` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `com.google.common.cache.Cache` @kind interface, `com.google.common.base.Function` @kind interface {
}
procedure `java.lang.Object` `apply`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/cache/LoadingCache;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.concurrent.ConcurrentMap` `asMap`() @signature `Lcom/google/common/cache/LoadingCache;.asMap:()Ljava/util/concurrent/ConcurrentMap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `get`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/cache/LoadingCache;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `getAll`(`java.lang.Iterable` v0 @kind object) @signature `Lcom/google/common/cache/LoadingCache;.getAll:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getUnchecked`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/cache/LoadingCache;.getUnchecked:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `refresh`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/cache/LoadingCache;.refresh:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
