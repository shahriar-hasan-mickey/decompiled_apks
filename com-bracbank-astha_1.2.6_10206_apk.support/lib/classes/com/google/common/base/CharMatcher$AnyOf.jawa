record `com.google.common.base.CharMatcher$AnyOf` @kind class @AccessFlag FINAL extends `com.google.common.base.CharMatcher` @kind class {
  `char`[] `com.google.common.base.CharMatcher$AnyOf.chars` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.base.CharMatcher$AnyOf` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lcom/google/common/base/CharMatcher$AnyOf;.<init>:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `apply`(`com.google.common.base.CharMatcher$AnyOf` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/CharMatcher$AnyOf;.apply:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `matches`(`com.google.common.base.CharMatcher$AnyOf` v1 @kind this, `char` v2 ) @signature `Lcom/google/common/base/CharMatcher$AnyOf;.matches:(C)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setBits`(`com.google.common.base.CharMatcher$AnyOf` v4 @kind this, `java.util.BitSet` v5 @kind object) @signature `Lcom/google/common/base/CharMatcher$AnyOf;.setBits:(Ljava/util/BitSet;)V` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.base.CharMatcher$AnyOf` v5 @kind this) @signature `Lcom/google/common/base/CharMatcher$AnyOf;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
