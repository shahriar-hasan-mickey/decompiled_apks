record `com.google.common.base.CharMatcher` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.base.Predicate` @kind interface {
}
global `int` `@@com.google.common.base.CharMatcher.DISTINCT_CHARS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.base.CharMatcher` v0 @kind this) @signature `Lcom/google/common/base/CharMatcher;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `access$100`(`char` v0 ) @signature `Lcom/google/common/base/CharMatcher;.access$100:(C)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `any`() @signature `Lcom/google/common/base/CharMatcher;.any:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `anyOf`(`java.lang.CharSequence` v4 @kind object) @signature `Lcom/google/common/base/CharMatcher;.anyOf:(Ljava/lang/CharSequence;)Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `ascii`() @signature `Lcom/google/common/base/CharMatcher;.ascii:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `breakingWhitespace`() @signature `Lcom/google/common/base/CharMatcher;.breakingWhitespace:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `digit`() @signature `Lcom/google/common/base/CharMatcher;.digit:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `finishCollapseFrom`(`com.google.common.base.CharMatcher` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 , `int` v5 , `char` v6 , `java.lang.StringBuilder` v7 @kind object, `boolean` v8 ) @signature `Lcom/google/common/base/CharMatcher;.finishCollapseFrom:(Ljava/lang/CharSequence;IICLjava/lang/StringBuilder;Z)Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.base.CharMatcher` `forPredicate`(`com.google.common.base.Predicate` v1 @kind object) @signature `Lcom/google/common/base/CharMatcher;.forPredicate:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `inRange`(`char` v1 , `char` v2 ) @signature `Lcom/google/common/base/CharMatcher;.inRange:(CC)Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `invisible`() @signature `Lcom/google/common/base/CharMatcher;.invisible:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `is`(`char` v1 ) @signature `Lcom/google/common/base/CharMatcher;.is:(C)Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher$IsEither` `isEither`(`char` v1 , `char` v2 ) @signature `Lcom/google/common/base/CharMatcher;.isEither:(CC)Lcom/google/common/base/CharMatcher$IsEither;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `isNot`(`char` v1 ) @signature `Lcom/google/common/base/CharMatcher;.isNot:(C)Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSmall`(`int` v1 , `int` v2 ) @signature `Lcom/google/common/base/CharMatcher;.isSmall:(II)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `javaDigit`() @signature `Lcom/google/common/base/CharMatcher;.javaDigit:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `javaIsoControl`() @signature `Lcom/google/common/base/CharMatcher;.javaIsoControl:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `javaLetter`() @signature `Lcom/google/common/base/CharMatcher;.javaLetter:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `javaLetterOrDigit`() @signature `Lcom/google/common/base/CharMatcher;.javaLetterOrDigit:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `javaLowerCase`() @signature `Lcom/google/common/base/CharMatcher;.javaLowerCase:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `javaUpperCase`() @signature `Lcom/google/common/base/CharMatcher;.javaUpperCase:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `none`() @signature `Lcom/google/common/base/CharMatcher;.none:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `noneOf`(`java.lang.CharSequence` v0 @kind object) @signature `Lcom/google/common/base/CharMatcher;.noneOf:(Ljava/lang/CharSequence;)Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `precomputedPositive`(`int` v2 , `java.util.BitSet` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/google/common/base/CharMatcher;.precomputedPositive:(ILjava/util/BitSet;Ljava/lang/String;)Lcom/google/common/base/CharMatcher;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `showCharacter`(`char` v6 ) @signature `Lcom/google/common/base/CharMatcher;.showCharacter:(C)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `singleWidth`() @signature `Lcom/google/common/base/CharMatcher;.singleWidth:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `whitespace`() @signature `Lcom/google/common/base/CharMatcher;.whitespace:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `and`(`com.google.common.base.CharMatcher` v1 @kind this, `com.google.common.base.CharMatcher` v2 @kind object) @signature `Lcom/google/common/base/CharMatcher;.and:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `apply`(`com.google.common.base.CharMatcher` v0 @kind this, `java.lang.Character` v1 @kind object) @signature `Lcom/google/common/base/CharMatcher;.apply:(Ljava/lang/Character;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `apply`(`com.google.common.base.CharMatcher` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/CharMatcher;.apply:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `collapseFrom`(`com.google.common.base.CharMatcher` v7 @kind this, `java.lang.CharSequence` v8 @kind object, `char` v9 ) @signature `Lcom/google/common/base/CharMatcher;.collapseFrom:(Ljava/lang/CharSequence;C)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `countIn`(`com.google.common.base.CharMatcher` v3 @kind this, `java.lang.CharSequence` v4 @kind object) @signature `Lcom/google/common/base/CharMatcher;.countIn:(Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `indexIn`(`com.google.common.base.CharMatcher` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/common/base/CharMatcher;.indexIn:(Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `indexIn`(`com.google.common.base.CharMatcher` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lcom/google/common/base/CharMatcher;.indexIn:(Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `lastIndexIn`(`com.google.common.base.CharMatcher` v2 @kind this, `java.lang.CharSequence` v3 @kind object) @signature `Lcom/google/common/base/CharMatcher;.lastIndexIn:(Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `matches`(`char` v0 ) @signature `Lcom/google/common/base/CharMatcher;.matches:(C)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `matchesAllOf`(`com.google.common.base.CharMatcher` v3 @kind this, `java.lang.CharSequence` v4 @kind object) @signature `Lcom/google/common/base/CharMatcher;.matchesAllOf:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `matchesAnyOf`(`com.google.common.base.CharMatcher` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lcom/google/common/base/CharMatcher;.matchesAnyOf:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `matchesNoneOf`(`com.google.common.base.CharMatcher` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/common/base/CharMatcher;.matchesNoneOf:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `negate`(`com.google.common.base.CharMatcher` v1 @kind this) @signature `Lcom/google/common/base/CharMatcher;.negate:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `or`(`com.google.common.base.CharMatcher` v1 @kind this, `com.google.common.base.CharMatcher` v2 @kind object) @signature `Lcom/google/common/base/CharMatcher;.or:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `precomputed`(`com.google.common.base.CharMatcher` v1 @kind this) @signature `Lcom/google/common/base/CharMatcher;.precomputed:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `precomputedInternal`(`com.google.common.base.CharMatcher` v6 @kind this) @signature `Lcom/google/common/base/CharMatcher;.precomputedInternal:()Lcom/google/common/base/CharMatcher;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `removeFrom`(`com.google.common.base.CharMatcher` v5 @kind this, `java.lang.CharSequence` v6 @kind object) @signature `Lcom/google/common/base/CharMatcher;.removeFrom:(Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `replaceFrom`(`com.google.common.base.CharMatcher` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `char` v4 ) @signature `Lcom/google/common/base/CharMatcher;.replaceFrom:(Ljava/lang/CharSequence;C)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `replaceFrom`(`com.google.common.base.CharMatcher` v7 @kind this, `java.lang.CharSequence` v8 @kind object, `java.lang.CharSequence` v9 @kind object) @signature `Lcom/google/common/base/CharMatcher;.replaceFrom:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `retainFrom`(`com.google.common.base.CharMatcher` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/common/base/CharMatcher;.retainFrom:(Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setBits`(`com.google.common.base.CharMatcher` v2 @kind this, `java.util.BitSet` v3 @kind object) @signature `Lcom/google/common/base/CharMatcher;.setBits:(Ljava/util/BitSet;)V` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.base.CharMatcher` v1 @kind this) @signature `Lcom/google/common/base/CharMatcher;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `trimAndCollapseFrom`(`com.google.common.base.CharMatcher` v10 @kind this, `java.lang.CharSequence` v11 @kind object, `char` v12 ) @signature `Lcom/google/common/base/CharMatcher;.trimAndCollapseFrom:(Ljava/lang/CharSequence;C)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `trimFrom`(`com.google.common.base.CharMatcher` v3 @kind this, `java.lang.CharSequence` v4 @kind object) @signature `Lcom/google/common/base/CharMatcher;.trimFrom:(Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `trimLeadingFrom`(`com.google.common.base.CharMatcher` v3 @kind this, `java.lang.CharSequence` v4 @kind object) @signature `Lcom/google/common/base/CharMatcher;.trimLeadingFrom:(Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `trimTrailingFrom`(`com.google.common.base.CharMatcher` v2 @kind this, `java.lang.CharSequence` v3 @kind object) @signature `Lcom/google/common/base/CharMatcher;.trimTrailingFrom:(Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
