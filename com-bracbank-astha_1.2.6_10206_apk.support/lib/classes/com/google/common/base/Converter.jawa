record `com.google.common.base.Converter` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.base.Function` @kind interface {
  `boolean` `com.google.common.base.Converter.handleNullAutomatically` @AccessFlag PRIVATE_FINAL;
  `com.google.common.base.Converter` `com.google.common.base.Converter.reverse` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`com.google.common.base.Converter` v1 @kind this) @signature `Lcom/google/common/base/Converter;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.base.Converter` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/common/base/Converter;.<init>:(Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.base.Converter` `from`(`com.google.common.base.Function` v2 @kind object, `com.google.common.base.Function` v3 @kind object) @signature `Lcom/google/common/base/Converter;.from:(Lcom/google/common/base/Function;Lcom/google/common/base/Function;)Lcom/google/common/base/Converter;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.Converter` `identity`() @signature `Lcom/google/common/base/Converter;.identity:()Lcom/google/common/base/Converter;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `unsafeDoBackward`(`com.google.common.base.Converter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/Converter;.unsafeDoBackward:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `unsafeDoForward`(`com.google.common.base.Converter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/Converter;.unsafeDoForward:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.base.Converter` `andThen`(`com.google.common.base.Converter` v0 @kind this, `com.google.common.base.Converter` v1 @kind object) @signature `Lcom/google/common/base/Converter;.andThen:(Lcom/google/common/base/Converter;)Lcom/google/common/base/Converter;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `apply`(`com.google.common.base.Converter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/Converter;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `convert`(`com.google.common.base.Converter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Iterable` `convertAll`(`com.google.common.base.Converter` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/base/Converter;.convertAll:(Ljava/lang/Iterable;)Ljava/lang/Iterable;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `correctedDoBackward`(`com.google.common.base.Converter` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/Converter;.correctedDoBackward:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `correctedDoForward`(`com.google.common.base.Converter` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/Converter;.correctedDoForward:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `com.google.common.base.Converter` `doAndThen`(`com.google.common.base.Converter` v1 @kind this, `com.google.common.base.Converter` v2 @kind object) @signature `Lcom/google/common/base/Converter;.doAndThen:(Lcom/google/common/base/Converter;)Lcom/google/common/base/Converter;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `doBackward`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/base/Converter;.doBackward:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `doForward`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/base/Converter;.doForward:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`com.google.common.base.Converter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/Converter;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.Converter` `reverse`(`com.google.common.base.Converter` v1 @kind this) @signature `Lcom/google/common/base/Converter;.reverse:()Lcom/google/common/base/Converter;` @AccessFlag PUBLIC {

  # return;
}
