record `com.google.common.base.CharMatcher$RangesMatcher` @kind class @AccessFlag  extends `com.google.common.base.CharMatcher` @kind class {
  `java.lang.String` `com.google.common.base.CharMatcher$RangesMatcher.description` @AccessFlag PRIVATE_FINAL;
  `char`[] `com.google.common.base.CharMatcher$RangesMatcher.rangeEnds` @AccessFlag PRIVATE_FINAL;
  `char`[] `com.google.common.base.CharMatcher$RangesMatcher.rangeStarts` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.base.CharMatcher$RangesMatcher` v4 @kind this, `java.lang.String` v5 @kind object, `char`[] v6 @kind object, `char`[] v7 @kind object) @signature `Lcom/google/common/base/CharMatcher$RangesMatcher;.<init>:(Ljava/lang/String;[C[C)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `apply`(`com.google.common.base.CharMatcher$RangesMatcher` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/CharMatcher$RangesMatcher;.apply:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `matches`(`com.google.common.base.CharMatcher$RangesMatcher` v3 @kind this, `char` v4 ) @signature `Lcom/google/common/base/CharMatcher$RangesMatcher;.matches:(C)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.base.CharMatcher$RangesMatcher` v1 @kind this) @signature `Lcom/google/common/base/CharMatcher$RangesMatcher;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
