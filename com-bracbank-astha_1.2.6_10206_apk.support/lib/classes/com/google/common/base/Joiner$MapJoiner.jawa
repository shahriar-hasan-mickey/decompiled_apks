record `com.google.common.base.Joiner$MapJoiner` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.common.base.Joiner` `com.google.common.base.Joiner$MapJoiner.joiner` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.common.base.Joiner$MapJoiner.keyValueSeparator` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.base.Joiner$MapJoiner` v0 @kind this, `com.google.common.base.Joiner` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.<init>:(Lcom/google/common/base/Joiner;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.base.Joiner$MapJoiner` v0 @kind this, `com.google.common.base.Joiner` v1 @kind object, `java.lang.String` v2 @kind object, `com.google.common.base.Joiner$1` v3 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.<init>:(Lcom/google/common/base/Joiner;Ljava/lang/String;Lcom/google/common/base/Joiner$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Appendable` `appendTo`(`com.google.common.base.Joiner$MapJoiner` v0 @kind this, `java.lang.Appendable` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.appendTo:(Ljava/lang/Appendable;Ljava/lang/Iterable;)Ljava/lang/Appendable;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Appendable` `appendTo`(`com.google.common.base.Joiner$MapJoiner` v3 @kind this, `java.lang.Appendable` v4 @kind object, `java.util.Iterator` v5 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.appendTo:(Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Appendable` `appendTo`(`com.google.common.base.Joiner$MapJoiner` v0 @kind this, `java.lang.Appendable` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.appendTo:(Ljava/lang/Appendable;Ljava/util/Map;)Ljava/lang/Appendable;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.StringBuilder` `appendTo`(`com.google.common.base.Joiner$MapJoiner` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.appendTo:(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.StringBuilder` `appendTo`(`com.google.common.base.Joiner$MapJoiner` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.appendTo:(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.StringBuilder` `appendTo`(`com.google.common.base.Joiner$MapJoiner` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.appendTo:(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `join`(`com.google.common.base.Joiner$MapJoiner` v0 @kind this, `java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.join:(Ljava/lang/Iterable;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `join`(`com.google.common.base.Joiner$MapJoiner` v1 @kind this, `java.util.Iterator` v2 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.join:(Ljava/util/Iterator;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `join`(`com.google.common.base.Joiner$MapJoiner` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.join:(Ljava/util/Map;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.Joiner$MapJoiner` `useForNull`(`com.google.common.base.Joiner$MapJoiner` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/google/common/base/Joiner$MapJoiner;.useForNull:(Ljava/lang/String;)Lcom/google/common/base/Joiner$MapJoiner;` @AccessFlag PUBLIC {

  # return;
}
