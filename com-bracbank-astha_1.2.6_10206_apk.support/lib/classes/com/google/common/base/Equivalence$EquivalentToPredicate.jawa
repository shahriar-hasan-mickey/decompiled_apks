record `com.google.common.base.Equivalence$EquivalentToPredicate` @kind class @AccessFlag FINAL extends `com.google.common.base.Predicate` @kind interface, `java.io.Serializable` @kind interface {
  `com.google.common.base.Equivalence` `com.google.common.base.Equivalence$EquivalentToPredicate.equivalence` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.google.common.base.Equivalence$EquivalentToPredicate.target` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.google.common.base.Equivalence$EquivalentToPredicate.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.base.Equivalence$EquivalentToPredicate` v0 @kind this, `com.google.common.base.Equivalence` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/Equivalence$EquivalentToPredicate;.<init>:(Lcom/google/common/base/Equivalence;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `apply`(`com.google.common.base.Equivalence$EquivalentToPredicate` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/base/Equivalence$EquivalentToPredicate;.apply:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.base.Equivalence$EquivalentToPredicate` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/base/Equivalence$EquivalentToPredicate;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.base.Equivalence$EquivalentToPredicate` v3 @kind this) @signature `Lcom/google/common/base/Equivalence$EquivalentToPredicate;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.base.Equivalence$EquivalentToPredicate` v4 @kind this) @signature `Lcom/google/common/base/Equivalence$EquivalentToPredicate;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
