record `com.google.common.base.Joiner$1` @kind class @AccessFlag  extends `com.google.common.base.Joiner` @kind class {
  `com.google.common.base.Joiner` `com.google.common.base.Joiner$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.String` `com.google.common.base.Joiner$1.val$nullText` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.base.Joiner$1` v0 @kind this, `com.google.common.base.Joiner` v1 @kind object, `com.google.common.base.Joiner` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/google/common/base/Joiner$1;.<init>:(Lcom/google/common/base/Joiner;Lcom/google/common/base/Joiner;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.base.Joiner` `skipNulls`(`com.google.common.base.Joiner$1` v2 @kind this) @signature `Lcom/google/common/base/Joiner$1;.skipNulls:()Lcom/google/common/base/Joiner;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.CharSequence` `toString`(`com.google.common.base.Joiner$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/Joiner$1;.toString:(Ljava/lang/Object;)Ljava/lang/CharSequence;` @AccessFlag  {

  # return;
}
procedure `com.google.common.base.Joiner` `useForNull`(`com.google.common.base.Joiner$1` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/common/base/Joiner$1;.useForNull:(Ljava/lang/String;)Lcom/google/common/base/Joiner;` @AccessFlag PUBLIC {

  # return;
}
