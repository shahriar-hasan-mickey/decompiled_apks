record `com.google.common.base.CharMatcher$ForPredicate` @kind class @AccessFlag FINAL extends `com.google.common.base.CharMatcher` @kind class {
  `com.google.common.base.Predicate` `com.google.common.base.CharMatcher$ForPredicate.predicate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.base.CharMatcher$ForPredicate` v0 @kind this, `com.google.common.base.Predicate` v1 @kind object) @signature `Lcom/google/common/base/CharMatcher$ForPredicate;.<init>:(Lcom/google/common/base/Predicate;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `apply`(`com.google.common.base.CharMatcher$ForPredicate` v1 @kind this, `java.lang.Character` v2 @kind object) @signature `Lcom/google/common/base/CharMatcher$ForPredicate;.apply:(Ljava/lang/Character;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `apply`(`com.google.common.base.CharMatcher$ForPredicate` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/CharMatcher$ForPredicate;.apply:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `matches`(`com.google.common.base.CharMatcher$ForPredicate` v1 @kind this, `char` v2 ) @signature `Lcom/google/common/base/CharMatcher$ForPredicate;.matches:(C)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.base.CharMatcher$ForPredicate` v3 @kind this) @signature `Lcom/google/common/base/CharMatcher$ForPredicate;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
