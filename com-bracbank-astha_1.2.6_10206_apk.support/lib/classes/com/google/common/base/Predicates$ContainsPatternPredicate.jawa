record `com.google.common.base.Predicates$ContainsPatternPredicate` @kind class @AccessFlag  extends `com.google.common.base.Predicate` @kind interface, `java.io.Serializable` @kind interface {
  `com.google.common.base.CommonPattern` `com.google.common.base.Predicates$ContainsPatternPredicate.pattern` @AccessFlag FINAL;
}
global `long` `@@com.google.common.base.Predicates$ContainsPatternPredicate.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.base.Predicates$ContainsPatternPredicate` v0 @kind this, `com.google.common.base.CommonPattern` v1 @kind object) @signature `Lcom/google/common/base/Predicates$ContainsPatternPredicate;.<init>:(Lcom/google/common/base/CommonPattern;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `apply`(`com.google.common.base.Predicates$ContainsPatternPredicate` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/common/base/Predicates$ContainsPatternPredicate;.apply:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `apply`(`com.google.common.base.Predicates$ContainsPatternPredicate` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/Predicates$ContainsPatternPredicate;.apply:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.base.Predicates$ContainsPatternPredicate` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/base/Predicates$ContainsPatternPredicate;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.base.Predicates$ContainsPatternPredicate` v3 @kind this) @signature `Lcom/google/common/base/Predicates$ContainsPatternPredicate;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.base.Predicates$ContainsPatternPredicate` v3 @kind this) @signature `Lcom/google/common/base/Predicates$ContainsPatternPredicate;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
