record `com.google.common.base.Joiner` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.google.common.base.Joiner.separator` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.base.Joiner` v0 @kind this, `com.google.common.base.Joiner` v1 @kind object) @signature `Lcom/google/common/base/Joiner;.<init>:(Lcom/google/common/base/Joiner;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.base.Joiner` v0 @kind this, `com.google.common.base.Joiner` v1 @kind object, `com.google.common.base.Joiner$1` v2 @kind object) @signature `Lcom/google/common/base/Joiner;.<init>:(Lcom/google/common/base/Joiner;Lcom/google/common/base/Joiner$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/google/common/base/Joiner;.<init>:(Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `access$100`(`com.google.common.base.Joiner` v0 @kind object) @signature `Lcom/google/common/base/Joiner;.access$100:(Lcom/google/common/base/Joiner;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Iterable` `iterable`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lcom/google/common/base/Joiner;.iterable:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.base.Joiner` `on`(`char` v1 ) @signature `Lcom/google/common/base/Joiner;.on:(C)Lcom/google/common/base/Joiner;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.Joiner` `on`(`java.lang.String` v1 @kind object) @signature `Lcom/google/common/base/Joiner;.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Appendable` `appendTo`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.Appendable` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/base/Joiner;.appendTo:(Ljava/lang/Appendable;Ljava/lang/Iterable;)Ljava/lang/Appendable;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Appendable` `appendTo`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.Appendable` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lcom/google/common/base/Joiner;.appendTo:(Ljava/lang/Appendable;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Appendable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Appendable` `appendTo`(`com.google.common.base.Joiner` v1 @kind this, `java.lang.Appendable` v2 @kind object, `java.util.Iterator` v3 @kind object) @signature `Lcom/google/common/base/Joiner;.appendTo:(Ljava/lang/Appendable;Ljava/util/Iterator;)Ljava/lang/Appendable;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Appendable` `appendTo`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.Appendable` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lcom/google/common/base/Joiner;.appendTo:(Ljava/lang/Appendable;[Ljava/lang/Object;)Ljava/lang/Appendable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.StringBuilder` `appendTo`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/base/Joiner;.appendTo:(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.StringBuilder` `appendTo`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lcom/google/common/base/Joiner;.appendTo:(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.StringBuilder` `appendTo`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lcom/google/common/base/Joiner;.appendTo:(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.StringBuilder` `appendTo`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lcom/google/common/base/Joiner;.appendTo:(Ljava/lang/StringBuilder;[Ljava/lang/Object;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `join`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/base/Joiner;.join:(Ljava/lang/Iterable;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `join`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lcom/google/common/base/Joiner;.join:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `join`(`com.google.common.base.Joiner` v1 @kind this, `java.util.Iterator` v2 @kind object) @signature `Lcom/google/common/base/Joiner;.join:(Ljava/util/Iterator;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `join`(`com.google.common.base.Joiner` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lcom/google/common/base/Joiner;.join:([Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.base.Joiner` `skipNulls`(`com.google.common.base.Joiner` v1 @kind this) @signature `Lcom/google/common/base/Joiner;.skipNulls:()Lcom/google/common/base/Joiner;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.CharSequence` `toString`(`com.google.common.base.Joiner` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/Joiner;.toString:(Ljava/lang/Object;)Ljava/lang/CharSequence;` @AccessFlag  {

  # return;
}
procedure `com.google.common.base.Joiner` `useForNull`(`com.google.common.base.Joiner` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/common/base/Joiner;.useForNull:(Ljava/lang/String;)Lcom/google/common/base/Joiner;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.Joiner$MapJoiner` `withKeyValueSeparator`(`com.google.common.base.Joiner` v0 @kind this, `char` v1 ) @signature `Lcom/google/common/base/Joiner;.withKeyValueSeparator:(C)Lcom/google/common/base/Joiner$MapJoiner;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.Joiner$MapJoiner` `withKeyValueSeparator`(`com.google.common.base.Joiner` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/google/common/base/Joiner;.withKeyValueSeparator:(Ljava/lang/String;)Lcom/google/common/base/Joiner$MapJoiner;` @AccessFlag PUBLIC {

  # return;
}
