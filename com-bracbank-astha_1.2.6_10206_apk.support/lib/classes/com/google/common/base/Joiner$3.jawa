record `com.google.common.base.Joiner$3` @kind class @AccessFlag  extends `java.util.AbstractList` @kind class {
  `java.lang.Object` `com.google.common.base.Joiner$3.val$first` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object`[] `com.google.common.base.Joiner$3.val$rest` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `com.google.common.base.Joiner$3.val$second` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.base.Joiner$3` v0 @kind this, `java.lang.Object`[] v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/base/Joiner$3;.<init>:([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.base.Joiner$3` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/base/Joiner$3;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.base.Joiner$3` v1 @kind this) @signature `Lcom/google/common/base/Joiner$3;.size:()I` @AccessFlag PUBLIC {

  # return;
}
