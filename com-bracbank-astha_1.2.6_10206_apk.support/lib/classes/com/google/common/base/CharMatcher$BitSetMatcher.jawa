record `com.google.common.base.CharMatcher$BitSetMatcher` @kind class @AccessFlag FINAL extends `com.google.common.base.CharMatcher$NamedFastMatcher` @kind class {
  `java.util.BitSet` `com.google.common.base.CharMatcher$BitSetMatcher.table` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.base.CharMatcher$BitSetMatcher` v1 @kind this, `java.util.BitSet` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/google/common/base/CharMatcher$BitSetMatcher;.<init>:(Ljava/util/BitSet;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.base.CharMatcher$BitSetMatcher` v0 @kind this, `java.util.BitSet` v1 @kind object, `java.lang.String` v2 @kind object, `com.google.common.base.CharMatcher$1` v3 @kind object) @signature `Lcom/google/common/base/CharMatcher$BitSetMatcher;.<init>:(Ljava/util/BitSet;Ljava/lang/String;Lcom/google/common/base/CharMatcher$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `matches`(`com.google.common.base.CharMatcher$BitSetMatcher` v1 @kind this, `char` v2 ) @signature `Lcom/google/common/base/CharMatcher$BitSetMatcher;.matches:(C)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setBits`(`com.google.common.base.CharMatcher$BitSetMatcher` v1 @kind this, `java.util.BitSet` v2 @kind object) @signature `Lcom/google/common/base/CharMatcher$BitSetMatcher;.setBits:(Ljava/util/BitSet;)V` @AccessFlag  {

  # return;
}
