record `com.google.common.base.CharMatcher$Is` @kind class @AccessFlag FINAL extends `com.google.common.base.CharMatcher$FastMatcher` @kind class {
  `char` `com.google.common.base.CharMatcher$Is.match` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.base.CharMatcher$Is` v0 @kind this, `char` v1 ) @signature `Lcom/google/common/base/CharMatcher$Is;.<init>:(C)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.base.CharMatcher` `and`(`com.google.common.base.CharMatcher$Is` v1 @kind this, `com.google.common.base.CharMatcher` v2 @kind object) @signature `Lcom/google/common/base/CharMatcher$Is;.and:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `matches`(`com.google.common.base.CharMatcher$Is` v1 @kind this, `char` v2 ) @signature `Lcom/google/common/base/CharMatcher$Is;.matches:(C)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `negate`(`com.google.common.base.CharMatcher$Is` v1 @kind this) @signature `Lcom/google/common/base/CharMatcher$Is;.negate:()Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `or`(`com.google.common.base.CharMatcher$Is` v1 @kind this, `com.google.common.base.CharMatcher` v2 @kind object) @signature `Lcom/google/common/base/CharMatcher$Is;.or:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/CharMatcher;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `replaceFrom`(`com.google.common.base.CharMatcher$Is` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `char` v3 ) @signature `Lcom/google/common/base/CharMatcher$Is;.replaceFrom:(Ljava/lang/CharSequence;C)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setBits`(`com.google.common.base.CharMatcher$Is` v1 @kind this, `java.util.BitSet` v2 @kind object) @signature `Lcom/google/common/base/CharMatcher$Is;.setBits:(Ljava/util/BitSet;)V` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.base.CharMatcher$Is` v3 @kind this) @signature `Lcom/google/common/base/CharMatcher$Is;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
