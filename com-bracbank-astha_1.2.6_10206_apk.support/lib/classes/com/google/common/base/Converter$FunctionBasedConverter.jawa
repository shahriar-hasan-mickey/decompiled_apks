record `com.google.common.base.Converter$FunctionBasedConverter` @kind class @AccessFlag FINAL extends `com.google.common.base.Converter` @kind class, `java.io.Serializable` @kind interface {
  `com.google.common.base.Function` `com.google.common.base.Converter$FunctionBasedConverter.backwardFunction` @AccessFlag PRIVATE_FINAL;
  `com.google.common.base.Function` `com.google.common.base.Converter$FunctionBasedConverter.forwardFunction` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.base.Converter$FunctionBasedConverter` v0 @kind this, `com.google.common.base.Function` v1 @kind object, `com.google.common.base.Function` v2 @kind object) @signature `Lcom/google/common/base/Converter$FunctionBasedConverter;.<init>:(Lcom/google/common/base/Function;Lcom/google/common/base/Function;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.base.Converter$FunctionBasedConverter` v0 @kind this, `com.google.common.base.Function` v1 @kind object, `com.google.common.base.Function` v2 @kind object, `com.google.common.base.Converter$1` v3 @kind object) @signature `Lcom/google/common/base/Converter$FunctionBasedConverter;.<init>:(Lcom/google/common/base/Function;Lcom/google/common/base/Function;Lcom/google/common/base/Converter$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `doBackward`(`com.google.common.base.Converter$FunctionBasedConverter` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/Converter$FunctionBasedConverter;.doBackward:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.Object` `doForward`(`com.google.common.base.Converter$FunctionBasedConverter` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/Converter$FunctionBasedConverter;.doForward:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `equals`(`com.google.common.base.Converter$FunctionBasedConverter` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/base/Converter$FunctionBasedConverter;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.base.Converter$FunctionBasedConverter` v2 @kind this) @signature `Lcom/google/common/base/Converter$FunctionBasedConverter;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.base.Converter$FunctionBasedConverter` v4 @kind this) @signature `Lcom/google/common/base/Converter$FunctionBasedConverter;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
