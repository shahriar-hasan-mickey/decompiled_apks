record `com.google.common.base.Splitter$MapSplitter` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.common.base.Splitter` `com.google.common.base.Splitter$MapSplitter.entrySplitter` @AccessFlag PRIVATE_FINAL;
  `com.google.common.base.Splitter` `com.google.common.base.Splitter$MapSplitter.outerSplitter` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.google.common.base.Splitter$MapSplitter.INVALID_ENTRY_MESSAGE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.base.Splitter$MapSplitter` v0 @kind this, `com.google.common.base.Splitter` v1 @kind object, `com.google.common.base.Splitter` v2 @kind object) @signature `Lcom/google/common/base/Splitter$MapSplitter;.<init>:(Lcom/google/common/base/Splitter;Lcom/google/common/base/Splitter;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.base.Splitter$MapSplitter` v0 @kind this, `com.google.common.base.Splitter` v1 @kind object, `com.google.common.base.Splitter` v2 @kind object, `com.google.common.base.Splitter$1` v3 @kind object) @signature `Lcom/google/common/base/Splitter$MapSplitter;.<init>:(Lcom/google/common/base/Splitter;Lcom/google/common/base/Splitter;Lcom/google/common/base/Splitter$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.Map` `split`(`com.google.common.base.Splitter$MapSplitter` v7 @kind this, `java.lang.CharSequence` v8 @kind object) @signature `Lcom/google/common/base/Splitter$MapSplitter;.split:(Ljava/lang/CharSequence;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
