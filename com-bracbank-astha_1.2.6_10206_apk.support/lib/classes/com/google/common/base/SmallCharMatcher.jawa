record `com.google.common.base.SmallCharMatcher` @kind class @AccessFlag FINAL extends `com.google.common.base.CharMatcher$NamedFastMatcher` @kind class {
  `boolean` `com.google.common.base.SmallCharMatcher.containsZero` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.common.base.SmallCharMatcher.filter` @AccessFlag PRIVATE_FINAL;
  `char`[] `com.google.common.base.SmallCharMatcher.table` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.common.base.SmallCharMatcher.C1` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.common.base.SmallCharMatcher.C2` @AccessFlag PRIVATE_STATIC_FINAL;
global `double` `@@com.google.common.base.SmallCharMatcher.DESIRED_LOAD_FACTOR` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.common.base.SmallCharMatcher.MAX_SIZE` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.base.SmallCharMatcher` v0 @kind this, `char`[] v1 @kind object, `long` v2 , `boolean` v4 , `java.lang.String` v5 @kind object) @signature `Lcom/google/common/base/SmallCharMatcher;.<init>:([CJZLjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `boolean` `checkFilter`(`com.google.common.base.SmallCharMatcher` v4 @kind this, `int` v5 ) @signature `Lcom/google/common/base/SmallCharMatcher;.checkFilter:(I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `chooseTableSize`(`int` v6 ) @signature `Lcom/google/common/base/SmallCharMatcher;.chooseTableSize:(I)I` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.base.CharMatcher` `from`(`java.util.BitSet` v9 @kind object, `java.lang.String` v10 @kind object) @signature `Lcom/google/common/base/SmallCharMatcher;.from:(Ljava/util/BitSet;Ljava/lang/String;)Lcom/google/common/base/CharMatcher;` @AccessFlag STATIC {

  # return;
}
procedure `int` `smear`(`int` v1 ) @signature `Lcom/google/common/base/SmallCharMatcher;.smear:(I)I` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `matches`(`com.google.common.base.SmallCharMatcher` v7 @kind this, `char` v8 ) @signature `Lcom/google/common/base/SmallCharMatcher;.matches:(C)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setBits`(`com.google.common.base.SmallCharMatcher` v4 @kind this, `java.util.BitSet` v5 @kind object) @signature `Lcom/google/common/base/SmallCharMatcher;.setBits:(Ljava/util/BitSet;)V` @AccessFlag  {

  # return;
}
