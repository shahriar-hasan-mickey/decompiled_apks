record `com.google.common.graph.AbstractNetwork$1` @kind class @AccessFlag  extends `com.google.common.graph.AbstractGraph` @kind class {
  `com.google.common.graph.AbstractNetwork` `com.google.common.graph.AbstractNetwork$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.graph.AbstractNetwork$1` v0 @kind this, `com.google.common.graph.AbstractNetwork` v1 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork$1;.<init>:(Lcom/google/common/graph/AbstractNetwork;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Set` `adjacentNodes`(`com.google.common.graph.AbstractNetwork$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork$1;.adjacentNodes:(Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `allowsSelfLoops`(`com.google.common.graph.AbstractNetwork$1` v1 @kind this) @signature `Lcom/google/common/graph/AbstractNetwork$1;.allowsSelfLoops:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `edges`(`com.google.common.graph.AbstractNetwork$1` v1 @kind this) @signature `Lcom/google/common/graph/AbstractNetwork$1;.edges:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.graph.ElementOrder` `incidentEdgeOrder`(`com.google.common.graph.AbstractNetwork$1` v1 @kind this) @signature `Lcom/google/common/graph/AbstractNetwork$1;.incidentEdgeOrder:()Lcom/google/common/graph/ElementOrder;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDirected`(`com.google.common.graph.AbstractNetwork$1` v1 @kind this) @signature `Lcom/google/common/graph/AbstractNetwork$1;.isDirected:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.graph.ElementOrder` `nodeOrder`(`com.google.common.graph.AbstractNetwork$1` v1 @kind this) @signature `Lcom/google/common/graph/AbstractNetwork$1;.nodeOrder:()Lcom/google/common/graph/ElementOrder;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `nodes`(`com.google.common.graph.AbstractNetwork$1` v1 @kind this) @signature `Lcom/google/common/graph/AbstractNetwork$1;.nodes:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Iterable` `predecessors`(`com.google.common.graph.AbstractNetwork$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork$1;.predecessors:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `predecessors`(`com.google.common.graph.AbstractNetwork$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork$1;.predecessors:(Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Iterable` `successors`(`com.google.common.graph.AbstractNetwork$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork$1;.successors:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `successors`(`com.google.common.graph.AbstractNetwork$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork$1;.successors:(Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
