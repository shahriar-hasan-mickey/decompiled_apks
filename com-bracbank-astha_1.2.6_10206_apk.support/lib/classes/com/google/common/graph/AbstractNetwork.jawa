record `com.google.common.graph.AbstractNetwork` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.graph.Network` @kind interface {
}
procedure `void` `<init>`(`com.google.common.graph.AbstractNetwork` v0 @kind this) @signature `Lcom/google/common/graph/AbstractNetwork;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.base.Predicate` `connectedPredicate`(`com.google.common.graph.AbstractNetwork` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.connectedPredicate:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/base/Predicate;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Map` `edgeIncidentNodesMap`(`com.google.common.graph.Network` v1 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.edgeIncidentNodesMap:(Lcom/google/common/graph/Network;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Set` `adjacentEdges`(`com.google.common.graph.AbstractNetwork` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.adjacentEdges:(Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.graph.Graph` `asGraph`(`com.google.common.graph.AbstractNetwork` v1 @kind this) @signature `Lcom/google/common/graph/AbstractNetwork;.asGraph:()Lcom/google/common/graph/Graph;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `degree`(`com.google.common.graph.AbstractNetwork` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.degree:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `edgeConnectingOrNull`(`com.google.common.graph.AbstractNetwork` v1 @kind this, `com.google.common.graph.EndpointPair` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.edgeConnectingOrNull:(Lcom/google/common/graph/EndpointPair;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `edgeConnectingOrNull`(`com.google.common.graph.AbstractNetwork` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.edgeConnectingOrNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `edgesConnecting`(`com.google.common.graph.AbstractNetwork` v1 @kind this, `com.google.common.graph.EndpointPair` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.edgesConnecting:(Lcom/google/common/graph/EndpointPair;)Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `edgesConnecting`(`com.google.common.graph.AbstractNetwork` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.edgesConnecting:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.graph.AbstractNetwork` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `hasEdgeConnecting`(`com.google.common.graph.AbstractNetwork` v1 @kind this, `com.google.common.graph.EndpointPair` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.hasEdgeConnecting:(Lcom/google/common/graph/EndpointPair;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasEdgeConnecting`(`com.google.common.graph.AbstractNetwork` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.hasEdgeConnecting:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.graph.AbstractNetwork` v1 @kind this) @signature `Lcom/google/common/graph/AbstractNetwork;.hashCode:()I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `inDegree`(`com.google.common.graph.AbstractNetwork` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.inDegree:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isOrderingCompatible`(`com.google.common.graph.AbstractNetwork` v0 @kind this, `com.google.common.graph.EndpointPair` v1 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.isOrderingCompatible:(Lcom/google/common/graph/EndpointPair;)Z` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `int` `outDegree`(`com.google.common.graph.AbstractNetwork` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.outDegree:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Iterable` `predecessors`(`com.google.common.graph.AbstractNetwork` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.predecessors:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Iterable` `successors`(`com.google.common.graph.AbstractNetwork` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.successors:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.graph.AbstractNetwork` v7 @kind this) @signature `Lcom/google/common/graph/AbstractNetwork;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `validateEndpoints`(`com.google.common.graph.AbstractNetwork` v1 @kind this, `com.google.common.graph.EndpointPair` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork;.validateEndpoints:(Lcom/google/common/graph/EndpointPair;)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
