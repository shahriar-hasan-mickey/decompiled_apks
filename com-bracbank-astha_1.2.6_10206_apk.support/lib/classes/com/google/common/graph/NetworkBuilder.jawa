record `com.google.common.graph.NetworkBuilder` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.common.graph.AbstractGraphBuilder` @kind class {
  `boolean` `com.google.common.graph.NetworkBuilder.allowsParallelEdges` @AccessFlag ;
  `com.google.common.graph.ElementOrder` `com.google.common.graph.NetworkBuilder.edgeOrder` @AccessFlag ;
  `com.google.common.base.Optional` `com.google.common.graph.NetworkBuilder.expectedEdgeCount` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.common.graph.NetworkBuilder` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/common/graph/NetworkBuilder;.<init>:(Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.graph.NetworkBuilder` `cast`(`com.google.common.graph.NetworkBuilder` v0 @kind this) @signature `Lcom/google/common/graph/NetworkBuilder;.cast:()Lcom/google/common/graph/NetworkBuilder;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.graph.NetworkBuilder` `directed`() @signature `Lcom/google/common/graph/NetworkBuilder;.directed:()Lcom/google/common/graph/NetworkBuilder;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.NetworkBuilder` `from`(`com.google.common.graph.Network` v2 @kind object) @signature `Lcom/google/common/graph/NetworkBuilder;.from:(Lcom/google/common/graph/Network;)Lcom/google/common/graph/NetworkBuilder;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.NetworkBuilder` `undirected`() @signature `Lcom/google/common/graph/NetworkBuilder;.undirected:()Lcom/google/common/graph/NetworkBuilder;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.NetworkBuilder` `allowsParallelEdges`(`com.google.common.graph.NetworkBuilder` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/common/graph/NetworkBuilder;.allowsParallelEdges:(Z)Lcom/google/common/graph/NetworkBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.graph.NetworkBuilder` `allowsSelfLoops`(`com.google.common.graph.NetworkBuilder` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/common/graph/NetworkBuilder;.allowsSelfLoops:(Z)Lcom/google/common/graph/NetworkBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.graph.MutableNetwork` `build`(`com.google.common.graph.NetworkBuilder` v1 @kind this) @signature `Lcom/google/common/graph/NetworkBuilder;.build:()Lcom/google/common/graph/MutableNetwork;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.graph.NetworkBuilder` `edgeOrder`(`com.google.common.graph.NetworkBuilder` v1 @kind this, `com.google.common.graph.ElementOrder` v2 @kind object) @signature `Lcom/google/common/graph/NetworkBuilder;.edgeOrder:(Lcom/google/common/graph/ElementOrder;)Lcom/google/common/graph/NetworkBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.graph.NetworkBuilder` `expectedEdgeCount`(`com.google.common.graph.NetworkBuilder` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/graph/NetworkBuilder;.expectedEdgeCount:(I)Lcom/google/common/graph/NetworkBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.graph.NetworkBuilder` `expectedNodeCount`(`com.google.common.graph.NetworkBuilder` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/graph/NetworkBuilder;.expectedNodeCount:(I)Lcom/google/common/graph/NetworkBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.graph.ImmutableNetwork$Builder` `immutable`(`com.google.common.graph.NetworkBuilder` v2 @kind this) @signature `Lcom/google/common/graph/NetworkBuilder;.immutable:()Lcom/google/common/graph/ImmutableNetwork$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.graph.NetworkBuilder` `nodeOrder`(`com.google.common.graph.NetworkBuilder` v1 @kind this, `com.google.common.graph.ElementOrder` v2 @kind object) @signature `Lcom/google/common/graph/NetworkBuilder;.nodeOrder:(Lcom/google/common/graph/ElementOrder;)Lcom/google/common/graph/NetworkBuilder;` @AccessFlag PUBLIC {

  # return;
}
