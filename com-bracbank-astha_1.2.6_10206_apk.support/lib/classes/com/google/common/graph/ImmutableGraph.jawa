record `com.google.common.graph.ImmutableGraph` @kind class @AccessFlag PUBLIC extends `com.google.common.graph.ForwardingGraph` @kind class {
  `com.google.common.graph.BaseGraph` `com.google.common.graph.ImmutableGraph.backingGraph` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.graph.ImmutableGraph` v0 @kind this, `com.google.common.graph.BaseGraph` v1 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.<init>:(Lcom/google/common/graph/BaseGraph;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.graph.GraphConnections` `connectionsOf`(`com.google.common.graph.Graph` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.connectionsOf:(Lcom/google/common/graph/Graph;Ljava/lang/Object;)Lcom/google/common/graph/GraphConnections;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.graph.ImmutableGraph` `copyOf`(`com.google.common.graph.Graph` v6 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.copyOf:(Lcom/google/common/graph/Graph;)Lcom/google/common/graph/ImmutableGraph;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.ImmutableGraph` `copyOf`(`com.google.common.graph.ImmutableGraph` v0 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.copyOf:(Lcom/google/common/graph/ImmutableGraph;)Lcom/google/common/graph/ImmutableGraph;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `getNodeConnections`(`com.google.common.graph.Graph` v4 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.getNodeConnections:(Lcom/google/common/graph/Graph;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Set` `adjacentNodes`(`com.google.common.graph.ImmutableGraph` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.adjacentNodes:(Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `allowsSelfLoops`(`com.google.common.graph.ImmutableGraph` v1 @kind this) @signature `Lcom/google/common/graph/ImmutableGraph;.allowsSelfLoops:()Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `degree`(`com.google.common.graph.ImmutableGraph` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.degree:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.graph.BaseGraph` `delegate`(`com.google.common.graph.ImmutableGraph` v1 @kind this) @signature `Lcom/google/common/graph/ImmutableGraph;.delegate:()Lcom/google/common/graph/BaseGraph;` @AccessFlag  {

  # return;
}
procedure `boolean` `hasEdgeConnecting`(`com.google.common.graph.ImmutableGraph` v0 @kind this, `com.google.common.graph.EndpointPair` v1 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.hasEdgeConnecting:(Lcom/google/common/graph/EndpointPair;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `hasEdgeConnecting`(`com.google.common.graph.ImmutableGraph` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.hasEdgeConnecting:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `inDegree`(`com.google.common.graph.ImmutableGraph` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.inDegree:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.graph.ElementOrder` `incidentEdgeOrder`(`com.google.common.graph.ImmutableGraph` v1 @kind this) @signature `Lcom/google/common/graph/ImmutableGraph;.incidentEdgeOrder:()Lcom/google/common/graph/ElementOrder;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `incidentEdges`(`com.google.common.graph.ImmutableGraph` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.incidentEdges:(Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isDirected`(`com.google.common.graph.ImmutableGraph` v1 @kind this) @signature `Lcom/google/common/graph/ImmutableGraph;.isDirected:()Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.graph.ElementOrder` `nodeOrder`(`com.google.common.graph.ImmutableGraph` v1 @kind this) @signature `Lcom/google/common/graph/ImmutableGraph;.nodeOrder:()Lcom/google/common/graph/ElementOrder;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `nodes`(`com.google.common.graph.ImmutableGraph` v1 @kind this) @signature `Lcom/google/common/graph/ImmutableGraph;.nodes:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `outDegree`(`com.google.common.graph.ImmutableGraph` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.outDegree:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `predecessors`(`com.google.common.graph.ImmutableGraph` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.predecessors:(Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `successors`(`com.google.common.graph.ImmutableGraph` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/graph/ImmutableGraph;.successors:(Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
