record `com.google.common.graph.AbstractDirectedNetworkConnections` @kind class @AccessFlag ABSTRACT extends `com.google.common.graph.NetworkConnections` @kind interface {
  `java.util.Map` `com.google.common.graph.AbstractDirectedNetworkConnections.inEdgeMap` @AccessFlag FINAL;
  `java.util.Map` `com.google.common.graph.AbstractDirectedNetworkConnections.outEdgeMap` @AccessFlag FINAL;
  `int` `com.google.common.graph.AbstractDirectedNetworkConnections.selfLoopCount` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.graph.AbstractDirectedNetworkConnections` v1 @kind this, `java.util.Map` v2 @kind object, `java.util.Map` v3 @kind object, `int` v4 ) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.<init>:(Ljava/util/Map;Ljava/util/Map;I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `access$000`(`com.google.common.graph.AbstractDirectedNetworkConnections` v0 @kind object) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.access$000:(Lcom/google/common/graph/AbstractDirectedNetworkConnections;)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `addInEdge`(`com.google.common.graph.AbstractDirectedNetworkConnections` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `boolean` v4 ) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.addInEdge:(Ljava/lang/Object;Ljava/lang/Object;Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addOutEdge`(`com.google.common.graph.AbstractDirectedNetworkConnections` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.addOutEdge:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `adjacentNode`(`com.google.common.graph.AbstractDirectedNetworkConnections` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.adjacentNode:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `adjacentNodes`(`com.google.common.graph.AbstractDirectedNetworkConnections` v2 @kind this) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.adjacentNodes:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `inEdges`(`com.google.common.graph.AbstractDirectedNetworkConnections` v1 @kind this) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.inEdges:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `incidentEdges`(`com.google.common.graph.AbstractDirectedNetworkConnections` v1 @kind this) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.incidentEdges:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `outEdges`(`com.google.common.graph.AbstractDirectedNetworkConnections` v1 @kind this) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.outEdges:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `removeInEdge`(`com.google.common.graph.AbstractDirectedNetworkConnections` v0 @kind this, `java.lang.Object` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.removeInEdge:(Ljava/lang/Object;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `removeOutEdge`(`com.google.common.graph.AbstractDirectedNetworkConnections` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/AbstractDirectedNetworkConnections;.removeOutEdge:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
