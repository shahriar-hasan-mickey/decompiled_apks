record `com.google.common.graph.AbstractNetwork$2` @kind class @AccessFlag  extends `com.google.common.base.Predicate` @kind interface {
  `com.google.common.graph.AbstractNetwork` `com.google.common.graph.AbstractNetwork$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `com.google.common.graph.AbstractNetwork$2.val$nodePresent` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `com.google.common.graph.AbstractNetwork$2.val$nodeToCheck` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.graph.AbstractNetwork$2` v0 @kind this, `com.google.common.graph.AbstractNetwork` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork$2;.<init>:(Lcom/google/common/graph/AbstractNetwork;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `apply`(`com.google.common.graph.AbstractNetwork$2` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/AbstractNetwork$2;.apply:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
