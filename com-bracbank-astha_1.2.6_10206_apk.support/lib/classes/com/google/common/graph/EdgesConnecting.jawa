record `com.google.common.graph.EdgesConnecting` @kind class @AccessFlag FINAL extends `java.util.AbstractSet` @kind class {
  `java.util.Map` `com.google.common.graph.EdgesConnecting.nodeToOutEdge` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.google.common.graph.EdgesConnecting.targetNode` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.graph.EdgesConnecting` v0 @kind this, `java.util.Map` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/EdgesConnecting;.<init>:(Ljava/util/Map;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `getConnectingEdge`(`com.google.common.graph.EdgesConnecting` v2 @kind this) @signature `Lcom/google/common/graph/EdgesConnecting;.getConnectingEdge:()Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `contains`(`com.google.common.graph.EdgesConnecting` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/EdgesConnecting;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.UnmodifiableIterator` `iterator`(`com.google.common.graph.EdgesConnecting` v1 @kind this) @signature `Lcom/google/common/graph/EdgesConnecting;.iterator:()Lcom/google/common/collect/UnmodifiableIterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.graph.EdgesConnecting` v1 @kind this) @signature `Lcom/google/common/graph/EdgesConnecting;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `size`(`com.google.common.graph.EdgesConnecting` v1 @kind this) @signature `Lcom/google/common/graph/EdgesConnecting;.size:()I` @AccessFlag PUBLIC {

  # return;
}
