record `com.google.common.graph.Graphs` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.common.graph.Graphs` v0 @kind this) @signature `Lcom/google/common/graph/Graphs;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `boolean` `canTraverseWithoutReusingEdge`(`com.google.common.graph.Graph` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/graph/Graphs;.canTraverseWithoutReusingEdge:(Lcom/google/common/graph/Graph;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `checkNonNegative`(`int` v2 ) @signature `Lcom/google/common/graph/Graphs;.checkNonNegative:(I)I` @AccessFlag STATIC {

  # return;
}
procedure `long` `checkNonNegative`(`long` v3 ) @signature `Lcom/google/common/graph/Graphs;.checkNonNegative:(J)J` @AccessFlag STATIC {

  # return;
}
procedure `int` `checkPositive`(`int` v2 ) @signature `Lcom/google/common/graph/Graphs;.checkPositive:(I)I` @AccessFlag STATIC {

  # return;
}
procedure `long` `checkPositive`(`long` v3 ) @signature `Lcom/google/common/graph/Graphs;.checkPositive:(J)J` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.graph.MutableGraph` `copyOf`(`com.google.common.graph.Graph` v3 @kind object) @signature `Lcom/google/common/graph/Graphs;.copyOf:(Lcom/google/common/graph/Graph;)Lcom/google/common/graph/MutableGraph;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.MutableNetwork` `copyOf`(`com.google.common.graph.Network` v5 @kind object) @signature `Lcom/google/common/graph/Graphs;.copyOf:(Lcom/google/common/graph/Network;)Lcom/google/common/graph/MutableNetwork;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.MutableValueGraph` `copyOf`(`com.google.common.graph.ValueGraph` v7 @kind object) @signature `Lcom/google/common/graph/Graphs;.copyOf:(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/MutableValueGraph;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `hasCycle`(`com.google.common.graph.Graph` v6 @kind object) @signature `Lcom/google/common/graph/Graphs;.hasCycle:(Lcom/google/common/graph/Graph;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `hasCycle`(`com.google.common.graph.Network` v2 @kind object) @signature `Lcom/google/common/graph/Graphs;.hasCycle:(Lcom/google/common/graph/Network;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.MutableGraph` `inducedSubgraph`(`com.google.common.graph.Graph` v5 @kind object, `java.lang.Iterable` v6 @kind object) @signature `Lcom/google/common/graph/Graphs;.inducedSubgraph:(Lcom/google/common/graph/Graph;Ljava/lang/Iterable;)Lcom/google/common/graph/MutableGraph;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.MutableNetwork` `inducedSubgraph`(`com.google.common.graph.Network` v6 @kind object, `java.lang.Iterable` v7 @kind object) @signature `Lcom/google/common/graph/Graphs;.inducedSubgraph:(Lcom/google/common/graph/Network;Ljava/lang/Iterable;)Lcom/google/common/graph/MutableNetwork;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.MutableValueGraph` `inducedSubgraph`(`com.google.common.graph.ValueGraph` v5 @kind object, `java.lang.Iterable` v6 @kind object) @signature `Lcom/google/common/graph/Graphs;.inducedSubgraph:(Lcom/google/common/graph/ValueGraph;Ljava/lang/Iterable;)Lcom/google/common/graph/MutableValueGraph;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `reachableNodes`(`com.google.common.graph.Graph` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/graph/Graphs;.reachableNodes:(Lcom/google/common/graph/Graph;Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `subgraphHasCycle`(`com.google.common.graph.Graph` v5 @kind object, `java.util.Map` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lcom/google/common/graph/Graphs;.subgraphHasCycle:(Lcom/google/common/graph/Graph;Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.graph.Graph` `transitiveClosure`(`com.google.common.graph.Graph` v10 @kind object) @signature `Lcom/google/common/graph/Graphs;.transitiveClosure:(Lcom/google/common/graph/Graph;)Lcom/google/common/graph/Graph;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.EndpointPair` `transpose`(`com.google.common.graph.EndpointPair` v1 @kind object) @signature `Lcom/google/common/graph/Graphs;.transpose:(Lcom/google/common/graph/EndpointPair;)Lcom/google/common/graph/EndpointPair;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.graph.Graph` `transpose`(`com.google.common.graph.Graph` v1 @kind object) @signature `Lcom/google/common/graph/Graphs;.transpose:(Lcom/google/common/graph/Graph;)Lcom/google/common/graph/Graph;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.Network` `transpose`(`com.google.common.graph.Network` v1 @kind object) @signature `Lcom/google/common/graph/Graphs;.transpose:(Lcom/google/common/graph/Network;)Lcom/google/common/graph/Network;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.graph.ValueGraph` `transpose`(`com.google.common.graph.ValueGraph` v1 @kind object) @signature `Lcom/google/common/graph/Graphs;.transpose:(Lcom/google/common/graph/ValueGraph;)Lcom/google/common/graph/ValueGraph;` @AccessFlag PUBLIC_STATIC {

  # return;
}
