record `com.google.common.math.StatsAccumulator` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `com.google.common.math.StatsAccumulator.count` @AccessFlag PRIVATE;
  `double` `com.google.common.math.StatsAccumulator.max` @AccessFlag PRIVATE;
  `double` `com.google.common.math.StatsAccumulator.mean` @AccessFlag PRIVATE;
  `double` `com.google.common.math.StatsAccumulator.min` @AccessFlag PRIVATE;
  `double` `com.google.common.math.StatsAccumulator.sumOfSquaresOfDeltas` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.math.StatsAccumulator` v2 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `double` `calculateNewMeanNonFinite`(`double` v1 , `double` v3 ) @signature `Lcom/google/common/math/StatsAccumulator;.calculateNewMeanNonFinite:(DD)D` @AccessFlag STATIC {

  # return;
}
procedure `void` `merge`(`com.google.common.math.StatsAccumulator` v17 @kind this, `long` v18 , `double` v20 , `double` v22 , `double` v24 , `double` v26 ) @signature `Lcom/google/common/math/StatsAccumulator;.merge:(JDDDD)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `add`(`com.google.common.math.StatsAccumulator` v9 @kind this, `double` v10 ) @signature `Lcom/google/common/math/StatsAccumulator;.add:(D)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addAll`(`com.google.common.math.StatsAccumulator` v16 @kind this, `com.google.common.math.Stats` v17 @kind object) @signature `Lcom/google/common/math/StatsAccumulator;.addAll:(Lcom/google/common/math/Stats;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addAll`(`com.google.common.math.StatsAccumulator` v16 @kind this, `com.google.common.math.StatsAccumulator` v17 @kind object) @signature `Lcom/google/common/math/StatsAccumulator;.addAll:(Lcom/google/common/math/StatsAccumulator;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addAll`(`com.google.common.math.StatsAccumulator` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lcom/google/common/math/StatsAccumulator;.addAll:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addAll`(`com.google.common.math.StatsAccumulator` v2 @kind this, `java.util.Iterator` v3 @kind object) @signature `Lcom/google/common/math/StatsAccumulator;.addAll:(Ljava/util/Iterator;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addAll`(`com.google.common.math.StatsAccumulator` v4 @kind this, `double`[] v5 @kind object) @signature `Lcom/google/common/math/StatsAccumulator;.addAll:([D)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addAll`(`com.google.common.math.StatsAccumulator` v4 @kind this, `int`[] v5 @kind object) @signature `Lcom/google/common/math/StatsAccumulator;.addAll:([I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addAll`(`com.google.common.math.StatsAccumulator` v4 @kind this, `long`[] v5 @kind object) @signature `Lcom/google/common/math/StatsAccumulator;.addAll:([J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `count`(`com.google.common.math.StatsAccumulator` v2 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.count:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `max`(`com.google.common.math.StatsAccumulator` v5 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.max:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `mean`(`com.google.common.math.StatsAccumulator` v5 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.mean:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `min`(`com.google.common.math.StatsAccumulator` v5 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.min:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `populationStandardDeviation`(`com.google.common.math.StatsAccumulator` v2 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.populationStandardDeviation:()D` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `double` `populationVariance`(`com.google.common.math.StatsAccumulator` v5 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.populationVariance:()D` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `double` `sampleStandardDeviation`(`com.google.common.math.StatsAccumulator` v2 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.sampleStandardDeviation:()D` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `double` `sampleVariance`(`com.google.common.math.StatsAccumulator` v6 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.sampleVariance:()D` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.math.Stats` `snapshot`(`com.google.common.math.StatsAccumulator` v12 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.snapshot:()Lcom/google/common/math/Stats;` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `sum`(`com.google.common.math.StatsAccumulator` v4 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.sum:()D` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `double` `sumOfSquaresOfDeltas`(`com.google.common.math.StatsAccumulator` v2 @kind this) @signature `Lcom/google/common/math/StatsAccumulator;.sumOfSquaresOfDeltas:()D` @AccessFlag  {

  # return;
}
