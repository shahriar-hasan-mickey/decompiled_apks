record `com.google.common.math.PairedStats` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `double` `com.google.common.math.PairedStats.sumOfProductsOfDeltas` @AccessFlag PRIVATE_FINAL;
  `com.google.common.math.Stats` `com.google.common.math.PairedStats.xStats` @AccessFlag PRIVATE_FINAL;
  `com.google.common.math.Stats` `com.google.common.math.PairedStats.yStats` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.common.math.PairedStats.BYTES` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.common.math.PairedStats.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.math.PairedStats` v0 @kind this, `com.google.common.math.Stats` v1 @kind object, `com.google.common.math.Stats` v2 @kind object, `double` v3 ) @signature `Lcom/google/common/math/PairedStats;.<init>:(Lcom/google/common/math/Stats;Lcom/google/common/math/Stats;D)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `double` `ensureInUnitRange`(`double` v3 ) @signature `Lcom/google/common/math/PairedStats;.ensureInUnitRange:(D)D` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `double` `ensurePositive`(`double` v3 ) @signature `Lcom/google/common/math/PairedStats;.ensurePositive:(D)D` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.math.PairedStats` `fromByteArray`(`byte`[] v4 @kind object) @signature `Lcom/google/common/math/PairedStats;.fromByteArray:([B)Lcom/google/common/math/PairedStats;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `count`(`com.google.common.math.PairedStats` v2 @kind this) @signature `Lcom/google/common/math/PairedStats;.count:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.math.PairedStats` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/math/PairedStats;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.math.PairedStats` v3 @kind this) @signature `Lcom/google/common/math/PairedStats;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.math.LinearTransformation` `leastSquaresFit`(`com.google.common.math.PairedStats` v7 @kind this) @signature `Lcom/google/common/math/PairedStats;.leastSquaresFit:()Lcom/google/common/math/LinearTransformation;` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `pearsonsCorrelationCoefficient`(`com.google.common.math.PairedStats` v9 @kind this) @signature `Lcom/google/common/math/PairedStats;.pearsonsCorrelationCoefficient:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `populationCovariance`(`com.google.common.math.PairedStats` v5 @kind this) @signature `Lcom/google/common/math/PairedStats;.populationCovariance:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `sampleCovariance`(`com.google.common.math.PairedStats` v6 @kind this) @signature `Lcom/google/common/math/PairedStats;.sampleCovariance:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `sumOfProductsOfDeltas`(`com.google.common.math.PairedStats` v2 @kind this) @signature `Lcom/google/common/math/PairedStats;.sumOfProductsOfDeltas:()D` @AccessFlag  {

  # return;
}
procedure `byte`[] `toByteArray`(`com.google.common.math.PairedStats` v3 @kind this) @signature `Lcom/google/common/math/PairedStats;.toByteArray:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.math.PairedStats` v7 @kind this) @signature `Lcom/google/common/math/PairedStats;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.math.Stats` `xStats`(`com.google.common.math.PairedStats` v1 @kind this) @signature `Lcom/google/common/math/PairedStats;.xStats:()Lcom/google/common/math/Stats;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.math.Stats` `yStats`(`com.google.common.math.PairedStats` v1 @kind this) @signature `Lcom/google/common/math/PairedStats;.yStats:()Lcom/google/common/math/Stats;` @AccessFlag PUBLIC {

  # return;
}
