record `com.google.common.math.LinearTransformation$LinearTransformationBuilder` @kind class @AccessFlag PUBLIC_FINAL {
  `double` `com.google.common.math.LinearTransformation$LinearTransformationBuilder.x1` @AccessFlag PRIVATE_FINAL;
  `double` `com.google.common.math.LinearTransformation$LinearTransformationBuilder.y1` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.math.LinearTransformation$LinearTransformationBuilder` v0 @kind this, `double` v1 , `double` v3 ) @signature `Lcom/google/common/math/LinearTransformation$LinearTransformationBuilder;.<init>:(DD)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.math.LinearTransformation$LinearTransformationBuilder` v0 @kind this, `double` v1 , `double` v3 , `com.google.common.math.LinearTransformation$1` v5 @kind object) @signature `Lcom/google/common/math/LinearTransformation$LinearTransformationBuilder;.<init>:(DDLcom/google/common/math/LinearTransformation$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.math.LinearTransformation` `and`(`com.google.common.math.LinearTransformation$LinearTransformationBuilder` v5 @kind this, `double` v6 , `double` v8 ) @signature `Lcom/google/common/math/LinearTransformation$LinearTransformationBuilder;.and:(DD)Lcom/google/common/math/LinearTransformation;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.math.LinearTransformation` `withSlope`(`com.google.common.math.LinearTransformation$LinearTransformationBuilder` v4 @kind this, `double` v5 ) @signature `Lcom/google/common/math/LinearTransformation$LinearTransformationBuilder;.withSlope:(D)Lcom/google/common/math/LinearTransformation;` @AccessFlag PUBLIC {

  # return;
}
