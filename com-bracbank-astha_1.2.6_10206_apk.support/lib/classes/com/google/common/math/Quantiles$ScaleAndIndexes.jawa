record `com.google.common.math.Quantiles$ScaleAndIndexes` @kind class @AccessFlag PUBLIC_FINAL {
  `int`[] `com.google.common.math.Quantiles$ScaleAndIndexes.indexes` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.common.math.Quantiles$ScaleAndIndexes.scale` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.math.Quantiles$ScaleAndIndexes` v4 @kind this, `int` v5 , `int`[] v6 @kind object) @signature `Lcom/google/common/math/Quantiles$ScaleAndIndexes;.<init>:(I[I)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.math.Quantiles$ScaleAndIndexes` v0 @kind this, `int` v1 , `int`[] v2 @kind object, `com.google.common.math.Quantiles$1` v3 @kind object) @signature `Lcom/google/common/math/Quantiles$ScaleAndIndexes;.<init>:(I[ILcom/google/common/math/Quantiles$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.Map` `compute`(`com.google.common.math.Quantiles$ScaleAndIndexes` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/common/math/Quantiles$ScaleAndIndexes;.compute:(Ljava/util/Collection;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `compute`(`com.google.common.math.Quantiles$ScaleAndIndexes` v0 @kind this, `double`[] v1 @kind object) @signature `Lcom/google/common/math/Quantiles$ScaleAndIndexes;.compute:([D)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `compute`(`com.google.common.math.Quantiles$ScaleAndIndexes` v0 @kind this, `int`[] v1 @kind object) @signature `Lcom/google/common/math/Quantiles$ScaleAndIndexes;.compute:([I)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `compute`(`com.google.common.math.Quantiles$ScaleAndIndexes` v0 @kind this, `long`[] v1 @kind object) @signature `Lcom/google/common/math/Quantiles$ScaleAndIndexes;.compute:([J)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `computeInPlace`(`com.google.common.math.Quantiles$ScaleAndIndexes` v19 @kind this, `double`[] v20 @kind object) @signature `Lcom/google/common/math/Quantiles$ScaleAndIndexes;.computeInPlace:([D)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
