record `com.google.common.math.Stats` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `long` `com.google.common.math.Stats.count` @AccessFlag PRIVATE_FINAL;
  `double` `com.google.common.math.Stats.max` @AccessFlag PRIVATE_FINAL;
  `double` `com.google.common.math.Stats.mean` @AccessFlag PRIVATE_FINAL;
  `double` `com.google.common.math.Stats.min` @AccessFlag PRIVATE_FINAL;
  `double` `com.google.common.math.Stats.sumOfSquaresOfDeltas` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.common.math.Stats.BYTES` @AccessFlag STATIC_FINAL;
global `long` `@@com.google.common.math.Stats.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.math.Stats` v0 @kind this, `long` v1 , `double` v3 , `double` v5 , `double` v7 , `double` v9 ) @signature `Lcom/google/common/math/Stats;.<init>:(JDDDD)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.math.Stats` `fromByteArray`(`byte`[] v4 @kind object) @signature `Lcom/google/common/math/Stats;.fromByteArray:([B)Lcom/google/common/math/Stats;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `meanOf`(`java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/math/Stats;.meanOf:(Ljava/lang/Iterable;)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `meanOf`(`java.util.Iterator` v10 @kind object) @signature `Lcom/google/common/math/Stats;.meanOf:(Ljava/util/Iterator;)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `meanOf`(`double`[] v7 @kind object) @signature `Lcom/google/common/math/Stats;.meanOf:([D)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `meanOf`(`int`[] v7 @kind object) @signature `Lcom/google/common/math/Stats;.meanOf:([I)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `meanOf`(`long`[] v7 @kind object) @signature `Lcom/google/common/math/Stats;.meanOf:([J)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.math.Stats` `of`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/math/Stats;.of:(Ljava/lang/Iterable;)Lcom/google/common/math/Stats;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.math.Stats` `of`(`java.util.Iterator` v1 @kind object) @signature `Lcom/google/common/math/Stats;.of:(Ljava/util/Iterator;)Lcom/google/common/math/Stats;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.math.Stats` `of`(`double`[] v1 @kind object) @signature `Lcom/google/common/math/Stats;.of:([D)Lcom/google/common/math/Stats;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.math.Stats` `of`(`int`[] v1 @kind object) @signature `Lcom/google/common/math/Stats;.of:([I)Lcom/google/common/math/Stats;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.math.Stats` `of`(`long`[] v1 @kind object) @signature `Lcom/google/common/math/Stats;.of:([J)Lcom/google/common/math/Stats;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.math.Stats` `readFrom`(`java.nio.ByteBuffer` v15 @kind object) @signature `Lcom/google/common/math/Stats;.readFrom:(Ljava/nio/ByteBuffer;)Lcom/google/common/math/Stats;` @AccessFlag STATIC {

  # return;
}
procedure `long` `count`(`com.google.common.math.Stats` v2 @kind this) @signature `Lcom/google/common/math/Stats;.count:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.math.Stats` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/google/common/math/Stats;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.math.Stats` v3 @kind this) @signature `Lcom/google/common/math/Stats;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `max`(`com.google.common.math.Stats` v5 @kind this) @signature `Lcom/google/common/math/Stats;.max:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `mean`(`com.google.common.math.Stats` v5 @kind this) @signature `Lcom/google/common/math/Stats;.mean:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `min`(`com.google.common.math.Stats` v5 @kind this) @signature `Lcom/google/common/math/Stats;.min:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `populationStandardDeviation`(`com.google.common.math.Stats` v2 @kind this) @signature `Lcom/google/common/math/Stats;.populationStandardDeviation:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `populationVariance`(`com.google.common.math.Stats` v5 @kind this) @signature `Lcom/google/common/math/Stats;.populationVariance:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `sampleStandardDeviation`(`com.google.common.math.Stats` v2 @kind this) @signature `Lcom/google/common/math/Stats;.sampleStandardDeviation:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `sampleVariance`(`com.google.common.math.Stats` v6 @kind this) @signature `Lcom/google/common/math/Stats;.sampleVariance:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `sum`(`com.google.common.math.Stats` v4 @kind this) @signature `Lcom/google/common/math/Stats;.sum:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `sumOfSquaresOfDeltas`(`com.google.common.math.Stats` v2 @kind this) @signature `Lcom/google/common/math/Stats;.sumOfSquaresOfDeltas:()D` @AccessFlag  {

  # return;
}
procedure `byte`[] `toByteArray`(`com.google.common.math.Stats` v2 @kind this) @signature `Lcom/google/common/math/Stats;.toByteArray:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.math.Stats` v6 @kind this) @signature `Lcom/google/common/math/Stats;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `writeTo`(`com.google.common.math.Stats` v4 @kind this, `java.nio.ByteBuffer` v5 @kind object) @signature `Lcom/google/common/math/Stats;.writeTo:(Ljava/nio/ByteBuffer;)V` @AccessFlag  {

  # return;
}
