record `com.google.common.escape.Escapers$Builder$1` @kind class @AccessFlag  extends `com.google.common.escape.ArrayBasedCharEscaper` @kind class {
  `char`[] `com.google.common.escape.Escapers$Builder$1.replacementChars` @AccessFlag PRIVATE_FINAL;
  `com.google.common.escape.Escapers$Builder` `com.google.common.escape.Escapers$Builder$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.escape.Escapers$Builder$1` v0 @kind this, `com.google.common.escape.Escapers$Builder` v1 @kind object, `java.util.Map` v2 @kind object, `char` v3 , `char` v4 ) @signature `Lcom/google/common/escape/Escapers$Builder$1;.<init>:(Lcom/google/common/escape/Escapers$Builder;Ljava/util/Map;CC)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `char`[] `escapeUnsafe`(`com.google.common.escape.Escapers$Builder$1` v0 @kind this, `char` v1 ) @signature `Lcom/google/common/escape/Escapers$Builder$1;.escapeUnsafe:(C)[C` @AccessFlag PROTECTED {

  # return;
}
