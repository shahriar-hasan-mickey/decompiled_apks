record `com.google.common.escape.ArrayBasedCharEscaper` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.escape.CharEscaper` @kind class {
  `char`[][] `com.google.common.escape.ArrayBasedCharEscaper.replacements` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.common.escape.ArrayBasedCharEscaper.replacementsLength` @AccessFlag PRIVATE_FINAL;
  `char` `com.google.common.escape.ArrayBasedCharEscaper.safeMax` @AccessFlag PRIVATE_FINAL;
  `char` `com.google.common.escape.ArrayBasedCharEscaper.safeMin` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.escape.ArrayBasedCharEscaper` v0 @kind this, `com.google.common.escape.ArrayBasedEscaperMap` v1 @kind object, `char` v2 , `char` v3 ) @signature `Lcom/google/common/escape/ArrayBasedCharEscaper;.<init>:(Lcom/google/common/escape/ArrayBasedEscaperMap;CC)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.escape.ArrayBasedCharEscaper` v0 @kind this, `java.util.Map` v1 @kind object, `char` v2 , `char` v3 ) @signature `Lcom/google/common/escape/ArrayBasedCharEscaper;.<init>:(Ljava/util/Map;CC)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `escape`(`com.google.common.escape.ArrayBasedCharEscaper` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/google/common/escape/ArrayBasedCharEscaper;.escape:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `char`[] `escape`(`com.google.common.escape.ArrayBasedCharEscaper` v1 @kind this, `char` v2 ) @signature `Lcom/google/common/escape/ArrayBasedCharEscaper;.escape:(C)[C` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `char`[] `escapeUnsafe`(`char` v0 ) @signature `Lcom/google/common/escape/ArrayBasedCharEscaper;.escapeUnsafe:(C)[C` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
