record `com.google.common.escape.Escapers` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.google.common.escape.Escaper` `@@com.google.common.escape.Escapers.NULL_ESCAPER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/escape/Escapers;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.escape.Escapers` v0 @kind this) @signature `Lcom/google/common/escape/Escapers;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.escape.UnicodeEscaper` `asUnicodeEscaper`(`com.google.common.escape.Escaper` v3 @kind object) @signature `Lcom/google/common/escape/Escapers;.asUnicodeEscaper:(Lcom/google/common/escape/Escaper;)Lcom/google/common/escape/UnicodeEscaper;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.escape.Escapers$Builder` `builder`() @signature `Lcom/google/common/escape/Escapers;.builder:()Lcom/google/common/escape/Escapers$Builder;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `computeReplacement`(`com.google.common.escape.CharEscaper` v0 @kind object, `char` v1 ) @signature `Lcom/google/common/escape/Escapers;.computeReplacement:(Lcom/google/common/escape/CharEscaper;C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `computeReplacement`(`com.google.common.escape.UnicodeEscaper` v0 @kind object, `int` v1 ) @signature `Lcom/google/common/escape/Escapers;.computeReplacement:(Lcom/google/common/escape/UnicodeEscaper;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.escape.Escaper` `nullEscaper`() @signature `Lcom/google/common/escape/Escapers;.nullEscaper:()Lcom/google/common/escape/Escaper;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `stringOrNull`(`char`[] v1 @kind object) @signature `Lcom/google/common/escape/Escapers;.stringOrNull:([C)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.escape.UnicodeEscaper` `wrap`(`com.google.common.escape.CharEscaper` v1 @kind object) @signature `Lcom/google/common/escape/Escapers;.wrap:(Lcom/google/common/escape/CharEscaper;)Lcom/google/common/escape/UnicodeEscaper;` @AccessFlag PRIVATE_STATIC {

  # return;
}
