record `com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` @kind class @AccessFlag FINAL extends `com.google.common.hash.AbstractHasher` @kind class {
  `long` `com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher.buffer` @AccessFlag PRIVATE;
  `int` `com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher.h1` @AccessFlag PRIVATE;
  `boolean` `com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher.isDone` @AccessFlag PRIVATE;
  `int` `com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher.length` @AccessFlag PRIVATE;
  `int` `com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher.shift` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `update`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v4 @kind this, `int` v5 , `long` v6 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.update:(IJ)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.hash.HashCode` `hash`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v3 @kind this) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.hash:()Lcom/google/common/hash/HashCode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putByte`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v2 @kind this, `byte` v3 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putByte:(B)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putByte`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v0 @kind this, `byte` v1 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putByte:(B)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBytes`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putBytes:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBytes`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putBytes:([BII)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBytes`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putBytes:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBytes`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putBytes:([BII)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putChar`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v2 @kind this, `char` v3 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putChar:(C)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putChar`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v0 @kind this, `char` v1 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putChar:(C)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putInt`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v2 @kind this, `int` v3 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putInt:(I)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putInt`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putInt:(I)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putLong`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v3 @kind this, `long` v4 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putLong:(J)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putLong`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v0 @kind this, `long` v1 ) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putLong:(J)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putString`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v9 @kind this, `java.lang.CharSequence` v10 @kind object, `java.nio.charset.Charset` v11 @kind object) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putString:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putString`(`com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lcom/google/common/hash/Murmur3_32HashFunction$Murmur3_32Hasher;.putString:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
