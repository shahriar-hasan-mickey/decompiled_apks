record `com.google.common.hash.SipHashFunction$SipHasher` @kind class @AccessFlag FINAL extends `com.google.common.hash.AbstractStreamingHasher` @kind class {
  `long` `com.google.common.hash.SipHashFunction$SipHasher.b` @AccessFlag PRIVATE;
  `int` `com.google.common.hash.SipHashFunction$SipHasher.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.common.hash.SipHashFunction$SipHasher.d` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.common.hash.SipHashFunction$SipHasher.finalM` @AccessFlag PRIVATE;
  `long` `com.google.common.hash.SipHashFunction$SipHasher.v0` @AccessFlag PRIVATE;
  `long` `com.google.common.hash.SipHashFunction$SipHasher.v1` @AccessFlag PRIVATE;
  `long` `com.google.common.hash.SipHashFunction$SipHasher.v2` @AccessFlag PRIVATE;
  `long` `com.google.common.hash.SipHashFunction$SipHasher.v3` @AccessFlag PRIVATE;
}
global `int` `@@com.google.common.hash.SipHashFunction$SipHasher.CHUNK_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.hash.SipHashFunction$SipHasher` v2 @kind this, `int` v3 , `int` v4 , `long` v5 , `long` v7 ) @signature `Lcom/google/common/hash/SipHashFunction$SipHasher;.<init>:(IIJJ)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `processM`(`com.google.common.hash.SipHashFunction$SipHasher` v2 @kind this, `long` v3 ) @signature `Lcom/google/common/hash/SipHashFunction$SipHasher;.processM:(J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `sipRound`(`com.google.common.hash.SipHashFunction$SipHasher` v8 @kind this, `int` v9 ) @signature `Lcom/google/common/hash/SipHashFunction$SipHasher;.sipRound:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.hash.HashCode` `makeHash`(`com.google.common.hash.SipHashFunction$SipHasher` v5 @kind this) @signature `Lcom/google/common/hash/SipHashFunction$SipHasher;.makeHash:()Lcom/google/common/hash/HashCode;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `process`(`com.google.common.hash.SipHashFunction$SipHasher` v4 @kind this, `java.nio.ByteBuffer` v5 @kind object) @signature `Lcom/google/common/hash/SipHashFunction$SipHasher;.process:(Ljava/nio/ByteBuffer;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processRemaining`(`com.google.common.hash.SipHashFunction$SipHasher` v7 @kind this, `java.nio.ByteBuffer` v8 @kind object) @signature `Lcom/google/common/hash/SipHashFunction$SipHasher;.processRemaining:(Ljava/nio/ByteBuffer;)V` @AccessFlag PROTECTED {

  # return;
}
