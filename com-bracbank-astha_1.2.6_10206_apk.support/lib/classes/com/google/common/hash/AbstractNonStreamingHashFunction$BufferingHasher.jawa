record `com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher` @kind class @AccessFlag FINAL extends `com.google.common.hash.AbstractHasher` @kind class {
  `com.google.common.hash.AbstractNonStreamingHashFunction$ExposedByteArrayOutputStream` `com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher.stream` @AccessFlag FINAL;
  `com.google.common.hash.AbstractNonStreamingHashFunction` `com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher` v0 @kind this, `com.google.common.hash.AbstractNonStreamingHashFunction` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/hash/AbstractNonStreamingHashFunction$BufferingHasher;.<init>:(Lcom/google/common/hash/AbstractNonStreamingHashFunction;I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.hash.HashCode` `hash`(`com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher` v4 @kind this) @signature `Lcom/google/common/hash/AbstractNonStreamingHashFunction$BufferingHasher;.hash:()Lcom/google/common/hash/HashCode;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putByte`(`com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher` v1 @kind this, `byte` v2 ) @signature `Lcom/google/common/hash/AbstractNonStreamingHashFunction$BufferingHasher;.putByte:(B)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putByte`(`com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher` v0 @kind this, `byte` v1 ) @signature `Lcom/google/common/hash/AbstractNonStreamingHashFunction$BufferingHasher;.putByte:(B)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBytes`(`com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/common/hash/AbstractNonStreamingHashFunction$BufferingHasher;.putBytes:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBytes`(`com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/hash/AbstractNonStreamingHashFunction$BufferingHasher;.putBytes:([BII)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBytes`(`com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/common/hash/AbstractNonStreamingHashFunction$BufferingHasher;.putBytes:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBytes`(`com.google.common.hash.AbstractNonStreamingHashFunction$BufferingHasher` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/common/hash/AbstractNonStreamingHashFunction$BufferingHasher;.putBytes:([BII)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
