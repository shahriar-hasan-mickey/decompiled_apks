record `com.google.common.hash.AbstractHasher` @kind class @AccessFlag ABSTRACT extends `com.google.common.hash.Hasher` @kind interface {
}
procedure `void` `<init>`(`com.google.common.hash.AbstractHasher` v0 @kind this) @signature `Lcom/google/common/hash/AbstractHasher;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBoolean`(`com.google.common.hash.AbstractHasher` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putBoolean:(Z)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBoolean`(`com.google.common.hash.AbstractHasher` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putBoolean:(Z)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putByte`(`com.google.common.hash.AbstractHasher` v0 @kind this, `byte` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putByte:(B)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBytes`(`com.google.common.hash.AbstractHasher` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/google/common/hash/AbstractHasher;.putBytes:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBytes`(`com.google.common.hash.AbstractHasher` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/common/hash/AbstractHasher;.putBytes:([B)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBytes`(`com.google.common.hash.AbstractHasher` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/common/hash/AbstractHasher;.putBytes:([BII)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBytes`(`com.google.common.hash.AbstractHasher` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/common/hash/AbstractHasher;.putBytes:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBytes`(`com.google.common.hash.AbstractHasher` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/google/common/hash/AbstractHasher;.putBytes:([B)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBytes`(`com.google.common.hash.AbstractHasher` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/common/hash/AbstractHasher;.putBytes:([BII)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putChar`(`com.google.common.hash.AbstractHasher` v1 @kind this, `char` v2 ) @signature `Lcom/google/common/hash/AbstractHasher;.putChar:(C)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putChar`(`com.google.common.hash.AbstractHasher` v0 @kind this, `char` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putChar:(C)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putDouble`(`com.google.common.hash.AbstractHasher` v0 @kind this, `double` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putDouble:(D)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putDouble`(`com.google.common.hash.AbstractHasher` v0 @kind this, `double` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putDouble:(D)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putFloat`(`com.google.common.hash.AbstractHasher` v0 @kind this, `float` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putFloat:(F)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putFloat`(`com.google.common.hash.AbstractHasher` v0 @kind this, `float` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putFloat:(F)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putInt`(`com.google.common.hash.AbstractHasher` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/hash/AbstractHasher;.putInt:(I)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putInt`(`com.google.common.hash.AbstractHasher` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putInt:(I)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putLong`(`com.google.common.hash.AbstractHasher` v3 @kind this, `long` v4 ) @signature `Lcom/google/common/hash/AbstractHasher;.putLong:(J)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putLong`(`com.google.common.hash.AbstractHasher` v0 @kind this, `long` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putLong:(J)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putObject`(`com.google.common.hash.AbstractHasher` v0 @kind this, `java.lang.Object` v1 @kind object, `com.google.common.hash.Funnel` v2 @kind object) @signature `Lcom/google/common/hash/AbstractHasher;.putObject:(Ljava/lang/Object;Lcom/google/common/hash/Funnel;)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putShort`(`com.google.common.hash.AbstractHasher` v1 @kind this, `short` v2 ) @signature `Lcom/google/common/hash/AbstractHasher;.putShort:(S)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putShort`(`com.google.common.hash.AbstractHasher` v0 @kind this, `short` v1 ) @signature `Lcom/google/common/hash/AbstractHasher;.putShort:(S)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putString`(`com.google.common.hash.AbstractHasher` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lcom/google/common/hash/AbstractHasher;.putString:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putString`(`com.google.common.hash.AbstractHasher` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lcom/google/common/hash/AbstractHasher;.putString:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putUnencodedChars`(`com.google.common.hash.AbstractHasher` v3 @kind this, `java.lang.CharSequence` v4 @kind object) @signature `Lcom/google/common/hash/AbstractHasher;.putUnencodedChars:(Ljava/lang/CharSequence;)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putUnencodedChars`(`com.google.common.hash.AbstractHasher` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lcom/google/common/hash/AbstractHasher;.putUnencodedChars:(Ljava/lang/CharSequence;)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
