record `com.google.common.hash.ChecksumHashFunction$ChecksumHasher` @kind class @AccessFlag FINAL extends `com.google.common.hash.AbstractByteHasher` @kind class {
  `java.util.zip.Checksum` `com.google.common.hash.ChecksumHashFunction$ChecksumHasher.checksum` @AccessFlag PRIVATE_FINAL;
  `com.google.common.hash.ChecksumHashFunction` `com.google.common.hash.ChecksumHashFunction$ChecksumHasher.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.hash.ChecksumHashFunction$ChecksumHasher` v0 @kind this, `com.google.common.hash.ChecksumHashFunction` v1 @kind object, `java.util.zip.Checksum` v2 @kind object) @signature `Lcom/google/common/hash/ChecksumHashFunction$ChecksumHasher;.<init>:(Lcom/google/common/hash/ChecksumHashFunction;Ljava/util/zip/Checksum;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.hash.ChecksumHashFunction$ChecksumHasher` v0 @kind this, `com.google.common.hash.ChecksumHashFunction` v1 @kind object, `java.util.zip.Checksum` v2 @kind object, `com.google.common.hash.ChecksumHashFunction$1` v3 @kind object) @signature `Lcom/google/common/hash/ChecksumHashFunction$ChecksumHasher;.<init>:(Lcom/google/common/hash/ChecksumHashFunction;Ljava/util/zip/Checksum;Lcom/google/common/hash/ChecksumHashFunction$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.hash.HashCode` `hash`(`com.google.common.hash.ChecksumHashFunction$ChecksumHasher` v4 @kind this) @signature `Lcom/google/common/hash/ChecksumHashFunction$ChecksumHasher;.hash:()Lcom/google/common/hash/HashCode;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`com.google.common.hash.ChecksumHashFunction$ChecksumHasher` v1 @kind this, `byte` v2 ) @signature `Lcom/google/common/hash/ChecksumHashFunction$ChecksumHasher;.update:(B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `update`(`com.google.common.hash.ChecksumHashFunction$ChecksumHasher` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/hash/ChecksumHashFunction$ChecksumHasher;.update:([BII)V` @AccessFlag PROTECTED {

  # return;
}
