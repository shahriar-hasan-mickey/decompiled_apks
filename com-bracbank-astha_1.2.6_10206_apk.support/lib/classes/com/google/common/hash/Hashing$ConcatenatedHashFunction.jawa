record `com.google.common.hash.Hashing$ConcatenatedHashFunction` @kind class @AccessFlag FINAL extends `com.google.common.hash.AbstractCompositeHashFunction` @kind class {
}
procedure `void` `<init>`(`com.google.common.hash.Hashing$ConcatenatedHashFunction` v7 @kind this, `com.google.common.hash.HashFunction`[] v8 @kind object) @signature `Lcom/google/common/hash/Hashing$ConcatenatedHashFunction;.<init>:([Lcom/google/common/hash/HashFunction;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.hash.Hashing$ConcatenatedHashFunction` v0 @kind this, `com.google.common.hash.HashFunction`[] v1 @kind object, `com.google.common.hash.Hashing$1` v2 @kind object) @signature `Lcom/google/common/hash/Hashing$ConcatenatedHashFunction;.<init>:([Lcom/google/common/hash/HashFunction;Lcom/google/common/hash/Hashing$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `int` `bits`(`com.google.common.hash.Hashing$ConcatenatedHashFunction` v5 @kind this) @signature `Lcom/google/common/hash/Hashing$ConcatenatedHashFunction;.bits:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.hash.Hashing$ConcatenatedHashFunction` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/hash/Hashing$ConcatenatedHashFunction;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.hash.Hashing$ConcatenatedHashFunction` v1 @kind this) @signature `Lcom/google/common/hash/Hashing$ConcatenatedHashFunction;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.HashCode` `makeHash`(`com.google.common.hash.Hashing$ConcatenatedHashFunction` v6 @kind this, `com.google.common.hash.Hasher`[] v7 @kind object) @signature `Lcom/google/common/hash/Hashing$ConcatenatedHashFunction;.makeHash:([Lcom/google/common/hash/Hasher;)Lcom/google/common/hash/HashCode;` @AccessFlag  {

  # return;
}
