record `com.google.common.hash.HashCode$IntHashCode` @kind class @AccessFlag FINAL extends `com.google.common.hash.HashCode` @kind class, `java.io.Serializable` @kind interface {
  `int` `com.google.common.hash.HashCode$IntHashCode.hash` @AccessFlag FINAL;
}
global `long` `@@com.google.common.hash.HashCode$IntHashCode.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.hash.HashCode$IntHashCode` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/hash/HashCode$IntHashCode;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `byte`[] `asBytes`(`com.google.common.hash.HashCode$IntHashCode` v4 @kind this) @signature `Lcom/google/common/hash/HashCode$IntHashCode;.asBytes:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `asInt`(`com.google.common.hash.HashCode$IntHashCode` v1 @kind this) @signature `Lcom/google/common/hash/HashCode$IntHashCode;.asInt:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `asLong`(`com.google.common.hash.HashCode$IntHashCode` v2 @kind this) @signature `Lcom/google/common/hash/HashCode$IntHashCode;.asLong:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `bits`(`com.google.common.hash.HashCode$IntHashCode` v1 @kind this) @signature `Lcom/google/common/hash/HashCode$IntHashCode;.bits:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equalsSameBits`(`com.google.common.hash.HashCode$IntHashCode` v1 @kind this, `com.google.common.hash.HashCode` v2 @kind object) @signature `Lcom/google/common/hash/HashCode$IntHashCode;.equalsSameBits:(Lcom/google/common/hash/HashCode;)Z` @AccessFlag  {

  # return;
}
procedure `long` `padToLong`(`com.google.common.hash.HashCode$IntHashCode` v2 @kind this) @signature `Lcom/google/common/hash/HashCode$IntHashCode;.padToLong:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `writeBytesToImpl`(`com.google.common.hash.HashCode$IntHashCode` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/google/common/hash/HashCode$IntHashCode;.writeBytesToImpl:([BII)V` @AccessFlag  {

  # return;
}
