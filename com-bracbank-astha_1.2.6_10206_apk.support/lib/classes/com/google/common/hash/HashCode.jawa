record `com.google.common.hash.HashCode` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `char`[] `@@com.google.common.hash.HashCode.hexDigits` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/hash/HashCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.hash.HashCode` v0 @kind this) @signature `Lcom/google/common/hash/HashCode;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `decode`(`char` v3 ) @signature `Lcom/google/common/hash/HashCode;.decode:(C)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.hash.HashCode` `fromBytes`(`byte`[] v2 @kind object) @signature `Lcom/google/common/hash/HashCode;.fromBytes:([B)Lcom/google/common/hash/HashCode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.hash.HashCode` `fromBytesNoCopy`(`byte`[] v1 @kind object) @signature `Lcom/google/common/hash/HashCode;.fromBytesNoCopy:([B)Lcom/google/common/hash/HashCode;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.hash.HashCode` `fromInt`(`int` v1 ) @signature `Lcom/google/common/hash/HashCode;.fromInt:(I)Lcom/google/common/hash/HashCode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.hash.HashCode` `fromLong`(`long` v1 ) @signature `Lcom/google/common/hash/HashCode;.fromLong:(J)Lcom/google/common/hash/HashCode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.hash.HashCode` `fromString`(`java.lang.String` v5 @kind object) @signature `Lcom/google/common/hash/HashCode;.fromString:(Ljava/lang/String;)Lcom/google/common/hash/HashCode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `asBytes`() @signature `Lcom/google/common/hash/HashCode;.asBytes:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `asInt`() @signature `Lcom/google/common/hash/HashCode;.asInt:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `asLong`() @signature `Lcom/google/common/hash/HashCode;.asLong:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `bits`() @signature `Lcom/google/common/hash/HashCode;.bits:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`com.google.common.hash.HashCode` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/hash/HashCode;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `equalsSameBits`(`com.google.common.hash.HashCode` v0 @kind object) @signature `Lcom/google/common/hash/HashCode;.equalsSameBits:(Lcom/google/common/hash/HashCode;)Z` @AccessFlag ABSTRACT {

  # return;
}
procedure `byte`[] `getBytesInternal`(`com.google.common.hash.HashCode` v1 @kind this) @signature `Lcom/google/common/hash/HashCode;.getBytesInternal:()[B` @AccessFlag  {

  # return;
}
procedure `int` `hashCode`(`com.google.common.hash.HashCode` v5 @kind this) @signature `Lcom/google/common/hash/HashCode;.hashCode:()I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `long` `padToLong`() @signature `Lcom/google/common/hash/HashCode;.padToLong:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.hash.HashCode` v7 @kind this) @signature `Lcom/google/common/hash/HashCode;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `writeBytesTo`(`com.google.common.hash.HashCode` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/common/hash/HashCode;.writeBytesTo:([BII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `writeBytesToImpl`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/google/common/hash/HashCode;.writeBytesToImpl:([BII)V` @AccessFlag ABSTRACT {

  # return;
}
