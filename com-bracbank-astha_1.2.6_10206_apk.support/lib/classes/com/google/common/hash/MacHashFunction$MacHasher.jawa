record `com.google.common.hash.MacHashFunction$MacHasher` @kind class @AccessFlag FINAL extends `com.google.common.hash.AbstractByteHasher` @kind class {
  `boolean` `com.google.common.hash.MacHashFunction$MacHasher.done` @AccessFlag PRIVATE;
  `javax.crypto.Mac` `com.google.common.hash.MacHashFunction$MacHasher.mac` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.hash.MacHashFunction$MacHasher` v0 @kind this, `javax.crypto.Mac` v1 @kind object) @signature `Lcom/google/common/hash/MacHashFunction$MacHasher;.<init>:(Ljavax/crypto/Mac;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.hash.MacHashFunction$MacHasher` v0 @kind this, `javax.crypto.Mac` v1 @kind object, `com.google.common.hash.MacHashFunction$1` v2 @kind object) @signature `Lcom/google/common/hash/MacHashFunction$MacHasher;.<init>:(Ljavax/crypto/Mac;Lcom/google/common/hash/MacHashFunction$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `checkNotDone`(`com.google.common.hash.MacHashFunction$MacHasher` v2 @kind this) @signature `Lcom/google/common/hash/MacHashFunction$MacHasher;.checkNotDone:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.hash.HashCode` `hash`(`com.google.common.hash.MacHashFunction$MacHasher` v1 @kind this) @signature `Lcom/google/common/hash/MacHashFunction$MacHasher;.hash:()Lcom/google/common/hash/HashCode;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`com.google.common.hash.MacHashFunction$MacHasher` v1 @kind this, `byte` v2 ) @signature `Lcom/google/common/hash/MacHashFunction$MacHasher;.update:(B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `update`(`com.google.common.hash.MacHashFunction$MacHasher` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/common/hash/MacHashFunction$MacHasher;.update:(Ljava/nio/ByteBuffer;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `update`(`com.google.common.hash.MacHashFunction$MacHasher` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/google/common/hash/MacHashFunction$MacHasher;.update:([B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `update`(`com.google.common.hash.MacHashFunction$MacHasher` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/hash/MacHashFunction$MacHasher;.update:([BII)V` @AccessFlag PROTECTED {

  # return;
}
