record `com.google.common.hash.Funnels$StringCharsetFunnel` @kind class @AccessFlag  extends `com.google.common.hash.Funnel` @kind interface, `java.io.Serializable` @kind interface {
  `java.nio.charset.Charset` `com.google.common.hash.Funnels$StringCharsetFunnel.charset` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.hash.Funnels$StringCharsetFunnel` v0 @kind this, `java.nio.charset.Charset` v1 @kind object) @signature `Lcom/google/common/hash/Funnels$StringCharsetFunnel;.<init>:(Ljava/nio/charset/Charset;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`com.google.common.hash.Funnels$StringCharsetFunnel` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/hash/Funnels$StringCharsetFunnel;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `funnel`(`com.google.common.hash.Funnels$StringCharsetFunnel` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `com.google.common.hash.PrimitiveSink` v3 @kind object) @signature `Lcom/google/common/hash/Funnels$StringCharsetFunnel;.funnel:(Ljava/lang/CharSequence;Lcom/google/common/hash/PrimitiveSink;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `funnel`(`com.google.common.hash.Funnels$StringCharsetFunnel` v0 @kind this, `java.lang.Object` v1 @kind object, `com.google.common.hash.PrimitiveSink` v2 @kind object) @signature `Lcom/google/common/hash/Funnels$StringCharsetFunnel;.funnel:(Ljava/lang/Object;Lcom/google/common/hash/PrimitiveSink;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.hash.Funnels$StringCharsetFunnel` v2 @kind this) @signature `Lcom/google/common/hash/Funnels$StringCharsetFunnel;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.hash.Funnels$StringCharsetFunnel` v3 @kind this) @signature `Lcom/google/common/hash/Funnels$StringCharsetFunnel;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.hash.Funnels$StringCharsetFunnel` v2 @kind this) @signature `Lcom/google/common/hash/Funnels$StringCharsetFunnel;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
