record `com.google.common.hash.LittleEndianByteArray` @kind class @AccessFlag FINAL {
}
global `boolean` `@@com.google.common.hash.LittleEndianByteArray.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `com.google.common.hash.LittleEndianByteArray$LittleEndianBytes` `@@com.google.common.hash.LittleEndianByteArray.byteArray` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/hash/LittleEndianByteArray;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.hash.LittleEndianByteArray` v0 @kind this) @signature `Lcom/google/common/hash/LittleEndianByteArray;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `load32`(`byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/google/common/hash/LittleEndianByteArray;.load32:([BI)I` @AccessFlag STATIC {

  # return;
}
procedure `long` `load64`(`byte`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/common/hash/LittleEndianByteArray;.load64:([BI)J` @AccessFlag STATIC {

  # return;
}
procedure `long` `load64Safely`(`byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/google/common/hash/LittleEndianByteArray;.load64Safely:([BII)J` @AccessFlag STATIC {

  # return;
}
procedure `void` `store64`(`byte`[] v1 @kind object, `int` v2 , `long` v3 ) @signature `Lcom/google/common/hash/LittleEndianByteArray;.store64:([BIJ)V` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `usingUnsafe`() @signature `Lcom/google/common/hash/LittleEndianByteArray;.usingUnsafe:()Z` @AccessFlag STATIC {

  # return;
}
