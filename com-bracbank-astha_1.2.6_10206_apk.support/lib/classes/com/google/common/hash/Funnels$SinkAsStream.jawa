record `com.google.common.hash.Funnels$SinkAsStream` @kind class @AccessFlag  extends `java.io.OutputStream` @kind class {
  `com.google.common.hash.PrimitiveSink` `com.google.common.hash.Funnels$SinkAsStream.sink` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.hash.Funnels$SinkAsStream` v0 @kind this, `com.google.common.hash.PrimitiveSink` v1 @kind object) @signature `Lcom/google/common/hash/Funnels$SinkAsStream;.<init>:(Lcom/google/common/hash/PrimitiveSink;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.hash.Funnels$SinkAsStream` v3 @kind this) @signature `Lcom/google/common/hash/Funnels$SinkAsStream;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.google.common.hash.Funnels$SinkAsStream` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/hash/Funnels$SinkAsStream;.write:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.google.common.hash.Funnels$SinkAsStream` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/google/common/hash/Funnels$SinkAsStream;.write:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.google.common.hash.Funnels$SinkAsStream` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/hash/Funnels$SinkAsStream;.write:([BII)V` @AccessFlag PUBLIC {

  # return;
}
