record `com.google.common.hash.Striped64$Cell` @kind class @AccessFlag FINAL {
  `long` `com.google.common.hash.Striped64$Cell.p0` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.p1` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.p2` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.p3` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.p4` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.p5` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.p6` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.q0` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.q1` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.q2` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.q3` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.q4` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.q5` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.q6` @AccessFlag VOLATILE;
  `long` `com.google.common.hash.Striped64$Cell.value` @AccessFlag VOLATILE;
}
global `sun.misc.Unsafe` `@@com.google.common.hash.Striped64$Cell.UNSAFE` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.common.hash.Striped64$Cell.valueOffset` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/hash/Striped64$Cell;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.hash.Striped64$Cell` v0 @kind this, `long` v1 ) @signature `Lcom/google/common/hash/Striped64$Cell;.<init>:(J)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `cas`(`com.google.common.hash.Striped64$Cell` v8 @kind this, `long` v9 , `long` v11 ) @signature `Lcom/google/common/hash/Striped64$Cell;.cas:(JJ)Z` @AccessFlag FINAL {

  # return;
}
