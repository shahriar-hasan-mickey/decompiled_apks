record `com.google.common.hash.AbstractByteHasher` @kind class @AccessFlag ABSTRACT extends `com.google.common.hash.AbstractHasher` @kind class {
  `java.nio.ByteBuffer` `com.google.common.hash.AbstractByteHasher.scratch` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.hash.AbstractByteHasher` v2 @kind this) @signature `Lcom/google/common/hash/AbstractByteHasher;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.hash.Hasher` `update`(`com.google.common.hash.AbstractByteHasher` v2 @kind this, `int` v3 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.update:(I)Lcom/google/common/hash/Hasher;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.hash.Hasher` `putByte`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `byte` v1 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putByte:(B)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putByte`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `byte` v1 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putByte:(B)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBytes`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/common/hash/AbstractByteHasher;.putBytes:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBytes`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/google/common/hash/AbstractByteHasher;.putBytes:([B)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putBytes`(`com.google.common.hash.AbstractByteHasher` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putBytes:([BII)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBytes`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/common/hash/AbstractByteHasher;.putBytes:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBytes`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/google/common/hash/AbstractByteHasher;.putBytes:([B)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putBytes`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putBytes:([BII)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putChar`(`com.google.common.hash.AbstractByteHasher` v1 @kind this, `char` v2 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putChar:(C)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putChar`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `char` v1 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putChar:(C)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putInt`(`com.google.common.hash.AbstractByteHasher` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putInt:(I)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putInt`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putInt:(I)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putLong`(`com.google.common.hash.AbstractByteHasher` v1 @kind this, `long` v2 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putLong:(J)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putLong`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `long` v1 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putLong:(J)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `putShort`(`com.google.common.hash.AbstractByteHasher` v1 @kind this, `short` v2 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putShort:(S)Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.PrimitiveSink` `putShort`(`com.google.common.hash.AbstractByteHasher` v0 @kind this, `short` v1 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.putShort:(S)Lcom/google/common/hash/PrimitiveSink;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `update`(`byte` v0 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.update:(B)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `update`(`com.google.common.hash.AbstractByteHasher` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/google/common/hash/AbstractByteHasher;.update:(Ljava/nio/ByteBuffer;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `update`(`com.google.common.hash.AbstractByteHasher` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/common/hash/AbstractByteHasher;.update:([B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `update`(`com.google.common.hash.AbstractByteHasher` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/common/hash/AbstractByteHasher;.update:([BII)V` @AccessFlag PROTECTED {

  # return;
}
