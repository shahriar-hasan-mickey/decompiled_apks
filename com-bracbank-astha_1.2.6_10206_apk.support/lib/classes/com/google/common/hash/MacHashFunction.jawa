record `com.google.common.hash.MacHashFunction` @kind class @AccessFlag FINAL extends `com.google.common.hash.AbstractHashFunction` @kind class {
  `int` `com.google.common.hash.MacHashFunction.bits` @AccessFlag PRIVATE_FINAL;
  `java.security.Key` `com.google.common.hash.MacHashFunction.key` @AccessFlag PRIVATE_FINAL;
  `javax.crypto.Mac` `com.google.common.hash.MacHashFunction.prototype` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.common.hash.MacHashFunction.supportsClone` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.common.hash.MacHashFunction.toString` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.hash.MacHashFunction` v0 @kind this, `java.lang.String` v1 @kind object, `java.security.Key` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/google/common/hash/MacHashFunction;.<init>:(Ljava/lang/String;Ljava/security/Key;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `javax.crypto.Mac` `getMac`(`java.lang.String` v0 @kind object, `java.security.Key` v1 @kind object) @signature `Lcom/google/common/hash/MacHashFunction;.getMac:(Ljava/lang/String;Ljava/security/Key;)Ljavax/crypto/Mac;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `supportsClone`(`javax.crypto.Mac` v0 @kind object) @signature `Lcom/google/common/hash/MacHashFunction;.supportsClone:(Ljavax/crypto/Mac;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `bits`(`com.google.common.hash.MacHashFunction` v1 @kind this) @signature `Lcom/google/common/hash/MacHashFunction;.bits:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.hash.Hasher` `newHasher`(`com.google.common.hash.MacHashFunction` v4 @kind this) @signature `Lcom/google/common/hash/MacHashFunction;.newHasher:()Lcom/google/common/hash/Hasher;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.hash.MacHashFunction` v1 @kind this) @signature `Lcom/google/common/hash/MacHashFunction;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
