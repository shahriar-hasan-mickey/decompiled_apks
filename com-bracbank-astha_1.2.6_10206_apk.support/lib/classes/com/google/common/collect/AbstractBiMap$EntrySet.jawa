record `com.google.common.collect.AbstractBiMap$EntrySet` @kind class @AccessFlag  extends `com.google.common.collect.ForwardingSet` @kind class {
  `java.util.Set` `com.google.common.collect.AbstractBiMap$EntrySet.esDelegate` @AccessFlag FINAL;
  `com.google.common.collect.AbstractBiMap` `com.google.common.collect.AbstractBiMap$EntrySet.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractBiMap$EntrySet` v0 @kind this, `com.google.common.collect.AbstractBiMap` v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.<init>:(Lcom/google/common/collect/AbstractBiMap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractBiMap$EntrySet` v0 @kind this, `com.google.common.collect.AbstractBiMap` v1 @kind object, `com.google.common.collect.AbstractBiMap$1` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.<init>:(Lcom/google/common/collect/AbstractBiMap;Lcom/google/common/collect/AbstractBiMap$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.AbstractBiMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.AbstractBiMap$EntrySet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsAll`(`com.google.common.collect.AbstractBiMap$EntrySet` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `delegate`(`com.google.common.collect.AbstractBiMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.delegate:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.util.Collection` `delegate`(`com.google.common.collect.AbstractBiMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.delegate:()Ljava/util/Collection;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `delegate`(`com.google.common.collect.AbstractBiMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.delegate:()Ljava/util/Set;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.AbstractBiMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `remove`(`com.google.common.collect.AbstractBiMap$EntrySet` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `removeAll`(`com.google.common.collect.AbstractBiMap$EntrySet` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `retainAll`(`com.google.common.collect.AbstractBiMap$EntrySet` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.collect.AbstractBiMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.collect.AbstractBiMap$EntrySet` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$EntrySet;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
