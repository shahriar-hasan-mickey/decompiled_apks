record `com.google.common.collect.AbstractIterator` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.collect.UnmodifiableIterator` @kind class {
  `java.lang.Object` `com.google.common.collect.AbstractIterator.next` @AccessFlag PRIVATE;
  `com.google.common.collect.AbstractIterator$State` `com.google.common.collect.AbstractIterator.state` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractIterator;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `boolean` `tryToComputeNext`(`com.google.common.collect.AbstractIterator` v2 @kind this) @signature `Lcom/google/common/collect/AbstractIterator;.tryToComputeNext:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `computeNext`() @signature `Lcom/google/common/collect/AbstractIterator;.computeNext:()Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `endOfData`(`com.google.common.collect.AbstractIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractIterator;.endOfData:()Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.AbstractIterator` v4 @kind this) @signature `Lcom/google/common/collect/AbstractIterator;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.AbstractIterator` v2 @kind this) @signature `Lcom/google/common/collect/AbstractIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `peek`(`com.google.common.collect.AbstractIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractIterator;.peek:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
