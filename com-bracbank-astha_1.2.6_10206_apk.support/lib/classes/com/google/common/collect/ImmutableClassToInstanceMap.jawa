record `com.google.common.collect.ImmutableClassToInstanceMap` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.common.collect.ForwardingMap` @kind class, `com.google.common.collect.ClassToInstanceMap` @kind interface, `java.io.Serializable` @kind interface {
  `com.google.common.collect.ImmutableMap` `com.google.common.collect.ImmutableClassToInstanceMap.delegate` @AccessFlag PRIVATE_FINAL;
}
global `com.google.common.collect.ImmutableClassToInstanceMap` `@@com.google.common.collect.ImmutableClassToInstanceMap.EMPTY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableClassToInstanceMap` v0 @kind this, `com.google.common.collect.ImmutableMap` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.<init>:(Lcom/google/common/collect/ImmutableMap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableClassToInstanceMap` v0 @kind this, `com.google.common.collect.ImmutableMap` v1 @kind object, `com.google.common.collect.ImmutableClassToInstanceMap$1` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.<init>:(Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableClassToInstanceMap$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.ImmutableClassToInstanceMap$Builder` `builder`() @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.builder:()Lcom/google/common/collect/ImmutableClassToInstanceMap$Builder;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableClassToInstanceMap` `copyOf`(`java.util.Map` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableClassToInstanceMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableClassToInstanceMap` `of`() @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.of:()Lcom/google/common/collect/ImmutableClassToInstanceMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableClassToInstanceMap` `of`(`java.lang.Class` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.of:(Ljava/lang/Class;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableClassToInstanceMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `delegate`(`com.google.common.collect.ImmutableClassToInstanceMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.delegate:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `delegate`(`com.google.common.collect.ImmutableClassToInstanceMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.delegate:()Ljava/util/Map;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.Object` `getInstance`(`com.google.common.collect.ImmutableClassToInstanceMap` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.getInstance:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `putInstance`(`com.google.common.collect.ImmutableClassToInstanceMap` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.putInstance:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `readResolve`(`com.google.common.collect.ImmutableClassToInstanceMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableClassToInstanceMap;.readResolve:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
