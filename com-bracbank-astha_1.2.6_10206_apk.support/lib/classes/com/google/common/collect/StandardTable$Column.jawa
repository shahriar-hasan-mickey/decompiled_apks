record `com.google.common.collect.StandardTable$Column` @kind class @AccessFlag  extends `com.google.common.collect.Maps$ViewCachingAbstractMap` @kind class {
  `java.lang.Object` `com.google.common.collect.StandardTable$Column.columnKey` @AccessFlag FINAL;
  `com.google.common.collect.StandardTable` `com.google.common.collect.StandardTable$Column.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.StandardTable$Column` v0 @kind this, `com.google.common.collect.StandardTable` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable$Column;.<init>:(Lcom/google/common/collect/StandardTable;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.StandardTable$Column` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/StandardTable$Column;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `createEntrySet`(`com.google.common.collect.StandardTable$Column` v2 @kind this) @signature `Lcom/google/common/collect/StandardTable$Column;.createEntrySet:()Ljava/util/Set;` @AccessFlag  {

  # return;
}
procedure `java.util.Set` `createKeySet`(`com.google.common.collect.StandardTable$Column` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable$Column;.createKeySet:()Ljava/util/Set;` @AccessFlag  {

  # return;
}
procedure `java.util.Collection` `createValues`(`com.google.common.collect.StandardTable$Column` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable$Column;.createValues:()Ljava/util/Collection;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.StandardTable$Column` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/StandardTable$Column;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.StandardTable$Column` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/StandardTable$Column;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.StandardTable$Column` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/StandardTable$Column;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `removeFromColumnIf`(`com.google.common.collect.StandardTable$Column` v5 @kind this, `com.google.common.base.Predicate` v6 @kind object) @signature `Lcom/google/common/collect/StandardTable$Column;.removeFromColumnIf:(Lcom/google/common/base/Predicate;)Z` @AccessFlag  {

  # return;
}
