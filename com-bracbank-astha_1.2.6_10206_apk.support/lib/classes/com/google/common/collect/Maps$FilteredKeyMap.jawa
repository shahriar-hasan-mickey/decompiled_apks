record `com.google.common.collect.Maps$FilteredKeyMap` @kind class @AccessFlag  extends `com.google.common.collect.Maps$AbstractFilteredMap` @kind class {
  `com.google.common.base.Predicate` `com.google.common.collect.Maps$FilteredKeyMap.keyPredicate` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.Maps$FilteredKeyMap` v0 @kind this, `java.util.Map` v1 @kind object, `com.google.common.base.Predicate` v2 @kind object, `com.google.common.base.Predicate` v3 @kind object) @signature `Lcom/google/common/collect/Maps$FilteredKeyMap;.<init>:(Ljava/util/Map;Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.Maps$FilteredKeyMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Maps$FilteredKeyMap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `createEntrySet`(`com.google.common.collect.Maps$FilteredKeyMap` v2 @kind this) @signature `Lcom/google/common/collect/Maps$FilteredKeyMap;.createEntrySet:()Ljava/util/Set;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.util.Set` `createKeySet`(`com.google.common.collect.Maps$FilteredKeyMap` v2 @kind this) @signature `Lcom/google/common/collect/Maps$FilteredKeyMap;.createKeySet:()Ljava/util/Set;` @AccessFlag  {

  # return;
}
