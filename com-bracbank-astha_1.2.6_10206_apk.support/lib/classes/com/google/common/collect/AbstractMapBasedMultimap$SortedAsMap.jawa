record `com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` @kind class @AccessFlag  extends `com.google.common.collect.AbstractMapBasedMultimap$AsMap` @kind class, `java.util.SortedMap` @kind interface {
  `java.util.SortedSet` `com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap.sortedKeySet` @AccessFlag ;
  `com.google.common.collect.AbstractMapBasedMultimap` `com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v0 @kind this, `com.google.common.collect.AbstractMapBasedMultimap` v1 @kind object, `java.util.SortedMap` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap;Ljava/util/SortedMap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Comparator` `comparator`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.comparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `createKeySet`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.createKeySet:()Ljava/util/Set;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `java.util.SortedSet` `createKeySet`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v3 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.createKeySet:()Ljava/util/SortedSet;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `firstKey`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.firstKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.SortedMap` `headMap`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.headMap:(Ljava/lang/Object;)Ljava/util/SortedMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.SortedSet` `keySet`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.keySet:()Ljava/util/SortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `lastKey`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.lastKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.SortedMap` `sortedMap`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.sortedMap:()Ljava/util/SortedMap;` @AccessFlag  {

  # return;
}
procedure `java.util.SortedMap` `subMap`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.SortedMap` `tailMap`(`com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$SortedAsMap;.tailMap:(Ljava/lang/Object;)Ljava/util/SortedMap;` @AccessFlag PUBLIC {

  # return;
}
