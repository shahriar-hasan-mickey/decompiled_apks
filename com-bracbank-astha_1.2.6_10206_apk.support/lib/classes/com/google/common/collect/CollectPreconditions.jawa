record `com.google.common.collect.CollectPreconditions` @kind class @AccessFlag FINAL {
}
procedure `void` `<init>`(`com.google.common.collect.CollectPreconditions` v0 @kind this) @signature `Lcom/google/common/collect/CollectPreconditions;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `checkEntryNotNull`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/CollectPreconditions;.checkEntryNotNull:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC {

  # return;
}
procedure `int` `checkNonnegative`(`int` v3 , `java.lang.String` v4 @kind object) @signature `Lcom/google/common/collect/CollectPreconditions;.checkNonnegative:(ILjava/lang/String;)I` @AccessFlag STATIC {

  # return;
}
procedure `long` `checkNonnegative`(`long` v3 , `java.lang.String` v5 @kind object) @signature `Lcom/google/common/collect/CollectPreconditions;.checkNonnegative:(JLjava/lang/String;)J` @AccessFlag STATIC {

  # return;
}
procedure `void` `checkPositive`(`int` v3 , `java.lang.String` v4 @kind object) @signature `Lcom/google/common/collect/CollectPreconditions;.checkPositive:(ILjava/lang/String;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `checkRemove`(`boolean` v1 ) @signature `Lcom/google/common/collect/CollectPreconditions;.checkRemove:(Z)V` @AccessFlag STATIC {

  # return;
}
