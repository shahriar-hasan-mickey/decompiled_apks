record `com.google.common.collect.CompactHashMap$Itr` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `int` `com.google.common.collect.CompactHashMap$Itr.currentIndex` @AccessFlag ;
  `int` `com.google.common.collect.CompactHashMap$Itr.expectedMetadata` @AccessFlag ;
  `int` `com.google.common.collect.CompactHashMap$Itr.indexToRemove` @AccessFlag ;
  `com.google.common.collect.CompactHashMap` `com.google.common.collect.CompactHashMap$Itr.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.CompactHashMap$Itr` v1 @kind this, `com.google.common.collect.CompactHashMap` v2 @kind object) @signature `Lcom/google/common/collect/CompactHashMap$Itr;.<init>:(Lcom/google/common/collect/CompactHashMap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.CompactHashMap$Itr` v0 @kind this, `com.google.common.collect.CompactHashMap` v1 @kind object, `com.google.common.collect.CompactHashMap$1` v2 @kind object) @signature `Lcom/google/common/collect/CompactHashMap$Itr;.<init>:(Lcom/google/common/collect/CompactHashMap;Lcom/google/common/collect/CompactHashMap$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `checkForConcurrentModification`(`com.google.common.collect.CompactHashMap$Itr` v2 @kind this) @signature `Lcom/google/common/collect/CompactHashMap$Itr;.checkForConcurrentModification:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `getOutput`(`int` v0 ) @signature `Lcom/google/common/collect/CompactHashMap$Itr;.getOutput:(I)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.CompactHashMap$Itr` v1 @kind this) @signature `Lcom/google/common/collect/CompactHashMap$Itr;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `incrementExpectedModCount`(`com.google.common.collect.CompactHashMap$Itr` v1 @kind this) @signature `Lcom/google/common/collect/CompactHashMap$Itr;.incrementExpectedModCount:()V` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.CompactHashMap$Itr` v3 @kind this) @signature `Lcom/google/common/collect/CompactHashMap$Itr;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.CompactHashMap$Itr` v3 @kind this) @signature `Lcom/google/common/collect/CompactHashMap$Itr;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
