record `com.google.common.collect.Range` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.common.collect.RangeGwtSerializationDependencies` @kind class, `com.google.common.base.Predicate` @kind interface {
  `com.google.common.collect.Cut` `com.google.common.collect.Range.lowerBound` @AccessFlag FINAL;
  `com.google.common.collect.Cut` `com.google.common.collect.Range.upperBound` @AccessFlag FINAL;
}
global `com.google.common.collect.Range` `@@com.google.common.collect.Range.ALL` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.common.collect.Range.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/collect/Range;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.Range` v2 @kind this, `com.google.common.collect.Cut` v3 @kind object, `com.google.common.collect.Cut` v4 @kind object) @signature `Lcom/google/common/collect/Range;.<init>:(Lcom/google/common/collect/Cut;Lcom/google/common/collect/Cut;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.Range` `all`() @signature `Lcom/google/common/collect/Range;.all:()Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `atLeast`(`java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Range;.atLeast:(Ljava/lang/Comparable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `atMost`(`java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Range;.atMost:(Ljava/lang/Comparable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `closed`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Range;.closed:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `closedOpen`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Range;.closedOpen:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compareOrThrow`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Range;.compareOrThrow:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `create`(`com.google.common.collect.Cut` v1 @kind object, `com.google.common.collect.Cut` v2 @kind object) @signature `Lcom/google/common/collect/Range;.create:(Lcom/google/common/collect/Cut;Lcom/google/common/collect/Cut;)Lcom/google/common/collect/Range;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `downTo`(`java.lang.Comparable` v1 @kind object, `com.google.common.collect.BoundType` v2 @kind object) @signature `Lcom/google/common/collect/Range;.downTo:(Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `encloseAll`(`java.lang.Iterable` v4 @kind object) @signature `Lcom/google/common/collect/Range;.encloseAll:(Ljava/lang/Iterable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `greaterThan`(`java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Range;.greaterThan:(Ljava/lang/Comparable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `lessThan`(`java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Range;.lessThan:(Ljava/lang/Comparable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.Function` `lowerBoundFn`() @signature `Lcom/google/common/collect/Range;.lowerBoundFn:()Lcom/google/common/base/Function;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `open`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Range;.open:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `openClosed`(`java.lang.Comparable` v0 @kind object, `java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Range;.openClosed:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `range`(`java.lang.Comparable` v1 @kind object, `com.google.common.collect.BoundType` v2 @kind object, `java.lang.Comparable` v3 @kind object, `com.google.common.collect.BoundType` v4 @kind object) @signature `Lcom/google/common/collect/Range;.range:(Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Ordering` `rangeLexOrdering`() @signature `Lcom/google/common/collect/Range;.rangeLexOrdering:()Lcom/google/common/collect/Ordering;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `singleton`(`java.lang.Comparable` v0 @kind object) @signature `Lcom/google/common/collect/Range;.singleton:(Ljava/lang/Comparable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.Cut` v2 @kind object, `com.google.common.collect.Cut` v3 @kind object) @signature `Lcom/google/common/collect/Range;.toString:(Lcom/google/common/collect/Cut;Lcom/google/common/collect/Cut;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.collect.Range` `upTo`(`java.lang.Comparable` v1 @kind object, `com.google.common.collect.BoundType` v2 @kind object) @signature `Lcom/google/common/collect/Range;.upTo:(Ljava/lang/Comparable;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.Function` `upperBoundFn`() @signature `Lcom/google/common/collect/Range;.upperBoundFn:()Lcom/google/common/base/Function;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `apply`(`com.google.common.collect.Range` v0 @kind this, `java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Range;.apply:(Ljava/lang/Comparable;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `apply`(`com.google.common.collect.Range` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/Range;.apply:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.Range` `canonical`(`com.google.common.collect.Range` v2 @kind this, `com.google.common.collect.DiscreteDomain` v3 @kind object) @signature `Lcom/google/common/collect/Range;.canonical:(Lcom/google/common/collect/DiscreteDomain;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.Range` v1 @kind this, `java.lang.Comparable` v2 @kind object) @signature `Lcom/google/common/collect/Range;.contains:(Ljava/lang/Comparable;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsAll`(`com.google.common.collect.Range` v5 @kind this, `java.lang.Iterable` v6 @kind object) @signature `Lcom/google/common/collect/Range;.containsAll:(Ljava/lang/Iterable;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `encloses`(`com.google.common.collect.Range` v2 @kind this, `com.google.common.collect.Range` v3 @kind object) @signature `Lcom/google/common/collect/Range;.encloses:(Lcom/google/common/collect/Range;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.Range` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/Range;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.Range` `gap`(`com.google.common.collect.Range` v4 @kind this, `com.google.common.collect.Range` v5 @kind object) @signature `Lcom/google/common/collect/Range;.gap:(Lcom/google/common/collect/Range;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasLowerBound`(`com.google.common.collect.Range` v2 @kind this) @signature `Lcom/google/common/collect/Range;.hasLowerBound:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasUpperBound`(`com.google.common.collect.Range` v2 @kind this) @signature `Lcom/google/common/collect/Range;.hasUpperBound:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.Range` v2 @kind this) @signature `Lcom/google/common/collect/Range;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.Range` `intersection`(`com.google.common.collect.Range` v4 @kind this, `com.google.common.collect.Range` v5 @kind object) @signature `Lcom/google/common/collect/Range;.intersection:(Lcom/google/common/collect/Range;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isConnected`(`com.google.common.collect.Range` v2 @kind this, `com.google.common.collect.Range` v3 @kind object) @signature `Lcom/google/common/collect/Range;.isConnected:(Lcom/google/common/collect/Range;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.Range` v2 @kind this) @signature `Lcom/google/common/collect/Range;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.BoundType` `lowerBoundType`(`com.google.common.collect.Range` v1 @kind this) @signature `Lcom/google/common/collect/Range;.lowerBoundType:()Lcom/google/common/collect/BoundType;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Comparable` `lowerEndpoint`(`com.google.common.collect.Range` v1 @kind this) @signature `Lcom/google/common/collect/Range;.lowerEndpoint:()Ljava/lang/Comparable;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `readResolve`(`com.google.common.collect.Range` v1 @kind this) @signature `Lcom/google/common/collect/Range;.readResolve:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.Range` `span`(`com.google.common.collect.Range` v3 @kind this, `com.google.common.collect.Range` v4 @kind object) @signature `Lcom/google/common/collect/Range;.span:(Lcom/google/common/collect/Range;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.Range` v2 @kind this) @signature `Lcom/google/common/collect/Range;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.BoundType` `upperBoundType`(`com.google.common.collect.Range` v1 @kind this) @signature `Lcom/google/common/collect/Range;.upperBoundType:()Lcom/google/common/collect/BoundType;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Comparable` `upperEndpoint`(`com.google.common.collect.Range` v1 @kind this) @signature `Lcom/google/common/collect/Range;.upperEndpoint:()Ljava/lang/Comparable;` @AccessFlag PUBLIC {

  # return;
}
