record `com.google.common.collect.Tables$TransposeTable` @kind class @AccessFlag  extends `com.google.common.collect.AbstractTable` @kind class {
  `com.google.common.collect.Table` `com.google.common.collect.Tables$TransposeTable.original` @AccessFlag FINAL;
}
global `com.google.common.base.Function` `@@com.google.common.collect.Tables$TransposeTable.TRANSPOSE_CELL` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/collect/Tables$TransposeTable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.Tables$TransposeTable` v0 @kind this, `com.google.common.collect.Table` v1 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.<init>:(Lcom/google/common/collect/Table;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Iterator` `cellIterator`(`com.google.common.collect.Tables$TransposeTable` v2 @kind this) @signature `Lcom/google/common/collect/Tables$TransposeTable;.cellIterator:()Ljava/util/Iterator;` @AccessFlag  {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this) @signature `Lcom/google/common/collect/Tables$TransposeTable;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `column`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.column:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `columnKeySet`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this) @signature `Lcom/google/common/collect/Tables$TransposeTable;.columnKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `columnMap`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this) @signature `Lcom/google/common/collect/Tables$TransposeTable;.columnMap:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.contains:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsColumn`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.containsColumn:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsRow`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.containsRow:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsValue`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this, `com.google.common.collect.Table` v2 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.putAll:(Lcom/google/common/collect/Table;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `row`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Tables$TransposeTable;.row:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `rowKeySet`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this) @signature `Lcom/google/common/collect/Tables$TransposeTable;.rowKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `rowMap`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this) @signature `Lcom/google/common/collect/Tables$TransposeTable;.rowMap:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this) @signature `Lcom/google/common/collect/Tables$TransposeTable;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.common.collect.Tables$TransposeTable` v1 @kind this) @signature `Lcom/google/common/collect/Tables$TransposeTable;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC {

  # return;
}
