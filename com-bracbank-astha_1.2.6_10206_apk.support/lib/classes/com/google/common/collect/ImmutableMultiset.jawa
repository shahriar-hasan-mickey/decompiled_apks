record `com.google.common.collect.ImmutableMultiset` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.collect.ImmutableMultisetGwtSerializationDependencies` @kind class, `com.google.common.collect.Multiset` @kind interface {
  `com.google.common.collect.ImmutableList` `com.google.common.collect.ImmutableMultiset.asList` @AccessFlag PRIVATE_TRANSIENT;
  `com.google.common.collect.ImmutableSet` `com.google.common.collect.ImmutableMultiset.entrySet` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableMultiset` v0 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset$Builder` `builder`() @signature `Lcom/google/common/collect/ImmutableMultiset;.builder:()Lcom/google/common/collect/ImmutableMultiset$Builder;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `copyFromElements`(`java.lang.Object`[] v1 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.copyFromElements:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `copyFromEntries`(`java.util.Collection` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.copyFromEntries:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `copyOf`(`java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `copyOf`(`java.util.Iterator` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.copyOf:(Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `copyOf`(`java.lang.Object`[] v0 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `createEntrySet`(`com.google.common.collect.ImmutableMultiset` v2 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset;.createEntrySet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `of`() @signature `Lcom/google/common/collect/ImmutableMultiset;.of:()Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `of`(`java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `of`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object`[] v7 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `add`(`com.google.common.collect.ImmutableMultiset` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/collect/ImmutableMultiset;.add:(Ljava/lang/Object;I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableList` `asList`(`com.google.common.collect.ImmutableMultiset` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset;.asList:()Lcom/google/common/collect/ImmutableList;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.ImmutableMultiset` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `copyIntoArray`(`com.google.common.collect.ImmutableMultiset` v4 @kind this, `java.lang.Object`[] v5 @kind object, `int` v6 ) @signature `Lcom/google/common/collect/ImmutableMultiset;.copyIntoArray:([Ljava/lang/Object;I)I` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `elementSet`() @signature `Lcom/google/common/collect/ImmutableMultiset;.elementSet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Set` `elementSet`(`com.google.common.collect.ImmutableMultiset` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset;.elementSet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `entrySet`(`com.google.common.collect.ImmutableMultiset` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset;.entrySet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `entrySet`(`com.google.common.collect.ImmutableMultiset` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.ImmutableMultiset` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.Multiset$Entry` `getEntry`(`int` v0 ) @signature `Lcom/google/common/collect/ImmutableMultiset;.getEntry:(I)Lcom/google/common/collect/Multiset$Entry;` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.ImmutableMultiset` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.UnmodifiableIterator` `iterator`(`com.google.common.collect.ImmutableMultiset` v2 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset;.iterator:()Lcom/google/common/collect/UnmodifiableIterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.ImmutableMultiset` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `remove`(`com.google.common.collect.ImmutableMultiset` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/collect/ImmutableMultiset;.remove:(Ljava/lang/Object;I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `setCount`(`com.google.common.collect.ImmutableMultiset` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/collect/ImmutableMultiset;.setCount:(Ljava/lang/Object;I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `setCount`(`com.google.common.collect.ImmutableMultiset` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/common/collect/ImmutableMultiset;.setCount:(Ljava/lang/Object;II)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.ImmutableMultiset` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`() @signature `Lcom/google/common/collect/ImmutableMultiset;.writeReplace:()Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
