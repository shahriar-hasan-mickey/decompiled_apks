record `com.google.common.collect.Table` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.util.Set` `cellSet`() @signature `Lcom/google/common/collect/Table;.cellSet:()Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clear`() @signature `Lcom/google/common/collect/Table;.clear:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `column`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Table;.column:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Set` `columnKeySet`() @signature `Lcom/google/common/collect/Table;.columnKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `columnMap`() @signature `Lcom/google/common/collect/Table;.columnMap:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `contains`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/Table;.contains:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `containsColumn`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Table;.containsColumn:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `containsRow`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Table;.containsRow:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `containsValue`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Table;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Table;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `get`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/Table;.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`() @signature `Lcom/google/common/collect/Table;.hashCode:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Lcom/google/common/collect/Table;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `put`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Table;.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.Table` v0 @kind object) @signature `Lcom/google/common/collect/Table;.putAll:(Lcom/google/common/collect/Table;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `remove`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/Table;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `row`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Table;.row:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Set` `rowKeySet`() @signature `Lcom/google/common/collect/Table;.rowKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `rowMap`() @signature `Lcom/google/common/collect/Table;.rowMap:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `size`() @signature `Lcom/google/common/collect/Table;.size:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Collection` `values`() @signature `Lcom/google/common/collect/Table;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
