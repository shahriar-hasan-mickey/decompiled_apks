record `com.google.common.collect.ImmutableRangeSet$AsSet$2` @kind class @AccessFlag  extends `com.google.common.collect.AbstractIterator` @kind class {
  `java.util.Iterator` `com.google.common.collect.ImmutableRangeSet$AsSet$2.elemItr` @AccessFlag ;
  `java.util.Iterator` `com.google.common.collect.ImmutableRangeSet$AsSet$2.rangeItr` @AccessFlag FINAL;
  `com.google.common.collect.ImmutableRangeSet$AsSet` `com.google.common.collect.ImmutableRangeSet$AsSet$2.this$1` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableRangeSet$AsSet$2` v0 @kind this, `com.google.common.collect.ImmutableRangeSet$AsSet` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet$2;.<init>:(Lcom/google/common/collect/ImmutableRangeSet$AsSet;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Comparable` `computeNext`(`com.google.common.collect.ImmutableRangeSet$AsSet$2` v2 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet$2;.computeNext:()Ljava/lang/Comparable;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.Object` `computeNext`(`com.google.common.collect.ImmutableRangeSet$AsSet$2` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet$2;.computeNext:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
