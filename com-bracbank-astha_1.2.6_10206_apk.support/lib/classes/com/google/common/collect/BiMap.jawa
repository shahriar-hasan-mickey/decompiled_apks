record `com.google.common.collect.BiMap` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.util.Map` @kind interface {
}
procedure `java.lang.Object` `forcePut`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/BiMap;.forcePut:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.collect.BiMap` `inverse`() @signature `Lcom/google/common/collect/BiMap;.inverse:()Lcom/google/common/collect/BiMap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `put`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/BiMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putAll`(`java.util.Map` v0 @kind object) @signature `Lcom/google/common/collect/BiMap;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Collection` `values`() @signature `Lcom/google/common/collect/BiMap;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `values`() @signature `Lcom/google/common/collect/BiMap;.values:()Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
