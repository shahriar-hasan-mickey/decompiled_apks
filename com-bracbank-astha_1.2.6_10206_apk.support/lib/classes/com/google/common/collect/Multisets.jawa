record `com.google.common.collect.Multisets` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.common.collect.Multisets` v0 @kind this) @signature `Lcom/google/common/collect/Multisets;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `boolean` `addAllImpl`(`com.google.common.collect.Multiset` v1 @kind object, `com.google.common.collect.AbstractMapBasedMultiset` v2 @kind object) @signature `Lcom/google/common/collect/Multisets;.addAllImpl:(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/AbstractMapBasedMultiset;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `addAllImpl`(`com.google.common.collect.Multiset` v2 @kind object, `com.google.common.collect.Multiset` v3 @kind object) @signature `Lcom/google/common/collect/Multisets;.addAllImpl:(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `addAllImpl`(`com.google.common.collect.Multiset` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lcom/google/common/collect/Multisets;.addAllImpl:(Lcom/google/common/collect/Multiset;Ljava/util/Collection;)Z` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.Multiset` `cast`(`java.lang.Iterable` v0 @kind object) @signature `Lcom/google/common/collect/Multisets;.cast:(Ljava/lang/Iterable;)Lcom/google/common/collect/Multiset;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `containsOccurrences`(`com.google.common.collect.Multiset` v2 @kind object, `com.google.common.collect.Multiset` v3 @kind object) @signature `Lcom/google/common/collect/Multisets;.containsOccurrences:(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `copyHighestCountFirst`(`com.google.common.collect.Multiset` v1 @kind object) @signature `Lcom/google/common/collect/Multisets;.copyHighestCountFirst:(Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Multiset` `difference`(`com.google.common.collect.Multiset` v1 @kind object, `com.google.common.collect.Multiset` v2 @kind object) @signature `Lcom/google/common/collect/Multisets;.difference:(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Iterator` `elementIterator`(`java.util.Iterator` v1 @kind object) @signature `Lcom/google/common/collect/Multisets;.elementIterator:(Ljava/util/Iterator;)Ljava/util/Iterator;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `equalsImpl`(`com.google.common.collect.Multiset` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/Multisets;.equalsImpl:(Lcom/google/common/collect/Multiset;Ljava/lang/Object;)Z` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.Multiset` `filter`(`com.google.common.collect.Multiset` v1 @kind object, `com.google.common.base.Predicate` v2 @kind object) @signature `Lcom/google/common/collect/Multisets;.filter:(Lcom/google/common/collect/Multiset;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/Multiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Multiset$Entry` `immutableEntry`(`java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/collect/Multisets;.immutableEntry:(Ljava/lang/Object;I)Lcom/google/common/collect/Multiset$Entry;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `inferDistinctElements`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/Multisets;.inferDistinctElements:(Ljava/lang/Iterable;)I` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.Multiset` `intersection`(`com.google.common.collect.Multiset` v1 @kind object, `com.google.common.collect.Multiset` v2 @kind object) @signature `Lcom/google/common/collect/Multisets;.intersection:(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Iterator` `iteratorImpl`(`com.google.common.collect.Multiset` v2 @kind object) @signature `Lcom/google/common/collect/Multisets;.iteratorImpl:(Lcom/google/common/collect/Multiset;)Ljava/util/Iterator;` @AccessFlag STATIC {

  # return;
}
procedure `int` `linearTimeSizeImpl`(`com.google.common.collect.Multiset` v4 @kind object) @signature `Lcom/google/common/collect/Multisets;.linearTimeSizeImpl:(Lcom/google/common/collect/Multiset;)I` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `removeAllImpl`(`com.google.common.collect.Multiset` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lcom/google/common/collect/Multisets;.removeAllImpl:(Lcom/google/common/collect/Multiset;Ljava/util/Collection;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `removeOccurrences`(`com.google.common.collect.Multiset` v6 @kind object, `com.google.common.collect.Multiset` v7 @kind object) @signature `Lcom/google/common/collect/Multisets;.removeOccurrences:(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `removeOccurrences`(`com.google.common.collect.Multiset` v2 @kind object, `java.lang.Iterable` v3 @kind object) @signature `Lcom/google/common/collect/Multisets;.removeOccurrences:(Lcom/google/common/collect/Multiset;Ljava/lang/Iterable;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `retainAllImpl`(`com.google.common.collect.Multiset` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lcom/google/common/collect/Multisets;.retainAllImpl:(Lcom/google/common/collect/Multiset;Ljava/util/Collection;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `retainOccurrences`(`com.google.common.collect.Multiset` v0 @kind object, `com.google.common.collect.Multiset` v1 @kind object) @signature `Lcom/google/common/collect/Multisets;.retainOccurrences:(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `retainOccurrencesImpl`(`com.google.common.collect.Multiset` v6 @kind object, `com.google.common.collect.Multiset` v7 @kind object) @signature `Lcom/google/common/collect/Multisets;.retainOccurrencesImpl:(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `setCountImpl`(`com.google.common.collect.Multiset` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lcom/google/common/collect/Multisets;.setCountImpl:(Lcom/google/common/collect/Multiset;Ljava/lang/Object;I)I` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `setCountImpl`(`com.google.common.collect.Multiset` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/collect/Multisets;.setCountImpl:(Lcom/google/common/collect/Multiset;Ljava/lang/Object;II)Z` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.Multiset` `sum`(`com.google.common.collect.Multiset` v1 @kind object, `com.google.common.collect.Multiset` v2 @kind object) @signature `Lcom/google/common/collect/Multisets;.sum:(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Multiset` `union`(`com.google.common.collect.Multiset` v1 @kind object, `com.google.common.collect.Multiset` v2 @kind object) @signature `Lcom/google/common/collect/Multisets;.union:(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Multiset` `unmodifiableMultiset`(`com.google.common.collect.ImmutableMultiset` v0 @kind object) @signature `Lcom/google/common/collect/Multisets;.unmodifiableMultiset:(Lcom/google/common/collect/ImmutableMultiset;)Lcom/google/common/collect/Multiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Multiset` `unmodifiableMultiset`(`com.google.common.collect.Multiset` v1 @kind object) @signature `Lcom/google/common/collect/Multisets;.unmodifiableMultiset:(Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.SortedMultiset` `unmodifiableSortedMultiset`(`com.google.common.collect.SortedMultiset` v1 @kind object) @signature `Lcom/google/common/collect/Multisets;.unmodifiableSortedMultiset:(Lcom/google/common/collect/SortedMultiset;)Lcom/google/common/collect/SortedMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
