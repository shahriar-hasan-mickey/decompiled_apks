record `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` @kind class @AccessFlag  extends `java.util.AbstractCollection` @kind class {
  `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection.ancestor` @AccessFlag FINAL;
  `java.util.Collection` `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection.ancestorDelegate` @AccessFlag FINAL;
  `java.util.Collection` `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection.delegate` @AccessFlag ;
  `java.lang.Object` `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection.key` @AccessFlag FINAL;
  `com.google.common.collect.AbstractMapBasedMultimap` `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v0 @kind this, `com.google.common.collect.AbstractMapBasedMultimap` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.Collection` v3 @kind object, `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v4 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap;Ljava/lang/Object;Ljava/util/Collection;Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `add`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `addAll`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addToMap`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v3 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.addToMap:()V` @AccessFlag  {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsAll`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` `getAncestor`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.getAncestor:()Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;` @AccessFlag  {

  # return;
}
procedure `java.util.Collection` `getDelegate`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.getDelegate:()Ljava/util/Collection;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `getKey`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.getKey:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `refreshIfEmpty`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.refreshIfEmpty:()V` @AccessFlag  {

  # return;
}
procedure `boolean` `remove`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `removeAll`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeIfEmpty`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.removeIfEmpty:()V` @AccessFlag  {

  # return;
}
procedure `boolean` `retainAll`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
