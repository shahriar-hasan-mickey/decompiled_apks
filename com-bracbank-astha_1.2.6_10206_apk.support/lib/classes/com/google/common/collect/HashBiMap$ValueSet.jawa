record `com.google.common.collect.HashBiMap$ValueSet` @kind class @AccessFlag FINAL extends `com.google.common.collect.HashBiMap$View` @kind class {
  `com.google.common.collect.HashBiMap` `com.google.common.collect.HashBiMap$ValueSet.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.HashBiMap$ValueSet` v0 @kind this, `com.google.common.collect.HashBiMap` v1 @kind object) @signature `Lcom/google/common/collect/HashBiMap$ValueSet;.<init>:(Lcom/google/common/collect/HashBiMap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.HashBiMap$ValueSet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/HashBiMap$ValueSet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `forEntry`(`com.google.common.collect.HashBiMap$ValueSet` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/HashBiMap$ValueSet;.forEntry:(I)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `boolean` `remove`(`com.google.common.collect.HashBiMap$ValueSet` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/HashBiMap$ValueSet;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
