record `com.google.common.collect.TreeMultiset$3` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `com.google.common.collect.TreeMultiset$AvlNode` `com.google.common.collect.TreeMultiset$3.current` @AccessFlag ;
  `com.google.common.collect.Multiset$Entry` `com.google.common.collect.TreeMultiset$3.prevEntry` @AccessFlag ;
  `com.google.common.collect.TreeMultiset` `com.google.common.collect.TreeMultiset$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.TreeMultiset$3` v0 @kind this, `com.google.common.collect.TreeMultiset` v1 @kind object) @signature `Lcom/google/common/collect/TreeMultiset$3;.<init>:(Lcom/google/common/collect/TreeMultiset;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.TreeMultiset$3` v3 @kind this) @signature `Lcom/google/common/collect/TreeMultiset$3;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.Multiset$Entry` `next`(`com.google.common.collect.TreeMultiset$3` v3 @kind this) @signature `Lcom/google/common/collect/TreeMultiset$3;.next:()Lcom/google/common/collect/Multiset$Entry;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.TreeMultiset$3` v1 @kind this) @signature `Lcom/google/common/collect/TreeMultiset$3;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.TreeMultiset$3` v3 @kind this) @signature `Lcom/google/common/collect/TreeMultiset$3;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
