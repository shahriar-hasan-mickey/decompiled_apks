record `com.google.common.collect.TreeBasedTable$1` @kind class @AccessFlag  extends `com.google.common.collect.AbstractIterator` @kind class {
  `java.lang.Object` `com.google.common.collect.TreeBasedTable$1.lastValue` @AccessFlag ;
  `java.util.Comparator` `com.google.common.collect.TreeBasedTable$1.val$comparator` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Iterator` `com.google.common.collect.TreeBasedTable$1.val$merged` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.TreeBasedTable$1` v0 @kind this, `com.google.common.collect.TreeBasedTable` v1 @kind object, `java.util.Iterator` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable$1;.<init>:(Lcom/google/common/collect/TreeBasedTable;Ljava/util/Iterator;Ljava/util/Comparator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `computeNext`(`com.google.common.collect.TreeBasedTable$1` v3 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable$1;.computeNext:()Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
