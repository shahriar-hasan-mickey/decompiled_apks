record `com.google.common.collect.Iterators$7` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `int` `com.google.common.collect.Iterators$7.count` @AccessFlag PRIVATE;
  `java.util.Iterator` `com.google.common.collect.Iterators$7.val$iterator` @AccessFlag FINAL_SYNTHETIC;
  `int` `com.google.common.collect.Iterators$7.val$limitSize` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.Iterators$7` v0 @kind this, `int` v1 , `java.util.Iterator` v2 @kind object) @signature `Lcom/google/common/collect/Iterators$7;.<init>:(ILjava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.Iterators$7` v2 @kind this) @signature `Lcom/google/common/collect/Iterators$7;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.Iterators$7` v1 @kind this) @signature `Lcom/google/common/collect/Iterators$7;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.Iterators$7` v1 @kind this) @signature `Lcom/google/common/collect/Iterators$7;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
