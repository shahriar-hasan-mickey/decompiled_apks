record `com.google.common.collect.Multisets$DecreasingCount` @kind class @AccessFlag FINAL extends `java.util.Comparator` @kind interface {
}
global `com.google.common.collect.Multisets$DecreasingCount` `@@com.google.common.collect.Multisets$DecreasingCount.INSTANCE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/collect/Multisets$DecreasingCount;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.Multisets$DecreasingCount` v0 @kind this) @signature `Lcom/google/common/collect/Multisets$DecreasingCount;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `compare`(`com.google.common.collect.Multisets$DecreasingCount` v0 @kind this, `com.google.common.collect.Multiset$Entry` v1 @kind object, `com.google.common.collect.Multiset$Entry` v2 @kind object) @signature `Lcom/google/common/collect/Multisets$DecreasingCount;.compare:(Lcom/google/common/collect/Multiset$Entry;Lcom/google/common/collect/Multiset$Entry;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compare`(`com.google.common.collect.Multisets$DecreasingCount` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Multisets$DecreasingCount;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
