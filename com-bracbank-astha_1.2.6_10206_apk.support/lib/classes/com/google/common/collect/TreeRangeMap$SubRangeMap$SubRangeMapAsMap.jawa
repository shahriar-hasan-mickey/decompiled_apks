record `com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` @kind class @AccessFlag  extends `java.util.AbstractMap` @kind class {
  `com.google.common.collect.TreeRangeMap$SubRangeMap` `com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.this$1` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v0 @kind this, `com.google.common.collect.TreeRangeMap$SubRangeMap` v1 @kind object) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.<init>:(Lcom/google/common/collect/TreeRangeMap$SubRangeMap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `access$400`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v0 @kind object, `com.google.common.base.Predicate` v1 @kind object) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.access$400:(Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;Lcom/google/common/base/Predicate;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `removeEntryIf`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v4 @kind this, `com.google.common.base.Predicate` v5 @kind object) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.removeEntryIf:(Lcom/google/common/base/Predicate;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v1 @kind this) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `entryIterator`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v3 @kind this) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.entryIterator:()Ljava/util/Iterator;` @AccessFlag  {

  # return;
}
procedure `java.util.Set` `entrySet`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v1 @kind this) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v1 @kind this) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap` v1 @kind this) @signature `Lcom/google/common/collect/TreeRangeMap$SubRangeMap$SubRangeMapAsMap;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC {

  # return;
}
