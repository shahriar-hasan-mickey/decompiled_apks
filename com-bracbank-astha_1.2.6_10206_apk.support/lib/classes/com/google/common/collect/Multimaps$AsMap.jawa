record `com.google.common.collect.Multimaps$AsMap` @kind class @AccessFlag FINAL extends `com.google.common.collect.Maps$ViewCachingAbstractMap` @kind class {
  `com.google.common.collect.Multimap` `com.google.common.collect.Multimaps$AsMap.multimap` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.Multimaps$AsMap` v0 @kind this, `com.google.common.collect.Multimap` v1 @kind object) @signature `Lcom/google/common/collect/Multimaps$AsMap;.<init>:(Lcom/google/common/collect/Multimap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.Multimap` `access$200`(`com.google.common.collect.Multimaps$AsMap` v0 @kind object) @signature `Lcom/google/common/collect/Multimaps$AsMap;.access$200:(Lcom/google/common/collect/Multimaps$AsMap;)Lcom/google/common/collect/Multimap;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.Multimaps$AsMap` v1 @kind this) @signature `Lcom/google/common/collect/Multimaps$AsMap;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.Multimaps$AsMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Multimaps$AsMap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `createEntrySet`(`com.google.common.collect.Multimaps$AsMap` v1 @kind this) @signature `Lcom/google/common/collect/Multimaps$AsMap;.createEntrySet:()Ljava/util/Set;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.Multimaps$AsMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/Multimaps$AsMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Collection` `get`(`com.google.common.collect.Multimaps$AsMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Multimaps$AsMap;.get:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.Multimaps$AsMap` v1 @kind this) @signature `Lcom/google/common/collect/Multimaps$AsMap;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.common.collect.Multimaps$AsMap` v1 @kind this) @signature `Lcom/google/common/collect/Multimaps$AsMap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.Multimaps$AsMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/Multimaps$AsMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Collection` `remove`(`com.google.common.collect.Multimaps$AsMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Multimaps$AsMap;.remove:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeValuesForKey`(`com.google.common.collect.Multimaps$AsMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Multimaps$AsMap;.removeValuesForKey:(Ljava/lang/Object;)V` @AccessFlag  {

  # return;
}
procedure `int` `size`(`com.google.common.collect.Multimaps$AsMap` v1 @kind this) @signature `Lcom/google/common/collect/Multimaps$AsMap;.size:()I` @AccessFlag PUBLIC {

  # return;
}
