record `com.google.common.collect.AbstractMapBasedMultimap$AsMap` @kind class @AccessFlag  extends `com.google.common.collect.Maps$ViewCachingAbstractMap` @kind class {
  `java.util.Map` `com.google.common.collect.AbstractMapBasedMultimap$AsMap.submap` @AccessFlag FINAL_TRANSIENT;
  `com.google.common.collect.AbstractMapBasedMultimap` `com.google.common.collect.AbstractMapBasedMultimap$AsMap.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v0 @kind this, `com.google.common.collect.AbstractMapBasedMultimap` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `createEntrySet`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.createEntrySet:()Ljava/util/Set;` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Collection` `get`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.get:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Collection` `remove`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.remove:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map$Entry` `wrapEntry`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;.wrapEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;` @AccessFlag  {

  # return;
}
