record `com.google.common.collect.Multimap` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.util.Map` `asMap`() @signature `Lcom/google/common/collect/Multimap;.asMap:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clear`() @signature `Lcom/google/common/collect/Multimap;.clear:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `containsEntry`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/Multimap;.containsEntry:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `containsKey`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Multimap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `containsValue`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Multimap;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Collection` `entries`() @signature `Lcom/google/common/collect/Multimap;.entries:()Ljava/util/Collection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Multimap;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Collection` `get`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Multimap;.get:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`() @signature `Lcom/google/common/collect/Multimap;.hashCode:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Lcom/google/common/collect/Multimap;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Set` `keySet`() @signature `Lcom/google/common/collect/Multimap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.collect.Multiset` `keys`() @signature `Lcom/google/common/collect/Multimap;.keys:()Lcom/google/common/collect/Multiset;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `put`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/Multimap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `putAll`(`com.google.common.collect.Multimap` v0 @kind object) @signature `Lcom/google/common/collect/Multimap;.putAll:(Lcom/google/common/collect/Multimap;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `putAll`(`java.lang.Object` v0 @kind object, `java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/Multimap;.putAll:(Ljava/lang/Object;Ljava/lang/Iterable;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `remove`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/Multimap;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Collection` `removeAll`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/Multimap;.removeAll:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Collection` `replaceValues`(`java.lang.Object` v0 @kind object, `java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/Multimap;.replaceValues:(Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Collection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `size`() @signature `Lcom/google/common/collect/Multimap;.size:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Collection` `values`() @signature `Lcom/google/common/collect/Multimap;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
