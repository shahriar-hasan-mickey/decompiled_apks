record `com.google.common.collect.Iterators$ConcatenatedIterator` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `com.google.common.collect.Iterators$ConcatenatedIterator.iterator` @AccessFlag PRIVATE;
  `java.util.Deque` `com.google.common.collect.Iterators$ConcatenatedIterator.metaIterators` @AccessFlag PRIVATE;
  `java.util.Iterator` `com.google.common.collect.Iterators$ConcatenatedIterator.toRemove` @AccessFlag PRIVATE;
  `java.util.Iterator` `com.google.common.collect.Iterators$ConcatenatedIterator.topMetaIterator` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.collect.Iterators$ConcatenatedIterator` v1 @kind this, `java.util.Iterator` v2 @kind object) @signature `Lcom/google/common/collect/Iterators$ConcatenatedIterator;.<init>:(Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Iterator` `getTopMetaIterator`(`com.google.common.collect.Iterators$ConcatenatedIterator` v1 @kind this) @signature `Lcom/google/common/collect/Iterators$ConcatenatedIterator;.getTopMetaIterator:()Ljava/util/Iterator;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.Iterators$ConcatenatedIterator` v3 @kind this) @signature `Lcom/google/common/collect/Iterators$ConcatenatedIterator;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.Iterators$ConcatenatedIterator` v1 @kind this) @signature `Lcom/google/common/collect/Iterators$ConcatenatedIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.Iterators$ConcatenatedIterator` v2 @kind this) @signature `Lcom/google/common/collect/Iterators$ConcatenatedIterator;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
