record `com.google.common.collect.ImmutableTable$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `com.google.common.collect.ImmutableTable$Builder.cells` @AccessFlag PRIVATE_FINAL;
  `java.util.Comparator` `com.google.common.collect.ImmutableTable$Builder.columnComparator` @AccessFlag PRIVATE;
  `java.util.Comparator` `com.google.common.collect.ImmutableTable$Builder.rowComparator` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableTable$Builder` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.ImmutableTable` `build`(`com.google.common.collect.ImmutableTable$Builder` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable$Builder;.build:()Lcom/google/common/collect/ImmutableTable;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable` `buildOrThrow`(`com.google.common.collect.ImmutableTable$Builder` v3 @kind this) @signature `Lcom/google/common/collect/ImmutableTable$Builder;.buildOrThrow:()Lcom/google/common/collect/ImmutableTable;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable$Builder` `combine`(`com.google.common.collect.ImmutableTable$Builder` v1 @kind this, `com.google.common.collect.ImmutableTable$Builder` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable$Builder;.combine:(Lcom/google/common/collect/ImmutableTable$Builder;)Lcom/google/common/collect/ImmutableTable$Builder;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableTable$Builder` `orderColumnsBy`(`com.google.common.collect.ImmutableTable$Builder` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable$Builder;.orderColumnsBy:(Ljava/util/Comparator;)Lcom/google/common/collect/ImmutableTable$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable$Builder` `orderRowsBy`(`com.google.common.collect.ImmutableTable$Builder` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable$Builder;.orderRowsBy:(Ljava/util/Comparator;)Lcom/google/common/collect/ImmutableTable$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable$Builder` `put`(`com.google.common.collect.ImmutableTable$Builder` v2 @kind this, `com.google.common.collect.Table$Cell` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableTable$Builder;.put:(Lcom/google/common/collect/Table$Cell;)Lcom/google/common/collect/ImmutableTable$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable$Builder` `put`(`com.google.common.collect.ImmutableTable$Builder` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/ImmutableTable$Builder;.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableTable$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable$Builder` `putAll`(`com.google.common.collect.ImmutableTable$Builder` v1 @kind this, `com.google.common.collect.Table` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable$Builder;.putAll:(Lcom/google/common/collect/Table;)Lcom/google/common/collect/ImmutableTable$Builder;` @AccessFlag PUBLIC {

  # return;
}
