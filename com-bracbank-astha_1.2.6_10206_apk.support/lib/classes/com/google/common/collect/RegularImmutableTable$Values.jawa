record `com.google.common.collect.RegularImmutableTable$Values` @kind class @AccessFlag FINAL extends `com.google.common.collect.ImmutableList` @kind class {
  `com.google.common.collect.RegularImmutableTable` `com.google.common.collect.RegularImmutableTable$Values.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.RegularImmutableTable$Values` v0 @kind this, `com.google.common.collect.RegularImmutableTable` v1 @kind object) @signature `Lcom/google/common/collect/RegularImmutableTable$Values;.<init>:(Lcom/google/common/collect/RegularImmutableTable;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.RegularImmutableTable$Values` v0 @kind this, `com.google.common.collect.RegularImmutableTable` v1 @kind object, `com.google.common.collect.RegularImmutableTable$1` v2 @kind object) @signature `Lcom/google/common/collect/RegularImmutableTable$Values;.<init>:(Lcom/google/common/collect/RegularImmutableTable;Lcom/google/common/collect/RegularImmutableTable$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.RegularImmutableTable$Values` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/RegularImmutableTable$Values;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isPartialView`(`com.google.common.collect.RegularImmutableTable$Values` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableTable$Values;.isPartialView:()Z` @AccessFlag  {

  # return;
}
procedure `int` `size`(`com.google.common.collect.RegularImmutableTable$Values` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableTable$Values;.size:()I` @AccessFlag PUBLIC {

  # return;
}
