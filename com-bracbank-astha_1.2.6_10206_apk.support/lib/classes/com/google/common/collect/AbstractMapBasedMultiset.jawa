record `com.google.common.collect.AbstractMapBasedMultiset` @kind class @AccessFlag ABSTRACT extends `com.google.common.collect.AbstractMultiset` @kind class, `java.io.Serializable` @kind interface {
  `com.google.common.collect.ObjectCountHashMap` `com.google.common.collect.AbstractMapBasedMultiset.backingMap` @AccessFlag TRANSIENT;
  `long` `com.google.common.collect.AbstractMapBasedMultiset.size` @AccessFlag TRANSIENT;
}
global `long` `@@com.google.common.collect.AbstractMapBasedMultiset.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultiset` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `readObject`(`com.google.common.collect.AbstractMapBasedMultiset` v2 @kind this, `java.io.ObjectInputStream` v3 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `writeObject`(`com.google.common.collect.AbstractMapBasedMultiset` v0 @kind this, `java.io.ObjectOutputStream` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `add`(`com.google.common.collect.AbstractMapBasedMultiset` v9 @kind this, `java.lang.Object` v10 @kind object, `int` v11 ) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.add:(Ljava/lang/Object;I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `addTo`(`com.google.common.collect.AbstractMapBasedMultiset` v3 @kind this, `com.google.common.collect.Multiset` v4 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.addTo:(Lcom/google/common/collect/Multiset;)V` @AccessFlag  {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.AbstractMapBasedMultiset` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.clear:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `count`(`com.google.common.collect.AbstractMapBasedMultiset` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.count:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `distinctElements`(`com.google.common.collect.AbstractMapBasedMultiset` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.distinctElements:()I` @AccessFlag FINAL {

  # return;
}
procedure `java.util.Iterator` `elementIterator`(`com.google.common.collect.AbstractMapBasedMultiset` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.elementIterator:()Ljava/util/Iterator;` @AccessFlag FINAL {

  # return;
}
procedure `java.util.Iterator` `entryIterator`(`com.google.common.collect.AbstractMapBasedMultiset` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.entryIterator:()Ljava/util/Iterator;` @AccessFlag FINAL {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.AbstractMapBasedMultiset` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ObjectCountHashMap` `newBackingMap`(`int` v0 ) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.newBackingMap:(I)Lcom/google/common/collect/ObjectCountHashMap;` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `remove`(`com.google.common.collect.AbstractMapBasedMultiset` v3 @kind this, `java.lang.Object` v4 @kind object, `int` v5 ) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.remove:(Ljava/lang/Object;I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `setCount`(`com.google.common.collect.AbstractMapBasedMultiset` v4 @kind this, `java.lang.Object` v5 @kind object, `int` v6 ) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.setCount:(Ljava/lang/Object;I)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `setCount`(`com.google.common.collect.AbstractMapBasedMultiset` v4 @kind this, `java.lang.Object` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.setCount:(Ljava/lang/Object;II)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `size`(`com.google.common.collect.AbstractMapBasedMultiset` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultiset;.size:()I` @AccessFlag PUBLIC_FINAL {

  # return;
}
