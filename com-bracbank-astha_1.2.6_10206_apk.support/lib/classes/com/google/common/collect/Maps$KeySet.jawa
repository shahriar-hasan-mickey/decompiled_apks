record `com.google.common.collect.Maps$KeySet` @kind class @AccessFlag  extends `com.google.common.collect.Sets$ImprovedAbstractSet` @kind class {
  `java.util.Map` `com.google.common.collect.Maps$KeySet.map` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.Maps$KeySet` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lcom/google/common/collect/Maps$KeySet;.<init>:(Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.Maps$KeySet` v1 @kind this) @signature `Lcom/google/common/collect/Maps$KeySet;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.Maps$KeySet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Maps$KeySet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.Maps$KeySet` v1 @kind this) @signature `Lcom/google/common/collect/Maps$KeySet;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.Maps$KeySet` v1 @kind this) @signature `Lcom/google/common/collect/Maps$KeySet;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `map`(`com.google.common.collect.Maps$KeySet` v1 @kind this) @signature `Lcom/google/common/collect/Maps$KeySet;.map:()Ljava/util/Map;` @AccessFlag  {

  # return;
}
procedure `boolean` `remove`(`com.google.common.collect.Maps$KeySet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Maps$KeySet;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.Maps$KeySet` v1 @kind this) @signature `Lcom/google/common/collect/Maps$KeySet;.size:()I` @AccessFlag PUBLIC {

  # return;
}
