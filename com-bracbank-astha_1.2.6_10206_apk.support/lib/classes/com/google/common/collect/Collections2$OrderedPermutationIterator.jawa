record `com.google.common.collect.Collections2$OrderedPermutationIterator` @kind class @AccessFlag FINAL extends `com.google.common.collect.AbstractIterator` @kind class {
  `java.util.Comparator` `com.google.common.collect.Collections2$OrderedPermutationIterator.comparator` @AccessFlag FINAL;
  `java.util.List` `com.google.common.collect.Collections2$OrderedPermutationIterator.nextPermutation` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.common.collect.Collections2$OrderedPermutationIterator` v0 @kind this, `java.util.List` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/common/collect/Collections2$OrderedPermutationIterator;.<init>:(Ljava/util/List;Ljava/util/Comparator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `calculateNextPermutation`(`com.google.common.collect.Collections2$OrderedPermutationIterator` v3 @kind this) @signature `Lcom/google/common/collect/Collections2$OrderedPermutationIterator;.calculateNextPermutation:()V` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `computeNext`(`com.google.common.collect.Collections2$OrderedPermutationIterator` v1 @kind this) @signature `Lcom/google/common/collect/Collections2$OrderedPermutationIterator;.computeNext:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.util.List` `computeNext`(`com.google.common.collect.Collections2$OrderedPermutationIterator` v1 @kind this) @signature `Lcom/google/common/collect/Collections2$OrderedPermutationIterator;.computeNext:()Ljava/util/List;` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `findNextJ`(`com.google.common.collect.Collections2$OrderedPermutationIterator` v5 @kind this) @signature `Lcom/google/common/collect/Collections2$OrderedPermutationIterator;.findNextJ:()I` @AccessFlag  {

  # return;
}
procedure `int` `findNextL`(`com.google.common.collect.Collections2$OrderedPermutationIterator` v4 @kind this, `int` v5 ) @signature `Lcom/google/common/collect/Collections2$OrderedPermutationIterator;.findNextL:(I)I` @AccessFlag  {

  # return;
}
