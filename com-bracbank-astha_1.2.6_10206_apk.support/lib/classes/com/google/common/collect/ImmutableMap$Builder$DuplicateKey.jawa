record `com.google.common.collect.ImmutableMap$Builder$DuplicateKey` @kind class @AccessFlag FINAL {
  `java.lang.Object` `com.google.common.collect.ImmutableMap$Builder$DuplicateKey.key` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.google.common.collect.ImmutableMap$Builder$DuplicateKey.value1` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.google.common.collect.ImmutableMap$Builder$DuplicateKey.value2` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableMap$Builder$DuplicateKey` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableMap$Builder$DuplicateKey;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.IllegalArgumentException` `exception`(`com.google.common.collect.ImmutableMap$Builder$DuplicateKey` v7 @kind this) @signature `Lcom/google/common/collect/ImmutableMap$Builder$DuplicateKey;.exception:()Ljava/lang/IllegalArgumentException;` @AccessFlag  {

  # return;
}
