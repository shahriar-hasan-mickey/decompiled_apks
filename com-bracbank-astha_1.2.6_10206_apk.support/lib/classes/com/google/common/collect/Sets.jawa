record `com.google.common.collect.Sets` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.common.collect.Sets` v0 @kind this) @signature `Lcom/google/common/collect/Sets;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.util.Set` `cartesianProduct`(`java.util.List` v0 @kind object) @signature `Lcom/google/common/collect/Sets;.cartesianProduct:(Ljava/util/List;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `cartesianProduct`(`java.util.Set`[] v0 @kind object) @signature `Lcom/google/common/collect/Sets;.cartesianProduct:([Ljava/util/Set;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `combinations`(`java.util.Set` v3 @kind object, `int` v4 ) @signature `Lcom/google/common/collect/Sets;.combinations:(Ljava/util/Set;I)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.EnumSet` `complementOf`(`java.util.Collection` v2 @kind object) @signature `Lcom/google/common/collect/Sets;.complementOf:(Ljava/util/Collection;)Ljava/util/EnumSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.EnumSet` `complementOf`(`java.util.Collection` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/common/collect/Sets;.complementOf:(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/EnumSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Sets$SetView` `difference`(`java.util.Set` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lcom/google/common/collect/Sets;.difference:(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/Sets$SetView;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equalsImpl`(`java.util.Set` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/Sets;.equalsImpl:(Ljava/util/Set;Ljava/lang/Object;)Z` @AccessFlag STATIC {

  # return;
}
procedure `java.util.NavigableSet` `filter`(`java.util.NavigableSet` v1 @kind object, `com.google.common.base.Predicate` v2 @kind object) @signature `Lcom/google/common/collect/Sets;.filter:(Ljava/util/NavigableSet;Lcom/google/common/base/Predicate;)Ljava/util/NavigableSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `filter`(`java.util.Set` v1 @kind object, `com.google.common.base.Predicate` v2 @kind object) @signature `Lcom/google/common/collect/Sets;.filter:(Ljava/util/Set;Lcom/google/common/base/Predicate;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.SortedSet` `filter`(`java.util.SortedSet` v1 @kind object, `com.google.common.base.Predicate` v2 @kind object) @signature `Lcom/google/common/collect/Sets;.filter:(Ljava/util/SortedSet;Lcom/google/common/base/Predicate;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hashCodeImpl`(`java.util.Set` v3 @kind object) @signature `Lcom/google/common/collect/Sets;.hashCodeImpl:(Ljava/util/Set;)I` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `immutableEnumSet`(`java.lang.Enum` v0 @kind object, `java.lang.Enum`[] v1 @kind object) @signature `Lcom/google/common/collect/Sets;.immutableEnumSet:(Ljava/lang/Enum;[Ljava/lang/Enum;)Lcom/google/common/collect/ImmutableSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `immutableEnumSet`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.immutableEnumSet:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Sets$SetView` `intersection`(`java.util.Set` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lcom/google/common/collect/Sets;.intersection:(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/Sets$SetView;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.EnumSet` `makeComplementByHand`(`java.util.Collection` v0 @kind object, `java.lang.Class` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.makeComplementByHand:(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/EnumSet;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Set` `newConcurrentHashSet`() @signature `Lcom/google/common/collect/Sets;.newConcurrentHashSet:()Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `newConcurrentHashSet`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.newConcurrentHashSet:(Ljava/lang/Iterable;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.CopyOnWriteArraySet` `newCopyOnWriteArraySet`() @signature `Lcom/google/common/collect/Sets;.newCopyOnWriteArraySet:()Ljava/util/concurrent/CopyOnWriteArraySet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.CopyOnWriteArraySet` `newCopyOnWriteArraySet`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.newCopyOnWriteArraySet:(Ljava/lang/Iterable;)Ljava/util/concurrent/CopyOnWriteArraySet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.EnumSet` `newEnumSet`(`java.lang.Iterable` v0 @kind object, `java.lang.Class` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.newEnumSet:(Ljava/lang/Iterable;Ljava/lang/Class;)Ljava/util/EnumSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.HashSet` `newHashSet`() @signature `Lcom/google/common/collect/Sets;.newHashSet:()Ljava/util/HashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.HashSet` `newHashSet`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.newHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.HashSet` `newHashSet`(`java.util.Iterator` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.newHashSet:(Ljava/util/Iterator;)Ljava/util/HashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.HashSet` `newHashSet`(`java.lang.Object`[] v1 @kind object) @signature `Lcom/google/common/collect/Sets;.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.HashSet` `newHashSetWithExpectedSize`(`int` v1 ) @signature `Lcom/google/common/collect/Sets;.newHashSetWithExpectedSize:(I)Ljava/util/HashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `newIdentityHashSet`() @signature `Lcom/google/common/collect/Sets;.newIdentityHashSet:()Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.LinkedHashSet` `newLinkedHashSet`() @signature `Lcom/google/common/collect/Sets;.newLinkedHashSet:()Ljava/util/LinkedHashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.LinkedHashSet` `newLinkedHashSet`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.newLinkedHashSet:(Ljava/lang/Iterable;)Ljava/util/LinkedHashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.LinkedHashSet` `newLinkedHashSetWithExpectedSize`(`int` v1 ) @signature `Lcom/google/common/collect/Sets;.newLinkedHashSetWithExpectedSize:(I)Ljava/util/LinkedHashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `newSetFromMap`(`java.util.Map` v0 @kind object) @signature `Lcom/google/common/collect/Sets;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.TreeSet` `newTreeSet`() @signature `Lcom/google/common/collect/Sets;.newTreeSet:()Ljava/util/TreeSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.TreeSet` `newTreeSet`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.newTreeSet:(Ljava/lang/Iterable;)Ljava/util/TreeSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.TreeSet` `newTreeSet`(`java.util.Comparator` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.newTreeSet:(Ljava/util/Comparator;)Ljava/util/TreeSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `powerSet`(`java.util.Set` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.powerSet:(Ljava/util/Set;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `removeAllImpl`(`java.util.Set` v2 @kind object, `java.util.Collection` v3 @kind object) @signature `Lcom/google/common/collect/Sets;.removeAllImpl:(Ljava/util/Set;Ljava/util/Collection;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `removeAllImpl`(`java.util.Set` v2 @kind object, `java.util.Iterator` v3 @kind object) @signature `Lcom/google/common/collect/Sets;.removeAllImpl:(Ljava/util/Set;Ljava/util/Iterator;)Z` @AccessFlag STATIC {

  # return;
}
procedure `java.util.NavigableSet` `subSet`(`java.util.NavigableSet` v6 @kind object, `com.google.common.collect.Range` v7 @kind object) @signature `Lcom/google/common/collect/Sets;.subSet:(Ljava/util/NavigableSet;Lcom/google/common/collect/Range;)Ljava/util/NavigableSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Sets$SetView` `symmetricDifference`(`java.util.Set` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lcom/google/common/collect/Sets;.symmetricDifference:(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/Sets$SetView;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.NavigableSet` `synchronizedNavigableSet`(`java.util.NavigableSet` v0 @kind object) @signature `Lcom/google/common/collect/Sets;.synchronizedNavigableSet:(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Sets$SetView` `union`(`java.util.Set` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lcom/google/common/collect/Sets;.union:(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/Sets$SetView;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.NavigableSet` `unmodifiableNavigableSet`(`java.util.NavigableSet` v1 @kind object) @signature `Lcom/google/common/collect/Sets;.unmodifiableNavigableSet:(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
