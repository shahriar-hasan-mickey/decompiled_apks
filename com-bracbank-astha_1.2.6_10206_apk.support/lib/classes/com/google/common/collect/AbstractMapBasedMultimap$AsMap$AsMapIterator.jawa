record `com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Collection` `com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator.collection` @AccessFlag ;
  `java.util.Iterator` `com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator.delegateIterator` @AccessFlag FINAL;
  `com.google.common.collect.AbstractMapBasedMultimap$AsMap` `com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator.this$1` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator` v0 @kind this, `com.google.common.collect.AbstractMapBasedMultimap$AsMap` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap$AsMapIterator;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap$AsMapIterator;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap$AsMapIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map$Entry` `next`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap$AsMapIterator;.next:()Ljava/util/Map$Entry;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$AsMap$AsMapIterator;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
