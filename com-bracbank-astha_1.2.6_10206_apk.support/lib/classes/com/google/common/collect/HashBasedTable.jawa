record `com.google.common.collect.HashBasedTable` @kind class @AccessFlag PUBLIC extends `com.google.common.collect.StandardTable` @kind class {
}
global `long` `@@com.google.common.collect.HashBasedTable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.util.Map` v1 @kind object, `com.google.common.collect.HashBasedTable$Factory` v2 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.<init>:(Ljava/util/Map;Lcom/google/common/collect/HashBasedTable$Factory;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.HashBasedTable` `create`() @signature `Lcom/google/common/collect/HashBasedTable;.create:()Lcom/google/common/collect/HashBasedTable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.HashBasedTable` `create`(`int` v2 , `int` v3 ) @signature `Lcom/google/common/collect/HashBasedTable;.create:(II)Lcom/google/common/collect/HashBasedTable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.HashBasedTable` `create`(`com.google.common.collect.Table` v1 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.create:(Lcom/google/common/collect/Table;)Lcom/google/common/collect/HashBasedTable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `cellSet`(`com.google.common.collect.HashBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.cellSet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.HashBasedTable` v0 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.clear:()V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `column`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.column:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `columnKeySet`(`com.google.common.collect.HashBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.columnKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `columnMap`(`com.google.common.collect.HashBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.columnMap:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.contains:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `containsColumn`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.containsColumn:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `containsRow`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.containsRow:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `containsValue`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.HashBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.hashCode:()I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.HashBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.isEmpty:()Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.HashBasedTable` v0 @kind this, `com.google.common.collect.Table` v1 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.putAll:(Lcom/google/common/collect/Table;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `row`(`com.google.common.collect.HashBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/HashBasedTable;.row:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `rowKeySet`(`com.google.common.collect.HashBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.rowKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `rowMap`(`com.google.common.collect.HashBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.rowMap:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.HashBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.size:()I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.HashBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.common.collect.HashBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/HashBasedTable;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
