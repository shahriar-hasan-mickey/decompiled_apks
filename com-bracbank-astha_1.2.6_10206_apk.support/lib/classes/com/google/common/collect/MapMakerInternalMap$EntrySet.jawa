record `com.google.common.collect.MapMakerInternalMap$EntrySet` @kind class @AccessFlag FINAL extends `com.google.common.collect.MapMakerInternalMap$SafeToArraySet` @kind class {
  `com.google.common.collect.MapMakerInternalMap` `com.google.common.collect.MapMakerInternalMap$EntrySet.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.MapMakerInternalMap$EntrySet` v0 @kind this, `com.google.common.collect.MapMakerInternalMap` v1 @kind object) @signature `Lcom/google/common/collect/MapMakerInternalMap$EntrySet;.<init>:(Lcom/google/common/collect/MapMakerInternalMap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.MapMakerInternalMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/MapMakerInternalMap$EntrySet;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.MapMakerInternalMap$EntrySet` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/MapMakerInternalMap$EntrySet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.MapMakerInternalMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/MapMakerInternalMap$EntrySet;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.MapMakerInternalMap$EntrySet` v2 @kind this) @signature `Lcom/google/common/collect/MapMakerInternalMap$EntrySet;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `remove`(`com.google.common.collect.MapMakerInternalMap$EntrySet` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/MapMakerInternalMap$EntrySet;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.MapMakerInternalMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/MapMakerInternalMap$EntrySet;.size:()I` @AccessFlag PUBLIC {

  # return;
}
