record `com.google.common.collect.AbstractBiMap` @kind class @AccessFlag ABSTRACT extends `com.google.common.collect.ForwardingMap` @kind class, `com.google.common.collect.BiMap` @kind interface, `java.io.Serializable` @kind interface {
  `java.util.Map` `com.google.common.collect.AbstractBiMap.delegate` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Set` `com.google.common.collect.AbstractBiMap.entrySet` @AccessFlag PRIVATE_TRANSIENT;
  `com.google.common.collect.AbstractBiMap` `com.google.common.collect.AbstractBiMap.inverse` @AccessFlag TRANSIENT;
  `java.util.Set` `com.google.common.collect.AbstractBiMap.keySet` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Set` `com.google.common.collect.AbstractBiMap.valueSet` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@com.google.common.collect.AbstractBiMap.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.AbstractBiMap` v0 @kind this, `java.util.Map` v1 @kind object, `com.google.common.collect.AbstractBiMap` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.<init>:(Ljava/util/Map;Lcom/google/common/collect/AbstractBiMap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractBiMap` v0 @kind this, `java.util.Map` v1 @kind object, `com.google.common.collect.AbstractBiMap` v2 @kind object, `com.google.common.collect.AbstractBiMap$1` v3 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.<init>:(Ljava/util/Map;Lcom/google/common/collect/AbstractBiMap;Lcom/google/common/collect/AbstractBiMap$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractBiMap` v0 @kind this, `java.util.Map` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.<init>:(Ljava/util/Map;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Map` `access$100`(`com.google.common.collect.AbstractBiMap` v0 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.access$100:(Lcom/google/common/collect/AbstractBiMap;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `access$200`(`com.google.common.collect.AbstractBiMap` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.access$200:(Lcom/google/common/collect/AbstractBiMap;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$500`(`com.google.common.collect.AbstractBiMap` v0 @kind object, `java.lang.Object` v1 @kind object, `boolean` v2 , `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.access$500:(Lcom/google/common/collect/AbstractBiMap;Ljava/lang/Object;ZLjava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$600`(`com.google.common.collect.AbstractBiMap` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.access$600:(Lcom/google/common/collect/AbstractBiMap;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `putInBothMaps`(`com.google.common.collect.AbstractBiMap` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lcom/google/common/collect/AbstractBiMap;.putInBothMaps:(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `removeFromBothMaps`(`com.google.common.collect.AbstractBiMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.removeFromBothMaps:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeFromInverseMap`(`com.google.common.collect.AbstractBiMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.removeFromInverseMap:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `updateInverseMap`(`com.google.common.collect.AbstractBiMap` v0 @kind this, `java.lang.Object` v1 @kind object, `boolean` v2 , `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.updateInverseMap:(Ljava/lang/Object;ZLjava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `checkKey`(`com.google.common.collect.AbstractBiMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.checkKey:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `checkValue`(`com.google.common.collect.AbstractBiMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.checkValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.AbstractBiMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsValue`(`com.google.common.collect.AbstractBiMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `delegate`(`com.google.common.collect.AbstractBiMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap;.delegate:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `delegate`(`com.google.common.collect.AbstractBiMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap;.delegate:()Ljava/util/Map;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.util.Set` `entrySet`(`com.google.common.collect.AbstractBiMap` v2 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `entrySetIterator`(`com.google.common.collect.AbstractBiMap` v2 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap;.entrySetIterator:()Ljava/util/Iterator;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `forcePut`(`com.google.common.collect.AbstractBiMap` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.forcePut:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.BiMap` `inverse`(`com.google.common.collect.AbstractBiMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap;.inverse:()Lcom/google/common/collect/BiMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.common.collect.AbstractBiMap` v2 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.AbstractBiMap` `makeInverse`(`com.google.common.collect.AbstractBiMap` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.makeInverse:(Ljava/util/Map;)Lcom/google/common/collect/AbstractBiMap;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.AbstractBiMap` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.AbstractBiMap` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.AbstractBiMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setDelegates`(`com.google.common.collect.AbstractBiMap` v3 @kind this, `java.util.Map` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.setDelegates:(Ljava/util/Map;Ljava/util/Map;)V` @AccessFlag  {

  # return;
}
procedure `void` `setInverse`(`com.google.common.collect.AbstractBiMap` v0 @kind this, `com.google.common.collect.AbstractBiMap` v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap;.setInverse:(Lcom/google/common/collect/AbstractBiMap;)V` @AccessFlag  {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.common.collect.AbstractBiMap` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `values`(`com.google.common.collect.AbstractBiMap` v2 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap;.values:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
