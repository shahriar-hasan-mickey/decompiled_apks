record `com.google.common.collect.AbstractMapBasedMultimap$Itr` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `java.util.Collection` `com.google.common.collect.AbstractMapBasedMultimap$Itr.collection` @AccessFlag ;
  `java.lang.Object` `com.google.common.collect.AbstractMapBasedMultimap$Itr.key` @AccessFlag ;
  `java.util.Iterator` `com.google.common.collect.AbstractMapBasedMultimap$Itr.keyIterator` @AccessFlag FINAL;
  `com.google.common.collect.AbstractMapBasedMultimap` `com.google.common.collect.AbstractMapBasedMultimap$Itr.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Iterator` `com.google.common.collect.AbstractMapBasedMultimap$Itr.valueIterator` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$Itr` v0 @kind this, `com.google.common.collect.AbstractMapBasedMultimap` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$Itr;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.AbstractMapBasedMultimap$Itr` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$Itr;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.AbstractMapBasedMultimap$Itr` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$Itr;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `output`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$Itr;.output:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.AbstractMapBasedMultimap$Itr` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$Itr;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
