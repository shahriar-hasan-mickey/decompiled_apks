record `com.google.common.collect.Sets$PowerSet` @kind class @AccessFlag FINAL extends `java.util.AbstractSet` @kind class {
  `com.google.common.collect.ImmutableMap` `com.google.common.collect.Sets$PowerSet.inputSet` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.Sets$PowerSet` v3 @kind this, `java.util.Set` v4 @kind object) @signature `Lcom/google/common/collect/Sets$PowerSet;.<init>:(Ljava/util/Set;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.Sets$PowerSet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Sets$PowerSet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.Sets$PowerSet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Sets$PowerSet;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.Sets$PowerSet` v2 @kind this) @signature `Lcom/google/common/collect/Sets$PowerSet;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.Sets$PowerSet` v1 @kind this) @signature `Lcom/google/common/collect/Sets$PowerSet;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.Sets$PowerSet` v2 @kind this) @signature `Lcom/google/common/collect/Sets$PowerSet;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.Sets$PowerSet` v2 @kind this) @signature `Lcom/google/common/collect/Sets$PowerSet;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.Sets$PowerSet` v3 @kind this) @signature `Lcom/google/common/collect/Sets$PowerSet;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
