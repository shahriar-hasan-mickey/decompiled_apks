record `com.google.common.collect.Maps$MapDifferenceImpl` @kind class @AccessFlag  extends `com.google.common.collect.MapDifference` @kind interface {
  `java.util.Map` `com.google.common.collect.Maps$MapDifferenceImpl.differences` @AccessFlag FINAL;
  `java.util.Map` `com.google.common.collect.Maps$MapDifferenceImpl.onBoth` @AccessFlag FINAL;
  `java.util.Map` `com.google.common.collect.Maps$MapDifferenceImpl.onlyOnLeft` @AccessFlag FINAL;
  `java.util.Map` `com.google.common.collect.Maps$MapDifferenceImpl.onlyOnRight` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.Maps$MapDifferenceImpl` v0 @kind this, `java.util.Map` v1 @kind object, `java.util.Map` v2 @kind object, `java.util.Map` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lcom/google/common/collect/Maps$MapDifferenceImpl;.<init>:(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `areEqual`(`com.google.common.collect.Maps$MapDifferenceImpl` v1 @kind this) @signature `Lcom/google/common/collect/Maps$MapDifferenceImpl;.areEqual:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `entriesDiffering`(`com.google.common.collect.Maps$MapDifferenceImpl` v1 @kind this) @signature `Lcom/google/common/collect/Maps$MapDifferenceImpl;.entriesDiffering:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `entriesInCommon`(`com.google.common.collect.Maps$MapDifferenceImpl` v1 @kind this) @signature `Lcom/google/common/collect/Maps$MapDifferenceImpl;.entriesInCommon:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `entriesOnlyOnLeft`(`com.google.common.collect.Maps$MapDifferenceImpl` v1 @kind this) @signature `Lcom/google/common/collect/Maps$MapDifferenceImpl;.entriesOnlyOnLeft:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `entriesOnlyOnRight`(`com.google.common.collect.Maps$MapDifferenceImpl` v1 @kind this) @signature `Lcom/google/common/collect/Maps$MapDifferenceImpl;.entriesOnlyOnRight:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.Maps$MapDifferenceImpl` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/Maps$MapDifferenceImpl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.Maps$MapDifferenceImpl` v3 @kind this) @signature `Lcom/google/common/collect/Maps$MapDifferenceImpl;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.Maps$MapDifferenceImpl` v2 @kind this) @signature `Lcom/google/common/collect/Maps$MapDifferenceImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
