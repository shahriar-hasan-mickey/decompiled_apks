record `com.google.common.collect.Iterators$5` @kind class @AccessFlag  extends `com.google.common.collect.AbstractIterator` @kind class {
  `com.google.common.base.Predicate` `com.google.common.collect.Iterators$5.val$retainIfTrue` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Iterator` `com.google.common.collect.Iterators$5.val$unfiltered` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.Iterators$5` v0 @kind this, `java.util.Iterator` v1 @kind object, `com.google.common.base.Predicate` v2 @kind object) @signature `Lcom/google/common/collect/Iterators$5;.<init>:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `computeNext`(`com.google.common.collect.Iterators$5` v2 @kind this) @signature `Lcom/google/common/collect/Iterators$5;.computeNext:()Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
