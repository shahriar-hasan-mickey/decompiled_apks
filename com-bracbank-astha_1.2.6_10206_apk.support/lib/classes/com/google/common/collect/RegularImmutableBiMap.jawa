record `com.google.common.collect.RegularImmutableBiMap` @kind class @AccessFlag FINAL extends `com.google.common.collect.ImmutableBiMap` @kind class {
  `java.lang.Object`[] `com.google.common.collect.RegularImmutableBiMap.alternatingKeysAndValues` @AccessFlag FINAL_TRANSIENT;
  `com.google.common.collect.RegularImmutableBiMap` `com.google.common.collect.RegularImmutableBiMap.inverse` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object` `com.google.common.collect.RegularImmutableBiMap.keyHashTable` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `com.google.common.collect.RegularImmutableBiMap.keyOffset` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `com.google.common.collect.RegularImmutableBiMap.size` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
global `com.google.common.collect.RegularImmutableBiMap` `@@com.google.common.collect.RegularImmutableBiMap.EMPTY` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/collect/RegularImmutableBiMap;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.RegularImmutableBiMap` v2 @kind this) @signature `Lcom/google/common/collect/RegularImmutableBiMap;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.RegularImmutableBiMap` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object`[] v2 @kind object, `int` v3 , `com.google.common.collect.RegularImmutableBiMap` v4 @kind object) @signature `Lcom/google/common/collect/RegularImmutableBiMap;.<init>:(Ljava/lang/Object;[Ljava/lang/Object;ILcom/google/common/collect/RegularImmutableBiMap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.RegularImmutableBiMap` v2 @kind this, `java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Lcom/google/common/collect/RegularImmutableBiMap;.<init>:([Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `createEntrySet`(`com.google.common.collect.RegularImmutableBiMap` v4 @kind this) @signature `Lcom/google/common/collect/RegularImmutableBiMap;.createEntrySet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `createKeySet`(`com.google.common.collect.RegularImmutableBiMap` v4 @kind this) @signature `Lcom/google/common/collect/RegularImmutableBiMap;.createKeySet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.RegularImmutableBiMap` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/RegularImmutableBiMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.BiMap` `inverse`(`com.google.common.collect.RegularImmutableBiMap` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableBiMap;.inverse:()Lcom/google/common/collect/BiMap;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableBiMap` `inverse`(`com.google.common.collect.RegularImmutableBiMap` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableBiMap;.inverse:()Lcom/google/common/collect/ImmutableBiMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isPartialView`(`com.google.common.collect.RegularImmutableBiMap` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableBiMap;.isPartialView:()Z` @AccessFlag  {

  # return;
}
procedure `int` `size`(`com.google.common.collect.RegularImmutableBiMap` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableBiMap;.size:()I` @AccessFlag PUBLIC {

  # return;
}
