record `com.google.common.collect.ImmutableMap` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Map` @kind interface, `java.io.Serializable` @kind interface {
  `com.google.common.collect.ImmutableSet` `com.google.common.collect.ImmutableMap.entrySet` @AccessFlag PRIVATE_TRANSIENT;
  `com.google.common.collect.ImmutableSet` `com.google.common.collect.ImmutableMap.keySet` @AccessFlag PRIVATE_TRANSIENT;
  `com.google.common.collect.ImmutableSetMultimap` `com.google.common.collect.ImmutableMap.multimapView` @AccessFlag PRIVATE_TRANSIENT;
  `com.google.common.collect.ImmutableCollection` `com.google.common.collect.ImmutableMap.values` @AccessFlag PRIVATE_TRANSIENT;
}
global `java.util.Map$Entry`[] `@@com.google.common.collect.ImmutableMap.EMPTY_ENTRY_ARRAY` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/collect/ImmutableMap;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableMap` v0 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.ImmutableMap$Builder` `builder`() @signature `Lcom/google/common/collect/ImmutableMap;.builder:()Lcom/google/common/collect/ImmutableMap$Builder;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap$Builder` `builderWithExpectedSize`(`int` v1 ) @signature `Lcom/google/common/collect/ImmutableMap;.builderWithExpectedSize:(I)Lcom/google/common/collect/ImmutableMap$Builder;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `checkNoConflict`(`boolean` v0 , `java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.checkNoConflict:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.IllegalArgumentException` `conflictException`(`java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.conflictException:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `copyOf`(`java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `copyOf`(`java.util.Map` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Map$Entry` `entryOf`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.entryOf:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`() @signature `Lcom/google/common/collect/ImmutableMap;.of:()Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object, `java.lang.Object` v12 @kind object, `java.lang.Object` v13 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object, `java.lang.Object` v12 @kind object, `java.lang.Object` v13 @kind object, `java.lang.Object` v14 @kind object, `java.lang.Object` v15 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object, `java.lang.Object` v12 @kind object, `java.lang.Object` v13 @kind object, `java.lang.Object` v14 @kind object, `java.lang.Object` v15 @kind object, `java.lang.Object` v16 @kind object, `java.lang.Object` v17 @kind object, `java.lang.Object` v18 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object, `java.lang.Object` v12 @kind object, `java.lang.Object` v13 @kind object, `java.lang.Object` v14 @kind object, `java.lang.Object` v15 @kind object, `java.lang.Object` v16 @kind object, `java.lang.Object` v17 @kind object, `java.lang.Object` v18 @kind object, `java.lang.Object` v19 @kind object, `java.lang.Object` v20 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `of`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object, `java.lang.Object` v12 @kind object, `java.lang.Object` v13 @kind object, `java.lang.Object` v14 @kind object, `java.lang.Object` v15 @kind object, `java.lang.Object` v16 @kind object, `java.lang.Object` v17 @kind object, `java.lang.Object` v18 @kind object, `java.lang.Object` v19 @kind object, `java.lang.Object` v20 @kind object, `java.lang.Object` v21 @kind object, `java.lang.Object` v22 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `ofEntries`(`java.util.Map$Entry`[] v0 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.ofEntries:([Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSetMultimap` `asMultimap`(`com.google.common.collect.ImmutableMap` v4 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.asMultimap:()Lcom/google/common/collect/ImmutableSetMultimap;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.clear:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.ImmutableMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsValue`(`com.google.common.collect.ImmutableMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `createEntrySet`() @signature `Lcom/google/common/collect/ImmutableMap;.createEntrySet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag ABSTRACT {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `createKeySet`() @signature `Lcom/google/common/collect/ImmutableMap;.createKeySet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag ABSTRACT {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection` `createValues`() @signature `Lcom/google/common/collect/ImmutableMap;.createValues:()Lcom/google/common/collect/ImmutableCollection;` @AccessFlag ABSTRACT {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `entrySet`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.entrySet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `entrySet`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.ImmutableMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getOrDefault`(`com.google.common.collect.ImmutableMap` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isHashCodeFast`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.isHashCodeFast:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `isPartialView`() @signature `Lcom/google/common/collect/ImmutableMap;.isPartialView:()Z` @AccessFlag ABSTRACT {

  # return;
}
procedure `com.google.common.collect.UnmodifiableIterator` `keyIterator`(`com.google.common.collect.ImmutableMap` v2 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.keyIterator:()Lcom/google/common/collect/UnmodifiableIterator;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `keySet`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.keySet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.ImmutableMap` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.ImmutableMap` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.ImmutableMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection` `values`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.values:()Lcom/google/common/collect/ImmutableCollection;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.collect.ImmutableMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMap;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
