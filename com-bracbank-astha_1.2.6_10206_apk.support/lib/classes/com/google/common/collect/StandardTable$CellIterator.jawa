record `com.google.common.collect.StandardTable$CellIterator` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `com.google.common.collect.StandardTable$CellIterator.columnIterator` @AccessFlag ;
  `java.util.Map$Entry` `com.google.common.collect.StandardTable$CellIterator.rowEntry` @AccessFlag ;
  `java.util.Iterator` `com.google.common.collect.StandardTable$CellIterator.rowIterator` @AccessFlag FINAL;
  `com.google.common.collect.StandardTable` `com.google.common.collect.StandardTable$CellIterator.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.StandardTable$CellIterator` v0 @kind this, `com.google.common.collect.StandardTable` v1 @kind object) @signature `Lcom/google/common/collect/StandardTable$CellIterator;.<init>:(Lcom/google/common/collect/StandardTable;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.StandardTable$CellIterator` v0 @kind this, `com.google.common.collect.StandardTable` v1 @kind object, `com.google.common.collect.StandardTable$1` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable$CellIterator;.<init>:(Lcom/google/common/collect/StandardTable;Lcom/google/common/collect/StandardTable$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.StandardTable$CellIterator` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable$CellIterator;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.Table$Cell` `next`(`com.google.common.collect.StandardTable$CellIterator` v3 @kind this) @signature `Lcom/google/common/collect/StandardTable$CellIterator;.next:()Lcom/google/common/collect/Table$Cell;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.StandardTable$CellIterator` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable$CellIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.StandardTable$CellIterator` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable$CellIterator;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
