record `com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator` @kind class @AccessFlag  extends `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator` @kind class, `java.util.ListIterator` @kind interface {
  `com.google.common.collect.AbstractMapBasedMultimap$WrappedList` `com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator.this$1` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator` v0 @kind this, `com.google.common.collect.AbstractMapBasedMultimap$WrappedList` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList$WrappedListIterator;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator` v1 @kind this, `com.google.common.collect.AbstractMapBasedMultimap$WrappedList` v2 @kind object, `int` v3 ) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList$WrappedListIterator;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.ListIterator` `getDelegateListIterator`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList$WrappedListIterator;.getDelegateListIterator:()Ljava/util/ListIterator;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `add`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList$WrappedListIterator;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasPrevious`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList$WrappedListIterator;.hasPrevious:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `nextIndex`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList$WrappedListIterator;.nextIndex:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `previous`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList$WrappedListIterator;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `previousIndex`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList$WrappedListIterator;.previousIndex:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `set`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedList$WrappedListIterator;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
