record `com.google.common.collect.HashBiMap$View$1` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `int` `com.google.common.collect.HashBiMap$View$1.expectedModCount` @AccessFlag PRIVATE;
  `int` `com.google.common.collect.HashBiMap$View$1.index` @AccessFlag PRIVATE;
  `int` `com.google.common.collect.HashBiMap$View$1.indexToRemove` @AccessFlag PRIVATE;
  `int` `com.google.common.collect.HashBiMap$View$1.remaining` @AccessFlag PRIVATE;
  `com.google.common.collect.HashBiMap$View` `com.google.common.collect.HashBiMap$View$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.HashBiMap$View$1` v1 @kind this, `com.google.common.collect.HashBiMap$View` v2 @kind object) @signature `Lcom/google/common/collect/HashBiMap$View$1;.<init>:(Lcom/google/common/collect/HashBiMap$View;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `checkForComodification`(`com.google.common.collect.HashBiMap$View$1` v2 @kind this) @signature `Lcom/google/common/collect/HashBiMap$View$1;.checkForComodification:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.HashBiMap$View$1` v2 @kind this) @signature `Lcom/google/common/collect/HashBiMap$View$1;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.HashBiMap$View$1` v3 @kind this) @signature `Lcom/google/common/collect/HashBiMap$View$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.HashBiMap$View$1` v4 @kind this) @signature `Lcom/google/common/collect/HashBiMap$View$1;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
