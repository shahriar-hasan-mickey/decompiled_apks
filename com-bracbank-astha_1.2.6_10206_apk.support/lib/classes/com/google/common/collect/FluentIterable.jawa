record `com.google.common.collect.FluentIterable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Iterable` @kind interface {
  `com.google.common.base.Optional` `com.google.common.collect.FluentIterable.iterableDelegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.FluentIterable` v1 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.FluentIterable` v0 @kind this, `java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `concat`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.concat:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `concat`(`java.lang.Iterable` v2 @kind object, `java.lang.Iterable` v3 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `concat`(`java.lang.Iterable` v2 @kind object, `java.lang.Iterable` v3 @kind object, `java.lang.Iterable` v4 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `concat`(`java.lang.Iterable` v2 @kind object, `java.lang.Iterable` v3 @kind object, `java.lang.Iterable` v4 @kind object, `java.lang.Iterable` v5 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `concat`(`java.lang.Iterable`[] v1 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.concat:([Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `concatNoDefensiveCopy`(`java.lang.Iterable`[] v3 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.concatNoDefensiveCopy:([Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `from`(`com.google.common.collect.FluentIterable` v0 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.from:(Lcom/google/common/collect/FluentIterable;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `from`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `from`(`java.lang.Object`[] v0 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.from:([Ljava/lang/Object;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Iterable` `getDelegate`(`com.google.common.collect.FluentIterable` v1 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.getDelegate:()Ljava/lang/Iterable;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `of`() @signature `Lcom/google/common/collect/FluentIterable;.of:()Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `of`(`java.lang.Object` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.of:(Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `allMatch`(`com.google.common.collect.FluentIterable` v1 @kind this, `com.google.common.base.Predicate` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.allMatch:(Lcom/google/common/base/Predicate;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `anyMatch`(`com.google.common.collect.FluentIterable` v1 @kind this, `com.google.common.base.Predicate` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.anyMatch:(Lcom/google/common/base/Predicate;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `append`(`com.google.common.collect.FluentIterable` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.append:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `append`(`com.google.common.collect.FluentIterable` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.append:([Ljava/lang/Object;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.FluentIterable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.util.Collection` `copyInto`(`com.google.common.collect.FluentIterable` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.copyInto:(Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `cycle`(`com.google.common.collect.FluentIterable` v1 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.cycle:()Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `filter`(`com.google.common.collect.FluentIterable` v1 @kind this, `com.google.common.base.Predicate` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.filter:(Lcom/google/common/base/Predicate;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `filter`(`com.google.common.collect.FluentIterable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.filter:(Ljava/lang/Class;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.base.Optional` `first`(`com.google.common.collect.FluentIterable` v2 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.first:()Lcom/google/common/base/Optional;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.base.Optional` `firstMatch`(`com.google.common.collect.FluentIterable` v1 @kind this, `com.google.common.base.Predicate` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.firstMatch:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Optional;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.FluentIterable` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/FluentIterable;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableListMultimap` `index`(`com.google.common.collect.FluentIterable` v1 @kind this, `com.google.common.base.Function` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.index:(Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableListMultimap;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.FluentIterable` v1 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `join`(`com.google.common.collect.FluentIterable` v0 @kind this, `com.google.common.base.Joiner` v1 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.join:(Lcom/google/common/base/Joiner;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.base.Optional` `last`(`com.google.common.collect.FluentIterable` v3 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.last:()Lcom/google/common/base/Optional;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `limit`(`com.google.common.collect.FluentIterable` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/FluentIterable;.limit:(I)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `size`(`com.google.common.collect.FluentIterable` v1 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.size:()I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `skip`(`com.google.common.collect.FluentIterable` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/FluentIterable;.skip:(I)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.collect.FluentIterable` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.toArray:(Ljava/lang/Class;)[Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableList` `toList`(`com.google.common.collect.FluentIterable` v1 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.toList:()Lcom/google/common/collect/ImmutableList;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `toMap`(`com.google.common.collect.FluentIterable` v1 @kind this, `com.google.common.base.Function` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.toMap:(Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableMultiset` `toMultiset`(`com.google.common.collect.FluentIterable` v1 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.toMultiset:()Lcom/google/common/collect/ImmutableMultiset;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `toSet`(`com.google.common.collect.FluentIterable` v1 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.toSet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableList` `toSortedList`(`com.google.common.collect.FluentIterable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.toSortedList:(Ljava/util/Comparator;)Lcom/google/common/collect/ImmutableList;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `toSortedSet`(`com.google.common.collect.FluentIterable` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.toSortedSet:(Ljava/util/Comparator;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.FluentIterable` v1 @kind this) @signature `Lcom/google/common/collect/FluentIterable;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `transform`(`com.google.common.collect.FluentIterable` v1 @kind this, `com.google.common.base.Function` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.transform:(Lcom/google/common/base/Function;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.FluentIterable` `transformAndConcat`(`com.google.common.collect.FluentIterable` v0 @kind this, `com.google.common.base.Function` v1 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.transformAndConcat:(Lcom/google/common/base/Function;)Lcom/google/common/collect/FluentIterable;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `uniqueIndex`(`com.google.common.collect.FluentIterable` v1 @kind this, `com.google.common.base.Function` v2 @kind object) @signature `Lcom/google/common/collect/FluentIterable;.uniqueIndex:(Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_FINAL {

  # return;
}
