record `com.google.common.collect.Tables` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.google.common.base.Function` `@@com.google.common.collect.Tables.UNMODIFIABLE_WRAPPER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/collect/Tables;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.Tables` v0 @kind this) @signature `Lcom/google/common/collect/Tables;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.base.Function` `access$000`() @signature `Lcom/google/common/collect/Tables;.access$000:()Lcom/google/common/base/Function;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `equalsImpl`(`com.google.common.collect.Table` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/Tables;.equalsImpl:(Lcom/google/common/collect/Table;Ljava/lang/Object;)Z` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.Table$Cell` `immutableCell`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/Tables;.immutableCell:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/Table$Cell;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Table` `newCustomTable`(`java.util.Map` v1 @kind object, `com.google.common.base.Supplier` v2 @kind object) @signature `Lcom/google/common/collect/Tables;.newCustomTable:(Ljava/util/Map;Lcom/google/common/base/Supplier;)Lcom/google/common/collect/Table;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Table` `synchronizedTable`(`com.google.common.collect.Table` v1 @kind object) @signature `Lcom/google/common/collect/Tables;.synchronizedTable:(Lcom/google/common/collect/Table;)Lcom/google/common/collect/Table;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Table` `transformValues`(`com.google.common.collect.Table` v1 @kind object, `com.google.common.base.Function` v2 @kind object) @signature `Lcom/google/common/collect/Tables;.transformValues:(Lcom/google/common/collect/Table;Lcom/google/common/base/Function;)Lcom/google/common/collect/Table;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Table` `transpose`(`com.google.common.collect.Table` v1 @kind object) @signature `Lcom/google/common/collect/Tables;.transpose:(Lcom/google/common/collect/Table;)Lcom/google/common/collect/Table;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.RowSortedTable` `unmodifiableRowSortedTable`(`com.google.common.collect.RowSortedTable` v1 @kind object) @signature `Lcom/google/common/collect/Tables;.unmodifiableRowSortedTable:(Lcom/google/common/collect/RowSortedTable;)Lcom/google/common/collect/RowSortedTable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.Table` `unmodifiableTable`(`com.google.common.collect.Table` v1 @kind object) @signature `Lcom/google/common/collect/Tables;.unmodifiableTable:(Lcom/google/common/collect/Table;)Lcom/google/common/collect/Table;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.Function` `unmodifiableWrapper`() @signature `Lcom/google/common/collect/Tables;.unmodifiableWrapper:()Lcom/google/common/base/Function;` @AccessFlag PRIVATE_STATIC {

  # return;
}
