record `com.google.common.collect.MinMaxPriorityQueue$Heap` @kind class @AccessFlag  {
  `com.google.common.collect.Ordering` `com.google.common.collect.MinMaxPriorityQueue$Heap.ordering` @AccessFlag FINAL;
  `com.google.common.collect.MinMaxPriorityQueue$Heap` `com.google.common.collect.MinMaxPriorityQueue$Heap.otherHeap` @AccessFlag ;
  `com.google.common.collect.MinMaxPriorityQueue` `com.google.common.collect.MinMaxPriorityQueue$Heap.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v0 @kind this, `com.google.common.collect.MinMaxPriorityQueue` v1 @kind object, `com.google.common.collect.Ordering` v2 @kind object) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.<init>:(Lcom/google/common/collect/MinMaxPriorityQueue;Lcom/google/common/collect/Ordering;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `access$400`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v0 @kind object, `int` v1 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.access$400:(Lcom/google/common/collect/MinMaxPriorityQueue$Heap;I)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `getGrandparentIndex`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.getGrandparentIndex:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getLeftChildIndex`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.getLeftChildIndex:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getParentIndex`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.getParentIndex:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getRightChildIndex`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.getRightChildIndex:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `verifyIndex`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v3 @kind this, `int` v4 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.verifyIndex:(I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `bubbleUp`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.bubbleUp:(ILjava/lang/Object;)V` @AccessFlag  {

  # return;
}
procedure `int` `bubbleUpAlternatingLevels`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.bubbleUpAlternatingLevels:(ILjava/lang/Object;)I` @AccessFlag  {

  # return;
}
procedure `int` `compareElements`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.compareElements:(II)I` @AccessFlag  {

  # return;
}
procedure `int` `crossOver`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.crossOver:(ILjava/lang/Object;)I` @AccessFlag  {

  # return;
}
procedure `int` `crossOverUp`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v5 @kind this, `int` v6 , `java.lang.Object` v7 @kind object) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.crossOverUp:(ILjava/lang/Object;)I` @AccessFlag  {

  # return;
}
procedure `int` `fillHoleAt`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v3 @kind this, `int` v4 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.fillHoleAt:(I)I` @AccessFlag  {

  # return;
}
procedure `int` `findMin`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.findMin:(II)I` @AccessFlag  {

  # return;
}
procedure `int` `findMinChild`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.findMinChild:(I)I` @AccessFlag  {

  # return;
}
procedure `int` `findMinGrandChild`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.findMinGrandChild:(I)I` @AccessFlag  {

  # return;
}
procedure `int` `swapWithConceptuallyLastElement`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.swapWithConceptuallyLastElement:(Ljava/lang/Object;)I` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.MinMaxPriorityQueue$MoveDesc` `tryCrossOverAndBubbleUp`(`com.google.common.collect.MinMaxPriorityQueue$Heap` v3 @kind this, `int` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/collect/MinMaxPriorityQueue$Heap;.tryCrossOverAndBubbleUp:(IILjava/lang/Object;)Lcom/google/common/collect/MinMaxPriorityQueue$MoveDesc;` @AccessFlag  {

  # return;
}
