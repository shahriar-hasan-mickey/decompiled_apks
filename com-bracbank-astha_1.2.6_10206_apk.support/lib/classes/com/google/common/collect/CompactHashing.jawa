record `com.google.common.collect.CompactHashing` @kind class @AccessFlag FINAL {
}
global `int` `@@com.google.common.collect.CompactHashing.BYTE_MASK` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.common.collect.CompactHashing.BYTE_MAX_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.common.collect.CompactHashing.DEFAULT_SIZE` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.common.collect.CompactHashing.HASH_TABLE_BITS_MASK` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.common.collect.CompactHashing.HASH_TABLE_BITS_MAX_BITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.common.collect.CompactHashing.MAX_SIZE` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.common.collect.CompactHashing.MIN_HASH_TABLE_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.common.collect.CompactHashing.MODIFICATION_COUNT_INCREMENT` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.common.collect.CompactHashing.SHORT_MASK` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.common.collect.CompactHashing.SHORT_MAX_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@com.google.common.collect.CompactHashing.UNSET` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.CompactHashing` v0 @kind this) @signature `Lcom/google/common/collect/CompactHashing;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `createTable`(`int` v3 ) @signature `Lcom/google/common/collect/CompactHashing;.createTable:(I)Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `int` `getHashPrefix`(`int` v0 , `int` v1 ) @signature `Lcom/google/common/collect/CompactHashing;.getHashPrefix:(II)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `getNext`(`int` v0 , `int` v1 ) @signature `Lcom/google/common/collect/CompactHashing;.getNext:(II)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `maskCombine`(`int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/common/collect/CompactHashing;.maskCombine:(III)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `newCapacity`(`int` v1 ) @signature `Lcom/google/common/collect/CompactHashing;.newCapacity:(I)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `remove`(`java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `int` v10 , `java.lang.Object` v11 @kind object, `int`[] v12 @kind object, `java.lang.Object`[] v13 @kind object, `java.lang.Object`[] v14 @kind object) @signature `Lcom/google/common/collect/CompactHashing;.remove:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @AccessFlag STATIC {

  # return;
}
procedure `void` `tableClear`(`java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/CompactHashing;.tableClear:(Ljava/lang/Object;)V` @AccessFlag STATIC {

  # return;
}
procedure `int` `tableGet`(`java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/collect/CompactHashing;.tableGet:(Ljava/lang/Object;I)I` @AccessFlag STATIC {

  # return;
}
procedure `void` `tableSet`(`java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/common/collect/CompactHashing;.tableSet:(Ljava/lang/Object;II)V` @AccessFlag STATIC {

  # return;
}
procedure `int` `tableSize`(`int` v2 ) @signature `Lcom/google/common/collect/CompactHashing;.tableSize:(I)I` @AccessFlag STATIC {

  # return;
}
