record `com.google.common.collect.Maps$FilteredEntryMap$EntrySet` @kind class @AccessFlag  extends `com.google.common.collect.ForwardingSet` @kind class {
  `com.google.common.collect.Maps$FilteredEntryMap` `com.google.common.collect.Maps$FilteredEntryMap$EntrySet.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.Maps$FilteredEntryMap$EntrySet` v0 @kind this, `com.google.common.collect.Maps$FilteredEntryMap` v1 @kind object) @signature `Lcom/google/common/collect/Maps$FilteredEntryMap$EntrySet;.<init>:(Lcom/google/common/collect/Maps$FilteredEntryMap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.Maps$FilteredEntryMap$EntrySet` v0 @kind this, `com.google.common.collect.Maps$FilteredEntryMap` v1 @kind object, `com.google.common.collect.Maps$1` v2 @kind object) @signature `Lcom/google/common/collect/Maps$FilteredEntryMap$EntrySet;.<init>:(Lcom/google/common/collect/Maps$FilteredEntryMap;Lcom/google/common/collect/Maps$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `delegate`(`com.google.common.collect.Maps$FilteredEntryMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/Maps$FilteredEntryMap$EntrySet;.delegate:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.util.Collection` `delegate`(`com.google.common.collect.Maps$FilteredEntryMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/Maps$FilteredEntryMap$EntrySet;.delegate:()Ljava/util/Collection;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `delegate`(`com.google.common.collect.Maps$FilteredEntryMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/Maps$FilteredEntryMap$EntrySet;.delegate:()Ljava/util/Set;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.Maps$FilteredEntryMap$EntrySet` v2 @kind this) @signature `Lcom/google/common/collect/Maps$FilteredEntryMap$EntrySet;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
