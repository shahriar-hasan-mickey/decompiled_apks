record `com.google.common.collect.Iterators$PeekingImpl` @kind class @AccessFlag  extends `com.google.common.collect.PeekingIterator` @kind interface {
  `boolean` `com.google.common.collect.Iterators$PeekingImpl.hasPeeked` @AccessFlag PRIVATE;
  `java.util.Iterator` `com.google.common.collect.Iterators$PeekingImpl.iterator` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.google.common.collect.Iterators$PeekingImpl.peekedElement` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.collect.Iterators$PeekingImpl` v0 @kind this, `java.util.Iterator` v1 @kind object) @signature `Lcom/google/common/collect/Iterators$PeekingImpl;.<init>:(Ljava/util/Iterator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.Iterators$PeekingImpl` v1 @kind this) @signature `Lcom/google/common/collect/Iterators$PeekingImpl;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.Iterators$PeekingImpl` v2 @kind this) @signature `Lcom/google/common/collect/Iterators$PeekingImpl;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `peek`(`com.google.common.collect.Iterators$PeekingImpl` v1 @kind this) @signature `Lcom/google/common/collect/Iterators$PeekingImpl;.peek:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.Iterators$PeekingImpl` v2 @kind this) @signature `Lcom/google/common/collect/Iterators$PeekingImpl;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
