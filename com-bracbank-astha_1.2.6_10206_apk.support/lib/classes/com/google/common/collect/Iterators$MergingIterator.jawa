record `com.google.common.collect.Iterators$MergingIterator` @kind class @AccessFlag  extends `com.google.common.collect.UnmodifiableIterator` @kind class {
  `java.util.Queue` `com.google.common.collect.Iterators$MergingIterator.queue` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.Iterators$MergingIterator` v2 @kind this, `java.lang.Iterable` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lcom/google/common/collect/Iterators$MergingIterator;.<init>:(Ljava/lang/Iterable;Ljava/util/Comparator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`java.util.Comparator` v0 @kind object, `com.google.common.collect.PeekingIterator` v1 @kind object, `com.google.common.collect.PeekingIterator` v2 @kind object) @signature `Lcom/google/common/collect/Iterators$MergingIterator;.a:(Ljava/util/Comparator;Lcom/google/common/collect/PeekingIterator;Lcom/google/common/collect/PeekingIterator;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `int` `lambda$new$0`(`java.util.Comparator` v0 @kind object, `com.google.common.collect.PeekingIterator` v1 @kind object, `com.google.common.collect.PeekingIterator` v2 @kind object) @signature `Lcom/google/common/collect/Iterators$MergingIterator;.lambda$new$0:(Ljava/util/Comparator;Lcom/google/common/collect/PeekingIterator;Lcom/google/common/collect/PeekingIterator;)I` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.Iterators$MergingIterator` v1 @kind this) @signature `Lcom/google/common/collect/Iterators$MergingIterator;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.Iterators$MergingIterator` v3 @kind this) @signature `Lcom/google/common/collect/Iterators$MergingIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
