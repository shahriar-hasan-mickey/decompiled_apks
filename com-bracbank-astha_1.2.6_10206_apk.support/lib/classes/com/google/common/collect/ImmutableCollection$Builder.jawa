record `com.google.common.collect.ImmutableCollection$Builder` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `int` `@@com.google.common.collect.ImmutableCollection$Builder.DEFAULT_INITIAL_CAPACITY` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.ImmutableCollection$Builder` v0 @kind this) @signature `Lcom/google/common/collect/ImmutableCollection$Builder;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `expandedCapacity`(`int` v1 , `int` v2 ) @signature `Lcom/google/common/collect/ImmutableCollection$Builder;.expandedCapacity:(II)I` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$Builder` `add`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$Builder;.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableCollection$Builder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$Builder` `add`(`com.google.common.collect.ImmutableCollection$Builder` v3 @kind this, `java.lang.Object`[] v4 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$Builder;.add:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableCollection$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$Builder` `addAll`(`com.google.common.collect.ImmutableCollection$Builder` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$Builder;.addAll:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableCollection$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$Builder` `addAll`(`com.google.common.collect.ImmutableCollection$Builder` v1 @kind this, `java.util.Iterator` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$Builder;.addAll:(Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableCollection$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection` `build`() @signature `Lcom/google/common/collect/ImmutableCollection$Builder;.build:()Lcom/google/common/collect/ImmutableCollection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
