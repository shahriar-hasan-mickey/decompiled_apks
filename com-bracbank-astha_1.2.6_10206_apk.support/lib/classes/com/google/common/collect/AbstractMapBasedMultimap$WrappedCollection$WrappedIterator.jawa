record `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator.delegateIterator` @AccessFlag FINAL;
  `java.util.Collection` `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator.originalDelegate` @AccessFlag FINAL;
  `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator.this$1` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator` v0 @kind this, `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator` v0 @kind this, `com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Iterator` `getDelegateIterator`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;.getDelegateIterator:()Ljava/util/Iterator;` @AccessFlag  {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `validateIterator`(`com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$WrappedCollection$WrappedIterator;.validateIterator:()V` @AccessFlag  {

  # return;
}
