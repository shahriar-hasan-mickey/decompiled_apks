record `com.google.common.collect.Collections2$TransformedCollection` @kind class @AccessFlag  extends `java.util.AbstractCollection` @kind class {
  `java.util.Collection` `com.google.common.collect.Collections2$TransformedCollection.fromCollection` @AccessFlag FINAL;
  `com.google.common.base.Function` `com.google.common.collect.Collections2$TransformedCollection.function` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.Collections2$TransformedCollection` v0 @kind this, `java.util.Collection` v1 @kind object, `com.google.common.base.Function` v2 @kind object) @signature `Lcom/google/common/collect/Collections2$TransformedCollection;.<init>:(Ljava/util/Collection;Lcom/google/common/base/Function;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.Collections2$TransformedCollection` v1 @kind this) @signature `Lcom/google/common/collect/Collections2$TransformedCollection;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.Collections2$TransformedCollection` v1 @kind this) @signature `Lcom/google/common/collect/Collections2$TransformedCollection;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.Collections2$TransformedCollection` v2 @kind this) @signature `Lcom/google/common/collect/Collections2$TransformedCollection;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.Collections2$TransformedCollection` v1 @kind this) @signature `Lcom/google/common/collect/Collections2$TransformedCollection;.size:()I` @AccessFlag PUBLIC {

  # return;
}
