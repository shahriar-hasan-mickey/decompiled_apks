record `com.google.common.collect.TreeBasedTable$TreeRow` @kind class @AccessFlag  extends `com.google.common.collect.StandardTable$Row` @kind class, `java.util.SortedMap` @kind interface {
  `java.lang.Object` `com.google.common.collect.TreeBasedTable$TreeRow.lowerBound` @AccessFlag FINAL;
  `com.google.common.collect.TreeBasedTable` `com.google.common.collect.TreeBasedTable$TreeRow.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `com.google.common.collect.TreeBasedTable$TreeRow.upperBound` @AccessFlag FINAL;
  `java.util.SortedMap` `com.google.common.collect.TreeBasedTable$TreeRow.wholeRow` @AccessFlag TRANSIENT;
}
procedure `void` `<init>`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this, `com.google.common.collect.TreeBasedTable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.<init>:(Lcom/google/common/collect/TreeBasedTable;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.TreeBasedTable$TreeRow` v0 @kind this, `com.google.common.collect.TreeBasedTable` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.<init>:(Lcom/google/common/collect/TreeBasedTable;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Comparator` `comparator`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.comparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compare`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag  {

  # return;
}
procedure `java.util.Map` `computeBackingRowMap`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.computeBackingRowMap:()Ljava/util/Map;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `java.util.SortedMap` `computeBackingRowMap`(`com.google.common.collect.TreeBasedTable$TreeRow` v2 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.computeBackingRowMap:()Ljava/util/SortedMap;` @AccessFlag  {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `firstKey`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.firstKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.SortedMap` `headMap`(`com.google.common.collect.TreeBasedTable$TreeRow` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.headMap:(Ljava/lang/Object;)Ljava/util/SortedMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.SortedSet` `keySet`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.keySet:()Ljava/util/SortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `lastKey`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.lastKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `maintainEmptyInvariant`(`com.google.common.collect.TreeBasedTable$TreeRow` v2 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.maintainEmptyInvariant:()V` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `rangeContains`(`com.google.common.collect.TreeBasedTable$TreeRow` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.rangeContains:(Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `java.util.SortedMap` `subMap`(`com.google.common.collect.TreeBasedTable$TreeRow` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.SortedMap` `tailMap`(`com.google.common.collect.TreeBasedTable$TreeRow` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.tailMap:(Ljava/lang/Object;)Ljava/util/SortedMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateWholeRowField`(`com.google.common.collect.TreeBasedTable$TreeRow` v2 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable$TreeRow;.updateWholeRowField:()V` @AccessFlag  {

  # return;
}
