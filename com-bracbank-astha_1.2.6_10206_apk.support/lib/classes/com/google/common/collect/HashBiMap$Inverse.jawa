record `com.google.common.collect.HashBiMap$Inverse` @kind class @AccessFlag  extends `java.util.AbstractMap` @kind class, `com.google.common.collect.BiMap` @kind interface, `java.io.Serializable` @kind interface {
  `com.google.common.collect.HashBiMap` `com.google.common.collect.HashBiMap$Inverse.forward` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.google.common.collect.HashBiMap$Inverse.inverseEntrySet` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`com.google.common.collect.HashBiMap$Inverse` v0 @kind this, `com.google.common.collect.HashBiMap` v1 @kind object) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.<init>:(Lcom/google/common/collect/HashBiMap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `readObject`(`com.google.common.collect.HashBiMap$Inverse` v0 @kind this, `java.io.ObjectInputStream` v1 @kind object) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.HashBiMap$Inverse` v1 @kind this) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.HashBiMap$Inverse` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsValue`(`com.google.common.collect.HashBiMap$Inverse` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `entrySet`(`com.google.common.collect.HashBiMap$Inverse` v2 @kind this) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `forcePut`(`com.google.common.collect.HashBiMap$Inverse` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.forcePut:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.HashBiMap$Inverse` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.BiMap` `inverse`(`com.google.common.collect.HashBiMap$Inverse` v1 @kind this) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.inverse:()Lcom/google/common/collect/BiMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.common.collect.HashBiMap$Inverse` v1 @kind this) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.HashBiMap$Inverse` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.HashBiMap$Inverse` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.HashBiMap$Inverse` v1 @kind this) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.common.collect.HashBiMap$Inverse` v1 @kind this) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `values`(`com.google.common.collect.HashBiMap$Inverse` v1 @kind this) @signature `Lcom/google/common/collect/HashBiMap$Inverse;.values:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
