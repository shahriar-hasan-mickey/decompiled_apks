record `com.google.common.collect.ImmutableMapEntrySet` @kind class @AccessFlag ABSTRACT extends `com.google.common.collect.ImmutableSet` @kind class {
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableMapEntrySet` v0 @kind this) @signature `Lcom/google/common/collect/ImmutableMapEntrySet;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.ImmutableMapEntrySet` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/ImmutableMapEntrySet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.ImmutableMapEntrySet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMapEntrySet;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isHashCodeFast`(`com.google.common.collect.ImmutableMapEntrySet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMapEntrySet;.isHashCodeFast:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `isPartialView`(`com.google.common.collect.ImmutableMapEntrySet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMapEntrySet;.isPartialView:()Z` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `map`() @signature `Lcom/google/common/collect/ImmutableMapEntrySet;.map:()Lcom/google/common/collect/ImmutableMap;` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `size`(`com.google.common.collect.ImmutableMapEntrySet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMapEntrySet;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.collect.ImmutableMapEntrySet` v2 @kind this) @signature `Lcom/google/common/collect/ImmutableMapEntrySet;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
