record `com.google.common.collect.StandardTable$TableSet` @kind class @AccessFlag ABSTRACT extends `com.google.common.collect.Sets$ImprovedAbstractSet` @kind class {
  `com.google.common.collect.StandardTable` `com.google.common.collect.StandardTable$TableSet.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.StandardTable$TableSet` v0 @kind this, `com.google.common.collect.StandardTable` v1 @kind object) @signature `Lcom/google/common/collect/StandardTable$TableSet;.<init>:(Lcom/google/common/collect/StandardTable;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.StandardTable$TableSet` v0 @kind this, `com.google.common.collect.StandardTable` v1 @kind object, `com.google.common.collect.StandardTable$1` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable$TableSet;.<init>:(Lcom/google/common/collect/StandardTable;Lcom/google/common/collect/StandardTable$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.StandardTable$TableSet` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable$TableSet;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.StandardTable$TableSet` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable$TableSet;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
