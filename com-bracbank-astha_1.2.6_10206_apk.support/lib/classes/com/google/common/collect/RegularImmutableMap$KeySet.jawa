record `com.google.common.collect.RegularImmutableMap$KeySet` @kind class @AccessFlag FINAL extends `com.google.common.collect.ImmutableSet` @kind class {
  `com.google.common.collect.ImmutableList` `com.google.common.collect.RegularImmutableMap$KeySet.list` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `com.google.common.collect.ImmutableMap` `com.google.common.collect.RegularImmutableMap$KeySet.map` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`com.google.common.collect.RegularImmutableMap$KeySet` v0 @kind this, `com.google.common.collect.ImmutableMap` v1 @kind object, `com.google.common.collect.ImmutableList` v2 @kind object) @signature `Lcom/google/common/collect/RegularImmutableMap$KeySet;.<init>:(Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableList;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.ImmutableList` `asList`(`com.google.common.collect.RegularImmutableMap$KeySet` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableMap$KeySet;.asList:()Lcom/google/common/collect/ImmutableList;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.RegularImmutableMap$KeySet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/RegularImmutableMap$KeySet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `copyIntoArray`(`com.google.common.collect.RegularImmutableMap$KeySet` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Lcom/google/common/collect/RegularImmutableMap$KeySet;.copyIntoArray:([Ljava/lang/Object;I)I` @AccessFlag  {

  # return;
}
procedure `boolean` `isPartialView`(`com.google.common.collect.RegularImmutableMap$KeySet` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableMap$KeySet;.isPartialView:()Z` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.UnmodifiableIterator` `iterator`(`com.google.common.collect.RegularImmutableMap$KeySet` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableMap$KeySet;.iterator:()Lcom/google/common/collect/UnmodifiableIterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.RegularImmutableMap$KeySet` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableMap$KeySet;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.RegularImmutableMap$KeySet` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableMap$KeySet;.size:()I` @AccessFlag PUBLIC {

  # return;
}
