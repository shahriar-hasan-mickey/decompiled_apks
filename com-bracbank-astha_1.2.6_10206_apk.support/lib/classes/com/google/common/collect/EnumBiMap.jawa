record `com.google.common.collect.EnumBiMap` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.common.collect.AbstractBiMap` @kind class {
  `java.lang.Class` `com.google.common.collect.EnumBiMap.keyType` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.Class` `com.google.common.collect.EnumBiMap.valueType` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@com.google.common.collect.EnumBiMap.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.EnumBiMap` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.EnumBiMap` `create`(`java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.create:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/google/common/collect/EnumBiMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.EnumBiMap` `create`(`java.util.Map` v2 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.create:(Ljava/util/Map;)Lcom/google/common/collect/EnumBiMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Class` `inferKeyType`(`java.util.Map` v1 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.inferKeyType:(Ljava/util/Map;)Ljava/lang/Class;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Class` `inferValueType`(`java.util.Map` v1 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.inferValueType:(Ljava/util/Map;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `readObject`(`com.google.common.collect.EnumBiMap` v3 @kind this, `java.io.ObjectInputStream` v4 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `writeObject`(`com.google.common.collect.EnumBiMap` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Enum` `checkKey`(`com.google.common.collect.EnumBiMap` v0 @kind this, `java.lang.Enum` v1 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.checkKey:(Ljava/lang/Enum;)Ljava/lang/Enum;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `checkKey`(`com.google.common.collect.EnumBiMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.checkKey:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `java.lang.Enum` `checkValue`(`com.google.common.collect.EnumBiMap` v0 @kind this, `java.lang.Enum` v1 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.checkValue:(Ljava/lang/Enum;)Ljava/lang/Enum;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `checkValue`(`com.google.common.collect.EnumBiMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.checkValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.EnumBiMap` v0 @kind this) @signature `Lcom/google/common/collect/EnumBiMap;.clear:()V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `containsValue`(`com.google.common.collect.EnumBiMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `entrySet`(`com.google.common.collect.EnumBiMap` v1 @kind this) @signature `Lcom/google/common/collect/EnumBiMap;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `forcePut`(`com.google.common.collect.EnumBiMap` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.forcePut:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.BiMap` `inverse`(`com.google.common.collect.EnumBiMap` v1 @kind this) @signature `Lcom/google/common/collect/EnumBiMap;.inverse:()Lcom/google/common/collect/BiMap;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.common.collect.EnumBiMap` v1 @kind this) @signature `Lcom/google/common/collect/EnumBiMap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Class` `keyType`(`com.google.common.collect.EnumBiMap` v1 @kind this) @signature `Lcom/google/common/collect/EnumBiMap;.keyType:()Ljava/lang/Class;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.EnumBiMap` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.EnumBiMap` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.EnumBiMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/EnumBiMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Class` `valueType`(`com.google.common.collect.EnumBiMap` v1 @kind this) @signature `Lcom/google/common/collect/EnumBiMap;.valueType:()Ljava/lang/Class;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `values`(`com.google.common.collect.EnumBiMap` v1 @kind this) @signature `Lcom/google/common/collect/EnumBiMap;.values:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
