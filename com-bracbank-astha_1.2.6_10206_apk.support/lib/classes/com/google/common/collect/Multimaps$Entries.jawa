record `com.google.common.collect.Multimaps$Entries` @kind class @AccessFlag ABSTRACT extends `java.util.AbstractCollection` @kind class {
}
procedure `void` `<init>`(`com.google.common.collect.Multimaps$Entries` v0 @kind this) @signature `Lcom/google/common/collect/Multimaps$Entries;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.Multimaps$Entries` v1 @kind this) @signature `Lcom/google/common/collect/Multimaps$Entries;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.Multimaps$Entries` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/Multimaps$Entries;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.Multimap` `multimap`() @signature `Lcom/google/common/collect/Multimaps$Entries;.multimap:()Lcom/google/common/collect/Multimap;` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `remove`(`com.google.common.collect.Multimaps$Entries` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/Multimaps$Entries;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.Multimaps$Entries` v1 @kind this) @signature `Lcom/google/common/collect/Multimaps$Entries;.size:()I` @AccessFlag PUBLIC {

  # return;
}
