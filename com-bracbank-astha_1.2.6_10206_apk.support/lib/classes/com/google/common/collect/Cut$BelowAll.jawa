record `com.google.common.collect.Cut$BelowAll` @kind class @AccessFlag FINAL extends `com.google.common.collect.Cut` @kind class {
}
global `com.google.common.collect.Cut$BelowAll` `@@com.google.common.collect.Cut$BelowAll.INSTANCE` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.common.collect.Cut$BelowAll.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/collect/Cut$BelowAll;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.Cut$BelowAll` v1 @kind this) @signature `Lcom/google/common/collect/Cut$BelowAll;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.Cut$BelowAll` `access$000`() @signature `Lcom/google/common/collect/Cut$BelowAll;.access$000:()Lcom/google/common/collect/Cut$BelowAll;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `readResolve`(`com.google.common.collect.Cut$BelowAll` v1 @kind this) @signature `Lcom/google/common/collect/Cut$BelowAll;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.collect.Cut` `canonical`(`com.google.common.collect.Cut$BelowAll` v0 @kind this, `com.google.common.collect.DiscreteDomain` v1 @kind object) @signature `Lcom/google/common/collect/Cut$BelowAll;.canonical:(Lcom/google/common/collect/DiscreteDomain;)Lcom/google/common/collect/Cut;` @AccessFlag  {

  # return;
}
procedure `int` `compareTo`(`com.google.common.collect.Cut$BelowAll` v0 @kind this, `com.google.common.collect.Cut` v1 @kind object) @signature `Lcom/google/common/collect/Cut$BelowAll;.compareTo:(Lcom/google/common/collect/Cut;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`com.google.common.collect.Cut$BelowAll` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/Cut$BelowAll;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `describeAsLowerBound`(`com.google.common.collect.Cut$BelowAll` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/google/common/collect/Cut$BelowAll;.describeAsLowerBound:(Ljava/lang/StringBuilder;)V` @AccessFlag  {

  # return;
}
procedure `void` `describeAsUpperBound`(`com.google.common.collect.Cut$BelowAll` v0 @kind this, `java.lang.StringBuilder` v1 @kind object) @signature `Lcom/google/common/collect/Cut$BelowAll;.describeAsUpperBound:(Ljava/lang/StringBuilder;)V` @AccessFlag  {

  # return;
}
procedure `java.lang.Comparable` `endpoint`(`com.google.common.collect.Cut$BelowAll` v2 @kind this) @signature `Lcom/google/common/collect/Cut$BelowAll;.endpoint:()Ljava/lang/Comparable;` @AccessFlag  {

  # return;
}
procedure `java.lang.Comparable` `greatestValueBelow`(`com.google.common.collect.Cut$BelowAll` v0 @kind this, `com.google.common.collect.DiscreteDomain` v1 @kind object) @signature `Lcom/google/common/collect/Cut$BelowAll;.greatestValueBelow:(Lcom/google/common/collect/DiscreteDomain;)Ljava/lang/Comparable;` @AccessFlag  {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.Cut$BelowAll` v1 @kind this) @signature `Lcom/google/common/collect/Cut$BelowAll;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isLessThan`(`com.google.common.collect.Cut$BelowAll` v0 @kind this, `java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/Cut$BelowAll;.isLessThan:(Ljava/lang/Comparable;)Z` @AccessFlag  {

  # return;
}
procedure `java.lang.Comparable` `leastValueAbove`(`com.google.common.collect.Cut$BelowAll` v0 @kind this, `com.google.common.collect.DiscreteDomain` v1 @kind object) @signature `Lcom/google/common/collect/Cut$BelowAll;.leastValueAbove:(Lcom/google/common/collect/DiscreteDomain;)Ljava/lang/Comparable;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.Cut$BelowAll` v1 @kind this) @signature `Lcom/google/common/collect/Cut$BelowAll;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.BoundType` `typeAsLowerBound`(`com.google.common.collect.Cut$BelowAll` v1 @kind this) @signature `Lcom/google/common/collect/Cut$BelowAll;.typeAsLowerBound:()Lcom/google/common/collect/BoundType;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.BoundType` `typeAsUpperBound`(`com.google.common.collect.Cut$BelowAll` v2 @kind this) @signature `Lcom/google/common/collect/Cut$BelowAll;.typeAsUpperBound:()Lcom/google/common/collect/BoundType;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.Cut` `withLowerBoundType`(`com.google.common.collect.Cut$BelowAll` v0 @kind this, `com.google.common.collect.BoundType` v1 @kind object, `com.google.common.collect.DiscreteDomain` v2 @kind object) @signature `Lcom/google/common/collect/Cut$BelowAll;.withLowerBoundType:(Lcom/google/common/collect/BoundType;Lcom/google/common/collect/DiscreteDomain;)Lcom/google/common/collect/Cut;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.Cut` `withUpperBoundType`(`com.google.common.collect.Cut$BelowAll` v0 @kind this, `com.google.common.collect.BoundType` v1 @kind object, `com.google.common.collect.DiscreteDomain` v2 @kind object) @signature `Lcom/google/common/collect/Cut$BelowAll;.withUpperBoundType:(Lcom/google/common/collect/BoundType;Lcom/google/common/collect/DiscreteDomain;)Lcom/google/common/collect/Cut;` @AccessFlag  {

  # return;
}
