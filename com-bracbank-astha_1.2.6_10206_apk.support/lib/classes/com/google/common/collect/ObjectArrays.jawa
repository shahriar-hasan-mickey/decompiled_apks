record `com.google.common.collect.ObjectArrays` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.common.collect.ObjectArrays` v0 @kind this) @signature `Lcom/google/common/collect/ObjectArrays;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `checkElementNotNull`(`java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lcom/google/common/collect/ObjectArrays;.checkElementNotNull:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object`[] `checkElementsNotNull`(`java.lang.Object`[] v1 @kind object) @signature `Lcom/google/common/collect/ObjectArrays;.checkElementsNotNull:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object`[] `checkElementsNotNull`(`java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Lcom/google/common/collect/ObjectArrays;.checkElementsNotNull:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object`[] `concat`(`java.lang.Object` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lcom/google/common/collect/ObjectArrays;.concat:(Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `concat`(`java.lang.Object`[] v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ObjectArrays;.concat:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `concat`(`java.lang.Object`[] v2 @kind object, `java.lang.Object`[] v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/google/common/collect/ObjectArrays;.concat:([Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Class;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `copyAsObjectArray`(`java.lang.Object`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/collect/ObjectArrays;.copyAsObjectArray:([Ljava/lang/Object;II)[Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object`[] `fillArray`(`java.lang.Iterable` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lcom/google/common/collect/ObjectArrays;.fillArray:(Ljava/lang/Iterable;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object`[] `newArray`(`java.lang.Class` v0 @kind object, `int` v1 ) @signature `Lcom/google/common/collect/ObjectArrays;.newArray:(Ljava/lang/Class;I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object`[] `newArray`(`java.lang.Object`[] v0 @kind object, `int` v1 ) @signature `Lcom/google/common/collect/ObjectArrays;.newArray:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `swap`(`java.lang.Object`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/collect/ObjectArrays;.swap:([Ljava/lang/Object;II)V` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object`[] `toArrayImpl`(`java.util.Collection` v1 @kind object) @signature `Lcom/google/common/collect/ObjectArrays;.toArrayImpl:(Ljava/util/Collection;)[Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object`[] `toArrayImpl`(`java.util.Collection` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lcom/google/common/collect/ObjectArrays;.toArrayImpl:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object`[] `toArrayImpl`(`java.lang.Object`[] v2 @kind object, `int` v3 , `int` v4 , `java.lang.Object`[] v5 @kind object) @signature `Lcom/google/common/collect/ObjectArrays;.toArrayImpl:([Ljava/lang/Object;II[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
