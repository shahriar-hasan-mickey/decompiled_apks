record `com.google.common.collect.ImmutableCollection$ArrayBasedBuilder` @kind class @AccessFlag ABSTRACT extends `com.google.common.collect.ImmutableCollection$Builder` @kind class {
  `java.lang.Object`[] `com.google.common.collect.ImmutableCollection$ArrayBasedBuilder.contents` @AccessFlag ;
  `boolean` `com.google.common.collect.ImmutableCollection$ArrayBasedBuilder.forceCopy` @AccessFlag ;
  `int` `com.google.common.collect.ImmutableCollection$ArrayBasedBuilder.size` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableCollection$ArrayBasedBuilder` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/ImmutableCollection$ArrayBasedBuilder;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `getReadyToExpandTo`(`com.google.common.collect.ImmutableCollection$ArrayBasedBuilder` v3 @kind this, `int` v4 ) @signature `Lcom/google/common/collect/ImmutableCollection$ArrayBasedBuilder;.getReadyToExpandTo:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$ArrayBasedBuilder` `add`(`com.google.common.collect.ImmutableCollection$ArrayBasedBuilder` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$ArrayBasedBuilder;.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableCollection$ArrayBasedBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$Builder` `add`(`com.google.common.collect.ImmutableCollection$ArrayBasedBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$ArrayBasedBuilder;.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableCollection$Builder;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$Builder` `add`(`com.google.common.collect.ImmutableCollection$ArrayBasedBuilder` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$ArrayBasedBuilder;.add:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableCollection$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$Builder` `addAll`(`com.google.common.collect.ImmutableCollection$ArrayBasedBuilder` v3 @kind this, `java.lang.Iterable` v4 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$ArrayBasedBuilder;.addAll:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableCollection$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addAll`(`com.google.common.collect.ImmutableCollection$ArrayBasedBuilder` v3 @kind this, `java.lang.Object`[] v4 @kind object, `int` v5 ) @signature `Lcom/google/common/collect/ImmutableCollection$ArrayBasedBuilder;.addAll:([Ljava/lang/Object;I)V` @AccessFlag FINAL {

  # return;
}
