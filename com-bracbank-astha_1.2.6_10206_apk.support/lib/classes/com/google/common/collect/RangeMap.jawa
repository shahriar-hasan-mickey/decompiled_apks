record `com.google.common.collect.RangeMap` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.util.Map` `asDescendingMapOfRanges`() @signature `Lcom/google/common/collect/RangeMap;.asDescendingMapOfRanges:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `asMapOfRanges`() @signature `Lcom/google/common/collect/RangeMap;.asMapOfRanges:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clear`() @signature `Lcom/google/common/collect/RangeMap;.clear:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/RangeMap;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `get`(`java.lang.Comparable` v0 @kind object) @signature `Lcom/google/common/collect/RangeMap;.get:(Ljava/lang/Comparable;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map$Entry` `getEntry`(`java.lang.Comparable` v0 @kind object) @signature `Lcom/google/common/collect/RangeMap;.getEntry:(Ljava/lang/Comparable;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`() @signature `Lcom/google/common/collect/RangeMap;.hashCode:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `put`(`com.google.common.collect.Range` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/RangeMap;.put:(Lcom/google/common/collect/Range;Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.RangeMap` v0 @kind object) @signature `Lcom/google/common/collect/RangeMap;.putAll:(Lcom/google/common/collect/RangeMap;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putCoalescing`(`com.google.common.collect.Range` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/RangeMap;.putCoalescing:(Lcom/google/common/collect/Range;Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.Range` v0 @kind object) @signature `Lcom/google/common/collect/RangeMap;.remove:(Lcom/google/common/collect/Range;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.collect.Range` `span`() @signature `Lcom/google/common/collect/RangeMap;.span:()Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.collect.RangeMap` `subRangeMap`(`com.google.common.collect.Range` v0 @kind object) @signature `Lcom/google/common/collect/RangeMap;.subRangeMap:(Lcom/google/common/collect/Range;)Lcom/google/common/collect/RangeMap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`() @signature `Lcom/google/common/collect/RangeMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
