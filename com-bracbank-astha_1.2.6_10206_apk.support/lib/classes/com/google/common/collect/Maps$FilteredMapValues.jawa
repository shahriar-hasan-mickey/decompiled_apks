record `com.google.common.collect.Maps$FilteredMapValues` @kind class @AccessFlag FINAL extends `com.google.common.collect.Maps$Values` @kind class {
  `com.google.common.base.Predicate` `com.google.common.collect.Maps$FilteredMapValues.predicate` @AccessFlag FINAL;
  `java.util.Map` `com.google.common.collect.Maps$FilteredMapValues.unfiltered` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.Maps$FilteredMapValues` v0 @kind this, `java.util.Map` v1 @kind object, `java.util.Map` v2 @kind object, `com.google.common.base.Predicate` v3 @kind object) @signature `Lcom/google/common/collect/Maps$FilteredMapValues;.<init>:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Predicate;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `remove`(`com.google.common.collect.Maps$FilteredMapValues` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/Maps$FilteredMapValues;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `removeAll`(`com.google.common.collect.Maps$FilteredMapValues` v4 @kind this, `java.util.Collection` v5 @kind object) @signature `Lcom/google/common/collect/Maps$FilteredMapValues;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `retainAll`(`com.google.common.collect.Maps$FilteredMapValues` v4 @kind this, `java.util.Collection` v5 @kind object) @signature `Lcom/google/common/collect/Maps$FilteredMapValues;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.collect.Maps$FilteredMapValues` v1 @kind this) @signature `Lcom/google/common/collect/Maps$FilteredMapValues;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.collect.Maps$FilteredMapValues` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lcom/google/common/collect/Maps$FilteredMapValues;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
