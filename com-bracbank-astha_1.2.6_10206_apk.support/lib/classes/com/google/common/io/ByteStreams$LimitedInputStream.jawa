record `com.google.common.io.ByteStreams$LimitedInputStream` @kind class @AccessFlag FINAL extends `java.io.FilterInputStream` @kind class {
  `long` `com.google.common.io.ByteStreams$LimitedInputStream.left` @AccessFlag PRIVATE;
  `long` `com.google.common.io.ByteStreams$LimitedInputStream.mark` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.io.ByteStreams$LimitedInputStream` v2 @kind this, `java.io.InputStream` v3 @kind object, `long` v4 ) @signature `Lcom/google/common/io/ByteStreams$LimitedInputStream;.<init>:(Ljava/io/InputStream;J)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `available`(`com.google.common.io.ByteStreams$LimitedInputStream` v4 @kind this) @signature `Lcom/google/common/io/ByteStreams$LimitedInputStream;.available:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `mark`(`com.google.common.io.ByteStreams$LimitedInputStream` v2 @kind this, `int` v3 ) @signature `Lcom/google/common/io/ByteStreams$LimitedInputStream;.mark:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.common.io.ByteStreams$LimitedInputStream` v6 @kind this) @signature `Lcom/google/common/io/ByteStreams$LimitedInputStream;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.common.io.ByteStreams$LimitedInputStream` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/google/common/io/ByteStreams$LimitedInputStream;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`com.google.common.io.ByteStreams$LimitedInputStream` v5 @kind this) @signature `Lcom/google/common/io/ByteStreams$LimitedInputStream;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `skip`(`com.google.common.io.ByteStreams$LimitedInputStream` v2 @kind this, `long` v3 ) @signature `Lcom/google/common/io/ByteStreams$LimitedInputStream;.skip:(J)J` @AccessFlag PUBLIC {

  # return;
}
