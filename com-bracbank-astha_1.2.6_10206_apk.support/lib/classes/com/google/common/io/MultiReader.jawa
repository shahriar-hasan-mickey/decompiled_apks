record `com.google.common.io.MultiReader` @kind class @AccessFlag  extends `java.io.Reader` @kind class {
  `java.io.Reader` `com.google.common.io.MultiReader.current` @AccessFlag PRIVATE;
  `java.util.Iterator` `com.google.common.io.MultiReader.it` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.io.MultiReader` v0 @kind this, `java.util.Iterator` v1 @kind object) @signature `Lcom/google/common/io/MultiReader;.<init>:(Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `advance`(`com.google.common.io.MultiReader` v1 @kind this) @signature `Lcom/google/common/io/MultiReader;.advance:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `close`(`com.google.common.io.MultiReader` v2 @kind this) @signature `Lcom/google/common/io/MultiReader;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.common.io.MultiReader` v2 @kind this, `char`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/common/io/MultiReader;.read:([CII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `ready`(`com.google.common.io.MultiReader` v1 @kind this) @signature `Lcom/google/common/io/MultiReader;.ready:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `skip`(`com.google.common.io.MultiReader` v5 @kind this, `long` v6 ) @signature `Lcom/google/common/io/MultiReader;.skip:(J)J` @AccessFlag PUBLIC {

  # return;
}
