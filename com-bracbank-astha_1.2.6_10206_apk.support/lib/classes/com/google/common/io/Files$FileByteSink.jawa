record `com.google.common.io.Files$FileByteSink` @kind class @AccessFlag FINAL extends `com.google.common.io.ByteSink` @kind class {
  `java.io.File` `com.google.common.io.Files$FileByteSink.file` @AccessFlag PRIVATE_FINAL;
  `com.google.common.collect.ImmutableSet` `com.google.common.io.Files$FileByteSink.modes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.io.Files$FileByteSink` v0 @kind this, `java.io.File` v1 @kind object, `com.google.common.io.FileWriteMode`[] v2 @kind object) @signature `Lcom/google/common/io/Files$FileByteSink;.<init>:(Ljava/io/File;[Lcom/google/common/io/FileWriteMode;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.io.Files$FileByteSink` v0 @kind this, `java.io.File` v1 @kind object, `com.google.common.io.FileWriteMode`[] v2 @kind object, `com.google.common.io.Files$1` v3 @kind object) @signature `Lcom/google/common/io/Files$FileByteSink;.<init>:(Ljava/io/File;[Lcom/google/common/io/FileWriteMode;Lcom/google/common/io/Files$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.io.FileOutputStream` `openStream`(`com.google.common.io.Files$FileByteSink` v4 @kind this) @signature `Lcom/google/common/io/Files$FileByteSink;.openStream:()Ljava/io/FileOutputStream;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.io.OutputStream` `openStream`(`com.google.common.io.Files$FileByteSink` v1 @kind this) @signature `Lcom/google/common/io/Files$FileByteSink;.openStream:()Ljava/io/OutputStream;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.io.Files$FileByteSink` v4 @kind this) @signature `Lcom/google/common/io/Files$FileByteSink;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
