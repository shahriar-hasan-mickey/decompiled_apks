record `com.google.common.io.CountingInputStream` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.FilterInputStream` @kind class {
  `long` `com.google.common.io.CountingInputStream.count` @AccessFlag PRIVATE;
  `long` `com.google.common.io.CountingInputStream.mark` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.io.CountingInputStream` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lcom/google/common/io/CountingInputStream;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `long` `getCount`(`com.google.common.io.CountingInputStream` v2 @kind this) @signature `Lcom/google/common/io/CountingInputStream;.getCount:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `mark`(`com.google.common.io.CountingInputStream` v2 @kind this, `int` v3 ) @signature `Lcom/google/common/io/CountingInputStream;.mark:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.common.io.CountingInputStream` v5 @kind this) @signature `Lcom/google/common/io/CountingInputStream;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.common.io.CountingInputStream` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/common/io/CountingInputStream;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`com.google.common.io.CountingInputStream` v5 @kind this) @signature `Lcom/google/common/io/CountingInputStream;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `skip`(`com.google.common.io.CountingInputStream` v2 @kind this, `long` v3 ) @signature `Lcom/google/common/io/CountingInputStream;.skip:(J)J` @AccessFlag PUBLIC {

  # return;
}
