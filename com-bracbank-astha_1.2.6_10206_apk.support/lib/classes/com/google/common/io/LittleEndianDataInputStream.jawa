record `com.google.common.io.LittleEndianDataInputStream` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.FilterInputStream` @kind class, `java.io.DataInput` @kind interface {
}
procedure `void` `<init>`(`com.google.common.io.LittleEndianDataInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte` `readAndCheckByte`(`com.google.common.io.LittleEndianDataInputStream` v2 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readAndCheckByte:()B` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `readBoolean`(`com.google.common.io.LittleEndianDataInputStream` v1 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readBoolean:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `readByte`(`com.google.common.io.LittleEndianDataInputStream` v1 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readByte:()B` @AccessFlag PUBLIC {

  # return;
}
procedure `char` `readChar`(`com.google.common.io.LittleEndianDataInputStream` v1 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readChar:()C` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `readDouble`(`com.google.common.io.LittleEndianDataInputStream` v2 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readDouble:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `readFloat`(`com.google.common.io.LittleEndianDataInputStream` v1 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readFloat:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `readFully`(`com.google.common.io.LittleEndianDataInputStream` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readFully:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `readFully`(`com.google.common.io.LittleEndianDataInputStream` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readFully:([BII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `readInt`(`com.google.common.io.LittleEndianDataInputStream` v4 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readInt:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `readLine`(`com.google.common.io.LittleEndianDataInputStream` v2 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readLine:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `readLong`(`com.google.common.io.LittleEndianDataInputStream` v8 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readLong:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `short` `readShort`(`com.google.common.io.LittleEndianDataInputStream` v1 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readShort:()S` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `readUTF`(`com.google.common.io.LittleEndianDataInputStream` v2 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readUTF:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `readUnsignedByte`(`com.google.common.io.LittleEndianDataInputStream` v1 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readUnsignedByte:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `readUnsignedShort`(`com.google.common.io.LittleEndianDataInputStream` v3 @kind this) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.readUnsignedShort:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `skipBytes`(`com.google.common.io.LittleEndianDataInputStream` v3 @kind this, `int` v4 ) @signature `Lcom/google/common/io/LittleEndianDataInputStream;.skipBytes:(I)I` @AccessFlag PUBLIC {

  # return;
}
