record `com.google.common.io.Files$FileByteSource` @kind class @AccessFlag FINAL extends `com.google.common.io.ByteSource` @kind class {
  `java.io.File` `com.google.common.io.Files$FileByteSource.file` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.io.Files$FileByteSource` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lcom/google/common/io/Files$FileByteSource;.<init>:(Ljava/io/File;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.io.Files$FileByteSource` v0 @kind this, `java.io.File` v1 @kind object, `com.google.common.io.Files$1` v2 @kind object) @signature `Lcom/google/common/io/Files$FileByteSource;.<init>:(Ljava/io/File;Lcom/google/common/io/Files$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.io.FileInputStream` `openStream`(`com.google.common.io.Files$FileByteSource` v2 @kind this) @signature `Lcom/google/common/io/Files$FileByteSource;.openStream:()Ljava/io/FileInputStream;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.io.InputStream` `openStream`(`com.google.common.io.Files$FileByteSource` v1 @kind this) @signature `Lcom/google/common/io/Files$FileByteSource;.openStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `byte`[] `read`(`com.google.common.io.Files$FileByteSource` v4 @kind this) @signature `Lcom/google/common/io/Files$FileByteSource;.read:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `size`(`com.google.common.io.Files$FileByteSource` v2 @kind this) @signature `Lcom/google/common/io/Files$FileByteSource;.size:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.Optional` `sizeIfKnown`(`com.google.common.io.Files$FileByteSource` v2 @kind this) @signature `Lcom/google/common/io/Files$FileByteSource;.sizeIfKnown:()Lcom/google/common/base/Optional;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.io.Files$FileByteSource` v3 @kind this) @signature `Lcom/google/common/io/Files$FileByteSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
