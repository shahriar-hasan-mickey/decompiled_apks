record `com.google.common.net.HostAndPort` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `boolean` `com.google.common.net.HostAndPort.hasBracketlessColons` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.common.net.HostAndPort.host` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.common.net.HostAndPort.port` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.common.net.HostAndPort.NO_PORT` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.common.net.HostAndPort.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.net.HostAndPort` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lcom/google/common/net/HostAndPort;.<init>:(Ljava/lang/String;IZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.net.HostAndPort` `fromHost`(`java.lang.String` v3 @kind object) @signature `Lcom/google/common/net/HostAndPort;.fromHost:(Ljava/lang/String;)Lcom/google/common/net/HostAndPort;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.net.HostAndPort` `fromParts`(`java.lang.String` v3 @kind object, `int` v4 ) @signature `Lcom/google/common/net/HostAndPort;.fromParts:(Ljava/lang/String;I)Lcom/google/common/net/HostAndPort;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.net.HostAndPort` `fromString`(`java.lang.String` v8 @kind object) @signature `Lcom/google/common/net/HostAndPort;.fromString:(Ljava/lang/String;)Lcom/google/common/net/HostAndPort;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `getHostAndPortFromBracketedHost`(`java.lang.String` v8 @kind object) @signature `Lcom/google/common/net/HostAndPort;.getHostAndPortFromBracketedHost:(Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isValidPort`(`int` v1 ) @signature `Lcom/google/common/net/HostAndPort;.isValidPort:(I)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.net.HostAndPort` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/net/HostAndPort;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getHost`(`com.google.common.net.HostAndPort` v1 @kind this) @signature `Lcom/google/common/net/HostAndPort;.getHost:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getPort`(`com.google.common.net.HostAndPort` v1 @kind this) @signature `Lcom/google/common/net/HostAndPort;.getPort:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getPortOrDefault`(`com.google.common.net.HostAndPort` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/net/HostAndPort;.getPortOrDefault:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasPort`(`com.google.common.net.HostAndPort` v1 @kind this) @signature `Lcom/google/common/net/HostAndPort;.hasPort:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.net.HostAndPort` v3 @kind this) @signature `Lcom/google/common/net/HostAndPort;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.net.HostAndPort` `requireBracketsForIPv6`(`com.google.common.net.HostAndPort` v3 @kind this) @signature `Lcom/google/common/net/HostAndPort;.requireBracketsForIPv6:()Lcom/google/common/net/HostAndPort;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.net.HostAndPort` v3 @kind this) @signature `Lcom/google/common/net/HostAndPort;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.net.HostAndPort` `withDefaultPort`(`com.google.common.net.HostAndPort` v3 @kind this, `int` v4 ) @signature `Lcom/google/common/net/HostAndPort;.withDefaultPort:(I)Lcom/google/common/net/HostAndPort;` @AccessFlag PUBLIC {

  # return;
}
