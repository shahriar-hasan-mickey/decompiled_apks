record `com.google.common.net.PercentEscaper` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.common.escape.UnicodeEscaper` @kind class {
  `boolean` `com.google.common.net.PercentEscaper.plusForSpace` @AccessFlag PRIVATE_FINAL;
  `boolean`[] `com.google.common.net.PercentEscaper.safeOctets` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@com.google.common.net.PercentEscaper.PLUS_SIGN` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@com.google.common.net.PercentEscaper.UPPER_HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/net/PercentEscaper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.net.PercentEscaper` v1 @kind this, `java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/common/net/PercentEscaper;.<init>:(Ljava/lang/String;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean`[] `createSafeOctets`(`java.lang.String` v5 @kind object) @signature `Lcom/google/common/net/PercentEscaper;.createSafeOctets:(Ljava/lang/String;)[Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `escape`(`com.google.common.net.PercentEscaper` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/google/common/net/PercentEscaper;.escape:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `char`[] `escape`(`com.google.common.net.PercentEscaper` v13 @kind this, `int` v14 ) @signature `Lcom/google/common/net/PercentEscaper;.escape:(I)[C` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `nextEscapeIndex`(`com.google.common.net.PercentEscaper` v3 @kind this, `java.lang.CharSequence` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/common/net/PercentEscaper;.nextEscapeIndex:(Ljava/lang/CharSequence;II)I` @AccessFlag PROTECTED {

  # return;
}
