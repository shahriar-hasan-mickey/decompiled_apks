record `com.google.android.gms.internal.measurement.zzhc` @kind class @AccessFlag FINAL extends `com.google.android.gms.internal.measurement.zzhz` @kind class {
  `android.content.Context` `com.google.android.gms.internal.measurement.zzhc.zza` @AccessFlag PRIVATE_FINAL;
  `com.google.android.gms.internal.measurement.zzii` `com.google.android.gms.internal.measurement.zzhc.zzb` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.gms.internal.measurement.zzhc` v1 @kind this, `android.content.Context` v2 @kind object, `com.google.android.gms.internal.measurement.zzii` v3 @kind object) @signature `Lcom/google/android/gms/internal/measurement/zzhc;.<init>:(Landroid/content/Context;Lcom/google/android/gms/internal/measurement/zzii;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`com.google.android.gms.internal.measurement.zzhc` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/android/gms/internal/measurement/zzhc;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `hashCode`(`com.google.android.gms.internal.measurement.zzhc` v2 @kind this) @signature `Lcom/google/android/gms/internal/measurement/zzhc;.hashCode:()I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.android.gms.internal.measurement.zzhc` v4 @kind this) @signature `Lcom/google/android/gms/internal/measurement/zzhc;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `android.content.Context` `zza`(`com.google.android.gms.internal.measurement.zzhc` v1 @kind this) @signature `Lcom/google/android/gms/internal/measurement/zzhc;.zza:()Landroid/content/Context;` @AccessFlag FINAL {

  # return;
}
procedure `com.google.android.gms.internal.measurement.zzii` `zzb`(`com.google.android.gms.internal.measurement.zzhc` v1 @kind this) @signature `Lcom/google/android/gms/internal/measurement/zzhc;.zzb:()Lcom/google/android/gms/internal/measurement/zzii;` @AccessFlag FINAL {

  # return;
}
