record `org.apache.commons.lang3.StringUtils` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@org.apache.commons.lang3.StringUtils.CR` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.apache.commons.lang3.StringUtils.EMPTY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.apache.commons.lang3.StringUtils.LF` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.apache.commons.lang3.StringUtils.PAD_LIMIT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@org.apache.commons.lang3.StringUtils.SPACE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.apache.commons.lang3.StringUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/StringUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `abbreviate`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.abbreviate:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `abbreviate`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/apache/commons/lang3/StringUtils;.abbreviate:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `abbreviateMiddle`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lorg/apache/commons/lang3/StringUtils;.abbreviateMiddle:(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `appendIfMissing`(`java.lang.String` v3 @kind object, `java.lang.CharSequence` v4 @kind object, `boolean` v5 , `java.lang.CharSequence`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.appendIfMissing:(Ljava/lang/String;Ljava/lang/CharSequence;Z[Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `appendIfMissing`(`java.lang.String` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `java.lang.CharSequence`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.appendIfMissing:(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `appendIfMissingIgnoreCase`(`java.lang.String` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `java.lang.CharSequence`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.appendIfMissingIgnoreCase:(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `capitalize`(`java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.capitalize:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `center`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.center:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `center`(`java.lang.String` v2 @kind object, `int` v3 , `char` v4 ) @signature `Lorg/apache/commons/lang3/StringUtils;.center:(Ljava/lang/String;IC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `center`(`java.lang.String` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.center:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `chomp`(`java.lang.String` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.chomp:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `chomp`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.chomp:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `chop`(`java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.chop:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `commonPrefixLength`(`java.lang.CharSequence` v2 @kind object, `java.lang.CharSequence` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.commonPrefixLength:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `contains`(`java.lang.CharSequence` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.contains:(Ljava/lang/CharSequence;I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.contains:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsAny`(`java.lang.CharSequence` v0 @kind object, `java.lang.CharSequence` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.containsAny:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsAny`(`java.lang.CharSequence` v11 @kind object, `char`[] v12 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.containsAny:(Ljava/lang/CharSequence;[C)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsAny`(`java.lang.CharSequence` v4 @kind object, `java.lang.CharSequence`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.containsAny:(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsIgnoreCase`(`java.lang.CharSequence` v10 @kind object, `java.lang.CharSequence` v11 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.containsIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsNone`(`java.lang.CharSequence` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.containsNone:(Ljava/lang/CharSequence;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsNone`(`java.lang.CharSequence` v11 @kind object, `char`[] v12 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.containsNone:(Ljava/lang/CharSequence;[C)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsOnly`(`java.lang.CharSequence` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.containsOnly:(Ljava/lang/CharSequence;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsOnly`(`java.lang.CharSequence` v3 @kind object, `char`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.containsOnly:(Ljava/lang/CharSequence;[C)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsWhitespace`(`java.lang.CharSequence` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.containsWhitespace:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `countMatches`(`java.lang.CharSequence` v3 @kind object, `char` v4 ) @signature `Lorg/apache/commons/lang3/StringUtils;.countMatches:(Ljava/lang/CharSequence;C)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `countMatches`(`java.lang.CharSequence` v3 @kind object, `java.lang.CharSequence` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.countMatches:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.CharSequence` `defaultIfBlank`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.defaultIfBlank:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.CharSequence` `defaultIfEmpty`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.defaultIfEmpty:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `defaultString`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.defaultString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `defaultString`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.defaultString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `deleteWhitespace`(`java.lang.String` v7 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.deleteWhitespace:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `difference`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.difference:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `endsWith`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.endsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `endsWith`(`java.lang.CharSequence` v8 @kind object, `java.lang.CharSequence` v9 @kind object, `boolean` v10 ) @signature `Lorg/apache/commons/lang3/StringUtils;.endsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Z)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `endsWithAny`(`java.lang.CharSequence` v4 @kind object, `java.lang.CharSequence`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.endsWithAny:(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `endsWithIgnoreCase`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.endsWithIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`java.lang.CharSequence` v6 @kind object, `java.lang.CharSequence` v7 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equalsIgnoreCase`(`java.lang.CharSequence` v9 @kind object, `java.lang.CharSequence` v10 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.equalsIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `getCommonPrefix`(`java.lang.String`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.getCommonPrefix:([Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getFuzzyDistance`(`java.lang.CharSequence` v7 @kind object, `java.lang.CharSequence` v8 @kind object, `java.util.Locale` v9 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.getFuzzyDistance:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/util/Locale;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `getJaroWinklerDistance`(`java.lang.CharSequence` v4 @kind object, `java.lang.CharSequence` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.getJaroWinklerDistance:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)D` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getLevenshteinDistance`(`java.lang.CharSequence` v14 @kind object, `java.lang.CharSequence` v15 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.getLevenshteinDistance:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getLevenshteinDistance`(`java.lang.CharSequence` v17 @kind object, `java.lang.CharSequence` v18 @kind object, `int` v19 ) @signature `Lorg/apache/commons/lang3/StringUtils;.getLevenshteinDistance:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `getSetOfMatchingCharacterWithin`(`java.lang.CharSequence` v9 @kind object, `java.lang.CharSequence` v10 @kind object, `int` v11 ) @signature `Lorg/apache/commons/lang3/StringUtils;.getSetOfMatchingCharacterWithin:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `indexOf`(`java.lang.CharSequence` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOf:(Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOf:(Ljava/lang/CharSequence;II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOf:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`java.lang.CharSequence` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOf:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfAny`(`java.lang.CharSequence` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOfAny:(Ljava/lang/CharSequence;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfAny`(`java.lang.CharSequence` v11 @kind object, `char`[] v12 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOfAny:(Ljava/lang/CharSequence;[C)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfAny`(`java.lang.CharSequence` v7 @kind object, `java.lang.CharSequence`[] v8 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOfAny:(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfAnyBut`(`java.lang.CharSequence` v7 @kind object, `java.lang.CharSequence` v8 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOfAnyBut:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfAnyBut`(`java.lang.CharSequence` v11 @kind object, `char`[] v12 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOfAnyBut:(Ljava/lang/CharSequence;[C)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfDifference`(`java.lang.CharSequence` v4 @kind object, `java.lang.CharSequence` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOfDifference:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfDifference`(`java.lang.CharSequence`[] v11 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOfDifference:([Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfIgnoreCase`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOfIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOfIgnoreCase`(`java.lang.CharSequence` v9 @kind object, `java.lang.CharSequence` v10 @kind object, `int` v11 ) @signature `Lorg/apache/commons/lang3/StringUtils;.indexOfIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isAllLowerCase`(`java.lang.CharSequence` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isAllLowerCase:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isAllUpperCase`(`java.lang.CharSequence` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isAllUpperCase:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isAlpha`(`java.lang.CharSequence` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isAlpha:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isAlphaSpace`(`java.lang.CharSequence` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isAlphaSpace:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isAlphanumeric`(`java.lang.CharSequence` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isAlphanumeric:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isAlphanumericSpace`(`java.lang.CharSequence` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isAlphanumericSpace:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isAnyBlank`(`java.lang.CharSequence`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isAnyBlank:([Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isAnyEmpty`(`java.lang.CharSequence`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isAnyEmpty:([Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isAsciiPrintable`(`java.lang.CharSequence` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isAsciiPrintable:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isBlank`(`java.lang.CharSequence` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isBlank:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isEmpty`(`java.lang.CharSequence` v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNoneBlank`(`java.lang.CharSequence`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isNoneBlank:([Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNoneEmpty`(`java.lang.CharSequence`[] v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isNoneEmpty:([Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotBlank`(`java.lang.CharSequence` v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isNotBlank:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNotEmpty`(`java.lang.CharSequence` v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isNotEmpty:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNumeric`(`java.lang.CharSequence` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isNumeric:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNumericSpace`(`java.lang.CharSequence` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isNumericSpace:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isWhitespace`(`java.lang.CharSequence` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.isWhitespace:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.lang.Iterable` v0 @kind object, `char` v1 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:(Ljava/lang/Iterable;C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.lang.Iterable` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.join:(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.util.Iterator` v3 @kind object, `char` v4 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:(Ljava/util/Iterator;C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.util.Iterator` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.join:(Ljava/util/Iterator;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`byte`[] v2 @kind object, `char` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([BC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`byte`[] v3 @kind object, `char` v4 , `int` v5 , `int` v6 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([BCII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`char`[] v2 @kind object, `char` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([CC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`char`[] v3 @kind object, `char` v4 , `int` v5 , `int` v6 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([CCII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`double`[] v2 @kind object, `char` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([DC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`double`[] v4 @kind object, `char` v5 , `int` v6 , `int` v7 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([DCII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`float`[] v2 @kind object, `char` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([FC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`float`[] v3 @kind object, `char` v4 , `int` v5 , `int` v6 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([FCII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`int`[] v2 @kind object, `char` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([IC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`int`[] v3 @kind object, `char` v4 , `int` v5 , `int` v6 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([ICII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`long`[] v2 @kind object, `char` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([JC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`long`[] v4 @kind object, `char` v5 , `int` v6 , `int` v7 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([JCII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.lang.Object`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.lang.Object`[] v2 @kind object, `char` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([Ljava/lang/Object;C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.lang.Object`[] v3 @kind object, `char` v4 , `int` v5 , `int` v6 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([Ljava/lang/Object;CII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.lang.Object`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.lang.Object`[] v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([Ljava/lang/Object;Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`short`[] v2 @kind object, `char` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([SC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`short`[] v3 @kind object, `char` v4 , `int` v5 , `int` v6 ) @signature `Lorg/apache/commons/lang3/StringUtils;.join:([SCII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`java.lang.CharSequence` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.lastIndexOf:(Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.lastIndexOf:(Ljava/lang/CharSequence;II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.lastIndexOf:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`java.lang.CharSequence` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.lastIndexOf:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOfAny`(`java.lang.CharSequence` v5 @kind object, `java.lang.CharSequence`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.lastIndexOfAny:(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOfIgnoreCase`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.lastIndexOfIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOfIgnoreCase`(`java.lang.CharSequence` v8 @kind object, `java.lang.CharSequence` v9 @kind object, `int` v10 ) @signature `Lorg/apache/commons/lang3/StringUtils;.lastIndexOfIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastOrdinalIndexOf`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.lastOrdinalIndexOf:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `left`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.left:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `leftPad`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.leftPad:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `leftPad`(`java.lang.String` v2 @kind object, `int` v3 , `char` v4 ) @signature `Lorg/apache/commons/lang3/StringUtils;.leftPad:(Ljava/lang/String;IC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `leftPad`(`java.lang.String` v4 @kind object, `int` v5 , `java.lang.String` v6 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.leftPad:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `length`(`java.lang.CharSequence` v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.length:(Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `lowerCase`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.lowerCase:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `lowerCase`(`java.lang.String` v0 @kind object, `java.util.Locale` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.lowerCase:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `mid`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.mid:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `normalizeSpace`(`java.lang.String` v10 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.normalizeSpace:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `ordinalIndexOf`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.ordinalIndexOf:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `ordinalIndexOf`(`java.lang.CharSequence` v3 @kind object, `java.lang.CharSequence` v4 @kind object, `int` v5 , `boolean` v6 ) @signature `Lorg/apache/commons/lang3/StringUtils;.ordinalIndexOf:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;IZ)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `overlay`(`java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/lang3/StringUtils;.overlay:(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `prependIfMissing`(`java.lang.String` v3 @kind object, `java.lang.CharSequence` v4 @kind object, `boolean` v5 , `java.lang.CharSequence`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.prependIfMissing:(Ljava/lang/String;Ljava/lang/CharSequence;Z[Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `prependIfMissing`(`java.lang.String` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `java.lang.CharSequence`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.prependIfMissing:(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `prependIfMissingIgnoreCase`(`java.lang.String` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `java.lang.CharSequence`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.prependIfMissingIgnoreCase:(Ljava/lang/String;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `remove`(`java.lang.String` v5 @kind object, `char` v6 ) @signature `Lorg/apache/commons/lang3/StringUtils;.remove:(Ljava/lang/String;C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `remove`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.remove:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `removeEnd`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.removeEnd:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `removeEndIgnoreCase`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.removeEndIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `removePattern`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.removePattern:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `removeStart`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.removeStart:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `removeStartIgnoreCase`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.removeStartIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `repeat`(`char` v1 , `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.repeat:(CI)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `repeat`(`java.lang.String` v5 @kind object, `int` v6 ) @signature `Lorg/apache/commons/lang3/StringUtils;.repeat:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `repeat`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.repeat:(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `replace`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `replace`(`java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 ) @signature `Lorg/apache/commons/lang3/StringUtils;.replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `replaceChars`(`java.lang.String` v0 @kind object, `char` v1 , `char` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.replaceChars:(Ljava/lang/String;CC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `replaceChars`(`java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.replaceChars:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `replaceEach`(`java.lang.String` v1 @kind object, `java.lang.String`[] v2 @kind object, `java.lang.String`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.replaceEach:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `replaceEach`(`java.lang.String` v11 @kind object, `java.lang.String`[] v12 @kind object, `java.lang.String`[] v13 @kind object, `boolean` v14 , `int` v15 ) @signature `Lorg/apache/commons/lang3/StringUtils;.replaceEach:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `replaceEachRepeatedly`(`java.lang.String` v2 @kind object, `java.lang.String`[] v3 @kind object, `java.lang.String`[] v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.replaceEachRepeatedly:(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `replaceOnce`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.replaceOnce:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `replacePattern`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.replacePattern:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `reverse`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.reverse:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `reverseDelimited`(`java.lang.String` v0 @kind object, `char` v1 ) @signature `Lorg/apache/commons/lang3/StringUtils;.reverseDelimited:(Ljava/lang/String;C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `right`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.right:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `rightPad`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.rightPad:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `rightPad`(`java.lang.String` v2 @kind object, `int` v3 , `char` v4 ) @signature `Lorg/apache/commons/lang3/StringUtils;.rightPad:(Ljava/lang/String;IC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `rightPad`(`java.lang.String` v4 @kind object, `int` v5 , `java.lang.String` v6 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.rightPad:(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `double` `score`(`java.lang.CharSequence` v8 @kind object, `java.lang.CharSequence` v9 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.score:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)D` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String`[] `split`(`java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.split:(Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `split`(`java.lang.String` v1 @kind object, `char` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.split:(Ljava/lang/String;C)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `split`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.split:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `split`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.split:(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitByCharacterType`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.splitByCharacterType:(Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitByCharacterType`(`java.lang.String` v8 @kind object, `boolean` v9 ) @signature `Lorg/apache/commons/lang3/StringUtils;.splitByCharacterType:(Ljava/lang/String;Z)[Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitByCharacterTypeCamelCase`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.splitByCharacterTypeCamelCase:(Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitByWholeSeparator`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.splitByWholeSeparator:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitByWholeSeparator`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.splitByWholeSeparator:(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitByWholeSeparatorPreserveAllTokens`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.splitByWholeSeparatorPreserveAllTokens:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitByWholeSeparatorPreserveAllTokens`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.splitByWholeSeparatorPreserveAllTokens:(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitByWholeSeparatorWorker`(`java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 , `boolean` v11 ) @signature `Lorg/apache/commons/lang3/StringUtils;.splitByWholeSeparatorWorker:(Ljava/lang/String;Ljava/lang/String;IZ)[Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitPreserveAllTokens`(`java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.splitPreserveAllTokens:(Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitPreserveAllTokens`(`java.lang.String` v1 @kind object, `char` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.splitPreserveAllTokens:(Ljava/lang/String;C)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitPreserveAllTokens`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.splitPreserveAllTokens:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitPreserveAllTokens`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.splitPreserveAllTokens:(Ljava/lang/String;Ljava/lang/String;I)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitWorker`(`java.lang.String` v9 @kind object, `char` v10 , `boolean` v11 ) @signature `Lorg/apache/commons/lang3/StringUtils;.splitWorker:(Ljava/lang/String;CZ)[Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String`[] `splitWorker`(`java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object, `int` v12 , `boolean` v13 ) @signature `Lorg/apache/commons/lang3/StringUtils;.splitWorker:(Ljava/lang/String;Ljava/lang/String;IZ)[Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `startsWith`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.startsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `startsWith`(`java.lang.CharSequence` v9 @kind object, `java.lang.CharSequence` v10 @kind object, `boolean` v11 ) @signature `Lorg/apache/commons/lang3/StringUtils;.startsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Z)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `startsWithAny`(`java.lang.CharSequence` v4 @kind object, `java.lang.CharSequence`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.startsWithAny:(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `startsWithIgnoreCase`(`java.lang.CharSequence` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.startsWithIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `strip`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.strip:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `strip`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.strip:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `stripAccents`(`java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.stripAccents:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `stripAll`(`java.lang.String`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.stripAll:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `stripAll`(`java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.stripAll:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `stripEnd`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.stripEnd:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `stripStart`(`java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.stripStart:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `stripToEmpty`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.stripToEmpty:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `stripToNull`(`java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.stripToNull:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `substring`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.substring:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `substring`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/apache/commons/lang3/StringUtils;.substring:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `substringAfter`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.substringAfter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `substringAfterLast`(`java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.substringAfterLast:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `substringBefore`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.substringBefore:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `substringBeforeLast`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.substringBeforeLast:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `substringBetween`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.substringBetween:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `substringBetween`(`java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.substringBetween:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String`[] `substringsBetween`(`java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.substringsBetween:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `swapCase`(`java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.swapCase:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toEncodedString`(`byte`[] v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.toEncodedString:([BLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`byte`[] v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.toString:([BLjava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `transpositions`(`java.lang.CharSequence` v4 @kind object, `java.lang.CharSequence` v5 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.transpositions:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `trim`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.trim:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `trimToEmpty`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.trimToEmpty:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `trimToNull`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.trimToNull:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `uncapitalize`(`java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.uncapitalize:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `upperCase`(`java.lang.String` v0 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.upperCase:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `upperCase`(`java.lang.String` v0 @kind object, `java.util.Locale` v1 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.upperCase:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `wrap`(`java.lang.String` v1 @kind object, `char` v2 ) @signature `Lorg/apache/commons/lang3/StringUtils;.wrap:(Ljava/lang/String;C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `wrap`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/StringUtils;.wrap:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
