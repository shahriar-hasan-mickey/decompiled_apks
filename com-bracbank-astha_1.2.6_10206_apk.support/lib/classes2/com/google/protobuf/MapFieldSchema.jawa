record `com.google.protobuf.MapFieldSchema` @kind interface @AccessFlag ABSTRACT_INTERFACE {
}
procedure `java.util.Map` `forMapData`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/protobuf/MapFieldSchema;.forMapData:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.protobuf.MapEntryLite$Metadata` `forMapMetadata`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/protobuf/MapFieldSchema;.forMapMetadata:(Ljava/lang/Object;)Lcom/google/protobuf/MapEntryLite$Metadata;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `forMutableMapData`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/protobuf/MapFieldSchema;.forMutableMapData:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getSerializedSize`(`int` v0 , `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/protobuf/MapFieldSchema;.getSerializedSize:(ILjava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isImmutable`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/protobuf/MapFieldSchema;.isImmutable:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `mergeFrom`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/protobuf/MapFieldSchema;.mergeFrom:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `newMapField`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/protobuf/MapFieldSchema;.newMapField:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `toImmutable`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/protobuf/MapFieldSchema;.toImmutable:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
