record `com.google.protobuf.RopeByteString$1` @kind class @AccessFlag  extends `com.google.protobuf.ByteString$AbstractByteIterator` @kind class {
  `com.google.protobuf.ByteString$ByteIterator` `com.google.protobuf.RopeByteString$1.current` @AccessFlag ;
  `com.google.protobuf.RopeByteString$PieceIterator` `com.google.protobuf.RopeByteString$1.pieces` @AccessFlag FINAL;
  `com.google.protobuf.RopeByteString` `com.google.protobuf.RopeByteString$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.protobuf.RopeByteString$1` v2 @kind this, `com.google.protobuf.RopeByteString` v3 @kind object) @signature `Lcom/google/protobuf/RopeByteString$1;.<init>:(Lcom/google/protobuf/RopeByteString;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.protobuf.ByteString$ByteIterator` `nextPiece`(`com.google.protobuf.RopeByteString$1` v1 @kind this) @signature `Lcom/google/protobuf/RopeByteString$1;.nextPiece:()Lcom/google/protobuf/ByteString$ByteIterator;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `hasNext`(`com.google.protobuf.RopeByteString$1` v1 @kind this) @signature `Lcom/google/protobuf/RopeByteString$1;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `nextByte`(`com.google.protobuf.RopeByteString$1` v2 @kind this) @signature `Lcom/google/protobuf/RopeByteString$1;.nextByte:()B` @AccessFlag PUBLIC {

  # return;
}
