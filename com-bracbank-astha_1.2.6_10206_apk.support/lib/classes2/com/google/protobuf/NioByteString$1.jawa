record `com.google.protobuf.NioByteString$1` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `java.nio.ByteBuffer` `com.google.protobuf.NioByteString$1.buf` @AccessFlag PRIVATE_FINAL;
  `com.google.protobuf.NioByteString` `com.google.protobuf.NioByteString$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.protobuf.NioByteString$1` v0 @kind this, `com.google.protobuf.NioByteString` v1 @kind object) @signature `Lcom/google/protobuf/NioByteString$1;.<init>:(Lcom/google/protobuf/NioByteString;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `available`(`com.google.protobuf.NioByteString$1` v1 @kind this) @signature `Lcom/google/protobuf/NioByteString$1;.available:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `mark`(`com.google.protobuf.NioByteString$1` v0 @kind this, `int` v1 ) @signature `Lcom/google/protobuf/NioByteString$1;.mark:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `markSupported`(`com.google.protobuf.NioByteString$1` v1 @kind this) @signature `Lcom/google/protobuf/NioByteString$1;.markSupported:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.protobuf.NioByteString$1` v1 @kind this) @signature `Lcom/google/protobuf/NioByteString$1;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.protobuf.NioByteString$1` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/protobuf/NioByteString$1;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`com.google.protobuf.NioByteString$1` v2 @kind this) @signature `Lcom/google/protobuf/NioByteString$1;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
