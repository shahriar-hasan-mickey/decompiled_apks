record `com.google.protobuf.Schema` @kind interface @AccessFlag ABSTRACT_INTERFACE {
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/protobuf/Schema;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getSerializedSize`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/protobuf/Schema;.getSerializedSize:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/protobuf/Schema;.hashCode:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isInitialized`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/protobuf/Schema;.isInitialized:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `makeImmutable`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/protobuf/Schema;.makeImmutable:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `mergeFrom`(`java.lang.Object` v0 @kind object, `com.google.protobuf.Reader` v1 @kind object, `com.google.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/protobuf/Schema;.mergeFrom:(Ljava/lang/Object;Lcom/google/protobuf/Reader;Lcom/google/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `mergeFrom`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/protobuf/Schema;.mergeFrom:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `mergeFrom`(`java.lang.Object` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `com.google.protobuf.ArrayDecoders$Registers` v4 @kind object) @signature `Lcom/google/protobuf/Schema;.mergeFrom:(Ljava/lang/Object;[BIILcom/google/protobuf/ArrayDecoders$Registers;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `newInstance`() @signature `Lcom/google/protobuf/Schema;.newInstance:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `writeTo`(`java.lang.Object` v0 @kind object, `com.google.protobuf.Writer` v1 @kind object) @signature `Lcom/google/protobuf/Schema;.writeTo:(Ljava/lang/Object;Lcom/google/protobuf/Writer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
