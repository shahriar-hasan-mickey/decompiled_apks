record `com.google.protobuf.AllocatedBuffer` @kind class @AccessFlag ABSTRACT {
}
procedure `void` `<init>`(`com.google.protobuf.AllocatedBuffer` v0 @kind this) @signature `Lcom/google/protobuf/AllocatedBuffer;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.protobuf.AllocatedBuffer` `wrap`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/protobuf/AllocatedBuffer;.wrap:(Ljava/nio/ByteBuffer;)Lcom/google/protobuf/AllocatedBuffer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.protobuf.AllocatedBuffer` `wrap`(`byte`[] v2 @kind object) @signature `Lcom/google/protobuf/AllocatedBuffer;.wrap:([B)Lcom/google/protobuf/AllocatedBuffer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.protobuf.AllocatedBuffer` `wrap`(`byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/protobuf/AllocatedBuffer;.wrap:([BII)Lcom/google/protobuf/AllocatedBuffer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.protobuf.AllocatedBuffer` `wrapNoCheck`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/protobuf/AllocatedBuffer;.wrapNoCheck:([BII)Lcom/google/protobuf/AllocatedBuffer;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `array`() @signature `Lcom/google/protobuf/AllocatedBuffer;.array:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `arrayOffset`() @signature `Lcom/google/protobuf/AllocatedBuffer;.arrayOffset:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasArray`() @signature `Lcom/google/protobuf/AllocatedBuffer;.hasArray:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasNioBuffer`() @signature `Lcom/google/protobuf/AllocatedBuffer;.hasNioBuffer:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `limit`() @signature `Lcom/google/protobuf/AllocatedBuffer;.limit:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.nio.ByteBuffer` `nioBuffer`() @signature `Lcom/google/protobuf/AllocatedBuffer;.nioBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `position`() @signature `Lcom/google/protobuf/AllocatedBuffer;.position:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.protobuf.AllocatedBuffer` `position`(`int` v0 ) @signature `Lcom/google/protobuf/AllocatedBuffer;.position:(I)Lcom/google/protobuf/AllocatedBuffer;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `remaining`() @signature `Lcom/google/protobuf/AllocatedBuffer;.remaining:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
