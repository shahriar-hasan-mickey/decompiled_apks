record `com.google.zxing.common.reedsolomon.GenericGFPoly` @kind class @AccessFlag FINAL {
  `int`[] `com.google.zxing.common.reedsolomon.GenericGFPoly.coefficients` @AccessFlag PRIVATE_FINAL;
  `com.google.zxing.common.reedsolomon.GenericGF` `com.google.zxing.common.reedsolomon.GenericGFPoly.field` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v4 @kind this, `com.google.zxing.common.reedsolomon.GenericGF` v5 @kind object, `int`[] v6 @kind object) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.<init>:(Lcom/google/zxing/common/reedsolomon/GenericGF;[I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.zxing.common.reedsolomon.GenericGFPoly` `addOrSubtract`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v7 @kind this, `com.google.zxing.common.reedsolomon.GenericGFPoly` v8 @kind object) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.addOrSubtract:(Lcom/google/zxing/common/reedsolomon/GenericGFPoly;)Lcom/google/zxing/common/reedsolomon/GenericGFPoly;` @AccessFlag  {

  # return;
}
procedure `com.google.zxing.common.reedsolomon.GenericGFPoly`[] `divide`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v7 @kind this, `com.google.zxing.common.reedsolomon.GenericGFPoly` v8 @kind object) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.divide:(Lcom/google/zxing/common/reedsolomon/GenericGFPoly;)[Lcom/google/zxing/common/reedsolomon/GenericGFPoly;` @AccessFlag  {

  # return;
}
procedure `int` `evaluateAt`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v4 @kind this, `int` v5 ) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.evaluateAt:(I)I` @AccessFlag  {

  # return;
}
procedure `int` `getCoefficient`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v2 @kind this, `int` v3 ) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.getCoefficient:(I)I` @AccessFlag  {

  # return;
}
procedure `int`[] `getCoefficients`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v1 @kind this) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.getCoefficients:()[I` @AccessFlag  {

  # return;
}
procedure `int` `getDegree`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v1 @kind this) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.getDegree:()I` @AccessFlag  {

  # return;
}
procedure `boolean` `isZero`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v2 @kind this) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.isZero:()Z` @AccessFlag  {

  # return;
}
procedure `com.google.zxing.common.reedsolomon.GenericGFPoly` `multiply`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v5 @kind this, `int` v6 ) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.multiply:(I)Lcom/google/zxing/common/reedsolomon/GenericGFPoly;` @AccessFlag  {

  # return;
}
procedure `com.google.zxing.common.reedsolomon.GenericGFPoly` `multiply`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v12 @kind this, `com.google.zxing.common.reedsolomon.GenericGFPoly` v13 @kind object) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.multiply:(Lcom/google/zxing/common/reedsolomon/GenericGFPoly;)Lcom/google/zxing/common/reedsolomon/GenericGFPoly;` @AccessFlag  {

  # return;
}
procedure `com.google.zxing.common.reedsolomon.GenericGFPoly` `multiplyByMonomial`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.multiplyByMonomial:(II)Lcom/google/zxing/common/reedsolomon/GenericGFPoly;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.zxing.common.reedsolomon.GenericGFPoly` v5 @kind this) @signature `Lcom/google/zxing/common/reedsolomon/GenericGFPoly;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
