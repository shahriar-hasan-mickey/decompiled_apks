record `com.google.zxing.oned.rss.expanded.decoders.FieldParser` @kind class @AccessFlag FINAL {
}
global `java.lang.Object`[][] `@@com.google.zxing.oned.rss.expanded.decoders.FieldParser.FOUR_DIGIT_DATA_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object`[][] `@@com.google.zxing.oned.rss.expanded.decoders.FieldParser.THREE_DIGIT_DATA_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object`[][] `@@com.google.zxing.oned.rss.expanded.decoders.FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object`[][] `@@com.google.zxing.oned.rss.expanded.decoders.FieldParser.TWO_DIGIT_DATA_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object` `@@com.google.zxing.oned.rss.expanded.decoders.FieldParser.VARIABLE_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/zxing/oned/rss/expanded/decoders/FieldParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.zxing.oned.rss.expanded.decoders.FieldParser` v0 @kind this) @signature `Lcom/google/zxing/oned/rss/expanded/decoders/FieldParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `parseFieldsInGeneralPurpose`(`java.lang.String` v10 @kind object) @signature `Lcom/google/zxing/oned/rss/expanded/decoders/FieldParser;.parseFieldsInGeneralPurpose:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `processFixedAI`(`int` v2 , `int` v3 , `java.lang.String` v4 @kind object) @signature `Lcom/google/zxing/oned/rss/expanded/decoders/FieldParser;.processFixedAI:(IILjava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `processVariableAI`(`int` v2 , `int` v3 , `java.lang.String` v4 @kind object) @signature `Lcom/google/zxing/oned/rss/expanded/decoders/FieldParser;.processVariableAI:(IILjava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
