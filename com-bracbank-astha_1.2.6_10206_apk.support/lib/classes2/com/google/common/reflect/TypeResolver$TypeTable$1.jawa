record `com.google.common.reflect.TypeResolver$TypeTable$1` @kind class @AccessFlag  extends `com.google.common.reflect.TypeResolver$TypeTable` @kind class {
  `com.google.common.reflect.TypeResolver$TypeTable` `com.google.common.reflect.TypeResolver$TypeTable$1.val$unguarded` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.reflect.TypeVariable` `com.google.common.reflect.TypeResolver$TypeTable$1.val$var` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.reflect.TypeResolver$TypeTable$1` v0 @kind this, `com.google.common.reflect.TypeResolver$TypeTable` v1 @kind object, `java.lang.reflect.TypeVariable` v2 @kind object, `com.google.common.reflect.TypeResolver$TypeTable` v3 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeTable$1;.<init>:(Lcom/google/common/reflect/TypeResolver$TypeTable;Ljava/lang/reflect/TypeVariable;Lcom/google/common/reflect/TypeResolver$TypeTable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.reflect.Type` `resolveInternal`(`com.google.common.reflect.TypeResolver$TypeTable$1` v2 @kind this, `java.lang.reflect.TypeVariable` v3 @kind object, `com.google.common.reflect.TypeResolver$TypeTable` v4 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeTable$1;.resolveInternal:(Ljava/lang/reflect/TypeVariable;Lcom/google/common/reflect/TypeResolver$TypeTable;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {

  # return;
}
