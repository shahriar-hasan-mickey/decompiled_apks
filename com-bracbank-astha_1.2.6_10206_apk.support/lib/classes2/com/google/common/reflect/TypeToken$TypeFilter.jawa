record `com.google.common.reflect.TypeToken$TypeFilter` @kind class @AccessFlag ABSTRACT_ENUM extends `java.lang.Enum` @kind class, `com.google.common.base.Predicate` @kind interface {
}
global `com.google.common.reflect.TypeToken$TypeFilter`[] `@@com.google.common.reflect.TypeToken$TypeFilter.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.google.common.reflect.TypeToken$TypeFilter` `@@com.google.common.reflect.TypeToken$TypeFilter.IGNORE_TYPE_VARIABLE_OR_WILDCARD` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.common.reflect.TypeToken$TypeFilter` `@@com.google.common.reflect.TypeToken$TypeFilter.INTERFACE_ONLY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `com.google.common.reflect.TypeToken$TypeFilter`[] `$values`() @signature `Lcom/google/common/reflect/TypeToken$TypeFilter;.$values:()[Lcom/google/common/reflect/TypeToken$TypeFilter;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `<clinit>`() @signature `Lcom/google/common/reflect/TypeToken$TypeFilter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.reflect.TypeToken$TypeFilter` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/reflect/TypeToken$TypeFilter;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.reflect.TypeToken$TypeFilter` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `com.google.common.reflect.TypeToken$1` v3 @kind object) @signature `Lcom/google/common/reflect/TypeToken$TypeFilter;.<init>:(Ljava/lang/String;ILcom/google/common/reflect/TypeToken$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.reflect.TypeToken$TypeFilter` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/common/reflect/TypeToken$TypeFilter;.valueOf:(Ljava/lang/String;)Lcom/google/common/reflect/TypeToken$TypeFilter;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.reflect.TypeToken$TypeFilter`[] `values`() @signature `Lcom/google/common/reflect/TypeToken$TypeFilter;.values:()[Lcom/google/common/reflect/TypeToken$TypeFilter;` @AccessFlag PUBLIC_STATIC {

  # return;
}
