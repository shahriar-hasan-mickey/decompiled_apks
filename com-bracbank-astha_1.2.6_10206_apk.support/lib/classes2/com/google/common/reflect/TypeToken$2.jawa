record `com.google.common.reflect.TypeToken$2` @kind class @AccessFlag  extends `com.google.common.reflect.Invokable$ConstructorInvokable` @kind class {
  `com.google.common.reflect.TypeToken` `com.google.common.reflect.TypeToken$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.reflect.TypeToken$2` v0 @kind this, `com.google.common.reflect.TypeToken` v1 @kind object, `java.lang.reflect.Constructor` v2 @kind object) @signature `Lcom/google/common/reflect/TypeToken$2;.<init>:(Lcom/google/common/reflect/TypeToken;Ljava/lang/reflect/Constructor;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.reflect.Type`[] `getGenericExceptionTypes`(`com.google.common.reflect.TypeToken$2` v2 @kind this) @signature `Lcom/google/common/reflect/TypeToken$2;.getGenericExceptionTypes:()[Ljava/lang/reflect/Type;` @AccessFlag  {

  # return;
}
procedure `java.lang.reflect.Type`[] `getGenericParameterTypes`(`com.google.common.reflect.TypeToken$2` v2 @kind this) @signature `Lcom/google/common/reflect/TypeToken$2;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @AccessFlag  {

  # return;
}
procedure `java.lang.reflect.Type` `getGenericReturnType`(`com.google.common.reflect.TypeToken$2` v2 @kind this) @signature `Lcom/google/common/reflect/TypeToken$2;.getGenericReturnType:()Ljava/lang/reflect/Type;` @AccessFlag  {

  # return;
}
procedure `com.google.common.reflect.TypeToken` `getOwnerType`(`com.google.common.reflect.TypeToken$2` v1 @kind this) @signature `Lcom/google/common/reflect/TypeToken$2;.getOwnerType:()Lcom/google/common/reflect/TypeToken;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.reflect.TypeToken$2` v4 @kind this) @signature `Lcom/google/common/reflect/TypeToken$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
