record `com.google.common.reflect.TypeResolver$TypeVariableKey` @kind class @AccessFlag FINAL {
  `java.lang.reflect.TypeVariable` `com.google.common.reflect.TypeResolver$TypeVariableKey.var` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.reflect.TypeResolver$TypeVariableKey` v0 @kind this, `java.lang.reflect.TypeVariable` v1 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeVariableKey;.<init>:(Ljava/lang/reflect/TypeVariable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `equalsTypeVariable`(`com.google.common.reflect.TypeResolver$TypeVariableKey` v2 @kind this, `java.lang.reflect.TypeVariable` v3 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeVariableKey;.equalsTypeVariable:(Ljava/lang/reflect/TypeVariable;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.reflect.TypeResolver$TypeVariableKey` `forLookup`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeVariableKey;.forLookup:(Ljava/lang/reflect/Type;)Lcom/google/common/reflect/TypeResolver$TypeVariableKey;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.reflect.TypeResolver$TypeVariableKey` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeVariableKey;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equalsType`(`com.google.common.reflect.TypeResolver$TypeVariableKey` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeVariableKey;.equalsType:(Ljava/lang/reflect/Type;)Z` @AccessFlag  {

  # return;
}
procedure `int` `hashCode`(`com.google.common.reflect.TypeResolver$TypeVariableKey` v3 @kind this) @signature `Lcom/google/common/reflect/TypeResolver$TypeVariableKey;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.reflect.TypeResolver$TypeVariableKey` v1 @kind this) @signature `Lcom/google/common/reflect/TypeResolver$TypeVariableKey;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
