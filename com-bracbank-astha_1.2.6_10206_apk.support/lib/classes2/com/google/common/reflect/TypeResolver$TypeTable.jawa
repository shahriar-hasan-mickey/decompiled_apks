record `com.google.common.reflect.TypeResolver$TypeTable` @kind class @AccessFlag  {
  `com.google.common.collect.ImmutableMap` `com.google.common.reflect.TypeResolver$TypeTable.map` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.reflect.TypeResolver$TypeTable` v1 @kind this) @signature `Lcom/google/common/reflect/TypeResolver$TypeTable;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.reflect.TypeResolver$TypeTable` v0 @kind this, `com.google.common.collect.ImmutableMap` v1 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeTable;.<init>:(Lcom/google/common/collect/ImmutableMap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.reflect.Type` `resolve`(`com.google.common.reflect.TypeResolver$TypeTable` v1 @kind this, `java.lang.reflect.TypeVariable` v2 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeTable;.resolve:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;` @AccessFlag FINAL {

  # return;
}
procedure `java.lang.reflect.Type` `resolveInternal`(`com.google.common.reflect.TypeResolver$TypeTable` v3 @kind this, `java.lang.reflect.TypeVariable` v4 @kind object, `com.google.common.reflect.TypeResolver$TypeTable` v5 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeTable;.resolveInternal:(Ljava/lang/reflect/TypeVariable;Lcom/google/common/reflect/TypeResolver$TypeTable;)Ljava/lang/reflect/Type;` @AccessFlag  {

  # return;
}
procedure `com.google.common.reflect.TypeResolver$TypeTable` `where`(`com.google.common.reflect.TypeResolver$TypeTable` v5 @kind this, `java.util.Map` v6 @kind object) @signature `Lcom/google/common/reflect/TypeResolver$TypeTable;.where:(Ljava/util/Map;)Lcom/google/common/reflect/TypeResolver$TypeTable;` @AccessFlag FINAL {

  # return;
}
