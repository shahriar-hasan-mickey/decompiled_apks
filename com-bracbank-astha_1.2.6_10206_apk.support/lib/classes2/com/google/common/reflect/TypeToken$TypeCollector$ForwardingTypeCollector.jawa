record `com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector` @kind class @AccessFlag  extends `com.google.common.reflect.TypeToken$TypeCollector` @kind class {
  `com.google.common.reflect.TypeToken$TypeCollector` `com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector` v1 @kind this, `com.google.common.reflect.TypeToken$TypeCollector` v2 @kind object) @signature `Lcom/google/common/reflect/TypeToken$TypeCollector$ForwardingTypeCollector;.<init>:(Lcom/google/common/reflect/TypeToken$TypeCollector;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Iterable` `getInterfaces`(`com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/reflect/TypeToken$TypeCollector$ForwardingTypeCollector;.getInterfaces:(Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag  {

  # return;
}
procedure `java.lang.Class` `getRawType`(`com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/reflect/TypeToken$TypeCollector$ForwardingTypeCollector;.getRawType:(Ljava/lang/Object;)Ljava/lang/Class;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `getSuperclass`(`com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/reflect/TypeToken$TypeCollector$ForwardingTypeCollector;.getSuperclass:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
