record `com.google.common.reflect.TypeToken$1` @kind class @AccessFlag  extends `com.google.common.reflect.Invokable$MethodInvokable` @kind class {
  `com.google.common.reflect.TypeToken` `com.google.common.reflect.TypeToken$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.reflect.TypeToken$1` v0 @kind this, `com.google.common.reflect.TypeToken` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lcom/google/common/reflect/TypeToken$1;.<init>:(Lcom/google/common/reflect/TypeToken;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.reflect.Type`[] `getGenericExceptionTypes`(`com.google.common.reflect.TypeToken$1` v2 @kind this) @signature `Lcom/google/common/reflect/TypeToken$1;.getGenericExceptionTypes:()[Ljava/lang/reflect/Type;` @AccessFlag  {

  # return;
}
procedure `java.lang.reflect.Type`[] `getGenericParameterTypes`(`com.google.common.reflect.TypeToken$1` v2 @kind this) @signature `Lcom/google/common/reflect/TypeToken$1;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @AccessFlag  {

  # return;
}
procedure `java.lang.reflect.Type` `getGenericReturnType`(`com.google.common.reflect.TypeToken$1` v2 @kind this) @signature `Lcom/google/common/reflect/TypeToken$1;.getGenericReturnType:()Ljava/lang/reflect/Type;` @AccessFlag  {

  # return;
}
procedure `com.google.common.reflect.TypeToken` `getOwnerType`(`com.google.common.reflect.TypeToken$1` v1 @kind this) @signature `Lcom/google/common/reflect/TypeToken$1;.getOwnerType:()Lcom/google/common/reflect/TypeToken;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.reflect.TypeToken$1` v4 @kind this) @signature `Lcom/google/common/reflect/TypeToken$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
