record `com.google.common.util.concurrent.AbstractFuture$Cancellation` @kind class @AccessFlag FINAL {
  `java.lang.Throwable` `com.google.common.util.concurrent.AbstractFuture$Cancellation.cause` @AccessFlag FINAL;
  `boolean` `com.google.common.util.concurrent.AbstractFuture$Cancellation.wasInterrupted` @AccessFlag FINAL;
}
global `com.google.common.util.concurrent.AbstractFuture$Cancellation` `@@com.google.common.util.concurrent.AbstractFuture$Cancellation.CAUSELESS_CANCELLED` @AccessFlag STATIC_FINAL;
global `com.google.common.util.concurrent.AbstractFuture$Cancellation` `@@com.google.common.util.concurrent.AbstractFuture$Cancellation.CAUSELESS_INTERRUPTED` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/AbstractFuture$Cancellation;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AbstractFuture$Cancellation` v0 @kind this, `boolean` v1 , `java.lang.Throwable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$Cancellation;.<init>:(ZLjava/lang/Throwable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
