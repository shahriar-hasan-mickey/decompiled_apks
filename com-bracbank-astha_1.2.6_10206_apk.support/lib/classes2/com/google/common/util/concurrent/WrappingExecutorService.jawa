record `com.google.common.util.concurrent.WrappingExecutorService` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.ExecutorService` @kind interface {
  `java.util.concurrent.ExecutorService` `com.google.common.util.concurrent.WrappingExecutorService.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.WrappingExecutorService` v0 @kind this, `java.util.concurrent.ExecutorService` v1 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`java.util.concurrent.Callable` v0 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.a:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$wrapTask$0`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.lambda$wrapTask$0:(Ljava/util/concurrent/Callable;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableList` `wrapTasks`(`com.google.common.util.concurrent.WrappingExecutorService` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.wrapTasks:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `awaitTermination`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `execute`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.util.List` `invokeAll`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.invokeAll:(Ljava/util/Collection;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.util.List` `invokeAll`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this, `java.util.Collection` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `invokeAny`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `invokeAny`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this, `java.util.Collection` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isShutdown`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.isShutdown:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isTerminated`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.isTerminated:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `shutdown`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.shutdown:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.util.List` `shutdownNow`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.shutdownNow:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.util.concurrent.Future` `submit`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.util.concurrent.Future` `submit`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this, `java.lang.Runnable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.util.concurrent.Future` `submit`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Runnable` `wrapTask`(`com.google.common.util.concurrent.WrappingExecutorService` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.wrapTask:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.util.concurrent.Callable` `wrapTask`(`java.util.concurrent.Callable` v0 @kind object) @signature `Lcom/google/common/util/concurrent/WrappingExecutorService;.wrapTask:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
