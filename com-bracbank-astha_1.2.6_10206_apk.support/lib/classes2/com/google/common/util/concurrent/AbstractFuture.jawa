record `com.google.common.util.concurrent.AbstractFuture` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.util.concurrent.internal.InternalFutureFailureAccess` @kind class, `com.google.common.util.concurrent.ListenableFuture` @kind interface {
  `com.google.common.util.concurrent.AbstractFuture$Listener` `com.google.common.util.concurrent.AbstractFuture.listeners` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `com.google.common.util.concurrent.AbstractFuture.value` @AccessFlag PRIVATE_VOLATILE;
  `com.google.common.util.concurrent.AbstractFuture$Waiter` `com.google.common.util.concurrent.AbstractFuture.waiters` @AccessFlag PRIVATE_VOLATILE;
}
global `com.google.common.util.concurrent.AbstractFuture$AtomicHelper` `@@com.google.common.util.concurrent.AbstractFuture.ATOMIC_HELPER` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@com.google.common.util.concurrent.AbstractFuture.GENERATE_CANCELLATION_CAUSES` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@com.google.common.util.concurrent.AbstractFuture.NULL` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.common.util.concurrent.AbstractFuture.SPIN_THRESHOLD_NANOS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@com.google.common.util.concurrent.AbstractFuture.log` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/AbstractFuture;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.util.concurrent.AbstractFuture$AtomicHelper` `access$200`() @signature `Lcom/google/common/util/concurrent/AbstractFuture;.access$200:()Lcom/google/common/util/concurrent/AbstractFuture$AtomicHelper;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `access$300`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.access$300:(Lcom/google/common/util/concurrent/AbstractFuture;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `access$302`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.access$302:(Lcom/google/common/util/concurrent/AbstractFuture;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `access$400`(`com.google.common.util.concurrent.ListenableFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.access$400:(Lcom/google/common/util/concurrent/ListenableFuture;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$500`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.access$500:(Lcom/google/common/util/concurrent/AbstractFuture;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.AbstractFuture$Listener` `access$700`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.access$700:(Lcom/google/common/util/concurrent/AbstractFuture;)Lcom/google/common/util/concurrent/AbstractFuture$Listener;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.AbstractFuture$Listener` `access$702`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object, `com.google.common.util.concurrent.AbstractFuture$Listener` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.access$702:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Listener;)Lcom/google/common/util/concurrent/AbstractFuture$Listener;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.AbstractFuture$Waiter` `access$800`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.access$800:(Lcom/google/common/util/concurrent/AbstractFuture;)Lcom/google/common/util/concurrent/AbstractFuture$Waiter;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.AbstractFuture$Waiter` `access$802`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object, `com.google.common.util.concurrent.AbstractFuture$Waiter` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.access$802:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Waiter;)Lcom/google/common/util/concurrent/AbstractFuture$Waiter;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `addDoneString`(`com.google.common.util.concurrent.AbstractFuture` v3 @kind this, `java.lang.StringBuilder` v4 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.addDoneString:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addPendingString`(`com.google.common.util.concurrent.AbstractFuture` v5 @kind this, `java.lang.StringBuilder` v6 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.addPendingString:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `appendResultObject`(`com.google.common.util.concurrent.AbstractFuture` v1 @kind this, `java.lang.StringBuilder` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.appendResultObject:(Ljava/lang/StringBuilder;Ljava/lang/Object;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `appendUserObject`(`com.google.common.util.concurrent.AbstractFuture` v1 @kind this, `java.lang.StringBuilder` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.appendUserObject:(Ljava/lang/StringBuilder;Ljava/lang/Object;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.concurrent.CancellationException` `cancellationExceptionWithCause`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.cancellationExceptionWithCause:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.AbstractFuture$Listener` `clearListeners`(`com.google.common.util.concurrent.AbstractFuture` v3 @kind this, `com.google.common.util.concurrent.AbstractFuture$Listener` v4 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.clearListeners:(Lcom/google/common/util/concurrent/AbstractFuture$Listener;)Lcom/google/common/util/concurrent/AbstractFuture$Listener;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `complete`(`com.google.common.util.concurrent.AbstractFuture` v4 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.complete:(Lcom/google/common/util/concurrent/AbstractFuture;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `executeListener`(`java.lang.Runnable` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.executeListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `getDoneValue`(`com.google.common.util.concurrent.AbstractFuture` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.getDoneValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `getFutureValue`(`com.google.common.util.concurrent.ListenableFuture` v8 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.getFutureValue:(Lcom/google/common/util/concurrent/ListenableFuture;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `getUninterruptibly`(`java.util.concurrent.Future` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.getUninterruptibly:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `releaseWaiters`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.releaseWaiters:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeWaiter`(`com.google.common.util.concurrent.AbstractFuture` v4 @kind this, `com.google.common.util.concurrent.AbstractFuture$Waiter` v5 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.removeWaiter:(Lcom/google/common/util/concurrent/AbstractFuture$Waiter;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addListener`(`com.google.common.util.concurrent.AbstractFuture` v3 @kind this, `java.lang.Runnable` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `afterDone`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.afterDone:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `cancel`(`com.google.common.util.concurrent.AbstractFuture` v7 @kind this, `boolean` v8 ) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.cancel:(Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.AbstractFuture` v6 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.AbstractFuture` v19 @kind this, `long` v20 , `java.util.concurrent.TimeUnit` v22 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `interruptTask`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.interruptTask:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `isCancelled`(`com.google.common.util.concurrent.AbstractFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.isCancelled:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDone`(`com.google.common.util.concurrent.AbstractFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.isDone:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `maybePropagateCancellationTo`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this, `java.util.concurrent.Future` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.maybePropagateCancellationTo:(Ljava/util/concurrent/Future;)V` @AccessFlag FINAL {

  # return;
}
procedure `java.lang.String` `pendingToString`(`com.google.common.util.concurrent.AbstractFuture` v4 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.pendingToString:()Ljava/lang/String;` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `set`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.set:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `setException`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.setException:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `setFuture`(`com.google.common.util.concurrent.AbstractFuture` v5 @kind this, `com.google.common.util.concurrent.ListenableFuture` v6 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.setFuture:(Lcom/google/common/util/concurrent/ListenableFuture;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.AbstractFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Throwable` `tryInternalFastPathGetFailure`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.tryInternalFastPathGetFailure:()Ljava/lang/Throwable;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `boolean` `wasInterrupted`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.wasInterrupted:()Z` @AccessFlag PROTECTED_FINAL {

  # return;
}
