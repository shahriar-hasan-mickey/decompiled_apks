record `com.google.common.util.concurrent.MoreExecutors$2` @kind class @AccessFlag  extends `java.util.concurrent.Executor` @kind interface {
  `java.util.concurrent.Executor` `com.google.common.util.concurrent.MoreExecutors$2.val$executor` @AccessFlag FINAL_SYNTHETIC;
  `com.google.common.base.Supplier` `com.google.common.util.concurrent.MoreExecutors$2.val$nameSupplier` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.MoreExecutors$2` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `com.google.common.base.Supplier` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors$2;.<init>:(Ljava/util/concurrent/Executor;Lcom/google/common/base/Supplier;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `execute`(`com.google.common.util.concurrent.MoreExecutors$2` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors$2;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {

  # return;
}
