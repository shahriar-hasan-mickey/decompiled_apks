record `com.google.common.util.concurrent.AtomicLongMap` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `java.util.Map` `com.google.common.util.concurrent.AtomicLongMap.asMap` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.concurrent.ConcurrentHashMap` `com.google.common.util.concurrent.AtomicLongMap.map` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AtomicLongMap` v0 @kind this, `java.util.concurrent.ConcurrentHashMap` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.util.concurrent.AtomicLongMap` `create`() @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.create:()Lcom/google/common/util/concurrent/AtomicLongMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.AtomicLongMap` `create`(`java.util.Map` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.create:(Ljava/util/Map;)Lcom/google/common/util/concurrent/AtomicLongMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Map` `createAsMap`(`com.google.common.util.concurrent.AtomicLongMap` v2 @kind this) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.createAsMap:()Ljava/util/Map;` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `addAndGet`(`com.google.common.util.concurrent.AtomicLongMap` v6 @kind this, `java.lang.Object` v7 @kind object, `long` v8 ) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.addAndGet:(Ljava/lang/Object;J)J` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `asMap`(`com.google.common.util.concurrent.AtomicLongMap` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.asMap:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clear`(`com.google.common.util.concurrent.AtomicLongMap` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.util.concurrent.AtomicLongMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `decrementAndGet`(`com.google.common.util.concurrent.AtomicLongMap` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.decrementAndGet:(Ljava/lang/Object;)J` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `get`(`com.google.common.util.concurrent.AtomicLongMap` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.get:(Ljava/lang/Object;)J` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getAndAdd`(`com.google.common.util.concurrent.AtomicLongMap` v7 @kind this, `java.lang.Object` v8 @kind object, `long` v9 ) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.getAndAdd:(Ljava/lang/Object;J)J` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getAndDecrement`(`com.google.common.util.concurrent.AtomicLongMap` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.getAndDecrement:(Ljava/lang/Object;)J` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getAndIncrement`(`com.google.common.util.concurrent.AtomicLongMap` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.getAndIncrement:(Ljava/lang/Object;)J` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `incrementAndGet`(`com.google.common.util.concurrent.AtomicLongMap` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.incrementAndGet:(Ljava/lang/Object;)J` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.util.concurrent.AtomicLongMap` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `put`(`com.google.common.util.concurrent.AtomicLongMap` v6 @kind this, `java.lang.Object` v7 @kind object, `long` v8 ) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.put:(Ljava/lang/Object;J)J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `putAll`(`com.google.common.util.concurrent.AtomicLongMap` v4 @kind this, `java.util.Map` v5 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `putIfAbsent`(`com.google.common.util.concurrent.AtomicLongMap` v6 @kind this, `java.lang.Object` v7 @kind object, `long` v8 ) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.putIfAbsent:(Ljava/lang/Object;J)J` @AccessFlag  {

  # return;
}
procedure `long` `remove`(`com.google.common.util.concurrent.AtomicLongMap` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.remove:(Ljava/lang/Object;)J` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `remove`(`com.google.common.util.concurrent.AtomicLongMap` v5 @kind this, `java.lang.Object` v6 @kind object, `long` v7 ) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.remove:(Ljava/lang/Object;J)Z` @AccessFlag  {

  # return;
}
procedure `void` `removeAllZeros`(`com.google.common.util.concurrent.AtomicLongMap` v6 @kind this) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.removeAllZeros:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `removeIfZero`(`com.google.common.util.concurrent.AtomicLongMap` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.removeIfZero:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `replace`(`com.google.common.util.concurrent.AtomicLongMap` v4 @kind this, `java.lang.Object` v5 @kind object, `long` v6 , `long` v8 ) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.replace:(Ljava/lang/Object;JJ)Z` @AccessFlag  {

  # return;
}
procedure `int` `size`(`com.google.common.util.concurrent.AtomicLongMap` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `sum`(`com.google.common.util.concurrent.AtomicLongMap` v5 @kind this) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.sum:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.AtomicLongMap` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AtomicLongMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
