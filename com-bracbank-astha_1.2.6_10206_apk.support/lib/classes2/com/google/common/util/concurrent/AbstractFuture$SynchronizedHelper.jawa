record `com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.AbstractFuture$AtomicHelper` @kind class {
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture$SynchronizedHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper` v0 @kind this, `com.google.common.util.concurrent.AbstractFuture$1` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$SynchronizedHelper;.<init>:(Lcom/google/common/util/concurrent/AbstractFuture$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `casListeners`(`com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper` v1 @kind this, `com.google.common.util.concurrent.AbstractFuture` v2 @kind object, `com.google.common.util.concurrent.AbstractFuture$Listener` v3 @kind object, `com.google.common.util.concurrent.AbstractFuture$Listener` v4 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$SynchronizedHelper;.casListeners:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Listener;Lcom/google/common/util/concurrent/AbstractFuture$Listener;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `casValue`(`com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper` v1 @kind this, `com.google.common.util.concurrent.AbstractFuture` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$SynchronizedHelper;.casValue:(Lcom/google/common/util/concurrent/AbstractFuture;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `casWaiters`(`com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper` v1 @kind this, `com.google.common.util.concurrent.AbstractFuture` v2 @kind object, `com.google.common.util.concurrent.AbstractFuture$Waiter` v3 @kind object, `com.google.common.util.concurrent.AbstractFuture$Waiter` v4 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$SynchronizedHelper;.casWaiters:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Waiter;Lcom/google/common/util/concurrent/AbstractFuture$Waiter;)Z` @AccessFlag  {

  # return;
}
procedure `com.google.common.util.concurrent.AbstractFuture$Listener` `gasListeners`(`com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper` v1 @kind this, `com.google.common.util.concurrent.AbstractFuture` v2 @kind object, `com.google.common.util.concurrent.AbstractFuture$Listener` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$SynchronizedHelper;.gasListeners:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Listener;)Lcom/google/common/util/concurrent/AbstractFuture$Listener;` @AccessFlag  {

  # return;
}
procedure `com.google.common.util.concurrent.AbstractFuture$Waiter` `gasWaiters`(`com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper` v1 @kind this, `com.google.common.util.concurrent.AbstractFuture` v2 @kind object, `com.google.common.util.concurrent.AbstractFuture$Waiter` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$SynchronizedHelper;.gasWaiters:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Waiter;)Lcom/google/common/util/concurrent/AbstractFuture$Waiter;` @AccessFlag  {

  # return;
}
procedure `void` `putNext`(`com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper` v0 @kind this, `com.google.common.util.concurrent.AbstractFuture$Waiter` v1 @kind object, `com.google.common.util.concurrent.AbstractFuture$Waiter` v2 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$SynchronizedHelper;.putNext:(Lcom/google/common/util/concurrent/AbstractFuture$Waiter;Lcom/google/common/util/concurrent/AbstractFuture$Waiter;)V` @AccessFlag  {

  # return;
}
procedure `void` `putThread`(`com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper` v0 @kind this, `com.google.common.util.concurrent.AbstractFuture$Waiter` v1 @kind object, `java.lang.Thread` v2 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$SynchronizedHelper;.putThread:(Lcom/google/common/util/concurrent/AbstractFuture$Waiter;Ljava/lang/Thread;)V` @AccessFlag  {

  # return;
}
