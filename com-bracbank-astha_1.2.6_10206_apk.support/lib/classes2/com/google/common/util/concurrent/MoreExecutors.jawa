record `com.google.common.util.concurrent.MoreExecutors` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.common.util.concurrent.MoreExecutors` v0 @kind this) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `access$000`(`java.util.concurrent.ThreadPoolExecutor` v0 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.access$000:(Ljava/util/concurrent/ThreadPoolExecutor;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `addDelayedShutdownHook`(`java.util.concurrent.ExecutorService` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.addDelayedShutdownHook:(Ljava/util/concurrent/ExecutorService;JLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.Executor` `directExecutor`() @signature `Lcom/google/common/util/concurrent/MoreExecutors;.directExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.ExecutorService` `getExitingExecutorService`(`java.util.concurrent.ThreadPoolExecutor` v1 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.getExitingExecutorService:(Ljava/util/concurrent/ThreadPoolExecutor;)Ljava/util/concurrent/ExecutorService;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.ExecutorService` `getExitingExecutorService`(`java.util.concurrent.ThreadPoolExecutor` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.getExitingExecutorService:(Ljava/util/concurrent/ThreadPoolExecutor;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ExecutorService;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.ScheduledExecutorService` `getExitingScheduledExecutorService`(`java.util.concurrent.ScheduledThreadPoolExecutor` v1 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.getExitingScheduledExecutorService:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.ScheduledExecutorService` `getExitingScheduledExecutorService`(`java.util.concurrent.ScheduledThreadPoolExecutor` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.getExitingScheduledExecutorService:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `invokeAnyImpl`(`com.google.common.util.concurrent.ListeningExecutorService` v16 @kind object, `java.util.Collection` v17 @kind object, `boolean` v18 , `long` v19 , `java.util.concurrent.TimeUnit` v21 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.invokeAnyImpl:(Lcom/google/common/util/concurrent/ListeningExecutorService;Ljava/util/Collection;ZJLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `isAppEngineWithApiClasses`() @signature `Lcom/google/common/util/concurrent/MoreExecutors;.isAppEngineWithApiClasses:()Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListeningExecutorService` `listeningDecorator`(`java.util.concurrent.ExecutorService` v1 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.listeningDecorator:(Ljava/util/concurrent/ExecutorService;)Lcom/google/common/util/concurrent/ListeningExecutorService;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListeningScheduledExecutorService` `listeningDecorator`(`java.util.concurrent.ScheduledExecutorService` v1 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.listeningDecorator:(Ljava/util/concurrent/ScheduledExecutorService;)Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListeningExecutorService` `newDirectExecutorService`() @signature `Lcom/google/common/util/concurrent/MoreExecutors;.newDirectExecutorService:()Lcom/google/common/util/concurrent/ListeningExecutorService;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.Executor` `newSequentialExecutor`(`java.util.concurrent.Executor` v1 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.newSequentialExecutor:(Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Thread` `newThread`(`java.lang.String` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.newThread:(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag STATIC {

  # return;
}
procedure `java.util.concurrent.ThreadFactory` `platformThreadFactory`() @signature `Lcom/google/common/util/concurrent/MoreExecutors;.platformThreadFactory:()Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.Executor` `rejectionPropagatingExecutor`(`java.util.concurrent.Executor` v1 @kind object, `com.google.common.util.concurrent.AbstractFuture` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.rejectionPropagatingExecutor:(Ljava/util/concurrent/Executor;Lcom/google/common/util/concurrent/AbstractFuture;)Ljava/util/concurrent/Executor;` @AccessFlag STATIC {

  # return;
}
procedure `java.util.concurrent.Executor` `renamingDecorator`(`java.util.concurrent.Executor` v1 @kind object, `com.google.common.base.Supplier` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.renamingDecorator:(Ljava/util/concurrent/Executor;Lcom/google/common/base/Supplier;)Ljava/util/concurrent/Executor;` @AccessFlag STATIC {

  # return;
}
procedure `java.util.concurrent.ExecutorService` `renamingDecorator`(`java.util.concurrent.ExecutorService` v1 @kind object, `com.google.common.base.Supplier` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.renamingDecorator:(Ljava/util/concurrent/ExecutorService;Lcom/google/common/base/Supplier;)Ljava/util/concurrent/ExecutorService;` @AccessFlag STATIC {

  # return;
}
procedure `java.util.concurrent.ScheduledExecutorService` `renamingDecorator`(`java.util.concurrent.ScheduledExecutorService` v1 @kind object, `com.google.common.base.Supplier` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.renamingDecorator:(Ljava/util/concurrent/ScheduledExecutorService;Lcom/google/common/base/Supplier;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `shutdownAndAwaitTermination`(`java.util.concurrent.ExecutorService` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.shutdownAndAwaitTermination:(Ljava/util/concurrent/ExecutorService;JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `submitAndAddQueueListener`(`com.google.common.util.concurrent.ListeningExecutorService` v0 @kind object, `java.util.concurrent.Callable` v1 @kind object, `java.util.concurrent.BlockingQueue` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.submitAndAddQueueListener:(Lcom/google/common/util/concurrent/ListeningExecutorService;Ljava/util/concurrent/Callable;Ljava/util/concurrent/BlockingQueue;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `useDaemonThreadFactory`(`java.util.concurrent.ThreadPoolExecutor` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors;.useDaemonThreadFactory:(Ljava/util/concurrent/ThreadPoolExecutor;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
