record `com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter` @kind class @AccessFlag FINAL extends `java.lang.Thread$UncaughtExceptionHandler` @kind interface {
  `java.lang.Runtime` `com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter.runtime` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/UncaughtExceptionHandlers$Exiter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter` v0 @kind this, `java.lang.Runtime` v1 @kind object) @signature `Lcom/google/common/util/concurrent/UncaughtExceptionHandlers$Exiter;.<init>:(Ljava/lang/Runtime;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `uncaughtException`(`com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter` v7 @kind this, `java.lang.Thread` v8 @kind object, `java.lang.Throwable` v9 @kind object) @signature `Lcom/google/common/util/concurrent/UncaughtExceptionHandlers$Exiter;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {

  # return;
}
