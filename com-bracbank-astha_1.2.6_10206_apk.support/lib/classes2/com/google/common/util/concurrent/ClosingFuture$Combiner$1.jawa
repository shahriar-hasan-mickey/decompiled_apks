record `com.google.common.util.concurrent.ClosingFuture$Combiner$1` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `com.google.common.util.concurrent.ClosingFuture$Combiner` `com.google.common.util.concurrent.ClosingFuture$Combiner$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `com.google.common.util.concurrent.ClosingFuture$Combiner$CombiningCallable` `com.google.common.util.concurrent.ClosingFuture$Combiner$1.val$combiningCallable` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ClosingFuture$Combiner$1` v0 @kind this, `com.google.common.util.concurrent.ClosingFuture$Combiner` v1 @kind object, `com.google.common.util.concurrent.ClosingFuture$Combiner$CombiningCallable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture$Combiner$1;.<init>:(Lcom/google/common/util/concurrent/ClosingFuture$Combiner;Lcom/google/common/util/concurrent/ClosingFuture$Combiner$CombiningCallable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `call`(`com.google.common.util.concurrent.ClosingFuture$Combiner$1` v3 @kind this) @signature `Lcom/google/common/util/concurrent/ClosingFuture$Combiner$1;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.ClosingFuture$Combiner$1` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ClosingFuture$Combiner$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
