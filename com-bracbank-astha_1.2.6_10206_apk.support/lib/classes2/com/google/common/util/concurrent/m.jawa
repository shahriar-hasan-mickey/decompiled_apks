record `com.google.common.util.concurrent.m` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
  `java.lang.reflect.Method` `com.google.common.util.concurrent.m.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.lang.Object` `com.google.common.util.concurrent.m.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.lang.Object`[] `com.google.common.util.concurrent.m.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.m` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lcom/google/common/util/concurrent/m;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `call`(`com.google.common.util.concurrent.m` v3 @kind this) @signature `Lcom/google/common/util/concurrent/m;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
