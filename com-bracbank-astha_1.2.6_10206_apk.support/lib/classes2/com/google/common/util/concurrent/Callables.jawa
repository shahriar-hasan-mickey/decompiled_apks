record `com.google.common.util.concurrent.Callables` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Callables` v0 @kind this) @signature `Lcom/google/common/util/concurrent/Callables;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `a`(`com.google.common.base.Supplier` v0 @kind object, `java.util.concurrent.Callable` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.a:(Lcom/google/common/base/Supplier;Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.AsyncCallable` `asAsyncCallable`(`java.util.concurrent.Callable` v1 @kind object, `com.google.common.util.concurrent.ListeningExecutorService` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.asAsyncCallable:(Ljava/util/concurrent/Callable;Lcom/google/common/util/concurrent/ListeningExecutorService;)Lcom/google/common/util/concurrent/AsyncCallable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `b`(`com.google.common.base.Supplier` v0 @kind object, `java.lang.Runnable` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.b:(Lcom/google/common/base/Supplier;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `c`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `d`(`com.google.common.util.concurrent.ListeningExecutorService` v0 @kind object, `java.util.concurrent.Callable` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.d:(Lcom/google/common/util/concurrent/ListeningExecutorService;Ljava/util/concurrent/Callable;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `lambda$asAsyncCallable$1`(`com.google.common.util.concurrent.ListeningExecutorService` v0 @kind object, `java.util.concurrent.Callable` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.lambda$asAsyncCallable$1:(Lcom/google/common/util/concurrent/ListeningExecutorService;Ljava/util/concurrent/Callable;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `lambda$returning$0`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.lambda$returning$0:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `lambda$threadRenaming$2`(`com.google.common.base.Supplier` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.lambda$threadRenaming$2:(Lcom/google/common/base/Supplier;Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$threadRenaming$3`(`com.google.common.base.Supplier` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.lambda$threadRenaming$3:(Lcom/google/common/base/Supplier;Ljava/lang/Runnable;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.concurrent.Callable` `returning`(`java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.returning:(Ljava/lang/Object;)Ljava/util/concurrent/Callable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Runnable` `threadRenaming`(`java.lang.Runnable` v1 @kind object, `com.google.common.base.Supplier` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.threadRenaming:(Ljava/lang/Runnable;Lcom/google/common/base/Supplier;)Ljava/lang/Runnable;` @AccessFlag STATIC {

  # return;
}
procedure `java.util.concurrent.Callable` `threadRenaming`(`java.util.concurrent.Callable` v1 @kind object, `com.google.common.base.Supplier` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.threadRenaming:(Ljava/util/concurrent/Callable;Lcom/google/common/base/Supplier;)Ljava/util/concurrent/Callable;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `trySetName`(`java.lang.String` v0 @kind object, `java.lang.Thread` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Callables;.trySetName:(Ljava/lang/String;Ljava/lang/Thread;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
