record `com.google.common.util.concurrent.Striped$CompactStriped` @kind class @AccessFlag  extends `com.google.common.util.concurrent.Striped$PowerOfTwoStriped` @kind class {
  `java.lang.Object`[] `com.google.common.util.concurrent.Striped$CompactStriped.array` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Striped$CompactStriped` v3 @kind this, `int` v4 , `com.google.common.base.Supplier` v5 @kind object) @signature `Lcom/google/common/util/concurrent/Striped$CompactStriped;.<init>:(ILcom/google/common/base/Supplier;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Striped$CompactStriped` v0 @kind this, `int` v1 , `com.google.common.base.Supplier` v2 @kind object, `com.google.common.util.concurrent.Striped$1` v3 @kind object) @signature `Lcom/google/common/util/concurrent/Striped$CompactStriped;.<init>:(ILcom/google/common/base/Supplier;Lcom/google/common/util/concurrent/Striped$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `getAt`(`com.google.common.util.concurrent.Striped$CompactStriped` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/util/concurrent/Striped$CompactStriped;.getAt:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.util.concurrent.Striped$CompactStriped` v1 @kind this) @signature `Lcom/google/common/util/concurrent/Striped$CompactStriped;.size:()I` @AccessFlag PUBLIC {

  # return;
}
