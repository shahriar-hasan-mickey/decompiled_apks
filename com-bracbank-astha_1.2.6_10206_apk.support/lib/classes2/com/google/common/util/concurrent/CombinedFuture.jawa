record `com.google.common.util.concurrent.CombinedFuture` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.AggregateFuture` @kind class {
  `com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask` `com.google.common.util.concurrent.CombinedFuture.task` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.CombinedFuture` v1 @kind this, `com.google.common.collect.ImmutableCollection` v2 @kind object, `boolean` v3 , `java.util.concurrent.Executor` v4 @kind object, `com.google.common.util.concurrent.AsyncCallable` v5 @kind object) @signature `Lcom/google/common/util/concurrent/CombinedFuture;.<init>:(Lcom/google/common/collect/ImmutableCollection;ZLjava/util/concurrent/Executor;Lcom/google/common/util/concurrent/AsyncCallable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.CombinedFuture` v1 @kind this, `com.google.common.collect.ImmutableCollection` v2 @kind object, `boolean` v3 , `java.util.concurrent.Executor` v4 @kind object, `java.util.concurrent.Callable` v5 @kind object) @signature `Lcom/google/common/util/concurrent/CombinedFuture;.<init>:(Lcom/google/common/collect/ImmutableCollection;ZLjava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask` `access$002`(`com.google.common.util.concurrent.CombinedFuture` v0 @kind object, `com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask` v1 @kind object) @signature `Lcom/google/common/util/concurrent/CombinedFuture;.access$002:(Lcom/google/common/util/concurrent/CombinedFuture;Lcom/google/common/util/concurrent/CombinedFuture$CombinedFutureInterruptibleTask;)Lcom/google/common/util/concurrent/CombinedFuture$CombinedFutureInterruptibleTask;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `collectOneValue`(`com.google.common.util.concurrent.CombinedFuture` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/util/concurrent/CombinedFuture;.collectOneValue:(ILjava/lang/Object;)V` @AccessFlag  {

  # return;
}
procedure `void` `handleAllCompleted`(`com.google.common.util.concurrent.CombinedFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/CombinedFuture;.handleAllCompleted:()V` @AccessFlag  {

  # return;
}
procedure `void` `interruptTask`(`com.google.common.util.concurrent.CombinedFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/CombinedFuture;.interruptTask:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `releaseResources`(`com.google.common.util.concurrent.CombinedFuture` v1 @kind this, `com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason` v2 @kind object) @signature `Lcom/google/common/util/concurrent/CombinedFuture;.releaseResources:(Lcom/google/common/util/concurrent/AggregateFuture$ReleaseResourcesReason;)V` @AccessFlag  {

  # return;
}
