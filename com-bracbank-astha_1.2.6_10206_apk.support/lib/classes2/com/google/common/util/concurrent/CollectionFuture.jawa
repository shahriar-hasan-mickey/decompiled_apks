record `com.google.common.util.concurrent.CollectionFuture` @kind class @AccessFlag ABSTRACT extends `com.google.common.util.concurrent.AggregateFuture` @kind class {
  `java.util.List` `com.google.common.util.concurrent.CollectionFuture.values` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.CollectionFuture` v2 @kind this, `com.google.common.collect.ImmutableCollection` v3 @kind object, `boolean` v4 ) @signature `Lcom/google/common/util/concurrent/CollectionFuture;.<init>:(Lcom/google/common/collect/ImmutableCollection;Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `collectOneValue`(`com.google.common.util.concurrent.CollectionFuture` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/util/concurrent/CollectionFuture;.collectOneValue:(ILjava/lang/Object;)V` @AccessFlag FINAL {

  # return;
}
procedure `java.lang.Object` `combine`(`java.util.List` v0 @kind object) @signature `Lcom/google/common/util/concurrent/CollectionFuture;.combine:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `handleAllCompleted`(`com.google.common.util.concurrent.CollectionFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/CollectionFuture;.handleAllCompleted:()V` @AccessFlag FINAL {

  # return;
}
procedure `void` `releaseResources`(`com.google.common.util.concurrent.CollectionFuture` v0 @kind this, `com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason` v1 @kind object) @signature `Lcom/google/common/util/concurrent/CollectionFuture;.releaseResources:(Lcom/google/common/util/concurrent/AggregateFuture$ReleaseResourcesReason;)V` @AccessFlag  {

  # return;
}
