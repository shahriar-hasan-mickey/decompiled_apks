record `com.google.common.util.concurrent.ExecutionSequencer$2` @kind class @AccessFlag  extends `com.google.common.util.concurrent.AsyncCallable` @kind interface {
  `com.google.common.util.concurrent.AsyncCallable` `com.google.common.util.concurrent.ExecutionSequencer$2.val$callable` @AccessFlag FINAL_SYNTHETIC;
  `com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor` `com.google.common.util.concurrent.ExecutionSequencer$2.val$taskExecutor` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ExecutionSequencer$2` v0 @kind this, `com.google.common.util.concurrent.ExecutionSequencer` v1 @kind object, `com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor` v2 @kind object, `com.google.common.util.concurrent.AsyncCallable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer$2;.<init>:(Lcom/google/common/util/concurrent/ExecutionSequencer;Lcom/google/common/util/concurrent/ExecutionSequencer$TaskNonReentrantExecutor;Lcom/google/common/util/concurrent/AsyncCallable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `call`(`com.google.common.util.concurrent.ExecutionSequencer$2` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer$2;.call:()Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.ExecutionSequencer$2` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
