record `com.google.common.util.concurrent.ExecutionSequencer$1` @kind class @AccessFlag  extends `com.google.common.util.concurrent.AsyncCallable` @kind interface {
  `java.util.concurrent.Callable` `com.google.common.util.concurrent.ExecutionSequencer$1.val$callable` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ExecutionSequencer$1` v0 @kind this, `com.google.common.util.concurrent.ExecutionSequencer` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer$1;.<init>:(Lcom/google/common/util/concurrent/ExecutionSequencer;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `call`(`com.google.common.util.concurrent.ExecutionSequencer$1` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer$1;.call:()Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.ExecutionSequencer$1` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
