record `com.google.common.util.concurrent.Futures$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.Future` `com.google.common.util.concurrent.Futures$1.val$scheduled` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Futures$1` v0 @kind this, `java.util.concurrent.Future` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Futures$1;.<init>:(Ljava/util/concurrent/Future;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `run`(`com.google.common.util.concurrent.Futures$1` v2 @kind this) @signature `Lcom/google/common/util/concurrent/Futures$1;.run:()V` @AccessFlag PUBLIC {

  # return;
}
