record `com.google.common.util.concurrent.MoreExecutors$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.google.common.util.concurrent.ListenableFuture` `com.google.common.util.concurrent.MoreExecutors$1.val$future` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.BlockingQueue` `com.google.common.util.concurrent.MoreExecutors$1.val$queue` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.MoreExecutors$1` v0 @kind this, `java.util.concurrent.BlockingQueue` v1 @kind object, `com.google.common.util.concurrent.ListenableFuture` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors$1;.<init>:(Ljava/util/concurrent/BlockingQueue;Lcom/google/common/util/concurrent/ListenableFuture;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `run`(`com.google.common.util.concurrent.MoreExecutors$1` v2 @kind this) @signature `Lcom/google/common/util/concurrent/MoreExecutors$1;.run:()V` @AccessFlag PUBLIC {

  # return;
}
