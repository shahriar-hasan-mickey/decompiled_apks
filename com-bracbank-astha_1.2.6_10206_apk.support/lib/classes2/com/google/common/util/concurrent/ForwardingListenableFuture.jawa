record `com.google.common.util.concurrent.ForwardingListenableFuture` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.util.concurrent.ForwardingFuture` @kind class, `com.google.common.util.concurrent.ListenableFuture` @kind interface {
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ForwardingListenableFuture` v0 @kind this) @signature `Lcom/google/common/util/concurrent/ForwardingListenableFuture;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `addListener`(`com.google.common.util.concurrent.ForwardingListenableFuture` v1 @kind this, `java.lang.Runnable` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ForwardingListenableFuture;.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `delegate`() @signature `Lcom/google/common/util/concurrent/ForwardingListenableFuture;.delegate:()Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `delegate`(`com.google.common.util.concurrent.ForwardingListenableFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ForwardingListenableFuture;.delegate:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.util.concurrent.Future` `delegate`(`com.google.common.util.concurrent.ForwardingListenableFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ForwardingListenableFuture;.delegate:()Ljava/util/concurrent/Future;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
