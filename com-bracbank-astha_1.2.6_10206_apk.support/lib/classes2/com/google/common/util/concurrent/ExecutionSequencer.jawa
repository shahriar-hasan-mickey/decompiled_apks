record `com.google.common.util.concurrent.ExecutionSequencer` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue` `com.google.common.util.concurrent.ExecutionSequencer.latestTaskQueue` @AccessFlag PRIVATE;
  `java.util.concurrent.atomic.AtomicReference` `com.google.common.util.concurrent.ExecutionSequencer.ref` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ExecutionSequencer` v2 @kind this) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.common.util.concurrent.TrustedListenableFutureTask` v0 @kind object, `com.google.common.util.concurrent.SettableFuture` v1 @kind object, `com.google.common.util.concurrent.ListenableFuture` v2 @kind object, `com.google.common.util.concurrent.ListenableFuture` v3 @kind object, `com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer;.a:(Lcom/google/common/util/concurrent/TrustedListenableFutureTask;Lcom/google/common/util/concurrent/SettableFuture;Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/ExecutionSequencer$TaskNonReentrantExecutor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue` `access$300`(`com.google.common.util.concurrent.ExecutionSequencer` v0 @kind object) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer;.access$300:(Lcom/google/common/util/concurrent/ExecutionSequencer;)Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue` `access$302`(`com.google.common.util.concurrent.ExecutionSequencer` v0 @kind object, `com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue` v1 @kind object) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer;.access$302:(Lcom/google/common/util/concurrent/ExecutionSequencer;Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;)Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.ExecutionSequencer` `create`() @signature `Lcom/google/common/util/concurrent/ExecutionSequencer;.create:()Lcom/google/common/util/concurrent/ExecutionSequencer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `lambda$submitAsync$0`(`com.google.common.util.concurrent.TrustedListenableFutureTask` v1 @kind object, `com.google.common.util.concurrent.SettableFuture` v2 @kind object, `com.google.common.util.concurrent.ListenableFuture` v3 @kind object, `com.google.common.util.concurrent.ListenableFuture` v4 @kind object, `com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor` v5 @kind object) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer;.lambda$submitAsync$0:(Lcom/google/common/util/concurrent/TrustedListenableFutureTask;Lcom/google/common/util/concurrent/SettableFuture;Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/ExecutionSequencer$TaskNonReentrantExecutor;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `submit`(`com.google.common.util.concurrent.ExecutionSequencer` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer;.submit:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `submitAsync`(`com.google.common.util.concurrent.ExecutionSequencer` v7 @kind this, `com.google.common.util.concurrent.AsyncCallable` v8 @kind object, `java.util.concurrent.Executor` v9 @kind object) @signature `Lcom/google/common/util/concurrent/ExecutionSequencer;.submitAsync:(Lcom/google/common/util/concurrent/AsyncCallable;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC {

  # return;
}
