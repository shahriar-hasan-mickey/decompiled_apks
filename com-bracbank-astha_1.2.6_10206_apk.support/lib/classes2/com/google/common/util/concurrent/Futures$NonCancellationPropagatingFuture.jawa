record `com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.AbstractFuture$TrustedFuture` @kind class, `java.lang.Runnable` @kind interface {
  `com.google.common.util.concurrent.ListenableFuture` `com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture.delegate` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture` v0 @kind this, `com.google.common.util.concurrent.ListenableFuture` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Futures$NonCancellationPropagatingFuture;.<init>:(Lcom/google/common/util/concurrent/ListenableFuture;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `afterDone`(`com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/Futures$NonCancellationPropagatingFuture;.afterDone:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `pendingToString`(`com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/Futures$NonCancellationPropagatingFuture;.pendingToString:()Ljava/lang/String;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `run`(`com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/Futures$NonCancellationPropagatingFuture;.run:()V` @AccessFlag PUBLIC {

  # return;
}
