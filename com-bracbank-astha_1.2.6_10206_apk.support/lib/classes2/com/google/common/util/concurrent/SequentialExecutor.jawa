record `com.google.common.util.concurrent.SequentialExecutor` @kind class @AccessFlag FINAL extends `java.util.concurrent.Executor` @kind interface {
  `java.util.concurrent.Executor` `com.google.common.util.concurrent.SequentialExecutor.executor` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `com.google.common.util.concurrent.SequentialExecutor.queue` @AccessFlag PRIVATE_FINAL;
  `com.google.common.util.concurrent.SequentialExecutor$QueueWorker` `com.google.common.util.concurrent.SequentialExecutor.worker` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.common.util.concurrent.SequentialExecutor.workerRunCount` @AccessFlag PRIVATE;
  `com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState` `com.google.common.util.concurrent.SequentialExecutor.workerRunningState` @AccessFlag PRIVATE;
}
global `java.util.logging.Logger` `@@com.google.common.util.concurrent.SequentialExecutor.log` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/SequentialExecutor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.SequentialExecutor` v2 @kind this, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/SequentialExecutor;.<init>:(Ljava/util/concurrent/Executor;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Deque` `access$100`(`com.google.common.util.concurrent.SequentialExecutor` v0 @kind object) @signature `Lcom/google/common/util/concurrent/SequentialExecutor;.access$100:(Lcom/google/common/util/concurrent/SequentialExecutor;)Ljava/util/Deque;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState` `access$200`(`com.google.common.util.concurrent.SequentialExecutor` v0 @kind object) @signature `Lcom/google/common/util/concurrent/SequentialExecutor;.access$200:(Lcom/google/common/util/concurrent/SequentialExecutor;)Lcom/google/common/util/concurrent/SequentialExecutor$WorkerRunningState;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState` `access$202`(`com.google.common.util.concurrent.SequentialExecutor` v0 @kind object, `com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState` v1 @kind object) @signature `Lcom/google/common/util/concurrent/SequentialExecutor;.access$202:(Lcom/google/common/util/concurrent/SequentialExecutor;Lcom/google/common/util/concurrent/SequentialExecutor$WorkerRunningState;)Lcom/google/common/util/concurrent/SequentialExecutor$WorkerRunningState;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `long` `access$308`(`com.google.common.util.concurrent.SequentialExecutor` v4 @kind object) @signature `Lcom/google/common/util/concurrent/SequentialExecutor;.access$308:(Lcom/google/common/util/concurrent/SequentialExecutor;)J` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.logging.Logger` `access$400`() @signature `Lcom/google/common/util/concurrent/SequentialExecutor;.access$400:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `execute`(`com.google.common.util.concurrent.SequentialExecutor` v8 @kind this, `java.lang.Runnable` v9 @kind object) @signature `Lcom/google/common/util/concurrent/SequentialExecutor;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.SequentialExecutor` v4 @kind this) @signature `Lcom/google/common/util/concurrent/SequentialExecutor;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
