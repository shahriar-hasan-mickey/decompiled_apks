record `com.google.common.util.concurrent.Striped$PowerOfTwoStriped` @kind class @AccessFlag ABSTRACT extends `com.google.common.util.concurrent.Striped` @kind class {
  `int` `com.google.common.util.concurrent.Striped$PowerOfTwoStriped.mask` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Striped$PowerOfTwoStriped` v3 @kind this, `int` v4 ) @signature `Lcom/google/common/util/concurrent/Striped$PowerOfTwoStriped;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.Striped$PowerOfTwoStriped` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Striped$PowerOfTwoStriped;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `indexFor`(`com.google.common.util.concurrent.Striped$PowerOfTwoStriped` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Striped$PowerOfTwoStriped;.indexFor:(Ljava/lang/Object;)I` @AccessFlag FINAL {

  # return;
}
