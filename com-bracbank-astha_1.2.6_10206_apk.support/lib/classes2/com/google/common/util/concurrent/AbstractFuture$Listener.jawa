record `com.google.common.util.concurrent.AbstractFuture$Listener` @kind class @AccessFlag FINAL {
  `java.util.concurrent.Executor` `com.google.common.util.concurrent.AbstractFuture$Listener.executor` @AccessFlag FINAL;
  `com.google.common.util.concurrent.AbstractFuture$Listener` `com.google.common.util.concurrent.AbstractFuture$Listener.next` @AccessFlag ;
  `java.lang.Runnable` `com.google.common.util.concurrent.AbstractFuture$Listener.task` @AccessFlag FINAL;
}
global `com.google.common.util.concurrent.AbstractFuture$Listener` `@@com.google.common.util.concurrent.AbstractFuture$Listener.TOMBSTONE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/AbstractFuture$Listener;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AbstractFuture$Listener` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture$Listener;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AbstractFuture$Listener` v0 @kind this, `java.lang.Runnable` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$Listener;.<init>:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
