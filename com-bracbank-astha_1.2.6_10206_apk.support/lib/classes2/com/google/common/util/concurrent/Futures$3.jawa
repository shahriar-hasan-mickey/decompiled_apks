record `com.google.common.util.concurrent.Futures$3` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.google.common.collect.ImmutableList` `com.google.common.util.concurrent.Futures$3.val$delegates` @AccessFlag FINAL_SYNTHETIC;
  `int` `com.google.common.util.concurrent.Futures$3.val$localI` @AccessFlag FINAL_SYNTHETIC;
  `com.google.common.util.concurrent.Futures$InCompletionOrderState` `com.google.common.util.concurrent.Futures$3.val$state` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Futures$3` v0 @kind this, `com.google.common.util.concurrent.Futures$InCompletionOrderState` v1 @kind object, `com.google.common.collect.ImmutableList` v2 @kind object, `int` v3 ) @signature `Lcom/google/common/util/concurrent/Futures$3;.<init>:(Lcom/google/common/util/concurrent/Futures$InCompletionOrderState;Lcom/google/common/collect/ImmutableList;I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `run`(`com.google.common.util.concurrent.Futures$3` v3 @kind this) @signature `Lcom/google/common/util/concurrent/Futures$3;.run:()V` @AccessFlag PUBLIC {

  # return;
}
