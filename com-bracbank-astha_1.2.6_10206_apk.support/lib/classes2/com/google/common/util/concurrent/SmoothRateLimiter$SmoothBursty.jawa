record `com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.SmoothRateLimiter` @kind class {
  `double` `com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty.maxBurstSeconds` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty` v1 @kind this, `com.google.common.util.concurrent.RateLimiter$SleepingStopwatch` v2 @kind object, `double` v3 ) @signature `Lcom/google/common/util/concurrent/SmoothRateLimiter$SmoothBursty;.<init>:(Lcom/google/common/util/concurrent/RateLimiter$SleepingStopwatch;D)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `double` `coolDownIntervalMicros`(`com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty` v2 @kind this) @signature `Lcom/google/common/util/concurrent/SmoothRateLimiter$SmoothBursty;.coolDownIntervalMicros:()D` @AccessFlag  {

  # return;
}
procedure `void` `doSetRate`(`com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty` v3 @kind this, `double` v4 , `double` v6 ) @signature `Lcom/google/common/util/concurrent/SmoothRateLimiter$SmoothBursty;.doSetRate:(DD)V` @AccessFlag  {

  # return;
}
procedure `long` `storedPermitsToWaitTime`(`com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty` v0 @kind this, `double` v1 , `double` v3 ) @signature `Lcom/google/common/util/concurrent/SmoothRateLimiter$SmoothBursty;.storedPermitsToWaitTime:(DD)J` @AccessFlag  {

  # return;
}
