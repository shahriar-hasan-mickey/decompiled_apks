record `com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1` @kind class @AccessFlag  extends `java.security.PrivilegedExceptionAction` @kind interface {
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1` v0 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper$1;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `run`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper$1;.run:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `sun.misc.Unsafe` `run`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1` v6 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper$1;.run:()Lsun/misc/Unsafe;` @AccessFlag PUBLIC {

  # return;
}
