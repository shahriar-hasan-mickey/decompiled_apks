record `com.google.common.util.concurrent.Futures` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.common.util.concurrent.GwtFuturesCatchingSpecialization` @kind class {
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Futures` v0 @kind this) @signature `Lcom/google/common/util/concurrent/Futures;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `addCallback`(`com.google.common.util.concurrent.ListenableFuture` v1 @kind object, `com.google.common.util.concurrent.FutureCallback` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.addCallback:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/FutureCallback;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `allAsList`(`java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.allAsList:(Ljava/lang/Iterable;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `allAsList`(`com.google.common.util.concurrent.ListenableFuture`[] v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.allAsList:([Lcom/google/common/util/concurrent/ListenableFuture;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `catching`(`com.google.common.util.concurrent.ListenableFuture` v0 @kind object, `java.lang.Class` v1 @kind object, `com.google.common.base.Function` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.catching:(Lcom/google/common/util/concurrent/ListenableFuture;Ljava/lang/Class;Lcom/google/common/base/Function;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `catchingAsync`(`com.google.common.util.concurrent.ListenableFuture` v0 @kind object, `java.lang.Class` v1 @kind object, `com.google.common.util.concurrent.AsyncFunction` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.catchingAsync:(Lcom/google/common/util/concurrent/ListenableFuture;Ljava/lang/Class;Lcom/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `getChecked`(`java.util.concurrent.Future` v0 @kind object, `java.lang.Class` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.getChecked:(Ljava/util/concurrent/Future;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `getChecked`(`java.util.concurrent.Future` v0 @kind object, `java.lang.Class` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.getChecked:(Ljava/util/concurrent/Future;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `getDone`(`java.util.concurrent.Future` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.getDone:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `getUnchecked`(`java.util.concurrent.Future` v0 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.getUnchecked:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture`[] `gwtCompatibleToArray`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.gwtCompatibleToArray:(Ljava/lang/Iterable;)[Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `immediateCancelledFuture`() @signature `Lcom/google/common/util/concurrent/Futures;.immediateCancelledFuture:()Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `immediateFailedFuture`(`java.lang.Throwable` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.immediateFailedFuture:(Ljava/lang/Throwable;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `immediateFuture`(`java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.immediateFuture:(Ljava/lang/Object;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `immediateVoidFuture`() @signature `Lcom/google/common/util/concurrent/Futures;.immediateVoidFuture:()Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableList` `inCompletionOrder`(`java.lang.Iterable` v6 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.inCompletionOrder:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.concurrent.Future` `lazyTransform`(`java.util.concurrent.Future` v1 @kind object, `com.google.common.base.Function` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.lazyTransform:(Ljava/util/concurrent/Future;Lcom/google/common/base/Function;)Ljava/util/concurrent/Future;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `nonCancellationPropagating`(`com.google.common.util.concurrent.ListenableFuture` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.nonCancellationPropagating:(Lcom/google/common/util/concurrent/ListenableFuture;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `scheduleAsync`(`com.google.common.util.concurrent.AsyncCallable` v0 @kind object, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `java.util.concurrent.ScheduledExecutorService` v4 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.scheduleAsync:(Lcom/google/common/util/concurrent/AsyncCallable;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `submit`(`java.lang.Runnable` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.submit:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `submit`(`java.util.concurrent.Callable` v0 @kind object, `java.util.concurrent.Executor` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.submit:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `submitAsync`(`com.google.common.util.concurrent.AsyncCallable` v0 @kind object, `java.util.concurrent.Executor` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.submitAsync:(Lcom/google/common/util/concurrent/AsyncCallable;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `successfulAsList`(`java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.successfulAsList:(Ljava/lang/Iterable;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `successfulAsList`(`com.google.common.util.concurrent.ListenableFuture`[] v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.successfulAsList:([Lcom/google/common/util/concurrent/ListenableFuture;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `transform`(`com.google.common.util.concurrent.ListenableFuture` v0 @kind object, `com.google.common.base.Function` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.transform:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `transformAsync`(`com.google.common.util.concurrent.ListenableFuture` v0 @kind object, `com.google.common.util.concurrent.AsyncFunction` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.transformAsync:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.Futures$FutureCombiner` `whenAllComplete`(`java.lang.Iterable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.whenAllComplete:(Ljava/lang/Iterable;)Lcom/google/common/util/concurrent/Futures$FutureCombiner;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.Futures$FutureCombiner` `whenAllComplete`(`com.google.common.util.concurrent.ListenableFuture`[] v3 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.whenAllComplete:([Lcom/google/common/util/concurrent/ListenableFuture;)Lcom/google/common/util/concurrent/Futures$FutureCombiner;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.Futures$FutureCombiner` `whenAllSucceed`(`java.lang.Iterable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.whenAllSucceed:(Ljava/lang/Iterable;)Lcom/google/common/util/concurrent/Futures$FutureCombiner;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.Futures$FutureCombiner` `whenAllSucceed`(`com.google.common.util.concurrent.ListenableFuture`[] v3 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.whenAllSucceed:([Lcom/google/common/util/concurrent/ListenableFuture;)Lcom/google/common/util/concurrent/Futures$FutureCombiner;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `withTimeout`(`com.google.common.util.concurrent.ListenableFuture` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `java.util.concurrent.ScheduledExecutorService` v5 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.withTimeout:(Lcom/google/common/util/concurrent/ListenableFuture;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `wrapAndThrowUnchecked`(`java.lang.Throwable` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Futures;.wrapAndThrowUnchecked:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
