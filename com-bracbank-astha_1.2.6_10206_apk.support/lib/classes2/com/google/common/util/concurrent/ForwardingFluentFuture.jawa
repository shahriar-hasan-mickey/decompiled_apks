record `com.google.common.util.concurrent.ForwardingFluentFuture` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.FluentFuture` @kind class {
  `com.google.common.util.concurrent.ListenableFuture` `com.google.common.util.concurrent.ForwardingFluentFuture.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ForwardingFluentFuture` v0 @kind this, `com.google.common.util.concurrent.ListenableFuture` v1 @kind object) @signature `Lcom/google/common/util/concurrent/ForwardingFluentFuture;.<init>:(Lcom/google/common/util/concurrent/ListenableFuture;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `addListener`(`com.google.common.util.concurrent.ForwardingFluentFuture` v1 @kind this, `java.lang.Runnable` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ForwardingFluentFuture;.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `cancel`(`com.google.common.util.concurrent.ForwardingFluentFuture` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/common/util/concurrent/ForwardingFluentFuture;.cancel:(Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.ForwardingFluentFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ForwardingFluentFuture;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.ForwardingFluentFuture` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ForwardingFluentFuture;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isCancelled`(`com.google.common.util.concurrent.ForwardingFluentFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ForwardingFluentFuture;.isCancelled:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDone`(`com.google.common.util.concurrent.ForwardingFluentFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ForwardingFluentFuture;.isDone:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.ForwardingFluentFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ForwardingFluentFuture;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
