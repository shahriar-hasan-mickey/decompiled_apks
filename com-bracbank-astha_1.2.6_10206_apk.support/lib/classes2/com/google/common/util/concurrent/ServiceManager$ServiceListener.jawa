record `com.google.common.util.concurrent.ServiceManager$ServiceListener` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.Service$Listener` @kind class {
  `com.google.common.util.concurrent.Service` `com.google.common.util.concurrent.ServiceManager$ServiceListener.service` @AccessFlag FINAL;
  `java.lang.ref.WeakReference` `com.google.common.util.concurrent.ServiceManager$ServiceListener.state` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ServiceManager$ServiceListener` v0 @kind this, `com.google.common.util.concurrent.Service` v1 @kind object, `java.lang.ref.WeakReference` v2 @kind object) @signature `Lcom/google/common/util/concurrent/ServiceManager$ServiceListener;.<init>:(Lcom/google/common/util/concurrent/Service;Ljava/lang/ref/WeakReference;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `failed`(`com.google.common.util.concurrent.ServiceManager$ServiceListener` v7 @kind this, `com.google.common.util.concurrent.Service$State` v8 @kind object, `java.lang.Throwable` v9 @kind object) @signature `Lcom/google/common/util/concurrent/ServiceManager$ServiceListener;.failed:(Lcom/google/common/util/concurrent/Service$State;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `running`(`com.google.common.util.concurrent.ServiceManager$ServiceListener` v4 @kind this) @signature `Lcom/google/common/util/concurrent/ServiceManager$ServiceListener;.running:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `starting`(`com.google.common.util.concurrent.ServiceManager$ServiceListener` v4 @kind this) @signature `Lcom/google/common/util/concurrent/ServiceManager$ServiceListener;.starting:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `stopping`(`com.google.common.util.concurrent.ServiceManager$ServiceListener` v3 @kind this, `com.google.common.util.concurrent.Service$State` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ServiceManager$ServiceListener;.stopping:(Lcom/google/common/util/concurrent/Service$State;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `terminated`(`com.google.common.util.concurrent.ServiceManager$ServiceListener` v6 @kind this, `com.google.common.util.concurrent.Service$State` v7 @kind object) @signature `Lcom/google/common/util/concurrent/ServiceManager$ServiceListener;.terminated:(Lcom/google/common/util/concurrent/Service$State;)V` @AccessFlag PUBLIC {

  # return;
}
