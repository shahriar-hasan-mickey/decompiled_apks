record `com.google.common.util.concurrent.ImmediateFuture` @kind class @AccessFlag  extends `com.google.common.util.concurrent.ListenableFuture` @kind interface {
  `java.lang.Object` `com.google.common.util.concurrent.ImmediateFuture.value` @AccessFlag PRIVATE_FINAL;
}
global `com.google.common.util.concurrent.ListenableFuture` `@@com.google.common.util.concurrent.ImmediateFuture.NULL` @AccessFlag STATIC_FINAL;
global `java.util.logging.Logger` `@@com.google.common.util.concurrent.ImmediateFuture.log` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/ImmediateFuture;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ImmediateFuture` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/ImmediateFuture;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `addListener`(`com.google.common.util.concurrent.ImmediateFuture` v5 @kind this, `java.lang.Runnable` v6 @kind object, `java.util.concurrent.Executor` v7 @kind object) @signature `Lcom/google/common/util/concurrent/ImmediateFuture;.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `cancel`(`com.google.common.util.concurrent.ImmediateFuture` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/common/util/concurrent/ImmediateFuture;.cancel:(Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.ImmediateFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ImmediateFuture;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.ImmediateFuture` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ImmediateFuture;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isCancelled`(`com.google.common.util.concurrent.ImmediateFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ImmediateFuture;.isCancelled:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDone`(`com.google.common.util.concurrent.ImmediateFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ImmediateFuture;.isDone:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.ImmediateFuture` v4 @kind this) @signature `Lcom/google/common/util/concurrent/ImmediateFuture;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
