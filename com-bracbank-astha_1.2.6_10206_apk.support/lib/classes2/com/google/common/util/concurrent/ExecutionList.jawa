record `com.google.common.util.concurrent.ExecutionList` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `com.google.common.util.concurrent.ExecutionList.executed` @AccessFlag PRIVATE;
  `com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair` `com.google.common.util.concurrent.ExecutionList.runnables` @AccessFlag PRIVATE;
}
global `java.util.logging.Logger` `@@com.google.common.util.concurrent.ExecutionList.log` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/ExecutionList;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ExecutionList` v0 @kind this) @signature `Lcom/google/common/util/concurrent/ExecutionList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `executeListener`(`java.lang.Runnable` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object) @signature `Lcom/google/common/util/concurrent/ExecutionList;.executeListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `add`(`com.google.common.util.concurrent.ExecutionList` v2 @kind this, `java.lang.Runnable` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ExecutionList;.add:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `execute`(`com.google.common.util.concurrent.ExecutionList` v3 @kind this) @signature `Lcom/google/common/util/concurrent/ExecutionList;.execute:()V` @AccessFlag PUBLIC {

  # return;
}
