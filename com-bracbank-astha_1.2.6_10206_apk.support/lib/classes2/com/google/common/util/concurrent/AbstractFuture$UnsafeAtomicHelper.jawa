record `com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.AbstractFuture$AtomicHelper` @kind class {
}
global `long` `@@com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper.LISTENERS_OFFSET` @AccessFlag STATIC_FINAL;
global `sun.misc.Unsafe` `@@com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper.UNSAFE` @AccessFlag STATIC_FINAL;
global `long` `@@com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper.VALUE_OFFSET` @AccessFlag STATIC_FINAL;
global `long` `@@com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper.WAITERS_OFFSET` @AccessFlag STATIC_FINAL;
global `long` `@@com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper.WAITER_NEXT_OFFSET` @AccessFlag STATIC_FINAL;
global `long` `@@com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper.WAITER_THREAD_OFFSET` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper` v0 @kind this, `com.google.common.util.concurrent.AbstractFuture$1` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper;.<init>:(Lcom/google/common/util/concurrent/AbstractFuture$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `casListeners`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper` v6 @kind this, `com.google.common.util.concurrent.AbstractFuture` v7 @kind object, `com.google.common.util.concurrent.AbstractFuture$Listener` v8 @kind object, `com.google.common.util.concurrent.AbstractFuture$Listener` v9 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper;.casListeners:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Listener;Lcom/google/common/util/concurrent/AbstractFuture$Listener;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `casValue`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper` v6 @kind this, `com.google.common.util.concurrent.AbstractFuture` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper;.casValue:(Lcom/google/common/util/concurrent/AbstractFuture;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `casWaiters`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper` v6 @kind this, `com.google.common.util.concurrent.AbstractFuture` v7 @kind object, `com.google.common.util.concurrent.AbstractFuture$Waiter` v8 @kind object, `com.google.common.util.concurrent.AbstractFuture$Waiter` v9 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper;.casWaiters:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Waiter;Lcom/google/common/util/concurrent/AbstractFuture$Waiter;)Z` @AccessFlag  {

  # return;
}
procedure `com.google.common.util.concurrent.AbstractFuture$Listener` `gasListeners`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper` v2 @kind this, `com.google.common.util.concurrent.AbstractFuture` v3 @kind object, `com.google.common.util.concurrent.AbstractFuture$Listener` v4 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper;.gasListeners:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Listener;)Lcom/google/common/util/concurrent/AbstractFuture$Listener;` @AccessFlag  {

  # return;
}
procedure `com.google.common.util.concurrent.AbstractFuture$Waiter` `gasWaiters`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper` v2 @kind this, `com.google.common.util.concurrent.AbstractFuture` v3 @kind object, `com.google.common.util.concurrent.AbstractFuture$Waiter` v4 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper;.gasWaiters:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Waiter;)Lcom/google/common/util/concurrent/AbstractFuture$Waiter;` @AccessFlag  {

  # return;
}
procedure `void` `putNext`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper` v3 @kind this, `com.google.common.util.concurrent.AbstractFuture$Waiter` v4 @kind object, `com.google.common.util.concurrent.AbstractFuture$Waiter` v5 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper;.putNext:(Lcom/google/common/util/concurrent/AbstractFuture$Waiter;Lcom/google/common/util/concurrent/AbstractFuture$Waiter;)V` @AccessFlag  {

  # return;
}
procedure `void` `putThread`(`com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper` v3 @kind this, `com.google.common.util.concurrent.AbstractFuture$Waiter` v4 @kind object, `java.lang.Thread` v5 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture$UnsafeAtomicHelper;.putThread:(Lcom/google/common/util/concurrent/AbstractFuture$Waiter;Ljava/lang/Thread;)V` @AccessFlag  {

  # return;
}
