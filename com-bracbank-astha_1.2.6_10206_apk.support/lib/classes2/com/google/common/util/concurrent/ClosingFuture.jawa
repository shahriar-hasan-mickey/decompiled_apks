record `com.google.common.util.concurrent.ClosingFuture` @kind class @AccessFlag PUBLIC_FINAL {
  `com.google.common.util.concurrent.ClosingFuture$CloseableList` `com.google.common.util.concurrent.ClosingFuture.closeables` @AccessFlag PRIVATE_FINAL;
  `com.google.common.util.concurrent.FluentFuture` `com.google.common.util.concurrent.ClosingFuture.future` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `com.google.common.util.concurrent.ClosingFuture.state` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@com.google.common.util.concurrent.ClosingFuture.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/ClosingFuture;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ClosingFuture` v2 @kind this, `com.google.common.util.concurrent.ClosingFuture$AsyncClosingCallable` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.<init>:(Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingCallable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ClosingFuture` v2 @kind this, `com.google.common.util.concurrent.ClosingFuture$ClosingCallable` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.<init>:(Lcom/google/common/util/concurrent/ClosingFuture$ClosingCallable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ClosingFuture` v2 @kind this, `com.google.common.util.concurrent.ListenableFuture` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.<init>:(Lcom/google/common/util/concurrent/ListenableFuture;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ClosingFuture` v0 @kind this, `com.google.common.util.concurrent.ListenableFuture` v1 @kind object, `com.google.common.util.concurrent.ClosingFuture$1` v2 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.<init>:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/ClosingFuture$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.util.concurrent.FluentFuture` `access$000`(`com.google.common.util.concurrent.ClosingFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.access$000:(Lcom/google/common/util/concurrent/ClosingFuture;)Lcom/google/common/util/concurrent/FluentFuture;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$100`(`com.google.common.util.concurrent.ClosingFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.access$100:(Lcom/google/common/util/concurrent/ClosingFuture;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$1000`(`com.google.common.util.concurrent.ClosingFuture` v0 @kind object, `com.google.common.util.concurrent.ClosingFuture$CloseableList` v1 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.access$1000:(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$1100`(`com.google.common.util.concurrent.ClosingFuture` v0 @kind object, `com.google.common.util.concurrent.ClosingFuture$State` v1 @kind object, `com.google.common.util.concurrent.ClosingFuture$State` v2 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.access$1100:(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$State;Lcom/google/common/util/concurrent/ClosingFuture$State;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$1200`(`com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer` v0 @kind object, `com.google.common.util.concurrent.ClosingFuture` v1 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.access$1200:(Lcom/google/common/util/concurrent/ClosingFuture$ValueAndCloserConsumer;Lcom/google/common/util/concurrent/ClosingFuture;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture$CloseableList` `access$200`(`com.google.common.util.concurrent.ClosingFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.access$200:(Lcom/google/common/util/concurrent/ClosingFuture;)Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.logging.Logger` `access$3200`() @signature `Lcom/google/common/util/concurrent/ClosingFuture;.access$3200:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$3300`(`java.io.Closeable` v0 @kind object, `java.util.concurrent.Executor` v1 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.access$3300:(Ljava/io/Closeable;Ljava/util/concurrent/Executor;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `becomeSubsumedInto`(`com.google.common.util.concurrent.ClosingFuture` v2 @kind this, `com.google.common.util.concurrent.ClosingFuture$CloseableList` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.becomeSubsumedInto:(Lcom/google/common/util/concurrent/ClosingFuture$CloseableList;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `catchingAsyncMoreGeneric`(`com.google.common.util.concurrent.ClosingFuture` v1 @kind this, `java.lang.Class` v2 @kind object, `com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.catchingAsyncMoreGeneric:(Ljava/lang/Class;Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `catchingMoreGeneric`(`com.google.common.util.concurrent.ClosingFuture` v1 @kind this, `java.lang.Class` v2 @kind object, `com.google.common.util.concurrent.ClosingFuture$ClosingFunction` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.catchingMoreGeneric:(Ljava/lang/Class;Lcom/google/common/util/concurrent/ClosingFuture$ClosingFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `checkAndUpdateState`(`com.google.common.util.concurrent.ClosingFuture` v2 @kind this, `com.google.common.util.concurrent.ClosingFuture$State` v3 @kind object, `com.google.common.util.concurrent.ClosingFuture$State` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.checkAndUpdateState:(Lcom/google/common/util/concurrent/ClosingFuture$State;Lcom/google/common/util/concurrent/ClosingFuture$State;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `close`(`com.google.common.util.concurrent.ClosingFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.close:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.closeQuietly:(Ljava/io/Closeable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `compareAndUpdateState`(`com.google.common.util.concurrent.ClosingFuture` v1 @kind this, `com.google.common.util.concurrent.ClosingFuture$State` v2 @kind object, `com.google.common.util.concurrent.ClosingFuture$State` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.compareAndUpdateState:(Lcom/google/common/util/concurrent/ClosingFuture$State;Lcom/google/common/util/concurrent/ClosingFuture$State;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `derive`(`com.google.common.util.concurrent.ClosingFuture` v1 @kind this, `com.google.common.util.concurrent.FluentFuture` v2 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.derive:(Lcom/google/common/util/concurrent/FluentFuture;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `eventuallyClosing`(`com.google.common.util.concurrent.ListenableFuture` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.eventuallyClosing:(Lcom/google/common/util/concurrent/ListenableFuture;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `from`(`com.google.common.util.concurrent.ListenableFuture` v1 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.from:(Lcom/google/common/util/concurrent/ListenableFuture;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `provideValueAndCloser`(`com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer` v1 @kind object, `com.google.common.util.concurrent.ClosingFuture` v2 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.provideValueAndCloser:(Lcom/google/common/util/concurrent/ClosingFuture$ValueAndCloserConsumer;Lcom/google/common/util/concurrent/ClosingFuture;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `submit`(`com.google.common.util.concurrent.ClosingFuture$ClosingCallable` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.submit:(Lcom/google/common/util/concurrent/ClosingFuture$ClosingCallable;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `submitAsync`(`com.google.common.util.concurrent.ClosingFuture$AsyncClosingCallable` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.submitAsync:(Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingCallable;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture$Combiner` `whenAllComplete`(`com.google.common.util.concurrent.ClosingFuture` v0 @kind object, `com.google.common.util.concurrent.ClosingFuture`[] v1 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.whenAllComplete:(Lcom/google/common/util/concurrent/ClosingFuture;[Lcom/google/common/util/concurrent/ClosingFuture;)Lcom/google/common/util/concurrent/ClosingFuture$Combiner;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture$Combiner` `whenAllComplete`(`java.lang.Iterable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.whenAllComplete:(Ljava/lang/Iterable;)Lcom/google/common/util/concurrent/ClosingFuture$Combiner;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture$Combiner2` `whenAllSucceed`(`com.google.common.util.concurrent.ClosingFuture` v2 @kind object, `com.google.common.util.concurrent.ClosingFuture` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.whenAllSucceed:(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;)Lcom/google/common/util/concurrent/ClosingFuture$Combiner2;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture$Combiner3` `whenAllSucceed`(`com.google.common.util.concurrent.ClosingFuture` v2 @kind object, `com.google.common.util.concurrent.ClosingFuture` v3 @kind object, `com.google.common.util.concurrent.ClosingFuture` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.whenAllSucceed:(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;)Lcom/google/common/util/concurrent/ClosingFuture$Combiner3;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture$Combiner4` `whenAllSucceed`(`com.google.common.util.concurrent.ClosingFuture` v7 @kind object, `com.google.common.util.concurrent.ClosingFuture` v8 @kind object, `com.google.common.util.concurrent.ClosingFuture` v9 @kind object, `com.google.common.util.concurrent.ClosingFuture` v10 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.whenAllSucceed:(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;)Lcom/google/common/util/concurrent/ClosingFuture$Combiner4;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture$Combiner5` `whenAllSucceed`(`com.google.common.util.concurrent.ClosingFuture` v8 @kind object, `com.google.common.util.concurrent.ClosingFuture` v9 @kind object, `com.google.common.util.concurrent.ClosingFuture` v10 @kind object, `com.google.common.util.concurrent.ClosingFuture` v11 @kind object, `com.google.common.util.concurrent.ClosingFuture` v12 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.whenAllSucceed:(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;)Lcom/google/common/util/concurrent/ClosingFuture$Combiner5;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture$Combiner` `whenAllSucceed`(`com.google.common.util.concurrent.ClosingFuture` v2 @kind object, `com.google.common.util.concurrent.ClosingFuture` v3 @kind object, `com.google.common.util.concurrent.ClosingFuture` v4 @kind object, `com.google.common.util.concurrent.ClosingFuture` v5 @kind object, `com.google.common.util.concurrent.ClosingFuture` v6 @kind object, `com.google.common.util.concurrent.ClosingFuture` v7 @kind object, `com.google.common.util.concurrent.ClosingFuture`[] v8 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.whenAllSucceed:(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture;[Lcom/google/common/util/concurrent/ClosingFuture;)Lcom/google/common/util/concurrent/ClosingFuture$Combiner;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture$Combiner` `whenAllSucceed`(`java.lang.Iterable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.whenAllSucceed:(Ljava/lang/Iterable;)Lcom/google/common/util/concurrent/ClosingFuture$Combiner;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction` `withoutCloser`(`com.google.common.util.concurrent.AsyncFunction` v1 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.withoutCloser:(Lcom/google/common/util/concurrent/AsyncFunction;)Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingFunction;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `cancel`(`com.google.common.util.concurrent.ClosingFuture` v3 @kind this, `boolean` v4 ) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.cancel:(Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `catching`(`com.google.common.util.concurrent.ClosingFuture` v0 @kind this, `java.lang.Class` v1 @kind object, `com.google.common.util.concurrent.ClosingFuture$ClosingFunction` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.catching:(Ljava/lang/Class;Lcom/google/common/util/concurrent/ClosingFuture$ClosingFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `catchingAsync`(`com.google.common.util.concurrent.ClosingFuture` v0 @kind this, `java.lang.Class` v1 @kind object, `com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.catchingAsync:(Ljava/lang/Class;Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `finalize`(`com.google.common.util.concurrent.ClosingFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.finalize:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `com.google.common.util.concurrent.FluentFuture` `finishToFuture`(`com.google.common.util.concurrent.ClosingFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.finishToFuture:()Lcom/google/common/util/concurrent/FluentFuture;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `finishToValueAndCloser`(`com.google.common.util.concurrent.ClosingFuture` v2 @kind this, `com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.finishToValueAndCloser:(Lcom/google/common/util/concurrent/ClosingFuture$ValueAndCloserConsumer;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.util.concurrent.ListenableFuture` `statusFuture`(`com.google.common.util.concurrent.ClosingFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.statusFuture:()Lcom/google/common/util/concurrent/ListenableFuture;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.ClosingFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `transform`(`com.google.common.util.concurrent.ClosingFuture` v1 @kind this, `com.google.common.util.concurrent.ClosingFuture$ClosingFunction` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.transform:(Lcom/google/common/util/concurrent/ClosingFuture$ClosingFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.util.concurrent.ClosingFuture` `transformAsync`(`com.google.common.util.concurrent.ClosingFuture` v1 @kind this, `com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.transformAsync:(Lcom/google/common/util/concurrent/ClosingFuture$AsyncClosingFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ClosingFuture;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.concurrent.CountDownLatch` `whenClosedCountDown`(`com.google.common.util.concurrent.ClosingFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/ClosingFuture;.whenClosedCountDown:()Ljava/util/concurrent/CountDownLatch;` @AccessFlag  {

  # return;
}
