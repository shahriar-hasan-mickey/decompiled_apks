record `com.google.common.util.concurrent.Futures$CallbackListener` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `com.google.common.util.concurrent.FutureCallback` `com.google.common.util.concurrent.Futures$CallbackListener.callback` @AccessFlag FINAL;
  `java.util.concurrent.Future` `com.google.common.util.concurrent.Futures$CallbackListener.future` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Futures$CallbackListener` v0 @kind this, `java.util.concurrent.Future` v1 @kind object, `com.google.common.util.concurrent.FutureCallback` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Futures$CallbackListener;.<init>:(Ljava/util/concurrent/Future;Lcom/google/common/util/concurrent/FutureCallback;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `run`(`com.google.common.util.concurrent.Futures$CallbackListener` v2 @kind this) @signature `Lcom/google/common/util/concurrent/Futures$CallbackListener;.run:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.Futures$CallbackListener` v2 @kind this) @signature `Lcom/google/common/util/concurrent/Futures$CallbackListener;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
