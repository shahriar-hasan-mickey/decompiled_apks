record `com.google.common.util.concurrent.ClosingFuture$10` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.google.common.util.concurrent.ClosingFuture` `com.google.common.util.concurrent.ClosingFuture$10.this$0` @AccessFlag FINAL_SYNTHETIC;
  `com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer` `com.google.common.util.concurrent.ClosingFuture$10.val$consumer` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.ClosingFuture$10` v0 @kind this, `com.google.common.util.concurrent.ClosingFuture` v1 @kind object, `com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer` v2 @kind object) @signature `Lcom/google/common/util/concurrent/ClosingFuture$10;.<init>:(Lcom/google/common/util/concurrent/ClosingFuture;Lcom/google/common/util/concurrent/ClosingFuture$ValueAndCloserConsumer;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `run`(`com.google.common.util.concurrent.ClosingFuture$10` v2 @kind this) @signature `Lcom/google/common/util/concurrent/ClosingFuture$10;.run:()V` @AccessFlag PUBLIC {

  # return;
}
