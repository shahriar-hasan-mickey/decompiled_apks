record `com.google.common.util.concurrent.RateLimiter` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `java.lang.Object` `com.google.common.util.concurrent.RateLimiter.mutexDoNotUseDirectly` @AccessFlag PRIVATE_VOLATILE;
  `com.google.common.util.concurrent.RateLimiter$SleepingStopwatch` `com.google.common.util.concurrent.RateLimiter.stopwatch` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.RateLimiter` v0 @kind this, `com.google.common.util.concurrent.RateLimiter$SleepingStopwatch` v1 @kind object) @signature `Lcom/google/common/util/concurrent/RateLimiter;.<init>:(Lcom/google/common/util/concurrent/RateLimiter$SleepingStopwatch;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `canAcquire`(`com.google.common.util.concurrent.RateLimiter` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.canAcquire:(JJ)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `checkPermits`(`int` v2 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.checkPermits:(I)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.RateLimiter` `create`(`double` v1 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.create:(D)Lcom/google/common/util/concurrent/RateLimiter;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.RateLimiter` `create`(`double` v10 , `long` v12 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lcom/google/common/util/concurrent/RateLimiter;.create:(DJLjava/util/concurrent/TimeUnit;)Lcom/google/common/util/concurrent/RateLimiter;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.RateLimiter` `create`(`double` v8 , `long` v10 , `java.util.concurrent.TimeUnit` v12 @kind object, `double` v13 , `com.google.common.util.concurrent.RateLimiter$SleepingStopwatch` v15 @kind object) @signature `Lcom/google/common/util/concurrent/RateLimiter;.create:(DJLjava/util/concurrent/TimeUnit;DLcom/google/common/util/concurrent/RateLimiter$SleepingStopwatch;)Lcom/google/common/util/concurrent/RateLimiter;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.RateLimiter` `create`(`double` v3 , `com.google.common.util.concurrent.RateLimiter$SleepingStopwatch` v5 @kind object) @signature `Lcom/google/common/util/concurrent/RateLimiter;.create:(DLcom/google/common/util/concurrent/RateLimiter$SleepingStopwatch;)Lcom/google/common/util/concurrent/RateLimiter;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object` `mutex`(`com.google.common.util.concurrent.RateLimiter` v1 @kind this) @signature `Lcom/google/common/util/concurrent/RateLimiter;.mutex:()Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `double` `acquire`(`com.google.common.util.concurrent.RateLimiter` v2 @kind this) @signature `Lcom/google/common/util/concurrent/RateLimiter;.acquire:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `acquire`(`com.google.common.util.concurrent.RateLimiter` v4 @kind this, `int` v5 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.acquire:(I)D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `doGetRate`() @signature `Lcom/google/common/util/concurrent/RateLimiter;.doGetRate:()D` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `doSetRate`(`double` v0 , `long` v2 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.doSetRate:(DJ)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `double` `getRate`(`com.google.common.util.concurrent.RateLimiter` v3 @kind this) @signature `Lcom/google/common/util/concurrent/RateLimiter;.getRate:()D` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `long` `queryEarliestAvailable`(`long` v0 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.queryEarliestAvailable:(J)J` @AccessFlag ABSTRACT {

  # return;
}
procedure `long` `reserve`(`com.google.common.util.concurrent.RateLimiter` v3 @kind this, `int` v4 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.reserve:(I)J` @AccessFlag FINAL {

  # return;
}
procedure `long` `reserveAndGetWaitLength`(`com.google.common.util.concurrent.RateLimiter` v2 @kind this, `int` v3 , `long` v4 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.reserveAndGetWaitLength:(IJ)J` @AccessFlag FINAL {

  # return;
}
procedure `long` `reserveEarliestAvailable`(`int` v0 , `long` v1 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.reserveEarliestAvailable:(IJ)J` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `setRate`(`com.google.common.util.concurrent.RateLimiter` v3 @kind this, `double` v4 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.setRate:(D)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.RateLimiter` v4 @kind this) @signature `Lcom/google/common/util/concurrent/RateLimiter;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `tryAcquire`(`com.google.common.util.concurrent.RateLimiter` v4 @kind this) @signature `Lcom/google/common/util/concurrent/RateLimiter;.tryAcquire:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `tryAcquire`(`com.google.common.util.concurrent.RateLimiter` v3 @kind this, `int` v4 ) @signature `Lcom/google/common/util/concurrent/RateLimiter;.tryAcquire:(I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `tryAcquire`(`com.google.common.util.concurrent.RateLimiter` v2 @kind this, `int` v3 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lcom/google/common/util/concurrent/RateLimiter;.tryAcquire:(IJLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `tryAcquire`(`com.google.common.util.concurrent.RateLimiter` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lcom/google/common/util/concurrent/RateLimiter;.tryAcquire:(JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC {

  # return;
}
