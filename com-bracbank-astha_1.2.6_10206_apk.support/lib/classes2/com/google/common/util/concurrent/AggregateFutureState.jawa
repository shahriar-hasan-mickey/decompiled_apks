record `com.google.common.util.concurrent.AggregateFutureState` @kind class @AccessFlag ABSTRACT extends `com.google.common.util.concurrent.AbstractFuture$TrustedFuture` @kind class {
  `int` `com.google.common.util.concurrent.AggregateFutureState.remaining` @AccessFlag PRIVATE_VOLATILE;
  `java.util.Set` `com.google.common.util.concurrent.AggregateFutureState.seenExceptions` @AccessFlag PRIVATE_VOLATILE;
}
global `com.google.common.util.concurrent.AggregateFutureState$AtomicHelper` `@@com.google.common.util.concurrent.AggregateFutureState.ATOMIC_HELPER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@com.google.common.util.concurrent.AggregateFutureState.log` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/AggregateFutureState;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AggregateFutureState` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/util/concurrent/AggregateFutureState;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Set` `access$200`(`com.google.common.util.concurrent.AggregateFutureState` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AggregateFutureState;.access$200:(Lcom/google/common/util/concurrent/AggregateFutureState;)Ljava/util/Set;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `access$202`(`com.google.common.util.concurrent.AggregateFutureState` v0 @kind object, `java.util.Set` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AggregateFutureState;.access$202:(Lcom/google/common/util/concurrent/AggregateFutureState;Ljava/util/Set;)Ljava/util/Set;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$306`(`com.google.common.util.concurrent.AggregateFutureState` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AggregateFutureState;.access$306:(Lcom/google/common/util/concurrent/AggregateFutureState;)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `addInitialException`(`java.util.Set` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AggregateFutureState;.addInitialException:(Ljava/util/Set;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `clearSeenExceptions`(`com.google.common.util.concurrent.AggregateFutureState` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AggregateFutureState;.clearSeenExceptions:()V` @AccessFlag FINAL {

  # return;
}
procedure `int` `decrementRemainingAndGet`(`com.google.common.util.concurrent.AggregateFutureState` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AggregateFutureState;.decrementRemainingAndGet:()I` @AccessFlag FINAL {

  # return;
}
procedure `java.util.Set` `getOrInitSeenExceptions`(`com.google.common.util.concurrent.AggregateFutureState` v3 @kind this) @signature `Lcom/google/common/util/concurrent/AggregateFutureState;.getOrInitSeenExceptions:()Ljava/util/Set;` @AccessFlag FINAL {

  # return;
}
