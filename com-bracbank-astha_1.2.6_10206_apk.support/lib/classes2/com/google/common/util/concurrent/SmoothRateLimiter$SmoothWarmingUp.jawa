record `com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.SmoothRateLimiter` @kind class {
  `double` `com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp.coldFactor` @AccessFlag PRIVATE;
  `double` `com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp.slope` @AccessFlag PRIVATE;
  `double` `com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp.thresholdPermits` @AccessFlag PRIVATE;
  `long` `com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp.warmupPeriodMicros` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp` v1 @kind this, `com.google.common.util.concurrent.RateLimiter$SleepingStopwatch` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `double` v6 ) @signature `Lcom/google/common/util/concurrent/SmoothRateLimiter$SmoothWarmingUp;.<init>:(Lcom/google/common/util/concurrent/RateLimiter$SleepingStopwatch;JLjava/util/concurrent/TimeUnit;D)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `double` `permitsToTime`(`com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp` v4 @kind this, `double` v5 ) @signature `Lcom/google/common/util/concurrent/SmoothRateLimiter$SmoothWarmingUp;.permitsToTime:(D)D` @AccessFlag PRIVATE {

  # return;
}
procedure `double` `coolDownIntervalMicros`(`com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp` v4 @kind this) @signature `Lcom/google/common/util/concurrent/SmoothRateLimiter$SmoothWarmingUp;.coolDownIntervalMicros:()D` @AccessFlag  {

  # return;
}
procedure `void` `doSetRate`(`com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp` v8 @kind this, `double` v9 , `double` v11 ) @signature `Lcom/google/common/util/concurrent/SmoothRateLimiter$SmoothWarmingUp;.doSetRate:(DD)V` @AccessFlag  {

  # return;
}
procedure `long` `storedPermitsToWaitTime`(`com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp` v4 @kind this, `double` v5 , `double` v7 ) @signature `Lcom/google/common/util/concurrent/SmoothRateLimiter$SmoothWarmingUp;.storedPermitsToWaitTime:(DD)J` @AccessFlag  {

  # return;
}
