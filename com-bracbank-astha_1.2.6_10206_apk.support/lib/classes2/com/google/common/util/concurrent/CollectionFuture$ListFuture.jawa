record `com.google.common.util.concurrent.CollectionFuture$ListFuture` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.CollectionFuture` @kind class {
}
procedure `void` `<init>`(`com.google.common.util.concurrent.CollectionFuture$ListFuture` v0 @kind this, `com.google.common.collect.ImmutableCollection` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/common/util/concurrent/CollectionFuture$ListFuture;.<init>:(Lcom/google/common/collect/ImmutableCollection;Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `combine`(`com.google.common.util.concurrent.CollectionFuture$ListFuture` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/google/common/util/concurrent/CollectionFuture$ListFuture;.combine:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.List` `combine`(`com.google.common.util.concurrent.CollectionFuture$ListFuture` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lcom/google/common/util/concurrent/CollectionFuture$ListFuture;.combine:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
