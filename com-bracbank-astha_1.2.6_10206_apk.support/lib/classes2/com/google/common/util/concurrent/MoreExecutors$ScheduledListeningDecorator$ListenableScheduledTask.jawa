record `com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture` @kind class, `com.google.common.util.concurrent.ListenableScheduledFuture` @kind interface {
  `java.util.concurrent.ScheduledFuture` `com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask.scheduledDelegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask` v0 @kind this, `com.google.common.util.concurrent.ListenableFuture` v1 @kind object, `java.util.concurrent.ScheduledFuture` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask;.<init>:(Lcom/google/common/util/concurrent/ListenableFuture;Ljava/util/concurrent/ScheduledFuture;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `cancel`(`com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask` v2 @kind this, `boolean` v3 ) @signature `Lcom/google/common/util/concurrent/MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask;.cancel:(Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `compareTo`(`com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask` v1 @kind this, `java.util.concurrent.Delayed` v2 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask;.compareTo:(Ljava/util/concurrent/Delayed;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getDelay`(`com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask` v2 @kind this, `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lcom/google/common/util/concurrent/MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask;.getDelay:(Ljava/util/concurrent/TimeUnit;)J` @AccessFlag PUBLIC {

  # return;
}
