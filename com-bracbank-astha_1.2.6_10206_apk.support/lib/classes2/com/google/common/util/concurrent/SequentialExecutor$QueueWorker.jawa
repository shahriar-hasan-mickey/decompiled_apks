record `com.google.common.util.concurrent.SequentialExecutor$QueueWorker` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.lang.Runnable` `com.google.common.util.concurrent.SequentialExecutor$QueueWorker.task` @AccessFlag ;
  `com.google.common.util.concurrent.SequentialExecutor` `com.google.common.util.concurrent.SequentialExecutor$QueueWorker.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.SequentialExecutor$QueueWorker` v0 @kind this, `com.google.common.util.concurrent.SequentialExecutor` v1 @kind object) @signature `Lcom/google/common/util/concurrent/SequentialExecutor$QueueWorker;.<init>:(Lcom/google/common/util/concurrent/SequentialExecutor;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.SequentialExecutor$QueueWorker` v0 @kind this, `com.google.common.util.concurrent.SequentialExecutor` v1 @kind object, `com.google.common.util.concurrent.SequentialExecutor$1` v2 @kind object) @signature `Lcom/google/common/util/concurrent/SequentialExecutor$QueueWorker;.<init>:(Lcom/google/common/util/concurrent/SequentialExecutor;Lcom/google/common/util/concurrent/SequentialExecutor$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `workOnQueue`(`com.google.common.util.concurrent.SequentialExecutor$QueueWorker` v9 @kind this) @signature `Lcom/google/common/util/concurrent/SequentialExecutor$QueueWorker;.workOnQueue:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `run`(`com.google.common.util.concurrent.SequentialExecutor$QueueWorker` v4 @kind this) @signature `Lcom/google/common/util/concurrent/SequentialExecutor$QueueWorker;.run:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.SequentialExecutor$QueueWorker` v4 @kind this) @signature `Lcom/google/common/util/concurrent/SequentialExecutor$QueueWorker;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
