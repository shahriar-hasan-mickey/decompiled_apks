record `com.google.common.util.concurrent.Service` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `addListener`(`com.google.common.util.concurrent.Service$Listener` v0 @kind object, `java.util.concurrent.Executor` v1 @kind object) @signature `Lcom/google/common/util/concurrent/Service;.addListener:(Lcom/google/common/util/concurrent/Service$Listener;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `awaitRunning`() @signature `Lcom/google/common/util/concurrent/Service;.awaitRunning:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `awaitRunning`(`long` v0 , `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Service;.awaitRunning:(JLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `awaitTerminated`() @signature `Lcom/google/common/util/concurrent/Service;.awaitTerminated:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `awaitTerminated`(`long` v0 , `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lcom/google/common/util/concurrent/Service;.awaitTerminated:(JLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Throwable` `failureCause`() @signature `Lcom/google/common/util/concurrent/Service;.failureCause:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isRunning`() @signature `Lcom/google/common/util/concurrent/Service;.isRunning:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.util.concurrent.Service` `startAsync`() @signature `Lcom/google/common/util/concurrent/Service;.startAsync:()Lcom/google/common/util/concurrent/Service;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.util.concurrent.Service$State` `state`() @signature `Lcom/google/common/util/concurrent/Service;.state:()Lcom/google/common/util/concurrent/Service$State;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.util.concurrent.Service` `stopAsync`() @signature `Lcom/google/common/util/concurrent/Service;.stopAsync:()Lcom/google/common/util/concurrent/Service;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
