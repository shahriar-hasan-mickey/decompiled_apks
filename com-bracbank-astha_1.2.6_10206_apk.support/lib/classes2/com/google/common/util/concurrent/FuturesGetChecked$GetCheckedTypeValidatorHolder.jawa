record `com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder` @kind class @AccessFlag  {
}
global `com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator` `@@com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder.BEST_VALIDATOR` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder` v0 @kind this) @signature `Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator` `getBestValidator`() @signature `Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidatorHolder;.getBestValidator:()Lcom/google/common/util/concurrent/FuturesGetChecked$GetCheckedTypeValidator;` @AccessFlag STATIC {

  # return;
}
