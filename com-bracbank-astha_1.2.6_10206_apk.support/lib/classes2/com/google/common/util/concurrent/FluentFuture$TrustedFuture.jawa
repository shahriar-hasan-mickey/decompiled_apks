record `com.google.common.util.concurrent.FluentFuture$TrustedFuture` @kind class @AccessFlag ABSTRACT extends `com.google.common.util.concurrent.FluentFuture` @kind class, `com.google.common.util.concurrent.AbstractFuture$Trusted` @kind interface {
}
procedure `void` `<init>`(`com.google.common.util.concurrent.FluentFuture$TrustedFuture` v0 @kind this) @signature `Lcom/google/common/util/concurrent/FluentFuture$TrustedFuture;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `addListener`(`com.google.common.util.concurrent.FluentFuture$TrustedFuture` v0 @kind this, `java.lang.Runnable` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/common/util/concurrent/FluentFuture$TrustedFuture;.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `cancel`(`com.google.common.util.concurrent.FluentFuture$TrustedFuture` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/common/util/concurrent/FluentFuture$TrustedFuture;.cancel:(Z)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.FluentFuture$TrustedFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/FluentFuture$TrustedFuture;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.FluentFuture$TrustedFuture` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lcom/google/common/util/concurrent/FluentFuture$TrustedFuture;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isCancelled`(`com.google.common.util.concurrent.FluentFuture$TrustedFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/FluentFuture$TrustedFuture;.isCancelled:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isDone`(`com.google.common.util.concurrent.FluentFuture$TrustedFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/FluentFuture$TrustedFuture;.isDone:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
