record `com.google.common.primitives.Booleans` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.common.primitives.Booleans` v0 @kind this) @signature `Lcom/google/common/primitives/Booleans;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `access$000`(`boolean`[] v0 @kind object, `boolean` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/common/primitives/Booleans;.access$000:([ZZII)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$100`(`boolean`[] v0 @kind object, `boolean` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/common/primitives/Booleans;.access$100:([ZZII)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.List` `asList`(`boolean`[] v1 @kind object) @signature `Lcom/google/common/primitives/Booleans;.asList:([Z)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`boolean` v0 , `boolean` v1 ) @signature `Lcom/google/common/primitives/Booleans;.compare:(ZZ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `concat`(`boolean`[][] v7 @kind object) @signature `Lcom/google/common/primitives/Booleans;.concat:([[Z)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`boolean`[] v4 @kind object, `boolean` v5 ) @signature `Lcom/google/common/primitives/Booleans;.contains:([ZZ)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `countTrue`(`boolean`[] v4 @kind object) @signature `Lcom/google/common/primitives/Booleans;.countTrue:([Z)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `ensureCapacity`(`boolean`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/common/primitives/Booleans;.ensureCapacity:([ZII)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Comparator` `falseFirst`() @signature `Lcom/google/common/primitives/Booleans;.falseFirst:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hashCode`(`boolean` v0 ) @signature `Lcom/google/common/primitives/Booleans;.hashCode:(Z)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`boolean`[] v2 @kind object, `boolean` v3 ) @signature `Lcom/google/common/primitives/Booleans;.indexOf:([ZZ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`boolean`[] v1 @kind object, `boolean` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/common/primitives/Booleans;.indexOf:([ZZII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `indexOf`(`boolean`[] v5 @kind object, `boolean`[] v6 @kind object) @signature `Lcom/google/common/primitives/Booleans;.indexOf:([Z[Z)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.lang.String` v3 @kind object, `boolean`[] v4 @kind object) @signature `Lcom/google/common/primitives/Booleans;.join:(Ljava/lang/String;[Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`boolean`[] v2 @kind object, `boolean` v3 ) @signature `Lcom/google/common/primitives/Booleans;.lastIndexOf:([ZZ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`boolean`[] v1 @kind object, `boolean` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/common/primitives/Booleans;.lastIndexOf:([ZZII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Comparator` `lexicographicalComparator`() @signature `Lcom/google/common/primitives/Booleans;.lexicographicalComparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`boolean`[] v2 @kind object) @signature `Lcom/google/common/primitives/Booleans;.reverse:([Z)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`boolean`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/primitives/Booleans;.reverse:([ZII)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean`[] `toArray`(`java.util.Collection` v4 @kind object) @signature `Lcom/google/common/primitives/Booleans;.toArray:(Ljava/util/Collection;)[Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Comparator` `trueFirst`() @signature `Lcom/google/common/primitives/Booleans;.trueFirst:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {

  # return;
}
