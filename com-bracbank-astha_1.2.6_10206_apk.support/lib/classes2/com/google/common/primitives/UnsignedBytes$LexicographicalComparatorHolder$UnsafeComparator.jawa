record `com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `java.util.Comparator` @kind interface {
}
global `com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator`[] `@@com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `boolean` `@@com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator.BIG_ENDIAN` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator.BYTE_ARRAY_BASE_OFFSET` @AccessFlag STATIC_FINAL;
global `com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator` `@@com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `sun.misc.Unsafe` `@@com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator.theUnsafe` @AccessFlag STATIC_FINAL;
procedure `com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator`[] `$values`() @signature `Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;.$values:()[Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `<clinit>`() @signature `Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `sun.misc.Unsafe` `getUnsafe`() @signature `Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;.getUnsafe:()Lsun/misc/Unsafe;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;.valueOf:(Ljava/lang/String;)Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator`[] `values`() @signature `Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;.values:()[Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `compare`(`com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator` v11 @kind this, `byte`[] v12 @kind object, `byte`[] v13 @kind object) @signature `Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;.compare:([B[B)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator` v1 @kind this) @signature `Lcom/google/common/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
