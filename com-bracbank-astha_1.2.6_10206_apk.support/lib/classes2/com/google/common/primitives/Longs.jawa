record `com.google.common.primitives.Longs` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@com.google.common.primitives.Longs.BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@com.google.common.primitives.Longs.MAX_POWER_OF_TWO` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.primitives.Longs` v0 @kind this) @signature `Lcom/google/common/primitives/Longs;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `access$000`(`long`[] v0 @kind object, `long` v1 , `int` v3 , `int` v4 ) @signature `Lcom/google/common/primitives/Longs;.access$000:([JJII)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$100`(`long`[] v0 @kind object, `long` v1 , `int` v3 , `int` v4 ) @signature `Lcom/google/common/primitives/Longs;.access$100:([JJII)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.List` `asList`(`long`[] v1 @kind object) @signature `Lcom/google/common/primitives/Longs;.asList:([J)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`long` v1 , `long` v3 ) @signature `Lcom/google/common/primitives/Longs;.compare:(JJ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `concat`(`long`[][] v7 @kind object) @signature `Lcom/google/common/primitives/Longs;.concat:([[J)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `constrainToRange`(`long` v7 , `long` v9 , `long` v11 ) @signature `Lcom/google/common/primitives/Longs;.constrainToRange:(JJJ)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`long`[] v6 @kind object, `long` v7 ) @signature `Lcom/google/common/primitives/Longs;.contains:([JJ)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `ensureCapacity`(`long`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/common/primitives/Longs;.ensureCapacity:([JII)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `fromByteArray`(`byte`[] v14 @kind object) @signature `Lcom/google/common/primitives/Longs;.fromByteArray:([B)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `fromBytes`(`byte` v5 , `byte` v6 , `byte` v7 , `byte` v8 , `byte` v9 , `byte` v10 , `byte` v11 , `byte` v12 ) @signature `Lcom/google/common/primitives/Longs;.fromBytes:(BBBBBBBB)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hashCode`(`long` v2 ) @signature `Lcom/google/common/primitives/Longs;.hashCode:(J)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`long`[] v2 @kind object, `long` v3 ) @signature `Lcom/google/common/primitives/Longs;.indexOf:([JJ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`long`[] v3 @kind object, `long` v4 , `int` v6 , `int` v7 ) @signature `Lcom/google/common/primitives/Longs;.indexOf:([JJII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `indexOf`(`long`[] v8 @kind object, `long`[] v9 @kind object) @signature `Lcom/google/common/primitives/Longs;.indexOf:([J[J)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.lang.String` v4 @kind object, `long`[] v5 @kind object) @signature `Lcom/google/common/primitives/Longs;.join:(Ljava/lang/String;[J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`long`[] v2 @kind object, `long` v3 ) @signature `Lcom/google/common/primitives/Longs;.lastIndexOf:([JJ)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`long`[] v3 @kind object, `long` v4 , `int` v6 , `int` v7 ) @signature `Lcom/google/common/primitives/Longs;.lastIndexOf:([JJII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Comparator` `lexicographicalComparator`() @signature `Lcom/google/common/primitives/Longs;.lexicographicalComparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `max`(`long`[] v6 @kind object) @signature `Lcom/google/common/primitives/Longs;.max:([J)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `min`(`long`[] v6 @kind object) @signature `Lcom/google/common/primitives/Longs;.min:([J)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`long`[] v2 @kind object) @signature `Lcom/google/common/primitives/Longs;.reverse:([J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`long`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/common/primitives/Longs;.reverse:([JII)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `sortDescending`(`long`[] v2 @kind object) @signature `Lcom/google/common/primitives/Longs;.sortDescending:([J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `sortDescending`(`long`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/common/primitives/Longs;.sortDescending:([JII)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.Converter` `stringConverter`() @signature `Lcom/google/common/primitives/Longs;.stringConverter:()Lcom/google/common/base/Converter;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `toArray`(`java.util.Collection` v5 @kind object) @signature `Lcom/google/common/primitives/Longs;.toArray:(Ljava/util/Collection;)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `toByteArray`(`long` v5 ) @signature `Lcom/google/common/primitives/Longs;.toByteArray:(J)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Long` `tryParse`(`java.lang.String` v1 @kind object) @signature `Lcom/google/common/primitives/Longs;.tryParse:(Ljava/lang/String;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Long` `tryParse`(`java.lang.String` v18 @kind object, `int` v19 ) @signature `Lcom/google/common/primitives/Longs;.tryParse:(Ljava/lang/String;I)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC {

  # return;
}
