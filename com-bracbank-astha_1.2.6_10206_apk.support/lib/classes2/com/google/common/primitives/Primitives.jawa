record `com.google.common.primitives.Primitives` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.Map` `@@com.google.common.primitives.Primitives.PRIMITIVE_TO_WRAPPER_TYPE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@com.google.common.primitives.Primitives.WRAPPER_TO_PRIMITIVE_TYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/primitives/Primitives;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.primitives.Primitives` v0 @kind this) @signature `Lcom/google/common/primitives/Primitives;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`java.util.Map` v0 @kind object, `java.util.Map` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/google/common/primitives/Primitives;.add:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Set` `allPrimitiveTypes`() @signature `Lcom/google/common/primitives/Primitives;.allPrimitiveTypes:()Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `allWrapperTypes`() @signature `Lcom/google/common/primitives/Primitives;.allWrapperTypes:()Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isWrapperType`(`java.lang.Class` v1 @kind object) @signature `Lcom/google/common/primitives/Primitives;.isWrapperType:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Class` `unwrap`(`java.lang.Class` v1 @kind object) @signature `Lcom/google/common/primitives/Primitives;.unwrap:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Class` `wrap`(`java.lang.Class` v1 @kind object) @signature `Lcom/google/common/primitives/Primitives;.wrap:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {

  # return;
}
