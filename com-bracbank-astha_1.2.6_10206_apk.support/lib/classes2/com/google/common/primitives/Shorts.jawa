record `com.google.common.primitives.Shorts` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.common.primitives.ShortsMethodsForWeb` @kind class {
}
global `int` `@@com.google.common.primitives.Shorts.BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
global `short` `@@com.google.common.primitives.Shorts.MAX_POWER_OF_TWO` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.primitives.Shorts` v0 @kind this) @signature `Lcom/google/common/primitives/Shorts;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `access$000`(`short`[] v0 @kind object, `short` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/common/primitives/Shorts;.access$000:([SSII)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$100`(`short`[] v0 @kind object, `short` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/common/primitives/Shorts;.access$100:([SSII)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.List` `asList`(`short`[] v1 @kind object) @signature `Lcom/google/common/primitives/Shorts;.asList:([S)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `checkedCast`(`long` v4 ) @signature `Lcom/google/common/primitives/Shorts;.checkedCast:(J)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`short` v0 , `short` v1 ) @signature `Lcom/google/common/primitives/Shorts;.compare:(SS)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `concat`(`short`[][] v7 @kind object) @signature `Lcom/google/common/primitives/Shorts;.concat:([[S)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `constrainToRange`(`short` v2 , `short` v3 , `short` v4 ) @signature `Lcom/google/common/primitives/Shorts;.constrainToRange:(SSS)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`short`[] v4 @kind object, `short` v5 ) @signature `Lcom/google/common/primitives/Shorts;.contains:([SS)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `ensureCapacity`(`short`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/common/primitives/Shorts;.ensureCapacity:([SII)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `fromByteArray`(`byte`[] v6 @kind object) @signature `Lcom/google/common/primitives/Shorts;.fromByteArray:([B)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `fromBytes`(`byte` v0 , `byte` v1 ) @signature `Lcom/google/common/primitives/Shorts;.fromBytes:(BB)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `hashCode`(`short` v0 ) @signature `Lcom/google/common/primitives/Shorts;.hashCode:(S)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`short`[] v2 @kind object, `short` v3 ) @signature `Lcom/google/common/primitives/Shorts;.indexOf:([SS)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `indexOf`(`short`[] v1 @kind object, `short` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/common/primitives/Shorts;.indexOf:([SSII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `indexOf`(`short`[] v5 @kind object, `short`[] v6 @kind object) @signature `Lcom/google/common/primitives/Shorts;.indexOf:([S[S)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `join`(`java.lang.String` v3 @kind object, `short`[] v4 @kind object) @signature `Lcom/google/common/primitives/Shorts;.join:(Ljava/lang/String;[S)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`short`[] v2 @kind object, `short` v3 ) @signature `Lcom/google/common/primitives/Shorts;.lastIndexOf:([SS)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lastIndexOf`(`short`[] v1 @kind object, `short` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/common/primitives/Shorts;.lastIndexOf:([SSII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Comparator` `lexicographicalComparator`() @signature `Lcom/google/common/primitives/Shorts;.lexicographicalComparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `max`(`short`[] v3 @kind object) @signature `Lcom/google/common/primitives/Shorts;.max:([S)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `min`(`short`[] v3 @kind object) @signature `Lcom/google/common/primitives/Shorts;.min:([S)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`short`[] v2 @kind object) @signature `Lcom/google/common/primitives/Shorts;.reverse:([S)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reverse`(`short`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/primitives/Shorts;.reverse:([SII)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short` `saturatedCast`(`long` v3 ) @signature `Lcom/google/common/primitives/Shorts;.saturatedCast:(J)S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `sortDescending`(`short`[] v2 @kind object) @signature `Lcom/google/common/primitives/Shorts;.sortDescending:([S)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `sortDescending`(`short`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/common/primitives/Shorts;.sortDescending:([SII)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.Converter` `stringConverter`() @signature `Lcom/google/common/primitives/Shorts;.stringConverter:()Lcom/google/common/base/Converter;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `toArray`(`java.util.Collection` v4 @kind object) @signature `Lcom/google/common/primitives/Shorts;.toArray:(Ljava/util/Collection;)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `toByteArray`(`short` v3 ) @signature `Lcom/google/common/primitives/Shorts;.toByteArray:(S)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
