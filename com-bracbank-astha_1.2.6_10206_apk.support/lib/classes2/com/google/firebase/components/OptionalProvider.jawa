record `com.google.firebase.components.OptionalProvider` @kind class @AccessFlag  extends `com.google.firebase.inject.Provider` @kind interface, `com.google.firebase.inject.Deferred` @kind interface {
  `com.google.firebase.inject.Provider` `com.google.firebase.components.OptionalProvider.delegate` @AccessFlag PRIVATE_VOLATILE;
  `com.google.firebase.inject.Deferred$DeferredHandler` `com.google.firebase.components.OptionalProvider.handler` @AccessFlag PRIVATE;
}
global `com.google.firebase.inject.Provider` `@@com.google.firebase.components.OptionalProvider.EMPTY_PROVIDER` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.firebase.inject.Deferred$DeferredHandler` `@@com.google.firebase.components.OptionalProvider.NOOP_HANDLER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/components/OptionalProvider;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.components.OptionalProvider` v0 @kind this, `com.google.firebase.inject.Deferred$DeferredHandler` v1 @kind object, `com.google.firebase.inject.Provider` v2 @kind object) @signature `Lcom/google/firebase/components/OptionalProvider;.<init>:(Lcom/google/firebase/inject/Deferred$DeferredHandler;Lcom/google/firebase/inject/Provider;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `a`() @signature `Lcom/google/firebase/components/OptionalProvider;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`com.google.firebase.inject.Provider` v0 @kind object) @signature `Lcom/google/firebase/components/OptionalProvider;.b:(Lcom/google/firebase/inject/Provider;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`com.google.firebase.inject.Deferred$DeferredHandler` v0 @kind object, `com.google.firebase.inject.Deferred$DeferredHandler` v1 @kind object, `com.google.firebase.inject.Provider` v2 @kind object) @signature `Lcom/google/firebase/components/OptionalProvider;.c:(Lcom/google/firebase/inject/Deferred$DeferredHandler;Lcom/google/firebase/inject/Deferred$DeferredHandler;Lcom/google/firebase/inject/Provider;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.components.OptionalProvider` `empty`() @signature `Lcom/google/firebase/components/OptionalProvider;.empty:()Lcom/google/firebase/components/OptionalProvider;` @AccessFlag STATIC {

  # return;
}
procedure `void` `lambda$static$0`(`com.google.firebase.inject.Provider` v0 @kind object) @signature `Lcom/google/firebase/components/OptionalProvider;.lambda$static$0:(Lcom/google/firebase/inject/Provider;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `lambda$static$1`() @signature `Lcom/google/firebase/components/OptionalProvider;.lambda$static$1:()Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$whenAvailable$2`(`com.google.firebase.inject.Deferred$DeferredHandler` v0 @kind object, `com.google.firebase.inject.Deferred$DeferredHandler` v1 @kind object, `com.google.firebase.inject.Provider` v2 @kind object) @signature `Lcom/google/firebase/components/OptionalProvider;.lambda$whenAvailable$2:(Lcom/google/firebase/inject/Deferred$DeferredHandler;Lcom/google/firebase/inject/Deferred$DeferredHandler;Lcom/google/firebase/inject/Provider;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.components.OptionalProvider` `of`(`com.google.firebase.inject.Provider` v2 @kind object) @signature `Lcom/google/firebase/components/OptionalProvider;.of:(Lcom/google/firebase/inject/Provider;)Lcom/google/firebase/components/OptionalProvider;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.firebase.components.OptionalProvider` v1 @kind this) @signature `Lcom/google/firebase/components/OptionalProvider;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `set`(`com.google.firebase.components.OptionalProvider` v2 @kind this, `com.google.firebase.inject.Provider` v3 @kind object) @signature `Lcom/google/firebase/components/OptionalProvider;.set:(Lcom/google/firebase/inject/Provider;)V` @AccessFlag  {

  # return;
}
procedure `void` `whenAvailable`(`com.google.firebase.components.OptionalProvider` v4 @kind this, `com.google.firebase.inject.Deferred$DeferredHandler` v5 @kind object) @signature `Lcom/google/firebase/components/OptionalProvider;.whenAvailable:(Lcom/google/firebase/inject/Deferred$DeferredHandler;)V` @AccessFlag PUBLIC {

  # return;
}
