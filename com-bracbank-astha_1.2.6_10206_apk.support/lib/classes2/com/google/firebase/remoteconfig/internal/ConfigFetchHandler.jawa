record `com.google.firebase.remoteconfig.internal.ConfigFetchHandler` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.inject.Provider` `com.google.firebase.remoteconfig.internal.ConfigFetchHandler.analyticsConnector` @AccessFlag PRIVATE_FINAL;
  `com.google.android.gms.common.util.Clock` `com.google.firebase.remoteconfig.internal.ConfigFetchHandler.clock` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.remoteconfig.internal.ConfigFetchHandler.customHttpHeaders` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `com.google.firebase.remoteconfig.internal.ConfigFetchHandler.executor` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.remoteconfig.internal.ConfigCacheClient` `com.google.firebase.remoteconfig.internal.ConfigFetchHandler.fetchedConfigsCache` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.installations.FirebaseInstallationsApi` `com.google.firebase.remoteconfig.internal.ConfigFetchHandler.firebaseInstallations` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.remoteconfig.internal.ConfigFetchHttpClient` `com.google.firebase.remoteconfig.internal.ConfigFetchHandler.frcBackendApiClient` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.remoteconfig.internal.ConfigMetadataClient` `com.google.firebase.remoteconfig.internal.ConfigFetchHandler.frcMetadata` @AccessFlag PRIVATE_FINAL;
  `java.util.Random` `com.google.firebase.remoteconfig.internal.ConfigFetchHandler.randomGenerator` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@com.google.firebase.remoteconfig.internal.ConfigFetchHandler.BACKOFF_TIME_DURATIONS_IN_MINUTES` @AccessFlag STATIC_FINAL;
global `long` `@@com.google.firebase.remoteconfig.internal.ConfigFetchHandler.DEFAULT_MINIMUM_FETCH_INTERVAL_IN_SECONDS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.remoteconfig.internal.ConfigFetchHandler.FIRST_OPEN_TIME_KEY` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.firebase.remoteconfig.internal.ConfigFetchHandler.HTTP_TOO_MANY_REQUESTS` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v0 @kind this, `com.google.firebase.installations.FirebaseInstallationsApi` v1 @kind object, `com.google.firebase.inject.Provider` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object, `com.google.android.gms.common.util.Clock` v4 @kind object, `java.util.Random` v5 @kind object, `com.google.firebase.remoteconfig.internal.ConfigCacheClient` v6 @kind object, `com.google.firebase.remoteconfig.internal.ConfigFetchHttpClient` v7 @kind object, `com.google.firebase.remoteconfig.internal.ConfigMetadataClient` v8 @kind object, `java.util.Map` v9 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.<init>:(Lcom/google/firebase/installations/FirebaseInstallationsApi;Lcom/google/firebase/inject/Provider;Ljava/util/concurrent/Executor;Lcom/google/android/gms/common/util/Clock;Ljava/util/Random;Lcom/google/firebase/remoteconfig/internal/ConfigCacheClient;Lcom/google/firebase/remoteconfig/internal/ConfigFetchHttpClient;Lcom/google/firebase/remoteconfig/internal/ConfigMetadataClient;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `a`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v0 @kind object, `com.google.android.gms.tasks.Task` v1 @kind object, `com.google.android.gms.tasks.Task` v2 @kind object, `java.util.Date` v3 @kind object, `com.google.android.gms.tasks.Task` v4 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.a:(Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;Lcom/google/android/gms/tasks/Task;Lcom/google/android/gms/tasks/Task;Ljava/util/Date;Lcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `areCachedFetchConfigsValid`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v4 @kind this, `long` v5 , `java.util.Date` v7 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.areCachedFetchConfigsValid:(JLjava/util/Date;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `b`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v0 @kind object, `long` v1 , `com.google.android.gms.tasks.Task` v3 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.b:(Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;JLcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `c`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v0 @kind object, `java.util.Date` v1 @kind object, `com.google.android.gms.tasks.Task` v2 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.c:(Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;Ljava/util/Date;Lcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.remoteconfig.FirebaseRemoteConfigServerException` `createExceptionWithGenericMessage`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v5 @kind this, `com.google.firebase.remoteconfig.FirebaseRemoteConfigServerException` v6 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.createExceptionWithGenericMessage:(Lcom/google/firebase/remoteconfig/FirebaseRemoteConfigServerException;)Lcom/google/firebase/remoteconfig/FirebaseRemoteConfigServerException;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `createThrottledMessage`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v2 @kind this, `long` v3 ) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.createThrottledMessage:(J)Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `d`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchResponse` v0 @kind object, `com.google.firebase.remoteconfig.internal.ConfigContainer` v1 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.d:(Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler$FetchResponse;Lcom/google/firebase/remoteconfig/internal/ConfigContainer;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchResponse` `fetchFromBackend`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v10 @kind this, `java.lang.String` v11 @kind object, `java.lang.String` v12 @kind object, `java.util.Date` v13 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.fetchFromBackend:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;)Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler$FetchResponse;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `fetchFromBackendAndCacheResponse`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.util.Date` v4 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.fetchFromBackendAndCacheResponse:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `fetchIfCacheExpiredAndNotThrottled`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v5 @kind this, `com.google.android.gms.tasks.Task` v6 @kind object, `long` v7 ) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.fetchIfCacheExpiredAndNotThrottled:(Lcom/google/android/gms/tasks/Task;J)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Date` `getBackoffEndTimeInMillis`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v1 @kind this, `java.util.Date` v2 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.getBackoffEndTimeInMillis:(Ljava/util/Date;)Ljava/util/Date;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Long` `getFirstOpenTime`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v2 @kind this) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.getFirstOpenTime:()Ljava/lang/Long;` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `getRandomizedBackoffDurationInMillis`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v4 @kind this, `int` v5 ) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.getRandomizedBackoffDurationInMillis:(I)J` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Map` `getUserProperties`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v4 @kind this) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.getUserProperties:()Ljava/util/Map;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isThrottleableServerError`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v1 @kind this, `int` v2 ) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.isThrottleableServerError:(I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `lambda$fetch$0`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v0 @kind this, `long` v1 , `com.google.android.gms.tasks.Task` v3 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.lambda$fetch$0:(JLcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `lambda$fetchFromBackendAndCacheResponse$3`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchResponse` v0 @kind object, `com.google.firebase.remoteconfig.internal.ConfigContainer` v1 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.lambda$fetchFromBackendAndCacheResponse$3:(Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler$FetchResponse;Lcom/google/firebase/remoteconfig/internal/ConfigContainer;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `lambda$fetchIfCacheExpiredAndNotThrottled$1`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v0 @kind this, `com.google.android.gms.tasks.Task` v1 @kind object, `com.google.android.gms.tasks.Task` v2 @kind object, `java.util.Date` v3 @kind object, `com.google.android.gms.tasks.Task` v4 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.lambda$fetchIfCacheExpiredAndNotThrottled$1:(Lcom/google/android/gms/tasks/Task;Lcom/google/android/gms/tasks/Task;Ljava/util/Date;Lcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `lambda$fetchIfCacheExpiredAndNotThrottled$2`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v0 @kind this, `java.util.Date` v1 @kind object, `com.google.android.gms.tasks.Task` v2 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.lambda$fetchIfCacheExpiredAndNotThrottled$2:(Ljava/util/Date;Lcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `boolean` `shouldThrottle`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v1 @kind this, `com.google.firebase.remoteconfig.internal.ConfigMetadataClient$BackoffMetadata` v2 @kind object, `int` v3 ) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.shouldThrottle:(Lcom/google/firebase/remoteconfig/internal/ConfigMetadataClient$BackoffMetadata;I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.remoteconfig.internal.ConfigMetadataClient$BackoffMetadata` `updateAndReturnBackoffMetadata`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v0 @kind this, `int` v1 , `java.util.Date` v2 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.updateAndReturnBackoffMetadata:(ILjava/util/Date;)Lcom/google/firebase/remoteconfig/internal/ConfigMetadataClient$BackoffMetadata;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `updateBackoffMetadataWithLastFailedFetchTime`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v6 @kind this, `java.util.Date` v7 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.updateBackoffMetadataWithLastFailedFetchTime:(Ljava/util/Date;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `updateLastFetchStatusAndTime`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v1 @kind this, `com.google.android.gms.tasks.Task` v2 @kind object, `java.util.Date` v3 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.updateLastFetchStatusAndTime:(Lcom/google/android/gms/tasks/Task;Ljava/util/Date;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `fetch`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v2 @kind this) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.fetch:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `fetch`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v3 @kind this, `long` v4 ) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.fetch:(J)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.inject.Provider` `getAnalyticsConnector`(`com.google.firebase.remoteconfig.internal.ConfigFetchHandler` v1 @kind this) @signature `Lcom/google/firebase/remoteconfig/internal/ConfigFetchHandler;.getAnalyticsConnector:()Lcom/google/firebase/inject/Provider;` @AccessFlag PUBLIC {

  # return;
}
