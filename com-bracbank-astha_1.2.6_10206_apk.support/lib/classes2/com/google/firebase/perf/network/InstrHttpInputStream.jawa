record `com.google.firebase.perf.network.InstrHttpInputStream` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.InputStream` @kind class {
  `long` `com.google.firebase.perf.network.InstrHttpInputStream.bytesRead` @AccessFlag PRIVATE;
  `java.io.InputStream` `com.google.firebase.perf.network.InstrHttpInputStream.inputStream` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.perf.metrics.NetworkRequestMetricBuilder` `com.google.firebase.perf.network.InstrHttpInputStream.networkMetricBuilder` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.firebase.perf.network.InstrHttpInputStream.timeToResponseInitiated` @AccessFlag PRIVATE;
  `long` `com.google.firebase.perf.network.InstrHttpInputStream.timeToResponseLastRead` @AccessFlag PRIVATE;
  `com.google.firebase.perf.util.Timer` `com.google.firebase.perf.network.InstrHttpInputStream.timer` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.perf.network.InstrHttpInputStream` v2 @kind this, `java.io.InputStream` v3 @kind object, `com.google.firebase.perf.metrics.NetworkRequestMetricBuilder` v4 @kind object, `com.google.firebase.perf.util.Timer` v5 @kind object) @signature `Lcom/google/firebase/perf/network/InstrHttpInputStream;.<init>:(Ljava/io/InputStream;Lcom/google/firebase/perf/metrics/NetworkRequestMetricBuilder;Lcom/google/firebase/perf/util/Timer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `available`(`com.google.firebase.perf.network.InstrHttpInputStream` v4 @kind this) @signature `Lcom/google/firebase/perf/network/InstrHttpInputStream;.available:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `close`(`com.google.firebase.perf.network.InstrHttpInputStream` v7 @kind this) @signature `Lcom/google/firebase/perf/network/InstrHttpInputStream;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `mark`(`com.google.firebase.perf.network.InstrHttpInputStream` v1 @kind this, `int` v2 ) @signature `Lcom/google/firebase/perf/network/InstrHttpInputStream;.mark:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `markSupported`(`com.google.firebase.perf.network.InstrHttpInputStream` v1 @kind this) @signature `Lcom/google/firebase/perf/network/InstrHttpInputStream;.markSupported:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.firebase.perf.network.InstrHttpInputStream` v8 @kind this) @signature `Lcom/google/firebase/perf/network/InstrHttpInputStream;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.firebase.perf.network.InstrHttpInputStream` v7 @kind this, `byte`[] v8 @kind object) @signature `Lcom/google/firebase/perf/network/InstrHttpInputStream;.read:([B)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.firebase.perf.network.InstrHttpInputStream` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/firebase/perf/network/InstrHttpInputStream;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`com.google.firebase.perf.network.InstrHttpInputStream` v4 @kind this) @signature `Lcom/google/firebase/perf/network/InstrHttpInputStream;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `skip`(`com.google.firebase.perf.network.InstrHttpInputStream` v7 @kind this, `long` v8 ) @signature `Lcom/google/firebase/perf/network/InstrHttpInputStream;.skip:(J)J` @AccessFlag PUBLIC {

  # return;
}
