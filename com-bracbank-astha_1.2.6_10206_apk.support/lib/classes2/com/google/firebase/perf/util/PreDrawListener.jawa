record `com.google.firebase.perf.util.PreDrawListener` @kind class @AccessFlag PUBLIC extends `android.view.ViewTreeObserver$OnPreDrawListener` @kind interface {
  `java.lang.Runnable` `com.google.firebase.perf.util.PreDrawListener.callback` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.google.firebase.perf.util.PreDrawListener.mainThreadHandler` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `com.google.firebase.perf.util.PreDrawListener.viewReference` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.perf.util.PreDrawListener` v2 @kind this, `android.view.View` v3 @kind object, `java.lang.Runnable` v4 @kind object) @signature `Lcom/google/firebase/perf/util/PreDrawListener;.<init>:(Landroid/view/View;Ljava/lang/Runnable;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `registerForNextDraw`(`android.view.View` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/firebase/perf/util/PreDrawListener;.registerForNextDraw:(Landroid/view/View;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `onPreDraw`(`com.google.firebase.perf.util.PreDrawListener` v3 @kind this) @signature `Lcom/google/firebase/perf/util/PreDrawListener;.onPreDraw:()Z` @AccessFlag PUBLIC {

  # return;
}
