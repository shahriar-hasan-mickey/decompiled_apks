record `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` @kind class @AccessFlag  {
  `long` `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.backgroundCapacity` @AccessFlag PRIVATE;
  `com.google.firebase.perf.util.Rate` `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.backgroundRate` @AccessFlag PRIVATE;
  `long` `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.capacity` @AccessFlag PRIVATE;
  `com.google.firebase.perf.util.Clock` `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.clock` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.foregroundCapacity` @AccessFlag PRIVATE;
  `com.google.firebase.perf.util.Rate` `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.foregroundRate` @AccessFlag PRIVATE;
  `boolean` `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.isLogcatEnabled` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.perf.util.Timer` `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.lastTimeTokenReplenished` @AccessFlag PRIVATE;
  `com.google.firebase.perf.util.Rate` `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.rate` @AccessFlag PRIVATE;
  `double` `com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.tokenCount` @AccessFlag PRIVATE;
}
global `long` `@@com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.MICROS_IN_A_SECOND` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.firebase.perf.logging.AndroidLogger` `@@com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` v0 @kind this, `com.google.firebase.perf.util.Rate` v1 @kind object, `long` v2 , `com.google.firebase.perf.util.Clock` v4 @kind object, `com.google.firebase.perf.config.ConfigResolver` v5 @kind object, `java.lang.String` v6 @kind object, `boolean` v7 ) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.<init>:(Lcom/google/firebase/perf/util/Rate;JLcom/google/firebase/perf/util/Clock;Lcom/google/firebase/perf/config/ConfigResolver;Ljava/lang/String;Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `long` `getBlimitEvents`(`com.google.firebase.perf.config.ConfigResolver` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.getBlimitEvents:(Lcom/google/firebase/perf/config/ConfigResolver;Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `getBlimitSec`(`com.google.firebase.perf.config.ConfigResolver` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.getBlimitSec:(Lcom/google/firebase/perf/config/ConfigResolver;Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `getFlimitEvents`(`com.google.firebase.perf.config.ConfigResolver` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.getFlimitEvents:(Lcom/google/firebase/perf/config/ConfigResolver;Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `getFlimitSec`(`com.google.firebase.perf.config.ConfigResolver` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.getFlimitSec:(Lcom/google/firebase/perf/config/ConfigResolver;Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `setRateByReadingRemoteConfigValues`(`com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` v16 @kind this, `com.google.firebase.perf.config.ConfigResolver` v17 @kind object, `java.lang.String` v18 @kind object, `boolean` v19 ) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.setRateByReadingRemoteConfigValues:(Lcom/google/firebase/perf/config/ConfigResolver;Ljava/lang/String;Z)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `changeRate`(`com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` v2 @kind this, `boolean` v3 ) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.changeRate:(Z)V` @AccessFlag  {

  # return;
}
procedure `boolean` `check`(`com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` v5 @kind this, `com.google.firebase.perf.v1.PerfMetric` v6 @kind object) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.check:(Lcom/google/firebase/perf/v1/PerfMetric;)Z` @AccessFlag  {

  # return;
}
procedure `long` `getBackgroundCapacity`(`com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` v2 @kind this) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.getBackgroundCapacity:()J` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.perf.util.Rate` `getBackgroundRate`(`com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` v1 @kind this) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.getBackgroundRate:()Lcom/google/firebase/perf/util/Rate;` @AccessFlag  {

  # return;
}
procedure `long` `getForegroundCapacity`(`com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` v2 @kind this) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.getForegroundCapacity:()J` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.perf.util.Rate` `getForegroundRate`(`com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` v1 @kind this) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.getForegroundRate:()Lcom/google/firebase/perf/util/Rate;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.perf.util.Rate` `getRate`(`com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` v1 @kind this) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.getRate:()Lcom/google/firebase/perf/util/Rate;` @AccessFlag  {

  # return;
}
procedure `void` `setRate`(`com.google.firebase.perf.transport.RateLimiter$RateLimiterImpl` v0 @kind this, `com.google.firebase.perf.util.Rate` v1 @kind object) @signature `Lcom/google/firebase/perf/transport/RateLimiter$RateLimiterImpl;.setRate:(Lcom/google/firebase/perf/util/Rate;)V` @AccessFlag  {

  # return;
}
