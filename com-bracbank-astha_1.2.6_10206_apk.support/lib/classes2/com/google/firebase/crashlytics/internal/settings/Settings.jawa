record `com.google.firebase.crashlytics.internal.settings.Settings` @kind class @AccessFlag PUBLIC {
  `int` `com.google.firebase.crashlytics.internal.settings.Settings.cacheDuration` @AccessFlag PUBLIC_FINAL;
  `long` `com.google.firebase.crashlytics.internal.settings.Settings.expiresAtMillis` @AccessFlag PUBLIC_FINAL;
  `com.google.firebase.crashlytics.internal.settings.Settings$FeatureFlagData` `com.google.firebase.crashlytics.internal.settings.Settings.featureFlagData` @AccessFlag PUBLIC_FINAL;
  `double` `com.google.firebase.crashlytics.internal.settings.Settings.onDemandBackoffBase` @AccessFlag PUBLIC_FINAL;
  `int` `com.google.firebase.crashlytics.internal.settings.Settings.onDemandBackoffStepDurationSeconds` @AccessFlag PUBLIC_FINAL;
  `double` `com.google.firebase.crashlytics.internal.settings.Settings.onDemandUploadRatePerMinute` @AccessFlag PUBLIC_FINAL;
  `com.google.firebase.crashlytics.internal.settings.Settings$SessionData` `com.google.firebase.crashlytics.internal.settings.Settings.sessionData` @AccessFlag PUBLIC_FINAL;
  `int` `com.google.firebase.crashlytics.internal.settings.Settings.settingsVersion` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.crashlytics.internal.settings.Settings` v0 @kind this, `long` v1 , `com.google.firebase.crashlytics.internal.settings.Settings$SessionData` v3 @kind object, `com.google.firebase.crashlytics.internal.settings.Settings$FeatureFlagData` v4 @kind object, `int` v5 , `int` v6 , `double` v7 , `double` v9 , `int` v11 ) @signature `Lcom/google/firebase/crashlytics/internal/settings/Settings;.<init>:(JLcom/google/firebase/crashlytics/internal/settings/Settings$SessionData;Lcom/google/firebase/crashlytics/internal/settings/Settings$FeatureFlagData;IIDDI)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isExpired`(`com.google.firebase.crashlytics.internal.settings.Settings` v3 @kind this, `long` v4 ) @signature `Lcom/google/firebase/crashlytics/internal/settings/Settings;.isExpired:(J)Z` @AccessFlag PUBLIC {

  # return;
}
