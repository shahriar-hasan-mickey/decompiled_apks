record `com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `int` `com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1.current` @AccessFlag PRIVATE;
  `com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2` `com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1` v0 @kind this, `com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2` v1 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap$Builder$Base1_2$1;.<init>:(Lcom/google/firebase/database/collection/RBTreeSortedMap$Builder$Base1_2;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1` v1 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap$Builder$Base1_2$1;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk` `next`(`com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1` v7 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap$Builder$Base1_2$1;.next:()Lcom/google/firebase/database/collection/RBTreeSortedMap$Builder$BooleanChunk;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1` v1 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap$Builder$Base1_2$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `remove`(`com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1` v0 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap$Builder$Base1_2$1;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
