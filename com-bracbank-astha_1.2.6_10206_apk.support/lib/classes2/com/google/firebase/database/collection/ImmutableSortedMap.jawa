record `com.google.firebase.database.collection.ImmutableSortedMap` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Iterable` @kind interface {
}
procedure `void` `<init>`(`com.google.firebase.database.collection.ImmutableSortedMap` v0 @kind this) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `containsKey`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.database.collection.ImmutableSortedMap` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Comparator` `getComparator`() @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.getComparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getMaxKey`() @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.getMaxKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getMinKey`() @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.getMinKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getPredecessorKey`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.getPredecessorKey:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getSuccessorKey`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.getSuccessorKey:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.database.collection.ImmutableSortedMap` v3 @kind this) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `inOrderTraversal`(`com.google.firebase.database.collection.LLRBNode$NodeVisitor` v0 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.inOrderTraversal:(Lcom/google/firebase/database/collection/LLRBNode$NodeVisitor;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `indexOf`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.collection.ImmutableSortedMap` `insert`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.insert:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/firebase/database/collection/ImmutableSortedMap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Iterator` `iterator`() @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Iterator` `iteratorFrom`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.iteratorFrom:(Ljava/lang/Object;)Ljava/util/Iterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.database.collection.ImmutableSortedMap` `remove`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.remove:(Ljava/lang/Object;)Lcom/google/firebase/database/collection/ImmutableSortedMap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Iterator` `reverseIterator`() @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.reverseIterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Iterator` `reverseIteratorFrom`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.reverseIteratorFrom:(Ljava/lang/Object;)Ljava/util/Iterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `size`() @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.size:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.database.collection.ImmutableSortedMap` v5 @kind this) @signature `Lcom/google/firebase/database/collection/ImmutableSortedMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
