record `com.google.firebase.database.collection.StandardComparator` @kind class @AccessFlag PUBLIC extends `java.util.Comparator` @kind interface {
}
global `com.google.firebase.database.collection.StandardComparator` `@@com.google.firebase.database.collection.StandardComparator.INSTANCE` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/database/collection/StandardComparator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.collection.StandardComparator` v0 @kind this) @signature `Lcom/google/firebase/database/collection/StandardComparator;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.collection.StandardComparator` `getComparator`(`java.lang.Class` v0 @kind object) @signature `Lcom/google/firebase/database/collection/StandardComparator;.getComparator:(Ljava/lang/Class;)Lcom/google/firebase/database/collection/StandardComparator;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compare`(`com.google.firebase.database.collection.StandardComparator` v0 @kind this, `java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lcom/google/firebase/database/collection/StandardComparator;.compare:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compare`(`com.google.firebase.database.collection.StandardComparator` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/firebase/database/collection/StandardComparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
