record `com.google.firebase.database.collection.RBTreeSortedMap` @kind class @AccessFlag PUBLIC extends `com.google.firebase.database.collection.ImmutableSortedMap` @kind class {
  `java.util.Comparator` `com.google.firebase.database.collection.RBTreeSortedMap.comparator` @AccessFlag PRIVATE;
  `com.google.firebase.database.collection.LLRBNode` `com.google.firebase.database.collection.RBTreeSortedMap.root` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.database.collection.RBTreeSortedMap` v0 @kind this, `com.google.firebase.database.collection.LLRBNode` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.<init>:(Lcom/google/firebase/database/collection/LLRBNode;Ljava/util/Comparator;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.collection.RBTreeSortedMap` v0 @kind this, `com.google.firebase.database.collection.LLRBNode` v1 @kind object, `java.util.Comparator` v2 @kind object, `com.google.firebase.database.collection.RBTreeSortedMap$1` v3 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.<init>:(Lcom/google/firebase/database/collection/LLRBNode;Ljava/util/Comparator;Lcom/google/firebase/database/collection/RBTreeSortedMap$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.database.collection.RBTreeSortedMap` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.<init>:(Ljava/util/Comparator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.database.collection.RBTreeSortedMap` `buildFrom`(`java.util.List` v0 @kind object, `java.util.Map` v1 @kind object, `com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.buildFrom:(Ljava/util/List;Ljava/util/Map;Lcom/google/firebase/database/collection/ImmutableSortedMap$Builder$KeyTranslator;Ljava/util/Comparator;)Lcom/google/firebase/database/collection/RBTreeSortedMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.database.collection.RBTreeSortedMap` `fromMap`(`java.util.Map` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.fromMap:(Ljava/util/Map;Ljava/util/Comparator;)Lcom/google/firebase/database/collection/RBTreeSortedMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `getNode`(`com.google.firebase.database.collection.RBTreeSortedMap` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.getNode:(Ljava/lang/Object;)Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `containsKey`(`com.google.firebase.database.collection.RBTreeSortedMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.firebase.database.collection.RBTreeSortedMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Comparator` `getComparator`(`com.google.firebase.database.collection.RBTreeSortedMap` v1 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.getComparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getMaxKey`(`com.google.firebase.database.collection.RBTreeSortedMap` v1 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.getMaxKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getMinKey`(`com.google.firebase.database.collection.RBTreeSortedMap` v1 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.getMinKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getPredecessorKey`(`com.google.firebase.database.collection.RBTreeSortedMap` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.getPredecessorKey:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.LLRBNode` `getRoot`(`com.google.firebase.database.collection.RBTreeSortedMap` v1 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.getRoot:()Lcom/google/firebase/database/collection/LLRBNode;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `getSuccessorKey`(`com.google.firebase.database.collection.RBTreeSortedMap` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.getSuccessorKey:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `inOrderTraversal`(`com.google.firebase.database.collection.RBTreeSortedMap` v1 @kind this, `com.google.firebase.database.collection.LLRBNode$NodeVisitor` v2 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.inOrderTraversal:(Lcom/google/firebase/database/collection/LLRBNode$NodeVisitor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `indexOf`(`com.google.firebase.database.collection.RBTreeSortedMap` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.ImmutableSortedMap` `insert`(`com.google.firebase.database.collection.RBTreeSortedMap` v8 @kind this, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.insert:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/firebase/database/collection/ImmutableSortedMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.firebase.database.collection.RBTreeSortedMap` v1 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.firebase.database.collection.RBTreeSortedMap` v5 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iteratorFrom`(`com.google.firebase.database.collection.RBTreeSortedMap` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.iteratorFrom:(Ljava/lang/Object;)Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.ImmutableSortedMap` `remove`(`com.google.firebase.database.collection.RBTreeSortedMap` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.remove:(Ljava/lang/Object;)Lcom/google/firebase/database/collection/ImmutableSortedMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `reverseIterator`(`com.google.firebase.database.collection.RBTreeSortedMap` v5 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.reverseIterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `reverseIteratorFrom`(`com.google.firebase.database.collection.RBTreeSortedMap` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.reverseIteratorFrom:(Ljava/lang/Object;)Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.firebase.database.collection.RBTreeSortedMap` v1 @kind this) @signature `Lcom/google/firebase/database/collection/RBTreeSortedMap;.size:()I` @AccessFlag PUBLIC {

  # return;
}
