record `com.google.firebase.firestore.index.IndexByteEncoder` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.firestore.index.IndexByteEncoder$AscendingIndexByteEncoder` `com.google.firebase.firestore.index.IndexByteEncoder.ascending` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.index.IndexByteEncoder$DescendingIndexByteEncoder` `com.google.firebase.firestore.index.IndexByteEncoder.descending` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.index.OrderedCodeWriter` `com.google.firebase.firestore.index.IndexByteEncoder.orderedCode` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.firestore.index.IndexByteEncoder` v1 @kind this) @signature `Lcom/google/firebase/firestore/index/IndexByteEncoder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.index.OrderedCodeWriter` `access$000`(`com.google.firebase.firestore.index.IndexByteEncoder` v0 @kind object) @signature `Lcom/google/firebase/firestore/index/IndexByteEncoder;.access$000:(Lcom/google/firebase/firestore/index/IndexByteEncoder;)Lcom/google/firebase/firestore/index/OrderedCodeWriter;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.index.DirectionalIndexByteEncoder` `forKind`(`com.google.firebase.firestore.index.IndexByteEncoder` v1 @kind this, `com.google.firebase.firestore.model.FieldIndex$Segment$Kind` v2 @kind object) @signature `Lcom/google/firebase/firestore/index/IndexByteEncoder;.forKind:(Lcom/google/firebase/firestore/model/FieldIndex$Segment$Kind;)Lcom/google/firebase/firestore/index/DirectionalIndexByteEncoder;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getEncodedBytes`(`com.google.firebase.firestore.index.IndexByteEncoder` v1 @kind this) @signature `Lcom/google/firebase/firestore/index/IndexByteEncoder;.getEncodedBytes:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`com.google.firebase.firestore.index.IndexByteEncoder` v1 @kind this) @signature `Lcom/google/firebase/firestore/index/IndexByteEncoder;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `seed`(`com.google.firebase.firestore.index.IndexByteEncoder` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/google/firebase/firestore/index/IndexByteEncoder;.seed:([B)V` @AccessFlag PUBLIC {

  # return;
}
