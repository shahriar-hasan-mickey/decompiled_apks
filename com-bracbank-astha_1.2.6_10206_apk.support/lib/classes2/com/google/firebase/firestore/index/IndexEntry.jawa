record `com.google.firebase.firestore.index.IndexEntry` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Comparable` @kind interface {
}
procedure `void` `<init>`(`com.google.firebase.firestore.index.IndexEntry` v0 @kind this) @signature `Lcom/google/firebase/firestore/index/IndexEntry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.index.IndexEntry` `create`(`int` v1 , `com.google.firebase.firestore.model.DocumentKey` v2 @kind object, `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/google/firebase/firestore/index/IndexEntry;.create:(ILcom/google/firebase/firestore/model/DocumentKey;[B[B)Lcom/google/firebase/firestore/index/IndexEntry;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.firestore.index.IndexEntry` v2 @kind this, `com.google.firebase.firestore.index.IndexEntry` v3 @kind object) @signature `Lcom/google/firebase/firestore/index/IndexEntry;.compareTo:(Lcom/google/firebase/firestore/index/IndexEntry;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.firestore.index.IndexEntry` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/firestore/index/IndexEntry;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `byte`[] `getArrayValue`() @signature `Lcom/google/firebase/firestore/index/IndexEntry;.getArrayValue:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `getDirectionalValue`() @signature `Lcom/google/firebase/firestore/index/IndexEntry;.getDirectionalValue:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.firestore.model.DocumentKey` `getDocumentKey`() @signature `Lcom/google/firebase/firestore/index/IndexEntry;.getDocumentKey:()Lcom/google/firebase/firestore/model/DocumentKey;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getIndexId`() @signature `Lcom/google/firebase/firestore/index/IndexEntry;.getIndexId:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
