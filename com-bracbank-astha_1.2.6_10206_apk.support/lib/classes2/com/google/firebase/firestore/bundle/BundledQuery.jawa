record `com.google.firebase.firestore.bundle.BundledQuery` @kind class @AccessFlag PUBLIC extends `com.google.firebase.firestore.bundle.BundleElement` @kind interface {
  `com.google.firebase.firestore.core.Query$LimitType` `com.google.firebase.firestore.bundle.BundledQuery.limitType` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.core.Target` `com.google.firebase.firestore.bundle.BundledQuery.target` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.firestore.bundle.BundledQuery` v0 @kind this, `com.google.firebase.firestore.core.Target` v1 @kind object, `com.google.firebase.firestore.core.Query$LimitType` v2 @kind object) @signature `Lcom/google/firebase/firestore/bundle/BundledQuery;.<init>:(Lcom/google/firebase/firestore/core/Target;Lcom/google/firebase/firestore/core/Query$LimitType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.firestore.bundle.BundledQuery` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/firebase/firestore/bundle/BundledQuery;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Query$LimitType` `getLimitType`(`com.google.firebase.firestore.bundle.BundledQuery` v1 @kind this) @signature `Lcom/google/firebase/firestore/bundle/BundledQuery;.getLimitType:()Lcom/google/firebase/firestore/core/Query$LimitType;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Target` `getTarget`(`com.google.firebase.firestore.bundle.BundledQuery` v1 @kind this) @signature `Lcom/google/firebase/firestore/bundle/BundledQuery;.getTarget:()Lcom/google/firebase/firestore/core/Target;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.firestore.bundle.BundledQuery` v2 @kind this) @signature `Lcom/google/firebase/firestore/bundle/BundledQuery;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
