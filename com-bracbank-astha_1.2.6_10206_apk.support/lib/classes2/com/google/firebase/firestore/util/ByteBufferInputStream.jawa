record `com.google.firebase.firestore.util.ByteBufferInputStream` @kind class @AccessFlag PUBLIC extends `java.io.InputStream` @kind class {
  `java.nio.ByteBuffer` `com.google.firebase.firestore.util.ByteBufferInputStream.buffer` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.firebase.firestore.util.ByteBufferInputStream` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/firebase/firestore/util/ByteBufferInputStream;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `available`(`com.google.firebase.firestore.util.ByteBufferInputStream` v1 @kind this) @signature `Lcom/google/firebase/firestore/util/ByteBufferInputStream;.available:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.firebase.firestore.util.ByteBufferInputStream` v1 @kind this) @signature `Lcom/google/firebase/firestore/util/ByteBufferInputStream;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.google.firebase.firestore.util.ByteBufferInputStream` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/firebase/firestore/util/ByteBufferInputStream;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
