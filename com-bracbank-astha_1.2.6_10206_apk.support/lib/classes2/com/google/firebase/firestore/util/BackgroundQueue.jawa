record `com.google.firebase.firestore.util.BackgroundQueue` @kind class @AccessFlag PUBLIC extends `java.util.concurrent.Executor` @kind interface {
  `java.util.concurrent.Semaphore` `com.google.firebase.firestore.util.BackgroundQueue.completedTasks` @AccessFlag PRIVATE;
  `int` `com.google.firebase.firestore.util.BackgroundQueue.pendingTaskCount` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.firestore.util.BackgroundQueue` v2 @kind this) @signature `Lcom/google/firebase/firestore/util/BackgroundQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.util.BackgroundQueue` v0 @kind object, `java.lang.Runnable` v1 @kind object) @signature `Lcom/google/firebase/firestore/util/BackgroundQueue;.a:(Lcom/google/firebase/firestore/util/BackgroundQueue;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$execute$0`(`com.google.firebase.firestore.util.BackgroundQueue` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lcom/google/firebase/firestore/util/BackgroundQueue;.lambda$execute$0:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `drain`(`com.google.firebase.firestore.util.BackgroundQueue` v3 @kind this) @signature `Lcom/google/firebase/firestore/util/BackgroundQueue;.drain:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `execute`(`com.google.firebase.firestore.util.BackgroundQueue` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/google/firebase/firestore/util/BackgroundQueue;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {

  # return;
}
