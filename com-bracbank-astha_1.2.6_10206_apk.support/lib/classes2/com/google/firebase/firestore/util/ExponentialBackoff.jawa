record `com.google.firebase.firestore.util.ExponentialBackoff` @kind class @AccessFlag PUBLIC {
  `double` `com.google.firebase.firestore.util.ExponentialBackoff.backoffFactor` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.firebase.firestore.util.ExponentialBackoff.currentBaseMs` @AccessFlag PRIVATE;
  `long` `com.google.firebase.firestore.util.ExponentialBackoff.initialDelayMs` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.firebase.firestore.util.ExponentialBackoff.lastAttemptTime` @AccessFlag PRIVATE;
  `long` `com.google.firebase.firestore.util.ExponentialBackoff.maxDelayMs` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.firebase.firestore.util.ExponentialBackoff.nextMaxDelayMs` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.util.AsyncQueue` `com.google.firebase.firestore.util.ExponentialBackoff.queue` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.util.AsyncQueue$TimerId` `com.google.firebase.firestore.util.ExponentialBackoff.timerId` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.util.AsyncQueue$DelayedTask` `com.google.firebase.firestore.util.ExponentialBackoff.timerTask` @AccessFlag PRIVATE;
}
global `double` `@@com.google.firebase.firestore.util.ExponentialBackoff.DEFAULT_BACKOFF_FACTOR` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@com.google.firebase.firestore.util.ExponentialBackoff.DEFAULT_BACKOFF_INITIAL_DELAY_MS` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@com.google.firebase.firestore.util.ExponentialBackoff.DEFAULT_BACKOFF_MAX_DELAY_MS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.google.firebase.firestore.util.ExponentialBackoff` v9 @kind this, `com.google.firebase.firestore.util.AsyncQueue` v10 @kind object, `com.google.firebase.firestore.util.AsyncQueue$TimerId` v11 @kind object) @signature `Lcom/google/firebase/firestore/util/ExponentialBackoff;.<init>:(Lcom/google/firebase/firestore/util/AsyncQueue;Lcom/google/firebase/firestore/util/AsyncQueue$TimerId;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.util.ExponentialBackoff` v0 @kind this, `com.google.firebase.firestore.util.AsyncQueue` v1 @kind object, `com.google.firebase.firestore.util.AsyncQueue$TimerId` v2 @kind object, `long` v3 , `double` v5 , `long` v7 ) @signature `Lcom/google/firebase/firestore/util/ExponentialBackoff;.<init>:(Lcom/google/firebase/firestore/util/AsyncQueue;Lcom/google/firebase/firestore/util/AsyncQueue$TimerId;JDJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.util.ExponentialBackoff` v0 @kind object, `java.lang.Runnable` v1 @kind object) @signature `Lcom/google/firebase/firestore/util/ExponentialBackoff;.a:(Lcom/google/firebase/firestore/util/ExponentialBackoff;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `long` `jitterDelayMs`(`com.google.firebase.firestore.util.ExponentialBackoff` v4 @kind this) @signature `Lcom/google/firebase/firestore/util/ExponentialBackoff;.jitterDelayMs:()J` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `lambda$backoffAndRun$0`(`com.google.firebase.firestore.util.ExponentialBackoff` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/google/firebase/firestore/util/ExponentialBackoff;.lambda$backoffAndRun$0:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `backoffAndRun`(`com.google.firebase.firestore.util.ExponentialBackoff` v11 @kind this, `java.lang.Runnable` v12 @kind object) @signature `Lcom/google/firebase/firestore/util/ExponentialBackoff;.backoffAndRun:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `cancel`(`com.google.firebase.firestore.util.ExponentialBackoff` v1 @kind this) @signature `Lcom/google/firebase/firestore/util/ExponentialBackoff;.cancel:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`com.google.firebase.firestore.util.ExponentialBackoff` v2 @kind this) @signature `Lcom/google/firebase/firestore/util/ExponentialBackoff;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `resetToMax`(`com.google.firebase.firestore.util.ExponentialBackoff` v2 @kind this) @signature `Lcom/google/firebase/firestore/util/ExponentialBackoff;.resetToMax:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTemporaryMaxDelay`(`com.google.firebase.firestore.util.ExponentialBackoff` v0 @kind this, `long` v1 ) @signature `Lcom/google/firebase/firestore/util/ExponentialBackoff;.setTemporaryMaxDelay:(J)V` @AccessFlag PUBLIC {

  # return;
}
