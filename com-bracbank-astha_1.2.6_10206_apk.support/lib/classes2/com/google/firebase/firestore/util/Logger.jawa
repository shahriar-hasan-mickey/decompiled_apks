record `com.google.firebase.firestore.util.Logger` @kind class @AccessFlag PUBLIC {
}
global `com.google.firebase.firestore.util.Logger$Level` `@@com.google.firebase.firestore.util.Logger.logLevel` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/firestore/util/Logger;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.util.Logger` v0 @kind this) @signature `Lcom/google/firebase/firestore/util/Logger;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `debug`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lcom/google/firebase/firestore/util/Logger;.debug:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `doLog`(`com.google.firebase.firestore.util.Logger$Level` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `java.lang.Object`[] v8 @kind object) @signature `Lcom/google/firebase/firestore/util/Logger;.doLog:(Lcom/google/firebase/firestore/util/Logger$Level;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isDebugEnabled`() @signature `Lcom/google/firebase/firestore/util/Logger;.isDebugEnabled:()Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `setLogLevel`(`com.google.firebase.firestore.util.Logger$Level` v0 @kind object) @signature `Lcom/google/firebase/firestore/util/Logger;.setLogLevel:(Lcom/google/firebase/firestore/util/Logger$Level;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `warn`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lcom/google/firebase/firestore/util/Logger;.warn:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
