record `com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.firebase.firestore.auth.CredentialsProvider` @kind class {
  `com.google.firebase.firestore.util.Listener` `com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider.changeListener` @AccessFlag PRIVATE;
  `boolean` `com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider.forceRefresh` @AccessFlag PRIVATE;
  `com.google.firebase.auth.internal.IdTokenListener` `com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider.idTokenListener` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.auth.internal.InternalAuthProvider` `com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider.internalAuthProvider` @AccessFlag PRIVATE;
  `int` `com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider.tokenCounter` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider.LOG_TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v1 @kind this, `com.google.firebase.inject.Deferred` v2 @kind object) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.<init>:(Lcom/google/firebase/inject/Deferred;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `a`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v0 @kind object, `int` v1 , `com.google.android.gms.tasks.Task` v2 @kind object) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.a:(Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;ILcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v0 @kind object, `com.google.firebase.inject.Provider` v1 @kind object) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.b:(Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;Lcom/google/firebase/inject/Provider;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v0 @kind object, `com.google.firebase.internal.InternalTokenResult` v1 @kind object) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.c:(Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;Lcom/google/firebase/internal/InternalTokenResult;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.auth.User` `getUser`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v2 @kind this) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.getUser:()Lcom/google/firebase/firestore/auth/User;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `lambda$getToken$2`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v1 @kind this, `int` v2 , `com.google.android.gms.tasks.Task` v3 @kind object) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.lambda$getToken$2:(ILcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$new$0`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v0 @kind this, `com.google.firebase.internal.InternalTokenResult` v1 @kind object) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.lambda$new$0:(Lcom/google/firebase/internal/InternalTokenResult;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$new$1`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v1 @kind this, `com.google.firebase.inject.Provider` v2 @kind object) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.lambda$new$1:(Lcom/google/firebase/inject/Provider;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `onIdTokenChanged`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v2 @kind this) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.onIdTokenChanged:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `getToken`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v4 @kind this) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.getToken:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `invalidateToken`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v1 @kind this) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.invalidateToken:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeChangeListener`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v2 @kind this) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.removeChangeListener:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setChangeListener`(`com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider` v1 @kind this, `com.google.firebase.firestore.util.Listener` v2 @kind object) @signature `Lcom/google/firebase/firestore/auth/FirebaseAuthCredentialsProvider;.setChangeListener:(Lcom/google/firebase/firestore/util/Listener;)V` @AccessFlag PUBLIC {

  # return;
}
