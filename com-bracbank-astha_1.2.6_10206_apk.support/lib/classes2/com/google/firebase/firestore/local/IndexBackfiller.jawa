record `com.google.firebase.firestore.local.IndexBackfiller` @kind class @AccessFlag PUBLIC {
  `com.google.common.base.Supplier` `com.google.firebase.firestore.local.IndexBackfiller.indexManagerOfCurrentUser` @AccessFlag PRIVATE_FINAL;
  `com.google.common.base.Supplier` `com.google.firebase.firestore.local.IndexBackfiller.localDocumentsViewOfCurrentUser` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.firebase.firestore.local.IndexBackfiller.maxDocumentsToProcess` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.local.Persistence` `com.google.firebase.firestore.local.IndexBackfiller.persistence` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.local.IndexBackfiller$Scheduler` `com.google.firebase.firestore.local.IndexBackfiller.scheduler` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.google.firebase.firestore.local.IndexBackfiller.INITIAL_BACKFILL_DELAY_MS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.firestore.local.IndexBackfiller.LOG_TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.firebase.firestore.local.IndexBackfiller.MAX_DOCUMENTS_TO_PROCESS` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.firebase.firestore.local.IndexBackfiller.REGULAR_BACKFILL_DELAY_MS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.local.IndexBackfiller` v1 @kind this, `com.google.firebase.firestore.local.Persistence` v2 @kind object, `com.google.firebase.firestore.util.AsyncQueue` v3 @kind object, `com.google.common.base.Supplier` v4 @kind object, `com.google.common.base.Supplier` v5 @kind object) @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.<init>:(Lcom/google/firebase/firestore/local/Persistence;Lcom/google/firebase/firestore/util/AsyncQueue;Lcom/google/common/base/Supplier;Lcom/google/common/base/Supplier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.local.IndexBackfiller` v2 @kind this, `com.google.firebase.firestore.local.Persistence` v3 @kind object, `com.google.firebase.firestore.util.AsyncQueue` v4 @kind object, `com.google.firebase.firestore.local.LocalStore` v5 @kind object) @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.<init>:(Lcom/google/firebase/firestore/local/Persistence;Lcom/google/firebase/firestore/util/AsyncQueue;Lcom/google/firebase/firestore/local/LocalStore;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Integer` `a`(`com.google.firebase.firestore.local.IndexBackfiller` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.a:(Lcom/google/firebase/firestore/local/IndexBackfiller;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `long` `access$000`() @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.access$000:()J` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `long` `access$100`() @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.access$100:()J` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.model.FieldIndex$IndexOffset` `getNewOffset`(`com.google.firebase.firestore.local.IndexBackfiller` v4 @kind this, `com.google.firebase.firestore.model.FieldIndex$IndexOffset` v5 @kind object, `com.google.firebase.firestore.local.LocalDocumentsResult` v6 @kind object) @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.getNewOffset:(Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;Lcom/google/firebase/firestore/local/LocalDocumentsResult;)Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Integer` `lambda$backfill$0`(`com.google.firebase.firestore.local.IndexBackfiller` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.lambda$backfill$0:()Ljava/lang/Integer;` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `int` `writeEntriesForCollectionGroup`(`com.google.firebase.firestore.local.IndexBackfiller` v5 @kind this, `java.lang.String` v6 @kind object, `int` v7 ) @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.writeEntriesForCollectionGroup:(Ljava/lang/String;I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `writeIndexEntries`(`com.google.firebase.firestore.local.IndexBackfiller` v7 @kind this) @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.writeIndexEntries:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `backfill`(`com.google.firebase.firestore.local.IndexBackfiller` v3 @kind this) @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.backfill:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.local.IndexBackfiller$Scheduler` `getScheduler`(`com.google.firebase.firestore.local.IndexBackfiller` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.getScheduler:()Lcom/google/firebase/firestore/local/IndexBackfiller$Scheduler;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setMaxDocumentsToProcess`(`com.google.firebase.firestore.local.IndexBackfiller` v0 @kind this, `int` v1 ) @signature `Lcom/google/firebase/firestore/local/IndexBackfiller;.setMaxDocumentsToProcess:(I)V` @AccessFlag  {

  # return;
}
