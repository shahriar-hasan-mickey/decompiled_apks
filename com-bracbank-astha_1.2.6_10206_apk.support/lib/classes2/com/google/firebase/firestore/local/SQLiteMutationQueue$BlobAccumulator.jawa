record `com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator` @kind class @AccessFlag  extends `com.google.firebase.firestore.util.Consumer` @kind interface {
  `java.util.ArrayList` `com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator.chunks` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator.more` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteMutationQueue$BlobAccumulator;.<init>:([B)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `access$000`(`com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteMutationQueue$BlobAccumulator;.access$000:(Lcom/google/firebase/firestore/local/SQLiteMutationQueue$BlobAccumulator;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `addChunk`(`com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteMutationQueue$BlobAccumulator;.addChunk:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `accept`(`com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator` v2 @kind this, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteMutationQueue$BlobAccumulator;.accept:(Landroid/database/Cursor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `accept`(`com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteMutationQueue$BlobAccumulator;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `numChunks`(`com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteMutationQueue$BlobAccumulator;.numChunks:()I` @AccessFlag  {

  # return;
}
procedure `com.google.protobuf.ByteString` `result`(`com.google.firebase.firestore.local.SQLiteMutationQueue$BlobAccumulator` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteMutationQueue$BlobAccumulator;.result:()Lcom/google/protobuf/ByteString;` @AccessFlag  {

  # return;
}
