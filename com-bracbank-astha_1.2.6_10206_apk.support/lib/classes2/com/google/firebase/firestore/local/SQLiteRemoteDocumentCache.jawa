record `com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` @kind class @AccessFlag FINAL extends `com.google.firebase.firestore.local.RemoteDocumentCache` @kind interface {
  `com.google.firebase.firestore.local.SQLitePersistence` `com.google.firebase.firestore.local.SQLiteRemoteDocumentCache.db` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.local.IndexManager` `com.google.firebase.firestore.local.SQLiteRemoteDocumentCache.indexManager` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.local.LocalSerializer` `com.google.firebase.firestore.local.SQLiteRemoteDocumentCache.serializer` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.firebase.firestore.local.SQLiteRemoteDocumentCache.BINDS_PER_STATEMENT` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v0 @kind this, `com.google.firebase.firestore.local.SQLitePersistence` v1 @kind object, `com.google.firebase.firestore.local.LocalSerializer` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.<init>:(Lcom/google/firebase/firestore/local/SQLitePersistence;Lcom/google/firebase/firestore/local/LocalSerializer;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v0 @kind object, `com.google.firebase.firestore.util.BackgroundQueue` v1 @kind object, `java.util.Map` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.a:(Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;Lcom/google/firebase/firestore/util/BackgroundQueue;Ljava/util/Map;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v0 @kind object, `com.google.firebase.firestore.util.BackgroundQueue` v1 @kind object, `java.util.Map` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.b:(Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;Lcom/google/firebase/firestore/util/BackgroundQueue;Ljava/util/Map;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `java.util.Map` v4 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.c:(Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;[BIILjava/util/Map;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.model.MutableDocument` `decodeMaybeDocument`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.decodeMaybeDocument:([BII)Lcom/google/firebase/firestore/model/MutableDocument;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Map` `getAll`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v8 @kind this, `java.util.List` v9 @kind object, `com.google.firebase.firestore.model.FieldIndex$IndexOffset` v10 @kind object, `int` v11 ) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.getAll:(Ljava/util/List;Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;I)Ljava/util/Map;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `lambda$getAll$0`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v0 @kind this, `com.google.firebase.firestore.util.BackgroundQueue` v1 @kind object, `java.util.Map` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.lambda$getAll$0:(Lcom/google/firebase/firestore/util/BackgroundQueue;Ljava/util/Map;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$getAll$1`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v0 @kind this, `com.google.firebase.firestore.util.BackgroundQueue` v1 @kind object, `java.util.Map` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.lambda$getAll$1:(Lcom/google/firebase/firestore/util/BackgroundQueue;Ljava/util/Map;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$processRowInBackground$2`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `java.util.Map` v4 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.lambda$processRowInBackground$2:([BIILjava/util/Map;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `processRowInBackground`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v7 @kind this, `com.google.firebase.firestore.util.BackgroundQueue` v8 @kind object, `java.util.Map` v9 @kind object, `android.database.Cursor` v10 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.processRowInBackground:(Lcom/google/firebase/firestore/util/BackgroundQueue;Ljava/util/Map;Landroid/database/Cursor;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `add`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v7 @kind this, `com.google.firebase.firestore.model.MutableDocument` v8 @kind object, `com.google.firebase.firestore.model.SnapshotVersion` v9 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.add:(Lcom/google/firebase/firestore/model/MutableDocument;Lcom/google/firebase/firestore/model/SnapshotVersion;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.MutableDocument` `get`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v1 @kind this, `com.google.firebase.firestore.model.DocumentKey` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.get:(Lcom/google/firebase/firestore/model/DocumentKey;)Lcom/google/firebase/firestore/model/MutableDocument;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `getAll`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v1 @kind this, `com.google.firebase.firestore.model.ResourcePath` v2 @kind object, `com.google.firebase.firestore.model.FieldIndex$IndexOffset` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.getAll:(Lcom/google/firebase/firestore/model/ResourcePath;Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `getAll`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v5 @kind this, `java.lang.Iterable` v6 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.getAll:(Ljava/lang/Iterable;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `getAll`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v4 @kind this, `java.lang.String` v5 @kind object, `com.google.firebase.firestore.model.FieldIndex$IndexOffset` v6 @kind object, `int` v7 ) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.getAll:(Ljava/lang/String;Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;I)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeAll`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.removeAll:(Ljava/util/Collection;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setIndexManager`(`com.google.firebase.firestore.local.SQLiteRemoteDocumentCache` v0 @kind this, `com.google.firebase.firestore.local.IndexManager` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteRemoteDocumentCache;.setIndexManager:(Lcom/google/firebase/firestore/local/IndexManager;)V` @AccessFlag PUBLIC {

  # return;
}
