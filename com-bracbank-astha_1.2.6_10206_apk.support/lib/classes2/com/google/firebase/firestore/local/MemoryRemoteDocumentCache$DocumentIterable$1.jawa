record `com.google.firebase.firestore.local.MemoryRemoteDocumentCache$DocumentIterable$1` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `com.google.firebase.firestore.local.MemoryRemoteDocumentCache$DocumentIterable` `com.google.firebase.firestore.local.MemoryRemoteDocumentCache$DocumentIterable$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Iterator` `com.google.firebase.firestore.local.MemoryRemoteDocumentCache$DocumentIterable$1.val$iterator` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.firestore.local.MemoryRemoteDocumentCache$DocumentIterable$1` v0 @kind this, `com.google.firebase.firestore.local.MemoryRemoteDocumentCache$DocumentIterable` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/MemoryRemoteDocumentCache$DocumentIterable$1;.<init>:(Lcom/google/firebase/firestore/local/MemoryRemoteDocumentCache$DocumentIterable;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`com.google.firebase.firestore.local.MemoryRemoteDocumentCache$DocumentIterable$1` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/MemoryRemoteDocumentCache$DocumentIterable$1;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.Document` `next`(`com.google.firebase.firestore.local.MemoryRemoteDocumentCache$DocumentIterable$1` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/MemoryRemoteDocumentCache$DocumentIterable$1;.next:()Lcom/google/firebase/firestore/model/Document;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.firebase.firestore.local.MemoryRemoteDocumentCache$DocumentIterable$1` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/MemoryRemoteDocumentCache$DocumentIterable$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
