record `com.google.firebase.firestore.local.MutationQueue` @kind interface @AccessFlag ABSTRACT_INTERFACE {
}
procedure `void` `acknowledgeBatch`(`com.google.firebase.firestore.model.mutation.MutationBatch` v0 @kind object, `com.google.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/MutationQueue;.acknowledgeBatch:(Lcom/google/firebase/firestore/model/mutation/MutationBatch;Lcom/google/protobuf/ByteString;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.firestore.model.mutation.MutationBatch` `addMutationBatch`(`com.google.firebase.Timestamp` v0 @kind object, `java.util.List` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/MutationQueue;.addMutationBatch:(Lcom/google/firebase/Timestamp;Ljava/util/List;Ljava/util/List;)Lcom/google/firebase/firestore/model/mutation/MutationBatch;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `getAllMutationBatches`() @signature `Lcom/google/firebase/firestore/local/MutationQueue;.getAllMutationBatches:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `getAllMutationBatchesAffectingDocumentKey`(`com.google.firebase.firestore.model.DocumentKey` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/MutationQueue;.getAllMutationBatchesAffectingDocumentKey:(Lcom/google/firebase/firestore/model/DocumentKey;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `getAllMutationBatchesAffectingDocumentKeys`(`java.lang.Iterable` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/MutationQueue;.getAllMutationBatchesAffectingDocumentKeys:(Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `getAllMutationBatchesAffectingQuery`(`com.google.firebase.firestore.core.Query` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/MutationQueue;.getAllMutationBatchesAffectingQuery:(Lcom/google/firebase/firestore/core/Query;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getHighestUnacknowledgedBatchId`() @signature `Lcom/google/firebase/firestore/local/MutationQueue;.getHighestUnacknowledgedBatchId:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.protobuf.ByteString` `getLastStreamToken`() @signature `Lcom/google/firebase/firestore/local/MutationQueue;.getLastStreamToken:()Lcom/google/protobuf/ByteString;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.firestore.model.mutation.MutationBatch` `getNextMutationBatchAfterBatchId`(`int` v0 ) @signature `Lcom/google/firebase/firestore/local/MutationQueue;.getNextMutationBatchAfterBatchId:(I)Lcom/google/firebase/firestore/model/mutation/MutationBatch;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Lcom/google/firebase/firestore/local/MutationQueue;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.firestore.model.mutation.MutationBatch` `lookupMutationBatch`(`int` v0 ) @signature `Lcom/google/firebase/firestore/local/MutationQueue;.lookupMutationBatch:(I)Lcom/google/firebase/firestore/model/mutation/MutationBatch;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `performConsistencyCheck`() @signature `Lcom/google/firebase/firestore/local/MutationQueue;.performConsistencyCheck:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `removeMutationBatch`(`com.google.firebase.firestore.model.mutation.MutationBatch` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/MutationQueue;.removeMutationBatch:(Lcom/google/firebase/firestore/model/mutation/MutationBatch;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setLastStreamToken`(`com.google.protobuf.ByteString` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/MutationQueue;.setLastStreamToken:(Lcom/google/protobuf/ByteString;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `start`() @signature `Lcom/google/firebase/firestore/local/MutationQueue;.start:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
