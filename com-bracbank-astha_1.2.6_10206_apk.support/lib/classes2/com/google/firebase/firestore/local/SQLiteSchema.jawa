record `com.google.firebase.firestore.local.SQLiteSchema` @kind class @AccessFlag  {
  `android.database.sqlite.SQLiteDatabase` `com.google.firebase.firestore.local.SQLiteSchema.db` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.local.LocalSerializer` `com.google.firebase.firestore.local.SQLiteSchema.serializer` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.firebase.firestore.local.SQLiteSchema.MIGRATION_BATCH_SIZE` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.firebase.firestore.local.SQLiteSchema.VERSION` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `com.google.firebase.firestore.local.LocalSerializer` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.<init>:(Landroid/database/sqlite/SQLiteDatabase;Lcom/google/firebase/firestore/local/LocalSerializer;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.a:(Lcom/google/firebase/firestore/local/SQLiteSchema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `addPathLength`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.addPathLength:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addPendingDataMigration`(`com.google.firebase.firestore.local.SQLiteSchema` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.addPendingDataMigration:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addReadTime`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.addReadTime:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addSequenceNumber`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.addSequenceNumber:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addTargetCount`(`com.google.firebase.firestore.local.SQLiteSchema` v5 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.addTargetCount:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `b`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.b:(Lcom/google/firebase/firestore/local/SQLiteSchema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.c:(Lcom/google/firebase/firestore/local/SQLiteSchema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `createBundleCache`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.createBundleCache:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `createDataMigrationTable`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.createDataMigrationTable:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `createFieldIndex`(`com.google.firebase.firestore.local.SQLiteSchema` v3 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.createFieldIndex:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `createOverlays`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.createOverlays:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `createV1MutationQueue`(`com.google.firebase.firestore.local.SQLiteSchema` v3 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.createV1MutationQueue:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `createV1RemoteDocumentCache`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.createV1RemoteDocumentCache:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `createV1TargetCache`(`com.google.firebase.firestore.local.SQLiteSchema` v3 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.createV1TargetCache:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `createV8CollectionParentsIndex`(`com.google.firebase.firestore.local.SQLiteSchema` v4 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.createV8CollectionParentsIndex:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Long` `d`(`android.database.Cursor` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.d:(Landroid/database/Cursor;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `dropLastLimboFreeSnapshotVersion`(`com.google.firebase.firestore.local.SQLiteSchema` v3 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.dropLastLimboFreeSnapshotVersion:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `dropV1TargetCache`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.dropV1TargetCache:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`boolean`[] v0 @kind object, `android.database.sqlite.SQLiteStatement` v1 @kind object, `android.database.Cursor` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.e:([ZLandroid/database/sqlite/SQLiteStatement;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `ensurePathLength`(`com.google.firebase.firestore.local.SQLiteSchema` v5 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.ensurePathLength:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `ensureReadTime`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.ensureReadTime:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `ensureSequenceNumbers`(`com.google.firebase.firestore.local.SQLiteSchema` v8 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.ensureSequenceNumbers:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `ensureTargetGlobal`(`com.google.firebase.firestore.local.SQLiteSchema` v5 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.ensureTargetGlobal:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `f`(`com.google.firebase.firestore.local.MemoryIndexManager$MemoryCollectionParentIndex` v0 @kind object, `android.database.sqlite.SQLiteStatement` v1 @kind object, `com.google.firebase.firestore.model.ResourcePath` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.f:(Lcom/google/firebase/firestore/local/MemoryIndexManager$MemoryCollectionParentIndex;Landroid/database/sqlite/SQLiteStatement;Lcom/google/firebase/firestore/model/ResourcePath;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `g`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.g:(Lcom/google/firebase/firestore/local/SQLiteSchema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `h`(`com.google.firebase.firestore.util.Consumer` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.h:(Lcom/google/firebase/firestore/util/Consumer;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `hasReadTime`(`com.google.firebase.firestore.local.SQLiteSchema` v7 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.hasReadTime:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `i`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.i:(Lcom/google/firebase/firestore/local/SQLiteSchema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `ifTablesDontExist`(`com.google.firebase.firestore.local.SQLiteSchema` v6 @kind this, `java.lang.String`[] v7 @kind object, `java.lang.Runnable` v8 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.ifTablesDontExist:([Ljava/lang/String;Ljava/lang/Runnable;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `j`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.j:(Lcom/google/firebase/firestore/local/SQLiteSchema;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `k`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.k:(Lcom/google/firebase/firestore/local/SQLiteSchema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `l`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.l:(Lcom/google/firebase/firestore/local/SQLiteSchema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createBundleCache$15`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createBundleCache$15:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createDataMigrationTable$17`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createDataMigrationTable$17:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createFieldIndex$5`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createFieldIndex$5:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createOverlays$16`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createOverlays$16:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createV1MutationQueue$0`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createV1MutationQueue$0:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createV1RemoteDocumentCache$4`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createV1RemoteDocumentCache$4:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createV1TargetCache$3`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createV1TargetCache$3:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createV8CollectionParentsIndex$10`(`com.google.firebase.firestore.local.MemoryIndexManager$MemoryCollectionParentIndex` v1 @kind object, `android.database.sqlite.SQLiteStatement` v2 @kind object, `com.google.firebase.firestore.model.ResourcePath` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createV8CollectionParentsIndex$10:(Lcom/google/firebase/firestore/local/MemoryIndexManager$MemoryCollectionParentIndex;Landroid/database/sqlite/SQLiteStatement;Lcom/google/firebase/firestore/model/ResourcePath;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createV8CollectionParentsIndex$11`(`com.google.firebase.firestore.util.Consumer` v1 @kind object, `android.database.Cursor` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createV8CollectionParentsIndex$11:(Lcom/google/firebase/firestore/util/Consumer;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createV8CollectionParentsIndex$12`(`com.google.firebase.firestore.util.Consumer` v1 @kind object, `android.database.Cursor` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createV8CollectionParentsIndex$12:(Lcom/google/firebase/firestore/util/Consumer;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$createV8CollectionParentsIndex$9`(`com.google.firebase.firestore.local.SQLiteSchema` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$createV8CollectionParentsIndex$9:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$dropLastLimboFreeSnapshotVersion$6`(`com.google.firebase.firestore.local.SQLiteSchema` v6 @kind this, `android.database.Cursor` v7 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$dropLastLimboFreeSnapshotVersion$6:(Landroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$ensurePathLength$14`(`boolean`[] v4 @kind object, `android.database.sqlite.SQLiteStatement` v5 @kind object, `android.database.Cursor` v6 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$ensurePathLength$14:([ZLandroid/database/sqlite/SQLiteStatement;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Long` `lambda$ensureSequenceNumbers$7`(`android.database.Cursor` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$ensureSequenceNumbers$7:(Landroid/database/Cursor;)Ljava/lang/Long;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$ensureSequenceNumbers$8`(`boolean`[] v2 @kind object, `android.database.sqlite.SQLiteStatement` v3 @kind object, `long` v4 , `android.database.Cursor` v6 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$ensureSequenceNumbers$8:([ZLandroid/database/sqlite/SQLiteStatement;JLandroid/database/Cursor;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$removeAcknowledgedMutations$1`(`com.google.firebase.firestore.local.SQLiteSchema` v1 @kind this, `java.lang.String` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$removeAcknowledgedMutations$1:(Ljava/lang/String;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$removeAcknowledgedMutations$2`(`com.google.firebase.firestore.local.SQLiteSchema` v7 @kind this, `android.database.Cursor` v8 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$removeAcknowledgedMutations$2:(Landroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$rewriteCanonicalIds$13`(`com.google.firebase.firestore.local.SQLiteSchema` v6 @kind this, `android.database.Cursor` v7 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.lambda$rewriteCanonicalIds$13:(Landroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `m`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.m:(Lcom/google/firebase/firestore/local/SQLiteSchema;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `n`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.n:(Lcom/google/firebase/firestore/local/SQLiteSchema;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `o`(`boolean`[] v0 @kind object, `android.database.sqlite.SQLiteStatement` v1 @kind object, `long` v2 , `android.database.Cursor` v4 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.o:([ZLandroid/database/sqlite/SQLiteStatement;JLandroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `p`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object, `java.lang.String` v1 @kind object, `android.database.Cursor` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.p:(Lcom/google/firebase/firestore/local/SQLiteSchema;Ljava/lang/String;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `q`(`com.google.firebase.firestore.util.Consumer` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.q:(Lcom/google/firebase/firestore/util/Consumer;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `r`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.r:(Lcom/google/firebase/firestore/local/SQLiteSchema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `removeAcknowledgedMutations`(`com.google.firebase.firestore.local.SQLiteSchema` v3 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.removeAcknowledgedMutations:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeMutationBatch`(`com.google.firebase.firestore.local.SQLiteSchema` v6 @kind this, `java.lang.String` v7 @kind object, `int` v8 ) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.removeMutationBatch:(Ljava/lang/String;I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `rewriteCanonicalIds`(`com.google.firebase.firestore.local.SQLiteSchema` v3 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.rewriteCanonicalIds:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `tableContainsColumn`(`com.google.firebase.firestore.local.SQLiteSchema` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.tableContainsColumn:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `tableExists`(`com.google.firebase.firestore.local.SQLiteSchema` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.tableExists:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.List` `getTableColumns`(`com.google.firebase.firestore.local.SQLiteSchema` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.getTableColumns:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {

  # return;
}
procedure `void` `runSchemaUpgrades`(`com.google.firebase.firestore.local.SQLiteSchema` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.runSchemaUpgrades:()V` @AccessFlag  {

  # return;
}
procedure `void` `runSchemaUpgrades`(`com.google.firebase.firestore.local.SQLiteSchema` v1 @kind this, `int` v2 ) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.runSchemaUpgrades:(I)V` @AccessFlag  {

  # return;
}
procedure `void` `runSchemaUpgrades`(`com.google.firebase.firestore.local.SQLiteSchema` v6 @kind this, `int` v7 , `int` v8 ) @signature `Lcom/google/firebase/firestore/local/SQLiteSchema;.runSchemaUpgrades:(II)V` @AccessFlag  {

  # return;
}
