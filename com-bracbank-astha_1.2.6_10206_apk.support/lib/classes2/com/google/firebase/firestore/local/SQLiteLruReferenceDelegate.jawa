record `com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` @kind class @AccessFlag  extends `com.google.firebase.firestore.local.ReferenceDelegate` @kind interface, `com.google.firebase.firestore.local.LruDelegate` @kind interface {
  `long` `com.google.firebase.firestore.local.SQLiteLruReferenceDelegate.currentSequenceNumber` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.local.LruGarbageCollector` `com.google.firebase.firestore.local.SQLiteLruReferenceDelegate.garbageCollector` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.local.ReferenceSet` `com.google.firebase.firestore.local.SQLiteLruReferenceDelegate.inMemoryPins` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.core.ListenSequence` `com.google.firebase.firestore.local.SQLiteLruReferenceDelegate.listenSequence` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.local.SQLitePersistence` `com.google.firebase.firestore.local.SQLiteLruReferenceDelegate.persistence` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.firebase.firestore.local.SQLiteLruReferenceDelegate.REMOVE_ORPHANED_DOCUMENTS_BATCH_SIZE` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v2 @kind this, `com.google.firebase.firestore.local.SQLitePersistence` v3 @kind object, `com.google.firebase.firestore.local.LruGarbageCollector$Params` v4 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.<init>:(Lcom/google/firebase/firestore/local/SQLitePersistence;Lcom/google/firebase/firestore/local/LruGarbageCollector$Params;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v0 @kind object, `int`[] v1 @kind object, `java.util.List` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.a:(Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;[ILjava/util/List;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Long` `b`(`android.database.Cursor` v0 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.b:(Landroid/database/Cursor;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`com.google.firebase.firestore.util.Consumer` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.c:(Lcom/google/firebase/firestore/util/Consumer;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isPinned`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v1 @kind this, `com.google.firebase.firestore.model.DocumentKey` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.isPinned:(Lcom/google/firebase/firestore/model/DocumentKey;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `lambda$forEachOrphanedDocumentSequenceNumber$1`(`com.google.firebase.firestore.util.Consumer` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.lambda$forEachOrphanedDocumentSequenceNumber$1:(Lcom/google/firebase/firestore/util/Consumer;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Long` `lambda$getSequenceNumberCount$0`(`android.database.Cursor` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.lambda$getSequenceNumberCount$0:(Landroid/database/Cursor;)Ljava/lang/Long;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$removeOrphanedDocuments$2`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v2 @kind this, `int`[] v3 @kind object, `java.util.List` v4 @kind object, `android.database.Cursor` v5 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.lambda$removeOrphanedDocuments$2:([ILjava/util/List;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `boolean` `mutationQueuesContainKey`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v4 @kind this, `com.google.firebase.firestore.model.DocumentKey` v5 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.mutationQueuesContainKey:(Lcom/google/firebase/firestore/model/DocumentKey;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeSentinel`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v3 @kind this, `com.google.firebase.firestore.model.DocumentKey` v4 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.removeSentinel:(Lcom/google/firebase/firestore/model/DocumentKey;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `writeSentinel`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v4 @kind this, `com.google.firebase.firestore.model.DocumentKey` v5 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.writeSentinel:(Lcom/google/firebase/firestore/model/DocumentKey;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addReference`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v0 @kind this, `com.google.firebase.firestore.model.DocumentKey` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.addReference:(Lcom/google/firebase/firestore/model/DocumentKey;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `forEachOrphanedDocumentSequenceNumber`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v2 @kind this, `com.google.firebase.firestore.util.Consumer` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.forEachOrphanedDocumentSequenceNumber:(Lcom/google/firebase/firestore/util/Consumer;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `forEachTarget`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v1 @kind this, `com.google.firebase.firestore.util.Consumer` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.forEachTarget:(Lcom/google/firebase/firestore/util/Consumer;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getByteSize`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.getByteSize:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getCurrentSequenceNumber`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v6 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.getCurrentSequenceNumber:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.local.LruGarbageCollector` `getGarbageCollector`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.getGarbageCollector:()Lcom/google/firebase/firestore/local/LruGarbageCollector;` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getSequenceNumberCount`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v4 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.getSequenceNumberCount:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onTransactionCommitted`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v6 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.onTransactionCommitted:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onTransactionStarted`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v6 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.onTransactionStarted:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeMutationReference`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v0 @kind this, `com.google.firebase.firestore.model.DocumentKey` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.removeMutationReference:(Lcom/google/firebase/firestore/model/DocumentKey;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `removeOrphanedDocuments`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v8 @kind this, `long` v9 ) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.removeOrphanedDocuments:(J)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeReference`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v0 @kind this, `com.google.firebase.firestore.model.DocumentKey` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.removeReference:(Lcom/google/firebase/firestore/model/DocumentKey;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeTarget`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v2 @kind this, `com.google.firebase.firestore.local.TargetData` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.removeTarget:(Lcom/google/firebase/firestore/local/TargetData;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `removeTargets`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v1 @kind this, `long` v2 , `android.util.SparseArray` v4 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.removeTargets:(JLandroid/util/SparseArray;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setInMemoryPins`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v0 @kind this, `com.google.firebase.firestore.local.ReferenceSet` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.setInMemoryPins:(Lcom/google/firebase/firestore/local/ReferenceSet;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `start`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v1 @kind this, `long` v2 ) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.start:(J)V` @AccessFlag  {

  # return;
}
procedure `void` `updateLimboDocument`(`com.google.firebase.firestore.local.SQLiteLruReferenceDelegate` v0 @kind this, `com.google.firebase.firestore.model.DocumentKey` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteLruReferenceDelegate;.updateLimboDocument:(Lcom/google/firebase/firestore/model/DocumentKey;)V` @AccessFlag PUBLIC {

  # return;
}
