record `com.google.firebase.firestore.local.SQLiteTargetCache` @kind class @AccessFlag FINAL extends `com.google.firebase.firestore.local.TargetCache` @kind interface {
  `com.google.firebase.firestore.local.SQLitePersistence` `com.google.firebase.firestore.local.SQLiteTargetCache.db` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.firebase.firestore.local.SQLiteTargetCache.highestTargetId` @AccessFlag PRIVATE;
  `long` `com.google.firebase.firestore.local.SQLiteTargetCache.lastListenSequenceNumber` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.model.SnapshotVersion` `com.google.firebase.firestore.local.SQLiteTargetCache.lastRemoteSnapshotVersion` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.local.LocalSerializer` `com.google.firebase.firestore.local.SQLiteTargetCache.localSerializer` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.firebase.firestore.local.SQLiteTargetCache.targetCount` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.firestore.local.SQLiteTargetCache` v1 @kind this, `com.google.firebase.firestore.local.SQLitePersistence` v2 @kind object, `com.google.firebase.firestore.local.LocalSerializer` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.<init>:(Lcom/google/firebase/firestore/local/SQLitePersistence;Lcom/google/firebase/firestore/local/LocalSerializer;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.local.SQLiteTargetCache$DocumentKeysHolder` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.a:(Lcom/google/firebase/firestore/local/SQLiteTargetCache$DocumentKeysHolder;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`com.google.firebase.firestore.local.SQLiteTargetCache` v0 @kind object, `com.google.firebase.firestore.core.Target` v1 @kind object, `com.google.firebase.firestore.local.SQLiteTargetCache$TargetDataHolder` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.b:(Lcom/google/firebase/firestore/local/SQLiteTargetCache;Lcom/google/firebase/firestore/core/Target;Lcom/google/firebase/firestore/local/SQLiteTargetCache$TargetDataHolder;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`com.google.firebase.firestore.local.SQLiteTargetCache` v0 @kind object, `com.google.firebase.firestore.util.Consumer` v1 @kind object, `android.database.Cursor` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.c:(Lcom/google/firebase/firestore/local/SQLiteTargetCache;Lcom/google/firebase/firestore/util/Consumer;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `d`(`com.google.firebase.firestore.local.SQLiteTargetCache` v0 @kind object, `android.util.SparseArray` v1 @kind object, `int`[] v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.d:(Lcom/google/firebase/firestore/local/SQLiteTargetCache;Landroid/util/SparseArray;[ILandroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.local.TargetData` `decodeTargetData`(`com.google.firebase.firestore.local.SQLiteTargetCache` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.decodeTargetData:([B)Lcom/google/firebase/firestore/local/TargetData;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`com.google.firebase.firestore.local.SQLiteTargetCache` v0 @kind object, `android.database.Cursor` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.e:(Lcom/google/firebase/firestore/local/SQLiteTargetCache;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$forEachTarget$1`(`com.google.firebase.firestore.local.SQLiteTargetCache` v1 @kind this, `com.google.firebase.firestore.util.Consumer` v2 @kind object, `android.database.Cursor` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.lambda$forEachTarget$1:(Lcom/google/firebase/firestore/util/Consumer;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$getMatchingKeysForTargetId$4`(`com.google.firebase.firestore.local.SQLiteTargetCache$DocumentKeysHolder` v1 @kind object, `android.database.Cursor` v2 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.lambda$getMatchingKeysForTargetId$4:(Lcom/google/firebase/firestore/local/SQLiteTargetCache$DocumentKeysHolder;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$getTargetData$3`(`com.google.firebase.firestore.local.SQLiteTargetCache` v1 @kind this, `com.google.firebase.firestore.core.Target` v2 @kind object, `com.google.firebase.firestore.local.SQLiteTargetCache$TargetDataHolder` v3 @kind object, `android.database.Cursor` v4 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.lambda$getTargetData$3:(Lcom/google/firebase/firestore/core/Target;Lcom/google/firebase/firestore/local/SQLiteTargetCache$TargetDataHolder;Landroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$removeQueries$2`(`com.google.firebase.firestore.local.SQLiteTargetCache` v1 @kind this, `android.util.SparseArray` v2 @kind object, `int`[] v3 @kind object, `android.database.Cursor` v4 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.lambda$removeQueries$2:(Landroid/util/SparseArray;[ILandroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$start$0`(`com.google.firebase.firestore.local.SQLiteTargetCache` v5 @kind this, `android.database.Cursor` v6 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.lambda$start$0:(Landroid/database/Cursor;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `removeTarget`(`com.google.firebase.firestore.local.SQLiteTargetCache` v4 @kind this, `int` v5 ) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.removeTarget:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `saveTargetData`(`com.google.firebase.firestore.local.SQLiteTargetCache` v7 @kind this, `com.google.firebase.firestore.local.TargetData` v8 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.saveTargetData:(Lcom/google/firebase/firestore/local/TargetData;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `updateMetadata`(`com.google.firebase.firestore.local.SQLiteTargetCache` v7 @kind this, `com.google.firebase.firestore.local.TargetData` v8 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.updateMetadata:(Lcom/google/firebase/firestore/local/TargetData;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `writeMetadata`(`com.google.firebase.firestore.local.SQLiteTargetCache` v4 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.writeMetadata:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addMatchingKeys`(`com.google.firebase.firestore.local.SQLiteTargetCache` v8 @kind this, `com.google.firebase.database.collection.ImmutableSortedSet` v9 @kind object, `int` v10 ) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.addMatchingKeys:(Lcom/google/firebase/database/collection/ImmutableSortedSet;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addTargetData`(`com.google.firebase.firestore.local.SQLiteTargetCache` v4 @kind this, `com.google.firebase.firestore.local.TargetData` v5 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.addTargetData:(Lcom/google/firebase/firestore/local/TargetData;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsKey`(`com.google.firebase.firestore.local.SQLiteTargetCache` v4 @kind this, `com.google.firebase.firestore.model.DocumentKey` v5 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.containsKey:(Lcom/google/firebase/firestore/model/DocumentKey;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `forEachTarget`(`com.google.firebase.firestore.local.SQLiteTargetCache` v2 @kind this, `com.google.firebase.firestore.util.Consumer` v3 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.forEachTarget:(Lcom/google/firebase/firestore/util/Consumer;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getHighestListenSequenceNumber`(`com.google.firebase.firestore.local.SQLiteTargetCache` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.getHighestListenSequenceNumber:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getHighestTargetId`(`com.google.firebase.firestore.local.SQLiteTargetCache` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.getHighestTargetId:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.SnapshotVersion` `getLastRemoteSnapshotVersion`(`com.google.firebase.firestore.local.SQLiteTargetCache` v1 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.getLastRemoteSnapshotVersion:()Lcom/google/firebase/firestore/model/SnapshotVersion;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.ImmutableSortedSet` `getMatchingKeysForTargetId`(`com.google.firebase.firestore.local.SQLiteTargetCache` v4 @kind this, `int` v5 ) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.getMatchingKeysForTargetId:(I)Lcom/google/firebase/database/collection/ImmutableSortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getTargetCount`(`com.google.firebase.firestore.local.SQLiteTargetCache` v2 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.getTargetCount:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.local.TargetData` `getTargetData`(`com.google.firebase.firestore.local.SQLiteTargetCache` v5 @kind this, `com.google.firebase.firestore.core.Target` v6 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.getTargetData:(Lcom/google/firebase/firestore/core/Target;)Lcom/google/firebase/firestore/local/TargetData;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeMatchingKeys`(`com.google.firebase.firestore.local.SQLiteTargetCache` v8 @kind this, `com.google.firebase.database.collection.ImmutableSortedSet` v9 @kind object, `int` v10 ) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.removeMatchingKeys:(Lcom/google/firebase/database/collection/ImmutableSortedSet;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeMatchingKeysForTargetId`(`com.google.firebase.firestore.local.SQLiteTargetCache` v3 @kind this, `int` v4 ) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.removeMatchingKeysForTargetId:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `removeQueries`(`com.google.firebase.firestore.local.SQLiteTargetCache` v4 @kind this, `long` v5 , `android.util.SparseArray` v7 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.removeQueries:(JLandroid/util/SparseArray;)I` @AccessFlag  {

  # return;
}
procedure `void` `removeTargetData`(`com.google.firebase.firestore.local.SQLiteTargetCache` v0 @kind this, `com.google.firebase.firestore.local.TargetData` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.removeTargetData:(Lcom/google/firebase/firestore/local/TargetData;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setLastRemoteSnapshotVersion`(`com.google.firebase.firestore.local.SQLiteTargetCache` v0 @kind this, `com.google.firebase.firestore.model.SnapshotVersion` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.setLastRemoteSnapshotVersion:(Lcom/google/firebase/firestore/model/SnapshotVersion;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `start`(`com.google.firebase.firestore.local.SQLiteTargetCache` v3 @kind this) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.start:()V` @AccessFlag  {

  # return;
}
procedure `void` `updateTargetData`(`com.google.firebase.firestore.local.SQLiteTargetCache` v0 @kind this, `com.google.firebase.firestore.local.TargetData` v1 @kind object) @signature `Lcom/google/firebase/firestore/local/SQLiteTargetCache;.updateTargetData:(Lcom/google/firebase/firestore/local/TargetData;)V` @AccessFlag PUBLIC {

  # return;
}
