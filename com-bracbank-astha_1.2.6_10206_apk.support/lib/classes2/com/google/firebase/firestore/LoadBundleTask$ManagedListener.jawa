record `com.google.firebase.firestore.LoadBundleTask$ManagedListener` @kind class @AccessFlag  {
  `java.util.concurrent.Executor` `com.google.firebase.firestore.LoadBundleTask$ManagedListener.executor` @AccessFlag ;
  `com.google.firebase.firestore.OnProgressListener` `com.google.firebase.firestore.LoadBundleTask$ManagedListener.listener` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.firebase.firestore.LoadBundleTask$ManagedListener` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `com.google.firebase.firestore.OnProgressListener` v2 @kind object) @signature `Lcom/google/firebase/firestore/LoadBundleTask$ManagedListener;.<init>:(Ljava/util/concurrent/Executor;Lcom/google/firebase/firestore/OnProgressListener;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.LoadBundleTask$ManagedListener` v0 @kind object, `com.google.firebase.firestore.LoadBundleTaskProgress` v1 @kind object) @signature `Lcom/google/firebase/firestore/LoadBundleTask$ManagedListener;.a:(Lcom/google/firebase/firestore/LoadBundleTask$ManagedListener;Lcom/google/firebase/firestore/LoadBundleTaskProgress;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$invokeAsync$0`(`com.google.firebase.firestore.LoadBundleTask$ManagedListener` v1 @kind this, `com.google.firebase.firestore.LoadBundleTaskProgress` v2 @kind object) @signature `Lcom/google/firebase/firestore/LoadBundleTask$ManagedListener;.lambda$invokeAsync$0:(Lcom/google/firebase/firestore/LoadBundleTaskProgress;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.firestore.LoadBundleTask$ManagedListener` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/firebase/firestore/LoadBundleTask$ManagedListener;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.firestore.LoadBundleTask$ManagedListener` v1 @kind this) @signature `Lcom/google/firebase/firestore/LoadBundleTask$ManagedListener;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `invokeAsync`(`com.google.firebase.firestore.LoadBundleTask$ManagedListener` v2 @kind this, `com.google.firebase.firestore.LoadBundleTaskProgress` v3 @kind object) @signature `Lcom/google/firebase/firestore/LoadBundleTask$ManagedListener;.invokeAsync:(Lcom/google/firebase/firestore/LoadBundleTaskProgress;)V` @AccessFlag PUBLIC {

  # return;
}
