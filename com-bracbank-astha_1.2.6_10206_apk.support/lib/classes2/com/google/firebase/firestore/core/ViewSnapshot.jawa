record `com.google.firebase.firestore.core.ViewSnapshot` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.google.firebase.firestore.core.ViewSnapshot.changes` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.firebase.firestore.core.ViewSnapshot.didSyncStateChange` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.model.DocumentSet` `com.google.firebase.firestore.core.ViewSnapshot.documents` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.firebase.firestore.core.ViewSnapshot.excludesMetadataChanges` @AccessFlag PRIVATE;
  `boolean` `com.google.firebase.firestore.core.ViewSnapshot.hasCachedResults` @AccessFlag PRIVATE;
  `boolean` `com.google.firebase.firestore.core.ViewSnapshot.isFromCache` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.database.collection.ImmutableSortedSet` `com.google.firebase.firestore.core.ViewSnapshot.mutatedKeys` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.model.DocumentSet` `com.google.firebase.firestore.core.ViewSnapshot.oldDocuments` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.core.Query` `com.google.firebase.firestore.core.ViewSnapshot.query` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.firestore.core.ViewSnapshot` v0 @kind this, `com.google.firebase.firestore.core.Query` v1 @kind object, `com.google.firebase.firestore.model.DocumentSet` v2 @kind object, `com.google.firebase.firestore.model.DocumentSet` v3 @kind object, `java.util.List` v4 @kind object, `boolean` v5 , `com.google.firebase.database.collection.ImmutableSortedSet` v6 @kind object, `boolean` v7 , `boolean` v8 , `boolean` v9 ) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.<init>:(Lcom/google/firebase/firestore/core/Query;Lcom/google/firebase/firestore/model/DocumentSet;Lcom/google/firebase/firestore/model/DocumentSet;Ljava/util/List;ZLcom/google/firebase/database/collection/ImmutableSortedSet;ZZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.core.ViewSnapshot` `fromInitialDocuments`(`com.google.firebase.firestore.core.Query` v11 @kind object, `com.google.firebase.firestore.model.DocumentSet` v12 @kind object, `com.google.firebase.database.collection.ImmutableSortedSet` v13 @kind object, `boolean` v14 , `boolean` v15 , `boolean` v16 ) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.fromInitialDocuments:(Lcom/google/firebase/firestore/core/Query;Lcom/google/firebase/firestore/model/DocumentSet;Lcom/google/firebase/database/collection/ImmutableSortedSet;ZZZ)Lcom/google/firebase/firestore/core/ViewSnapshot;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `didSyncStateChange`(`com.google.firebase.firestore.core.ViewSnapshot` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.didSyncStateChange:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.firestore.core.ViewSnapshot` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `excludesMetadataChanges`(`com.google.firebase.firestore.core.ViewSnapshot` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.excludesMetadataChanges:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getChanges`(`com.google.firebase.firestore.core.ViewSnapshot` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.getChanges:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.DocumentSet` `getDocuments`(`com.google.firebase.firestore.core.ViewSnapshot` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.getDocuments:()Lcom/google/firebase/firestore/model/DocumentSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.ImmutableSortedSet` `getMutatedKeys`(`com.google.firebase.firestore.core.ViewSnapshot` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.getMutatedKeys:()Lcom/google/firebase/database/collection/ImmutableSortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.DocumentSet` `getOldDocuments`(`com.google.firebase.firestore.core.ViewSnapshot` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.getOldDocuments:()Lcom/google/firebase/firestore/model/DocumentSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Query` `getQuery`(`com.google.firebase.firestore.core.ViewSnapshot` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.getQuery:()Lcom/google/firebase/firestore/core/Query;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasCachedResults`(`com.google.firebase.firestore.core.ViewSnapshot` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.hasCachedResults:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasPendingWrites`(`com.google.firebase.firestore.core.ViewSnapshot` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.hasPendingWrites:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.firestore.core.ViewSnapshot` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isFromCache`(`com.google.firebase.firestore.core.ViewSnapshot` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.isFromCache:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.firestore.core.ViewSnapshot` v3 @kind this) @signature `Lcom/google/firebase/firestore/core/ViewSnapshot;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
