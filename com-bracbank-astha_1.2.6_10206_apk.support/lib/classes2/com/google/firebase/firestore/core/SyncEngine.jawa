record `com.google.firebase.firestore.core.SyncEngine` @kind class @AccessFlag PUBLIC extends `com.google.firebase.firestore.remote.RemoteStore$RemoteStoreCallback` @kind interface {
  `java.util.Map` `com.google.firebase.firestore.core.SyncEngine.activeLimboResolutionsByTarget` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.firestore.core.SyncEngine.activeLimboTargetsByKey` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.auth.User` `com.google.firebase.firestore.core.SyncEngine.currentUser` @AccessFlag PRIVATE;
  `java.util.LinkedHashSet` `com.google.firebase.firestore.core.SyncEngine.enqueuedLimboResolutions` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.local.ReferenceSet` `com.google.firebase.firestore.core.SyncEngine.limboDocumentRefs` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.local.LocalStore` `com.google.firebase.firestore.core.SyncEngine.localStore` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.firebase.firestore.core.SyncEngine.maxConcurrentLimboResolutions` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.firestore.core.SyncEngine.mutationUserCallbacks` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.firestore.core.SyncEngine.pendingWritesCallbacks` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.firestore.core.SyncEngine.queriesByTarget` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.firestore.core.SyncEngine.queryViewsByQuery` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.remote.RemoteStore` `com.google.firebase.firestore.core.SyncEngine.remoteStore` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.core.SyncEngine$SyncEngineCallback` `com.google.firebase.firestore.core.SyncEngine.syncEngineListener` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.core.TargetIdGenerator` `com.google.firebase.firestore.core.SyncEngine.targetIdGenerator` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.google.firebase.firestore.core.SyncEngine.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/firestore/core/SyncEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.core.SyncEngine` v0 @kind this, `com.google.firebase.firestore.local.LocalStore` v1 @kind object, `com.google.firebase.firestore.remote.RemoteStore` v2 @kind object, `com.google.firebase.firestore.auth.User` v3 @kind object, `int` v4 ) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.<init>:(Lcom/google/firebase/firestore/local/LocalStore;Lcom/google/firebase/firestore/remote/RemoteStore;Lcom/google/firebase/firestore/auth/User;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `addUserCallback`(`com.google.firebase.firestore.core.SyncEngine` v3 @kind this, `int` v4 , `com.google.android.gms.tasks.TaskCompletionSource` v5 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.addUserCallback:(ILcom/google/android/gms/tasks/TaskCompletionSource;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `assertCallback`(`com.google.firebase.firestore.core.SyncEngine` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.assertCallback:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `emitNewSnapsAndNotifyLocalStore`(`com.google.firebase.firestore.core.SyncEngine` v9 @kind this, `com.google.firebase.database.collection.ImmutableSortedMap` v10 @kind object, `com.google.firebase.firestore.remote.RemoteEvent` v11 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.emitNewSnapsAndNotifyLocalStore:(Lcom/google/firebase/database/collection/ImmutableSortedMap;Lcom/google/firebase/firestore/remote/RemoteEvent;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `errorIsInteresting`(`com.google.firebase.firestore.core.SyncEngine` v3 @kind this, `io.grpc.Status` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.errorIsInteresting:(Lio/grpc/Status;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `failOutstandingPendingWritesAwaitingTasks`(`com.google.firebase.firestore.core.SyncEngine` v6 @kind this) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.failOutstandingPendingWritesAwaitingTasks:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.core.ViewSnapshot` `initializeViewAndComputeSnapshot`(`com.google.firebase.firestore.core.SyncEngine` v5 @kind this, `com.google.firebase.firestore.core.Query` v6 @kind object, `int` v7 , `com.google.protobuf.ByteString` v8 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.initializeViewAndComputeSnapshot:(Lcom/google/firebase/firestore/core/Query;ILcom/google/protobuf/ByteString;)Lcom/google/firebase/firestore/core/ViewSnapshot;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `logErrorIfInteresting`(`com.google.firebase.firestore.core.SyncEngine` v1 @kind this, `io.grpc.Status` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.logErrorIfInteresting:(Lio/grpc/Status;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `notifyUser`(`com.google.firebase.firestore.core.SyncEngine` v2 @kind this, `int` v3 , `io.grpc.Status` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.notifyUser:(ILio/grpc/Status;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `pumpEnqueuedLimboResolutions`(`com.google.firebase.firestore.core.SyncEngine` v9 @kind this) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.pumpEnqueuedLimboResolutions:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeAndCleanupTarget`(`com.google.firebase.firestore.core.SyncEngine` v4 @kind this, `int` v5 , `io.grpc.Status` v6 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.removeAndCleanupTarget:(ILio/grpc/Status;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeLimboTarget`(`com.google.firebase.firestore.core.SyncEngine` v3 @kind this, `com.google.firebase.firestore.model.DocumentKey` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.removeLimboTarget:(Lcom/google/firebase/firestore/model/DocumentKey;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `resolvePendingWriteTasks`(`com.google.firebase.firestore.core.SyncEngine` v3 @kind this, `int` v4 ) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.resolvePendingWriteTasks:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `trackLimboChange`(`com.google.firebase.firestore.core.SyncEngine` v3 @kind this, `com.google.firebase.firestore.core.LimboDocumentChange` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.trackLimboChange:(Lcom/google/firebase/firestore/core/LimboDocumentChange;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `updateTrackedLimboDocuments`(`com.google.firebase.firestore.core.SyncEngine` v5 @kind this, `java.util.List` v6 @kind object, `int` v7 ) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.updateTrackedLimboDocuments:(Ljava/util/List;I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Map` `getActiveLimboDocumentResolutions`(`com.google.firebase.firestore.core.SyncEngine` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.getActiveLimboDocumentResolutions:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getEnqueuedLimboDocumentResolutions`(`com.google.firebase.firestore.core.SyncEngine` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.getEnqueuedLimboDocumentResolutions:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.ImmutableSortedSet` `getRemoteKeysForTarget`(`com.google.firebase.firestore.core.SyncEngine` v3 @kind this, `int` v4 ) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.getRemoteKeysForTarget:(I)Lcom/google/firebase/database/collection/ImmutableSortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `handleCredentialChange`(`com.google.firebase.firestore.core.SyncEngine` v1 @kind this, `com.google.firebase.firestore.auth.User` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.handleCredentialChange:(Lcom/google/firebase/firestore/auth/User;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `handleOnlineStateChange`(`com.google.firebase.firestore.core.SyncEngine` v6 @kind this, `com.google.firebase.firestore.core.OnlineState` v7 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.handleOnlineStateChange:(Lcom/google/firebase/firestore/core/OnlineState;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `handleRejectedListen`(`com.google.firebase.firestore.core.SyncEngine` v7 @kind this, `int` v8 , `io.grpc.Status` v9 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.handleRejectedListen:(ILio/grpc/Status;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `handleRejectedWrite`(`com.google.firebase.firestore.core.SyncEngine` v4 @kind this, `int` v5 , `io.grpc.Status` v6 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.handleRejectedWrite:(ILio/grpc/Status;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `handleRemoteEvent`(`com.google.firebase.firestore.core.SyncEngine` v8 @kind this, `com.google.firebase.firestore.remote.RemoteEvent` v9 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.handleRemoteEvent:(Lcom/google/firebase/firestore/remote/RemoteEvent;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `handleSuccessfulWrite`(`com.google.firebase.firestore.core.SyncEngine` v2 @kind this, `com.google.firebase.firestore.model.mutation.MutationBatchResult` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.handleSuccessfulWrite:(Lcom/google/firebase/firestore/model/mutation/MutationBatchResult;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `listen`(`com.google.firebase.firestore.core.SyncEngine` v3 @kind this, `com.google.firebase.firestore.core.Query` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.listen:(Lcom/google/firebase/firestore/core/Query;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `loadBundle`(`com.google.firebase.firestore.core.SyncEngine` v11 @kind this, `com.google.firebase.firestore.bundle.BundleReader` v12 @kind object, `com.google.firebase.firestore.LoadBundleTask` v13 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.loadBundle:(Lcom/google/firebase/firestore/bundle/BundleReader;Lcom/google/firebase/firestore/LoadBundleTask;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `registerPendingWritesTask`(`com.google.firebase.firestore.core.SyncEngine` v4 @kind this, `com.google.android.gms.tasks.TaskCompletionSource` v5 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.registerPendingWritesTask:(Lcom/google/android/gms/tasks/TaskCompletionSource;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `runCountQuery`(`com.google.firebase.firestore.core.SyncEngine` v1 @kind this, `com.google.firebase.firestore.core.Query` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.runCountQuery:(Lcom/google/firebase/firestore/core/Query;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setCallback`(`com.google.firebase.firestore.core.SyncEngine` v0 @kind this, `com.google.firebase.firestore.core.SyncEngine$SyncEngineCallback` v1 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.setCallback:(Lcom/google/firebase/firestore/core/SyncEngine$SyncEngineCallback;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `stopListening`(`com.google.firebase.firestore.core.SyncEngine` v4 @kind this, `com.google.firebase.firestore.core.Query` v5 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.stopListening:(Lcom/google/firebase/firestore/core/Query;)V` @AccessFlag  {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `transaction`(`com.google.firebase.firestore.core.SyncEngine` v2 @kind this, `com.google.firebase.firestore.util.AsyncQueue` v3 @kind object, `com.google.firebase.firestore.TransactionOptions` v4 @kind object, `com.google.firebase.firestore.util.Function` v5 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.transaction:(Lcom/google/firebase/firestore/util/AsyncQueue;Lcom/google/firebase/firestore/TransactionOptions;Lcom/google/firebase/firestore/util/Function;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `writeMutations`(`com.google.firebase.firestore.core.SyncEngine` v1 @kind this, `java.util.List` v2 @kind object, `com.google.android.gms.tasks.TaskCompletionSource` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/SyncEngine;.writeMutations:(Ljava/util/List;Lcom/google/android/gms/tasks/TaskCompletionSource;)V` @AccessFlag PUBLIC {

  # return;
}
