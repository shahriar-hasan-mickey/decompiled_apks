record `com.google.firebase.firestore.core.Transaction` @kind class @AccessFlag PUBLIC {
  `boolean` `com.google.firebase.firestore.core.Transaction.committed` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.remote.Datastore` `com.google.firebase.firestore.core.Transaction.datastore` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.FirebaseFirestoreException` `com.google.firebase.firestore.core.Transaction.lastWriteError` @AccessFlag PRIVATE;
  `java.util.ArrayList` `com.google.firebase.firestore.core.Transaction.mutations` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `com.google.firebase.firestore.core.Transaction.readVersions` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.google.firebase.firestore.core.Transaction.writtenDocs` @AccessFlag PRIVATE;
}
global `java.util.concurrent.Executor` `@@com.google.firebase.firestore.core.Transaction.defaultExecutor` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/firestore/core/Transaction;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.core.Transaction` v1 @kind this, `com.google.firebase.firestore.remote.Datastore` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.<init>:(Lcom/google/firebase/firestore/remote/Datastore;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `a`(`com.google.android.gms.tasks.Task` v0 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.a:(Lcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `b`(`com.google.firebase.firestore.core.Transaction` v0 @kind object, `com.google.android.gms.tasks.Task` v1 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.b:(Lcom/google/firebase/firestore/core/Transaction;Lcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.concurrent.Executor` `createDefaultExecutor`() @signature `Lcom/google/firebase/firestore/core/Transaction;.createDefaultExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `ensureCommitNotCalled`(`com.google.firebase.firestore.core.Transaction` v3 @kind this) @signature `Lcom/google/firebase/firestore/core/Transaction;.ensureCommitNotCalled:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.concurrent.Executor` `getDefaultExecutor`() @signature `Lcom/google/firebase/firestore/core/Transaction;.getDefaultExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `lambda$commit$1`(`com.google.android.gms.tasks.Task` v1 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.lambda$commit$1:(Lcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `lambda$lookup$0`(`com.google.firebase.firestore.core.Transaction` v2 @kind this, `com.google.android.gms.tasks.Task` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.lambda$lookup$0:(Lcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.model.mutation.Precondition` `precondition`(`com.google.firebase.firestore.core.Transaction` v2 @kind this, `com.google.firebase.firestore.model.DocumentKey` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.precondition:(Lcom/google/firebase/firestore/model/DocumentKey;)Lcom/google/firebase/firestore/model/mutation/Precondition;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.model.mutation.Precondition` `preconditionForUpdate`(`com.google.firebase.firestore.core.Transaction` v2 @kind this, `com.google.firebase.firestore.model.DocumentKey` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.preconditionForUpdate:(Lcom/google/firebase/firestore/model/DocumentKey;)Lcom/google/firebase/firestore/model/mutation/Precondition;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `recordVersion`(`com.google.firebase.firestore.core.Transaction` v3 @kind this, `com.google.firebase.firestore.model.MutableDocument` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.recordVersion:(Lcom/google/firebase/firestore/model/MutableDocument;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `write`(`com.google.firebase.firestore.core.Transaction` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.write:(Ljava/util/List;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `commit`(`com.google.firebase.firestore.core.Transaction` v5 @kind this) @signature `Lcom/google/firebase/firestore/core/Transaction;.commit:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `delete`(`com.google.firebase.firestore.core.Transaction` v2 @kind this, `com.google.firebase.firestore.model.DocumentKey` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.delete:(Lcom/google/firebase/firestore/model/DocumentKey;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `lookup`(`com.google.firebase.firestore.core.Transaction` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.lookup:(Ljava/util/List;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `set`(`com.google.firebase.firestore.core.Transaction` v1 @kind this, `com.google.firebase.firestore.model.DocumentKey` v2 @kind object, `com.google.firebase.firestore.core.UserData$ParsedSetData` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.set:(Lcom/google/firebase/firestore/model/DocumentKey;Lcom/google/firebase/firestore/core/UserData$ParsedSetData;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`com.google.firebase.firestore.core.Transaction` v1 @kind this, `com.google.firebase.firestore.model.DocumentKey` v2 @kind object, `com.google.firebase.firestore.core.UserData$ParsedUpdateData` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/Transaction;.update:(Lcom/google/firebase/firestore/model/DocumentKey;Lcom/google/firebase/firestore/core/UserData$ParsedUpdateData;)V` @AccessFlag PUBLIC {

  # return;
}
