record `com.google.firebase.firestore.core.Query` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `com.google.firebase.firestore.core.Query.collectionGroup` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.core.Bound` `com.google.firebase.firestore.core.Query.endAt` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.google.firebase.firestore.core.Query.explicitSortOrder` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.google.firebase.firestore.core.Query.filters` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.firebase.firestore.core.Query.limit` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.core.Query$LimitType` `com.google.firebase.firestore.core.Query.limitType` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.google.firebase.firestore.core.Query.memoizedOrderBy` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.core.Target` `com.google.firebase.firestore.core.Query.memoizedTarget` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.model.ResourcePath` `com.google.firebase.firestore.core.Query.path` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.core.Bound` `com.google.firebase.firestore.core.Query.startAt` @AccessFlag PRIVATE_FINAL;
}
global `com.google.firebase.firestore.core.OrderBy` `@@com.google.firebase.firestore.core.Query.KEY_ORDERING_ASC` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.firebase.firestore.core.OrderBy` `@@com.google.firebase.firestore.core.Query.KEY_ORDERING_DESC` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/firestore/core/Query;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.core.Query` v10 @kind this, `com.google.firebase.firestore.model.ResourcePath` v11 @kind object, `java.lang.String` v12 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.<init>:(Lcom/google/firebase/firestore/model/ResourcePath;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.core.Query` v0 @kind this, `com.google.firebase.firestore.model.ResourcePath` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object, `java.util.List` v4 @kind object, `long` v5 , `com.google.firebase.firestore.core.Query$LimitType` v7 @kind object, `com.google.firebase.firestore.core.Bound` v8 @kind object, `com.google.firebase.firestore.core.Bound` v9 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.<init>:(Lcom/google/firebase/firestore/model/ResourcePath;Ljava/lang/String;Ljava/util/List;Ljava/util/List;JLcom/google/firebase/firestore/core/Query$LimitType;Lcom/google/firebase/firestore/core/Bound;Lcom/google/firebase/firestore/core/Bound;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.core.Query` `atPath`(`com.google.firebase.firestore.model.ResourcePath` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.atPath:(Lcom/google/firebase/firestore/model/ResourcePath;)Lcom/google/firebase/firestore/core/Query;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `matchesBounds`(`com.google.firebase.firestore.core.Query` v3 @kind this, `com.google.firebase.firestore.model.Document` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.matchesBounds:(Lcom/google/firebase/firestore/model/Document;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `matchesFilters`(`com.google.firebase.firestore.core.Query` v2 @kind this, `com.google.firebase.firestore.model.Document` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.matchesFilters:(Lcom/google/firebase/firestore/model/Document;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `matchesOrderBy`(`com.google.firebase.firestore.core.Query` v4 @kind this, `com.google.firebase.firestore.model.Document` v5 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.matchesOrderBy:(Lcom/google/firebase/firestore/model/Document;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `matchesPathAndCollectionGroup`(`com.google.firebase.firestore.core.Query` v4 @kind this, `com.google.firebase.firestore.model.Document` v5 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.matchesPathAndCollectionGroup:(Lcom/google/firebase/firestore/model/Document;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.core.Query` `asCollectionQueryAtPath`(`com.google.firebase.firestore.core.Query` v11 @kind this, `com.google.firebase.firestore.model.ResourcePath` v12 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.asCollectionQueryAtPath:(Lcom/google/firebase/firestore/model/ResourcePath;)Lcom/google/firebase/firestore/core/Query;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Comparator` `comparator`(`com.google.firebase.firestore.core.Query` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.comparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsCompositeFilters`(`com.google.firebase.firestore.core.Query` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.containsCompositeFilters:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Query` `endAt`(`com.google.firebase.firestore.core.Query` v11 @kind this, `com.google.firebase.firestore.core.Bound` v12 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.endAt:(Lcom/google/firebase/firestore/core/Bound;)Lcom/google/firebase/firestore/core/Query;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.firestore.core.Query` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Query` `filter`(`com.google.firebase.firestore.core.Query` v13 @kind this, `com.google.firebase.firestore.core.Filter` v14 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.filter:(Lcom/google/firebase/firestore/core/Filter;)Lcom/google/firebase/firestore/core/Query;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getCanonicalId`(`com.google.firebase.firestore.core.Query` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getCanonicalId:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getCollectionGroup`(`com.google.firebase.firestore.core.Query` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getCollectionGroup:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Bound` `getEndAt`(`com.google.firebase.firestore.core.Query` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getEndAt:()Lcom/google/firebase/firestore/core/Bound;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getExplicitOrderBy`(`com.google.firebase.firestore.core.Query` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getExplicitOrderBy:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getFilters`(`com.google.firebase.firestore.core.Query` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getFilters:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.FieldPath` `getFirstOrderByField`(`com.google.firebase.firestore.core.Query` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getFirstOrderByField:()Lcom/google/firebase/firestore/model/FieldPath;` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getLimit`(`com.google.firebase.firestore.core.Query` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getLimit:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Query$LimitType` `getLimitType`(`com.google.firebase.firestore.core.Query` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getLimitType:()Lcom/google/firebase/firestore/core/Query$LimitType;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getOrderBy`(`com.google.firebase.firestore.core.Query` v6 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getOrderBy:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.ResourcePath` `getPath`(`com.google.firebase.firestore.core.Query` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getPath:()Lcom/google/firebase/firestore/model/ResourcePath;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Bound` `getStartAt`(`com.google.firebase.firestore.core.Query` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.getStartAt:()Lcom/google/firebase/firestore/core/Bound;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasLimit`(`com.google.firebase.firestore.core.Query` v5 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.hasLimit:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.firestore.core.Query` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.FieldPath` `inequalityField`(`com.google.firebase.firestore.core.Query` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.inequalityField:()Lcom/google/firebase/firestore/model/FieldPath;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isCollectionGroupQuery`(`com.google.firebase.firestore.core.Query` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.isCollectionGroupQuery:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDocumentQuery`(`com.google.firebase.firestore.core.Query` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.isDocumentQuery:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Query` `limitToFirst`(`com.google.firebase.firestore.core.Query` v11 @kind this, `long` v12 ) @signature `Lcom/google/firebase/firestore/core/Query;.limitToFirst:(J)Lcom/google/firebase/firestore/core/Query;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Query` `limitToLast`(`com.google.firebase.firestore.core.Query` v11 @kind this, `long` v12 ) @signature `Lcom/google/firebase/firestore/core/Query;.limitToLast:(J)Lcom/google/firebase/firestore/core/Query;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `matches`(`com.google.firebase.firestore.core.Query` v1 @kind this, `com.google.firebase.firestore.model.Document` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.matches:(Lcom/google/firebase/firestore/model/Document;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `matchesAllDocuments`(`com.google.firebase.firestore.core.Query` v6 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.matchesAllDocuments:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Query` `orderBy`(`com.google.firebase.firestore.core.Query` v10 @kind this, `com.google.firebase.firestore.core.OrderBy` v11 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.orderBy:(Lcom/google/firebase/firestore/core/OrderBy;)Lcom/google/firebase/firestore/core/Query;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Query` `startAt`(`com.google.firebase.firestore.core.Query` v11 @kind this, `com.google.firebase.firestore.core.Bound` v12 @kind object) @signature `Lcom/google/firebase/firestore/core/Query;.startAt:(Lcom/google/firebase/firestore/core/Bound;)Lcom/google/firebase/firestore/core/Query;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.firestore.core.Query` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.Target` `toTarget`(`com.google.firebase.firestore.core.Query` v21 @kind this) @signature `Lcom/google/firebase/firestore/core/Query;.toTarget:()Lcom/google/firebase/firestore/core/Target;` @AccessFlag PUBLIC {

  # return;
}
