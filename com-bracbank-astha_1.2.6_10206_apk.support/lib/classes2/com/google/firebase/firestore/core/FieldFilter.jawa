record `com.google.firebase.firestore.core.FieldFilter` @kind class @AccessFlag PUBLIC extends `com.google.firebase.firestore.core.Filter` @kind class {
  `com.google.firebase.firestore.model.FieldPath` `com.google.firebase.firestore.core.FieldFilter.field` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.core.FieldFilter$Operator` `com.google.firebase.firestore.core.FieldFilter.operator` @AccessFlag PRIVATE_FINAL;
  `com.google.firestore.v1.Value` `com.google.firebase.firestore.core.FieldFilter.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.firestore.core.FieldFilter` v0 @kind this, `com.google.firebase.firestore.model.FieldPath` v1 @kind object, `com.google.firebase.firestore.core.FieldFilter$Operator` v2 @kind object, `com.google.firestore.v1.Value` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.<init>:(Lcom/google/firebase/firestore/model/FieldPath;Lcom/google/firebase/firestore/core/FieldFilter$Operator;Lcom/google/firestore/v1/Value;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.core.FieldFilter` `create`(`com.google.firebase.firestore.model.FieldPath` v4 @kind object, `com.google.firebase.firestore.core.FieldFilter$Operator` v5 @kind object, `com.google.firestore.v1.Value` v6 @kind object) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.create:(Lcom/google/firebase/firestore/model/FieldPath;Lcom/google/firebase/firestore/core/FieldFilter$Operator;Lcom/google/firestore/v1/Value;)Lcom/google/firebase/firestore/core/FieldFilter;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.firestore.core.FieldFilter` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getCanonicalId`(`com.google.firebase.firestore.core.FieldFilter` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.getCanonicalId:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.FieldPath` `getField`(`com.google.firebase.firestore.core.FieldFilter` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.getField:()Lcom/google/firebase/firestore/model/FieldPath;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getFilters`(`com.google.firebase.firestore.core.FieldFilter` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.getFilters:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.FieldPath` `getFirstInequalityField`(`com.google.firebase.firestore.core.FieldFilter` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.getFirstInequalityField:()Lcom/google/firebase/firestore/model/FieldPath;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getFlattenedFilters`(`com.google.firebase.firestore.core.FieldFilter` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.getFlattenedFilters:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.FieldFilter$Operator` `getOperator`(`com.google.firebase.firestore.core.FieldFilter` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.getOperator:()Lcom/google/firebase/firestore/core/FieldFilter$Operator;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firestore.v1.Value` `getValue`(`com.google.firebase.firestore.core.FieldFilter` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.getValue:()Lcom/google/firestore/v1/Value;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.firestore.core.FieldFilter` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isInequality`(`com.google.firebase.firestore.core.FieldFilter` v3 @kind this) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.isInequality:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `matches`(`com.google.firebase.firestore.core.FieldFilter` v4 @kind this, `com.google.firebase.firestore.model.Document` v5 @kind object) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.matches:(Lcom/google/firebase/firestore/model/Document;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `matchesComparison`(`com.google.firebase.firestore.core.FieldFilter` v3 @kind this, `int` v4 ) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.matchesComparison:(I)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.firestore.core.FieldFilter` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/FieldFilter;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
