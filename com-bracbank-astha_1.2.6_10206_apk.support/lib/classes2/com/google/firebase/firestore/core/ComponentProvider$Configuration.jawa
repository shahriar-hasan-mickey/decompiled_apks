record `com.google.firebase.firestore.core.ComponentProvider$Configuration` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.firestore.util.AsyncQueue` `com.google.firebase.firestore.core.ComponentProvider$Configuration.asyncQueue` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.google.firebase.firestore.core.ComponentProvider$Configuration.context` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.core.DatabaseInfo` `com.google.firebase.firestore.core.ComponentProvider$Configuration.databaseInfo` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.remote.Datastore` `com.google.firebase.firestore.core.ComponentProvider$Configuration.datastore` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.auth.User` `com.google.firebase.firestore.core.ComponentProvider$Configuration.initialUser` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.firebase.firestore.core.ComponentProvider$Configuration.maxConcurrentLimboResolutions` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.FirebaseFirestoreSettings` `com.google.firebase.firestore.core.ComponentProvider$Configuration.settings` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.firestore.core.ComponentProvider$Configuration` v0 @kind this, `android.content.Context` v1 @kind object, `com.google.firebase.firestore.util.AsyncQueue` v2 @kind object, `com.google.firebase.firestore.core.DatabaseInfo` v3 @kind object, `com.google.firebase.firestore.remote.Datastore` v4 @kind object, `com.google.firebase.firestore.auth.User` v5 @kind object, `int` v6 , `com.google.firebase.firestore.FirebaseFirestoreSettings` v7 @kind object) @signature `Lcom/google/firebase/firestore/core/ComponentProvider$Configuration;.<init>:(Landroid/content/Context;Lcom/google/firebase/firestore/util/AsyncQueue;Lcom/google/firebase/firestore/core/DatabaseInfo;Lcom/google/firebase/firestore/remote/Datastore;Lcom/google/firebase/firestore/auth/User;ILcom/google/firebase/firestore/FirebaseFirestoreSettings;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.util.AsyncQueue` `getAsyncQueue`(`com.google.firebase.firestore.core.ComponentProvider$Configuration` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ComponentProvider$Configuration;.getAsyncQueue:()Lcom/google/firebase/firestore/util/AsyncQueue;` @AccessFlag  {

  # return;
}
procedure `android.content.Context` `getContext`(`com.google.firebase.firestore.core.ComponentProvider$Configuration` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ComponentProvider$Configuration;.getContext:()Landroid/content/Context;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.firestore.core.DatabaseInfo` `getDatabaseInfo`(`com.google.firebase.firestore.core.ComponentProvider$Configuration` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ComponentProvider$Configuration;.getDatabaseInfo:()Lcom/google/firebase/firestore/core/DatabaseInfo;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.firestore.remote.Datastore` `getDatastore`(`com.google.firebase.firestore.core.ComponentProvider$Configuration` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ComponentProvider$Configuration;.getDatastore:()Lcom/google/firebase/firestore/remote/Datastore;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.firestore.auth.User` `getInitialUser`(`com.google.firebase.firestore.core.ComponentProvider$Configuration` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ComponentProvider$Configuration;.getInitialUser:()Lcom/google/firebase/firestore/auth/User;` @AccessFlag  {

  # return;
}
procedure `int` `getMaxConcurrentLimboResolutions`(`com.google.firebase.firestore.core.ComponentProvider$Configuration` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ComponentProvider$Configuration;.getMaxConcurrentLimboResolutions:()I` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.firestore.FirebaseFirestoreSettings` `getSettings`(`com.google.firebase.firestore.core.ComponentProvider$Configuration` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/ComponentProvider$Configuration;.getSettings:()Lcom/google/firebase/firestore/FirebaseFirestoreSettings;` @AccessFlag  {

  # return;
}
