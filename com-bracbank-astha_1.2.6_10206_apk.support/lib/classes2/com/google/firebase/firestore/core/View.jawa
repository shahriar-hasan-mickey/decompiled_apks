record `com.google.firebase.firestore.core.View` @kind class @AccessFlag PUBLIC {
  `boolean` `com.google.firebase.firestore.core.View.current` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.model.DocumentSet` `com.google.firebase.firestore.core.View.documentSet` @AccessFlag PRIVATE;
  `com.google.firebase.database.collection.ImmutableSortedSet` `com.google.firebase.firestore.core.View.limboDocuments` @AccessFlag PRIVATE;
  `com.google.firebase.database.collection.ImmutableSortedSet` `com.google.firebase.firestore.core.View.mutatedKeys` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.core.Query` `com.google.firebase.firestore.core.View.query` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.core.ViewSnapshot$SyncState` `com.google.firebase.firestore.core.View.syncState` @AccessFlag PRIVATE;
  `com.google.firebase.database.collection.ImmutableSortedSet` `com.google.firebase.firestore.core.View.syncedDocuments` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.firestore.core.View` v1 @kind this, `com.google.firebase.firestore.core.Query` v2 @kind object, `com.google.firebase.database.collection.ImmutableSortedSet` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.<init>:(Lcom/google/firebase/firestore/core/Query;Lcom/google/firebase/database/collection/ImmutableSortedSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`com.google.firebase.firestore.core.View` v0 @kind object, `com.google.firebase.firestore.core.DocumentViewChange` v1 @kind object, `com.google.firebase.firestore.core.DocumentViewChange` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.a:(Lcom/google/firebase/firestore/core/View;Lcom/google/firebase/firestore/core/DocumentViewChange;Lcom/google/firebase/firestore/core/DocumentViewChange;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `applyTargetChange`(`com.google.firebase.firestore.core.View` v5 @kind this, `com.google.firebase.firestore.remote.TargetChange` v6 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.applyTargetChange:(Lcom/google/firebase/firestore/remote/TargetChange;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `changeTypeOrder`(`com.google.firebase.firestore.core.DocumentViewChange` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.changeTypeOrder:(Lcom/google/firebase/firestore/core/DocumentViewChange;)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `lambda$applyChanges$0`(`com.google.firebase.firestore.core.View` v3 @kind this, `com.google.firebase.firestore.core.DocumentViewChange` v4 @kind object, `com.google.firebase.firestore.core.DocumentViewChange` v5 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.lambda$applyChanges$0:(Lcom/google/firebase/firestore/core/DocumentViewChange;Lcom/google/firebase/firestore/core/DocumentViewChange;)I` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `boolean` `shouldBeLimboDoc`(`com.google.firebase.firestore.core.View` v2 @kind this, `com.google.firebase.firestore.model.DocumentKey` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.shouldBeLimboDoc:(Lcom/google/firebase/firestore/model/DocumentKey;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `shouldWaitForSyncedDocument`(`com.google.firebase.firestore.core.View` v0 @kind this, `com.google.firebase.firestore.model.Document` v1 @kind object, `com.google.firebase.firestore.model.Document` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.shouldWaitForSyncedDocument:(Lcom/google/firebase/firestore/model/Document;Lcom/google/firebase/firestore/model/Document;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.List` `updateLimboDocuments`(`com.google.firebase.firestore.core.View` v6 @kind this) @signature `Lcom/google/firebase/firestore/core/View;.updateLimboDocuments:()Ljava/util/List;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.core.ViewChange` `applyChanges`(`com.google.firebase.firestore.core.View` v1 @kind this, `com.google.firebase.firestore.core.View$DocumentChanges` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.applyChanges:(Lcom/google/firebase/firestore/core/View$DocumentChanges;)Lcom/google/firebase/firestore/core/ViewChange;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.ViewChange` `applyChanges`(`com.google.firebase.firestore.core.View` v18 @kind this, `com.google.firebase.firestore.core.View$DocumentChanges` v19 @kind object, `com.google.firebase.firestore.remote.TargetChange` v20 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.applyChanges:(Lcom/google/firebase/firestore/core/View$DocumentChanges;Lcom/google/firebase/firestore/remote/TargetChange;)Lcom/google/firebase/firestore/core/ViewChange;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.ViewChange` `applyOnlineStateChange`(`com.google.firebase.firestore.core.View` v6 @kind this, `com.google.firebase.firestore.core.OnlineState` v7 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.applyOnlineStateChange:(Lcom/google/firebase/firestore/core/OnlineState;)Lcom/google/firebase/firestore/core/ViewChange;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.View$DocumentChanges` `computeDocChanges`(`com.google.firebase.firestore.core.View` v1 @kind this, `com.google.firebase.database.collection.ImmutableSortedMap` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.computeDocChanges:(Lcom/google/firebase/database/collection/ImmutableSortedMap;)Lcom/google/firebase/firestore/core/View$DocumentChanges;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.core.View$DocumentChanges` `computeDocChanges`(`com.google.firebase.firestore.core.View` v18 @kind this, `com.google.firebase.database.collection.ImmutableSortedMap` v19 @kind object, `com.google.firebase.firestore.core.View$DocumentChanges` v20 @kind object) @signature `Lcom/google/firebase/firestore/core/View;.computeDocChanges:(Lcom/google/firebase/database/collection/ImmutableSortedMap;Lcom/google/firebase/firestore/core/View$DocumentChanges;)Lcom/google/firebase/firestore/core/View$DocumentChanges;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.ImmutableSortedSet` `getLimboDocuments`(`com.google.firebase.firestore.core.View` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/View;.getLimboDocuments:()Lcom/google/firebase/database/collection/ImmutableSortedSet;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.firestore.core.ViewSnapshot$SyncState` `getSyncState`(`com.google.firebase.firestore.core.View` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/View;.getSyncState:()Lcom/google/firebase/firestore/core/ViewSnapshot$SyncState;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.database.collection.ImmutableSortedSet` `getSyncedDocuments`(`com.google.firebase.firestore.core.View` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/View;.getSyncedDocuments:()Lcom/google/firebase/database/collection/ImmutableSortedSet;` @AccessFlag  {

  # return;
}
