record `com.google.firebase.firestore.core.TransactionRunner` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.firestore.util.AsyncQueue` `com.google.firebase.firestore.core.TransactionRunner.asyncQueue` @AccessFlag PRIVATE;
  `int` `com.google.firebase.firestore.core.TransactionRunner.attemptsRemaining` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.util.ExponentialBackoff` `com.google.firebase.firestore.core.TransactionRunner.backoff` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.remote.RemoteStore` `com.google.firebase.firestore.core.TransactionRunner.remoteStore` @AccessFlag PRIVATE;
  `com.google.android.gms.tasks.TaskCompletionSource` `com.google.firebase.firestore.core.TransactionRunner.taskSource` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.util.Function` `com.google.firebase.firestore.core.TransactionRunner.updateFunction` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.firestore.core.TransactionRunner` v1 @kind this, `com.google.firebase.firestore.util.AsyncQueue` v2 @kind object, `com.google.firebase.firestore.remote.RemoteStore` v3 @kind object, `com.google.firebase.firestore.TransactionOptions` v4 @kind object, `com.google.firebase.firestore.util.Function` v5 @kind object) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.<init>:(Lcom/google/firebase/firestore/util/AsyncQueue;Lcom/google/firebase/firestore/remote/RemoteStore;Lcom/google/firebase/firestore/TransactionOptions;Lcom/google/firebase/firestore/util/Function;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.core.TransactionRunner` v0 @kind object, `com.google.firebase.firestore.core.Transaction` v1 @kind object, `com.google.android.gms.tasks.Task` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.a:(Lcom/google/firebase/firestore/core/TransactionRunner;Lcom/google/firebase/firestore/core/Transaction;Lcom/google/android/gms/tasks/Task;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`com.google.firebase.firestore.core.TransactionRunner` v0 @kind object, `com.google.android.gms.tasks.Task` v1 @kind object, `com.google.android.gms.tasks.Task` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.b:(Lcom/google/firebase/firestore/core/TransactionRunner;Lcom/google/android/gms/tasks/Task;Lcom/google/android/gms/tasks/Task;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`com.google.firebase.firestore.core.TransactionRunner` v0 @kind object) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.c:(Lcom/google/firebase/firestore/core/TransactionRunner;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `handleTransactionError`(`com.google.firebase.firestore.core.TransactionRunner` v1 @kind this, `com.google.android.gms.tasks.Task` v2 @kind object) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.handleTransactionError:(Lcom/google/android/gms/tasks/Task;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isRetryableTransactionError`(`java.lang.Exception` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.isRetryableTransactionError:(Ljava/lang/Exception;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `lambda$runWithBackoff$0`(`com.google.firebase.firestore.core.TransactionRunner` v1 @kind this, `com.google.android.gms.tasks.Task` v2 @kind object, `com.google.android.gms.tasks.Task` v3 @kind object) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.lambda$runWithBackoff$0:(Lcom/google/android/gms/tasks/Task;Lcom/google/android/gms/tasks/Task;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$runWithBackoff$1`(`com.google.firebase.firestore.core.TransactionRunner` v2 @kind this, `com.google.firebase.firestore.core.Transaction` v3 @kind object, `com.google.android.gms.tasks.Task` v4 @kind object) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.lambda$runWithBackoff$1:(Lcom/google/firebase/firestore/core/Transaction;Lcom/google/android/gms/tasks/Task;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$runWithBackoff$2`(`com.google.firebase.firestore.core.TransactionRunner` v4 @kind this) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.lambda$runWithBackoff$2:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `runWithBackoff`(`com.google.firebase.firestore.core.TransactionRunner` v2 @kind this) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.runWithBackoff:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `run`(`com.google.firebase.firestore.core.TransactionRunner` v1 @kind this) @signature `Lcom/google/firebase/firestore/core/TransactionRunner;.run:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
