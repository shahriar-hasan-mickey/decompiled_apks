record `com.google.firebase.firestore.WriteBatch` @kind class @AccessFlag PUBLIC {
  `boolean` `com.google.firebase.firestore.WriteBatch.committed` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.FirebaseFirestore` `com.google.firebase.firestore.WriteBatch.firestore` @AccessFlag PRIVATE_FINAL;
  `java.util.ArrayList` `com.google.firebase.firestore.WriteBatch.mutations` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.firestore.WriteBatch` v1 @kind this, `com.google.firebase.firestore.FirebaseFirestore` v2 @kind object) @signature `Lcom/google/firebase/firestore/WriteBatch;.<init>:(Lcom/google/firebase/firestore/FirebaseFirestore;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.WriteBatch` `update`(`com.google.firebase.firestore.WriteBatch` v2 @kind this, `com.google.firebase.firestore.DocumentReference` v3 @kind object, `com.google.firebase.firestore.core.UserData$ParsedUpdateData` v4 @kind object) @signature `Lcom/google/firebase/firestore/WriteBatch;.update:(Lcom/google/firebase/firestore/DocumentReference;Lcom/google/firebase/firestore/core/UserData$ParsedUpdateData;)Lcom/google/firebase/firestore/WriteBatch;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `verifyNotCommitted`(`com.google.firebase.firestore.WriteBatch` v2 @kind this) @signature `Lcom/google/firebase/firestore/WriteBatch;.verifyNotCommitted:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `commit`(`com.google.firebase.firestore.WriteBatch` v2 @kind this) @signature `Lcom/google/firebase/firestore/WriteBatch;.commit:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.WriteBatch` `delete`(`com.google.firebase.firestore.WriteBatch` v3 @kind this, `com.google.firebase.firestore.DocumentReference` v4 @kind object) @signature `Lcom/google/firebase/firestore/WriteBatch;.delete:(Lcom/google/firebase/firestore/DocumentReference;)Lcom/google/firebase/firestore/WriteBatch;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.WriteBatch` `set`(`com.google.firebase.firestore.WriteBatch` v1 @kind this, `com.google.firebase.firestore.DocumentReference` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/firebase/firestore/WriteBatch;.set:(Lcom/google/firebase/firestore/DocumentReference;Ljava/lang/Object;)Lcom/google/firebase/firestore/WriteBatch;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.WriteBatch` `set`(`com.google.firebase.firestore.WriteBatch` v1 @kind this, `com.google.firebase.firestore.DocumentReference` v2 @kind object, `java.lang.Object` v3 @kind object, `com.google.firebase.firestore.SetOptions` v4 @kind object) @signature `Lcom/google/firebase/firestore/WriteBatch;.set:(Lcom/google/firebase/firestore/DocumentReference;Ljava/lang/Object;Lcom/google/firebase/firestore/SetOptions;)Lcom/google/firebase/firestore/WriteBatch;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.WriteBatch` `update`(`com.google.firebase.firestore.WriteBatch` v2 @kind this, `com.google.firebase.firestore.DocumentReference` v3 @kind object, `com.google.firebase.firestore.FieldPath` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lcom/google/firebase/firestore/WriteBatch;.update:(Lcom/google/firebase/firestore/DocumentReference;Lcom/google/firebase/firestore/FieldPath;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/firebase/firestore/WriteBatch;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.WriteBatch` `update`(`com.google.firebase.firestore.WriteBatch` v2 @kind this, `com.google.firebase.firestore.DocumentReference` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lcom/google/firebase/firestore/WriteBatch;.update:(Lcom/google/firebase/firestore/DocumentReference;Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/firebase/firestore/WriteBatch;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.WriteBatch` `update`(`com.google.firebase.firestore.WriteBatch` v1 @kind this, `com.google.firebase.firestore.DocumentReference` v2 @kind object, `java.util.Map` v3 @kind object) @signature `Lcom/google/firebase/firestore/WriteBatch;.update:(Lcom/google/firebase/firestore/DocumentReference;Ljava/util/Map;)Lcom/google/firebase/firestore/WriteBatch;` @AccessFlag PUBLIC {

  # return;
}
