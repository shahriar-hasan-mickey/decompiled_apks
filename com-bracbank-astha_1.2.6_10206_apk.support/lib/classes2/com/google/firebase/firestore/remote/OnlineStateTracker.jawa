record `com.google.firebase.firestore.remote.OnlineStateTracker` @kind class @AccessFlag  {
  `com.google.firebase.firestore.remote.OnlineStateTracker$OnlineStateCallback` `com.google.firebase.firestore.remote.OnlineStateTracker.onlineStateCallback` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.util.AsyncQueue$DelayedTask` `com.google.firebase.firestore.remote.OnlineStateTracker.onlineStateTimer` @AccessFlag PRIVATE;
  `boolean` `com.google.firebase.firestore.remote.OnlineStateTracker.shouldWarnClientIsOffline` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.core.OnlineState` `com.google.firebase.firestore.remote.OnlineStateTracker.state` @AccessFlag PRIVATE;
  `int` `com.google.firebase.firestore.remote.OnlineStateTracker.watchStreamFailures` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.util.AsyncQueue` `com.google.firebase.firestore.remote.OnlineStateTracker.workerQueue` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.google.firebase.firestore.remote.OnlineStateTracker.LOG_TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.firebase.firestore.remote.OnlineStateTracker.MAX_WATCH_STREAM_FAILURES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.firebase.firestore.remote.OnlineStateTracker.ONLINE_STATE_TIMEOUT_MS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.firebase.firestore.remote.OnlineStateTracker` v0 @kind this, `com.google.firebase.firestore.util.AsyncQueue` v1 @kind object, `com.google.firebase.firestore.remote.OnlineStateTracker$OnlineStateCallback` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/OnlineStateTracker;.<init>:(Lcom/google/firebase/firestore/util/AsyncQueue;Lcom/google/firebase/firestore/remote/OnlineStateTracker$OnlineStateCallback;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.remote.OnlineStateTracker` v0 @kind object) @signature `Lcom/google/firebase/firestore/remote/OnlineStateTracker;.a:(Lcom/google/firebase/firestore/remote/OnlineStateTracker;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `clearOnlineStateTimer`(`com.google.firebase.firestore.remote.OnlineStateTracker` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/OnlineStateTracker;.clearOnlineStateTimer:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `lambda$handleWatchStreamStart$0`(`com.google.firebase.firestore.remote.OnlineStateTracker` v5 @kind this) @signature `Lcom/google/firebase/firestore/remote/OnlineStateTracker;.lambda$handleWatchStreamStart$0:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `logClientOfflineWarningIfNecessary`(`com.google.firebase.firestore.remote.OnlineStateTracker` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/google/firebase/firestore/remote/OnlineStateTracker;.logClientOfflineWarningIfNecessary:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setAndBroadcastState`(`com.google.firebase.firestore.remote.OnlineStateTracker` v1 @kind this, `com.google.firebase.firestore.core.OnlineState` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/OnlineStateTracker;.setAndBroadcastState:(Lcom/google/firebase/firestore/core/OnlineState;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.core.OnlineState` `getState`(`com.google.firebase.firestore.remote.OnlineStateTracker` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/OnlineStateTracker;.getState:()Lcom/google/firebase/firestore/core/OnlineState;` @AccessFlag  {

  # return;
}
procedure `void` `handleWatchStreamFailure`(`com.google.firebase.firestore.remote.OnlineStateTracker` v5 @kind this, `io.grpc.Status` v6 @kind object) @signature `Lcom/google/firebase/firestore/remote/OnlineStateTracker;.handleWatchStreamFailure:(Lio/grpc/Status;)V` @AccessFlag  {

  # return;
}
procedure `void` `handleWatchStreamStart`(`com.google.firebase.firestore.remote.OnlineStateTracker` v5 @kind this) @signature `Lcom/google/firebase/firestore/remote/OnlineStateTracker;.handleWatchStreamStart:()V` @AccessFlag  {

  # return;
}
procedure `void` `updateState`(`com.google.firebase.firestore.remote.OnlineStateTracker` v2 @kind this, `com.google.firebase.firestore.core.OnlineState` v3 @kind object) @signature `Lcom/google/firebase/firestore/remote/OnlineStateTracker;.updateState:(Lcom/google/firebase/firestore/core/OnlineState;)V` @AccessFlag  {

  # return;
}
