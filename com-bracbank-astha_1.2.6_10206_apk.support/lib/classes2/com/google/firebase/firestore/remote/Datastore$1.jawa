record `com.google.firebase.firestore.remote.Datastore$1` @kind class @AccessFlag  extends `com.google.firebase.firestore.remote.FirestoreChannel$StreamingListener` @kind class {
  `com.google.firebase.firestore.remote.Datastore` `com.google.firebase.firestore.remote.Datastore$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `com.google.android.gms.tasks.TaskCompletionSource` `com.google.firebase.firestore.remote.Datastore$1.val$completionSource` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `com.google.firebase.firestore.remote.Datastore$1.val$keys` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `com.google.firebase.firestore.remote.Datastore$1.val$responses` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.firestore.remote.Datastore$1` v0 @kind this, `com.google.firebase.firestore.remote.Datastore` v1 @kind object, `java.util.List` v2 @kind object, `java.util.List` v3 @kind object, `com.google.android.gms.tasks.TaskCompletionSource` v4 @kind object) @signature `Lcom/google/firebase/firestore/remote/Datastore$1;.<init>:(Lcom/google/firebase/firestore/remote/Datastore;Ljava/util/List;Ljava/util/List;Lcom/google/android/gms/tasks/TaskCompletionSource;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `onClose`(`com.google.firebase.firestore.remote.Datastore$1` v2 @kind this, `io.grpc.Status` v3 @kind object) @signature `Lcom/google/firebase/firestore/remote/Datastore$1;.onClose:(Lio/grpc/Status;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onMessage`(`com.google.firebase.firestore.remote.Datastore$1` v3 @kind this, `com.google.firestore.v1.BatchGetDocumentsResponse` v4 @kind object) @signature `Lcom/google/firebase/firestore/remote/Datastore$1;.onMessage:(Lcom/google/firestore/v1/BatchGetDocumentsResponse;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onMessage`(`com.google.firebase.firestore.remote.Datastore$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/firestore/remote/Datastore$1;.onMessage:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
