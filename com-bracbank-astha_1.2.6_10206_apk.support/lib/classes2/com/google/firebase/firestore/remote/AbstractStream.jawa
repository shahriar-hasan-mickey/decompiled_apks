record `com.google.firebase.firestore.remote.AbstractStream` @kind class @AccessFlag ABSTRACT extends `com.google.firebase.firestore.remote.Stream` @kind interface {
  `com.google.firebase.firestore.util.ExponentialBackoff` `com.google.firebase.firestore.remote.AbstractStream.backoff` @AccessFlag FINAL;
  `io.grpc.f` `com.google.firebase.firestore.remote.AbstractStream.call` @AccessFlag PRIVATE;
  `long` `com.google.firebase.firestore.remote.AbstractStream.closeCount` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.remote.FirestoreChannel` `com.google.firebase.firestore.remote.AbstractStream.firestoreChannel` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.util.AsyncQueue$DelayedTask` `com.google.firebase.firestore.remote.AbstractStream.healthCheck` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.util.AsyncQueue$TimerId` `com.google.firebase.firestore.remote.AbstractStream.healthTimerId` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.remote.AbstractStream$IdleTimeoutRunnable` `com.google.firebase.firestore.remote.AbstractStream.idleTimeoutRunnable` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.util.AsyncQueue$DelayedTask` `com.google.firebase.firestore.remote.AbstractStream.idleTimer` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.util.AsyncQueue$TimerId` `com.google.firebase.firestore.remote.AbstractStream.idleTimerId` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.remote.Stream$StreamCallback` `com.google.firebase.firestore.remote.AbstractStream.listener` @AccessFlag FINAL;
  `io.grpc.MethodDescriptor` `com.google.firebase.firestore.remote.AbstractStream.methodDescriptor` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.remote.Stream$State` `com.google.firebase.firestore.remote.AbstractStream.state` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.util.AsyncQueue` `com.google.firebase.firestore.remote.AbstractStream.workerQueue` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.google.firebase.firestore.remote.AbstractStream.BACKOFF_CLIENT_NETWORK_FAILURE_MAX_DELAY_MS` @AccessFlag PRIVATE_STATIC_FINAL;
global `double` `@@com.google.firebase.firestore.remote.AbstractStream.BACKOFF_FACTOR` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.firebase.firestore.remote.AbstractStream.BACKOFF_INITIAL_DELAY_MS` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.firebase.firestore.remote.AbstractStream.BACKOFF_MAX_DELAY_MS` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.firebase.firestore.remote.AbstractStream.HEALTHY_TIMEOUT_MS` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.firebase.firestore.remote.AbstractStream.IDLE_TIMEOUT_MS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.remote.AbstractStream` v11 @kind this, `com.google.firebase.firestore.remote.FirestoreChannel` v12 @kind object, `io.grpc.MethodDescriptor` v13 @kind object, `com.google.firebase.firestore.util.AsyncQueue` v14 @kind object, `com.google.firebase.firestore.util.AsyncQueue$TimerId` v15 @kind object, `com.google.firebase.firestore.util.AsyncQueue$TimerId` v16 @kind object, `com.google.firebase.firestore.util.AsyncQueue$TimerId` v17 @kind object, `com.google.firebase.firestore.remote.Stream$StreamCallback` v18 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.<init>:(Lcom/google/firebase/firestore/remote/FirestoreChannel;Lio/grpc/MethodDescriptor;Lcom/google/firebase/firestore/util/AsyncQueue;Lcom/google/firebase/firestore/util/AsyncQueue$TimerId;Lcom/google/firebase/firestore/util/AsyncQueue$TimerId;Lcom/google/firebase/firestore/util/AsyncQueue$TimerId;Lcom/google/firebase/firestore/remote/Stream$StreamCallback;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.remote.AbstractStream` v0 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.a:(Lcom/google/firebase/firestore/remote/AbstractStream;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.util.AsyncQueue` `access$000`(`com.google.firebase.firestore.remote.AbstractStream` v0 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.access$000:(Lcom/google/firebase/firestore/remote/AbstractStream;)Lcom/google/firebase/firestore/util/AsyncQueue;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `long` `access$100`(`com.google.firebase.firestore.remote.AbstractStream` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.access$100:(Lcom/google/firebase/firestore/remote/AbstractStream;)J` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$200`(`com.google.firebase.firestore.remote.AbstractStream` v0 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.access$200:(Lcom/google/firebase/firestore/remote/AbstractStream;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$300`(`com.google.firebase.firestore.remote.AbstractStream` v0 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.access$300:(Lcom/google/firebase/firestore/remote/AbstractStream;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`com.google.firebase.firestore.remote.AbstractStream` v0 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.b:(Lcom/google/firebase/firestore/remote/AbstractStream;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `cancelHealthCheck`(`com.google.firebase.firestore.remote.AbstractStream` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.cancelHealthCheck:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `cancelIdleCheck`(`com.google.firebase.firestore.remote.AbstractStream` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.cancelIdleCheck:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `close`(`com.google.firebase.firestore.remote.AbstractStream` v7 @kind this, `com.google.firebase.firestore.remote.Stream$State` v8 @kind object, `io.grpc.Status` v9 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.close:(Lcom/google/firebase/firestore/remote/Stream$State;Lio/grpc/Status;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `handleIdleCloseTimer`(`com.google.firebase.firestore.remote.AbstractStream` v2 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.handleIdleCloseTimer:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `lambda$onOpen$0`(`com.google.firebase.firestore.remote.AbstractStream` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.lambda$onOpen$0:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$performBackoff$1`(`com.google.firebase.firestore.remote.AbstractStream` v4 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.lambda$performBackoff$1:()V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `onOpen`(`com.google.firebase.firestore.remote.AbstractStream` v5 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.onOpen:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `performBackoff`(`com.google.firebase.firestore.remote.AbstractStream` v3 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.performBackoff:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `handleServerClose`(`com.google.firebase.firestore.remote.AbstractStream` v3 @kind this, `io.grpc.Status` v4 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.handleServerClose:(Lio/grpc/Status;)V` @AccessFlag  {

  # return;
}
procedure `void` `inhibitBackoff`(`com.google.firebase.firestore.remote.AbstractStream` v3 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.inhibitBackoff:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isOpen`(`com.google.firebase.firestore.remote.AbstractStream` v2 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.isOpen:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isStarted`(`com.google.firebase.firestore.remote.AbstractStream` v2 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.isStarted:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `markIdle`(`com.google.firebase.firestore.remote.AbstractStream` v5 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.markIdle:()V` @AccessFlag  {

  # return;
}
procedure `void` `onNext`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `start`(`com.google.firebase.firestore.remote.AbstractStream` v5 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.start:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `stop`(`com.google.firebase.firestore.remote.AbstractStream` v2 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.stop:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `tearDown`(`com.google.firebase.firestore.remote.AbstractStream` v0 @kind this) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.tearDown:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `writeRequest`(`com.google.firebase.firestore.remote.AbstractStream` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/firebase/firestore/remote/AbstractStream;.writeRequest:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {

  # return;
}
