record `com.google.firebase.firestore.remote.RemoteEvent` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `com.google.firebase.firestore.remote.RemoteEvent.documentUpdates` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.google.firebase.firestore.remote.RemoteEvent.resolvedLimboDocuments` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.model.SnapshotVersion` `com.google.firebase.firestore.remote.RemoteEvent.snapshotVersion` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.firestore.remote.RemoteEvent.targetChanges` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.google.firebase.firestore.remote.RemoteEvent.targetMismatches` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.firestore.remote.RemoteEvent` v0 @kind this, `com.google.firebase.firestore.model.SnapshotVersion` v1 @kind object, `java.util.Map` v2 @kind object, `java.util.Set` v3 @kind object, `java.util.Map` v4 @kind object, `java.util.Set` v5 @kind object) @signature `Lcom/google/firebase/firestore/remote/RemoteEvent;.<init>:(Lcom/google/firebase/firestore/model/SnapshotVersion;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Set;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.Map` `getDocumentUpdates`(`com.google.firebase.firestore.remote.RemoteEvent` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/RemoteEvent;.getDocumentUpdates:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `getResolvedLimboDocuments`(`com.google.firebase.firestore.remote.RemoteEvent` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/RemoteEvent;.getResolvedLimboDocuments:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.SnapshotVersion` `getSnapshotVersion`(`com.google.firebase.firestore.remote.RemoteEvent` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/RemoteEvent;.getSnapshotVersion:()Lcom/google/firebase/firestore/model/SnapshotVersion;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `getTargetChanges`(`com.google.firebase.firestore.remote.RemoteEvent` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/RemoteEvent;.getTargetChanges:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `getTargetMismatches`(`com.google.firebase.firestore.remote.RemoteEvent` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/RemoteEvent;.getTargetMismatches:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.firestore.remote.RemoteEvent` v2 @kind this) @signature `Lcom/google/firebase/firestore/remote/RemoteEvent;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
