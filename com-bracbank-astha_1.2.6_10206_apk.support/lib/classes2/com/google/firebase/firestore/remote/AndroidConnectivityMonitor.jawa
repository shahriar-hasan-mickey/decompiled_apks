record `com.google.firebase.firestore.remote.AndroidConnectivityMonitor` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.firebase.firestore.remote.ConnectivityMonitor` @kind interface {
  `java.util.List` `com.google.firebase.firestore.remote.AndroidConnectivityMonitor.callbacks` @AccessFlag PRIVATE_FINAL;
  `android.net.ConnectivityManager` `com.google.firebase.firestore.remote.AndroidConnectivityMonitor.connectivityManager` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.google.firebase.firestore.remote.AndroidConnectivityMonitor.context` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `com.google.firebase.firestore.remote.AndroidConnectivityMonitor.unregisterRunnable` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.google.firebase.firestore.remote.AndroidConnectivityMonitor.LOG_TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v3 @kind this, `android.content.Context` v4 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v0 @kind object, `com.google.firebase.firestore.remote.AndroidConnectivityMonitor$NetworkReceiver` v1 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.a:(Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor$NetworkReceiver;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$200`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v0 @kind object, `boolean` v1 ) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.access$200:(Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;Z)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `access$300`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v0 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.access$300:(Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v0 @kind object, `com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback` v1 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.b:(Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor$DefaultNetworkCallback;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `configureBackgroundStateListener`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v3 @kind this) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.configureBackgroundStateListener:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `configureNetworkMonitoring`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v3 @kind this) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.configureNetworkMonitoring:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isConnected`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v2 @kind this) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.isConnected:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `lambda$configureNetworkMonitoring$0`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v1 @kind this, `com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.lambda$configureNetworkMonitoring$0:(Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor$DefaultNetworkCallback;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$configureNetworkMonitoring$1`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v1 @kind this, `com.google.firebase.firestore.remote.AndroidConnectivityMonitor$NetworkReceiver` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.lambda$configureNetworkMonitoring$1:(Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor$NetworkReceiver;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `raiseCallbacks`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v4 @kind this, `boolean` v5 ) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.raiseCallbacks:(Z)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addCallback`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v2 @kind this, `com.google.firebase.firestore.util.Consumer` v3 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.addCallback:(Lcom/google/firebase/firestore/util/Consumer;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `raiseForegroundNotification`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v3 @kind this) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.raiseForegroundNotification:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `shutdown`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;.shutdown:()V` @AccessFlag PUBLIC {

  # return;
}
