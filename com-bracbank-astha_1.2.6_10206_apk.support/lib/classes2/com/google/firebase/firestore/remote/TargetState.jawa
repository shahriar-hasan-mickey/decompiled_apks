record `com.google.firebase.firestore.remote.TargetState` @kind class @AccessFlag FINAL {
  `boolean` `com.google.firebase.firestore.remote.TargetState.current` @AccessFlag PRIVATE;
  `java.util.Map` `com.google.firebase.firestore.remote.TargetState.documentChanges` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.firebase.firestore.remote.TargetState.hasChanges` @AccessFlag PRIVATE;
  `int` `com.google.firebase.firestore.remote.TargetState.outstandingResponses` @AccessFlag PRIVATE;
  `com.google.protobuf.ByteString` `com.google.firebase.firestore.remote.TargetState.resumeToken` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.firestore.remote.TargetState` v2 @kind this) @signature `Lcom/google/firebase/firestore/remote/TargetState;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `addDocumentChange`(`com.google.firebase.firestore.remote.TargetState` v1 @kind this, `com.google.firebase.firestore.model.DocumentKey` v2 @kind object, `com.google.firebase.firestore.core.DocumentViewChange$Type` v3 @kind object) @signature `Lcom/google/firebase/firestore/remote/TargetState;.addDocumentChange:(Lcom/google/firebase/firestore/model/DocumentKey;Lcom/google/firebase/firestore/core/DocumentViewChange$Type;)V` @AccessFlag  {

  # return;
}
procedure `void` `clearChanges`(`com.google.firebase.firestore.remote.TargetState` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/TargetState;.clearChanges:()V` @AccessFlag  {

  # return;
}
procedure `boolean` `hasChanges`(`com.google.firebase.firestore.remote.TargetState` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/TargetState;.hasChanges:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `isCurrent`(`com.google.firebase.firestore.remote.TargetState` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/TargetState;.isCurrent:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `isPending`(`com.google.firebase.firestore.remote.TargetState` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/TargetState;.isPending:()Z` @AccessFlag  {

  # return;
}
procedure `void` `markCurrent`(`com.google.firebase.firestore.remote.TargetState` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/TargetState;.markCurrent:()V` @AccessFlag  {

  # return;
}
procedure `void` `recordPendingTargetRequest`(`com.google.firebase.firestore.remote.TargetState` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/TargetState;.recordPendingTargetRequest:()V` @AccessFlag  {

  # return;
}
procedure `void` `recordTargetResponse`(`com.google.firebase.firestore.remote.TargetState` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/TargetState;.recordTargetResponse:()V` @AccessFlag  {

  # return;
}
procedure `void` `removeDocumentChange`(`com.google.firebase.firestore.remote.TargetState` v1 @kind this, `com.google.firebase.firestore.model.DocumentKey` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/TargetState;.removeDocumentChange:(Lcom/google/firebase/firestore/model/DocumentKey;)V` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.firestore.remote.TargetChange` `toTargetChange`(`com.google.firebase.firestore.remote.TargetState` v10 @kind this) @signature `Lcom/google/firebase/firestore/remote/TargetState;.toTargetChange:()Lcom/google/firebase/firestore/remote/TargetChange;` @AccessFlag  {

  # return;
}
procedure `void` `updateResumeToken`(`com.google.firebase.firestore.remote.TargetState` v1 @kind this, `com.google.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/TargetState;.updateResumeToken:(Lcom/google/protobuf/ByteString;)V` @AccessFlag  {

  # return;
}
