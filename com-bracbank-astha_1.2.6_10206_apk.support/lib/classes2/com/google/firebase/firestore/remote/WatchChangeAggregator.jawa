record `com.google.firebase.firestore.remote.WatchChangeAggregator` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `com.google.firebase.firestore.remote.WatchChangeAggregator.pendingDocumentTargetMapping` @AccessFlag PRIVATE;
  `java.util.Map` `com.google.firebase.firestore.remote.WatchChangeAggregator.pendingDocumentUpdates` @AccessFlag PRIVATE;
  `java.util.Set` `com.google.firebase.firestore.remote.WatchChangeAggregator.pendingTargetResets` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.remote.WatchChangeAggregator$TargetMetadataProvider` `com.google.firebase.firestore.remote.WatchChangeAggregator.targetMetadataProvider` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.firestore.remote.WatchChangeAggregator.targetStates` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v1 @kind this, `com.google.firebase.firestore.remote.WatchChangeAggregator$TargetMetadataProvider` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.<init>:(Lcom/google/firebase/firestore/remote/WatchChangeAggregator$TargetMetadataProvider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `addDocumentToTarget`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v3 @kind this, `int` v4 , `com.google.firebase.firestore.model.MutableDocument` v5 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.addDocumentToTarget:(ILcom/google/firebase/firestore/model/MutableDocument;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Set` `ensureDocumentTargetMapping`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v2 @kind this, `com.google.firebase.firestore.model.DocumentKey` v3 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.ensureDocumentTargetMapping:(Lcom/google/firebase/firestore/model/DocumentKey;)Ljava/util/Set;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.remote.TargetState` `ensureTargetState`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v2 @kind this, `int` v3 ) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.ensureTargetState:(I)Lcom/google/firebase/firestore/remote/TargetState;` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getCurrentDocumentCountForTarget`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v2 @kind this, `int` v3 ) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.getCurrentDocumentCountForTarget:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Collection` `getTargetIds`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v3 @kind this, `com.google.firebase.firestore.remote.WatchChange$WatchTargetChange` v4 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.getTargetIds:(Lcom/google/firebase/firestore/remote/WatchChange$WatchTargetChange;)Ljava/util/Collection;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isActiveTarget`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v0 @kind this, `int` v1 ) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.isActiveTarget:(I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.local.TargetData` `queryDataForActiveTarget`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v2 @kind this, `int` v3 ) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.queryDataForActiveTarget:(I)Lcom/google/firebase/firestore/local/TargetData;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `removeDocumentFromTarget`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v2 @kind this, `int` v3 , `com.google.firebase.firestore.model.DocumentKey` v4 @kind object, `com.google.firebase.firestore.model.MutableDocument` v5 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.removeDocumentFromTarget:(ILcom/google/firebase/firestore/model/DocumentKey;Lcom/google/firebase/firestore/model/MutableDocument;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `resetTarget`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v3 @kind this, `int` v4 ) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.resetTarget:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `targetContainsDocument`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v1 @kind this, `int` v2 , `com.google.firebase.firestore.model.DocumentKey` v3 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.targetContainsDocument:(ILcom/google/firebase/firestore/model/DocumentKey;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.remote.RemoteEvent` `createRemoteEvent`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v10 @kind this, `com.google.firebase.firestore.model.SnapshotVersion` v11 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.createRemoteEvent:(Lcom/google/firebase/firestore/model/SnapshotVersion;)Lcom/google/firebase/firestore/remote/RemoteEvent;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `handleDocumentChange`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v5 @kind this, `com.google.firebase.firestore.remote.WatchChange$DocumentChange` v6 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.handleDocumentChange:(Lcom/google/firebase/firestore/remote/WatchChange$DocumentChange;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `handleExistenceFilter`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v5 @kind this, `com.google.firebase.firestore.remote.WatchChange$ExistenceFilterWatchChange` v6 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.handleExistenceFilter:(Lcom/google/firebase/firestore/remote/WatchChange$ExistenceFilterWatchChange;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `handleTargetChange`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v7 @kind this, `com.google.firebase.firestore.remote.WatchChange$WatchTargetChange` v8 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.handleTargetChange:(Lcom/google/firebase/firestore/remote/WatchChange$WatchTargetChange;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `recordPendingTargetRequest`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v0 @kind this, `int` v1 ) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.recordPendingTargetRequest:(I)V` @AccessFlag  {

  # return;
}
procedure `void` `removeTarget`(`com.google.firebase.firestore.remote.WatchChangeAggregator` v1 @kind this, `int` v2 ) @signature `Lcom/google/firebase/firestore/remote/WatchChangeAggregator;.removeTarget:(I)V` @AccessFlag  {

  # return;
}
