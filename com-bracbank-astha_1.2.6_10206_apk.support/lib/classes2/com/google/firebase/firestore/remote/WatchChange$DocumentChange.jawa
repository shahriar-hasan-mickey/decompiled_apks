record `com.google.firebase.firestore.remote.WatchChange$DocumentChange` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.firebase.firestore.remote.WatchChange` @kind class {
  `com.google.firebase.firestore.model.DocumentKey` `com.google.firebase.firestore.remote.WatchChange$DocumentChange.documentKey` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.model.MutableDocument` `com.google.firebase.firestore.remote.WatchChange$DocumentChange.newDocument` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.google.firebase.firestore.remote.WatchChange$DocumentChange.removedTargetIds` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.google.firebase.firestore.remote.WatchChange$DocumentChange.updatedTargetIds` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.firestore.remote.WatchChange$DocumentChange` v1 @kind this, `java.util.List` v2 @kind object, `java.util.List` v3 @kind object, `com.google.firebase.firestore.model.DocumentKey` v4 @kind object, `com.google.firebase.firestore.model.MutableDocument` v5 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChange$DocumentChange;.<init>:(Ljava/util/List;Ljava/util/List;Lcom/google/firebase/firestore/model/DocumentKey;Lcom/google/firebase/firestore/model/MutableDocument;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.firestore.remote.WatchChange$DocumentChange` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/firebase/firestore/remote/WatchChange$DocumentChange;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.DocumentKey` `getDocumentKey`(`com.google.firebase.firestore.remote.WatchChange$DocumentChange` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/WatchChange$DocumentChange;.getDocumentKey:()Lcom/google/firebase/firestore/model/DocumentKey;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.MutableDocument` `getNewDocument`(`com.google.firebase.firestore.remote.WatchChange$DocumentChange` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/WatchChange$DocumentChange;.getNewDocument:()Lcom/google/firebase/firestore/model/MutableDocument;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getRemovedTargetIds`(`com.google.firebase.firestore.remote.WatchChange$DocumentChange` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/WatchChange$DocumentChange;.getRemovedTargetIds:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getUpdatedTargetIds`(`com.google.firebase.firestore.remote.WatchChange$DocumentChange` v1 @kind this) @signature `Lcom/google/firebase/firestore/remote/WatchChange$DocumentChange;.getUpdatedTargetIds:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.firestore.remote.WatchChange$DocumentChange` v2 @kind this) @signature `Lcom/google/firebase/firestore/remote/WatchChange$DocumentChange;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.firestore.remote.WatchChange$DocumentChange` v2 @kind this) @signature `Lcom/google/firebase/firestore/remote/WatchChange$DocumentChange;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
