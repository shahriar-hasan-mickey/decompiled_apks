record `com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback` @kind class @AccessFlag  extends `android.net.ConnectivityManager$NetworkCallback` @kind class {
  `com.google.firebase.firestore.remote.AndroidConnectivityMonitor` `com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback` v0 @kind this, `com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v1 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor$DefaultNetworkCallback;.<init>:(Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback` v0 @kind this, `com.google.firebase.firestore.remote.AndroidConnectivityMonitor` v1 @kind object, `com.google.firebase.firestore.remote.AndroidConnectivityMonitor$1` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor$DefaultNetworkCallback;.<init>:(Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor;Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `onAvailable`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback` v1 @kind this, `android.net.Network` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor$DefaultNetworkCallback;.onAvailable:(Landroid/net/Network;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onLost`(`com.google.firebase.firestore.remote.AndroidConnectivityMonitor$DefaultNetworkCallback` v1 @kind this, `android.net.Network` v2 @kind object) @signature `Lcom/google/firebase/firestore/remote/AndroidConnectivityMonitor$DefaultNetworkCallback;.onLost:(Landroid/net/Network;)V` @AccessFlag PUBLIC {

  # return;
}
