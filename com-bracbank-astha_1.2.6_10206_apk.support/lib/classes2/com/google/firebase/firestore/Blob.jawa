record `com.google.firebase.firestore.Blob` @kind class @AccessFlag PUBLIC extends `java.lang.Comparable` @kind interface {
  `com.google.protobuf.ByteString` `com.google.firebase.firestore.Blob.bytes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.firestore.Blob` v0 @kind this, `com.google.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/firebase/firestore/Blob;.<init>:(Lcom/google/protobuf/ByteString;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.Blob` `fromByteString`(`com.google.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/firebase/firestore/Blob;.fromByteString:(Lcom/google/protobuf/ByteString;)Lcom/google/firebase/firestore/Blob;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.firestore.Blob` `fromBytes`(`byte`[] v1 @kind object) @signature `Lcom/google/firebase/firestore/Blob;.fromBytes:([B)Lcom/google/firebase/firestore/Blob;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.firestore.Blob` v1 @kind this, `com.google.firebase.firestore.Blob` v2 @kind object) @signature `Lcom/google/firebase/firestore/Blob;.compareTo:(Lcom/google/firebase/firestore/Blob;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.firestore.Blob` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/firestore/Blob;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.firestore.Blob` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/firebase/firestore/Blob;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.firestore.Blob` v1 @kind this) @signature `Lcom/google/firebase/firestore/Blob;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.protobuf.ByteString` `toByteString`(`com.google.firebase.firestore.Blob` v1 @kind this) @signature `Lcom/google/firebase/firestore/Blob;.toByteString:()Lcom/google/protobuf/ByteString;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `toBytes`(`com.google.firebase.firestore.Blob` v1 @kind this) @signature `Lcom/google/firebase/firestore/Blob;.toBytes:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.firestore.Blob` v2 @kind this) @signature `Lcom/google/firebase/firestore/Blob;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
