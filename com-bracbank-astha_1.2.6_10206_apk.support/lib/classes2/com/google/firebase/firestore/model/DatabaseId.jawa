record `com.google.firebase.firestore.model.DatabaseId` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `java.lang.String` `com.google.firebase.firestore.model.DatabaseId.databaseId` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.firebase.firestore.model.DatabaseId.projectId` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.google.firebase.firestore.model.DatabaseId.DEFAULT_DATABASE_ID` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.firebase.firestore.model.DatabaseId` `@@com.google.firebase.firestore.model.DatabaseId.EMPTY` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/firestore/model/DatabaseId;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.model.DatabaseId` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.model.DatabaseId` `forDatabase`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.forDatabase:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/firebase/firestore/model/DatabaseId;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.firestore.model.DatabaseId` `forProject`(`java.lang.String` v1 @kind object) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.forProject:(Ljava/lang/String;)Lcom/google/firebase/firestore/model/DatabaseId;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.firestore.model.DatabaseId` `fromName`(`java.lang.String` v5 @kind object) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.fromName:(Ljava/lang/String;)Lcom/google/firebase/firestore/model/DatabaseId;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.firestore.model.DatabaseId` v2 @kind this, `com.google.firebase.firestore.model.DatabaseId` v3 @kind object) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.compareTo:(Lcom/google/firebase/firestore/model/DatabaseId;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.firestore.model.DatabaseId` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.firestore.model.DatabaseId` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getDatabaseId`(`com.google.firebase.firestore.model.DatabaseId` v1 @kind this) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.getDatabaseId:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getProjectId`(`com.google.firebase.firestore.model.DatabaseId` v1 @kind this) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.getProjectId:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.firestore.model.DatabaseId` v2 @kind this) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.firestore.model.DatabaseId` v2 @kind this) @signature `Lcom/google/firebase/firestore/model/DatabaseId;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
