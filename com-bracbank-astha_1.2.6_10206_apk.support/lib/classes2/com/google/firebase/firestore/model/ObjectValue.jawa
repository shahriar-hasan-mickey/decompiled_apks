record `com.google.firebase.firestore.model.ObjectValue` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Cloneable` @kind interface {
  `java.util.Map` `com.google.firebase.firestore.model.ObjectValue.overlayMap` @AccessFlag PRIVATE_FINAL;
  `com.google.firestore.v1.Value` `com.google.firebase.firestore.model.ObjectValue.partialValue` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.firestore.model.ObjectValue` v2 @kind this) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.model.ObjectValue` v5 @kind this, `com.google.firestore.v1.Value` v6 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.<init>:(Lcom/google/firestore/v1/Value;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firestore.v1.MapValue` `applyOverlay`(`com.google.firebase.firestore.model.ObjectValue` v7 @kind this, `com.google.firebase.firestore.model.FieldPath` v8 @kind object, `java.util.Map` v9 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.applyOverlay:(Lcom/google/firebase/firestore/model/FieldPath;Ljava/util/Map;)Lcom/google/firestore/v1/MapValue;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firestore.v1.Value` `buildProto`(`com.google.firebase.firestore.model.ObjectValue` v3 @kind this) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.buildProto:()Lcom/google/firestore/v1/Value;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.model.mutation.FieldMask` `extractFieldMask`(`com.google.firebase.firestore.model.ObjectValue` v4 @kind this, `com.google.firestore.v1.MapValue` v5 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.extractFieldMask:(Lcom/google/firestore/v1/MapValue;)Lcom/google/firebase/firestore/model/mutation/FieldMask;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firestore.v1.Value` `extractNestedValue`(`com.google.firebase.firestore.model.ObjectValue` v3 @kind this, `com.google.firestore.v1.Value` v4 @kind object, `com.google.firebase.firestore.model.FieldPath` v5 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.extractNestedValue:(Lcom/google/firestore/v1/Value;Lcom/google/firebase/firestore/model/FieldPath;)Lcom/google/firestore/v1/Value;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.model.ObjectValue` `fromMap`(`java.util.Map` v3 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.fromMap:(Ljava/util/Map;)Lcom/google/firebase/firestore/model/ObjectValue;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `setOverlay`(`com.google.firebase.firestore.model.ObjectValue` v6 @kind this, `com.google.firebase.firestore.model.FieldPath` v7 @kind object, `com.google.firestore.v1.Value` v8 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.setOverlay:(Lcom/google/firebase/firestore/model/FieldPath;Lcom/google/firestore/v1/Value;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.model.ObjectValue` `clone`(`com.google.firebase.firestore.model.ObjectValue` v2 @kind this) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.clone:()Lcom/google/firebase/firestore/model/ObjectValue;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `clone`(`com.google.firebase.firestore.model.ObjectValue` v1 @kind this) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `delete`(`com.google.firebase.firestore.model.ObjectValue` v3 @kind this, `com.google.firebase.firestore.model.FieldPath` v4 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.delete:(Lcom/google/firebase/firestore/model/FieldPath;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.firestore.model.ObjectValue` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firestore.v1.Value` `get`(`com.google.firebase.firestore.model.ObjectValue` v1 @kind this, `com.google.firebase.firestore.model.FieldPath` v2 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.get:(Lcom/google/firebase/firestore/model/FieldPath;)Lcom/google/firestore/v1/Value;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.model.mutation.FieldMask` `getFieldMask`(`com.google.firebase.firestore.model.ObjectValue` v1 @kind this) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.getFieldMask:()Lcom/google/firebase/firestore/model/mutation/FieldMask;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `getFieldsMap`(`com.google.firebase.firestore.model.ObjectValue` v1 @kind this) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.getFieldsMap:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.firestore.model.ObjectValue` v1 @kind this) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `set`(`com.google.firebase.firestore.model.ObjectValue` v3 @kind this, `com.google.firebase.firestore.model.FieldPath` v4 @kind object, `com.google.firestore.v1.Value` v5 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.set:(Lcom/google/firebase/firestore/model/FieldPath;Lcom/google/firestore/v1/Value;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setAll`(`com.google.firebase.firestore.model.ObjectValue` v3 @kind this, `java.util.Map` v4 @kind object) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.setAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.firebase.firestore.model.ObjectValue` v2 @kind this) @signature `Lcom/google/firebase/firestore/model/ObjectValue;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
