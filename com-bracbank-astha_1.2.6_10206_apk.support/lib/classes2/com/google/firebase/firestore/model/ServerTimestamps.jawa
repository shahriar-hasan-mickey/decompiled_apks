record `com.google.firebase.firestore.model.ServerTimestamps` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@com.google.firebase.firestore.model.ServerTimestamps.LOCAL_WRITE_TIME_KEY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.firestore.model.ServerTimestamps.PREVIOUS_VALUE_KEY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.firestore.model.ServerTimestamps.SERVER_TIMESTAMP_SENTINEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.firestore.model.ServerTimestamps.TYPE_KEY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.firebase.firestore.model.ServerTimestamps` v0 @kind this) @signature `Lcom/google/firebase/firestore/model/ServerTimestamps;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.protobuf.Timestamp` `getLocalWriteTime`(`com.google.firestore.v1.Value` v1 @kind object) @signature `Lcom/google/firebase/firestore/model/ServerTimestamps;.getLocalWriteTime:(Lcom/google/firestore/v1/Value;)Lcom/google/protobuf/Timestamp;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firestore.v1.Value` `getPreviousValue`(`com.google.firestore.v1.Value` v2 @kind object) @signature `Lcom/google/firebase/firestore/model/ServerTimestamps;.getPreviousValue:(Lcom/google/firestore/v1/Value;)Lcom/google/firestore/v1/Value;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isServerTimestamp`(`com.google.firestore.v1.Value` v2 @kind object) @signature `Lcom/google/firebase/firestore/model/ServerTimestamps;.isServerTimestamp:(Lcom/google/firestore/v1/Value;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firestore.v1.Value` `valueOf`(`com.google.firebase.Timestamp` v5 @kind object, `com.google.firestore.v1.Value` v6 @kind object) @signature `Lcom/google/firebase/firestore/model/ServerTimestamps;.valueOf:(Lcom/google/firebase/Timestamp;Lcom/google/firestore/v1/Value;)Lcom/google/firestore/v1/Value;` @AccessFlag PUBLIC_STATIC {

  # return;
}
