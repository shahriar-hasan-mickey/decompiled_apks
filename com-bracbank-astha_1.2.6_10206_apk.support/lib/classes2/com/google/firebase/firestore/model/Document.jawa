record `com.google.firebase.firestore.model.Document` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `java.util.Comparator` `@@com.google.firebase.firestore.model.Document.KEY_COMPARATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/firestore/model/Document;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.model.ObjectValue` `getData`() @signature `Lcom/google/firebase/firestore/model/Document;.getData:()Lcom/google/firebase/firestore/model/ObjectValue;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firestore.v1.Value` `getField`(`com.google.firebase.firestore.model.FieldPath` v0 @kind object) @signature `Lcom/google/firebase/firestore/model/Document;.getField:(Lcom/google/firebase/firestore/model/FieldPath;)Lcom/google/firestore/v1/Value;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.firestore.model.DocumentKey` `getKey`() @signature `Lcom/google/firebase/firestore/model/Document;.getKey:()Lcom/google/firebase/firestore/model/DocumentKey;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.firestore.model.SnapshotVersion` `getReadTime`() @signature `Lcom/google/firebase/firestore/model/Document;.getReadTime:()Lcom/google/firebase/firestore/model/SnapshotVersion;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.firestore.model.SnapshotVersion` `getVersion`() @signature `Lcom/google/firebase/firestore/model/Document;.getVersion:()Lcom/google/firebase/firestore/model/SnapshotVersion;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasCommittedMutations`() @signature `Lcom/google/firebase/firestore/model/Document;.hasCommittedMutations:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasLocalMutations`() @signature `Lcom/google/firebase/firestore/model/Document;.hasLocalMutations:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasPendingWrites`() @signature `Lcom/google/firebase/firestore/model/Document;.hasPendingWrites:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isFoundDocument`() @signature `Lcom/google/firebase/firestore/model/Document;.isFoundDocument:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isNoDocument`() @signature `Lcom/google/firebase/firestore/model/Document;.isNoDocument:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isUnknownDocument`() @signature `Lcom/google/firebase/firestore/model/Document;.isUnknownDocument:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isValidDocument`() @signature `Lcom/google/firebase/firestore/model/Document;.isValidDocument:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.firestore.model.MutableDocument` `mutableCopy`() @signature `Lcom/google/firebase/firestore/model/Document;.mutableCopy:()Lcom/google/firebase/firestore/model/MutableDocument;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
