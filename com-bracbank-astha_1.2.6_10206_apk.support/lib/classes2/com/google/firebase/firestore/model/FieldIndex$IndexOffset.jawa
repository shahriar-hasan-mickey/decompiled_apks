record `com.google.firebase.firestore.model.FieldIndex$IndexOffset` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Comparable` @kind interface {
}
global `java.util.Comparator` `@@com.google.firebase.firestore.model.FieldIndex$IndexOffset.DOCUMENT_COMPARATOR` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.firebase.firestore.model.FieldIndex$IndexOffset` `@@com.google.firebase.firestore.model.FieldIndex$IndexOffset.NONE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.firestore.model.FieldIndex$IndexOffset` v0 @kind this) @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`com.google.firebase.firestore.model.MutableDocument` v0 @kind object, `com.google.firebase.firestore.model.MutableDocument` v1 @kind object) @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.a:(Lcom/google/firebase/firestore/model/MutableDocument;Lcom/google/firebase/firestore/model/MutableDocument;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.model.FieldIndex$IndexOffset` `create`(`com.google.firebase.firestore.model.SnapshotVersion` v1 @kind object, `com.google.firebase.firestore.model.DocumentKey` v2 @kind object, `int` v3 ) @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.create:(Lcom/google/firebase/firestore/model/SnapshotVersion;Lcom/google/firebase/firestore/model/DocumentKey;I)Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.firestore.model.FieldIndex$IndexOffset` `createSuccessor`(`com.google.firebase.firestore.model.SnapshotVersion` v8 @kind object, `int` v9 ) @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.createSuccessor:(Lcom/google/firebase/firestore/model/SnapshotVersion;I)Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.firestore.model.FieldIndex$IndexOffset` `fromDocument`(`com.google.firebase.firestore.model.Document` v2 @kind object) @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.fromDocument:(Lcom/google/firebase/firestore/model/Document;)Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `lambda$static$0`(`com.google.firebase.firestore.model.MutableDocument` v0 @kind object, `com.google.firebase.firestore.model.MutableDocument` v1 @kind object) @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.lambda$static$0:(Lcom/google/firebase/firestore/model/MutableDocument;Lcom/google/firebase/firestore/model/MutableDocument;)I` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.firestore.model.FieldIndex$IndexOffset` v2 @kind this, `com.google.firebase.firestore.model.FieldIndex$IndexOffset` v3 @kind object) @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.compareTo:(Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`com.google.firebase.firestore.model.FieldIndex$IndexOffset` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.model.DocumentKey` `getDocumentKey`() @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.getDocumentKey:()Lcom/google/firebase/firestore/model/DocumentKey;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getLargestBatchId`() @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.getLargestBatchId:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.firestore.model.SnapshotVersion` `getReadTime`() @signature `Lcom/google/firebase/firestore/model/FieldIndex$IndexOffset;.getReadTime:()Lcom/google/firebase/firestore/model/SnapshotVersion;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
