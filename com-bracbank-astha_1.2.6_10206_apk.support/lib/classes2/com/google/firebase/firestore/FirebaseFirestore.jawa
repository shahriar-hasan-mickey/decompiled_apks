record `com.google.firebase.firestore.FirebaseFirestore` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.firestore.auth.CredentialsProvider` `com.google.firebase.firestore.FirebaseFirestore.appCheckProvider` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.util.AsyncQueue` `com.google.firebase.firestore.FirebaseFirestore.asyncQueue` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.auth.CredentialsProvider` `com.google.firebase.firestore.FirebaseFirestore.authProvider` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.core.FirestoreClient` `com.google.firebase.firestore.FirebaseFirestore.client` @AccessFlag PRIVATE_VOLATILE;
  `android.content.Context` `com.google.firebase.firestore.FirebaseFirestore.context` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.model.DatabaseId` `com.google.firebase.firestore.FirebaseFirestore.databaseId` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.emulators.EmulatedServiceSettings` `com.google.firebase.firestore.FirebaseFirestore.emulatorSettings` @AccessFlag PRIVATE;
  `com.google.firebase.FirebaseApp` `com.google.firebase.firestore.FirebaseFirestore.firebaseApp` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.FirebaseFirestore$InstanceRegistry` `com.google.firebase.firestore.FirebaseFirestore.instanceRegistry` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.remote.GrpcMetadataProvider` `com.google.firebase.firestore.FirebaseFirestore.metadataProvider` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.firebase.firestore.FirebaseFirestore.persistenceKey` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.firestore.FirebaseFirestoreSettings` `com.google.firebase.firestore.FirebaseFirestore.settings` @AccessFlag PRIVATE;
  `com.google.firebase.firestore.UserDataReader` `com.google.firebase.firestore.FirebaseFirestore.userDataReader` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.google.firebase.firestore.FirebaseFirestore.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.firebase.firestore.FirebaseFirestore` v0 @kind this, `android.content.Context` v1 @kind object, `com.google.firebase.firestore.model.DatabaseId` v2 @kind object, `java.lang.String` v3 @kind object, `com.google.firebase.firestore.auth.CredentialsProvider` v4 @kind object, `com.google.firebase.firestore.auth.CredentialsProvider` v5 @kind object, `com.google.firebase.firestore.util.AsyncQueue` v6 @kind object, `com.google.firebase.FirebaseApp` v7 @kind object, `com.google.firebase.firestore.FirebaseFirestore$InstanceRegistry` v8 @kind object, `com.google.firebase.firestore.remote.GrpcMetadataProvider` v9 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.<init>:(Landroid/content/Context;Lcom/google/firebase/firestore/model/DatabaseId;Ljava/lang/String;Lcom/google/firebase/firestore/auth/CredentialsProvider;Lcom/google/firebase/firestore/auth/CredentialsProvider;Lcom/google/firebase/firestore/util/AsyncQueue;Lcom/google/firebase/FirebaseApp;Lcom/google/firebase/firestore/FirebaseFirestore$InstanceRegistry;Lcom/google/firebase/firestore/remote/GrpcMetadataProvider;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.firestore.Query` `a`(`com.google.firebase.firestore.FirebaseFirestore` v0 @kind object, `com.google.android.gms.tasks.Task` v1 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.a:(Lcom/google/firebase/firestore/FirebaseFirestore;Lcom/google/android/gms/tasks/Task;)Lcom/google/firebase/firestore/Query;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.ListenerRegistration` `addSnapshotsInSyncListener`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `android.app.Activity` v3 @kind object, `java.lang.Runnable` v4 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.addSnapshotsInSyncListener:(Ljava/util/concurrent/Executor;Landroid/app/Activity;Ljava/lang/Runnable;)Lcom/google/firebase/firestore/ListenerRegistration;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `b`(`java.lang.Runnable` v0 @kind object, `java.lang.Void` v1 @kind object, `com.google.firebase.firestore.FirebaseFirestoreException` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.b:(Ljava/lang/Runnable;Ljava/lang/Void;Lcom/google/firebase/firestore/FirebaseFirestoreException;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `c`(`com.google.firebase.firestore.FirebaseFirestore` v0 @kind object, `java.util.concurrent.Executor` v1 @kind object, `com.google.firebase.firestore.Transaction$Function` v2 @kind object, `com.google.firebase.firestore.core.Transaction` v3 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.c:(Lcom/google/firebase/firestore/FirebaseFirestore;Ljava/util/concurrent/Executor;Lcom/google/firebase/firestore/Transaction$Function;Lcom/google/firebase/firestore/core/Transaction;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `d`(`com.google.firebase.firestore.FirebaseFirestore` v0 @kind object, `com.google.android.gms.tasks.TaskCompletionSource` v1 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.d:(Lcom/google/firebase/firestore/FirebaseFirestore;Lcom/google/android/gms/tasks/TaskCompletionSource;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `e`(`com.google.firebase.firestore.FirebaseFirestore` v0 @kind object, `com.google.firebase.firestore.core.AsyncEventListener` v1 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.e:(Lcom/google/firebase/firestore/FirebaseFirestore;Lcom/google/firebase/firestore/core/AsyncEventListener;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `ensureClientConfigured`(`com.google.firebase.firestore.FirebaseFirestore` v10 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.ensureClientConfigured:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `f`(`com.google.firebase.firestore.FirebaseFirestore` v0 @kind object, `com.google.firebase.firestore.Transaction$Function` v1 @kind object, `com.google.firebase.firestore.core.Transaction` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.f:(Lcom/google/firebase/firestore/FirebaseFirestore;Lcom/google/firebase/firestore/Transaction$Function;Lcom/google/firebase/firestore/core/Transaction;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.FirebaseFirestore` `getInstance`() @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.getInstance:()Lcom/google/firebase/firestore/FirebaseFirestore;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.firestore.FirebaseFirestore` `getInstance`(`com.google.firebase.FirebaseApp` v1 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.getInstance:(Lcom/google/firebase/FirebaseApp;)Lcom/google/firebase/firestore/FirebaseFirestore;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.firestore.FirebaseFirestore` `getInstance`(`com.google.firebase.FirebaseApp` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.getInstance:(Lcom/google/firebase/FirebaseApp;Ljava/lang/String;)Lcom/google/firebase/firestore/FirebaseFirestore;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `lambda$addSnapshotsInSyncListener$4`(`java.lang.Runnable` v1 @kind object, `java.lang.Void` v2 @kind object, `com.google.firebase.firestore.FirebaseFirestoreException` v3 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.lambda$addSnapshotsInSyncListener$4:(Ljava/lang/Runnable;Ljava/lang/Void;Lcom/google/firebase/firestore/FirebaseFirestoreException;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {

  # return;
}
procedure `void` `lambda$addSnapshotsInSyncListener$5`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `com.google.firebase.firestore.core.AsyncEventListener` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.lambda$addSnapshotsInSyncListener$5:(Lcom/google/firebase/firestore/core/AsyncEventListener;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `void` `lambda$clearPersistence$2`(`com.google.firebase.firestore.FirebaseFirestore` v3 @kind this, `com.google.android.gms.tasks.TaskCompletionSource` v4 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.lambda$clearPersistence$2:(Lcom/google/android/gms/tasks/TaskCompletionSource;)V` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.Query` `lambda$getNamedQuery$3`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `com.google.android.gms.tasks.Task` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.lambda$getNamedQuery$3:(Lcom/google/android/gms/tasks/Task;)Lcom/google/firebase/firestore/Query;` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `lambda$runTransaction$0`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `com.google.firebase.firestore.Transaction$Function` v2 @kind object, `com.google.firebase.firestore.core.Transaction` v3 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.lambda$runTransaction$0:(Lcom/google/firebase/firestore/Transaction$Function;Lcom/google/firebase/firestore/core/Transaction;)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `lambda$runTransaction$1`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `com.google.firebase.firestore.Transaction$Function` v3 @kind object, `com.google.firebase.firestore.core.Transaction` v4 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.lambda$runTransaction$1:(Ljava/util/concurrent/Executor;Lcom/google/firebase/firestore/Transaction$Function;Lcom/google/firebase/firestore/core/Transaction;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.firestore.FirebaseFirestoreSettings` `mergeEmulatorSettings`(`com.google.firebase.firestore.FirebaseFirestore` v4 @kind this, `com.google.firebase.firestore.FirebaseFirestoreSettings` v5 @kind object, `com.google.firebase.emulators.EmulatedServiceSettings` v6 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.mergeEmulatorSettings:(Lcom/google/firebase/firestore/FirebaseFirestoreSettings;Lcom/google/firebase/emulators/EmulatedServiceSettings;)Lcom/google/firebase/firestore/FirebaseFirestoreSettings;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.firestore.FirebaseFirestore` `newInstance`(`android.content.Context` v11 @kind object, `com.google.firebase.FirebaseApp` v12 @kind object, `com.google.firebase.inject.Deferred` v13 @kind object, `com.google.firebase.inject.Deferred` v14 @kind object, `java.lang.String` v15 @kind object, `com.google.firebase.firestore.FirebaseFirestore$InstanceRegistry` v16 @kind object, `com.google.firebase.firestore.remote.GrpcMetadataProvider` v17 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.newInstance:(Landroid/content/Context;Lcom/google/firebase/FirebaseApp;Lcom/google/firebase/inject/Deferred;Lcom/google/firebase/inject/Deferred;Ljava/lang/String;Lcom/google/firebase/firestore/FirebaseFirestore$InstanceRegistry;Lcom/google/firebase/firestore/remote/GrpcMetadataProvider;)Lcom/google/firebase/firestore/FirebaseFirestore;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `runTransaction`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `com.google.firebase.firestore.TransactionOptions` v2 @kind object, `com.google.firebase.firestore.Transaction$Function` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.runTransaction:(Lcom/google/firebase/firestore/TransactionOptions;Lcom/google/firebase/firestore/Transaction$Function;Ljava/util/concurrent/Executor;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setClientLanguage`(`java.lang.String` v0 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.setClientLanguage:(Ljava/lang/String;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `setLoggingEnabled`(`boolean` v0 ) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.setLoggingEnabled:(Z)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.firestore.ListenerRegistration` `addSnapshotsInSyncListener`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `android.app.Activity` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.addSnapshotsInSyncListener:(Landroid/app/Activity;Ljava/lang/Runnable;)Lcom/google/firebase/firestore/ListenerRegistration;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.ListenerRegistration` `addSnapshotsInSyncListener`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.addSnapshotsInSyncListener:(Ljava/lang/Runnable;)Lcom/google/firebase/firestore/ListenerRegistration;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.ListenerRegistration` `addSnapshotsInSyncListener`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.addSnapshotsInSyncListener:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Lcom/google/firebase/firestore/ListenerRegistration;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.WriteBatch` `batch`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.batch:()Lcom/google/firebase/firestore/WriteBatch;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `clearPersistence`(`com.google.firebase.firestore.FirebaseFirestore` v3 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.clearPersistence:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.CollectionReference` `collection`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.collection:(Ljava/lang/String;)Lcom/google/firebase/firestore/CollectionReference;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.Query` `collectionGroup`(`com.google.firebase.firestore.FirebaseFirestore` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.collectionGroup:(Ljava/lang/String;)Lcom/google/firebase/firestore/Query;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `disableNetwork`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.disableNetwork:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.DocumentReference` `document`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.document:(Ljava/lang/String;)Lcom/google/firebase/firestore/DocumentReference;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `enableNetwork`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.enableNetwork:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.FirebaseApp` `getApp`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.getApp:()Lcom/google/firebase/FirebaseApp;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.util.AsyncQueue` `getAsyncQueue`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.getAsyncQueue:()Lcom/google/firebase/firestore/util/AsyncQueue;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.firestore.core.FirestoreClient` `getClient`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.getClient:()Lcom/google/firebase/firestore/core/FirestoreClient;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.firestore.model.DatabaseId` `getDatabaseId`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.getDatabaseId:()Lcom/google/firebase/firestore/model/DatabaseId;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.firestore.FirebaseFirestoreSettings` `getFirestoreSettings`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.getFirestoreSettings:()Lcom/google/firebase/firestore/FirebaseFirestoreSettings;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `getNamedQuery`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.getNamedQuery:(Ljava/lang/String;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.UserDataReader` `getUserDataReader`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.getUserDataReader:()Lcom/google/firebase/firestore/UserDataReader;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.firestore.LoadBundleTask` `loadBundle`(`com.google.firebase.firestore.FirebaseFirestore` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.loadBundle:(Ljava/io/InputStream;)Lcom/google/firebase/firestore/LoadBundleTask;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.LoadBundleTask` `loadBundle`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.loadBundle:(Ljava/nio/ByteBuffer;)Lcom/google/firebase/firestore/LoadBundleTask;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.firestore.LoadBundleTask` `loadBundle`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.loadBundle:([B)Lcom/google/firebase/firestore/LoadBundleTask;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `runBatch`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `com.google.firebase.firestore.WriteBatch$Function` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.runBatch:(Lcom/google/firebase/firestore/WriteBatch$Function;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `runTransaction`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `com.google.firebase.firestore.Transaction$Function` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.runTransaction:(Lcom/google/firebase/firestore/Transaction$Function;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `runTransaction`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `com.google.firebase.firestore.TransactionOptions` v2 @kind object, `com.google.firebase.firestore.Transaction$Function` v3 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.runTransaction:(Lcom/google/firebase/firestore/TransactionOptions;Lcom/google/firebase/firestore/Transaction$Function;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setFirestoreSettings`(`com.google.firebase.firestore.FirebaseFirestore` v2 @kind this, `com.google.firebase.firestore.FirebaseFirestoreSettings` v3 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.setFirestoreSettings:(Lcom/google/firebase/firestore/FirebaseFirestoreSettings;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `setIndexConfiguration`(`com.google.firebase.firestore.FirebaseFirestore` v11 @kind this, `java.lang.String` v12 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.setIndexConfiguration:(Ljava/lang/String;)Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `terminate`(`com.google.firebase.firestore.FirebaseFirestore` v2 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.terminate:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `useEmulator`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.useEmulator:(Ljava/lang/String;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `validateReference`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this, `com.google.firebase.firestore.DocumentReference` v2 @kind object) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.validateReference:(Lcom/google/firebase/firestore/DocumentReference;)V` @AccessFlag  {

  # return;
}
procedure `com.google.android.gms.tasks.Task` `waitForPendingWrites`(`com.google.firebase.firestore.FirebaseFirestore` v1 @kind this) @signature `Lcom/google/firebase/firestore/FirebaseFirestore;.waitForPendingWrites:()Lcom/google/android/gms/tasks/Task;` @AccessFlag PUBLIC {

  # return;
}
