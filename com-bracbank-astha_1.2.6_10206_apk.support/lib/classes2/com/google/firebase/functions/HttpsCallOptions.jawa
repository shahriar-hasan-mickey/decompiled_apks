record `com.google.firebase.functions.HttpsCallOptions` @kind class @AccessFlag  {
  `long` `com.google.firebase.functions.HttpsCallOptions.timeout` @AccessFlag PRIVATE;
  `java.util.concurrent.TimeUnit` `com.google.firebase.functions.HttpsCallOptions.timeoutUnits` @AccessFlag PRIVATE;
}
global `long` `@@com.google.firebase.functions.HttpsCallOptions.DEFAULT_TIMEOUT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.TimeUnit` `@@com.google.firebase.functions.HttpsCallOptions.DEFAULT_TIMEOUT_UNITS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/functions/HttpsCallOptions;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.functions.HttpsCallOptions` v2 @kind this) @signature `Lcom/google/firebase/functions/HttpsCallOptions;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `okhttp3.u` `apply`(`com.google.firebase.functions.HttpsCallOptions` v3 @kind this, `okhttp3.u` v4 @kind object) @signature `Lcom/google/firebase/functions/HttpsCallOptions;.apply:(Lokhttp3/u;)Lokhttp3/u;` @AccessFlag  {

  # return;
}
procedure `long` `getTimeout`(`com.google.firebase.functions.HttpsCallOptions` v3 @kind this) @signature `Lcom/google/firebase/functions/HttpsCallOptions;.getTimeout:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTimeout`(`com.google.firebase.functions.HttpsCallOptions` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lcom/google/firebase/functions/HttpsCallOptions;.setTimeout:(JLjava/util/concurrent/TimeUnit;)V` @AccessFlag  {

  # return;
}
