record `com.google.firebase.abt.AbtExperimentInfo` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.google.firebase.abt.AbtExperimentInfo.experimentId` @AccessFlag PRIVATE_FINAL;
  `java.util.Date` `com.google.firebase.abt.AbtExperimentInfo.experimentStartTime` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.firebase.abt.AbtExperimentInfo.timeToLiveInMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.firebase.abt.AbtExperimentInfo.triggerEventName` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.firebase.abt.AbtExperimentInfo.triggerTimeoutInMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.firebase.abt.AbtExperimentInfo.variantId` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@com.google.firebase.abt.AbtExperimentInfo.ALL_REQUIRED_KEYS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.abt.AbtExperimentInfo.EXPERIMENT_ID_KEY` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.abt.AbtExperimentInfo.EXPERIMENT_START_TIME_KEY` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.abt.AbtExperimentInfo.TIME_TO_LIVE_KEY` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.abt.AbtExperimentInfo.TRIGGER_EVENT_KEY` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.abt.AbtExperimentInfo.TRIGGER_TIMEOUT_KEY` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.abt.AbtExperimentInfo.VARIANT_ID_KEY` @AccessFlag STATIC_FINAL;
global `java.text.DateFormat` `@@com.google.firebase.abt.AbtExperimentInfo.protoTimestampStringParser` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.abt.AbtExperimentInfo` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.util.Date` v4 @kind object, `long` v5 , `long` v7 ) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.abt.AbtExperimentInfo` `fromConditionalUserProperty`(`com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty` v10 @kind object) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.fromConditionalUserProperty:(Lcom/google/firebase/analytics/connector/AnalyticsConnector$ConditionalUserProperty;)Lcom/google/firebase/abt/AbtExperimentInfo;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.firebase.abt.AbtExperimentInfo` `fromMap`(`java.util.Map` v12 @kind object) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.fromMap:(Ljava/util/Map;)Lcom/google/firebase/abt/AbtExperimentInfo;` @AccessFlag STATIC {

  # return;
}
procedure `void` `validateAbtExperimentInfo`(`com.google.firebase.abt.AbtExperimentInfo` v0 @kind object) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.validateAbtExperimentInfo:(Lcom/google/firebase/abt/AbtExperimentInfo;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `validateExperimentInfoMap`(`java.util.Map` v7 @kind object) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.validateExperimentInfoMap:(Ljava/util/Map;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `getExperimentId`(`com.google.firebase.abt.AbtExperimentInfo` v1 @kind this) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.getExperimentId:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `long` `getStartTimeInMillisSinceEpoch`(`com.google.firebase.abt.AbtExperimentInfo` v2 @kind this) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.getStartTimeInMillisSinceEpoch:()J` @AccessFlag  {

  # return;
}
procedure `long` `getTimeToLiveInMillis`(`com.google.firebase.abt.AbtExperimentInfo` v2 @kind this) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.getTimeToLiveInMillis:()J` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `getTriggerEventName`(`com.google.firebase.abt.AbtExperimentInfo` v1 @kind this) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.getTriggerEventName:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `long` `getTriggerTimeoutInMillis`(`com.google.firebase.abt.AbtExperimentInfo` v2 @kind this) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.getTriggerTimeoutInMillis:()J` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `getVariantId`(`com.google.firebase.abt.AbtExperimentInfo` v1 @kind this) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.getVariantId:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty` `toConditionalUserProperty`(`com.google.firebase.abt.AbtExperimentInfo` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.toConditionalUserProperty:(Ljava/lang/String;)Lcom/google/firebase/analytics/connector/AnalyticsConnector$ConditionalUserProperty;` @AccessFlag  {

  # return;
}
procedure `java.util.Map` `toStringMap`(`com.google.firebase.abt.AbtExperimentInfo` v3 @kind this) @signature `Lcom/google/firebase/abt/AbtExperimentInfo;.toStringMap:()Ljava/util/Map;` @AccessFlag  {

  # return;
}
