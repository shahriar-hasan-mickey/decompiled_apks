record `q0.c` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `q0.c.a` @AccessFlag PRIVATE_FINAL;
  `q0.c$b` `q0.c.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `q0.c.c` @AccessFlag PRIVATE_FINAL;
  `byte`[] `q0.c.d` @AccessFlag PRIVATE_VOLATILE;
}
global `q0.c$b` `@@q0.c.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lq0/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f7f30.  v0:= new `q0.c$a`;
  #L4f7f34.  call `<init>`(v0) @signature `Lq0/c$a;.<init>:()V` @kind direct;
  #L4f7f3a.  `@@q0.c.e` @type ^`q0.c$b` := v0 @kind object;
  #L4f7f3e.  return @kind void;
}
procedure `void` `<init>`(`q0.c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object, `q0.c$b` v3 @kind object) @signature `Lq0/c;.<init>:(Ljava/lang/String;Ljava/lang/Object;Lq0/c$b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4f7f50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f7f56.  call temp:= `b`(v1) @signature `Ln1/j;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4f7f5c.  v1:= temp @kind object;
  #L4f7f5e.  v0.`q0.c.c` @type ^`java.lang.String` := v1 @kind object;
  #L4f7f62.  v0.`q0.c.a` @type ^`java.lang.Object` := v2 @kind object;
  #L4f7f66.  call temp:= `d`(v3) @signature `Ln1/j;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4f7f6c.  v1:= temp @kind object;
  #L4f7f6e.  v1:= (`q0.c$b`) v1 @kind object;
  #L4f7f72.  v0.`q0.c.b` @type ^`q0.c$b` := v1 @kind object;
  #L4f7f76.  return @kind void;
}
procedure `q0.c` `a`(`java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object, `q0.c$b` v3 @kind object) @signature `Lq0/c;.a:(Ljava/lang/String;Ljava/lang/Object;Lq0/c$b;)Lq0/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f7d18.  v0:= new `q0.c`;
  #L4f7d1c.  call `<init>`(v0, v1, v2, v3) @signature `Lq0/c;.<init>:(Ljava/lang/String;Ljava/lang/Object;Lq0/c$b;)V` @kind direct;
  #L4f7d22.  return v0 @kind object;
}
procedure `q0.c$b` `b`() @signature `Lq0/c;.b:()Lq0/c$b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4f7d80.  v0:= `@@q0.c.e` @type ^`q0.c$b` @kind object;
  #L4f7d84.  return v0 @kind object;
}
procedure `byte`[] `d`(`q0.c` v2 @kind this) @signature `Lq0/c;.d:()[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4f7c60.  v0:= v2.`q0.c.d` @type ^`byte`[] @kind object;
  #L4f7c64.  if v0 != 0 then goto L4f7c7c;
  #L4f7c68.  v0:= v2.`q0.c.c` @type ^`java.lang.String` @kind object;
  #L4f7c6c.  v1:= `@@q0.b.a` @type ^`java.nio.charset.Charset` @kind object;
  #L4f7c70.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L4f7c76.  v0:= temp @kind object;
  #L4f7c78.  v2.`q0.c.d` @type ^`byte`[] := v0 @kind object;
  #L4f7c7c.  v0:= v2.`q0.c.d` @type ^`byte`[] @kind object;
  #L4f7c80.  return v0 @kind object;
}
procedure `q0.c` `e`(`java.lang.String` v3 @kind object) @signature `Lq0/c;.e:(Ljava/lang/String;)Lq0/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4f7d34.  v0:= new `q0.c`;
  #L4f7d38.  call temp:= `b`() @signature `Lq0/c;.b:()Lq0/c$b;` @kind static;
  #L4f7d3e.  v1:= temp @kind object;
  #L4f7d40.  v2:= 0I;
  #L4f7d42.  call `<init>`(v0, v3, v2, v1) @signature `Lq0/c;.<init>:(Ljava/lang/String;Ljava/lang/Object;Lq0/c$b;)V` @kind direct;
  #L4f7d48.  return v0 @kind object;
}
procedure `q0.c` `f`(`java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lq0/c;.f:(Ljava/lang/String;Ljava/lang/Object;)Lq0/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4f7d5c.  v0:= new `q0.c`;
  #L4f7d60.  call temp:= `b`() @signature `Lq0/c;.b:()Lq0/c$b;` @kind static;
  #L4f7d66.  v1:= temp @kind object;
  #L4f7d68.  call `<init>`(v0, v2, v3, v1) @signature `Lq0/c;.<init>:(Ljava/lang/String;Ljava/lang/Object;Lq0/c$b;)V` @kind direct;
  #L4f7d6e.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`q0.c` v1 @kind this) @signature `Lq0/c;.c:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7cb4.  v0:= v1.`q0.c.a` @type ^`java.lang.Object` @kind object;
  #L4f7cb8.  return v0 @kind object;
}
procedure `boolean` `equals`(`q0.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lq0/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7c2c.  v0:= instanceof @variable v2 @type ^`q0.c` @kind boolean;
  #L4f7c30.  if v0 == 0 then goto L4f7c4a;
  #L4f7c34.  v2:= (`q0.c`) v2 @kind object;
  #L4f7c38.  v0:= v1.`q0.c.c` @type ^`java.lang.String` @kind object;
  #L4f7c3c.  v2:= v2.`q0.c.c` @type ^`java.lang.String` @kind object;
  #L4f7c40.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f7c46.  v2:= temp;
  #L4f7c48.  return v2;
  #L4f7c4a.  v2:= 0I;
  #L4f7c4c.  return v2;
}
procedure `void` `g`(`q0.c` v2 @kind this, `java.lang.Object` v3 @kind object, `java.security.MessageDigest` v4 @kind object) @signature `Lq0/c;.g:(Ljava/lang/Object;Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f7f88.  v0:= v2.`q0.c.b` @type ^`q0.c$b` @kind object;
  #L4f7f8c.  call temp:= `d`(v2) @signature `Lq0/c;.d:()[B` @kind direct;
  #L4f7f92.  v1:= temp @kind object;
  #L4f7f94.  call `a`(v0, v1, v3, v4) @signature `Lq0/c$b;.a:([BLjava/lang/Object;Ljava/security/MessageDigest;)V` @kind interface;
  #L4f7f9a.  return @kind void;
}
procedure `int` `hashCode`(`q0.c` v1 @kind this) @signature `Lq0/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7c94.  v0:= v1.`q0.c.c` @type ^`java.lang.String` @kind object;
  #L4f7c98.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4f7c9e.  v0:= temp;
  #L4f7ca0.  return v0;
}
procedure `java.lang.String` `toString`(`q0.c` v2 @kind this) @signature `Lq0/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f7ccc.  v0:= new `java.lang.StringBuilder`;
  #L4f7cd0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f7cd6.  v1:= "Option{key='" @kind object;
  #L4f7cda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7ce0.  v1:= v2.`q0.c.c` @type ^`java.lang.String` @kind object;
  #L4f7ce4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7cea.  v1:= 39I;
  #L4f7cee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7cf4.  v1:= 125I;
  #L4f7cf8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7cfe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f7d04.  v0:= temp @kind object;
  #L4f7d06.  return v0 @kind object;
}
