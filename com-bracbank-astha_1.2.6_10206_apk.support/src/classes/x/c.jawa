record `x.c` @kind class @AccessFlag PUBLIC {
}
procedure `boolean` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lx/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5004a4.  call temp:= `equals`(v0, v1) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L5004aa.  v0:= temp;
  #L5004ac.  return v0;
}
procedure `int` `b`(`java.lang.Object`[] v0 @kind object) @signature `Lx/c;.b:([Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5004c0.  call temp:= `hash`(v0) @signature `Ljava/util/Objects;.hash:([Ljava/lang/Object;)I` @kind static;
  #L5004c6.  v0:= temp;
  #L5004c8.  return v0;
}
procedure `java.lang.Object` `c`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lx/c;.c:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5004dc.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L5004e2.  return v0 @kind object;
}
