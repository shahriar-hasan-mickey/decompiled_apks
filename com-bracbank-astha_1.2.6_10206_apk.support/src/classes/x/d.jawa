record `x.d` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `x.d.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `x.d.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`x.d` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lx/d;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L5005d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5005da.  v0.`x.d.a` @type ^`java.lang.Object` := v1 @kind object;
  #L5005de.  v0.`x.d.b` @type ^`java.lang.Object` := v2 @kind object;
  #L5005e2.  return @kind void;
}
procedure `x.d` `a`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lx/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lx/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5005f4.  v0:= new `x.d`;
  #L5005f8.  call `<init>`(v0, v1, v2) @signature `Lx/d;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L5005fe.  return v0 @kind object;
}
procedure `boolean` `equals`(`x.d` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lx/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5004f4.  v0:= instanceof @variable v4 @type ^`x.d` @kind boolean;
  #L5004f8.  v1:= 0I;
  #L5004fa.  if v0 != 0 then goto L500500;
  #L5004fe.  return v1;
  #L500500.  v4:= (`x.d`) v4 @kind object;
  #L500504.  v0:= v4.`x.d.a` @type ^`java.lang.Object` @kind object;
  #L500508.  v2:= v3.`x.d.a` @type ^`java.lang.Object` @kind object;
  #L50050c.  call temp:= `a`(v0, v2) @signature `Lx/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L500512.  v0:= temp;
  #L500514.  if v0 == 0 then goto L50052e;
  #L500518.  v4:= v4.`x.d.b` @type ^`java.lang.Object` @kind object;
  #L50051c.  v0:= v3.`x.d.b` @type ^`java.lang.Object` @kind object;
  #L500520.  call temp:= `a`(v4, v0) @signature `Lx/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L500526.  v4:= temp;
  #L500528.  if v4 == 0 then goto L50052e;
  #L50052c.  v1:= 1I;
  #L50052e.  return v1;
}
procedure `int` `hashCode`(`x.d` v3 @kind this) @signature `Lx/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L500540.  v0:= v3.`x.d.a` @type ^`java.lang.Object` @kind object;
  #L500544.  v1:= 0I;
  #L500546.  if v0 != 0 then goto L50054e;
  #L50054a.  v0:= 0I;
  #L50054c.  goto L500556;
  #L50054e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L500554.  v0:= temp;
  #L500556.  v2:= v3.`x.d.b` @type ^`java.lang.Object` @kind object;
  #L50055a.  if v2 != 0 then goto L500560;
  #L50055e.  goto L500568;
  #L500560.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L500566.  v1:= temp;
  #L500568.  v0:= v0 ^~ v1 @kind int;
  #L50056a.  return v0;
}
procedure `java.lang.String` `toString`(`x.d` v2 @kind this) @signature `Lx/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50057c.  v0:= new `java.lang.StringBuilder`;
  #L500580.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L500586.  v1:= "Pair{" @kind object;
  #L50058a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500590.  v1:= v2.`x.d.a` @type ^`java.lang.Object` @kind object;
  #L500594.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50059a.  v1:= " " @kind object;
  #L50059e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5005a4.  v1:= v2.`x.d.b` @type ^`java.lang.Object` @kind object;
  #L5005a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5005ae.  v1:= "}" @kind object;
  #L5005b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5005b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5005be.  v0:= temp @kind object;
  #L5005c0.  return v0 @kind object;
}
