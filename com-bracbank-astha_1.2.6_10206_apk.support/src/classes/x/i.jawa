record `x.i` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object` `@@x.i.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@x.i.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lx/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L500c64.  v0:= new `java.lang.Object`;
  #L500c68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L500c6e.  `@@x.i.a` @type ^`java.lang.Object` := v0 @kind object;
  #L500c72.  v0:= 24I;
  #L500c76.  v0:= new `char`[v0];
  #L500c7a.  `@@x.i.b` @type ^`char`[] := v0 @kind object;
  #L500c7e.  return @kind void;
}
procedure `int` `a`(`int` v2 , `int` v3 , `boolean` v4 , `int` v5 ) @signature `Lx/i;.a:(IIZI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L500978.  v0:= 3I;
  #L50097a.  v1:= 99I;
  #L50097e.  if v2 > v1 then goto L5009b8;
  #L500982.  if v4 == 0 then goto L50098c;
  #L500986.  if v5 < v0 then goto L50098c;
  #L50098a.  goto L5009b8;
  #L50098c.  v0:= 9I;
  #L500990.  v1:= 2I;
  #L500992.  if v2 > v0 then goto L5009b4;
  #L500996.  if v4 == 0 then goto L5009a0;
  #L50099a.  if v5 < v1 then goto L5009a0;
  #L50099e.  goto L5009b4;
  #L5009a0.  if v4 != 0 then goto L5009ae;
  #L5009a4.  if v2 <= 0 then goto L5009aa;
  #L5009a8.  goto L5009ae;
  #L5009aa.  v2:= 0I;
  #L5009ac.  return v2;
  #L5009ae.  v3:= v3 + 1;
  #L5009b2.  return v3;
  #L5009b4.  v3:= v3 + v1 @kind int;
  #L5009b6.  return v3;
  #L5009b8.  v3:= v3 + v0 @kind int;
  #L5009ba.  return v3;
}
procedure `void` `b`(`long` v3 , `long` v5 , `java.io.PrintWriter` v7 @kind object) @signature `Lx/i;.b:(JJLjava/io/PrintWriter;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L500cf8.  v0:= 0L;
  #L500cfc.  v2:= lcmp(v3, v0);
  #L500d00.  if v2 != 0 then goto L500d10;
  #L500d04.  v3:= "--" @kind object;
  #L500d08.  call `print`(v7, v3) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L500d0e.  return @kind void;
  #L500d10.  v3:= v3 - v5 @kind long;
  #L500d12.  v5:= 0I;
  #L500d14.  call `d`(v3, v7, v5) @signature `Lx/i;.d:(JLjava/io/PrintWriter;I)V` @kind static;
  #L500d1a.  return @kind void;
}
procedure `void` `c`(`long` v1 , `java.io.PrintWriter` v3 @kind object) @signature `Lx/i;.c:(JLjava/io/PrintWriter;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L500c90.  v0:= 0I;
  #L500c92.  call `d`(v1, v3, v0) @signature `Lx/i;.d:(JLjava/io/PrintWriter;I)V` @kind static;
  #L500c98.  return @kind void;
}
procedure `void` `d`(`long` v2 , `java.io.PrintWriter` v4 @kind object, `int` v5 ) @signature `Lx/i;.d:(JLjava/io/PrintWriter;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L500cac.  v0:= `@@x.i.a` @type ^`java.lang.Object` @kind object;
  #L500cb0.  @monitorenter v0
  #L500cb2.  call temp:= `e`(v2, v5) @signature `Lx/i;.e:(JI)I` @kind static;
  #L500cb8.  v2:= temp;
  #L500cba.  v3:= new `java.lang.String`;
  #L500cbe.  v5:= `@@x.i.b` @type ^`char`[] @kind object;
  #L500cc2.  v1:= 0I;
  #L500cc4.  call `<init>`(v3, v5, v1, v2) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L500cca.  call `print`(v4, v3) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L500cd0.  @monitorexit v0
  #L500cd2.  return @kind void;
  #L500cd4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L500cd6.  @monitorexit v0
  #L500cd8.  throw v2;
  catch `java.lang.Throwable` @[L500cb2..L500cd8] goto L500cd4;
}
procedure `int` `e`(`long` v17 , `int` v19 ) @signature `Lx/i;.e:(JI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L5009cc.  v0:= v17 @kind wide;
  #L5009d0.  v2:= v19;
  #L5009d4.  v3:= `@@x.i.b` @type ^`char`[] @kind object;
  #L5009d8.  v3:= length @variable v3;
  #L5009da.  if v3 >= v2 then goto L5009e6;
  #L5009de.  v3:= new `char`[v2];
  #L5009e2.  `@@x.i.b` @type ^`char`[] := v3 @kind object;
  #L5009e6.  v3:= `@@x.i.b` @type ^`char`[] @kind object;
  #L5009ea.  v4:= 0L;
  #L5009ee.  v6:= 32I;
  #L5009f2.  v10:= 1I;
  #L5009f4.  v11:= 0I;
  #L5009f6.  v7:= lcmp(v0, v4);
  #L5009fa.  if v7 != 0 then goto L500a16;
  #L5009fe.  v0:= v2 + -1;
  #L500a02.  if v0 <= 0 then goto L500a0c;
  #L500a06.  v3[v11]:= v6 @kind char;
  #L500a0a.  goto L500a02;
  #L500a0c.  v0:= 48I;
  #L500a10.  v3[v11]:= v0 @kind char;
  #L500a14.  return v10;
  #L500a16.  if v7 <= 0 then goto L500a20;
  #L500a1a.  v4:= 43I;
  #L500a1e.  goto L500a26;
  #L500a20.  v4:= 45I;
  #L500a24.  v0:= -v0 @kind long;
  #L500a26.  v7:= 1000L;
  #L500a2a.  v12:= v0 %% v7 @kind long;
  #L500a2e.  v13:= (`int`) v12 @kind l2i;
  #L500a30.  v0:= v0 / v7 @kind long;
  #L500a32.  v0:= (`double`) v0 @kind l2d;
  #L500a34.  call temp:= `floor`(v0) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L500a3a.  v0:= temp @kind wide;
  #L500a3c.  v0:= (`int`) v0 @kind d2i;
  #L500a3e.  v1:= 86400I;
  #L500a44.  if v0 <= v1 then goto L500a54;
  #L500a48.  v5:= v0 / v1 @kind int;
  #L500a4c.  v1:= v1 * v5 @kind int;
  #L500a50.  v0:= v0 - v1 @kind int;
  #L500a52.  goto L500a56;
  #L500a54.  v5:= 0I;
  #L500a56.  v1:= 3600I;
  #L500a5a.  if v0 <= v1 then goto L500a6a;
  #L500a5e.  v1:= v0 / 3600;
  #L500a62.  v7:= v1 * 3600;
  #L500a66.  v0:= v0 - v7 @kind int;
  #L500a68.  goto L500a6c;
  #L500a6a.  v1:= 0I;
  #L500a6c.  v7:= 60I;
  #L500a70.  if v0 <= v7 then goto L500a84;
  #L500a74.  v7:= v0 / 60;
  #L500a78.  v8:= v7 * 60;
  #L500a7c.  v0:= v0 - v8 @kind int;
  #L500a7e.  v12:= v0;
  #L500a80.  v0:= v7;
  #L500a82.  goto L500a88;
  #L500a84.  v12:= v0;
  #L500a86.  v0:= 0I;
  #L500a88.  v14:= 3I;
  #L500a8a.  v15:= 2I;
  #L500a8c.  if v2 == 0 then goto L500afe;
  #L500a90.  call temp:= `a`(v5, v10, v11, v11) @signature `Lx/i;.a:(IIZI)I` @kind static;
  #L500a96.  v7:= temp;
  #L500a98.  if v7 <= 0 then goto L500aa0;
  #L500a9c.  v8:= 1I;
  #L500a9e.  goto L500aa2;
  #L500aa0.  v8:= 0I;
  #L500aa2.  call temp:= `a`(v1, v10, v8, v15) @signature `Lx/i;.a:(IIZI)I` @kind static;
  #L500aa8.  v8:= temp;
  #L500aaa.  v7:= v7 + v8 @kind int;
  #L500aac.  if v7 <= 0 then goto L500ab4;
  #L500ab0.  v8:= 1I;
  #L500ab2.  goto L500ab6;
  #L500ab4.  v8:= 0I;
  #L500ab6.  call temp:= `a`(v0, v10, v8, v15) @signature `Lx/i;.a:(IIZI)I` @kind static;
  #L500abc.  v8:= temp;
  #L500abe.  v7:= v7 + v8 @kind int;
  #L500ac0.  if v7 <= 0 then goto L500ac8;
  #L500ac4.  v8:= 1I;
  #L500ac6.  goto L500aca;
  #L500ac8.  v8:= 0I;
  #L500aca.  call temp:= `a`(v12, v10, v8, v15) @signature `Lx/i;.a:(IIZI)I` @kind static;
  #L500ad0.  v8:= temp;
  #L500ad2.  v7:= v7 + v8 @kind int;
  #L500ad4.  if v7 <= 0 then goto L500adc;
  #L500ad8.  v8:= 3I;
  #L500ada.  goto L500ade;
  #L500adc.  v8:= 0I;
  #L500ade.  call temp:= `a`(v13, v15, v10, v8) @signature `Lx/i;.a:(IIZI)I` @kind static;
  #L500ae4.  v8:= temp;
  #L500ae6.  v8:= v8 + v10 @kind int;
  #L500ae8.  v7:= v7 + v8 @kind int;
  #L500aea.  v8:= 0I;
  #L500aec.  if v7 >= v2 then goto L500b00;
  #L500af0.  v3[v8]:= v6 @kind char;
  #L500af4.  v8:= v8 + 1;
  #L500af8.  v7:= v7 + 1;
  #L500afc.  goto L500aec;
  #L500afe.  v8:= 0I;
  #L500b00.  v3[v8]:= v4 @kind char;
  #L500b04.  v9:= v8 + 1;
  #L500b08.  if v2 == 0 then goto L500b10;
  #L500b0c.  v2:= 1I;
  #L500b0e.  goto L500b12;
  #L500b10.  v2:= 0I;
  #L500b12.  v6:= 100I;
  #L500b16.  v8:= 0I;
  #L500b18.  v16:= 0I;
  #L500b1c.  v4:= v3 @kind object;
  #L500b1e.  v7:= v9;
  #L500b20.  v11:= v9;
  #L500b22.  v9:= v16;
  #L500b26.  call temp:= `f`(v4, v5, v6, v7, v8, v9) @signature `Lx/i;.f:([CICIZI)I` @kind static;
  #L500b2c.  v7:= temp;
  #L500b2e.  v6:= 104I;
  #L500b32.  if v7 == v11 then goto L500b3a;
  #L500b36.  v8:= 1I;
  #L500b38.  goto L500b3c;
  #L500b3a.  v8:= 0I;
  #L500b3c.  if v2 == 0 then goto L500b44;
  #L500b40.  v9:= 2I;
  #L500b42.  goto L500b46;
  #L500b44.  v9:= 0I;
  #L500b46.  v4:= v3 @kind object;
  #L500b48.  v5:= v1;
  #L500b4a.  call temp:= `f`(v4, v5, v6, v7, v8, v9) @signature `Lx/i;.f:([CICIZI)I` @kind static;
  #L500b50.  v7:= temp;
  #L500b52.  v6:= 109I;
  #L500b56.  if v7 == v11 then goto L500b5e;
  #L500b5a.  v8:= 1I;
  #L500b5c.  goto L500b60;
  #L500b5e.  v8:= 0I;
  #L500b60.  if v2 == 0 then goto L500b68;
  #L500b64.  v9:= 2I;
  #L500b66.  goto L500b6a;
  #L500b68.  v9:= 0I;
  #L500b6a.  v4:= v3 @kind object;
  #L500b6c.  v5:= v0;
  #L500b6e.  call temp:= `f`(v4, v5, v6, v7, v8, v9) @signature `Lx/i;.f:([CICIZI)I` @kind static;
  #L500b74.  v7:= temp;
  #L500b76.  v6:= 115I;
  #L500b7a.  if v7 == v11 then goto L500b82;
  #L500b7e.  v8:= 1I;
  #L500b80.  goto L500b84;
  #L500b82.  v8:= 0I;
  #L500b84.  if v2 == 0 then goto L500b8c;
  #L500b88.  v9:= 2I;
  #L500b8a.  goto L500b8e;
  #L500b8c.  v9:= 0I;
  #L500b8e.  v4:= v3 @kind object;
  #L500b90.  v5:= v12;
  #L500b92.  call temp:= `f`(v4, v5, v6, v7, v8, v9) @signature `Lx/i;.f:([CICIZI)I` @kind static;
  #L500b98.  v7:= temp;
  #L500b9a.  v6:= 109I;
  #L500b9e.  v8:= 1I;
  #L500ba0.  if v2 == 0 then goto L500bac;
  #L500ba4.  if v7 == v11 then goto L500bac;
  #L500ba8.  v9:= 3I;
  #L500baa.  goto L500bae;
  #L500bac.  v9:= 0I;
  #L500bae.  v4:= v3 @kind object;
  #L500bb0.  v5:= v13;
  #L500bb2.  call temp:= `f`(v4, v5, v6, v7, v8, v9) @signature `Lx/i;.f:([CICIZI)I` @kind static;
  #L500bb8.  v0:= temp;
  #L500bba.  v1:= 115I;
  #L500bbe.  v3[v0]:= v1 @kind char;
  #L500bc2.  v0:= v0 + v10 @kind int;
  #L500bc4.  return v0;
}
procedure `int` `f`(`char`[] v2 @kind object, `int` v3 , `char` v4 , `int` v5 , `boolean` v6 , `int` v7 ) @signature `Lx/i;.f:([CICIZI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L500bd8.  if v6 != 0 then goto L500be0;
  #L500bdc.  if v3 <= 0 then goto L500c52;
  #L500be0.  if v6 == 0 then goto L500bea;
  #L500be4.  v0:= 3I;
  #L500be6.  if v7 >= v0 then goto L500bf2;
  #L500bea.  v0:= 99I;
  #L500bee.  if v3 <= v0 then goto L500c0c;
  #L500bf2.  v0:= v3 / 100;
  #L500bf6.  v1:= v0 + 48;
  #L500bfa.  v1:= (`char`) v1 @kind i2c;
  #L500bfc.  v2[v5]:= v1 @kind char;
  #L500c00.  v1:= v5 + 1;
  #L500c04.  v0:= v0 * 100;
  #L500c08.  v3:= v3 - v0 @kind int;
  #L500c0a.  goto L500c0e;
  #L500c0c.  v1:= v5;
  #L500c0e.  if v6 == 0 then goto L500c18;
  #L500c12.  v6:= 2I;
  #L500c14.  if v7 >= v6 then goto L500c24;
  #L500c18.  v6:= 9I;
  #L500c1c.  if v3 > v6 then goto L500c24;
  #L500c20.  if v5 == v1 then goto L500c3c;
  #L500c24.  v5:= v3 / 10;
  #L500c28.  v6:= v5 + 48;
  #L500c2c.  v6:= (`char`) v6 @kind i2c;
  #L500c2e.  v2[v1]:= v6 @kind char;
  #L500c32.  v1:= v1 + 1;
  #L500c36.  v5:= v5 * 10;
  #L500c3a.  v3:= v3 - v5 @kind int;
  #L500c3c.  v3:= v3 + 48;
  #L500c40.  v3:= (`char`) v3 @kind i2c;
  #L500c42.  v2[v1]:= v3 @kind char;
  #L500c46.  v1:= v1 + 1;
  #L500c4a.  v2[v1]:= v4 @kind char;
  #L500c4e.  v5:= v1 + 1;
  #L500c52.  return v5;
}
