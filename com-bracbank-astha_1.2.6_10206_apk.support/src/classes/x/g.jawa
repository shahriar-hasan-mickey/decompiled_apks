record `x.g` @kind class @AccessFlag PUBLIC extends `x.f` @kind class {
  `java.lang.Object` `x.g.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x.g` v0 @kind this, `int` v1 ) @signature `Lx/g;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L500764.  call `<init>`(v0, v1) @signature `Lx/f;.<init>:(I)V` @kind direct;
  #L50076a.  v1:= new `java.lang.Object`;
  #L50076e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L500774.  v0.`x.g.c` @type ^`java.lang.Object` := v1 @kind object;
  #L500778.  return @kind void;
}
procedure `boolean` `a`(`x.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lx/g;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5006fc.  v0:= v1.`x.g.c` @type ^`java.lang.Object` @kind object;
  #L500700.  @monitorenter v0
  #L500702.  call temp:= `a`(v1, v2) @signature `Lx/f;.a:(Ljava/lang/Object;)Z` @kind super;
  #L500708.  v2:= temp;
  #L50070a.  @monitorexit v0
  #L50070c.  return v2;
  #L50070e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L500710.  @monitorexit v0
  #L500712.  throw v2;
  catch `java.lang.Throwable` @[L500702..L500712] goto L50070e;
}
procedure `java.lang.Object` `b`(`x.g` v2 @kind this) @signature `Lx/g;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L500730.  v0:= v2.`x.g.c` @type ^`java.lang.Object` @kind object;
  #L500734.  @monitorenter v0
  #L500736.  call temp:= `b`(v2) @signature `Lx/f;.b:()Ljava/lang/Object;` @kind super;
  #L50073c.  v1:= temp @kind object;
  #L50073e.  @monitorexit v0
  #L500740.  return v1 @kind object;
  #L500742.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L500744.  @monitorexit v0
  #L500746.  throw v1;
  catch `java.lang.Throwable` @[L500736..L500746] goto L500742;
}
