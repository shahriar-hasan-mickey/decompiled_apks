record `v.d` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `v.d.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `v.d.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `v.d.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `v.d.d` @AccessFlag PRIVATE_FINAL;
  `int` `v.d.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `v.d.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lv/d;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fe020.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fe026.  call temp:= `f`(v2) @signature `Lx/h;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fe02c.  v0:= temp @kind object;
  #L4fe02e.  v0:= (`java.lang.String`) v0 @kind object;
  #L4fe032.  v1.`v.d.a` @type ^`java.lang.String` := v0 @kind object;
  #L4fe036.  call temp:= `f`(v3) @signature `Lx/h;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fe03c.  v0:= temp @kind object;
  #L4fe03e.  v0:= (`java.lang.String`) v0 @kind object;
  #L4fe042.  v1.`v.d.b` @type ^`java.lang.String` := v0 @kind object;
  #L4fe046.  call temp:= `f`(v4) @signature `Lx/h;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fe04c.  v0:= temp @kind object;
  #L4fe04e.  v0:= (`java.lang.String`) v0 @kind object;
  #L4fe052.  v1.`v.d.c` @type ^`java.lang.String` := v0 @kind object;
  #L4fe056.  call temp:= `f`(v5) @signature `Lx/h;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fe05c.  v5:= temp @kind object;
  #L4fe05e.  v5:= (`java.util.List`) v5 @kind object;
  #L4fe062.  v1.`v.d.d` @type ^`java.util.List` := v5 @kind object;
  #L4fe066.  v5:= 0I;
  #L4fe068.  v1.`v.d.e` @type ^`int` := v5;
  #L4fe06c.  call temp:= `a`(v1, v2, v3, v4) @signature `Lv/d;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L4fe072.  v2:= temp @kind object;
  #L4fe074.  v1.`v.d.f` @type ^`java.lang.String` := v2 @kind object;
  #L4fe078.  return @kind void;
}
procedure `java.lang.String` `a`(`v.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lv/d;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fde30.  v0:= new `java.lang.StringBuilder`;
  #L4fde34.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fde3a.  v2:= "-" @kind object;
  #L4fde3e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fde44.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fde4a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fde50.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fde56.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fde5c.  v2:= temp @kind object;
  #L4fde5e.  return v2 @kind object;
}
procedure `java.util.List` `b`(`v.d` v1 @kind this) @signature `Lv/d;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe008.  v0:= v1.`v.d.d` @type ^`java.util.List` @kind object;
  #L4fe00c.  return v0 @kind object;
}
procedure `int` `c`(`v.d` v1 @kind this) @signature `Lv/d;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fde18.  v0:= v1.`v.d.e` @type ^`int`;
  #L4fde1c.  return v0;
}
procedure `java.lang.String` `d`(`v.d` v1 @kind this) @signature `Lv/d;.d:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L4fde70.  v0:= v1.`v.d.f` @type ^`java.lang.String` @kind object;
  #L4fde74.  return v0 @kind object;
}
procedure `java.lang.String` `e`(`v.d` v1 @kind this) @signature `Lv/d;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fde88.  v0:= v1.`v.d.a` @type ^`java.lang.String` @kind object;
  #L4fde8c.  return v0 @kind object;
}
procedure `java.lang.String` `f`(`v.d` v1 @kind this) @signature `Lv/d;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fdea0.  v0:= v1.`v.d.b` @type ^`java.lang.String` @kind object;
  #L4fdea4.  return v0 @kind object;
}
procedure `java.lang.String` `g`(`v.d` v1 @kind this) @signature `Lv/d;.g:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fdeb8.  v0:= v1.`v.d.c` @type ^`java.lang.String` @kind object;
  #L4fdebc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`v.d` v6 @kind this) @signature `Lv/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fded0.  v0:= new `java.lang.StringBuilder`;
  #L4fded4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fdeda.  v1:= new `java.lang.StringBuilder`;
  #L4fdede.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fdee4.  v2:= "FontRequest {mProviderAuthority: " @kind object;
  #L4fdee8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdeee.  v2:= v6.`v.d.a` @type ^`java.lang.String` @kind object;
  #L4fdef2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdef8.  v2:= ", mProviderPackage: " @kind object;
  #L4fdefc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdf02.  v2:= v6.`v.d.b` @type ^`java.lang.String` @kind object;
  #L4fdf06.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdf0c.  v2:= ", mQuery: " @kind object;
  #L4fdf10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdf16.  v2:= v6.`v.d.c` @type ^`java.lang.String` @kind object;
  #L4fdf1a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdf20.  v2:= ", mCertificates:" @kind object;
  #L4fdf24.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdf2a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fdf30.  v1:= temp @kind object;
  #L4fdf32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdf38.  v1:= 0I;
  #L4fdf3a.  v2:= 0I;
  #L4fdf3c.  v3:= v6.`v.d.d` @type ^`java.util.List` @kind object;
  #L4fdf40.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fdf46.  v3:= temp;
  #L4fdf48.  if v2 >= v3 then goto L4fdfb8;
  #L4fdf4c.  v3:= " [" @kind object;
  #L4fdf50.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdf56.  v3:= v6.`v.d.d` @type ^`java.util.List` @kind object;
  #L4fdf5a.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fdf60.  v3:= temp @kind object;
  #L4fdf62.  v3:= (`java.util.List`) v3 @kind object;
  #L4fdf66.  v4:= 0I;
  #L4fdf68.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fdf6e.  v5:= temp;
  #L4fdf70.  if v4 >= v5 then goto L4fdfa8;
  #L4fdf74.  v5:= " \"" @kind object;
  #L4fdf78.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdf7e.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fdf84.  v5:= temp @kind object;
  #L4fdf86.  v5:= (`byte`[]) v5 @kind object;
  #L4fdf8a.  call temp:= `encodeToString`(v5, v1) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L4fdf90.  v5:= temp @kind object;
  #L4fdf92.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdf98.  v5:= "\"" @kind object;
  #L4fdf9c.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdfa2.  v4:= v4 + 1;
  #L4fdfa6.  goto L4fdf68;
  #L4fdfa8.  v3:= " ]" @kind object;
  #L4fdfac.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdfb2.  v2:= v2 + 1;
  #L4fdfb6.  goto L4fdf3c;
  #L4fdfb8.  v1:= "}" @kind object;
  #L4fdfbc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdfc2.  v1:= new `java.lang.StringBuilder`;
  #L4fdfc6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fdfcc.  v2:= "mCertificatesArray: " @kind object;
  #L4fdfd0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdfd6.  v2:= v6.`v.d.e` @type ^`int`;
  #L4fdfda.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdfe0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fdfe6.  v1:= temp @kind object;
  #L4fdfe8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fdfee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fdff4.  v0:= temp @kind object;
  #L4fdff6.  return v0 @kind object;
}
