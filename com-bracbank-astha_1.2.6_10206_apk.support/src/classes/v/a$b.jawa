record `v.a$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `v.f$c` `v.a$b.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `v.a$b.b` @AccessFlag FINAL_SYNTHETIC;
  `v.a` `v.a$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`v.a$b` v0 @kind this, `v.a` v1 @kind object, `v.f$c` v2 @kind object, `int` v3 ) @signature `Lv/a$b;.<init>:(Lv/a;Lv/f$c;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fd258.  v0.`v.a$b.c` @type ^`v.a` := v1 @kind object;
  #L4fd25c.  v0.`v.a$b.a` @type ^`v.f$c` := v2 @kind object;
  #L4fd260.  v0.`v.a$b.b` @type ^`int` := v3;
  #L4fd264.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fd26a.  return @kind void;
}
procedure `void` `run`(`v.a$b` v2 @kind this) @signature `Lv/a$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd27c.  v0:= v2.`v.a$b.a` @type ^`v.f$c` @kind object;
  #L4fd280.  v1:= v2.`v.a$b.b` @type ^`int`;
  #L4fd284.  call `a`(v0, v1) @signature `Lv/f$c;.a:(I)V` @kind virtual;
  #L4fd28a.  return @kind void;
}
