record `v.g$b$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `x.a` `v.g$b$a.a` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `v.g$b$a.b` @AccessFlag FINAL_SYNTHETIC;
  `v.g$b` `v.g$b$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`v.g$b$a` v0 @kind this, `v.g$b` v1 @kind object, `x.a` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lv/g$b$a;.<init>:(Lv/g$b;Lx/a;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fe300.  v0.`v.g$b$a.c` @type ^`v.g$b` := v1 @kind object;
  #L4fe304.  v0.`v.g$b$a.a` @type ^`x.a` := v2 @kind object;
  #L4fe308.  v0.`v.g$b$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L4fe30c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fe312.  return @kind void;
}
procedure `void` `run`(`v.g$b$a` v2 @kind this) @signature `Lv/g$b$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fe324.  v0:= v2.`v.g$b$a.a` @type ^`x.a` @kind object;
  #L4fe328.  v1:= v2.`v.g$b$a.b` @type ^`java.lang.Object` @kind object;
  #L4fe32c.  call `accept`(v0, v1) @signature `Lx/a;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4fe332.  return @kind void;
}
