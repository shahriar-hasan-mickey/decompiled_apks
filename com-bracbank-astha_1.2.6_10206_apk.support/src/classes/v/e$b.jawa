record `v.e$b` @kind class @AccessFlag  extends `x.a` @kind interface {
  `v.a` `v.e$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`v.e$b` v0 @kind this, `v.a` v1 @kind object) @signature `Lv/e$b;.<init>:(Lv/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fd8f0.  v0.`v.e$b.a` @type ^`v.a` := v1 @kind object;
  #L4fd8f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fd8fa.  return @kind void;
}
procedure `void` `a`(`v.e$b` v1 @kind this, `v.e$e` v2 @kind object) @signature `Lv/e$b;.a:(Lv/e$e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd928.  if v2 != 0 then goto L4fd938;
  #L4fd92c.  v2:= new `v.e$e`;
  #L4fd930.  v0:= -3I;
  #L4fd932.  call `<init>`(v2, v0) @signature `Lv/e$e;.<init>:(I)V` @kind direct;
  #L4fd938.  v0:= v1.`v.e$b.a` @type ^`v.a` @kind object;
  #L4fd93c.  call `b`(v0, v2) @signature `Lv/a;.b:(Lv/e$e;)V` @kind virtual;
  #L4fd942.  return @kind void;
}
procedure `void` `accept`(`v.e$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lv/e$b;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4fd90c.  v1:= (`v.e$e`) v1 @kind object;
  #L4fd910.  call `a`(v0, v1) @signature `Lv/e$b;.a:(Lv/e$e;)V` @kind virtual;
  #L4fd916.  return @kind void;
}
