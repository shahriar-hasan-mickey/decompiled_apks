record `j0.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `long` `@@j0.a.a` @AccessFlag PRIVATE_STATIC;
global `java.lang.reflect.Method` `@@j0.a.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `a`(`java.lang.String` v0 @kind object) @signature `Lj0/a;.a:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4eba8c.  call `a`(v0) @signature `Lj0/b;.a:(Ljava/lang/String;)V` @kind static;
  #L4eba92.  return @kind void;
}
procedure `void` `b`() @signature `Lj0/a;.b:()V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4ebaa4.  call `b`() @signature `Lj0/b;.b:()V` @kind static;
  #L4ebaaa.  return @kind void;
}
procedure `void` `c`(`java.lang.String` v2 @kind object, `java.lang.Exception` v3 @kind object) @signature `Lj0/a;.c:(Ljava/lang/String;Ljava/lang/Exception;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4ebabc.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.InvocationTargetException` @kind boolean;
  #L4ebac0.  if v0 == 0 then goto L4ebae6;
  #L4ebac4.  call temp:= `getCause`(v3) @signature `Ljava/lang/Exception;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L4ebaca.  v2:= temp @kind object;
  #L4ebacc.  v3:= instanceof @variable v2 @type ^`java.lang.RuntimeException` @kind boolean;
  #L4ebad0.  if v3 == 0 then goto L4ebada;
  #L4ebad4.  v2:= (`java.lang.RuntimeException`) v2 @kind object;
  #L4ebad8.  throw v2;
  #L4ebada.  v3:= new `java.lang.RuntimeException`;
  #L4ebade.  call `<init>`(v3, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4ebae4.  throw v3;
  #L4ebae6.  v0:= new `java.lang.StringBuilder`;
  #L4ebaea.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ebaf0.  v1:= "Unable to call " @kind object;
  #L4ebaf4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ebafa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ebb00.  v2:= " via reflection" @kind object;
  #L4ebb04.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ebb0a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ebb10.  v2:= temp @kind object;
  #L4ebb12.  v0:= "Trace" @kind object;
  #L4ebb16.  call temp:= `v`(v0, v2, v3) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L4ebb1c.  return @kind void;
}
procedure `boolean` `d`() @signature `Lj0/a;.d:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4eb9ac.  v0:= `@@j0.a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L4eb9b0.  if v0 != 0 then goto L4eb9be;
  #L4eb9b4.  call temp:= `isEnabled`() @signature `Landroid/os/Trace;.isEnabled:()Z` @kind static;
  #L4eb9ba.  v0:= temp;
  #L4eb9bc.  return v0;
  #L4eb9be.  call temp:= `e`() @signature `Lj0/a;.e:()Z` @kind static;
  #L4eb9c4.  v0:= temp;
  #L4eb9c6.  return v0;
  catch `java.lang.NoSuchMethodError` @[L4eb9ac..L4eb9bc] goto L4eb9be;
  catch `java.lang.NoClassDefFoundError` @[L4eb9ac..L4eb9bc] goto L4eb9be;
}
procedure `boolean` `e`() @signature `Lj0/a;.e:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4eb9e8.  v0:= "isTagEnabled" @kind object;
  #L4eb9ec.  v1:= 0I;
  #L4eb9ee.  v2:= `@@j0.a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L4eb9f2.  v3:= 1I;
  #L4eb9f4.  v4:= 0I;
  #L4eb9f6.  if v2 != 0 then goto L4eba32;
  #L4eb9fa.  v2:= constclass @type ^`android.os.Trace` @kind object;
  #L4eb9fe.  v5:= "TRACE_TAG_APP" @kind object;
  #L4eba02.  call temp:= `getField`(v2, v5) @signature `Ljava/lang/Class;.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L4eba08.  v2:= temp @kind object;
  #L4eba0a.  call temp:= `getLong`(v2, v4) @signature `Ljava/lang/reflect/Field;.getLong:(Ljava/lang/Object;)J` @kind virtual;
  #L4eba10.  v5:= temp @kind wide;
  #L4eba12.  `@@j0.a.a` @type ^`long` := v5 @kind wide;
  #L4eba16.  v2:= constclass @type ^`android.os.Trace` @kind object;
  #L4eba1a.  v5:= new `java.lang.Class`[v3];
  #L4eba1e.  v6:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L4eba22.  v5[v1]:= v6 @kind object;
  #L4eba26.  call temp:= `getMethod`(v2, v0, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L4eba2c.  v2:= temp @kind object;
  #L4eba2e.  `@@j0.a.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L4eba32.  v2:= `@@j0.a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L4eba36.  v3:= new `java.lang.Object`[v3];
  #L4eba3a.  v5:= `@@j0.a.a` @type ^`long` @kind wide;
  #L4eba3e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4eba44.  v5:= temp @kind object;
  #L4eba46.  v3[v1]:= v5 @kind object;
  #L4eba4a.  call temp:= `invoke`(v2, v4, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4eba50.  v2:= temp @kind object;
  #L4eba52.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L4eba56.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4eba5c.  v0:= temp;
  #L4eba5e.  return v0;
  #L4eba60.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L4eba62.  call `c`(v0, v2) @signature `Lj0/a;.c:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind static;
  #L4eba68.  return v1;
  catch `java.lang.Exception` @[L4eb9ee..L4eba5e] goto L4eba60;
}
