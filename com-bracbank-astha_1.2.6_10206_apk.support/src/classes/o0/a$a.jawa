record `o0.a$a` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `o0.a` `o0.a$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`o0.a$a` v0 @kind this, `o0.a` v1 @kind object) @signature `Lo0/a$a;.<init>:(Lo0/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4edc38.  v0.`o0.a$a.a` @type ^`o0.a` := v1 @kind object;
  #L4edc3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4edc42.  return @kind void;
}
procedure `java.lang.Void` `a`(`o0.a$a` v4 @kind this) @signature `Lo0/a$a;.a:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4edbc4.  v0:= v4.`o0.a$a.a` @type ^`o0.a` @kind object;
  #L4edbc8.  @monitorenter v0
  #L4edbca.  v1:= v4.`o0.a$a.a` @type ^`o0.a` @kind object;
  #L4edbce.  call temp:= `g`(v1) @signature `Lo0/a;.g:(Lo0/a;)Ljava/io/Writer;` @kind static;
  #L4edbd4.  v1:= temp @kind object;
  #L4edbd6.  v2:= 0I;
  #L4edbd8.  if v1 != 0 then goto L4edbe0;
  #L4edbdc.  @monitorexit v0
  #L4edbde.  return v2 @kind object;
  #L4edbe0.  v1:= v4.`o0.a$a.a` @type ^`o0.a` @kind object;
  #L4edbe4.  call `s`(v1) @signature `Lo0/a;.s:(Lo0/a;)V` @kind static;
  #L4edbea.  v1:= v4.`o0.a$a.a` @type ^`o0.a` @kind object;
  #L4edbee.  call temp:= `T`(v1) @signature `Lo0/a;.T:(Lo0/a;)Z` @kind static;
  #L4edbf4.  v1:= temp;
  #L4edbf6.  if v1 == 0 then goto L4edc10;
  #L4edbfa.  v1:= v4.`o0.a$a.a` @type ^`o0.a` @kind object;
  #L4edbfe.  call `U`(v1) @signature `Lo0/a;.U:(Lo0/a;)V` @kind static;
  #L4edc04.  v1:= v4.`o0.a$a.a` @type ^`o0.a` @kind object;
  #L4edc08.  v3:= 0I;
  #L4edc0a.  call temp:= `V`(v1, v3) @signature `Lo0/a;.V:(Lo0/a;I)I` @kind static;
  #L4edc10.  @monitorexit v0
  #L4edc12.  return v2 @kind object;
  #L4edc14.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4edc16.  @monitorexit v0
  #L4edc18.  throw v1;
  catch `java.lang.Throwable` @[L4edbca..L4edc18] goto L4edc14;
}
procedure `java.lang.Object` `call`(`o0.a$a` v1 @kind this) @signature `Lo0/a$a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4edba8.  call temp:= `a`(v1) @signature `Lo0/a$a;.a:()Ljava/lang/Void;` @kind virtual;
  #L4edbae.  v0:= temp @kind object;
  #L4edbb0.  return v0 @kind object;
}
